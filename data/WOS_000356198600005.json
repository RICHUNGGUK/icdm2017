{"auto_keywords": [{"score": 0.047432268822378096, "phrase": "structural_regularities"}, {"score": 0.00481495049065317, "phrase": "immediate_feedback"}, {"score": 0.004716520738331953, "phrase": "structural_source-code_regularities"}, {"score": 0.004596295252559861, "phrase": "design_knowledge"}, {"score": 0.004479120557712926, "phrase": "api_usage_protocols"}, {"score": 0.0041666157975446564, "phrase": "source_code"}, {"score": 0.0040186038781533946, "phrase": "vital_information"}, {"score": 0.003267925215811654, "phrase": "'usage_contracts"}, {"score": 0.002977419551510206, "phrase": "common_regularities"}, {"score": 0.0028567126120064546, "phrase": "existing_approaches"}, {"score": 0.002755104031926742, "phrase": "code_fragments"}, {"score": 0.0025361866386341796, "phrase": "open-source_project"}, {"score": 0.0023958326775913165, "phrase": "industrial_case_study"}, {"score": 0.0021714122348552747, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software development tool support", " Structural regularities", " Source code analysis", " Internal domain-specific language", " IDE integration"], "paper_abstract": "Developers often encode design knowledge through structural regularities such as API usage protocols, coding idioms and naming conventions. As these regularities express how the source code should be structured, they provide vital information for developers using or extending that code. Adherence to such regularities tends to deteriorate over time because they are not documented and checked explicitly. This paper introduces uContracts, an internal DSL to codify and verify such regularities as 'usage contracts'. Our DSL aims at covering most common usage regularities, while still providing a means to express less common ones. Common regularities are identified based on regularities supported by existing approaches to detect bugs or suggest missing code fragments, techniques that mine for structural regularities, as well as on the analysis of an open-source project. We validate our DSL by documenting the structural regularities of an industrial case study, and analyse how useful the information provided by checking these regularities is for the developers of that case study. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Usage contracts: Offering immediate feedback on violations of structural source-code regularities", "paper_id": "WOS:000356198600005"}