{"auto_keywords": [{"score": 0.045422024392825354, "phrase": "xml"}, {"score": 0.00481495049065317, "phrase": "xml_view"}, {"score": 0.004437613070853689, "phrase": "practical_importance"}, {"score": 0.004174064076143015, "phrase": "xml_database-backed_web_applications"}, {"score": 0.003769006950727621, "phrase": "xml_queries"}, {"score": 0.0036553070575015344, "phrase": "static_xml"}, {"score": 0.0033685408148574846, "phrase": "incremental_refresh"}, {"score": 0.0031360786664165093, "phrase": "relevant_updates"}, {"score": 0.0030414140732789186, "phrase": "xml_source"}, {"score": 0.002453934333239467, "phrase": "main_contribution"}, {"score": 0.002284444272376043, "phrase": "web_application_environment"}], "paper_keywords": [""], "paper_abstract": "Despite the practical importance of XML materialized views for XML database-backed Web applications and much attention to the issues for cache-answerability of XML queries with the static XML materialized views, the issues related to incremental refresh of XML materialized views against the relevant updates of the XML source have received little and limited attention. In this paper, we introduce our on-going project on XML view materialization on the Web. The main contribution of our solution is its scalability in the Web application environment. An overview of our design, the current status of implementation, and preliminary performance results are presented.", "paper_title": "Scalable solution to XML view materialization on the Web", "paper_id": "WOS:000239454500028"}