{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "workflow_nets"}, {"score": 0.04677854488900562, "phrase": "petri_nets"}, {"score": 0.004636606483283006, "phrase": "bpmn"}, {"score": 0.004597861947580946, "phrase": "flow_charts"}, {"score": 0.004559500648356978, "phrase": "uml"}, {"score": 0.004317450843594688, "phrase": "business_processes"}, {"score": 0.0042455945330942746, "phrase": "process-aware_information_systems"}, {"score": 0.00396988421137599, "phrase": "even_process_engineers"}, {"score": 0.003936698872193083, "phrase": "system_analysts"}, {"score": 0.00377487157059352, "phrase": "process_model"}, {"score": 0.003743310268453678, "phrase": "recent_empirical_studies"}, {"score": 0.003665552439863732, "phrase": "numerous_errors"}, {"score": 0.003619672388007568, "phrase": "complex_business_processes"}, {"score": 0.0034708317974593136, "phrase": "sap_reference_model"}, {"score": 0.0034418037573506837, "phrase": "design_flaws"}, {"score": 0.003398714712611042, "phrase": "potential_deadlocks"}, {"score": 0.002813307389456184, "phrase": "process_analysis_tool"}, {"score": 0.002801511419720919, "phrase": "prom."}, {"score": 0.0022326306658609365, "phrase": "different_metrics"}, {"score": 0.0021049977753042253, "phrase": "existing_metrics"}], "paper_keywords": ["Metrics", " Petri nets", " Understandability"], "paper_abstract": "Process modeling languages such as EPCs, BPMN, flow charts, UML activity diagrams, Petri nets, etc., are used to model business processes and to configure process-aware information systems. It is known that users have problems understanding these diagrams. In fact, even process engineers and system analysts have difficulties in grasping the dynamics implied by a process model. Recent empirical studies show that people make numerous errors when modeling complex business processes, e.g., about 20% of the EPCs in the SAP reference model have design flaws resulting in potential deadlocks, livelocks, etc. It seems obvious that the complexity of the model contributes to design errors and a lack of understanding. It is not easy to measure complexity, however. This paper presents three complexity metrics that have been implemented in the process analysis tool ProM. The metrics are defined for a subclass of Petri nets named Workflow nets, but the results can easily be applied to other languages. To demonstrate the applicability of these metrics, we have applied our approach and tool to 262 relatively complex Protos models made in the context of various student projects. This allows us to validate and compare the different metrics. It turns out that our new metric focusing on the structuredness outperforms existing metrics. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Complexity metrics for Workflow nets", "paper_id": "WOS:000262891500006"}