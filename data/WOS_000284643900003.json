{"auto_keywords": [{"score": 0.03236064162810805, "phrase": "data_dependences"}, {"score": 0.00481495049065317, "phrase": "value_predictors"}, {"score": 0.004784331242964228, "phrase": "state_and_non-state_preserving_techniques"}, {"score": 0.004546252387071551, "phrase": "new_microprocessors"}, {"score": 0.004403480614319231, "phrase": "previous_generation"}, {"score": 0.004278807087784626, "phrase": "energy_consumption"}, {"score": 0.004251582719171643, "phrase": "thermal_dissipation"}, {"score": 0.004184274042752558, "phrase": "new_challenge"}, {"score": 0.004144399274022276, "phrase": "computer_engineers"}, {"score": 0.004104902932459142, "phrase": "static_power_consumption"}, {"score": 0.004065781456356258, "phrase": "process_technology"}, {"score": 0.004027031316965272, "phrase": "deep_submicron"}, {"score": 0.0039886490182021155, "phrase": "static_power_component"}, {"score": 0.003950631096355195, "phrase": "serious_problem"}, {"score": 0.0038633204164544802, "phrase": "chip_array_structures"}, {"score": 0.003802135020791801, "phrase": "prediction_tables"}, {"score": 0.0036243109044803955, "phrase": "leakage_power"}, {"score": 0.0030794433253250476, "phrase": "reasonable_time"}, {"score": 0.003011328068286321, "phrase": "key_factors"}, {"score": 0.0029635959701543313, "phrase": "modern_microprocessors"}, {"score": 0.0029447150254434842, "phrase": "value_prediction"}, {"score": 0.002861224098631869, "phrase": "value_locality"}, {"score": 0.002591303221962211, "phrase": "potential_source"}, {"score": 0.002574788013427524, "phrase": "power_consumption"}, {"score": 0.0025502118431246276, "phrase": "thermal_hot_spot"}, {"score": 0.002485813299166851, "phrase": "leakage-efficient_design"}, {"score": 0.0024699687468983686, "phrase": "traditional_value_predictors"}, {"score": 0.002415302363802928, "phrase": "dfcm"}, {"score": 0.002331825625142384, "phrase": "long_periods"}, {"score": 0.0022013916728990564, "phrase": "unused_entries"}, {"score": 0.002173409712988074, "phrase": "substantial_leakage_energy_reductions"}, {"score": 0.0021049977753042253, "phrase": "predictor_type"}], "paper_keywords": ["Power consumption", " Value prediction", " Low power", " Leakage", " Static power"], "paper_abstract": "In the last decade computer engineers have faced changes in the way microprocessors are designed. New microprocessors do not only need to be faster than the previous generation, but also be feasible in terms of energy consumption and thermal dissipation. Recently, a new challenge appeared for computer engineers, the static power consumption. As process technology advances toward deep submicron, the static power component becomes a serious problem, especially for large on-chip array structures such as caches or prediction tables, and it must be taken into consideration. We can fight to reduce leakage power in two different ways: we can switch off the structure, reducing its leakage to zero but losing its contents (non-state preserving techniques), or we can lower its voltage (state preserving techniques), obtaining less savings but being able to restore the state of the structure in a reasonable time. Data dependences are one of the key factors that limit performance in modern microprocessors. Value Prediction (VP) is a paradigm that exploits value locality in order to predict the output of an instruction, overcoming data dependences. The more accurate the predictor, the more performance is obtained, at the expense of becoming a potential source of power consumption and a thermal hot spot. In this work we propose a leakage-efficient design of traditional Value Predictors (Stride, FCM, and DFCM) based on the fact that many VP entries remain unused during long periods of time before being eventually evicted. By applying both state and non-state preserving techniques, the unused entries are disabled obtaining substantial leakage energy reductions (50-80% depending on the configuration and predictor type).", "paper_title": "Leakage-efficient design of value predictors through state and non-state preserving techniques", "paper_id": "WOS:000284643900003"}