{"auto_keywords": [{"score": 0.048970045726729895, "phrase": "cabac"}, {"score": 0.0096457898993798, "phrase": "encoding_rate"}, {"score": 0.00481495049065317, "phrase": "high-throughput_cabac_encoder"}, {"score": 0.0047588556219929756, "phrase": "context-based_adaptive_binary_arithmetic_coding"}, {"score": 0.00454090611248773, "phrase": "algorithmic_improvements"}, {"score": 0.004332894955218135, "phrase": "compression_ratio"}, {"score": 0.004282391936827106, "phrase": "video_sequences"}, {"score": 0.0041586840496756474, "phrase": "context-based_adaptive_variable_length_coding"}, {"score": 0.0039449104968131655, "phrase": "better_compression_ratio"}, {"score": 0.0038309141193444015, "phrase": "higher_computation_complexity"}, {"score": 0.003698442219929622, "phrase": "inherent_data_dependency"}, {"score": 0.0036126731589251906, "phrase": "syntax_elements"}, {"score": 0.003487721546598799, "phrase": "dramatically_increased_complexity"}, {"score": 0.0033868916699805224, "phrase": "binarized_syntax_elements"}, {"score": 0.0031565959573536194, "phrase": "binarized_bins"}, {"score": 0.003119760592916715, "phrase": "different_video_sequences"}, {"score": 0.0029075757820516634, "phrase": "limited_hardware_overhead"}, {"score": 0.002615977783510631, "phrase": "proposed_context_memory_management_scheme"}, {"score": 0.0025254115243261875, "phrase": "experimental_results"}, {"score": 0.002353554841514325, "phrase": "limited_increase"}, {"score": 0.002326068563512387, "phrase": "hardware_requirement"}, {"score": 0.002272053079580848, "phrase": "related_works"}, {"score": 0.002206290313627494, "phrase": "multi-symbol_encoding"}, {"score": 0.002129877319760485, "phrase": "nearly_twice_their_throughput_rates"}], "paper_keywords": ["H.264", " CABAC", " entropy encoder", " high-throughput"], "paper_abstract": "Context-based Adaptive Binary Arithmetic Coding (CABAC) is one of the algorithmic improvements that the H.264/AVC standard provides to enhance the compression ratio of video sequences. Compared with the context-based adaptive variable length coding (CAVLC), CABAC can obtain a better compression ratio at the price of higher computation complexity. In particular, the inherent data dependency and various types of syntax elements in CABAC results in a dramatically increased complexity if two bins obtained from binarized syntax elements are handled at a time. By analyzing the distribution of binarized bins in different video sequences, this work shows how to effectively improve the encoding rate with limited hardware overhead by allowing only a certain type of syntax element to be processed two bins at a time. Together with the proposed context memory management scheme and range renovation method, experimental results reveal that an encoding rate of up to 410 M-bin/s can be obtained with a limited increase in hardware requirement. Compared with related works that do not support multi-symbol encoding, our development can achieve nearly twice their throughput rates with less than 25 % hardware overhead.", "paper_title": "Design of a High-Throughput CABAC Encoder", "paper_id": "WOS:000265703000012"}