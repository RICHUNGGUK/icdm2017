{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "random_forest_construction_with_robust"}, {"score": 0.00479690335683215, "phrase": "semisupervised_node_splitting"}, {"score": 0.004761010795871555, "phrase": "random_forest"}, {"score": 0.004416465443332974, "phrase": "labeled_training_data"}, {"score": 0.004205940624913343, "phrase": "small_size"}, {"score": 0.004174451361776433, "phrase": "labeled_data"}, {"score": 0.004096751549280256, "phrase": "performance_bottleneck"}, {"score": 0.004020492138367616, "phrase": "node_splitting_procedures"}, {"score": 0.00396050388346298, "phrase": "existing_solutions"}, {"score": 0.0038721890530859578, "phrase": "feature_space"}, {"score": 0.0038144050983900286, "phrase": "insufficient_training_data"}, {"score": 0.003757480190200645, "phrase": "robust_node_splitting"}, {"score": 0.003729335910488339, "phrase": "insufficient_data"}, {"score": 0.003446208270665051, "phrase": "unlabeled_data"}, {"score": 0.003369322866499541, "phrase": "accurate_quality_measure"}, {"score": 0.003344076203780408, "phrase": "node_splitting"}, {"score": 0.0032571885279065126, "phrase": "kernel-based_density_estimation"}, {"score": 0.0032085525502105836, "phrase": "multiclass_version"}, {"score": 0.0031606404966938568, "phrase": "integrated_squared_error_criterion"}, {"score": 0.003078504229140364, "phrase": "optimal_bandwidth"}, {"score": 0.0029095936591723645, "phrase": "data_points"}, {"score": 0.0028769371032728733, "phrase": "original_high-dimensional_feature_space"}, {"score": 0.0028446460307503343, "phrase": "low-dimensional_subspace"}, {"score": 0.0027916287357898544, "phrase": "unified_optimization_framework"}, {"score": 0.002729307099580315, "phrase": "coupled_pair"}, {"score": 0.002447101794397243, "phrase": "bad_initialization"}, {"score": 0.0024287485834314027, "phrase": "local_maxima"}, {"score": 0.002392453087295389, "phrase": "conventional_margin_maximization-based_semisupervised_methods"}, {"score": 0.0023214774334744713, "phrase": "proposed_algorithm"}, {"score": 0.0022022878843247257, "phrase": "typical_computer_vision_applications"}, {"score": 0.0021693692831601745, "phrase": "object_categorization"}, {"score": 0.0021530945641993152, "phrase": "face_recognition"}, {"score": 0.002128910637262527, "phrase": "image_segmentation"}, {"score": 0.0021049977753042253, "phrase": "publicly_available_data_sets"}], "paper_keywords": ["Semi-supervised splitting", " random forest", " semi-supervised learning", " subspace learning", " node splitting"], "paper_abstract": "Random forest (RF) is a very important classifier with applications in various machine learning tasks, but its promising performance heavily relies on the size of labeled training data. In this paper, we investigate constructing of RFs with a small size of labeled data and find that the performance bottleneck is located in the node splitting procedures; hence, existing solutions fail to properly partition the feature space if there are insufficient training data. To achieve robust node splitting with insufficient data, we present semisupervised splitting to overcome this limitation by splitting nodes with the guidance of both labeled and abundant unlabeled data. In particular, an accurate quality measure of node splitting is obtained by carrying out the kernel-based density estimation, whereby a multiclass version of asymptotic mean integrated squared error criterion is proposed to adaptively select the optimal bandwidth of the kernel. To avoid the curse of dimensionality, we project the data points from the original high-dimensional feature space onto a low-dimensional subspace before estimation. A unified optimization framework is proposed to select a coupled pair of subspace and separating hyperplane such that the smoothness of the subspace and the quality of the splitting are guaranteed simultaneously. Our algorithm efficiently avoids overfitting caused by bad initialization and local maxima when compared with conventional margin maximization-based semisupervised methods. We demonstrate the effectiveness of the proposed algorithm by comparing it with state-of-the-art supervised and semisupervised algorithms for typical computer vision applications, such as object categorization, face recognition, and image segmentation, on publicly available data sets.", "paper_title": "Random Forest Construction With Robust Semisupervised Node Splitting", "paper_id": "WOS:000347002000005"}