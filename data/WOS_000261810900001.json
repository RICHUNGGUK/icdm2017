{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "key_classes"}, {"score": 0.015230622387979051, "phrase": "software_engineers"}, {"score": 0.00872135179298876, "phrase": "case_studies"}, {"score": 0.00474946741204285, "phrase": "software_system"}, {"score": 0.004706305193222972, "phrase": "webmining_techniques"}, {"score": 0.0042178318724732005, "phrase": "significant_insight"}, {"score": 0.004160435626849478, "phrase": "inner_workings"}, {"score": 0.004103817210338686, "phrase": "software_project"}, {"score": 0.0034027387694902287, "phrase": "new_software_project"}, {"score": 0.003063123420705719, "phrase": "controlling_classes"}, {"score": 0.002993887707344862, "phrase": "detection_approach"}, {"score": 0.002926212333939311, "phrase": "dynamic_coupling"}, {"score": 0.0025047659706737215, "phrase": "coupling_metrics"}, {"score": 0.0022962183207691188, "phrase": "original_maintainers"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["program comprehension", " dynamic analysis", " webmining", " coupling"], "paper_abstract": "Software engineers new to a project are often stuck sorting through hundreds of classes in order to find those few classes that offer a significant insight into the inner workings of the software project. To help stimulate this process, we propose a technique that can identify the most important classes in a system or the key classes of that system. Software engineers can use these classes to focus their understanding efforts when starting to work on a new software project. Those key classes are typically characterized with having a lot of 'control' within the application. In order to find these controlling classes, we present a detection approach that is based on dynamic coupling and webmining. We demonstrate the potential of our technique using two open-source software systems that have a rich documentation set. During the case studies we use dynamically gathered coupling information that vary between a number of coupling metrics. The case studies show that we are able to retrieve 90% of the classes deemed important by the original maintainers of the systems, while maintaining a level of precision of around 50%. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Automatic identification of key classes in a software system using webmining techniques", "paper_id": "WOS:000261810900001"}