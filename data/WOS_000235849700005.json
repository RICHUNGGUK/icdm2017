{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "aho_corasick_automaton"}, {"score": 0.015112558962221922, "phrase": "integer_alphabets"}, {"score": 0.004720043307726269, "phrase": "linear_time"}, {"score": 0.004402295697276237, "phrase": "new_simple_algorithm"}, {"score": 0.003829290275367182, "phrase": "total_length_n"}, {"score": 0.0032975819773787985, "phrase": "size_m"}, {"score": 0.0032004205378150354, "phrase": "alphabet_sigma"}, {"score": 0.0027834145465170292, "phrase": "k_occurrences"}, {"score": 0.0022799458141165587, "phrase": "suffix_trees"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["design of algorithms", " string matching", " suffix tree", " suffix array"], "paper_abstract": "We present a new simple algorithm that constructs an Aho Corasick automaton for a set of patterns, P, of total length n, in O(n) time and space for integer alphabets. Processing a text of size m over an alphabet Sigma with the automaton costs O(m log |Sigma| + k), where there are k occurrences of patterns in the text. A new, efficient implementation of nodes in the Aho Corasick automaton is introduced, which works for suffix trees as well. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Construction of Aho Corasick automaton in linear time for integer alphabets", "paper_id": "WOS:000235849700005"}