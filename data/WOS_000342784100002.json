{"auto_keywords": [{"score": 0.029765824610901173, "phrase": "abstract_tasks"}, {"score": 0.00481495049065317, "phrase": "task_abstraction"}, {"score": 0.004776669953449352, "phrase": "task_workflow_patterns"}, {"score": 0.0047386923107107645, "phrase": "file_recommendation"}, {"score": 0.004701015188740582, "phrase": "file-access_log"}, {"score": 0.004571478018964363, "phrase": "file_systems"}, {"score": 0.004445494322321316, "phrase": "office_workers"}, {"score": 0.004087910779160781, "phrase": "new_method"}, {"score": 0.003943569631183138, "phrase": "existing_technologies"}, {"score": 0.003850173884725567, "phrase": "collaborative_filtering"}, {"score": 0.003268333444704392, "phrase": "similar_or_differently_ordered_elements"}, {"score": 0.0032164910932827168, "phrase": "strict_matching"}, {"score": 0.0031654684543975077, "phrase": "access_sequences"}, {"score": 0.002922207118572208, "phrase": "abstract_files"}, {"score": 0.00287583918696114, "phrase": "similar_files"}, {"score": 0.0028302049070944944, "phrase": "similar_purpose"}, {"score": 0.0027631038845413393, "phrase": "similar_tasks"}, {"score": 0.002730150696072947, "phrase": "frequent_abstract_workflows"}, {"score": 0.0026975894491357176, "phrase": "similar_workflows"}, {"score": 0.002581477142020187, "phrase": "real_file-access_logs"}, {"score": 0.0025001755089445092, "phrase": "workflow_patterns"}, {"score": 0.0024802523752944536, "phrase": "longer_sequences"}, {"score": 0.0024604876113911173, "phrase": "higher_support-count_values"}, {"score": 0.0023079225317714815, "phrase": "recommendation_results"}, {"score": 0.0021049977753042253, "phrase": "abstract_workflows"}], "paper_keywords": ["file recommendation", " file abstraction", " abstract task", " abstract workflow", " log analysis"], "paper_abstract": "The numbers of files in file systems have increased dramatically in recent years. Office workers spend much time and effort searching for the documents required for their jobs. To reduce these costs, we propose a new method for recommending files and operations on them. Existing technologies for recommendation, such as collaborative filtering, suffer from two problems. First, they can only work with documents that have been accessed in the past, so that they cannot recommend when only newly generated documents are inputted. Second, they cannot easily handle sequences involving similar or differently ordered elements because of the strict matching used in the access sequences. To solve these problems. such minor variations should be ignored. In our proposed method, we introduce the concepts of abstract files as groups of similar files used for a similar purpose, abstract tasks as groups of similar tasks, and frequent abstract workflows grouped from similar workflows, which are sequences of abstract tasks. In experiments using real file-access logs, we confirmed that our proposed method could extract workflow patterns with longer sequences and higher support-count values, which are more suitable as recommendations. In addition, the F-measure for the recommendation results was improved significantly, from 0.301 to 0.598, compared with a method that did not use the concepts of abstract tasks and abstract workflows.", "paper_title": "File and Task Abstraction in Task Workflow Patterns for File Recommendation Using File-Access Log", "paper_id": "WOS:000342784100002"}