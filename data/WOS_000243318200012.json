{"auto_keywords": [{"score": 0.048297791562778726, "phrase": "bob"}, {"score": 0.004706977267562421, "phrase": "alice"}, {"score": 0.0038062581748678245, "phrase": "client_alice"}, {"score": 0.003720600007408015, "phrase": "computational_resources"}, {"score": 0.0036093693971289754, "phrase": "mistrusted_server"}, {"score": 0.0033967510986397946, "phrase": "inherently_mobile_piece"}, {"score": 0.002564763827975352, "phrase": "efficient_procedure"}, {"score": 0.0025069746344846375, "phrase": "random_input-output_pairs"}, {"score": 0.0023952639120005193, "phrase": "cheat-sensitive_security"}, {"score": 0.0023059748754006527, "phrase": "quantum_theory"}, {"score": 0.0022200068884960836, "phrase": "security_analysis"}, {"score": 0.0021049977753042253, "phrase": "individual_attacks"}], "paper_keywords": ["secure circuit evaluation", " secure two-party computation", " information hiding", " information gain versus disturbance", " quantum cryptography"], "paper_abstract": "We investigate the possibility of having someone carry out the work of executing a function for you, but without letting him learn anything about your input. Say Alice wants Bob to compute some known function f upon her input x, but wants to prevent Bob from learning anything about x. The situation arises for instance if client Alice has limited computational resources in comparison with mistrusted server Bob, or if x is an inherently mobile piece of data. Could there be a protocol whereby Bob is forced to compute f (x) blindly, i.e. without observing x? We provide such a blind computation protocol for the class of functions which admit an efficient procedure to generate random input-output pairs, e.g. factorization. The cheat-sensitive security achieved relies only upon quantum theory being true. The security analysis carried out assumes the eavesdropper performs individual attacks.", "paper_title": "Blind quantum computation", "paper_id": "WOS:000243318200012"}