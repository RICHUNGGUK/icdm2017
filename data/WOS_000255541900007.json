{"auto_keywords": [{"score": 0.04773234497534146, "phrase": "vbsme"}, {"score": 0.00481495049065317, "phrase": "variable_block_size_motion_estimation"}, {"score": 0.004706305193222972, "phrase": "vliw-simd_dsp."}, {"score": 0.004256533389293113, "phrase": "sad_reuse_method"}, {"score": 0.004179480763003705, "phrase": "regular_structure"}, {"score": 0.0040111533608228195, "phrase": "redundant_sum"}, {"score": 0.003974673997871831, "phrase": "absolute_difference"}, {"score": 0.0037971749182744334, "phrase": "instruction_level_parallelism"}, {"score": 0.0037626728268191955, "phrase": "ilp"}, {"score": 0.003711409222544974, "phrase": "data_level_parallelism"}, {"score": 0.003561865840737996, "phrase": "fast_mode_decision_algorithm"}, {"score": 0.0032955848190195343, "phrase": "rate_distortion_optimization"}, {"score": 0.0032064196784562017, "phrase": "developed_fast_mode_decision"}, {"score": 0.0031339552246625463, "phrase": "motion_vectors"}, {"score": 0.0029396242707327986, "phrase": "software_pipelining"}, {"score": 0.0029128614098881253, "phrase": "packed-data_processing"}, {"score": 0.0028340217672278975, "phrase": "memory_access"}, {"score": 0.0028210902750714075, "phrase": "overhead_reduction_schemes"}, {"score": 0.002782647772219627, "phrase": "multi-block_processing"}, {"score": 0.00274472767672686, "phrase": "inter-procedural_scheduling"}, {"score": 0.002682669289913153, "phrase": "software_optimization"}, {"score": 0.0025981315738078793, "phrase": "'write_buffer"}, {"score": 0.002539379289856756, "phrase": "pixel_me"}, {"score": 0.002403724423251419, "phrase": "arithmetic_operations"}, {"score": 0.002360132221690264, "phrase": "stall_cycles"}, {"score": 0.0023067494372458427, "phrase": "implemented_variable_block_size"}, {"score": 0.002163600705898299, "phrase": "qcif_and_cif_size_video_sequences"}], "paper_keywords": ["variable block size motion estimation", " H.264/AVC encoder", " VLIW (very long instruction word)", " SIMD (single instruction multiple data)"], "paper_abstract": "We implemented the H.264/AVC variable block size motion estimation (VBSME) using a very long instruction word (VLIW)-single instruction multiple data (SIMD) digital signal processor (DSP). The SAD_Reuse method which has a regular structure is chosen for VBSME not only to remove redundant sum of absolute difference (SAD) operations but also to utilize the instruction level parallelism (ILP) and data level parallelism (DLP) of the architecture. A fast mode decision algorithm is developed to reduce the number of 'compare and update' operations and simplify the rate distortion optimization (RDO). The developed fast mode decision uses the difference of motion vectors and the maximum a posteriori (MAP) estimation of the rate-distortion costs. Several advanced software techniques that include software pipelining and packed-data processing are employed. Especially, memory access overhead reduction schemes including the multi-block processing and the inter-procedural scheduling are used for the software optimization. In order to reduce the 'write buffer full' in the quarter pixel ME, a 4 bit quantization scheme is developed, which increases the number of arithmetic operations but decreases the stall cycles very much. The implemented variable block size ME for H.264/AVC requires an average of 9 M and 78 Mcycles per frame for QCIF and CIF size video sequences, respectively, in the TMS320C64x DSP architecture.", "paper_title": "Algorithm and software optimization of variable block size motion estimation for H.264/AVC on a VLIW-SIMD DSP", "paper_id": "WOS:000255541900007"}