{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "spotify_backend"}, {"score": 0.025639752815112233, "phrase": "spotify_storage_system"}, {"score": 0.004529093447865156, "phrase": "distributed_key-value_storage_system"}, {"score": 0.004312622975366676, "phrase": "spotify"}, {"score": 0.004234129588974058, "phrase": "on-demand_music_streaming_service"}, {"score": 0.004157058883925715, "phrase": "low-latency_access"}, {"score": 0.0037921662574137535, "phrase": "simplified_model"}, {"score": 0.0037231102027070724, "phrase": "spotify_storage_architecture"}, {"score": 0.003438058620195309, "phrase": "analytical_model"}, {"score": 0.0033139366449568565, "phrase": "response_time"}, {"score": 0.0031747618267940155, "phrase": "spotify_service"}, {"score": 0.002895841197640062, "phrase": "operational_spotify_infrastructure"}, {"score": 0.00257735013358606, "phrase": "normal_load_patterns"}, {"score": 0.0023798115577749225, "phrase": "different_object_allocation_policies"}, {"score": 0.002210903392596343, "phrase": "model_predictions"}, {"score": 0.0021049977753042253, "phrase": "object_allocation_policy"}], "paper_keywords": ["Key-value store", " Distributed object store", " Object allocation policy", " Performance modeling", " Performance measurements", " Response times"], "paper_abstract": "We model and evaluate the performance of a distributed key-value storage system that is part of the Spotify backend. Spotify is an on-demand music streaming service, offering low-latency access to a library of over 20 million tracks and serving over 20 million users currently. We first present a simplified model of the Spotify storage architecture, in order to make its analysis feasible. We then introduce an analytical model for the distribution of the response time, a key metric in the Spotify service. We parameterize and validate the model using measurements from two different testbed configurations and from the operational Spotify infrastructure. We find that the model is accurate-measurements are within 11 % of predictions-within the range of normal load patterns. In addition, we model the capacity of the Spotify storage system under different object allocation policies and find that measurements on our testbed are within 9 % of the model predictions. The model helps us justify the object allocation policy adopted for Spotify storage system.", "paper_title": "On the Performance of the Spotify Backend", "paper_id": "WOS:000350554700009"}