{"auto_keywords": [{"score": 0.04769632635828975, "phrase": "codel"}, {"score": 0.011202851765060891, "phrase": "power_savings"}, {"score": 0.008013978864707881, "phrase": "synopsys"}, {"score": 0.00481495049065317, "phrase": "highly_efficient_automated_clock_gating_platform"}, {"score": 0.004717723626157272, "phrase": "power_efficient_hardware_architectures"}, {"score": 0.004506048850130758, "phrase": "hardware_description"}, {"score": 0.004437613070853689, "phrase": "algorithm_level"}, {"score": 0.004303830426772906, "phrase": "design_time"}, {"score": 0.004027586827290042, "phrase": "behavioral_level"}, {"score": 0.003966388754366831, "phrase": "dynamic_power_dissipation"}, {"score": 0.003906116922372891, "phrase": "resulting_architecture"}, {"score": 0.0037307208089736835, "phrase": "first_hardware_design_environment"}, {"score": 0.0036553070575015344, "phrase": "algorithmic_description"}, {"score": 0.003509006038574667, "phrase": "power_aware_design"}, {"score": 0.0033173234105492895, "phrase": "estimation_framework"}, {"score": 0.0031042018721479385, "phrase": "statistical_power_analysis"}, {"score": 0.0030726480920918097, "phrase": "synopsys_tools"}, {"score": 0.002949598537993663, "phrase": "codel_implementation"}, {"score": 0.002760050039300086, "phrase": "dsp"}, {"score": 0.002731971103291716, "phrase": "digital_signal_processing"}, {"score": 0.002676692093594358, "phrase": "discrete_cosine_transform"}, {"score": 0.0026359661683151006, "phrase": "integer_transform"}, {"score": 0.00240426758768164, "phrase": "simulation_based_power_analysis"}, {"score": 0.002367676766637248, "phrase": "designed_circuits"}, {"score": 0.002331641523873951, "phrase": "codel's_clock"}, {"score": 0.002272794656458419, "phrase": "synopsys'_automated_clock"}, {"score": 0.0022041312401435346, "phrase": "power_dissipation"}], "paper_keywords": [""], "paper_abstract": "We present a highly efficient automated clock gating platform for rapidly developing power efficient hardware architectures. Our language, called CoDeL, allows hardware description at the algorithm level, and thus dramatically reduces design time. We have extended CoDeL to automatically insert clock gating at the behavioral level to reduce dynamic power dissipation in the resulting architecture. This is, to our knowledge, the first hardware design environment that allows an algorithmic description of a component and yet produces a power aware design. To estimate the power savings, we have developed an estimation framework, which is shown to be consistent with the power savings obtained using statistical power analysis using Synopsys tools. To evaluate our platform we use the CoDeL implementation of a counter and various integer transforms used in the realm of DSP (Digital Signal Processing): discrete wavelet transform, discrete cosine transform and an integer transform used in the H.264 (MPEG4 Part 10) video compression standard. These designs are then clock gated using CoDeL and Synopsys. A simulation based power analysis on the designed circuits shows that CoDeL's clock gating performs better than Synopsys' automated clock gating. CoDeL reduces the power dissipation by 83% on average, while Synopsys gives 81% savings.", "paper_title": "Efficient automated clock gating using CoDeL", "paper_id": "WOS:000239423500010"}