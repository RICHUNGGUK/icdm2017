{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "linear_programming"}, {"score": 0.004765482708043842, "phrase": "image_segmentation"}, {"score": 0.004692227830462433, "phrase": "important_and_fundamental_task"}, {"score": 0.004253618550301311, "phrase": "color_image"}, {"score": 0.004209893377338457, "phrase": "multiple_regions"}, {"score": 0.004102528738941734, "phrase": "recently_proposed_semi-definite_programming"}, {"score": 0.003936389070602614, "phrase": "simpler_mathematical_formulation"}, {"score": 0.0033190180867511605, "phrase": "sharp_contrast"}, {"score": 0.003151736708029235, "phrase": "sdp_method"}, {"score": 0.0029928611380840757, "phrase": "polynomial_complexity"}, {"score": 0.0029467742734417255, "phrase": "corresponding_lp_solver"}, {"score": 0.0029164434911787187, "phrase": "sdp_solver"}, {"score": 0.0025892330566358503, "phrase": "color_images"}, {"score": 0.0025625729433234623, "phrase": "reasonable_sizes"}, {"score": 0.002471400498582011, "phrase": "existing_sdp_relaxation_algorithm"}, {"score": 0.0023834640793589414, "phrase": "toy-size_image"}, {"score": 0.0022168460543913787, "phrase": "hours_time"}, {"score": 0.0021601997088758957, "phrase": "larger_color_image"}], "paper_keywords": ["Interactive image segmentation", " Linear programming", " Object cutout"], "paper_abstract": "Image segmentation is an important and fundamental task for image and vision understanding. This paper describes a linear programming (LP) approach for segmenting a color image into multiple regions. Compared with the recently proposed semi-definite programming (SDP)-based approach, our approach has a simpler mathematical formulation, and a far lower computational complexity. In particular, to segment an image of M x N pixels into k classes, our method requires only O((M N k) (m) ) complexity-a sharp contrast to the complexity of O((M N k)(2n) ) if the SDP method is adopted, where m and n are the polynomial complexity of the corresponding LP solver and SDP solver, respectively (in general we have ma parts per thousand(a) n). Such a significant reduction in computation readily enables our algorithm to process color images of reasonable sizes. For example, while the existing SDP relaxation algorithm is only able to segment a toy-size image of, e.g., 10 x 10 to 30 x 30 pixels in hours time, our algorithm can process larger color image of, say, 100 x 100 to 500 x 500 image in much shorter time.", "paper_title": "Interactive color image segmentation with linear programming", "paper_id": "WOS:000277415700001"}