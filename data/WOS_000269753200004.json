{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "average_waiting_time"}, {"score": 0.015502273473651752, "phrase": "grid_computing_environment"}, {"score": 0.010632045638803557, "phrase": "multiple_nodes"}, {"score": 0.008377915484190448, "phrase": "proposed_method"}, {"score": 0.004594137808658537, "phrase": "great_many_users"}, {"score": 0.004261617028111862, "phrase": "grid_designer"}, {"score": 0.004182301599359094, "phrase": "frequently_accessed_database"}, {"score": 0.004066076430818046, "phrase": "load_balance_heuristic"}, {"score": 0.003897742942358768, "phrase": "identical_queries"}, {"score": 0.003125175084962886, "phrase": "poor_data"}, {"score": 0.002688532127821979, "phrase": "database_allocation"}, {"score": 0.0025892330566358503, "phrase": "main_idea"}, {"score": 0.002493592357827492, "phrase": "original_problem"}, {"score": 0.0024586427394152196, "phrase": "euclidean_space"}, {"score": 0.0023789822182914877, "phrase": "mapped_problem"}, {"score": 0.0023127544795063263, "phrase": "gradient-based_optimization_technique"}, {"score": 0.0021652891317252994, "phrase": "near-optimal_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Optimization", " Gradient", " Grid computing", " Data sharing", " Database allocation", " Average waiting time"], "paper_abstract": "In a grid computing environment, a great many users may access the same database simultaneously. To reduce the average waiting time for all users, a grid designer usually replicates the frequently accessed database among nodes based on the load balance heuristic. On the other hand, users may raise identical queries regarding an issue of interest, e.g., stock information, on a database and each of the queries will be directed to any node having a replica of that database. That is, the same answer will be determined by multiple nodes. Consequently, there exist two shortcomings of poor data sharing and duplicate calculations if the database is not replicated and allocated adequately. In this paper, we aim to minimize average waiting time and try to overcome the two shortcomings by performing database allocation over multiple nodes without any replication. The main idea behind the proposed method is to map the original problem to the Euclidean space R(n) and to solve the mapped problem in R(n) by a gradient-based optimization technique. The theoretical analyses ensure that the proposed method can converge linearly and achieve near-optimal results. (c) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A near-optimal database allocation for reducing the average waiting time in the grid computing environment", "paper_id": "WOS:000269753200004"}