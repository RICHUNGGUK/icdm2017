{"auto_keywords": [{"score": 0.04066301332698912, "phrase": "sopa"}, {"score": 0.006821940139067659, "phrase": "storage_systems"}, {"score": 0.00481495049065317, "phrase": "optimal_caching_policy_adaptively"}, {"score": 0.004643839937761046, "phrase": "storage_technology"}, {"score": 0.004533142516832776, "phrase": "new_caching_policies"}, {"score": 0.00406663414150229, "phrase": "matched_caching_policy"}, {"score": 0.004062564534659691, "phrase": "different_workloads"}, {"score": 0.00399367108161192, "phrase": "varying_workloads"}, {"score": 0.0036700484729006136, "phrase": "matched_policy"}, {"score": 0.00360417515510547, "phrase": "policy_switches"}, {"score": 0.0033929894721242367, "phrase": "caching_policy"}, {"score": 0.003252542052430782, "phrase": "online_policy_switching"}, {"score": 0.003213489259323921, "phrase": "policy_reconstruction"}, {"score": 0.00291743479583421, "phrase": "access_traces"}, {"score": 0.002830617996609902, "phrase": "decision-making_cost"}, {"score": 0.0027463775689957255, "phrase": "asynchronous_decision_making_process"}, {"score": 0.0026970382454914437, "phrase": "simulation_experiments"}, {"score": 0.0026326249204932733, "phrase": "single_caching_policy"}, {"score": 0.0024336917123957387, "phrase": "storage_system"}, {"score": 0.0023755529073496394, "phrase": "appropriate_policy"}, {"score": 0.002304824112812496, "phrase": "real-system_evaluation_results"}, {"score": 0.002222717552124615, "phrase": "average_response_time"}, {"score": 0.002130609962101344, "phrase": "lru"}, {"score": 0.0021050485442122295, "phrase": "arc"}], "paper_keywords": ["Algorithms", " Performance", " Design", " Caching policies", " policy adaptation", " policy switch"], "paper_abstract": "With the development of storage technology and applications, new caching policies are continuously being introduced. It becomes increasingly important for storage systems to be able to select the matched caching policy dynamically under varying workloads. This article proposes SOPA, a cache framework to adaptively select the matched policy and perform policy switches in storage systems. SOPA encapsulates the functions of a caching policy into a module, and enables online policy switching by policy reconstruction. SOPA then selects the policy matched with the workload dynamically by collecting and analyzing access traces. To reduce the decision-making cost, SOPA proposes an asynchronous decision making process. The simulation experiments show that no single caching policy performed well under all of the different workloads. With SOPA, a storage system could select the appropriate policy for different workloads. The real-system evaluation results show that SOPA reduced the average response time by up to 20.3% and 11.9% compared with LRU and ARC, respectively.", "paper_title": "SOPA: Selecting the Optimal Caching Policy Adaptively", "paper_id": "WOS:000208424300004"}