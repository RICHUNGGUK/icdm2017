{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "timing_model"}, {"score": 0.004637478829869904, "phrase": "consensus_algorithm"}, {"score": 0.004568326972997448, "phrase": "state_machine_replication"}, {"score": 0.004237666411136617, "phrase": "communication_links"}, {"score": 0.0038431888954930083, "phrase": "better_message_complexity"}, {"score": 0.003757480190200645, "phrase": "time_complexity"}, {"score": 0.003407549468745519, "phrase": "mathematical_analysis"}, {"score": 0.003021141590548526, "phrase": "new_and_efficient_leader-based_consensus_protocol"}, {"score": 0.0029095936591723645, "phrase": "stable-state_message_complexity"}, {"score": 0.0027811441123794427, "phrase": "n_processes"}, {"score": 0.002560162916190598, "phrase": "stable_times"}, {"score": 0.0022022878843247257, "phrase": "better_performance"}], "paper_keywords": ["synchrony assumptions", " Eventual Synchrony", " failure detectors", " consensus algorithms", " FT middleware"], "paper_abstract": "When employing a consensus algorithm for state machine replication, should one optimize for the case that all communication links are usually timely or for fewer timely links? Does optimizing a protocol for better message complexity hamper the time complexity? In this paper, we investigate these types of questions using mathematical analysis as well as experiments over PlanetLab (WAN) and a LAN. We present a new and efficient leader-based consensus protocol that has O(n) stable-state message complexity (in a system with n processes) and requires only O(n) links to be timely at stable times. We compare this protocol with several previously suggested protocols. Our results show that a protocol that requires fewer timely links can achieve better performance, even if it sends fewer messages.", "paper_title": "How to choose a timing model", "paper_id": "WOS:000258642200006"}