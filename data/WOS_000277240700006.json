{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "meta_models"}, {"score": 0.04255944800395906, "phrase": "typed_attributed_graph_morphisms"}, {"score": 0.03131725108108424, "phrase": "type_hierarchies"}, {"score": 0.004724980378009193, "phrase": "large_system_models"}, {"score": 0.004689462599037994, "phrase": "software_engineering"}, {"score": 0.004584495834677719, "phrase": "different_views"}, {"score": 0.004550029253278477, "phrase": "view-based_modelling"}, {"score": 0.004267287100135339, "phrase": "existing_formal_techniques"}, {"score": 0.0042351951710402425, "phrase": "view-based_visual_modelling"}, {"score": 0.004171730509424374, "phrase": "typed_attributed_graphs"}, {"score": 0.003927203683176278, "phrase": "meta_model"}, {"score": 0.0038683363637006902, "phrase": "fixed_type_graph"}, {"score": 0.00378167947598949, "phrase": "fixed_data_signature"}, {"score": 0.003627800727103479, "phrase": "view-oriented_modeling"}, {"score": 0.003546513036085932, "phrase": "complete_meta_model"}, {"score": 0.003440945901489461, "phrase": "partial_view"}, {"score": 0.0032147302611408835, "phrase": "generalized_typed_attributed_graph_morphisms"}, {"score": 0.0031905286720361145, "phrase": "short_gag-morphisms"}, {"score": 0.0031072444973406586, "phrase": "type_graph"}, {"score": 0.003083849594367653, "phrase": "data_signature"}, {"score": 0.002913895605074143, "phrase": "visual_languages"}, {"score": 0.002859345731792013, "phrase": "type_graphs"}, {"score": 0.002591681512611419, "phrase": "main_result"}, {"score": 0.002552781867125423, "phrase": "suitable_conditions"}, {"score": 0.002486103638234488, "phrase": "consistent_view_models"}, {"score": 0.00227040825063645, "phrase": "running_example"}, {"score": 0.0022278779300543548, "phrase": "visual_domain-specific_modelling_language"}, {"score": 0.002202742267484358, "phrase": "coarse-grained_it_components"}, {"score": 0.0021614767508781048, "phrase": "decentralized_it_infrastructures"}, {"score": 0.0021049977753042253, "phrase": "connection_properties"}], "paper_keywords": ["Meta-modelling", " Views of visual languages", " Generalized typed attributed graph morphisms", " View interaction", " View integration"], "paper_abstract": "The complexity of large system models in software engineering nowadays is mastered by using different views. View-based modelling aims at creating small, partial models, each one of them describing some aspect of the system. Existing formal techniques supporting view-based visual modelling are based on typed attributed graphs, where views are related by typed attributed graph morphisms. Such morphisms up to now require a meta model given by a fixed type graph, as well as a fixed data signature and domain. This is in general not adequate for view-oriented modeling where only parts of the complete meta model are known and necessary when modelling a partial view of the system. The aim of this paper is to extend the framework of typed attributed graph morphisms to generalized typed attributed graph morphisms, short GAG-morphisms, which involve changes of the type graph, data signature, and domain. This allows the modeller to formulate type hierarchies and views of visual languages defined by GAG-morphisms between type graphs, short GATG-morphisms. In this paper, we study the interaction and integration of views, and the restriction of views along type hierarchies. In the main result, we present suitable conditions for the integration and decomposition of consistent view models (Theorem 4.1) and extend these conditions to view models defined over meta models with constraints (Theorem 5.1). As a running example, we use a visual domain-specific modelling language to model coarse-grained IT components and their connectors in decentralized IT infrastructures. Using constraints, we formulate connection properties as invariants.", "paper_title": "Consistent integration of models based on views of meta models", "paper_id": "WOS:000277240700006"}