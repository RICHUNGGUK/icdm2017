{"auto_keywords": [{"score": 0.03171939562914439, "phrase": "mc"}, {"score": 0.00481495049065317, "phrase": "multi-state_minimal_cuts"}, {"score": 0.00464811139983244, "phrase": "important_topic"}, {"score": 0.0036861605703168397, "phrase": "straightforward_exact_algorithm"}, {"score": 0.0034003686971964707, "phrase": "limited-flow_network_reliability"}, {"score": 0.0028933521924166287, "phrase": "proposed_method"}, {"score": 0.002764856305713066, "phrase": "existing_algorithms"}, {"score": 0.002709589081384597, "phrase": "duplicate_d-mc"}, {"score": 0.0026688629249775925, "phrase": "d-mc_candidates"}, {"score": 0.0026023381988430666, "phrase": "lower_bounds"}, {"score": 0.0025761937402886954, "phrase": "edge_capacities"}, {"score": 0.002486734224234698, "phrase": "proposed_algorithm"}, {"score": 0.0023287359930308864, "phrase": "associated_computational_complexities"}, {"score": 0.0021697677572213086, "phrase": "d-mc"}, {"score": 0.0021049977753042253, "phrase": "obtained_d-mc"}], "paper_keywords": ["d-MC/MC", " limited-flow (multi-state) network", " network reliability", " perfect node", " unreliable node"], "paper_abstract": "Evaluating network reliability is an important topic in planning, designing, and control of systems. Many real-world systems are limited-flow (multi-state) networks composed of multi-state components, and their reliabilities can be computed in terms of minimal cut (Me) vectors to level d (named d-MC). A straightforward exact algorithm is presented here. The idea is to find all d-MC prior to calculating the limited-flow network reliability between the source, and the sink nodes (i.e. the one-to-one reliability), under the condition that all MC are known in advance. The proposed method is more efficient and effective compared to the existing algorithms in deleting the duplicate d-MC, verifying d-MC candidates, and finding the lower bounds of edge capacities in d-MC. The concepts of the proposed algorithm are novel, and first developed, followed by the analysis of associated computational complexities. Further, an example is provided to illustrate the generation of all d-MC, and verify that the obtained d-MC are not duplicated.", "paper_title": "A Fast Algorithm for Searching All Multi-State Minimal Cuts", "paper_id": "WOS:000261544800005"}