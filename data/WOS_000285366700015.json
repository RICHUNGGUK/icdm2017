{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "event-monitoring_queries"}, {"score": 0.004476399615305783, "phrase": "efficient_collection_trees"}, {"score": 0.004086350434865782, "phrase": "wireless_sensor_network"}, {"score": 0.004012500850311087, "phrase": "prior_techniques"}, {"score": 0.003640516896245813, "phrase": "specified_query"}, {"score": 0.0034887749053459584, "phrase": "query_result"}, {"score": 0.00342568771304873, "phrase": "query_epoch"}, {"score": 0.003070340620983981, "phrase": "event_monitoring_queries"}, {"score": 0.0029244418026475832, "phrase": "large_class"}, {"score": 0.0028890603352364273, "phrase": "monitoring_applications"}, {"score": 0.0027184540871935284, "phrase": "small_set"}, {"score": 0.002685558057339722, "phrase": "intuitive_statistics"}, {"score": 0.0026209522797963447, "phrase": "collection_trees"}, {"score": 0.0025735173163957993, "phrase": "important_resources"}, {"score": 0.0023776656246300063, "phrase": "overall_energy_consumption"}, {"score": 0.0022508572821818124, "phrase": "data_collection_process"}, {"score": 0.0022101055924375725, "phrase": "significantly_lower_resources"}, {"score": 0.00218334762335187, "phrase": "prior_approaches"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Aggregate queries", " Sensor networks"], "paper_abstract": "In this paper we present algorithms for building and maintaining efficient collection trees that provide the conduit to disseminate data required for processing monitoring queries in a wireless sensor network. While prior techniques base their operation on the assumption that the sensor nodes that collect data relevant to a specified query need to include their measurements in the query result at every query epoch, in many event monitoring applications such an assumption is not valid. We introduce and formalize the notion of event monitoring queries and demonstrate that they can capture a large class of monitoring applications. We then show techniques which, using a small set of intuitive statistics, can compute collection trees that minimize important resources such as the number of messages exchanged among the nodes or the overall energy consumption. Our experiments demonstrate that our techniques can organize the data collection process while utilizing significantly lower resources than prior approaches. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Collection trees for event-monitoring queries", "paper_id": "WOS:000285366700015"}