{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "evaluation_functions"}, {"score": 0.004531637625717547, "phrase": "genetic_algorithms"}, {"score": 0.004264923517966271, "phrase": "evaluation_function's_parameters"}, {"score": 0.003953409087444568, "phrase": "appropriate_expert"}, {"score": 0.003501452436803395, "phrase": "top_tournament-playing_chess_programs"}, {"score": 0.0033967510986397946, "phrase": "two-time_world_computer_chess_champion"}, {"score": 0.003320277992107974, "phrase": "performance_gain"}, {"score": 0.0030082398041055003, "phrase": "superior_expert"}, {"score": 0.002940487679224863, "phrase": "resulting_evaluation_function"}, {"score": 0.002874257080906824, "phrase": "evolved_program"}, {"score": 0.0026040262154057607, "phrase": "extended_experimental_results"}, {"score": 0.0021865218861454256, "phrase": "wide_range"}, {"score": 0.0021049977753042253, "phrase": "appropriate_experts"}], "paper_keywords": ["Computer chess", " Fitness evaluation", " Games", " Genetic algorithms", " Parameter tuning"], "paper_abstract": "In this paper we demonstrate how genetic algorithms can be used to reverse engineer an evaluation function's parameters for computer chess. Our results show that using an appropriate expert (or mentor), we can evolve a program that is on par with top tournament-playing chess programs, outperforming a two-time World Computer Chess Champion. This performance gain is achieved by evolving a program that mimics the behavior of a superior expert. The resulting evaluation function of the evolved program consists of a much smaller number of parameters than the expert's. The extended experimental results provided in this paper include a report on our successful participation in the 2008 World Computer Chess Championship. In principle, our expert-driven approach could be used in a wide range of problems for which appropriate experts are available.", "paper_title": "Expert-driven genetic algorithms for simulating evaluation functions", "paper_id": "WOS:000286466800002"}