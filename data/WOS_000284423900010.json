{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "image_processing_algorithms"}, {"score": 0.04174666335988992, "phrase": "image_processing"}, {"score": 0.004553510708976456, "phrase": "key_factors"}, {"score": 0.004330321475256457, "phrase": "massive_parallel_graphics_processing_units"}, {"score": 0.003829548069657859, "phrase": "algorithm_characteristics"}, {"score": 0.003601235776892337, "phrase": "image_processing_algorithms_map"}, {"score": 0.0035414240266479244, "phrase": "cuda"}, {"score": 0.003501991125315889, "phrase": "multiview_stereo_matching"}, {"score": 0.0034630606658026595, "phrase": "linear_feature_extraction"}, {"score": 0.0032747928335077198, "phrase": "npr"}, {"score": 0.0030794433253250476, "phrase": "major_domains"}, {"score": 0.0028635111041882956, "phrase": "diverse_characteristics"}, {"score": 0.002784540221128404, "phrase": "gpu._performance"}, {"score": 0.00269263690712392, "phrase": "execution_time"}, {"score": 0.002603758927691463, "phrase": "fastest_host-only_version"}, {"score": 0.002475898613632249, "phrase": "observed_speedup"}, {"score": 0.0023281003994670714, "phrase": "intensive_analysis"}, {"score": 0.0022137465420508785, "phrase": "proposed_metrics"}, {"score": 0.0021049977753042253, "phrase": "parallel_implementation"}], "paper_keywords": ["GPU", " CUDA", " image processing", " parallel implementation", " GPGPU"], "paper_abstract": "In this paper, we construe key factors in design and evaluation of image processing algorithms on the massive parallel graphics processing units (GPUs) using the compute unified device architecture (CUDA) programming model. A set of metrics, customized for image processing, is proposed to quantitatively evaluate algorithm characteristics. In addition, we show that a range of image processing algorithms map readily to CUDA using multiview stereo matching, linear feature extraction, JPEG2000 image encoding, and nonphotorealistic rendering (NPR) as our example applications. The algorithms are carefully selected from major domains of image processing, so they inherently contain a variety of subalgorithms with diverse characteristics when implemented on the GPU. Performance is evaluated in terms of execution time and is compared to the fastest host-only version implemented using OpenMP. It is shown that the observed speedup varies extensively depending on the characteristics of each algorithm. Intensive analysis is conducted to show the appropriateness of the proposed metrics in predicting the effectiveness of an application for parallel implementation.", "paper_title": "Design and Performance Evaluation of Image Processing Algorithms on GPUs", "paper_id": "WOS:000284423900010"}