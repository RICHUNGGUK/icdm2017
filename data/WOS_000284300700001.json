{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "block-level_storage_sharing_system"}, {"score": 0.004123781267600542, "phrase": "storage_medium"}, {"score": 0.003961330917648707, "phrase": "host_cpu"}, {"score": 0.003916098498242888, "phrase": "main_memory_bus"}, {"score": 0.0038492126993451337, "phrase": "storage_server"}, {"score": 0.0033922781038328844, "phrase": "prototype_gmblock_server"}, {"score": 0.0032398798149196432, "phrase": "proposed_techniques"}, {"score": 0.003166259444961177, "phrase": "peripheral_bus_contention"}, {"score": 0.0029214769181390653, "phrase": "rdma-based_approach"}, {"score": 0.002758273619951683, "phrase": "local_computation"}, {"score": 0.0026041635822373265, "phrase": "limited_nic_resources"}, {"score": 0.0021416404045850224, "phrase": "disk_bottleneck"}, {"score": 0.0021049977753042253, "phrase": "concurrent_access"}], "paper_keywords": ["Block-level storage", " Shared storage", " Memory contention", " Network block device", " Myrinet", " User level networking", " SMP clusters", " OCFS2"], "paper_abstract": "We present gmblock, a block-level storage sharing system over Myrinet which uses an optimized I/O path to transfer data directly between the storage medium and the network, bypassing the host CPU and main memory bus of the storage server It is device driver independent and retains the protection and isolation features of the OS We evaluate the performance of a prototype gmblock server and find that (a) the proposed techniques eliminate memory and peripheral bus contention, increasing remote I/O bandwidth significantly, in the order of 20-200% compared to an RDMA-based approach, (b) the impact of remote I/O to local computation becomes negligible, (c) the performance characteristics of RAID storage combined with limited NIC resources reduce performance We introduce synchronized send operations to improve the degree of disk to network I/O overlapping We deploy the OCFS2 shared-disk filesystem over gmblock and show gains for various application benchmarks, provided I/O scheduling can eliminate the disk bottleneck due to concurrent access", "paper_title": "GMBlock: Optimizing data movement in a block-level storage sharing system over Myrinet", "paper_id": "WOS:000284300700001"}