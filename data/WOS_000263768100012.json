{"auto_keywords": [{"score": 0.049352273134126434, "phrase": "compositional_verification"}, {"score": 0.030996237718162296, "phrase": "overapproximate_environment"}, {"score": 0.00481495049065317, "phrase": "interface_refinement"}, {"score": 0.004494570360108983, "phrase": "large_systems"}, {"score": 0.004359078118356132, "phrase": "approximate_environments"}, {"score": 0.004163427731140163, "phrase": "constituent_modules"}, {"score": 0.004007083686875716, "phrase": "effective_compositional_verification"}, {"score": 0.0038862297330905836, "phrase": "simple_but_accurate_overapproximate_environment"}, {"score": 0.0034911335714333507, "phrase": "high_computational_penalty"}, {"score": 0.0033857878144822906, "phrase": "false_failures"}, {"score": 0.003308862957060602, "phrase": "real_ones"}, {"score": 0.003160200215473349, "phrase": "automated_method"}, {"score": 0.0030648097361278856, "phrase": "state_space"}], "paper_keywords": ["Abstraction refinement", " circuit verification", " compositional verification", " formal method", " logic verification", " model checking"], "paper_abstract": "Compositional verification is essential for verifying large systems. However, approximate environments are needed when verifying the constituent modules in a system. Effective compositional verification requires finding a simple but accurate overapproximate environment for each module. Otherwise, many verification failures may be produced, therefore incurring high computational penalty for distinguishing the false failures from the real ones. This paper presents an automated method to refine the state space of each module within an overapproximate environment. This method is sound as long as an overapproximate environment is found for each module at the beginning of the verification process, and it has less restrictions on system partitioning. It is also coupled with several state-space reduction techniques for better results. Experiments of this method on several large asynchronous designs show promising results.", "paper_title": "Automated Interface Refinement for Compositional Verification", "paper_id": "WOS:000263768100012"}