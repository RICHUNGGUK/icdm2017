{"auto_keywords": [{"score": 0.02469693564196083, "phrase": "tcp"}, {"score": 0.00481495049065317, "phrase": "distributed_systems"}, {"score": 0.0047273577269638725, "phrase": "model-based_application_development"}, {"score": 0.004620093797504386, "phrase": "application's_integrity"}, {"score": 0.004494570360108983, "phrase": "clearly_defined_transformation_steps"}, {"score": 0.004176194589991187, "phrase": "novel_model-based_approach"}, {"score": 0.004119049028319832, "phrase": "correct_distributed_implementation"}, {"score": 0.004081385289516914, "phrase": "component-based_models"}, {"score": 0.0039341294012600085, "phrase": "model-based_methods"}, {"score": 0.0037747835341722636, "phrase": "distributed_embedded_systems"}, {"score": 0.0036218682585355895, "phrase": "non-deterministic_nature"}, {"score": 0.0031991799574455555, "phrase": "behavioral_components"}, {"score": 0.003097865379563127, "phrase": "high-level_synchronization_primitives"}, {"score": 0.002878140062594849, "phrase": "first_phase"}, {"score": 0.00283870598459543, "phrase": "input_model"}, {"score": 0.002686284749214443, "phrase": "second_phase"}, {"score": 0.0026494723416072316, "phrase": "deprioritized_model"}, {"score": 0.0024842242921857705, "phrase": "committee_coordination_problem"}, {"score": 0.002427732996314194, "phrase": "third_phase"}, {"score": 0.002405496949144104, "phrase": "distributed_code"}, {"score": 0.0023834640793589435, "phrase": "asynchronous_point-to-point_message"}, {"score": 0.002183938718432764, "phrase": "observational_equivalence"}], "paper_keywords": ["Component-based modeling", " Automated transformation", " Distributed systems", " BIP", " Correctness-by-construction", " Committee coordination", " Conflict resolution"], "paper_abstract": "Model-based application development aims at increasing the application's integrity by using models employed in clearly defined transformation steps leading to correct-by-construction artifacts. In this paper, we introduce a novel model-based approach for constructing correct distributed implementation of component-based models constrained by priorities. We argue that model-based methods are especially of interest in the context of distributed embedded systems due to their inherent complexity (e.g., caused by non-deterministic nature of distributed systems). Our method is designed based on three phases of transformation. The input is a model specified in terms of a set of behavioral components that interact through a set of high-level synchronization primitives (e.g., rendezvous and broadcasts) and priority rules for scheduling purposes. The first phase transforms the input model into a model that has no priorities. Then, the second phase transforms the deprioritized model into another model that resolves distributed conflicts by incorporating a solution to the committee coordination problem. Finally, the third phase generates distributed code using asynchronous point-to-point message passing primitives (e.g., TCP sockets). All transformations preserve the properties of their input model by ensuring observational equivalence. All the transformations are implemented and our experiments validate their effectiveness.", "paper_title": "Model-based implementation of distributed systems with priorities", "paper_id": "WOS:000340098700003"}