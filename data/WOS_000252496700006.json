{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "community"}, {"score": 0.004684157900507474, "phrase": "formal_approach"}, {"score": 0.004598933498016774, "phrase": "software_architecture"}, {"score": 0.004473982381245469, "phrase": "strict_separation"}, {"score": 0.004157058883925715, "phrase": "distribution_aspects"}, {"score": 0.0038624981944755813, "phrase": "parallel_design_language"}, {"score": 0.003427540517249369, "phrase": "process_calculi"}, {"score": 0.003213920601037463, "phrase": "category_theory"}, {"score": 0.0030695103543472908, "phrase": "intuitive_yet_precise_graph-based_semantics"}, {"score": 0.0025537472239953807, "phrase": "community_framework"}, {"score": 0.002461472107682778, "phrase": "graphical_integrated_development_environment"}, {"score": 0.002224510044064184, "phrase": "resulting_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["separation of concerns", " computation", " coordination", " distribution", " mobility", " high level design"], "paper_abstract": "COMMUNITY is a formal approach to Software Architecture with a strict separation of the computation, coordination, and distribution aspects. The approach is based on a parallel design language with state, which facilitates the specification of computations compared to the process calculi used by other formal approaches, and on category theory, which provides an intuitive yet precise graph-based semantics for the configuration of components and connectors. The COMMUNITY Workbench is being developed as a proof of concept of the COMMUNITY framework, providing a graphical integrated development environment to write components, draw configurations, and execute the resulting system. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "The COMMUNITY workbench", "paper_id": "WOS:000252496700006"}