{"auto_keywords": [{"score": 0.035547607374053554, "phrase": "query_form"}, {"score": 0.00481495049065317, "phrase": "dynamic_query_forms_for_database_queries"}, {"score": 0.004767546015485477, "phrase": "modern_scientific_databases"}, {"score": 0.004720606036240263, "phrase": "web_databases"}, {"score": 0.0046741260449047976, "phrase": "large_and_heterogeneous_data"}, {"score": 0.004605258779434384, "phrase": "real-world_databases"}, {"score": 0.004382913938427474, "phrase": "traditional_predefined_query_forms"}, {"score": 0.0040491842732233154, "phrase": "dqf"}, {"score": 0.0037593414153801394, "phrase": "query_forms"}, {"score": 0.003577691211998842, "phrase": "user's_preference_and_rank_query_form_components"}, {"score": 0.0033214855341753544, "phrase": "iterative_process"}, {"score": 0.003068327486877065, "phrase": "ranking_lists"}, {"score": 0.0029199689963238726, "phrase": "desired_form_components"}, {"score": 0.002806449337145999, "phrase": "form_components"}, {"score": 0.002737745536992088, "phrase": "captured_user_preference"}, {"score": 0.0022675820982741347, "phrase": "query_results"}, {"score": 0.0022120408738490437, "phrase": "expected_f-measure"}, {"score": 0.0021049977753042253, "phrase": "probabilistic_model"}], "paper_keywords": ["Query form", " user interaction", " query form generation"], "paper_abstract": "Modern scientific databases and web databases maintain large and heterogeneous data. These real-world databases contain hundreds or even thousands of relations and attributes. Traditional predefined query forms are not able to satisfy various ad-hoc queries from users on those databases. This paper proposes DQF, a novel database query form interface, which is able to dynamically generate query forms. The essence of DQF is to capture a user's preference and rank query form components, assisting him/her in making decisions. The generation of a query form is an iterative process and is guided by the user. At each iteration, the system automatically generates ranking lists of form components and the user then adds the desired form components into the query form. The ranking of form components is based on the captured user preference. A user can also fill the query form and submit queries to view the query result at each iteration. In this way, a query form could be dynamically refined until the user is satisfied with the query results. We utilize the expected F-measure for measuring the goodness of a query form. A probabilistic model is developed for estimating the goodness of a query form in DQF. Our experimental evaluation and user study demonstrate the effectiveness and efficiency of the system.", "paper_title": "Dynamic Query Forms for Database Queries", "paper_id": "WOS:000341571100007"}