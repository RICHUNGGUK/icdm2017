{"auto_keywords": [{"score": 0.03736108349380211, "phrase": "ioo"}, {"score": 0.0352468812972631, "phrase": "overhead_analysis"}, {"score": 0.03390195020022423, "phrase": "ioo_method"}, {"score": 0.00481495049065317, "phrase": "adaptive_workflow_scheduling"}, {"score": 0.004776484866276242, "phrase": "cloud_computing_platforms"}, {"score": 0.004738325072560588, "phrase": "iterative_ordinal_optimization"}, {"score": 0.004644247838681628, "phrase": "multitask_jobs"}, {"score": 0.00455202992136173, "phrase": "np-hard_problem"}, {"score": 0.00440825801245188, "phrase": "complex_workflows"}, {"score": 0.004338076511024884, "phrase": "elastic_clouds"}, {"score": 0.0042349552642244066, "phrase": "ibm"}, {"score": 0.004167451906343558, "phrase": "main_difficulty"}, {"score": 0.004101088357088207, "phrase": "large_search_space"}, {"score": 0.004068302313449334, "phrase": "high_overhead"}, {"score": 0.00401961206251868, "phrase": "optimal_schedules"}, {"score": 0.003955593400628455, "phrase": "real-time_applications"}, {"score": 0.0035778632599436024, "phrase": "sub-optimal_schedules"}, {"score": 0.0034508665218929745, "phrase": "global_perspective"}, {"score": 0.00340954056723008, "phrase": "long_period"}, {"score": 0.0032621876512517398, "phrase": "space_efficiency"}, {"score": 0.0030962064913500164, "phrase": "system_dynamism"}, {"score": 0.0030591147406390986, "phrase": "suboptimal_performance"}, {"score": 0.003022465992278672, "phrase": "cloud_experiments"}, {"score": 0.0029034358982402346, "phrase": "verification_workflow"}, {"score": 0.0028456853685842293, "phrase": "ioo_schedule"}, {"score": 0.0027446057983474994, "phrase": "monte_carlo_simulation"}, {"score": 0.002636489396049042, "phrase": "optimal_schedule"}, {"score": 0.0023940274498526213, "phrase": "memory_demand"}, {"score": 0.0023558375480288297, "phrase": "monte_carlo_method"}, {"score": 0.0022630008787375435, "phrase": "ioo-based_workflow_scheduling"}, {"score": 0.0022358683283304533, "phrase": "traditional_blind-pick"}, {"score": 0.002182573128803447, "phrase": "monte_carlo_methods"}, {"score": 0.002156402793481102, "phrase": "numerical_results"}, {"score": 0.0021049977753042253, "phrase": "theoretical_complexity"}], "paper_keywords": ["Autonomic provisioning", " big data", " cloud computing", " iterative ordinal optimization", " workflow scheduling"], "paper_abstract": "The scheduling of multitask jobs on clouds is an NP-hard problem. The problem becomes even worse when complex workflows are executed on elastic clouds, such as Amazon EC2 or IBM RC2. The main difficulty lies in the large search space and high overhead of generating optimal schedules, especially for real-time applications with dynamic workloads. In this work, a new iterative ordinal optimization (IOO) method is proposed. The ordinal optimization method is applied in each iteration to achieve sub-optimal schedules. IOO aims at generating more efficient schedules from a global perspective over a long period. We prove through overhead analysis the advantages in time and space efficiency in using the IOO method. The IOO method is designed to adapt to system dynamism to yield suboptimal performance. In cloud experiments on IBM RC2 cloud, we execute 20,000 tasks in LIGO (Laser Interferometer Gravitational-wave Observatory) verification workflow on 128 virtual machines. The IOO schedule is generated in less than 1,000 seconds, while using the Monte Carlo simulation takes 27.6 hours, 100 times longer to yield an optimal schedule. The IOO-optimized schedule results in a throughput of 1,100 tasks/sec with 7 GB memory demand, compared with 60 percent decrease in throughput and 70 percent increase in memory demand in using the Monte Carlo method. Our LIGO experimental results clearly demonstrate the advantage of using the IOO-based workflow scheduling over the traditional blind-pick, ordinal optimization, or Monte Carlo methods. These numerical results are also validated by the theoretical complexity and overhead analysis provided.", "paper_title": "Adaptive Workflow Scheduling on Cloud Computing Platforms with Iterative Ordinal Optimization", "paper_id": "WOS:000366167500007"}