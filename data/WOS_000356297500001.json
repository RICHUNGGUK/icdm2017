{"auto_keywords": [{"score": 0.049561472167574526, "phrase": "local_consistency_techniques"}, {"score": 0.00481495049065317, "phrase": "frequent_subgraph_mining"}, {"score": 0.004462105963334103, "phrase": "large_graph_database"}, {"score": 0.004272164161788242, "phrase": "subgraph_isomorphisms"}, {"score": 0.004203030435498069, "phrase": "key_role"}, {"score": 0.004068087482412997, "phrase": "subgraph_isomorphism_testing"}, {"score": 0.004002242925856335, "phrase": "hard_problem"}, {"score": 0.003958937342925219, "phrase": "fragment_miners"}, {"score": 0.0037697665240643066, "phrase": "complexity_issue"}, {"score": 0.0035701213515857227, "phrase": "projection_operator"}, {"score": 0.0034554281349858836, "phrase": "costly_subgraph_isomorphism_projection"}, {"score": 0.003344407169522133, "phrase": "polynomial_projection"}, {"score": 0.003290237137651949, "phrase": "semantically_valid_structural_interpretation"}, {"score": 0.0028096544129939277, "phrase": "constraint_programming_field"}, {"score": 0.002675252546913683, "phrase": "arc_consistency_technique"}, {"score": 0.0025334249463305875, "phrase": "first_instance"}, {"score": 0.0024923577071656014, "phrase": "breadth-first_order"}, {"score": 0.0023990982005125763, "phrase": "pattern-growth_approach"}, {"score": 0.002347378595930709, "phrase": "depth-first_search_space_exploration_strategy"}, {"score": 0.002128067018576581, "phrase": "nonsignificant_loss"}, {"score": 0.0021049977753042253, "phrase": "discovered_patterns"}], "paper_keywords": ["Relational learning", " Graph mining", " Projection operator", " Graph classification"], "paper_abstract": "Developing algorithms that discover all frequently occurring subgraphs in a large graph database is computationally extensive, as graph and subgraph isomorphisms play a key role throughout the computations. Since subgraph isomorphism testing is a hard problem, fragment miners are exponential in runtime. To alleviate the complexity issue, we propose to introduce a bias in the projection operator and instead of using the costly subgraph isomorphism projection, one can use a polynomial projection having a semantically valid structural interpretation. In this paper, our purpose is to present LC-mine, a generic and efficient framework to mine frequent subgraphs by the means of local consistency techniques used in the constraint programming field. Two instances of the framework based on the arc consistency technique are developed and presented in this paper. The first instance follows a breadth-first order, while the second is a pattern-growth approach that follows a depth-first search space exploration strategy. Then, we prove experimentally that we can achieve an important performance gain without or with nonsignificant loss of discovered patterns in terms of quality.", "paper_title": "LC-mine: a framework for frequent subgraph mining with local consistency techniques", "paper_id": "WOS:000356297500001"}