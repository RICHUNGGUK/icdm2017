{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "binary_decision_diagrams"}, {"score": 0.004561386908745206, "phrase": "space-efficient_method"}, {"score": 0.004363846362238565, "phrase": "reference_analyses"}, {"score": 0.003993958025223994, "phrase": "bit_pattern"}, {"score": 0.00376488621224566, "phrase": "circuit_design"}, {"score": 0.003728000957725218, "phrase": "model_checking"}, {"score": 0.0036733470451885465, "phrase": "verification_communities"}, {"score": 0.0036194914688460656, "phrase": "significant_reductions"}, {"score": 0.003584025547693836, "phrase": "bdd_sizes"}, {"score": 0.003428665921276366, "phrase": "don't-care_bit_patterns"}, {"score": 0.003312486229143855, "phrase": "bdd-based_program_analysis"}, {"score": 0.0031845067058084583, "phrase": "bdd_size"}, {"score": 0.0030017207229983385, "phrase": "coudert"}, {"score": 0.0029722900280316216, "phrase": "madre's_restrict_operation"}, {"score": 0.002899965889623787, "phrase": "zero-suppressed_bdds"}, {"score": 0.0027741761880779535, "phrase": "don't-care_bdds"}, {"score": 0.002576503437739865, "phrase": "compiler_or_other_software_analysis_tools"}, {"score": 0.0025014259919355453, "phrase": "greater_precision"}, {"score": 0.0024405312482831646, "phrase": "context-insensitive_and_context-sensitive_program_analyses"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["points-to analysis", " model checking", " binary decision diagrams"], "paper_abstract": "Binary decision diagrams (BDDs) have recently become widely accepted as a space-efficient method of representing relations in points-to or reference analyses. When BDDs are used to represent relations, each element of a domain is assigned a bit pattern to represent it, but not every bit pattern represents an element. The circuit design, model checking, and verification communities have achieved significant reductions in BDD sizes using several techniques to reduce the overhead of these don't-care bit patterns. We adapt these techniques to BDD-based program analysis, and we study their effect on the BDD size in this context. Specifically, we compare the effectiveness of Coudert and Madre's restrict operation and the use of zero-suppressed BDDs (ZBDDs) to represent relations. Using don't-care BDDs (XBDDs) and ZBDDs to reduce the size of the relations allows a compiler or other software analysis tools to analyze larger programs with greater precision. Our experimental evaluation considers both context-insensitive and context-sensitive program analyses. We also provide a metric that can be used to estimate whether ZBDDs will be more compact than BDDs for a given analysis. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Using XBDDs and ZBDDs in points-to analysis", "paper_id": "WOS:000262453600003"}