{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "close_alternative_plans"}, {"score": 0.004669085371587273, "phrase": "intelligent_agent"}, {"score": 0.004567596860086148, "phrase": "complete_plan"}, {"score": 0.0037973594873521596, "phrase": "alternative_plan"}, {"score": 0.003539252646181146, "phrase": "search_algorithm"}, {"score": 0.003477505397536663, "phrase": "similar_alternative_plans"}, {"score": 0.0033277936960179892, "phrase": "comparison_function"}, {"score": 0.00304737045343781, "phrase": "distance_metrics"}, {"score": 0.0028276174348291923, "phrase": "general_algorithm"}, {"score": 0.0027905114793984084, "phrase": "best-first_search"}, {"score": 0.0025665261770229757, "phrase": "cost_function"}, {"score": 0.0025328377393370642, "phrase": "best-first_search_algorithm"}, {"score": 0.0022095328812245852, "phrase": "experimental_results"}], "paper_keywords": ["best-first search", " shortest path", " scheduling", " replanning", " rescheduling"], "paper_abstract": "Consider the situation where an intelligent agent accepts as input a complete plan, i.e., a sequence of states (or operators) that should be followed in order to achieve a goal. For some reason, the given plan cannot be implemented by the agent, who then goes about trying to find an alternative plan that is as close as possible to the original. To achieve this, a search algorithm that will find similar alternative plans is required, as well as some sort of comparison function that will determine which alternative plan is closest to the original. In this paper, we define a number of distance metrics between plans, and characterize these functions and their respective attributes and advantages. We then develop a general algorithm based on best-first search that helps an agent efficiently find the most suitable alternative plan. We also propose a number of heuristics for the cost function of this best-first search algorithm. To explore the generality of our idea, we provide three different problem domains where our approach is applicable: physical roadmap path finding, the blocks world, and task scheduling. Experimental results on these various domains support the efficiency of our algorithm for finding close alternative plans.(1).", "paper_title": "Searching for close alternative plans", "paper_id": "WOS:000246174500002"}