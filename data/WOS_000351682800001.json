{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multilevel_statistics"}, {"score": 0.004751889650408546, "phrase": "live_execution_traces"}, {"score": 0.004710306419574744, "phrase": "execution_trace_logs"}, {"score": 0.0046079260641779755, "phrase": "system_run-time_behaviour"}, {"score": 0.004507760907425495, "phrase": "trace_analysis_tools"}, {"score": 0.004429191773525288, "phrase": "input_logs"}, {"score": 0.004183137595671171, "phrase": "analysis_steps"}, {"score": 0.0041102032028337366, "phrase": "continuous_and_lengthy_trace_streams"}, {"score": 0.0040385352882334235, "phrase": "live_tracing_mode"}, {"score": 0.0038647641000798135, "phrase": "even_a_detailed_summary"}, {"score": 0.0038141000450978746, "phrase": "whole_stream"}, {"score": 0.0036020923276404403, "phrase": "different_parts"}, {"score": 0.003492840830999027, "phrase": "multilevel_and_multidimensional_analysis"}, {"score": 0.003372019835750424, "phrase": "corresponding_data_structures"}, {"score": 0.003298631258267805, "phrase": "stream_events"}, {"score": 0.0031565959573536194, "phrase": "recent_data"}, {"score": 0.00308788133472785, "phrase": "old_data"}, {"score": 0.002981026404927824, "phrase": "efficient_multilevel_and_multidimensional_analysis"}, {"score": 0.0029289895726382653, "phrase": "online_analytical_processing_analyses"}, {"score": 0.002890557197908352, "phrase": "database_applications"}, {"score": 0.0028526276660691525, "phrase": "proposed_solution"}, {"score": 0.002790511479398411, "phrase": "compact_manner"}, {"score": 0.0027660443371695024, "phrase": "interval_forms"}, {"score": 0.002717750004930131, "phrase": "range_queries"}, {"score": 0.002682081928174866, "phrase": "arbitrary_time"}, {"score": 0.002544017922741882, "phrase": "different_system_parameters"}, {"score": 0.0025217065652145443, "phrase": "different_time_areas"}, {"score": 0.0024559368099486647, "phrase": "system's_ability"}, {"score": 0.0024130437638400404, "phrase": "comprehensive_trace_analysis"}, {"score": 0.0023708980662168547, "phrase": "linux_operating_system_trace_logs"}, {"score": 0.002258745901862197, "phrase": "generic_architecture"}, {"score": 0.0021709339252206825, "phrase": "stream_data"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["stream processing", " multilevel analysis", " OLAP analysis", " trace abstraction", " Linux kernel"], "paper_abstract": "Execution trace logs are used to analyze system run-time behaviour and detect problems. Trace analysis tools usually read the input logs and gather either a detailed or brief summary of them to later process and inspect in the analysis steps. However, continuous and lengthy trace streams contained in the live tracing mode make it difficult to indefinitely record all events or even a detailed summary of the whole stream. This situation is further complicated when the system aims to compare different parts of the trace and provide a multilevel and multidimensional analysis. This paper presents an architecture with corresponding data structures and algorithms to process stream events, generate an adequate summary-detailed enough for recent data and succinct enough for old data-and organize them to enable an efficient multilevel and multidimensional analysis, similar to online analytical processing analyses in the database applications. The proposed solution arranges data in a compact manner using interval forms and enables the range queries for any arbitrary time durations. Because this feature makes it possible to compare of different system parameters in different time areas, it significantly influences the system's ability to provide a comprehensive trace analysis. Although the Linux operating system trace logs are used to evaluate the solution, we propose a generic architecture that can be used to summarize various types of stream data. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Cube data model for multilevel statistics computation of live execution traces", "paper_id": "WOS:000351682800001"}