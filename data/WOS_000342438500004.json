{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hermes"}, {"score": 0.004498490110526062, "phrase": "binary_relation"}, {"score": 0.0038450196329654867, "phrase": "aoc"}, {"score": 0.0036489343475053187, "phrase": "partial_order"}, {"score": 0.0034267429854665035, "phrase": "corresponding_concept_lattice"}, {"score": 0.002450602177683066, "phrase": "matrix_multiplication"}, {"score": 0.0021496109309265218, "phrase": "ares"}, {"score": 0.0021271984178948223, "phrase": "ceres"}, {"score": 0.0021049977753042253, "phrase": "pluton"}], "paper_keywords": ["Order", " Lattices", " Ordered algebraic structures", " Graph theory"], "paper_abstract": "Given a relation oe\" aS dagger oe\" x oe\" on a set oe\" of objects and a set oe\" of attributes, the AOC-poset (Attribute/Object Concept poset), is the partial order defined on the \"introducers\" of objects and attributes in the corresponding concept lattice. In this paper, we present Hermes, a simple and efficient algorithm for building an AOC-poset which runs in O(m i n{n m, n (alpha) }), where n is the number of objects plus the number of attributes, m is the size of the relation, and n (alpha) is the time required to perform matrix multiplication (currently alpha = 2.376). Finally, we compare the runtime of Hermes with the runtime of other algorithms computing the AOC-poset: Ares, Ceres and Pluton. We characterize the cases where each algorithm is the more relevant.", "paper_title": "Hermes: a simple and efficient algorithm for building the AOC-poset of a binary relation", "paper_id": "WOS:000342438500004"}