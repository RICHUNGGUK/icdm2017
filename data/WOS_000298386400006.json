{"auto_keywords": [{"score": 0.04460540104209965, "phrase": "filter_part"}, {"score": 0.007864160190877455, "phrase": "plain_ascii_dna_sequences"}, {"score": 0.00481495049065317, "phrase": "k-bit_filtering"}, {"score": 0.00464343008299973, "phrase": "alternative_way"}, {"score": 0.0045876189888390895, "phrase": "text_files"}, {"score": 0.0045324756541157574, "phrase": "exact_match_queries"}, {"score": 0.004424160689087029, "phrase": "original_file"}, {"score": 0.0040978781692373005, "phrase": "remaining_bits"}, {"score": 0.003749908582313067, "phrase": "k-bit_filtered_format"}, {"score": 0.0036898803847106023, "phrase": "input_pattern"}, {"score": 0.003587125711973247, "phrase": "k-bit_filtered_structure"}, {"score": 0.003417565253539315, "phrase": "k_bits"}, {"score": 0.0032956583072431423, "phrase": "pattern_filter_bit_sequence"}, {"score": 0.003165283275312972, "phrase": "pattern_filter"}, {"score": 0.003003452468800793, "phrase": "match_position"}, {"score": 0.0029197572138773237, "phrase": "pattern_payload"}, {"score": 0.002861402531078998, "phrase": "corresponding_location"}, {"score": 0.002826949449085849, "phrase": "payload_part"}, {"score": 0.0027041233221381756, "phrase": "m-byte_pattern"}, {"score": 0.0026715589067557526, "phrase": "n-byte_text"}, {"score": 0.0026500668745484957, "phrase": "first_k_center_dot_m_bits"}, {"score": 0.002607598760956807, "phrase": "k_center_dot_n_bits"}, {"score": 0.0024642355970277497, "phrase": "matching_positions"}, {"score": 0.0024149629835339926, "phrase": "natural_language_texts"}, {"score": 0.0023762535034673017, "phrase": "random_byte_sequences"}, {"score": 0.0023381630439887184, "phrase": "search_performance"}, {"score": 0.0023099954987126, "phrase": "proposed_scheme"}, {"score": 0.002227508035618043, "phrase": "tested_best_exact_pattern-matching_algorithms"}, {"score": 0.0021049977753042253, "phrase": "effective_bitwise_pattern-matching_algorithm"}], "paper_keywords": ["pattern-matching", " string search", " filtering", " file structure"], "paper_abstract": "This study explores an alternative way of storing text files to answer exact match queries faster. We decompose the original file into two parts as filter and payload. The filter part contains the most informative k bits of each byte, and the remaining bits of the bytes are concatenated in the order of appearance to generate the payload. We refer to this structure as k-bit filtered format. When an input pattern is to be searched on the k-bit filtered structure, the same decomposition is performed on the pattern. The k bits from each byte of the pattern form the pattern filter bit sequence, and the rest is the payload. The pattern filter is first scanned on the filter part of the file. At each match position detected in the filter part, the pattern payload is verified against the corresponding location in the payload part of the text. Thus, instead of searching an m-byte pattern on an n-byte text, first k center dot m bits are scanned on k center dot n bits, followed by a verification of (8 - k)center dot m bits on the respective locations of the matching positions. Experiments conducted on natural language texts, plain ASCII DNA sequences and random byte sequences showed that the search performance with the proposed scheme is on average two times faster than the tested best exact pattern-matching algorithms. The highest gain is obtained on plain ASCII DNA sequences. We also developed an effective bitwise pattern-matching algorithm of possible independent interest within this study.", "paper_title": "Fast Pattern-Matching via k-bit Filtering Based Text Decomposition", "paper_id": "WOS:000298386400006"}