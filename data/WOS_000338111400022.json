{"auto_keywords": [{"score": 0.04243032195732421, "phrase": "reconfigurable_logic"}, {"score": 0.040637368261652464, "phrase": "system_function"}, {"score": 0.00481495049065317, "phrase": "dynamic_function_replacement_for_system-on-chip_security"}, {"score": 0.0046632033374901715, "phrase": "hardware-based_attacks"}, {"score": 0.004458722048888919, "phrase": "design_methodologies"}, {"score": 0.00429057323623293, "phrase": "hardware_systems"}, {"score": 0.0039729853486821995, "phrase": "system_operation"}, {"score": 0.003922378980031565, "phrase": "unexpected_loss"}, {"score": 0.0036788184374592706, "phrase": "locally_stored_configuration_bitstream"}, {"score": 0.0035627492415494216, "phrase": "configuration_bitstream"}, {"score": 0.0034725269588525534, "phrase": "remote_site"}, {"score": 0.0033845816848753073, "phrase": "specific_ways"}, {"score": 0.0026523079380037706, "phrase": "architectural_features"}, {"score": 0.0026184800186211097, "phrase": "system-on-chip"}, {"score": 0.0025034338848015166, "phrase": "performance_degradation"}, {"score": 0.0024088451312725924, "phrase": "seamless_system_operation"}, {"score": 0.00236289633510808, "phrase": "function_replacement"}, {"score": 0.0021322065604537617, "phrase": "system_software"}], "paper_keywords": ["Hardware Trojan horses", " reconfigurable logic device", " dynamic reconfiguration", " dynamic function replacement", " system-on-chip"], "paper_abstract": "We describe a set of design methodologies and experiments related to enabling hardware systems to utilize on-the-fly configuration of reconfigurable logic to recover system operation from unexpected loss of system function. Methods we explore include programming using locally stored configuration bitstream as well as using configuration bitstream transmitted from a remote site. We examine specific ways of utilizing reconfigurable logic to regenerate system function, as well as the effectiveness of this approach as a function of the type of attack, and various architectural attributes of the system. Based on this analysis, we propose architectural features of System-on-Chip (SoC) that can minimize performance degradation and maximize the likelihood of seamless system operation despite the function replacement. This approach is highly feasible in that it is not required to specially manage system software and other normal system hardware functions for the replacement.", "paper_title": "Dynamic Function Replacement for System-on-Chip Security in the Presence of Hardware-Based Attacks", "paper_id": "WOS:000338111400022"}