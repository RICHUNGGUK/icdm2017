{"auto_keywords": [{"score": 0.04683590293207772, "phrase": "rewrite_systems"}, {"score": 0.00481495049065317, "phrase": "boolean_programs"}, {"score": 0.0040133278382101885, "phrase": "imperative_programs"}, {"score": 0.0039024014688338964, "phrase": "boolean_variables"}, {"score": 0.0034884152484429207, "phrase": "software_model-checking"}, {"score": 0.003206916619690171, "phrase": "real_programs"}, {"score": 0.0027100527874262446, "phrase": "different_features"}, {"score": 0.002456486927713543, "phrase": "dynamic_thread_creation"}], "paper_keywords": [""], "paper_abstract": "We show that rewrite systems can be used to give semantics to imperative programs with boolean variables, a class of programs used in software model-checking as over- or underapproximations of real programs. We study the classes of rewrite systems induced by programs with different features like procedures, concurrency, or dynamic thread creation, and survey a number of results on their word problem and their symbolic reachability problem.", "paper_title": "Rewriting models of Boolean programs", "paper_id": "WOS:000240072100011"}