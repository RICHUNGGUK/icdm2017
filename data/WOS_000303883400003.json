{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tree_schedules"}, {"score": 0.012811375745116071, "phrase": "static_dispatch_tables"}, {"score": 0.004652016085325825, "phrase": "distributed_real-time_systems"}, {"score": 0.004342430078306461, "phrase": "predictable_and_verifiable_control_mechanism"}, {"score": 0.004195418010131832, "phrase": "real-time_bus_arbitration_mechanisms"}, {"score": 0.0040767015025213625, "phrase": "medium_and_guarantee"}, {"score": 0.004053362743156545, "phrase": "bounded_communication_delays"}, {"score": 0.0039841418890102925, "phrase": "arbitration_mechanisms"}, {"score": 0.0036763623220059933, "phrase": "real-time_bus_arbitration_mechanism"}, {"score": 0.003531474887552889, "phrase": "best_parts"}, {"score": 0.003130077012135034, "phrase": "algorithmic_approaches"}, {"score": 0.0029552551661591988, "phrase": "real-time_traffic"}, {"score": 0.002726740692380339, "phrase": "application-specific_behavior"}, {"score": 0.002680114113899346, "phrase": "time-triggered_state-based_supply_model"}, {"score": 0.002487083025913648, "phrase": "analysis_results"}, {"score": 0.002361632539339945, "phrase": "fixed_and_dynamic_priority_schemes"}, {"score": 0.002191489192077851, "phrase": "state-based_supply"}], "paper_keywords": ["Real-time networking", " Scheduling", " Network code"], "paper_abstract": "Distributed real-time systems require bounded communication delays and achieve them by means of a predictable and verifiable control mechanism for the communication medium. Real-time bus arbitration mechanisms control access to the medium and guarantee bounded communication delays. These arbitration mechanisms can be static dispatch tables or dynamic, algorithmic approaches. In this work, we introduce a real-time bus arbitration mechanism called tree schedules that takes the best parts of both sides: It can be analyzed like static dispatch tables, and it provides a certain degree of flexibility similar to algorithmic approaches. We present tree schedules as a framework to specify real-time traffic and introduce mechanisms to analyze it. We discuss how tree schedules can capture application-specific behavior in a time-triggered state-based supply model by means of conditional branching built into the model. We present analysis results for this model specifically aiming at schedulability in fixed and dynamic priority schemes and waiting time analysis. Finally, we demonstrate the advantages of state-based supply over stateless supply by means of two case studies.", "paper_title": "State-based scheduling with tree schedules: analysis and evaluation", "paper_id": "WOS:000303883400003"}