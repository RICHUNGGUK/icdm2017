{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "maximal_multirepeats"}, {"score": 0.004753670676591174, "phrase": "multiple_sequences"}, {"score": 0.0039729853486821995, "phrase": "identical_letter"}, {"score": 0.0027920359090544107, "phrase": "efficient_algorithms"}, {"score": 0.002738797804069541, "phrase": "suffix_arrays"}, {"score": 0.002259054486157494, "phrase": "recent_work"}, {"score": 0.002145942273032774, "phrase": "maximal_repeats"}, {"score": 0.0021049977753042253, "phrase": "single_string"}], "paper_keywords": ["maximal multirepeats", " repeats", " gaps", " biological sequences", " suffix arrays"], "paper_abstract": "A repeat in a string is a substring that occurs more than once. A repeat is extendible if every occurrence of the repeat has an identical letter either on the left or on the right; otherwise, it is maximal. A multirepeat is a repeat that occurs at least m(min) times (m(min) >= 2) in each of at least q >= 1 strings in a given set of strings. In this paper, we describe a family of efficient algorithms based on suffix arrays to compute maximal multirepeats under various constraints. Our algorithms are faster, more flexible and much more space-efficient than algorithms recently proposed for this problem. The results extend recent work by two of the authors computing all maximal repeats in a single string.", "paper_title": "Faster Algorithms for Computing Maximal Multirepeats in Multiple Sequences", "paper_id": "WOS:000273198000003"}