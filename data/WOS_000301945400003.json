{"auto_keywords": [{"score": 0.04487700616034956, "phrase": "end_product"}, {"score": 0.00481495049065317, "phrase": "product_configuration_problems"}, {"score": 0.004372002674739612, "phrase": "order_production_strategy"}, {"score": 0.0038516336597530614, "phrase": "partnering_suppliers"}, {"score": 0.0036700484729006136, "phrase": "numerous_number"}, {"score": 0.003626000977962191, "phrase": "alternative_components"}, {"score": 0.003232956879952914, "phrase": "configurable_product"}, {"score": 0.0029887957779347394, "phrase": "object-oriented_modeling_method"}, {"score": 0.002813566267090177, "phrase": "configuration_knowledge"}, {"score": 0.0027463775689957255, "phrase": "optimal_configuration"}, {"score": 0.002648582960470086, "phrase": "object-oriented_configuration_knowledge"}, {"score": 0.0025697460140513932, "phrase": "mixed-integer_programming_problem"}, {"score": 0.0024932498388507084, "phrase": "product_configuration_optimization"}, {"score": 0.0024336917123957387, "phrase": "java_cplex._experiments"}, {"score": 0.0021827653135510225, "phrase": "computational_time"}, {"score": 0.0021049977753042253, "phrase": "medium-sized_configuration_problems"}], "paper_keywords": ["Mixed-integer programming", " product configuration", " configuration knowledge"], "paper_abstract": "Within the context of build-to-order or assembly-to-order production strategy, an end product satisfying the requirements of a customer often comprises various components or parts that may be provided by the partnering suppliers. More probably, there exist a numerous number of alternative components or parts to be chosen when an end product is configured. Meanwhile, structures and constraints within the configurable product must be observed. To represent structures of products and constraints, object-oriented modeling method is employed to enable the share and reuse of configuration knowledge. To derive optimal configuration, product configuration problem with object-oriented configuration knowledge is formalized as a mixed-integer programming problem. The algorithm for product configuration optimization is implemented using Java CPLEX. Experiments are conducted to demonstrate and compare the performance of the algorithm. The results show that the computational time is reasonable and acceptable for medium-sized configuration problems.", "paper_title": "A hybrid approach for modeling and solving product configuration problems", "paper_id": "WOS:000301945400003"}