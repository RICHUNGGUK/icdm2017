{"auto_keywords": [{"score": 0.011656889167808817, "phrase": "first_step"}, {"score": 0.01108042710953358, "phrase": "false_dismissals"}, {"score": 0.00481495049065317, "phrase": "novel_pattern"}, {"score": 0.004596561972944185, "phrase": "novel_kind"}, {"score": 0.004554082077300675, "phrase": "threshold_similarity_query"}, {"score": 0.004307286039184164, "phrase": "queried_time_series"}, {"score": 0.003817306032290766, "phrase": "user-specified_range"}, {"score": 0.00372965096877929, "phrase": "efficient_method"}, {"score": 0.0034624082435775676, "phrase": "search_space"}, {"score": 0.003414467360488913, "phrase": "quite_small_subspace"}, {"score": 0.003140401552000472, "phrase": "lower_bounding_distance_function"}, {"score": 0.0029152570900178956, "phrase": "binary_search"}, {"score": 0.00269365253474335, "phrase": "length_function"}, {"score": 0.0026687115458522326, "phrase": "time_intervals"}, {"score": 0.0025121156016001886, "phrase": "traffic_data"}, {"score": 0.0024658019116387845, "phrase": "useful_knowledge"}, {"score": 0.002375714262344562, "phrase": "diverse_time_series_data"}, {"score": 0.0023210846870653757, "phrase": "brute_force_method"}, {"score": 0.0022155569675462333, "phrase": "search_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Threshold query", " Similarity search", " Time series", " Lower bounding distance function"], "paper_abstract": "In this paper, a novel kind of threshold similarity query is introduced. It reports a threshold if exceeding which the queried time series has the most similar time intervals compared to that of the given query time series above its query threshold, and the extent of the similarity between the two time interval sequences should be within a user-specified range. We present an efficient method composed by two steps to solve the query. The first step is to dramatically narrow the search space into a quite small subspace without false dismissals, and the second to search iteratively in the subspace. In more detail, a lower bounding distance function is described, which guarantees no false dismissals during the first step. Furthermore, we use binary search to quickly locate the solution within the subspace based on the continuity and monotone of the length function of time intervals, which are proved in this paper. We implemented our method on traffic data and discovered some useful knowledge. We also carried out experiments on diverse time series data to compare our method with brute force method. The results were excellent: our method accelerated the search time from 10 times up to 150 times. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient algorithm for a novel pattern of time series", "paper_id": "WOS:000284863200058"}