{"auto_keywords": [{"score": 0.03421173613766923, "phrase": "multicore_processors"}, {"score": 0.00481495049065317, "phrase": "shared_memory_multiprocessors"}, {"score": 0.0044718206943536514, "phrase": "parallel_strategies"}, {"score": 0.004375613460102577, "phrase": "advanced_multidimensional_interval"}, {"score": 0.004337710093279712, "phrase": "global_optimization"}, {"score": 0.004171151009885106, "phrase": "amigo"}, {"score": 0.0041170581247889654, "phrase": "parallel_amigo"}, {"score": 0.004010960493946656, "phrase": "global-pamigo"}, {"score": 0.003976203286249396, "phrase": "local-pamigo."}, {"score": 0.0037738708560271354, "phrase": "potential_parallelism"}, {"score": 0.0035974243349266894, "phrase": "target_computer_architectures"}, {"score": 0.0034894451015047875, "phrase": "shared_memory_architectures"}, {"score": 0.003399466007862412, "phrase": "threaded_programming_model"}, {"score": 0.00326881479036966, "phrase": "current_personal_computers"}, {"score": 0.003170667618004276, "phrase": "promising_speed-up"}, {"score": 0.002996122158460243, "phrase": "process_units"}, {"score": 0.002855934865505357, "phrase": "algorithm_executions"}, {"score": 0.0027341763737751467, "phrase": "local_memory_allocator"}, {"score": 0.002583597507349819, "phrase": "lock_conflicts"}, {"score": 0.0025389513338018414, "phrase": "standard_system_memory_allocator"}, {"score": 0.0024842242921857705, "phrase": "pamigo_versions"}, {"score": 0.0024095777415804346, "phrase": "good_performance"}, {"score": 0.0022277448907881306, "phrase": "pamigo"}, {"score": 0.0021987994275190314, "phrase": "similar_performance"}, {"score": 0.0021049977753042253, "phrase": "parallel_bb_algorithms"}], "paper_keywords": ["global optimization", " branch-and-bound", " interval arithmetic", " parallel algorithms", " shared memory", " multithreading"], "paper_abstract": "The focus of this paper is on the analysis and evaluation of a type of parallel strategies applied to the algorithm Advanced Multidimensional Interval analysis Global Optimization (AMIGO). We investigate two parallel versions of AMIGO, called Parallel AMIGO (PAMIGO) algorithm, Global-PAMIGO and Local-PAMIGO. The idea behind our study is that in order to exploit the potential parallelism of algorithms, researchers need to adapt them to the target computer architectures. Our PAMIGO algorithms have been designed for shared memory architectures and are based on a threaded programming model, which is suitable to be run on current personal computers with multicore processors. Our first experimental results show a promising speed-up up to four process units. We analyse the loss of efficiency when the number of process units is greater than four by obtaining a profile of the algorithm executions. Secondly we experiment with the use of a local memory allocator per thread. This increases the efficiency by reducing the number of lock conflicts given by the standard system memory allocator. Our experimental results for both PAMIGO versions, using up to 15 process units, obtain a good performance for hard to solve problems on unicore and multicore processors. It is noteworthy that both versions of PAMIGO obtain a similar performance. Our experiments may be useful for researchers who use parallel BB algorithms.", "paper_title": "Branch-and-bound interval global optimization on shared memory multiprocessors", "paper_id": "WOS:000259314500004"}