{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "optimal_release_time"}, {"score": 0.04957786067961377, "phrase": "software_systems"}, {"score": 0.04597142052282097, "phrase": "learning_effect"}, {"score": 0.04261556039727903, "phrase": "experts'_prior_judgments"}, {"score": 0.03696798601330037, "phrase": "software_reliability"}, {"score": 0.0318802032589797, "phrase": "software_testing_cost"}, {"score": 0.004592214823540993, "phrase": "bayesian_method"}, {"score": 0.004520272777451894, "phrase": "software_reliability_growth"}, {"score": 0.004111584914709491, "phrase": "testing_cost"}, {"score": 0.0039006600544599537, "phrase": "appropriate_software-debugging_scheme"}, {"score": 0.003819339842998955, "phrase": "best_arrangement"}, {"score": 0.0037793152987497286, "phrase": "available_resources"}, {"score": 0.0036810726176482278, "phrase": "minimal_software_testing_cost"}, {"score": 0.003623352647973122, "phrase": "sufficient_information"}, {"score": 0.0035853745478488254, "phrase": "decision_making"}, {"score": 0.0033656930865509547, "phrase": "cumulative_software_errors"}, {"score": 0.003226744277130179, "phrase": "specific_time_period"}, {"score": 0.0030935140058168885, "phrase": "software_release_time"}, {"score": 0.0029501745152877706, "phrase": "existing_approaches"}, {"score": 0.002813457986293993, "phrase": "proposed_method"}, {"score": 0.002640947693258573, "phrase": "testing_period"}, {"score": 0.0025586903829811296, "phrase": "software_testing_data"}, {"score": 0.002242577809454225, "phrase": "numerical_example"}, {"score": 0.0021385822825864425, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "sensitivity_and_risk_analyses"}], "paper_keywords": ["Bayesian statistical method", " Software release time", " Software reliability growth model", " Software testing/debugging"], "paper_abstract": "In this paper, a Bayesian method dealing with software reliability growth with consideration of the learning effect is proposed to determine an optimal release time for software systems with regard to the testing cost and experts' prior judgments. Such an approach is able to devise an appropriate software-debugging scheme which has the best arrangement of available resources and personnel with a minimal software testing cost when lacking sufficient information for decision making. Past research on software reliability emphasized the estimation of the number of cumulative software errors or the software reliability with respect to a specific time period, yet it neglected the determination of software release time with consideration of the software testing cost, meaning that existing approaches are not entirely practical. Accordingly, the proposed method is concerned with the evaluation of the software testing cost incurred during the testing period based on experts' prior judgments and the software testing data collected within a given duration, and is thus characterized by its practicality as well as meaningfulness with consideration of the learning effect. Finally, a numerical example is given to verify the effectiveness of the proposed approach, and sensitivity and risk analyses are performed on this example.", "paper_title": "Bayesian updating of optimal release time for software systems", "paper_id": "WOS:000262702700007"}