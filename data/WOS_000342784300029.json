{"auto_keywords": [{"score": 0.04788992596085788, "phrase": "unwanted_processes"}, {"score": 0.044111484437312234, "phrase": "previous_solutions"}, {"score": 0.03441113131403901, "phrase": "kernel_processes"}, {"score": 0.03238905854753271, "phrase": "vaw"}, {"score": 0.00481495049065317, "phrase": "whitelisting_approach"}, {"score": 0.004703671193348433, "phrase": "promising_solution"}, {"score": 0.0038404642251010797, "phrase": "whitelist_information"}, {"score": 0.0037516215763875225, "phrase": "kernel_space"}, {"score": 0.0028325548627901004, "phrase": "virtualization_technology"}, {"score": 0.002619748321217153, "phrase": "unauthorized_user"}, {"score": 0.002385326947545194, "phrase": "stronger_security_guarantees"}], "paper_keywords": ["whitelisting", " virtualization technology"], "paper_abstract": "A whitelisting approach is a promising solution to prevent unwanted processes (e.g., malware) getting executed. However, previous solutions suffer from limitations in that: 1) Most methods place the whitelist information in the kernel space, which could be tempered by attackers; 2) Most methods cannot prevent the execution of kernel processes. In this paper, we present VAW, a novel application whitelisting system by using the virtualization technology. Our system is able to block the execution of unauthorized user and kernel processes. Compared with the previous solutions, our approach can achieve stronger security guarantees. The experiments show that VAW can deny the execution of unwanted processes effectively with a little performance overhead.", "paper_title": "A Virtualization-Based Approach for Application Whitelisting", "paper_id": "WOS:000342784300029"}