{"auto_keywords": [{"score": 0.015719716506582538, "phrase": "bitstate_hashing"}, {"score": 0.009744713307451969, "phrase": "growth_curve"}, {"score": 0.0074918570904685166, "phrase": "practical_models"}, {"score": 0.004760017604908536, "phrase": "explicit-state"}, {"score": 0.0045726187330434025, "phrase": "state_space_search"}, {"score": 0.004443276312972159, "phrase": "satisfactory_state_space"}, {"score": 0.004243862930012258, "phrase": "memory_efficiency"}, {"score": 0.0041001740903338834, "phrase": "complete_verification"}, {"score": 0.0038713805573219297, "phrase": "reliability_indicator"}, {"score": 0.0037834649508375544, "phrase": "coverage_estimate"}, {"score": 0.0036763623220059933, "phrase": "existing_approaches"}, {"score": 0.003634371940842838, "phrase": "coverage_estimation"}, {"score": 0.0034911335714333507, "phrase": "verification_run"}, {"score": 0.003431481042678356, "phrase": "small_portion"}, {"score": 0.0033922781038328844, "phrase": "state_space"}, {"score": 0.0030239842475439814, "phrase": "coverage_estimation_methods"}, {"score": 0.0028715299874549245, "phrase": "reached_states"}, {"score": 0.002806256131739047, "phrase": "bloom_filter"}, {"score": 0.0027424619603260837, "phrase": "estimation_accuracy"}, {"score": 0.0026494723416072316, "phrase": "multiple_verification_runs"}, {"score": 0.0024586427394152196, "phrase": "experimental_results"}, {"score": 0.002375253757224999, "phrase": "proposed_growth_curve"}, {"score": 0.0021416404045850224, "phrase": "conventional_ones"}, {"score": 0.0021049977753042253, "phrase": "actual_coverage"}], "paper_keywords": ["Coverage estimation", " model checking", " bitstate hashing"], "paper_abstract": "Explicit-state model checking which is conducted by state space search has difficulty in exploring satisfactory state space because of its memory requirements. Though bitstate hashing achieves memory efficiency, it cannot guarantee complete verification. Thus, it is desirable to provide a reliability indicator such as a coverage estimate. However, the existing approaches for coverage estimation are not very accurate when a verification run covers a small portion of state space. This mainly stems from the lack of information that reflects characteristics of models. Therefore, we propose coverage estimation methods using a growth curve that approximates an increase in reached states by enlarging a bloom filter. Our approaches improve estimation accuracy by leveraging the statistics from multiple verification runs. Coverage is estimated by fitting the growth curve to these statistics. Experimental results confirm the validity of the proposed growth curve and the applicability of our approaches to practical models. In fact, for practical models, our approaches outperformed the conventional ones when the actual coverage is relatively low.", "paper_title": "Coverage Estimation in Model Checking with Bitstate Hashing", "paper_id": "WOS:000316618800003"}