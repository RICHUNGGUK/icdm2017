{"auto_keywords": [{"score": 0.0474005076051496, "phrase": "rt_links"}, {"score": 0.011267285256765108, "phrase": "developers'_preferred_types"}, {"score": 0.008713768692145006, "phrase": "source_code_entities"}, {"score": 0.008661393942763669, "phrase": "requirements_traceability"}, {"score": 0.0046432244185370605, "phrase": "program_comprehension"}, {"score": 0.004615202066192795, "phrase": "maintenance_tasks"}, {"score": 0.004504786051750715, "phrase": "laborious_and_resource-consuming_task"}, {"score": 0.004477595431209663, "phrase": "information_retrieval"}, {"score": 0.004469028146876837, "phrase": "lsi"}, {"score": 0.004344073762982718, "phrase": "traceability_links"}, {"score": 0.004291781840734823, "phrase": "ir-based_techniques"}, {"score": 0.004252974635533396, "phrase": "low_accuracy"}, {"score": 0.004051828608343507, "phrase": "human_intensive_process"}, {"score": 0.003860158978186175, "phrase": "ir-based_rt_techniques"}, {"score": 0.0037336520904376687, "phrase": "empirical_study"}, {"score": 0.0036222340564869625, "phrase": "eye-tracking_system"}, {"score": 0.0035894592199604246, "phrase": "developers'_eye_movements"}, {"score": 0.003492897128445075, "phrase": "obtained_data"}, {"score": 0.003327579120205541, "phrase": "implementation-level_source_code_terms"}, {"score": 0.0032775342939895358, "phrase": "method_names"}, {"score": 0.0032087293763784722, "phrase": "eye-tracking_case_study"}, {"score": 0.003141364320497748, "phrase": "semantic_content"}, {"score": 0.0030291453183733897, "phrase": "developers'_attention"}, {"score": 0.0028944757265206332, "phrase": "improved_term_weighting_scheme"}, {"score": 0.0025794354905140527, "phrase": "term_weighting_scheme"}, {"score": 0.002548331088496964, "phrase": "thisweighting_scheme"}, {"score": 0.002525248554951453, "phrase": "ir_technique"}, {"score": 0.0024202575033591867, "phrase": "new_technique"}, {"score": 0.002405618568415162, "phrase": "rt_link_recovery"}, {"score": 0.0023550749587772203, "phrase": "lucene"}, {"score": 0.002333738303480471, "phrase": "pooka"}, {"score": 0.0022847009758393405, "phrase": "proposed_technique"}, {"score": 0.002236691727668501, "phrase": "recovered_rt_links"}, {"score": 0.0021056387183389126, "phrase": "domain"}], "paper_keywords": [""], "paper_abstract": "Requirements Traceability (RT) links help developers during program comprehension and maintenance tasks. However, creating RT links is a laborious and resource-consuming task. Information Retrieval (IR) techniques are useful to automatically create traceability links. However, IR-based techniques typically have low accuracy (precision, recall, or both) and thus, creating RT links remains a human intensive process. We conjecture that understanding how developers verify RT links could help improve the accuracy of IR-based RT techniques to create RT links. Consequently, we perform an empirical study consisting of four case studies. First, we use an eye-tracking system to capture developers' eye movements while they verify RT links. We analyse the obtained data to identify and rank developers' preferred types of Source Code Entities (SCEs), e.g., domain vs. implementation-level source code terms and class names vs. method names. Second, we perform another eye-tracking case study to confirm that it is the semantic content of the developers' preferred types of SCEs and not their locations that attract developers' attention and help them in their task to verify RT links. Third, we propose an improved term weighting scheme, i.e., Developers Preferred Term Frequency/Inverse Document Frequency (D P T F / I D F), that uses the knowledge of the developers' preferred types of SCEs to give more importance to these SCEs into the term weighting scheme. We integrate thisweighting scheme with an IR technique, i.e., Latent Semantic Indexing (LSI), to create a new technique to RT link recovery. Using three systems (iTrust, Lucene, and Pooka), we show that the proposed technique statistically improves the accuracy of the recovered RT links over a technique based on LSI and the usual Term Frequency/Inverse Document Frequency (T F / I D F) weighting scheme. Finally, we compare the newly proposed D P T F / I D F with our original Domain Or Implementation/Inverse Document Frequency (D O I / I D F) weighting scheme.", "paper_title": "An empirical study on the importance of source code entities for requirements traceability", "paper_id": "WOS:000353824000007"}