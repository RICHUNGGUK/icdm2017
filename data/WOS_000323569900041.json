{"auto_keywords": [{"score": 0.03540263534878556, "phrase": "openmp"}, {"score": 0.026591006512081523, "phrase": "power_consumption"}, {"score": 0.00481495049065317, "phrase": "dynamic_power_management_technique_for_multicore"}, {"score": 0.004761850836420121, "phrase": "embedded_mobile_devices"}, {"score": 0.004606023493393774, "phrase": "ubiquitous_computing_environments"}, {"score": 0.004406121974246201, "phrase": "high_speed_data_processing"}, {"score": 0.004333406378146173, "phrase": "system_management"}, {"score": 0.004099542199088835, "phrase": "low-power_designs"}, {"score": 0.004054299982508618, "phrase": "power-aware_system_management"}, {"score": 0.00392153537973826, "phrase": "multicore_systems"}, {"score": 0.0037721073763702486, "phrase": "effective_power_management_technique"}, {"score": 0.0034707339811048403, "phrase": "novel_power_management_technique"}, {"score": 0.0033945024593626675, "phrase": "parallel_programming_model"}, {"score": 0.0033015555065209865, "phrase": "well-known_programming_paradigm"}, {"score": 0.003265090934183249, "phrase": "shared_memory_multicore_systems"}, {"score": 0.003158088307044493, "phrase": "library_routines"}, {"score": 0.003123203316511694, "phrase": "parallel_processing"}, {"score": 0.0030376623293574905, "phrase": "invoked_library_routines"}, {"score": 0.002763919794139171, "phrase": "necessary_cores"}, {"score": 0.0025713100093065645, "phrase": "unnecessary_cores"}, {"score": 0.0023525345110929326, "phrase": "openmp-compliant_compiler"}], "paper_keywords": ["Dynamic power management", " low-power design", " multicore", " open multiprocessing (OpenMP)"], "paper_abstract": "As the proliferation of ubiquitous computing environments becomes a reality, the need for high speed data processing and intelligent system management increases rapidly. In particular, the need for low-power designs and power-aware system management is getting stronger. While multicore systems are deployed in many embedded system areas, an effective power management technique for multicores is not available yet. In this paper, we propose a novel power management technique based on a parallel programming model. OpenMP is a well-known programming paradigm for shared memory multicore systems. OpenMP is based on library routines for parallel processing. By identifying the invoked library routines, how many cores will be adequate for a certain application can be determined, and the number of necessary cores for a given task can be determined during run-time. By turning off unnecessary cores, we can reduce power consumption. We implemented this method by adding capabilities in an OpenMP-compliant compiler and conducted experiments with various benchmarks. We were able to reduce the power consumption by 18% on average compared to other conventional power management methods.", "paper_title": "Dynamic Power Management Technique for Multicore Based Embedded Mobile Devices", "paper_id": "WOS:000323569900041"}