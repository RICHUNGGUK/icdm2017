{"auto_keywords": [{"score": 0.034449797995279155, "phrase": "virtualized_environment"}, {"score": 0.00481495049065317, "phrase": "open_source_application_servers"}, {"score": 0.004775726266706856, "phrase": "multimedia_services"}, {"score": 0.004603115982404017, "phrase": "experimental_analysis"}, {"score": 0.004565609517511076, "phrase": "open_source_software_packages"}, {"score": 0.00447316895126645, "phrase": "carrier-grade_multimedia_services"}, {"score": 0.004276306563103443, "phrase": "java_call_control_apis"}, {"score": 0.004224130367280183, "phrase": "sip_sessions"}, {"score": 0.004189698902282913, "phrase": "mgcp_connections"}, {"score": 0.004138575034269399, "phrase": "jcc_implementation"}, {"score": 0.004038183610525504, "phrase": "open_source_platform"}, {"score": 0.0040052617265655035, "phrase": "mobicents_jslee._mobicents"}, {"score": 0.003956379470617348, "phrase": "runtime_environment"}, {"score": 0.003751331782523201, "phrase": "different_networks"}, {"score": 0.0037055370870874484, "phrase": "extensive_experimental_campaign"}, {"score": 0.0036602993802452863, "phrase": "suitable_deployment_strategies"}, {"score": 0.0035423376631308567, "phrase": "service_features"}, {"score": 0.0034990853199511982, "phrase": "main_contribution"}, {"score": 0.003331275574328097, "phrase": "resource_allocation"}, {"score": 0.0031327496009959464, "phrase": "general_guidance"}, {"score": 0.0028862761537904206, "phrase": "server_placement_problem"}, {"score": 0.0027477745788313163, "phrase": "additional_contribution"}, {"score": 0.0026700637696697414, "phrase": "simple_and_effective_model"}, {"score": 0.002626645763725465, "phrase": "achievable_server_throughput"}, {"score": 0.002459902948098627, "phrase": "cpu_time"}, {"score": 0.002429853837580106, "phrase": "sip"}, {"score": 0.002409994070481422, "phrase": "mgcp"}, {"score": 0.0023514343164101332, "phrase": "maximum_sustainable_load"}, {"score": 0.002322689143237591, "phrase": "virtual_machine"}, {"score": 0.002202123699556382, "phrase": "virtualized_instances"}, {"score": 0.0021049977753042253, "phrase": "desired_quality"}], "paper_keywords": [""], "paper_abstract": "This article shows the usage and the experimental analysis of open source software packages for designing and implementing carrier-grade multimedia services. The shown implementation is based on the use of Java Call Control APIs for managing SIP sessions and MGCP connections. This JCC implementation has been integrated within an open source platform, Mobicents JSLEE. Mobicents is a runtime environment suitable for deploying services integrating voice, video, and messaging over different networks. An extensive experimental campaign has allowed suitable deployment strategies to be identified, depending on the service features. The main contribution of this article is to present these strategies, consisting of resource allocation and configuration in a virtualized environment. The results of our experiments are aimed at providing general guidance on configuring servers in a virtualized environment such as a cloud. They can also be helpful to address the server placement problem, which is beyond the scope of this article. An additional contribution of this article consists of a simple and effective model to predict the achievable server throughput, expressed in calls per second. For this purpose, we have measured the CPU time for processing SIP and MGCP messages, and estimated the maximum sustainable load of each virtual machine. In this way, we can preliminarily estimate the number of virtualized instances of the platform needed for handling a given workload with the desired quality of service.", "paper_title": "Optimal Deployment of Open Source Application Servers Providing Multimedia Services", "paper_id": "WOS:000345579700010"}