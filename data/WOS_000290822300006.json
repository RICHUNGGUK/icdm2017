{"auto_keywords": [{"score": 0.04915098975480121, "phrase": "fixed_set"}, {"score": 0.0450904359016086, "phrase": "state_variables"}, {"score": 0.00481495049065317, "phrase": "value_functions"}, {"score": 0.00459393336391459, "phrase": "preference_handling"}, {"score": 0.00455822720851408, "phrase": "ai"}, {"score": 0.004149103940568346, "phrase": "new_value_function"}, {"score": 0.003717925116469845, "phrase": "new_objects"}, {"score": 0.0035056109035307716, "phrase": "preferential_information"}, {"score": 0.0032539388572032563, "phrase": "precise_number"}, {"score": 0.0030800962618484844, "phrase": "relational_models"}, {"score": 0.002973261772253616, "phrase": "probabilistic_relational_models"}, {"score": 0.0027705505273051007, "phrase": "regular_rule-based_languages"}, {"score": 0.00268493828558848, "phrase": "control_rules"}, {"score": 0.0026639507068734907, "phrase": "autonomous_systems"}, {"score": 0.002612194827110595, "phrase": "standard_generalized-additive_value_functions"}, {"score": 0.002501835053002899, "phrase": "specific_set"}, {"score": 0.0024340403320192807, "phrase": "generalized-additive_value_function"}, {"score": 0.00238674051726235, "phrase": "controllable_attributes"}, {"score": 0.0022680085357731196, "phrase": "decision_support_system"}, {"score": 0.002250272652754455, "phrase": "command_and_control_centers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Preference models", " Preference rules", " Relational models", " Rule-based systems", " Command and control automation"], "paper_abstract": "Value functions are defined over a fixed set of outcomes. In work on preference handling in AI, these outcomes are usually a set of assignments over a fixed set of state variables. If the set of variables changes, a new value function must be elicited. Given that in most applications the state variables are properties (attributes) of objects in the world, this implies that the introduction of new objects requires re-elicitation of preferences. However, often, the user has in mind preferential information that is much more generic, and which is relevant to a given type of domain regardless of the precise number of objects of each kind and their properties. Such information requires the introduction of relational models. Following in the footsteps of work on probabilistic relational models (PRMs), we suggest in this work a rule-based, relational language of preferences. This language extends regular rule-based languages and leads to a much more flexible approach for specifying control rules for autonomous systems. It also extends standard generalized-additive value functions to handle a dynamic universe of objects. Given any specific set of objects this specification induces a generalized-additive value function over assignments to the controllable attributes associated with these objects. We then describe a prototype of a decision support system for command and control centers we developed to illustrate and study the use of these rules. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Relational preference rules for control", "paper_id": "WOS:000290822300006"}