{"auto_keywords": [{"score": 0.029201642465283725, "phrase": "scf"}, {"score": 0.00481495049065317, "phrase": "task-level_coordination"}, {"score": 0.004741845603430361, "phrase": "heterogeneous_systems"}, {"score": 0.0047057084749407485, "phrase": "heterogeneous_computing_systems"}, {"score": 0.004511799033574768, "phrase": "manycore_processors"}, {"score": 0.004460309246062286, "phrase": "standard_microprocessors"}, {"score": 0.004392565073466714, "phrase": "increasingly_popular_solution"}, {"score": 0.004359078118356132, "phrase": "future_computing_systems"}, {"score": 0.004276468590041119, "phrase": "energy_efficiency"}, {"score": 0.004227653047394939, "phrase": "programming_languages"}, {"score": 0.00411589720697736, "phrase": "device-level_design"}, {"score": 0.003901135641717704, "phrase": "system-wide_challenges"}, {"score": 0.0038418515481939463, "phrase": "heterogeneous_devices"}, {"score": 0.003769006950727621, "phrase": "ad_hoc_solutions"}, {"score": 0.0036553070575015344, "phrase": "parallel_application_development"}, {"score": 0.0035722806911457545, "phrase": "homogeneous_systems"}, {"score": 0.003438058620195309, "phrase": "hybrid_systems"}, {"score": 0.0031002400518251936, "phrase": "different_programming_tools"}, {"score": 0.0029951555610569225, "phrase": "heterogeneous_processing_devices"}, {"score": 0.0029158847555394714, "phrase": "embedded_systems"}, {"score": 0.0028496055358577512, "phrase": "low-level_architectural_details"}, {"score": 0.0027741761880779535, "phrase": "application_designer"}, {"score": 0.0027215202678634517, "phrase": "application_development_productivity"}, {"score": 0.002690406375639144, "phrase": "higher_levels"}, {"score": 0.0026698611202305715, "phrase": "application_portability"}, {"score": 0.002629238854352447, "phrase": "rapid_design-space_exploration"}, {"score": 0.0025206783724309252, "phrase": "custom_communication_synthesis"}, {"score": 0.0024633601573822114, "phrase": "different_devices"}, {"score": 0.0023981301755351607, "phrase": "performance_improvements"}, {"score": 0.0023798115577749225, "phrase": "generic_solutions"}, {"score": 0.002316788811533867, "phrase": "performance_improvement"}, {"score": 0.002255431275670053, "phrase": "fpga_devices"}, {"score": 0.0021539955106204354, "phrase": "developer_productivity"}, {"score": 0.0021049987157778535, "phrase": "scf."}], "paper_keywords": ["Design", " Languages", " Performance", " Reconfigurable computing", " FPGA", " heterogeneous computing", " communication", " coordination", " productivity", " portability", " accelerators"], "paper_abstract": "Heterogeneous computing systems comprised of accelerators such as FPGAs, GPUs, and manycore processors coupled with standard microprocessors are becoming an increasingly popular solution for future computing systems due to their higher performance and energy efficiency. Although programming languages and tools are evolving to simplify device-level design, programming such systems is still difficult and time-consuming largely due to system-wide challenges involving communication between heterogeneous devices, which currently require ad hoc solutions. Most communication frameworks and APIs which have dominated parallel application development for decades were developed for homogeneous systems, and hence cannot be directly employed for hybrid systems. To solve this problem, this article presents the System Coordination Framework (SCF), which employs message passing to transparently enable communication between tasks described using different programming tools (and languages), and running on heterogeneous processing devices of systems from domains ranging from embedded systems to High-Performance Computing (HPC) systems. By hiding low-level architectural details of the underlying communication from an application designer, SCF can improve application development productivity, provide higher levels of application portability, and offer rapid design-space exploration of different task/device mappings. In addition, SCF enables custom communication synthesis that exploits mechanisms specific to different devices and platforms, which can provide performance improvements over generic solutions employed previously. Our results indicate a performance improvement of 28x and 682x by employing FPGA devices for two applications presented in this article, while simultaneously improving the developer productivity by approximately 2.5 to 5 times by using SCF.", "paper_title": "SCF: A Framework for Task-Level Coordination in Reconfigurable, Heterogeneous Systems", "paper_id": "WOS:000305864100001"}