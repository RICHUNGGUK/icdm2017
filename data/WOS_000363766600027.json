{"auto_keywords": [{"score": 0.04867696472724124, "phrase": "fireworks"}, {"score": 0.00481495049065317, "phrase": "high-throughput_applications"}, {"score": 0.004591345494188032, "phrase": "workflow_software"}, {"score": 0.004510184935928004, "phrase": "high-throughput_calculation"}, {"score": 0.004430452655732319, "phrase": "supercomputing_centers"}, {"score": 0.004100851549096203, "phrase": "materials_science"}, {"score": 0.003818326867123525, "phrase": "demanding_high-throughput_computing_needs"}, {"score": 0.00368442237104581, "phrase": "extensive_support"}, {"score": 0.003576416581189716, "phrase": "concurrent_execution"}, {"score": 0.0035341028694769036, "phrase": "job_packing"}, {"score": 0.0031939996970411027, "phrase": "long-running_projects"}, {"score": 0.0028354207806133153, "phrase": "workflow_graph"}, {"score": 0.0025776913268808124, "phrase": "modern_data-driven_and_high-throughput_science_applications"}, {"score": 0.002414191082427217, "phrase": "python_and_nosql_databases"}, {"score": 0.0022881443200668886, "phrase": "performance_data"}, {"score": 0.0021946656099592608, "phrase": "planned_future_work"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["scientific workflows", " high-throughput computing", " fault-tolerant computing"], "paper_abstract": "This paper introduces FireWorks, a workflow software for running high-throughput calculation workflows at supercomputing centers. FireWorks has been used to complete over 50 million CPU-hours worth of computational chemistry and materials science calculations at the National Energy Research Supercomputing Center. It has been designed to serve the demanding high-throughput computing needs of these applications, with extensive support for (i) concurrent execution through job packing, (ii) failure detection and correction, (iii) provenance and reporting for long-running projects, (iv) automated duplicate detection, and (v) dynamic workflows (i.e., modifying the workflow graph during runtime). We have found that these features are highly relevant to enabling modern data-driven and high-throughput science applications, and we discuss our implementation strategy that rests on Python and NoSQL databases (MongoDB). Finally, we present performance data and limitations of our approach along with planned future work. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "FireWorks: a dynamic workflow system designed for high-throughput applications", "paper_id": "WOS:000363766600027"}