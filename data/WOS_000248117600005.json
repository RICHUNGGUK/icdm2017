{"auto_keywords": [{"score": 0.041272230171990935, "phrase": "query_configuration"}, {"score": 0.031477912925552846, "phrase": "profiled_input_throughput"}, {"score": 0.00481495049065317, "phrase": "fast_streams"}, {"score": 0.0047527118741586055, "phrase": "monitoring_systems"}, {"score": 0.004630626571109149, "phrase": "continuous_queries"}, {"score": 0.00445332728705756, "phrase": "distributed_collaborative_fashion"}, {"score": 0.004310752197635499, "phrase": "query_operators"}, {"score": 0.0038843558517333327, "phrase": "inherent_constraints"}, {"score": 0.0033658327434624457, "phrase": "output_throughput"}, {"score": 0.003133052778244851, "phrase": "instead_the_more_granular_input_throughput"}, {"score": 0.0030326180561817497, "phrase": "throughput_measure"}, {"score": 0.0028228178454284825, "phrase": "expected_behavior"}, {"score": 0.0027681550491613603, "phrase": "input_streams"}, {"score": 0.0024297565926197505, "phrase": "optimal_configuration"}, {"score": 0.002399253439852987, "phrase": "np"}, {"score": 0.0022033327475266496, "phrase": "complexity_limitation"}, {"score": 0.002160640052461594, "phrase": "hill-climbing_heuristics"}, {"score": 0.0021049977753042253, "phrase": "search_space"}], "paper_keywords": ["query processing", " optimization", " database architectures", " distributed applications"], "paper_abstract": "Monitoring systems today often involve continuous queries over streaming data in a distributed collaborative fashion. The distribution of query operators over a network of processors, as well as their processing sequence, form a query configuration with inherent constraints on the throughput that it can support. In this paper, we discuss the implications of measuring and optimizing for output throughput, as well as its limitations. We propose to use instead the more granular input throughput and a version of throughput measure, the profiled input throughput, that is focused on matching the expected behavior of the input streams. We show how we can evaluate a query configuration based on profiled input throughput and that the problem of finding the optimal configuration is NP-hard. Furthermore, we describe how we can overcome the complexity limitation by adapting hill-climbing heuristics to reduce the search space of configurations. We show experimentally that the approach used is not only efficient but also effective.", "paper_title": "WhiteWater: Distributed processing of fast streams", "paper_id": "WOS:000248117600005"}