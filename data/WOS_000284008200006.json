{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_real-time_systems"}, {"score": 0.042921985594396084, "phrase": "utilization_control"}, {"score": 0.03931129542749363, "phrase": "cpu_utilization"}, {"score": 0.004763565662615503, "phrase": "cpu_utilization_control"}, {"score": 0.004563427013973105, "phrase": "effective_way"}, {"score": 0.004143196873246147, "phrase": "current_research"}, {"score": 0.004011867299107537, "phrase": "task_rate_adaptation"}, {"score": 0.0038638811223100184, "phrase": "rate_saturation"}, {"score": 0.0038226070564362697, "phrase": "discrete_task_rates"}, {"score": 0.00366185681714204, "phrase": "real-time_periodic_task"}, {"score": 0.003526735797659508, "phrase": "execution_time"}, {"score": 0.0034890505116128606, "phrase": "cpu_frequency_scaling"}, {"score": 0.003378385493203297, "phrase": "task_execution_times"}, {"score": 0.003342280102112269, "phrase": "power-efficient_utilization_control"}, {"score": 0.0032016662821597506, "phrase": "pauc"}, {"score": 0.003100085797251317, "phrase": "coordinated_cpu_utilization_control_architecture"}, {"score": 0.003050508020268648, "phrase": "primary_control_loop_uses"}, {"score": 0.0028293966058473476, "phrase": "secondary_control_loop"}, {"score": 0.0027991418754844347, "phrase": "rate_adaptation"}, {"score": 0.00266693888510356, "phrase": "cluster_level"}, {"score": 0.0026242699269026204, "phrase": "finer_timescale"}, {"score": 0.002473560912156024, "phrase": "well-established_control_theory"}, {"score": 0.002447101794397243, "phrase": "theoretically_guaranteed_control_accuracy"}, {"score": 0.002382182688788248, "phrase": "empirical_results"}, {"score": 0.0022574539115388054, "phrase": "state-of-the-art_utilization_control_algorithm"}, {"score": 0.0021507795710951384, "phrase": "extensive_simulation_results"}], "paper_keywords": ["Feedback control", " power-aware computing", " real-time embedded systems", " utilization control"], "paper_abstract": "CPU utilization control has recently been demonstrated to be an effective way of meeting end-to-end deadlines for distributed real-time systems running in unpredictable environments. However, current research on utilization control focuses exclusively on task rate adaptation, which cannot effectively handle rate saturation and discrete task rates. Since the CPU utilization contributed by a real-time periodic task is determined by both its rate and execution time, CPU frequency scaling can be used to adapt task execution times for power-efficient utilization control. In this paper, we present PAUC, a two-layer coordinated CPU utilization control architecture. The primary control loop uses frequency scaling to locally control the CPU utilization of each processor, while the secondary control loop adopts rate adaptation to control the utilizations of all the processors at the cluster level on a finer timescale. Both the two control loops are designed and coordinated based on well-established control theory for theoretically guaranteed control accuracy and system stability. Empirical results on a physical testbed demonstrate that our control solution outperforms a state-of-the-art utilization control algorithm by having more accurate control and less power consumption. Extensive simulation results also show that our solution can significantly improve the feasibility of utilization control.", "paper_title": "PAUC: Power-Aware Utilization Control in Distributed Real-Time Systems", "paper_id": "WOS:000284008200006"}