{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "probabilistic_alias_analysis_of_executable_code"}, {"score": 0.003293142761521425, "phrase": "alias_analysis_and_memory_disambiguation_algorithms"}, {"score": 0.0030794433253250476, "phrase": "diablo_post-link_optimizer"}, {"score": 0.0024897902536499005, "phrase": "benchmark_programs"}, {"score": 0.0024075916292945715, "phrase": "overall_average_error"}, {"score": 0.002276566401216226, "phrase": "post-link_optimizer"}, {"score": 0.002176887956041267, "phrase": "obtained_quantitative_information"}, {"score": 0.0021049977753042253, "phrase": "aggressive_analyses"}], "paper_keywords": ["Alias analysis", " Compiler", " Post-link optimizer", " Optimization"], "paper_abstract": "In this paper we present a method for flow-sensitive, context-insensitive probabilistic alias analysis at the assembly level. A memory disambiguation algorithm is also developed for revealing the probability of two registers holding the same memory location. The alias analysis and memory disambiguation algorithms are implemented based on the Diablo post-link optimizer. Experimental results show that the technique can estimate the probabilities that registers refer to the same memory address in benchmark programs with an overall average error of about 6.8%. The post-link optimizer can leverage the obtained quantitative information to facilitate aggressive analyses and optimizations.", "paper_title": "Probabilistic Alias Analysis of Executable Code", "paper_id": "WOS:000293776300001"}