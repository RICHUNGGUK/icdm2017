{"auto_keywords": [{"score": 0.04497268099057208, "phrase": "maximum_weight"}, {"score": 0.00481495049065317, "phrase": "special_subgraph"}, {"score": 0.004720419202969916, "phrase": "weighted_directed_graph"}, {"score": 0.0039748192550806815, "phrase": "original_graph"}, {"score": 0.0033465923623290034, "phrase": "data_compression_application"}, {"score": 0.0032591491777773035, "phrase": "edge_weights"}, {"score": 0.002931569771634119, "phrase": "additional_benefit"}, {"score": 0.0025849489224175548, "phrase": "faster_algorithms"}, {"score": 0.0024678216843278806, "phrase": "small_factor"}, {"score": 0.0023096222276192194, "phrase": "edge-disjoint_branchings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["analysis of algorithms", " graph algorithms"], "paper_abstract": "We consider a special subgraph of a weighted directed graph: one comprising only the k heaviest edges incoming to each vertex. We show that the maximum weight branching in this subgraph closely approximates the maximum weight branching in the original graph. Specifically, it is within a factor of k/(k + 1). Our interest in finding branchings in this subgraph is motivated by a data compression application in which calculating edge weights is expensive but estimating which are the heaviest k incoming edges is easy. An additional benefit is that since algorithms for finding branchings run in time linear in the number of edges our results imply faster algorithms although we sacrifice optimality by a small factor. We also extend our results to the case of edge-disjoint branchings of maximum weight and to maximum weight spanning forests. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Approximate maximum weight branchings", "paper_id": "WOS:000238003400003"}