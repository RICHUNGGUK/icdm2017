{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "gaussian_mixture_models"}, {"score": 0.004684157900507474, "phrase": "data_streams"}, {"score": 0.004556901872357751, "phrase": "block_evolution"}, {"score": 0.004372442291178139, "phrase": "new_method"}, {"score": 0.004138010495069077, "phrase": "gaussian_mixture_model"}, {"score": 0.003970439654470374, "phrase": "data_stream"}, {"score": 0.0034118234596993836, "phrase": "local_gaussian_mixtures"}, {"score": 0.002931569771634119, "phrase": "closest_components"}, {"score": 0.002851790448644913, "phrase": "time_and_space_complexity_analysis"}, {"score": 0.002286781334850213, "phrase": "standard_em_algorithm"}, {"score": 0.0021049977753042253, "phrase": "required_memory"}], "paper_keywords": [""], "paper_abstract": "A new method for maintaining a Gaussian mixture model of a data stream that arrives in blocks is presented. The method constructs local Gaussian mixtures for each block of data and iteratively merges pairs of closest components. Time and space complexity analysis of the presented approach demonstrates that it is 1-2 orders of magnitude more efficient than the standard EM algorithm, both in terms of required memory and runtime.", "paper_title": "Maintaining Gaussian mixture models of data streams under block evolution", "paper_id": "WOS:000238389200171"}