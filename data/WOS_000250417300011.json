{"auto_keywords": [{"score": 0.03418921296074228, "phrase": "sigma"}, {"score": 0.01513162794308518, "phrase": "suffix_array"}, {"score": 0.013380574191279008, "phrase": "index_data_structures"}, {"score": 0.00481495049065317, "phrase": "compressed_suffix_arrays"}, {"score": 0.004568525347438891, "phrase": "fundamental_index_data_structure"}, {"score": 0.004376273644295806, "phrase": "compressed_suffix_array"}, {"score": 0.003791763445590174, "phrase": "w.k._sung"}, {"score": 0.0037199473428123175, "phrase": "time-and-space_barrier"}, {"score": 0.0036669760226536977, "phrase": "full-text_indices"}, {"score": 0.0034790978593553794, "phrase": "computer_science"}, {"score": 0.0032850648549389025, "phrase": "construction_algorithm"}, {"score": 0.0030140547908298404, "phrase": "fastest_algorithm"}, {"score": 0.0028053237950173508, "phrase": "efficient_algorithm"}, {"score": 0.00264877746892349, "phrase": "csa"}, {"score": 0.0025737890313763407, "phrase": "burrows-wheeler_transform"}, {"score": 0.0024185182010749273, "phrase": "working_space"}, {"score": 0.0022617389804167943, "phrase": "hon_et_al"}, {"score": 0.002187194307878705, "phrase": "least_working_space"}, {"score": 0.002166349705365602, "phrase": "alphabet-independent_linear-time_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["compressed suffix array", " FM-index", " index data structure", " burrows-wheeler transform"], "paper_abstract": "The suffix array is a fundamental index data structure in string algorithms and bioinformatics, and the compressed suffix array (CSA) and the FM-index are its compressed versions. Many algorithms for constructing these index data structures have been developed. Recently, Hon et al. [W.K. Hon, K. Sadakane, W.K. Sung, Breaking a time-and-space barrier in constructing full-text indices, in: Proceedings of the 44th Annual IEEE Symposium on Foundations of Computer Science, 2003, pp. 251-260] proposed a construction algorithm using O(n log log vertical bar Sigma vertical bar) time and O(n log vertical bar Sigma vertical bar)-bit working space, which is the fastest algorithm using O(n log vertical bar Sigma vertical bar)-bit working space. In this paper we give an efficient algorithm to construct the index data structures. Our algorithm constructs the suffix array, the CSA, the FM-index, and Burrows-Wheeler transform using alphabet-independent O(n) time and O(n log vertical bar Sigma vertical bar log(vertical bar Sigma vertical bar)(alpha) n)-bit working space, where alpha = log(3) 2. Our algorithm takes less time and more space than Hon et al.'s algorithm. Our algorithm uses least working space among alphabet-independent linear-time algorithms. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Alphabet-independent linear-time construction of compressed suffix arrays using o(n log n)-bit working space", "paper_id": "WOS:000250417300011"}