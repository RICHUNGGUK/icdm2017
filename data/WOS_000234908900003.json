{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "linux"}, {"score": 0.04284700118448199, "phrase": "rtai"}, {"score": 0.010481028806997084, "phrase": "budget-based_resource_reservation"}, {"score": 0.003965468669507077, "phrase": "hard_and_soft_real-time_tasks"}, {"score": 0.0036324746826127997, "phrase": "computation_budget"}, {"score": 0.0034984340449789745, "phrase": "backward_compatibility"}, {"score": 0.0033905067962602515, "phrase": "original_rtai_design"}, {"score": 0.0030862341714020694, "phrase": "real-time_tasks"}, {"score": 0.0025892330566358503, "phrase": "linux_source_code"}, {"score": 0.002431797888365548, "phrase": "rtai_scheduler"}, {"score": 0.002283913454238574, "phrase": "proposed_implementation"}, {"score": 0.0021049977753042253, "phrase": "pii_and_piii_platforms"}], "paper_keywords": ["RTAL", " Linux", " QoS", " budget reservation", " real-time Linux"], "paper_abstract": "The purpose of this paper is to propose a budget-based RTAI (Real-Time Application Interface) implementation for real-time tasks over Linux on x86 architectures, where RTAI provides a light-weight, high-performance interface for hard and soft real-time tasks over Linux. Our revised RTAI API's are extended to enable programmers to specify a computation budget for each task, and backward compatibility is maintained with the original RTAI design. Different from the past work, we focus on the implementation of budget-based resource reservation for real-time tasks, which is made complicated by the relationship between RTAI and Linux. Modifications of RTAI are limited to a few procedures without any change made to the Linux source code, such as the timer interrupt handler, the RTAI scheduler, or rt_task_wait_Period(). The feasibility of the proposed implementation is demonstrated by a system operating under Linux 2.4.0-test10 and RTAI 24.1.2 on PII and PIII platforms.", "paper_title": "Real-time Linux with budget-based resource reservation", "paper_id": "WOS:000234908900003"}