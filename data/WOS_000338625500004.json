{"auto_keywords": [{"score": 0.0474894292969371, "phrase": "software_development"}, {"score": 0.04398954841731946, "phrase": "mining_source_code"}, {"score": 0.00481495049065317, "phrase": "fine-grained_source_code_mining"}, {"score": 0.0046993598473345395, "phrase": "ast_nodes"}, {"score": 0.00466684417181804, "phrase": "software_repositories"}, {"score": 0.0046184900568047565, "phrase": "vast_wealth"}, {"score": 0.004293693193836074, "phrase": "new_software_engineering_approaches"}, {"score": 0.004161553532799662, "phrase": "significant_insights"}, {"score": 0.004132743580000062, "phrase": "software_development_artifacts"}, {"score": 0.0040334640350288, "phrase": "source_code"}, {"score": 0.00395026016389782, "phrase": "difficult_task"}, {"score": 0.003922907208353323, "phrase": "previous_approaches"}, {"score": 0.003697895355947004, "phrase": "mining_task"}, {"score": 0.0034615969985956866, "phrase": "human_and_computational_scalability_issues"}, {"score": 0.003366662001961897, "phrase": "substantial_challenges"}, {"score": 0.0032067276476968032, "phrase": "fine-grained_level"}, {"score": 0.0031187606191012012, "phrase": "full_history_information"}, {"score": 0.0030226700832113942, "phrase": "domain-specific_language_features"}, {"score": 0.0029193609786176632, "phrase": "object-oriented_visitors"}, {"score": 0.002879029968532794, "phrase": "default_depth-first_traversal_strategy"}, {"score": 0.002809782999919957, "phrase": "custom_traversals"}, {"score": 0.002704306866425829, "phrase": "boa_infrastructure"}, {"score": 0.002685558057339722, "phrase": "software_repository_mining"}, {"score": 0.002648448458159033, "phrase": "code_generation_strategy"}, {"score": 0.002630085891013006, "phrase": "java_code"}, {"score": 0.0023942700905678735, "phrase": "code_size"}, {"score": 0.002344800544183559, "phrase": "small_controlled_experiment"}, {"score": 0.0022883734727569298, "phrase": "mining_tasks"}, {"score": 0.0022101055924375725, "phrase": "prior_training"}, {"score": 0.002171979107594173, "phrase": "substantial_number"}, {"score": 0.0021049977753042253, "phrase": "study_participants"}], "paper_keywords": ["visitor pattern", " source code mining", " Boa"], "paper_abstract": "Software repositories contain a vast wealth of information about software development. Mining these repositories has proven useful for detecting patterns in software development, testing hypotheses for new software engineering approaches, etc. Specifically, mining source code has yielded significant insights into software development artifacts and processes. Unfortunately, mining source code at a large-scale remains a difficult task. Previous approaches had to either limit the scope of the projects studied, limit the scope of the mining task to be more coarse-grained, or sacrifice studying the history of the code due to both human and computational scalability issues. In this paper we address the substantial challenges of mining source code: a) at a very large scale; b) at a fine-grained level of detail; and c) with full history information. To address these challenges, we present domain-specific language features for source code mining. Our language features are inspired by object-oriented visitors and provide a default depth-first traversal strategy along with two expressions for defining custom traversals. We provide an implementation of these features in the Boa infrastructure for software repository mining and describe a code generation strategy into Java code. To show the usability of our domain-specific language features, we reproduced over 40 source code mining tasks from two large-scale previous studies in just 2 person-weeks. The resulting code for these tasks show between 2.0x-4.8x reduction in code size. Finally we perform a small controlled experiment to gain insights into how easily mining tasks written using our language features can be understood, with no prior training. We show a substantial number of tasks (77%) were understood by study participants, in about 3 minutes per task.", "paper_title": "Declarative Visitors to Ease Fine-grained Source Code Mining with Full History on Billions of AST Nodes", "paper_id": "WOS:000338625500004"}