{"auto_keywords": [{"score": 0.03858583796759457, "phrase": "suffix_arrays"}, {"score": 0.03238661647911658, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "efficient_index_structures"}, {"score": 0.004775531918452571, "phrase": "dna_search_algorithms"}, {"score": 0.004640079189342692, "phrase": "large_datasets"}, {"score": 0.004527024978801684, "phrase": "deoxyribonucleic_acid"}, {"score": 0.00445318311339027, "phrase": "sequence_alignment"}, {"score": 0.004362564831572539, "phrase": "optimal_local_alignment_algorithms"}, {"score": 0.004291394605702247, "phrase": "smith-waterman"}, {"score": 0.004186799638538032, "phrase": "practical_applications"}, {"score": 0.004067977399245212, "phrase": "indexed_search_procedures"}, {"score": 0.0038403151693333017, "phrase": "data_structures"}, {"score": 0.003700709435644458, "phrase": "suffix_trees"}, {"score": 0.003479180627368156, "phrase": "comparative_analysis"}, {"score": 0.0034506596895901003, "phrase": "highly_optimized_parallel_implementations"}, {"score": 0.003422371752150812, "phrase": "index-based_search_algorithms"}, {"score": 0.0029631248341951064, "phrase": "cpu_implementations"}, {"score": 0.00292674497467906, "phrase": "obtained_experimental_results"}, {"score": 0.002890810475014827, "phrase": "gpu_implementations"}, {"score": 0.0027856252557826467, "phrase": "achieved_performance"}, {"score": 0.002740109776120878, "phrase": "memory_accesses"}, {"score": 0.002575934917174136, "phrase": "hash_tables"}, {"score": 0.0025027144548626975, "phrase": "largest_datasets"}, {"score": 0.0024416087858984644, "phrase": "quad-core_cpu"}, {"score": 0.0022484715639779153, "phrase": "suffix-array_index"}, {"score": 0.002166607745253829, "phrase": "high-performance_bioinfomatics_applications"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["GPGPU", " indexed search", " bioinformatics"], "paper_abstract": "Because of the large datasets that are usually involved in deoxyribonucleic acid (DNA) sequence alignment, the use of optimal local alignment algorithms (e.g., Smith-Waterman) is often unfeasible in practical applications. As such, more efficient solutions that rely on indexed search procedures are often preferred to significantly reduce the time to obtain such alignments. Some data structures that are usually adopted to build such indexes are suffix trees, suffix arrays, and the hash tables of q-mers. This paper presents a comparative analysis of highly optimized parallel implementations of index-based search algorithms using these three distinct data structures, considering two different parallel platforms: a homogeneous multi-core central processing unit (CPU) and a NVidia Fermi graphics processing unit (GPU). Contrasting to what happens with CPU implementations, the obtained experimental results reveal that GPU implementations clearly favor the suffix arrays, because of the achieved performance in terms of memory accesses. Furthermore, the results also reveal that both the suffix trees and suffix arrays outperform the hash tables of q-mers when dealing with the largest datasets. When compared with a quad-core CPU, the results demonstrate the possibility to achieve speedups as high as 65 with the GPU when considering a suffix-array index, thus making it an adequate choice for high-performance bioinfomatics applications.Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Implementation and performance analysis of efficient index structures for DNA search algorithms in parallelplatforms", "paper_id": "WOS:000355001700010"}