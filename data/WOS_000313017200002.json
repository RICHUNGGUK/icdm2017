{"auto_keywords": [{"score": 0.04107868567004356, "phrase": "cs"}, {"score": 0.00481495049065317, "phrase": "structural_optimization_problems"}, {"score": 0.004342430078306461, "phrase": "cuckoo_search"}, {"score": 0.004042635935882651, "phrase": "structural_optimization_tasks"}, {"score": 0.0037040785566765954, "phrase": "vy_flights"}, {"score": 0.003531474887552889, "phrase": "benchmark_nonlinear_constrained_optimization_problem"}, {"score": 0.0033668870709083884, "phrase": "structural_engineering_optimization_problems"}, {"score": 0.0030847461428168614, "phrase": "specialized_literature"}, {"score": 0.0029409171055888804, "phrase": "cs_algorithm"}, {"score": 0.0025687008721685454, "phrase": "optimal_solutions"}, {"score": 0.002372103459168231, "phrase": "best_solutions"}, {"score": 0.0022977342663599042, "phrase": "existing_methods"}, {"score": 0.0022434880661725493, "phrase": "unique_search_features"}, {"score": 0.0021049977753042253, "phrase": "future_research"}], "paper_keywords": ["Cuckoo search", " Structural optimization", " Engineering design", " Metaheuristic algorithm"], "paper_abstract": "In this study, a new metaheuristic optimization algorithm, called cuckoo search (CS), is introduced for solving structural optimization tasks. The new CS algorithm in combination with L,vy flights is first verified using a benchmark nonlinear constrained optimization problem. For the validation against structural engineering optimization problems, CS is subsequently applied to 13 design problems reported in the specialized literature. The performance of the CS algorithm is further compared with various algorithms representative of the state of the art in the area. The optimal solutions obtained by CS are mostly far better than the best solutions obtained by the existing methods. The unique search features used in CS and the implications for future research are finally discussed in detail.", "paper_title": "Cuckoo search algorithm: a metaheuristic approach to solve structural optimization problems", "paper_id": "WOS:000313017200002"}