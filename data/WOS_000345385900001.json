{"auto_keywords": [{"score": 0.04834686887008023, "phrase": "mapreduce"}, {"score": 0.043926853935372656, "phrase": "different_storage_models"}, {"score": 0.033723459777472084, "phrase": "pax-store"}, {"score": 0.00481495049065317, "phrase": "hc-store"}, {"score": 0.0047395356621991935, "phrase": "mapreduce's_foot"}, {"score": 0.004568108391981922, "phrase": "popular_framework"}, {"score": 0.004520272777451894, "phrase": "large-scale_data_analysis"}, {"score": 0.00433386573276633, "phrase": "mapreduce's_performance"}, {"score": 0.004265953661191515, "phrase": "recent_work"}, {"score": 0.0040047396607954325, "phrase": "mapreduce_platforms"}, {"score": 0.0039006600544599537, "phrase": "data_access_patterns"}, {"score": 0.0038597866217852353, "phrase": "different_queries"}, {"score": 0.0037397086147485897, "phrase": "storage_model"}, {"score": 0.003623352647973122, "phrase": "optimal_performance"}, {"score": 0.0031098631445657158, "phrase": "hybrid_storage_system"}, {"score": 0.002858313353461727, "phrase": "incoming_mapreduce_tasks"}, {"score": 0.0027258422018680453, "phrase": "underlying_pure_column-store"}, {"score": 0.0025052769325080255, "phrase": "cost_model"}, {"score": 0.0024529757621396717, "phrase": "data_access_strategy"}, {"score": 0.0021049977753042253, "phrase": "diverse_workload"}], "paper_keywords": ["MapReduce", " Hadoop", " HC-store", " cost model", " column-store", " PAX-store"], "paper_abstract": "MapReduce is a popular framework for large-scale data analysis. As data access is critical for MapReduce's performance, some recent work has applied different storage models, such as column-store or PAX-store, to MapReduce platforms. However, the data access patterns of different queries are very different. No storage model is able to achieve the optimal performance alone. In this paper, we study how MapReduce can benefit from the presence of two different column-store models - pure column-store and PAX-store. We propose a hybrid storage system called hybrid columnstore (HC-store). Based on the characteristics of the incoming MapReduce tasks, our storage model can determine whether to access the underlying pure column-store or PAX-store. We studied the properties of the different storage models and create a cost model to decide the data access strategy at runtime. We have implemented HC-store on top of Hadoop. Our experimental results show that HC-store is able to outperform PAX-store and column-store, especially when confronted with diverse workload.", "paper_title": "HC-Store: putting MapReduce's foot in two camps", "paper_id": "WOS:000345385900001"}