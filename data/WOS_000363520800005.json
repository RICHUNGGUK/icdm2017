{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "rapid_recovery"}, {"score": 0.004757366891541805, "phrase": "overload_control"}, {"score": 0.004719359108879602, "phrase": "large-scale_service_systems"}, {"score": 0.0046256566852302256, "phrase": "automatic_overload_control"}, {"score": 0.004533806239310673, "phrase": "multiserver_queues"}, {"score": 0.0044795698035664695, "phrase": "call_centers"}, {"score": 0.004117579919425373, "phrase": "unexpected_overloads"}, {"score": 0.004068302313449334, "phrase": "proposed_overload_control"}, {"score": 0.0037999551521987426, "phrase": "queue_lengths"}, {"score": 0.0037095162593960727, "phrase": "activation_threshold"}, {"score": 0.003635790924434452, "phrase": "activation_threshold_parameters"}, {"score": 0.0031590250068577867, "phrase": "normal_loading"}, {"score": 0.003083793024782014, "phrase": "suddenly_shifts"}, {"score": 0.0029504765287722465, "phrase": "lower_thresholds"}, {"score": 0.002915125480162171, "phrase": "queue_ratios"}, {"score": 0.002868646843975439, "phrase": "one-way_sharing"}, {"score": 0.0027556576784848207, "phrase": "complex_dynamics"}, {"score": 0.0027008385562908425, "phrase": "new_six-dimensional_fluid_approximation"}, {"score": 0.0026471070725516467, "phrase": "time-varying_arrival_rates"}, {"score": 0.002604890546456604, "phrase": "previous_fluid_approximation"}, {"score": 0.0025736694380861604, "phrase": "stochastic_averaging_principle"}, {"score": 0.0024822279007111255, "phrase": "new_algorithm"}, {"score": 0.0024230746206056536, "phrase": "system_performance"}, {"score": 0.0023940274498526213, "phrase": "effective_control_parameters"}, {"score": 0.0022630008787375435, "phrase": "inefficient_nearly_periodic_behavior"}, {"score": 0.0022179605282337395, "phrase": "oscillating_equilibrium"}, {"score": 0.0021049977753042253, "phrase": "control_parameters"}], "paper_keywords": ["service systems", " overload control", " congestion collapse", " time-varying queues", " many-server queues", " recover after overload incident", " fluid models"], "paper_abstract": "We consider an automatic overload control for two large service systems modeled as multiserver queues such as call centers. We assume that the two systems are designed to operate independently, but want to help each other respond to unexpected overloads. The proposed overload control automatically activates sharing (sending some customers from one system to the other) once a ratio of the queue lengths in the two systems crosses an activation threshold (with ratio and activation threshold parameters for each direction). In this paper, we are primarily concerned with ensuring that the system recovers rapidly after the overload is over, either because (i) the two systems return to normal loading or (ii) the direction of the overload suddenly shifts in the opposite direction. To achieve rapid recovery, we introduce lower thresholds for the queue ratios, below which one-way sharing is released. As a basis for studying the complex dynamics, we develop a new six-dimensional fluid approximation for a system with time-varying arrival rates, extending a previous fluid approximation involving a stochastic averaging principle. We conduct simulations to confirm that the new algorithm is effective for predicting the system performance and choosing effective control parameters. The simulation and the algorithm show that the system can experience an inefficient nearly periodic behavior, corresponding to an oscillating equilibrium (congestion collapse) if the sharing is strongly inefficient and the control parameters are set inappropriately.", "paper_title": "Achieving Rapid Recovery in an Overload Control for Large-Scale Service Systems", "paper_id": "WOS:000363520800005"}