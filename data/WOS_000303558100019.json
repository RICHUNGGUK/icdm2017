{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automatic_generation"}, {"score": 0.0047732596509542135, "phrase": "formal_specifications"}, {"score": 0.004670597652149685, "phrase": "reliable_distributed_systems"}, {"score": 0.004530552828603269, "phrase": "reliable_systems"}, {"score": 0.0044718206943536514, "phrase": "difficult_and_complex_task"}, {"score": 0.004010960493946656, "phrase": "high_quality"}, {"score": 0.0037087324991876727, "phrase": "analysis_state_space"}, {"score": 0.003459191419478298, "phrase": "tool-supported_method"}, {"score": 0.0034143003168921114, "phrase": "application_functionality"}, {"score": 0.0033262524445013303, "phrase": "uml_activities"}, {"score": 0.003129509028432954, "phrase": "complementary_interface_contracts"}, {"score": 0.0031023662967184216, "phrase": "so-called_esms"}, {"score": 0.002918826667294298, "phrase": "interface_contracts"}, {"score": 0.002893505913503472, "phrase": "external_reliability_contracts"}, {"score": 0.002806595775343074, "phrase": "failure_behaviour"}, {"score": 0.0027461155463816772, "phrase": "different_behavioural_aspects"}, {"score": 0.002722288966917744, "phrase": "separate_descriptions"}, {"score": 0.002686935113435742, "phrase": "two-step_analysis"}, {"score": 0.002629026692001082, "phrase": "first_step"}, {"score": 0.0025611773887867255, "phrase": "second_step"}, {"score": 0.0025059724686541263, "phrase": "automatic_translation"}, {"score": 0.0024412911465483225, "phrase": "input_syntax"}, {"score": 0.0024095777415804346, "phrase": "model_checker"}, {"score": 0.0023990982005125763, "phrase": "tlc."}, {"score": 0.002257070536352418, "phrase": "domain_and_reliability_experts"}, {"score": 0.002151388538895855, "phrase": "real_industry_case"}], "paper_keywords": ["Design", " Reliability", " Verification", " Model-driven engineering", " reliable systems", " fault tolerance", " component contracts", " compositional verification", " model checking"], "paper_abstract": "The validation and verification of reliable systems is a difficult and complex task, mainly for two reasons: First, it is difficult to precisely state which formal properties a system needs to fulfil to be of high quality. Second, it is complex to automatically verify such properties, due to the size of the analysis state space which grows exponentially with the number of components. We tackle these problems by a tool-supported method which embeds application functionality in building blocks that use UML activities to describe their internal behaviour. To describe their externally visible behaviour, we use a combination of complementary interface contracts, so-called ESMs and EESMs. In this paper, we present an extension of the interface contracts, External Reliability Contracts (ERCs), that capture failure behaviour. This separation of different behavioural aspects in separate descriptions facilitates a two-step analysis, in which the first step is completely automated and the second step is facilitated by an automatic translation of the models to the input syntax of the model checker TLC. Further, the cascade of contracts is used to separate the work of domain and reliability experts. The concepts are proposed with the background of a real industry case, and we demonstrate how the use of interface", "paper_title": "Towards Automatic Generation of Formal Specifications to Validate and Verify Reliable Distributed Systems", "paper_id": "WOS:000303558100019"}