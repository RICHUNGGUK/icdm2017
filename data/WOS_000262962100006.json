{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "reduction_rules"}, {"score": 0.009506359065830099, "phrase": "petri_nets"}, {"score": 0.006320590992024326, "phrase": "reset_nets"}, {"score": 0.004779564521350969, "phrase": "reset_workflow_nets"}, {"score": 0.004640590144749795, "phrase": "petri_net"}, {"score": 0.004390764654147291, "phrase": "original_net's_essential_properties"}, {"score": 0.004216112320418982, "phrase": "reset_arc"}, {"score": 0.003989046949801574, "phrase": "natural_application"}, {"score": 0.003959706549088536, "phrase": "business_process"}, {"score": 0.003916098498242888, "phrase": "possible_cancellation"}, {"score": 0.003774164192882704, "phrase": "workflow_management"}, {"score": 0.0037188360359702182, "phrase": "cancellation_behaviours"}, {"score": 0.003597284507308585, "phrase": "entire_workflow"}, {"score": 0.003479692058963528, "phrase": "serious_implications"}, {"score": 0.0031377955308198634, "phrase": "large_workflows"}, {"score": 0.0031146967095233586, "phrase": "cancellation_behaviour"}, {"score": 0.002990650318403461, "phrase": "state_space_explosion_problem"}, {"score": 0.0026375303198093764, "phrase": "documented_reduction_rules"}, {"score": 0.0024586427394152196, "phrase": "workflow_domain"}, {"score": 0.0023958326775913165, "phrase": "workflow_nets"}, {"score": 0.0021682027434117095, "phrase": "workflow_system"}, {"score": 0.0021601997088758957, "phrase": "yawl._crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Reset nets", " Reduction rules", " Workflow verification", " Soundness"], "paper_abstract": "The application of reduction rules to any Petri net may assist in its analysis as its reduced version may be significantly smaller while still retaining the original net's essential properties. Reset nets extend Petri nets with the concept of a reset arc, allowing one to remove all tokens from a certain place. Such nets have a natural application in business process modelling where possible cancellation of activities need to be modelled explicitly and in workflow management where such process models with cancellation behaviours should be enacted correctly. As cancelling the entire workflow or even cancelling certain activities in a workflow has serious implications during execution (for instance, a workflow can deadlock because of cancellation), such workflows should be thoroughly tested before deployment. However, verification of large workflows with cancellation behaviour is time consuming and can become intractable due to the state space explosion problem. One way of speeding up verification of workflows based on reset nets is to apply reduction rules. Even though reduction rules exist for Petri nets and some of its subclasses and extensions, there are no documented reduction rules for reset nets. This paper systematically presents such reduction rules. Because we want to apply the results to the workflow domain, this paper focusses on reset workflow nets (RWF-nets), i.e. a subclass tailored to the modelling of workflows. The approach has been implemented in the context of the workflow system YAWL. Crown Copyright (C) 2008 Published by Elsevier Inc. All rights reserved.", "paper_title": "Soundness-preserving reduction rules for reset workflow nets", "paper_id": "WOS:000262962100006"}