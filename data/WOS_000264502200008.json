{"auto_keywords": [{"score": 0.03696798601330037, "phrase": "fault_tolerance"}, {"score": 0.00481495049065317, "phrase": "algorithm-based_fault_tolerance"}, {"score": 0.0047395356621991935, "phrase": "high_performance_computing"}, {"score": 0.0046164478775379105, "phrase": "new_approach"}, {"score": 0.004496542293425754, "phrase": "high_performance_computing_system"}, {"score": 0.00433386573276633, "phrase": "careful_adaptation"}, {"score": 0.004265953661191515, "phrase": "algorithm-based_fault_tolerance_technique"}, {"score": 0.0042212686864468805, "phrase": "k._huang"}, {"score": 0.004177049813981273, "phrase": "j._abraham"}, {"score": 0.004133292222875435, "phrase": "algorithm-based"}, {"score": 0.004047141845635495, "phrase": "matrix_operations"}, {"score": 0.0036424917384748024, "phrase": "parallel_distributed_computation"}, {"score": 0.0035477930970463432, "phrase": "strongly_scalable_mechanism"}, {"score": 0.0029657683623403085, "phrase": "fault-tolerant_matrix-matrix_multiplication_subroutine"}, {"score": 0.0025052769325080255, "phrase": "correct_result"}, {"score": 0.0023640560785711923, "phrase": "machine_peak_efficiency"}, {"score": 0.0022783523466965187, "phrase": "fastest_failure-free_implementation"}, {"score": 0.0021049977753042253, "phrase": "processor_count"}], "paper_keywords": ["Fault tolerance", " Linear algebra", " High performance computing"], "paper_abstract": "We present a new approach to fault tolerance for High Performance Computing system. Our approach is based on a careful adaptation of the Algorithm-Based Fault Tolerance technique [K. Huang, J. Abraham, Algorithm-based fault tolerance for matrix operations, IEEE Transactions on Computers (Spec. Issue Reliable & Fault-Tolerant Comp.) 33 (1984) 518-528] to the need of parallel distributed computation. We obtain a strongly scalable mechanism for fault tolerance. We can also detect and correct errors (bit-flip) on the fly of a computation. To assess the viability of our approach, we have developed a fault-tolerant matrix-matrix multiplication subroutine and we propose some models to predict its running time. Our parallel fault-tolerant matrix-matrix multiplication scores 1.4 TFLOPS on 484 processors (cluster jacquard. nersc.gov) and returns a correct result while one process failure has happened. This represents 65% of the machine peak efficiency and less than 12% overhead with respect to the fastest failure-free implementation. We predict (and have observed) that, as we increase the processor count, the overhead of the fault tolerance drops significantly. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Algorithm-based fault tolerance applied to high performance computing", "paper_id": "WOS:000264502200008"}