{"auto_keywords": [{"score": 0.028568317730340426, "phrase": "sql_queries"}, {"score": 0.015388708155101164, "phrase": "statistical_models"}, {"score": 0.015000644781023703, "phrase": "dbms"}, {"score": 0.012648363360137823, "phrase": "data_set"}, {"score": 0.010525083442531393, "phrase": "summary_matrices"}, {"score": 0.00481495049065317, "phrase": "statistical_model"}, {"score": 0.004379977556546879, "phrase": "fundamental_statistical_models"}, {"score": 0.004286708921931472, "phrase": "user-defined_functions"}, {"score": 0.0040708542958968605, "phrase": "linear_regression"}, {"score": 0.004036167343421827, "phrase": "pca"}, {"score": 0.003949974260471287, "phrase": "naive_bayes"}, {"score": 0.003531474887552889, "phrase": "cross_products"}, {"score": 0.0033971539563683174, "phrase": "input_data"}, {"score": 0.0032538723984338615, "phrase": "efficient_sql_queries"}, {"score": 0.0030898642396380662, "phrase": "sql_framework"}, {"score": 0.0029722900280316216, "phrase": "single_table_scan"}, {"score": 0.0027982016314450717, "phrase": "primitive_scalar_udfs"}, {"score": 0.0027622407190589326, "phrase": "data_sets"}, {"score": 0.002566997205079849, "phrase": "exported_files"}, {"score": 0.002375253757224999, "phrase": "export_times"}, {"score": 0.0022457226013538343, "phrase": "precomputed_summary_matrices"}], "paper_keywords": ["DBMS", " SQL", " statistical model", " UDF"], "paper_abstract": "Statistical models are generally computed outside a DBMS due to their mathematical complexity. We introduce techniques to efficiently compute fundamental statistical models inside a DBMS exploiting User-Defined Functions (UDFs). Specifically, we study the computation of linear regression, PCA, clustering, and Naive Bayes. Two summary matrices on the data set are mathematically shown to be essential for all models: the linear sum of points and the quadratic sum of cross products of points. We consider two layouts for the input data set: horizontal and vertical. We first introduce efficient SQL queries to compute summary matrices and score the data set. Based on the SQL framework, we introduce UDFs that work in a single table scan: aggregate UDFs to compute summary matrices for all models and a set of primitive scalar UDFs to score data sets. Experiments compare UDFs and SQL queries (running inside the DBMS) with C++ (analyzing exported files). In general, UDFs are faster than SQL queries and not much slower than C++. Considering export times, C++ is slower than UDFs and SQL queries. Statistical models based on precomputed summary matrices are computed in a few seconds. UDFs scale linearly and only require one table scan, highlighting their efficiency.", "paper_title": "Statistical Model Computation with UDFs", "paper_id": "WOS:000283133800008"}