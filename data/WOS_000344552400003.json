{"auto_keywords": [{"score": 0.046588866765139535, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "efficient_static_scheduling_scheme"}, {"score": 0.0047026237903774895, "phrase": "heterogeneous_clusters"}, {"score": 0.0046364836476864325, "phrase": "similarity_search_problem"}, {"score": 0.004592905436175987, "phrase": "medium_and_large_clusters"}, {"score": 0.004506968388996092, "phrase": "processing_unit"}, {"score": 0.004023947242621452, "phrase": "high_volume"}, {"score": 0.0038382392088338784, "phrase": "similarity_problem"}, {"score": 0.003802135020791801, "phrase": "large_databases"}, {"score": 0.003410479630045025, "phrase": "heterogeneous_computing_platforms"}, {"score": 0.003378385493203297, "phrase": "big_challenges"}, {"score": 0.0033465923623290034, "phrase": "system_size"}, {"score": 0.0033150974333333244, "phrase": "energy_saving"}, {"score": 0.0032838979278935814, "phrase": "task_mapping"}, {"score": 0.0030017207229983385, "phrase": "scheduling_issue"}, {"score": 0.0029454679553901613, "phrase": "incoming_queries"}, {"score": 0.002876627851917633, "phrase": "cluster_nodes"}, {"score": 0.0028093921138602606, "phrase": "computational_resources"}, {"score": 0.0027307746993761035, "phrase": "cpu_cores"}, {"score": 0.0024842242921857705, "phrase": "whole_system"}, {"score": 0.0024146842687658467, "phrase": "best_performance"}, {"score": 0.0022706045233150795, "phrase": "best_distribution"}, {"score": 0.0022492129111567824, "phrase": "experimental_results"}, {"score": 0.002175913488493802, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "appropriate_scheduling_scheme"}], "paper_keywords": ["Similarity search", " Metric spaces", " Range queries", " GPU platforms", " Multicore platforms", " Scheduling scheme"], "paper_abstract": "Medium and large clusters incorporating hybrid CPU/graphics processing unit (GPU) nodes are present in many datacenters today. They can accelerate many different kinds of applications and appropriately manage applications dealing with a high volume of data. This is the case of the similarity problem because large databases are managed and very quick responses are required to hundreds or thousands of queries per second. However, the design and usage of heterogeneous computing platforms poses big challenges as system size, energy saving, task mapping, scheduling, among others, must be efficiently handled. In this paper we focus on the scheduling issue for distributing the incoming queries to all the processing components in the cluster nodes. Our algorithms exploit the computational resources, simultaneously processing queries on CPU cores and on the GPUs. Thus, we address the problem of how to distribute the queries over the whole system in order to obtain the best performance, under the assumption of defining a heuristic that automatically provides the best distribution. Experimental results show the benefits in terms of execution time and energy saving of using an appropriate scheduling scheme.", "paper_title": "Towards an efficient static scheduling scheme for delivering queries to heterogeneous clusters in the similarity search problem", "paper_id": "WOS:000344552400003"}