{"auto_keywords": [{"score": 0.04356127827965969, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "event-driven_models"}, {"score": 0.004758457292840376, "phrase": "spinnaker_neuromimetic_system"}, {"score": 0.004721162131188487, "phrase": "neural_networks"}, {"score": 0.004665764181113345, "phrase": "fundamentally_different_model"}, {"score": 0.0045748683993128425, "phrase": "conventional_sequential_digital_model"}, {"score": 0.004503422625191897, "phrase": "conventional_hardware"}, {"score": 0.004278807087784626, "phrase": "scalability_limitations"}, {"score": 0.004195418010131832, "phrase": "dedicated_neural_chips"}, {"score": 0.004189348995387397, "phrase": "spinnaker"}, {"score": 0.004081385289516914, "phrase": "entirely_satisfactory_solution"}, {"score": 0.004001828274595483, "phrase": "different_approach"}, {"score": 0.003832198214757852, "phrase": "neural_optimisation"}, {"score": 0.003802135020791801, "phrase": "dedicated_chips"}, {"score": 0.003757480190200645, "phrase": "fpga-like_universal_configurability"}, {"score": 0.0036553070575015344, "phrase": "asynchronous_event-driven_model"}, {"score": 0.00361237042013781, "phrase": "interrupt-generating_dedicated_hardware"}, {"score": 0.003527998934981411, "phrase": "real-time_neural_simulation"}, {"score": 0.003472845095323694, "phrase": "event_handling"}, {"score": 0.003445591238183763, "phrase": "particularly_packet_servicing"}, {"score": 0.003405109584265324, "phrase": "careful_and_innovative_design"}, {"score": 0.003338690782620756, "phrase": "local_processor_congestion"}, {"score": 0.003312486229143855, "phrase": "possible_deadlock"}, {"score": 0.0032223742018434856, "phrase": "spatial_locality"}, {"score": 0.0031970796597571367, "phrase": "temporal_causality"}, {"score": 0.0031100973266506163, "phrase": "network_performance"}, {"score": 0.0029547698888028697, "phrase": "real-time_operation"}, {"score": 0.0028405715222684183, "phrase": "efficient_event-handling_service_routines"}, {"score": 0.0026774738852854427, "phrase": "acm_computing_frontiers"}, {"score": 0.0026459927476753585, "phrase": "on-chip_testing"}, {"score": 0.0025436978068459565, "phrase": "large-scale_neural_modelling"}, {"score": 0.002474447780553576, "phrase": "effective_burst_management"}, {"score": 0.002455009746748708, "phrase": "network_mapping"}, {"score": 0.0023507916951658455, "phrase": "library-based_development_system"}, {"score": 0.0023048904639724438, "phrase": "high-level_neural_model"}, {"score": 0.002242127152093798, "phrase": "efficient_spinnaker_instantiation"}, {"score": 0.0022157533515146503, "phrase": "complete_system"}, {"score": 0.0021896891011033105, "phrase": "general-purpose_platform"}, {"score": 0.002146926767291475, "phrase": "arbitrary_neural_network"}, {"score": 0.0021049977753042253, "phrase": "hardware_speed"}], "paper_keywords": ["Asynchronous", " Burst", " Network", " Event-driven", " Universal", " Neural", " Multiprocessor", " Interconnection", " Real-time", " Traffic", " Characterisation"], "paper_abstract": "Neural networks present a fundamentally different model of computation from the conventional sequential digital model, for which conventional hardware is typically poorly matched. However, a combination of model and scalability limitations has meant that neither dedicated neural chips nor FPGA's have offered an entirely satisfactory solution. SpiNNaker introduces a different approach, the \"neuromimetic\" architecture, that maintains the neural optimisation of dedicated chips while offering FPGA-like universal configurability. This parallel multiprocessor employs an asynchronous event-driven model that uses interrupt-generating dedicated hardware on the chip to support real-time neural simulation. Nonetheless, event handling, particularly packet servicing, requires careful and innovative design in order to avoid local processor congestion and possible deadlock. We explore the impact that spatial locality, temporal causality and burstiness of traffic have on network performance, using tunable, biologically similar synthetic traffic patterns. Having established the viability of the system for real-time operation, we use two exemplar neural models to illustrate how to implement efficient event-handling service routines that mitigate the problem of burstiness in the traffic. Extending work published in ACM Computing Frontiers 2010 with on-chip testing, simulation results indicate the viability of SpiNNaker for large-scale neural modelling, while emphasizing the need for effective burst management and network mapping. Ultimately, the goal is the creation of a library-based development system that can translate a high-level neural model from any description environment into an efficient SpiNNaker instantiation. The complete system represents a general-purpose platform that can generate an arbitrary neural network and run it with hardware speed and scale.", "paper_title": "Managing Burstiness and Scalability in Event-Driven Models on the SpiNNaker Neuromimetic System", "paper_id": "WOS:000310192900002"}