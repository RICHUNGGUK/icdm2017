{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "workflow_processes"}, {"score": 0.0104697542381887, "phrase": "model_transformation"}, {"score": 0.004566954456805558, "phrase": "workflow_modeling"}, {"score": 0.004477270137801732, "phrase": "challenging_activity"}, {"score": 0.004163172790791119, "phrase": "complex_industrial_processes"}, {"score": 0.0041084684278314305, "phrase": "effective_process_verification"}, {"score": 0.00400119808662365, "phrase": "design_time"}, {"score": 0.0032807941194429235, "phrase": "generic_approach"}, {"score": 0.0028930017387859804, "phrase": "desirable_semantics"}, {"score": 0.0028360962841331634, "phrase": "modeling_element"}, {"score": 0.002707620139970122, "phrase": "workflow_process"}, {"score": 0.002671990515821213, "phrase": "clear_semantics"}, {"score": 0.0026194209399161184, "phrase": "equivalent_petri_net"}, {"score": 0.0024842242921857705, "phrase": "original_workflow_process"}, {"score": 0.002451527111936163, "phrase": "existing_petri_net_theory"}, {"score": 0.00234043119560776, "phrase": "comprehensive_case_study"}, {"score": 0.0022492129111567824, "phrase": "industrial_modeling_language"}, {"score": 0.002147265537489893, "phrase": "experimental_evaluations"}, {"score": 0.0021049977753042253, "phrase": "real-world_business_processes"}], "paper_keywords": ["Workflow", " Model transformation", " Process verification", " Workflow verification", " Petri net"], "paper_abstract": "Workflow modeling is a challenging activity and designers are likely to introduce errors, especially in complex industrial processes. Effective process verification is essential at design time because the cost of fixing errors during runtime is substantially higher. However, most user-oriented workflow modeling languages lack formal semantics that hinders such verification. In this paper, we propose a generic approach based on the model transformation to verify workflow processes. The model transformation includes two steps: first, it formalizes the desirable semantics of each modeling element; secondly, it translates a workflow process with clear semantics to an equivalent Petri net. Thus, we can verify the original workflow process using existing Petri net theory and analysis tools. As a comprehensive case study, verifying workflow processes in an industrial modeling language (TiPLM) is presented. Experimental evaluations on verifying real-world business processes validate our approach.", "paper_title": "Verifying workflow processes: a transformation-based approach", "paper_id": "WOS:000289901500007"}