{"auto_keywords": [{"score": 0.04902194563396072, "phrase": "frequent_itemset_queries"}, {"score": 0.00481495049065317, "phrase": "processing_batches"}, {"score": 0.004354572391793908, "phrase": "optimizing_processing"}, {"score": 0.00389427992231721, "phrase": "particular_case"}, {"score": 0.003808209866576388, "phrase": "multiple-query_optimization"}, {"score": 0.0034437574674180365, "phrase": "total_execution_time"}, {"score": 0.0024620842899061614, "phrase": "partition_algorithm"}, {"score": 0.0024075916292945715, "phrase": "memory-based_frequent_itemset_mining"}, {"score": 0.0022261705957258506, "phrase": "novel_approach"}, {"score": 0.0021526564019119466, "phrase": "original_mine_merge"}, {"score": 0.0021049977753042253, "phrase": "sequential_processing"}], "paper_keywords": [""], "paper_abstract": "We consider the problem of optimizing processing of batches of frequent itemset queries. The problem is a particular case of multiple-query optimization, where the goal is to minimize the total execution time of the set of queries. We propose an algorithm that is a combination of the Mine Merge method, previously proposed for processing of batches of frequent itemset queries, and the Partition algorithm for memory-based frequent itemset mining. The experiments show that the novel approach outperforms the original Mine Merge and sequential processing in majority of cases.", "paper_title": "Partition-based approach to processing batches of frequent itemset queries", "paper_id": "WOS:000238575000040"}