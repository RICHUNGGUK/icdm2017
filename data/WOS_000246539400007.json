{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "grid-based_branch"}, {"score": 0.004537254814246843, "phrase": "bound_algorithm"}, {"score": 0.004321952227344232, "phrase": "search_tree"}, {"score": 0.003964007795174772, "phrase": "crucial_issue"}, {"score": 0.003921393143378986, "phrase": "dynamic_load_balancing"}, {"score": 0.00385832528624328, "phrase": "major_question"}, {"score": 0.0036553070575015344, "phrase": "irregular_search_tree"}, {"score": 0.0035965032173588753, "phrase": "large_set"}, {"score": 0.00355782527287734, "phrase": "heterogeneous_and_volatile_processors"}, {"score": 0.0033888405252810927, "phrase": "new_dynamic_load"}, {"score": 0.003298441494378465, "phrase": "parallel_branch"}, {"score": 0.003193129886123359, "phrase": "computational_grid"}, {"score": 0.003057910095857785, "phrase": "particular_numbering"}, {"score": 0.0030086877092638945, "phrase": "tree_nodes"}, {"score": 0.0029126002350975634, "phrase": "work_units"}, {"score": 0.002714779217561487, "phrase": "huge_amount"}, {"score": 0.002685558057339722, "phrase": "load_balancing_operations"}, {"score": 0.002530359917257626, "phrase": "bi-objective_flow-shop_scheduling_problem"}, {"score": 0.002410058288617039, "phrase": "computational_pool"}, {"score": 0.002345707314211983, "phrase": "seven_nation-wide_clusters"}, {"score": 0.002198173002125907, "phrase": "parallel_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["branch and bound", " grid computing", " multi-objective optimization"], "paper_abstract": "The most popular parallelization approach of the branch and bound algorithm consists in building and exploring in parallel the search tree representing the problem being tackled. The deployment of such parallel model on a grid rises the crucial issue of dynamic load balancing. The major question is how to efficiently distribute the nodes of an irregular search tree among a large set of heterogeneous and volatile processors. In this paper, we propose a new dynamic load balancing approach for the parallel branch and bound algorithm on the computational grid. The approach is based on a particular numbering of the tree nodes allowing a very simple description of the work units distributed during the exploration. Such description optimizes the communications involved by the huge amount of load balancing operations. The approach has been applied to one instance of the bi-objective flow-shop scheduling problem. The application has been experimented on a computational pool of more than 1000 processors belonging to seven Nation-wide clusters. The optimal solution has been generated within almost 6 days with a parallel efficiency of 98%. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "An efficient load balancing strategy for grid-based branch and bound algorithm", "paper_id": "WOS:000246539400007"}