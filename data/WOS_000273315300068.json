{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "-core_multigrid_solver"}, {"score": 0.004521179256835894, "phrase": "out-of-core_multigrid"}, {"score": 0.0042452552248398445, "phrase": "gigantic_meshes"}, {"score": 0.0041136473765874815, "phrase": "gradient-domain_operations"}, {"score": 0.003832198214757852, "phrase": "irregular_connectivity"}, {"score": 0.0037133478610481994, "phrase": "streaming_mesh"}, {"score": 0.0036553070575015344, "phrase": "boundary_constraints"}, {"score": 0.003459191419478298, "phrase": "multigrid_hierarchy"}, {"score": 0.0033518704336033874, "phrase": "multigrid_solution"}, {"score": 0.0028857130140890787, "phrase": "neighboring_multigrid_nodes"}, {"score": 0.002688050388891007, "phrase": "sublinear_memory_growth"}, {"score": 0.0025436978068459565, "phrase": "mesh_vertices"}, {"score": 0.0021896891011033105, "phrase": "multigrid_implementation"}], "paper_keywords": ["out-of-core multigrid solver", " irregular domain", " Poisson equation", " gradient domain mesh editing"], "paper_abstract": "We present an out-of-core multigrid for solving the Poisson equation defined over gigantic meshes. This enables gradient-domain operations on out-of-core meshes with irregular connectivity. Taking a streaming mesh and boundary constraints as input, our solver builds a multigrid hierarchy and refines the multigrid solution progressively by performing all operations as streaming computations. A set of rules are carefully designed to make neighboring multigrid nodes perform tasks cooperatively and efficiently. With a sublinear memory growth with respect to the number of mesh vertices, our approach handles meshes with 14M vertices using merely 84MB of memory, while an equivalent in-core multigrid implementation fails to fit into 2GB memory space.", "paper_title": "Out-of-Core Multigrid Solver for Streaming Meshes", "paper_id": "WOS:000273315300068"}