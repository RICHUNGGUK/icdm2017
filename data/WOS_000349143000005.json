{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "program_families"}, {"score": 0.0390829115805425, "phrase": "lifted_algorithm"}, {"score": 0.004744437370338926, "phrase": "previous_research"}, {"score": 0.004674952036988355, "phrase": "static_analysis"}, {"score": 0.004185108816866677, "phrase": "idiosyncratic_representations"}, {"score": 0.004093453936415085, "phrase": "lifting_effort"}, {"score": 0.003974349782102708, "phrase": "significant_amount"}, {"score": 0.0034034331737042363, "phrase": "parameterized_static_analysis_framework"}, {"score": 0.0031377955308198634, "phrase": "type-based_static_analyses"}, {"score": 0.002850385670169814, "phrase": "parametric_logical_specification"}, {"score": 0.0027878797103973313, "phrase": "parametric_variational_constraint_solver"}, {"score": 0.002551231163230566, "phrase": "underlying_analysis_algorithm"}, {"score": 0.0023003498123420237, "phrase": "previous_manually_lifted_analysis"}, {"score": 0.002233301265743633, "phrase": "performance_tests"}, {"score": 0.0021049977753042253, "phrase": "general_framework"}], "paper_keywords": ["Languages", " Theory", " Variational types", " constraint-based type system", " static-analysis lifting", " program families", " choice calculus"], "paper_abstract": "Previous research on static analysis for program families has focused on lifting analyses for single, plain programs to program families by employing idiosyncratic representations. The lifting effort typically involves a significant amount of work for proving the correctness of the lifted algorithm and demonstrating its scalability. In this paper, we propose a parameterized static analysis framework for program families that can automatically lift a class of type-based static analyses for plain programs to program families. The framework consists of a parametric logical specification and a parametric variational constraint solver. We prove that a lifted algorithm is correct provided that the underlying analysis algorithm is correct. An evaluation of our framework has revealed an error in a previous manually lifted analysis. Moreover, performance tests indicate that the overhead incurred by the general framework is bounded by a factor of 2.", "paper_title": "Type-Based Parametric Analysis of Program Families", "paper_id": "WOS:000349143000005"}