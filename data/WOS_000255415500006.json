{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "boolean_satisfiability"}, {"score": 0.04591142760057261, "phrase": "sat_problem"}, {"score": 0.04148645955559183, "phrase": "minimum_unsatisfiable_core"}, {"score": 0.004786821283037044, "phrase": "unsatisfiable_core_extraction"}, {"score": 0.004731253527682821, "phrase": "sat"}, {"score": 0.004675930527604869, "phrase": "core_non_polynomial"}, {"score": 0.0044356867986444426, "phrase": "hardware_solution"}, {"score": 0.004332894955218135, "phrase": "custom_integrated_circuit"}, {"score": 0.0043083708029369285, "phrase": "ic"}, {"score": 0.0041586840496756474, "phrase": "implication_graph"}, {"score": 0.0041102032028337366, "phrase": "conflict_clause_generation"}, {"score": 0.0038989120088094185, "phrase": "smallest_set"}, {"score": 0.0038421645028127636, "phrase": "initial_formula"}, {"score": 0.0037530749925749245, "phrase": "computationally_hard_problem"}, {"score": 0.0037201996003549246, "phrase": "proposed_hardware_approach"}, {"score": 0.0035705347414368696, "phrase": "unsatisfiable_formula"}, {"score": 0.0034979676031187015, "phrase": "authors'_knowledge"}, {"score": 0.003447035529485425, "phrase": "first_hardware-based_solution"}, {"score": 0.0033968425231674262, "phrase": "unsatisfiable_core"}, {"score": 0.003337571497951346, "phrase": "clause_literals"}, {"score": 0.003298631258267805, "phrase": "specially_designed_clause_cells"}, {"score": 0.0031565959573536194, "phrase": "variable_width"}, {"score": 0.0029332911632061523, "phrase": "significantly_larger_capacity"}, {"score": 0.0029161225023394363, "phrase": "existing_hardware_sat_solvers"}, {"score": 0.002654673450844699, "phrase": "spice"}, {"score": 0.0026313840069327713, "phrase": "extracted_parasitics"}, {"score": 0.002540291030405591, "phrase": "verilog"}, {"score": 0.0025254115243261875, "phrase": "preliminary_results"}, {"score": 0.0024379730432321656, "phrase": "single_ic"}, {"score": 0.0023466530426848064, "phrase": "approach_results"}, {"score": 0.0023192471808039746, "phrase": "magnitude_speed_improvement"}, {"score": 0.002305819725422072, "phrase": "boolean"}, {"score": 0.0022921606484547713, "phrase": "propogation-based_software_sat"}, {"score": 0.002136142919325754, "phrase": "worst_case_power_consumption"}], "paper_keywords": [""], "paper_abstract": "Boolean satisfiability (SAT) is a core non polynomial (NP)-complete problem. Several heuristic software and hardware approaches have been proposed to solve this problem. The authors present a hardware solution to the SAT problem. They propose a custom integrated circuit (IC) to implement their approach, in which the traversal of the implication graph as well as conflict clause generation are performed in hardware, in parallel. Further, extracting the minimum unsatisfiable core (i.e. the formula consisting of the smallest set of clauses of the initial formula which is unsatisfiable) is also a computationally hard problem. The proposed hardware approach, in addition to solving SAT, efficiently extracts the minimum unsatisfiable core for any unsatisfiable formula. To the best of the authors' knowledge, this is the first hardware-based solution proposed for extracting the unsatisfiable core. In this approach, clause literals are stored in specially designed clause cells. Clauses are implemented in banks, in a manner that allows clauses of variable width to be accommodated in these banks. To maximise the utilisation of these banks, the authors initially partition the SAT problem. Their solution has significantly larger capacity than existing hardware SAT solvers, and is scalable in the sense that several ICs can be used to simultaneously operate on the same SAT instance. The area, power and performance figures are derived from layout and SPICE (using extracted parasitics) estimates. The approach presented has been functionally validated in Verilog. Preliminary results demonstrate that the approach can accommodate instances with approximately 63 K clauses on a single IC of size 1.5 cm x 1.5 cm. This hardware based-SAT solving approach results in over three orders of magnitude speed improvement over Boolean constraint propogation-based software SAT approaches (one to two orders of magnitude over other hardware SAT approaches). The capacity of this approach is significantly higher than most hardware-based approaches. Further, the worst case power consumption was found to be <= 1 mW for the implementation.", "paper_title": "Efficient, scalable hardware engine for Boolean satisfiability and unsatisfiable core extraction", "paper_id": "WOS:000255415500006"}