{"auto_keywords": [{"score": 0.039324869383723156, "phrase": "short-term_cache"}, {"score": 0.01308927870897981, "phrase": "web_objects"}, {"score": 0.009388923162790887, "phrase": "web_caching_performance"}, {"score": 0.008380564165120832, "phrase": "lru"}, {"score": 0.00481495049065317, "phrase": "partitioned_client-side_web_cache"}, {"score": 0.0047026237903774895, "phrase": "novel_contribution"}, {"score": 0.004665764181113345, "phrase": "web_caching_area"}, {"score": 0.004592905436175987, "phrase": "web_cache_replacement"}, {"score": 0.004195418010131832, "phrase": "client-side_cache"}, {"score": 0.0034185505275141077, "phrase": "long-term_cache_saturates"}, {"score": 0.003378385493203297, "phrase": "neuro-fuzzy_system"}, {"score": 0.003260690513595527, "phrase": "long-term_cache"}, {"score": 0.0032223742018434856, "phrase": "proposed_solution"}, {"score": 0.0031595084685030845, "phrase": "trace-driven_simulation"}, {"score": 0.0028293966058473476, "phrase": "simulation_results"}, {"score": 0.0027741761880779535, "phrase": "proposed_approach"}, {"score": 0.00266693888510356, "phrase": "hit_ratio"}, {"score": 0.002533687835358909, "phrase": "lfu."}, {"score": 0.0023139986108451946, "phrase": "latency_saving_ratio"}, {"score": 0.0021724921769041366, "phrase": "lw"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Client-side Web caching", " Adaptive neuro-fuzzy inference system", " Least recently used algorithm", " Short-term cache", " Long-term cache"], "paper_abstract": "This paper proposes a novel contribution in Web caching area, especially in Web cache replacement, so-called intelligent client-side Web caching scheme (ICWCS). This approach is developed by splitting the client-side cache into two caches: short-term cache that receives the Web objects from the Internet directly, and long-term cache that receives the Web objects from the short-term cache. The objects in short-term cache are removed by least recently used (LRU) algorithm as short-term cache is full. More significantly, when the long-term cache saturates, the neuro-fuzzy system is employed efficiently in managing contents of the long-term cache. The proposed solution is validated by implementing trace-driven simulation and the results are compared with least recently used (LRU) and least frequently used (LFU) algorithms: the most common policies of evaluating Web caching performance. The simulation results have revealed that the proposed approach improves the performance of Web caching in terms of hit ratio (HR), up to 14.8% and 17.9% over LRU and LFU. In terms of byte hit ratio (BHR), the Web caching performance is improved up to 2.57% and 26.25%, and for latency saving ratio (LSR), the performance is better with 8.3% and 18.9% over LRU and LW, respectively. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Neuro-fuzzy system in partitioned client-side Web cache", "paper_id": "WOS:000295193400036"}