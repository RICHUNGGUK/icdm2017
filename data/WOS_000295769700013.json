{"auto_keywords": [{"score": 0.049689941775469655, "phrase": "momentum_conservation"}, {"score": 0.012062638341399456, "phrase": "distributed_program"}, {"score": 0.011989577954357114, "phrase": "test_data"}, {"score": 0.01094472923145774, "phrase": "linux_pc"}, {"score": 0.00481495049065317, "phrase": "heavy_particles"}, {"score": 0.0047273577269638725, "phrase": "novel_algorithm"}, {"score": 0.004698514356957176, "phrase": "reggae"}, {"score": 0.004594244325434335, "phrase": "particle_masses"}, {"score": 0.004547613564162694, "phrase": "lorentz-invariant_phase_space"}, {"score": 0.0043746736158504045, "phrase": "multiparticle_production"}, {"score": 0.004356854713438043, "phrase": "hadronic_and_nuclear_collisions"}, {"score": 0.00428629884026304, "phrase": "large_part"}, {"score": 0.004260134699483774, "phrase": "available_energy"}, {"score": 0.0041316803676012155, "phrase": "multiple_collisions"}, {"score": 0.004064756130719647, "phrase": "reasonably_large_weights"}, {"score": 0.004032830309481077, "phrase": "program"}, {"score": 0.003831080551974468, "phrase": "cpc_program_library"}, {"score": 0.0038154673253945003, "phrase": "queen's_university"}, {"score": 0.003799917768883223, "phrase": "belfast"}, {"score": 0.003784430779635342, "phrase": "n._ireland"}, {"score": 0.003753645746332831, "phrase": "standard_cpc"}, {"score": 0.003494700793168755, "phrase": "tar.gz_programming_language"}, {"score": 0.0034310429836668264, "phrase": "particular_tuning"}, {"score": 0.003253560798692431, "phrase": "os_x"}, {"score": 0.003220610346003189, "phrase": "windows"}, {"score": 0.003207360864238053, "phrase": "microsoft_visual"}, {"score": 0.0030352053568852865, "phrase": "attached_example"}, {"score": 0.002860546817196148, "phrase": "generated_samples"}, {"score": 0.0028199118167981695, "phrase": "available_lorentz-invariant_phase_space"}, {"score": 0.0026959116898017978, "phrase": "genbod_algorithm"}, {"score": 0.002673957615079041, "phrase": "particle_production"}, {"score": 0.002619849373069842, "phrase": "heavy_resonances"}, {"score": 0.0024842242921857705, "phrase": "pair_center"}, {"score": 0.0024740864255166006, "phrase": "mass_system"}, {"score": 0.0024639898282571167, "phrase": "new_directions"}, {"score": 0.0023507916951658455, "phrase": "whole_available_phase_space"}, {"score": 0.002331641523873951, "phrase": "genbod"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiparticle production", " Monte Carlo generator", " Energy and momentum conservation"], "paper_abstract": "We propose a novel algorithm, called REGGAE, for the generation of momenta of a given sample of particle masses, evenly distributed in Lorentz-invariant phase space and obeying energy and momentum conservation. In comparison to other existing algorithms. REGGAE is designed for the use in multiparticle production in hadronic and nuclear collisions where many hadrons are produced and a large part of the available energy is stored in the form of their masses. The algorithm uses a loop simulating multiple collisions which lead to production of configurations with reasonably large weights. Program summary Program title: REGGAE (REscattering-after-Genbod GenerAtor of Events) Catalogue identifier: AEJR_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEJR_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 1523 No. of bytes in distributed program, including test data, etc.: 9608 Distribution format: tar.gz Programming language: C++ Computer: PC Pentium 4, though no particular tuning for this machine was performed. Operating system: Originally designed on Linux PC with g++, but it has been compiled and ran successfully on OS X with g++ and MS Windows with Microsoft Visual C++ 2008 Express Edition, as well. RAM: This depends on the number of particles which are generated. For 10 particles like in the attached example it requires about 120 kB. Classification: 11.2 Nature of problem: The task is to generate momenta of a sample of particles with given masses which obey energy and momentum conservation. Generated samples should be evenly distributed in the available Lorentz-invariant phase space. Solution method: In general, the algorithm works in two steps. First, all momenta are generated with the GENBOD algorithm. There, particle production is modeled as a sequence of two-body decays of heavy resonances. After all momenta are generated this way, they are reshuffled. Each particle undergoes a collision with some other partner such that in the pair center of mass system the new directions of momenta are distributed isotropically. After each particle collides only a few times, the momenta are distributed evenly across the whole available phase space. Starting with GENBOD is not essential for the procedure but it improves the performance. Running time: This depends on the number of particles and number of events one wants to generate. On a LINUX PC with 2 GHz processor, generation of 1000 events with 10 particles each takes about 3 s. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Generating heavy particles with energy and momentum conservation", "paper_id": "WOS:000295769700013"}