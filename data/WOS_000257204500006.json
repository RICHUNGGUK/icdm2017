{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "nominal_algebra"}, {"score": 0.004104132253183181, "phrase": "case-by-case_basis"}, {"score": 0.003775803846431323, "phrase": "mathematical_object"}, {"score": 0.0033549790559972053, "phrase": "canonical_model"}, {"score": 0.0031955979242589494, "phrase": "useful_conservativity_result"}, {"score": 0.002899125545529459, "phrase": "decidable_relation"}, {"score": 0.002761340122199076, "phrase": "subtle_use"}, {"score": 0.002575756583567029, "phrase": "special_feature"}, {"score": 0.0024533019565858073, "phrase": "nominal_techniques"}, {"score": 0.002320449502337321, "phrase": "stronger_assertion_language"}, {"score": 0.0022567398334877847, "phrase": "so-called_'freshness"}, {"score": 0.0022101055924375725, "phrase": "'capture-avoidance'_conditions"}], "paper_keywords": ["substitution", " nominal techniques", " nominal algebra", " binding", " capture-avoidance", " nominal rewriting", " omega-completeness"], "paper_abstract": "Substitution is fundamental to the theory of logic and computation. Is substitution something that we define on syntax on a case-by-case basis, or can we turn the idea of substitution into a mathematical object? We give axioms for substitution and prove them sound and complete with respect to a canonical model. As corollaries we obtain a useful conservativity result, and prove that equality-up-to-substitution is a decidable relation on terms. These results involve subtle use of techniques both from rewriting and algebra. A special feature of our method is the use of nominal techniques. These give us access to a stronger assertion language, which includes so-called 'freshness' or 'capture-avoidance' conditions. This means that the sense in which we axiomatise substitution (and prove soundness and completeness) is particularly strong, while remaining quite general.", "paper_title": "Capture-avoiding substitution as a nominal algebra", "paper_id": "WOS:000257204500006"}