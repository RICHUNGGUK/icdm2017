{"auto_keywords": [{"score": 0.03663614835271814, "phrase": "actlw"}, {"score": 0.00481495049065317, "phrase": "actlw_-_an"}, {"score": 0.004602395776895036, "phrase": "model_checkers"}, {"score": 0.004499647408293102, "phrase": "labelled_transition_systems"}, {"score": 0.004262273304740847, "phrase": "kripke_structures"}, {"score": 0.004055652445791872, "phrase": "elegant_formal_language"}, {"score": 0.004019171295196278, "phrase": "property_specification"}, {"score": 0.0038070478295250676, "phrase": "hml"}, {"score": 0.0034937647771945803, "phrase": "new_action-based_propositional_branching-time_temporal_logic"}, {"score": 0.0033393700382428207, "phrase": "ctl"}, {"score": 0.0032061793819537633, "phrase": "similar_but_more_comprehensive_way"}, {"score": 0.0031773149810690494, "phrase": "action-based_ctl"}, {"score": 0.003134503353065008, "phrase": "de_nicola"}, {"score": 0.0030783143919343972, "phrase": "r._de_nicola"}, {"score": 0.0030505976034245234, "phrase": "f.w._vaandrager"}, {"score": 0.0029689311901364797, "phrase": "transition_systems"}, {"score": 0.0028634235895823594, "phrase": "concurrent_processes"}, {"score": 0.0027741761880779535, "phrase": "theoretical_computer_science"}, {"score": 0.002568812627436125, "phrase": "temporal_operators"}, {"score": 0.0024111277643627154, "phrase": "fixed-point_characterisation"}, {"score": 0.0023465400668244386, "phrase": "symbolic_algorithms"}, {"score": 0.0023253967212081626, "phrase": "global_model_checking"}, {"score": 0.002252880693912436, "phrase": "new_logic"}, {"score": 0.002162951519368368, "phrase": "mutual-exclusion_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["formal verification", " model checking", " action-based temporal logic", " fixed point", " mutual-exclusion algorithm"], "paper_abstract": "Model checkers for systems represented by labelled transition systems are not as extensively used as those for systems represented by Kripke structures. This is partially due to the lack of an elegant formal language for property specification which would not be as raw as, for example, HML yet also not as complex as, for example, mu-calculus. This paper proposes a new action-based propositional branching-time temporal logic ACTLW, which enhances popular computation tree logic (CTL) with the notion of actions in a similar but more comprehensive way than action-based CTL introduced by De Nicola and Vaandrager [R. De Nicola, F.W. Vaandrager, Action versus logics for transition systems, in: Semantics of Systems of Concurrent Processes, Proceedings LITP Spring School on Theoretical Computer Science, LNCS 469, 1990, pp. 407419]. ACTLW is defined by using temporal operators until and unless only, whereas all other temporal operators are derived from them. Fixed-point characterisation of the operators together with symbolic algorithms for global model checking are shown. Usage of this new logic is illustrated by an example of verification of mutual-exclusion algorithms. (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "ACTLW - An action-based computation tree logic with unless operator", "paper_id": "WOS:000253660400008"}