{"auto_keywords": [{"score": 0.04385943794070392, "phrase": "wyner"}, {"score": 0.0047268728636719725, "phrase": "one-to-one_codes"}, {"score": 0.0046834372388970405, "phrase": "\"one-shot\"_codes"}, {"score": 0.004534517530868195, "phrase": "source_symbols"}, {"score": 0.004431041346291019, "phrase": "prefix_codes"}, {"score": 0.004040123129261597, "phrase": "average_code_length"}, {"score": 0.0032066653632708965, "phrase": "precise_estimates"}, {"score": 0.0030336118627011786, "phrase": "block_code"}, {"score": 0.002936997013291548, "phrase": "binary_memoryless_source"}, {"score": 0.0028566300478906916, "phrase": "average_anti-redundancy"}, {"score": 0.00229844995872581, "phrase": "fluctuating_function"}, {"score": 0.002266765479420981, "phrase": "code_length_increases"}, {"score": 0.0022355167967736326, "phrase": "relatively_simple_finding"}, {"score": 0.0021843879253500894, "phrase": "analytic_tools"}, {"score": 0.002154272413276506, "phrase": "precise_evaluation"}, {"score": 0.0021344259291927914, "phrase": "bernoulli_sums"}, {"score": 0.0021049977753042253, "phrase": "saddle_point_method"}], "paper_keywords": ["average redundancy", " Bernoulli sums", " distribution of sequences modulo 1", " one-to-one codes", " prefix codes", " saddle point method"], "paper_abstract": "One-to-one codes are \"one-shot\" codes that assign a distinct codeword to source symbols and are not necessarily prefix codes (more generally, uniquely decodable). Interestingly, as Wyner proved in 1972, for such codes the average code length can be smaller than the source entropy. By how much? We call this difference the anti-redundancy. Various authors over the years have shown that the anti-redundancy can be as big as minus the logarithm of the source entropy. However, to the best of our knowledge precise estimates do not exist. In this note, we consider a block code of length n generated for a binary memoryless source, and prove that the average anti-redundancy is -1/2 log(2) n + C + F(n) + o(1) where C is a constant and either F(n) = 0 if log(2)(1 - p)/p is irrational (where p is the probability of generating a \"0\") or F(n) is a fluctuating function as the code length increases. This relatively simple finding requires a combination of analytic tools such as precise evaluation of Bernoulli sums, the saddle point method, and theory of distribution of sequences modulo 1.", "paper_title": "A one-to-one code and its anti-redundancy", "paper_id": "WOS:000259407000029"}