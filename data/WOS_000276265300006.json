{"auto_keywords": [{"score": 0.0428614620458835, "phrase": "on-line_algorithm"}, {"score": 0.02832626361491208, "phrase": "randomized_on-line_algorithm"}, {"score": 0.028034800967580494, "phrase": "constant_competitive_ratio"}, {"score": 0.00481495049065317, "phrase": "disjoint_paths"}, {"score": 0.004598933498016774, "phrase": "maximum_vertex_disjoint_path_problem"}, {"score": 0.004285289574869884, "phrase": "on-line_fashion"}, {"score": 0.0038816547233402267, "phrase": "previously_accepted_request"}, {"score": 0.003746871277361436, "phrase": "accepted_requests"}, {"score": 0.003603989174919527, "phrase": "competitive_ratio"}, {"score": 0.0031733261514150534, "phrase": "adler"}, {"score": 0.0031509074493969854, "phrase": "azar"}, {"score": 0.0028944757265206332, "phrase": "previously_accepted_requests"}, {"score": 0.002575526825728026, "phrase": "current_work"}, {"score": 0.002408052242408488, "phrase": "related_problem"}, {"score": 0.002357457094026928, "phrase": "accepted_paths"}, {"score": 0.00232431758517087, "phrase": "capacity_constraint"}, {"score": 0.002275477757478827, "phrase": "disjoint_path_problem"}, {"score": 0.0021885820862000962, "phrase": "available_capacity"}], "paper_keywords": ["Online algorithms", " Disjoint paths", " Disjoint paths on trees", " Admission control", " Call control"], "paper_abstract": "We consider the on-line version of the maximum vertex disjoint path problem when the underlying network is a tree. In this problem, a sequence of requests arrives in an on-line fashion, where every request is a path in the tree. The on-line algorithm may accept a request only if it does not share a vertex with a previously accepted request. The goal is to maximize the number of accepted requests. It is known that no on-line algorithm can have a competitive ratio better than Omega(log n) for this problem, even if the algorithm is randomized and the tree is simply a line. Obviously, it is desirable to beat the logarithmic lower bound. Adler and Azar (Proc. of the 10th ACM-SIAM Symposium on Discrete Algorithm, pp. 1-10, 1999) showed that if preemption is allowed (namely, previously accepted requests may be discarded, but once a request is discarded it can no longer be accepted), then there is a randomized on-line algorithm that achieves constant competitive ratio on the line. In the current work we present a randomized on-line algorithm with preemption that has constant competitive ratio on any tree. Our results carry over to the related problem of maximizing the number of accepted paths subject to a capacity constraint on vertices (in the disjoint path problem this capacity is 1). Moreover, if the available capacity is at least 4, randomization is not needed and our on-line algorithm becomes deterministic.", "paper_title": "A Preemptive Algorithm for Maximizing Disjoint Paths on Trees", "paper_id": "WOS:000276265300006"}