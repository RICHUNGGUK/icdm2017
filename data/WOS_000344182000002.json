{"auto_keywords": [{"score": 0.03947447987613366, "phrase": "energy_consumption"}, {"score": 0.00481495049065317, "phrase": "fault-tolerant_earliest_deadline"}, {"score": 0.004684157900507474, "phrase": "hard_real-time_systems"}, {"score": 0.0044026610128451256, "phrase": "power_density"}, {"score": 0.004224418476742716, "phrase": "embedded_real-time_systems"}, {"score": 0.003889206369317587, "phrase": "effective_scheduling_methods"}, {"score": 0.0035072146967082083, "phrase": "transient_faults"}, {"score": 0.0034118234596993836, "phrase": "hard_real-time_system"}, {"score": 0.003296212583539166, "phrase": "edf_policy"}, {"score": 0.00307657476125683, "phrase": "first_algorithm"}, {"score": 0.0029518598926717332, "phrase": "well-known_fault"}, {"score": 0.002931569771634119, "phrase": "oblivious_low-power_scheduling_algorithm"}, {"score": 0.0026986685585382347, "phrase": "fault-free_situation"}, {"score": 0.002643386043540555, "phrase": "adequate_resources"}, {"score": 0.0025014259919355453, "phrase": "third_algorithm"}, {"score": 0.0023507916951658455, "phrase": "reserved_resources"}, {"score": 0.0022710523337245337, "phrase": "better_energy_efficiency"}, {"score": 0.0022399174232611853, "phrase": "simulation_results"}, {"score": 0.0021789194955896124, "phrase": "proposed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "energy_savings"}], "paper_keywords": ["EDF", " Fault tolerance", " Energy consumption", " Shared recovery"], "paper_abstract": "Aggressive technology scaling has dramatically increased the power density and degraded the reliability of embedded real-time systems. The goal of our research in this paper is to develop effective scheduling methods that can minimize the energy consumption and, at the same time, tolerate up to transient faults when executing a hard real-time system scheduled according to the EDF policy. Three scheduling algorithms are presented in this paper. The first algorithm is an extension of a well-known fault oblivious low-power scheduling algorithm. The second algorithm intends to minimize the energy consumption under the fault-free situation while reserving adequate resources for recovery when faults strike. The third algorithm improves upon the first two by sharing the reserved resources and thus can achieve better energy efficiency. Simulation results show that the proposed algorithms consistently outperform other related approaches in energy savings.", "paper_title": "Energy efficient fault-tolerant earliest deadline first scheduling for hard real-time systems", "paper_id": "WOS:000344182000002"}