{"auto_keywords": [{"score": 0.048877326221094676, "phrase": "web_service_composition"}, {"score": 0.00481495049065317, "phrase": "semantic_web_services"}, {"score": 0.004605434064238641, "phrase": "inevitable_aspect"}, {"score": 0.00454725669814484, "phrase": "web_services_technology"}, {"score": 0.00443308765153716, "phrase": "complex_problems"}, {"score": 0.004349337717774093, "phrase": "available_basic_services"}, {"score": 0.004133627071344356, "phrase": "problem_requirements"}, {"score": 0.004081385289516914, "phrase": "automatic_composition"}, {"score": 0.003928572641266562, "phrase": "best_candidate_services"}, {"score": 0.0038789122930433305, "phrase": "composition_time"}, {"score": 0.003829877278269543, "phrase": "qos_requirements"}, {"score": 0.003503497128638099, "phrase": "candidate_web_services"}, {"score": 0.0033508547759861186, "phrase": "web_service_composition_approach"}, {"score": 0.0032253056091816465, "phrase": "rich_set"}, {"score": 0.0030651710672229926, "phrase": "composite_service"}, {"score": 0.0026307897899760383, "phrase": "basic_properties"}, {"score": 0.0025810006125483835, "phrase": "proposed_approach"}, {"score": 0.002532151331015729, "phrase": "web_service_composition_problem"}, {"score": 0.0024842242921857705, "phrase": "constraint_satisfaction_problem"}, {"score": 0.002391067964886602, "phrase": "best_solution"}, {"score": 0.0022434880661725493, "phrase": "semantic_compatibility"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Web service composition", " Semantic Web services", " Constraints", " Constraint programming", " Schedule"], "paper_abstract": "Web service composition is an inevitable aspect of Web services technology, which solves complex problems by combining available basic services and ordering them to best suit the problem requirements. Automatic composition gives us flexibility of selecting best candidate services at composition time satisfying QoS requirements: this would require the user to define constraints for selecting and composing candidate Web services. In this work, a Web service composition approach is presented in which a rich set of constraints can be defined on the composite service. The output of the framework is the schedule of Web service composition in which how and when services are executed is defined. The basic properties of the proposed approach is converting Web service composition problem into a constraint satisfaction problem in order to find the best solution that meets all criteria defined by user and providing semantic compatibility and composability during composition. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Composing semantic Web services under constraints", "paper_id": "WOS:000267179500027"}