{"auto_keywords": [{"score": 0.03786649627240986, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "parallel_knock-out_problem"}, {"score": 0.004704187604192605, "phrase": "computational_complexity_questions"}, {"score": 0.004622783000449884, "phrase": "parallel_knock-out_schemes"}, {"score": 0.004310949776826717, "phrase": "remaining_vertex"}, {"score": 0.0033559647822437298, "phrase": "fixed_positive_integers"}, {"score": 0.002720785798036066, "phrase": "bounded_tree-width"}, {"score": 0.002507511169156787, "phrase": "polynomial_time"}, {"score": 0.0024072121760839427, "phrase": "-regular_graphs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["parallel knock-out", " graphs", " computational complexity"], "paper_abstract": "We consider computational complexity questions related to parallel knock-out schemes for graphs. In such schemes, in each round, each remaining vertex of a given graph eliminates exactly one of its neighbours. We show that the problem of whether, for a given bipartite graph, such a scheme can be found that eliminates every vertex is NP-complete. Moreover, we show that, for all fixed positive integers k >= 2, the problem of whether a given bipartite graph admits a scheme in which all vertices are eliminated in at most (exactly) k rounds is NP-complete. For graphs with bounded tree-width, however, both of these problems are shown to be solvable in polynomial time. We also show that r-regular graphs with r >= 1, factor-critical graphs and 1-tough graphs admit a scheme in which all vertices are eliminated in one round. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Computational complexity of the parallel knock-out problem", "paper_id": "WOS:000254543900015"}