{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "coq_featuring_universe_polymorphism"}, {"score": 0.004610058444728656, "phrase": "core_component"}, {"score": 0.0045249263666466005, "phrase": "proof_assistant"}, {"score": 0.004469042910390712, "phrase": "programming_language"}, {"score": 0.004413846562278824, "phrase": "dependent_types"}, {"score": 0.004173743791750695, "phrase": "higher-order_problems"}, {"score": 0.0038737214010638745, "phrase": "unification_algorithms"}, {"score": 0.0037318666008429014, "phrase": "common_problems"}, {"score": 0.003039311963787733, "phrase": "full_description"}, {"score": 0.0029830992938695007, "phrase": "new_unification_algorithm"}, {"score": 0.0028917056916949744, "phrase": "inductive_constructions"}, {"score": 0.0027172101552870973, "phrase": "universe_polymorphism"}, {"score": 0.0026835920552084488, "phrase": "canonical_structures"}, {"score": 0.0025691622090542304, "phrase": "coq's_unification"}, {"score": 0.002444333100610621, "phrase": "useful_heuristics"}, {"score": 0.0021715812867126884, "phrase": "selected_set"}, {"score": 0.0021049977753042253, "phrase": "large_developments"}], "paper_keywords": ["Interactive theorem proving", " unification", " Coq", " universe polymorphism", " overloading"], "paper_abstract": "Unification is a core component of every proof assistant or programming language featuring dependent types. In many cases, it must deal with higher-order problems up to conversion. Since unification in such conditions is undecidable, unification algorithms may include several heuristics to solve common problems. However, when the stack of heuristics grows large, the result and complexity of the algorithm can become unpredictable. Our contributions are twofold: (1) We present a full description of a new unification algorithm for the Calculus of Inductive Constructions (the base logic of COQ), including universe polymorphism, canonical structures (the overloading mechanism baked into COQ's unification), and a small set of useful heuristics. (2) We implemented our algorithm, and tested it on several libraries, providing evidence that the selected set of heuristics suffices for large developments.", "paper_title": "A Unification Algorithm for COQ Featuring Universe Polymorphism and Overloading", "paper_id": "WOS:000367255800017"}