{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_algorithms"}, {"score": 0.004706453355638515, "phrase": "diverse_nature"}, {"score": 0.0043953478557600565, "phrase": "representative_subset"}, {"score": 0.004345525254560329, "phrase": "distributed_benchmarks"}, {"score": 0.004058180509184539, "phrase": "new_kernel_benchmark_suite"}, {"score": 0.0038332390893263844, "phrase": "classical_distributed_algorithms"}, {"score": 0.003768210872019392, "phrase": "parallel_languages"}, {"score": 0.003683213029483699, "phrase": "multiple_variations"}, {"score": 0.0033048445033866795, "phrase": "fine_grain_synchronization_primitives"}, {"score": 0.002982203248352076, "phrase": "interesting_aspects"}, {"score": 0.0029483516334882862, "phrase": "distributed_applications"}, {"score": 0.0028653893877383188, "phrase": "remote_communication_requests"}, {"score": 0.002442025065383455, "phrase": "problem_size"}, {"score": 0.002373276186210053, "phrase": "compute_threads"}, {"score": 0.0022287497627555895, "phrase": "involved_set"}, {"score": 0.0022034318550547866, "phrase": "input_generators"}, {"score": 0.0021784009230363627, "phrase": "output_validators"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Benchmarks.", " Distributed algorithms", " Performance evaluation", " Task parallelism", " Data parallelism", " Recursive task parallelism"], "paper_abstract": "Considering the diverse nature of real-world distributed applications that makes it hard to identify a representative subset of distributed benchmarks, we focus on their underlying distributed algorithms. We present and characterize a new kernel benchmark suite (named IMSuite) that simulates some of the classical distributed algorithms in task parallel languages. We present multiple variations of our kernels, broadly categorized under two heads: (a) varying synchronization primitives (with and without fine grain synchronization primitives); and (b) varying forms of parallelization (data parallel and recursive task parallel). Our characterization covers interesting aspects of distributed applications such as distribution of remote communication requests, number of synchronization, task creation, task termination and atomic operations. We study the behavior (execution time) of our kernels by varying the problem size, the number of compute threads, and the input configurations. We also present an involved set of input generators and output validators. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "IMSuite: A benchmark suite for simulating distributed algorithms", "paper_id": "WOS:000346552500001"}