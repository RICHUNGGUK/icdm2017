{"auto_keywords": [{"score": 0.04090510223652552, "phrase": "arc_consistency"}, {"score": 0.009589712736960151, "phrase": "variable-value_graph"}, {"score": 0.00481495049065317, "phrase": "delayed_filtering"}, {"score": 0.0044356867986444426, "phrase": "filtering_algorithms"}, {"score": 0.00438399094249306, "phrase": "global_constraints"}, {"score": 0.0035082436540296406, "phrase": "reasonable_filtering_frequency"}, {"score": 0.0033868916699805224, "phrase": "dense_instances"}, {"score": 0.0032505921489759224, "phrase": "global_cardinalily_constraint"}, {"score": 0.002272053079580848, "phrase": "expected_sense"}, {"score": 0.0021049977753042253, "phrase": "search_step"}], "paper_keywords": [""], "paper_abstract": "One way to address the tradeoff between the efficiency and the effectiveness of filtering algorithms for global constraints is as follows: Instead of compromising on the level of consistency, compromise on the frequency at which arc consistency is enforced during the search. In this paper, a method is suggested to determine a reasonable filtering frequency for a given constraint. For dense instances of AllDifferent and its generalization, the Global Cardinalily Constraint, let n and m be, respectively, the number of nodes and edges in the variable-value graph. Under the assumption that propagation is random (i.e., each edge removed from the variable-value graph is selected at random), it is shown that recomputing arc consistency only after Theta(m/n) edges were removed results in a speedup while, in the expected sense, filtering effectiveness is comparable to that of enforcing arc consistency at each search step.", "paper_title": "Expected-case analysis for delayed filtering", "paper_id": "WOS:000238117300011"}