{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_cubes"}, {"score": 0.04924496525218248, "phrase": "multiple_data_cubes"}, {"score": 0.04745721344271394, "phrase": "pourabass"}, {"score": 0.04713886169641211, "phrase": "shoshani"}, {"score": 0.04021776617821063, "phrase": "primary_data_cube"}, {"score": 0.038482110454457284, "phrase": "primary_and_proxy_data_cubes"}, {"score": 0.004616034337089482, "phrase": "\"joint\"_query"}, {"score": 0.004425299304063172, "phrase": "data_cube"}, {"score": 0.00376409764683147, "phrase": "study_cases"}, {"score": 0.003545487140867762, "phrase": "joint_query"}, {"score": 0.0035082436540296406, "phrase": "accurate_estimate"}, {"score": 0.0031344430376015033, "phrase": "sufficient_condition"}, {"score": 0.0027806988302728633, "phrase": "proxy_data_cube"}, {"score": 0.0027034263575471352, "phrase": "general_combination_schemes"}, {"score": 0.002609840513713399, "phrase": "merge_expressions"}, {"score": 0.0025194861926779223, "phrase": "proxy_noncommonality"}, {"score": 0.0023897719795915, "phrase": "efficient_procedure"}, {"score": 0.0023646398663605493, "phrase": "joint_queries"}, {"score": 0.002339771435910601, "phrase": "special_case"}, {"score": 0.0023233376117560317, "phrase": "perfect_merge_expressions"}, {"score": 0.0021882194836465936, "phrase": "unaggregated_data"}, {"score": 0.0021652024032375833, "phrase": "aggregate_functions"}, {"score": 0.002105228133051947, "phrase": "min"}], "paper_keywords": ["Algorithms", " Performance", " Data cubes", " data integration", " OLAP"], "paper_abstract": "In order to answer a \"joint\" query from multiple data cubes, Pourabass and Shoshani [2007] distinguish the data cube on the measure of interest (called the \"primary\" data cube) from the other data cubes (called \"proxy\" data cubes) that are used to involve the dimensions (in the query) not in the primary data cube. They demonstrate in study cases that, if the measures of the primary and proxy data cubes are correlated, then the answer to a joint query is an accurate estimate of its true value. Needless to say, for two or more proxy data cubes, the result depends upon the way the primary and proxy data cubes are combined together; however, for certain combination schemes Pourabass and Shoshani provide a sufficient condition, that they call proxy noncommonality, for the invariance of the result. In this article, we introduce: (1) a merge operator combining the contents of a primary data cube with the contents of a proxy data cube, (2) merge expressions for general combination schemes, and (3) an equivalence relation between merge expressions having the same pattern. Then, we prove that proxy noncommonality characterizes patterns for which every two merge expressions are equivalent. Moreover, we provide an efficient procedure for answering joint queries in the special case of perfect merge expressions. Finally, we show that our results apply to data cubes in which measures are obtained from unaggregated data using the aggregate functions SUM, COUNT, MAX, and MIN, and a lotmore.", "paper_title": "A Join-Like Operator to Combine Data Cubes and Answer Queries from Multiple Data Cubes", "paper_id": "WOS:000343423500007"}