{"auto_keywords": [{"score": 0.03295961196488788, "phrase": "precomputation_time"}, {"score": 0.03064987188361121, "phrase": "search_space"}, {"score": 0.029420333683948783, "phrase": "new_approach"}, {"score": 0.00481495049065317, "phrase": "database-driven_real-time_heuristic_search"}, {"score": 0.004770211811866158, "phrase": "video-game_pathfinding"}, {"score": 0.004725886853744007, "phrase": "real-time_heuristic_search_algorithms"}, {"score": 0.004385733482617193, "phrase": "problem_size"}, {"score": 0.004185632403886255, "phrase": "time_or_memory_resources"}, {"score": 0.004069963083642548, "phrase": "rapid_response_time"}, {"score": 0.0038661089070527424, "phrase": "video_games"}, {"score": 0.0038301525703886585, "phrase": "numerous_units"}, {"score": 0.0036553070575015344, "phrase": "player's_commands"}, {"score": 0.0036213041338584756, "phrase": "classic_real-time_heuristic_search_algorithms"}, {"score": 0.0033919477901198716, "phrase": "recent_algorithms"}, {"score": 0.0032522091171602557, "phrase": "precomputed_subgoals"}, {"score": 0.0031770714776989282, "phrase": "common_issue"}, {"score": 0.002948066398723126, "phrase": "precomputed_data"}, {"score": 0.0025862068041567934, "phrase": "real-time_search"}, {"score": 0.00246800641971897, "phrase": "dynamic_programming"}, {"score": 0.0023996890513009743, "phrase": "learning_component"}, {"score": 0.0023662411481713704, "phrase": "resultant_\"scrubbing"}, {"score": 0.002333258365963461, "phrase": "experimental_results"}, {"score": 0.0022686625017583387, "phrase": "grid_cells"}, {"score": 0.0022475295254231714, "phrase": "counter-strike"}, {"score": 0.002154835714714195, "phrase": "significantly_faster_execution_times"}, {"score": 0.0021347607855562102, "phrase": "improved_optimality_results"}, {"score": 0.0021049977753042253, "phrase": "previous_real-time_algorithms"}], "paper_keywords": ["Database", " game pathfinding", " real-time search"], "paper_abstract": "Real-time heuristic search algorithms satisfy a constant bound on the amount of planning per action, independent of the problem size. These algorithms are useful when the amount of time or memory resources are limited, or a rapid response time is required. An example of such a problem is pathfinding in video games where numerous units may be simultaneously required to react promptly to a player's commands. Classic real-time heuristic search algorithms cannot be deployed due to their obvious state revisitation (\"scrubbing\"). Recent algorithms have improved performance by using a database of precomputed subgoals. However, a common issue is that the precomputation time can be large, and there is no guarantee that the precomputed data adequately cover the search space. In this paper, we present a new approach that guarantees coverage by abstracting the search space, using the same algorithm that performs the real-time search. It reduces the precomputation time via the use of dynamic programming. The new approach eliminates the learning component and the resultant \"scrubbing.\" Experimental results on maps of tens of millions of grid cells from Counter-Strike: Source and benchmark maps from Dragon Age: Origins show significantly faster execution times and improved optimality results compared to previous real-time algorithms.", "paper_title": "Database-Driven Real-Time Heuristic Search in Video-Game Pathfinding", "paper_id": "WOS:000324586300003"}