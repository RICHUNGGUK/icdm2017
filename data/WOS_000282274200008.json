{"auto_keywords": [{"score": 0.02587471518851888, "phrase": "rdrp"}, {"score": 0.00481495049065317, "phrase": "reward-driven_request_prioritization"}, {"score": 0.004755054742217193, "phrase": "e-commerce_web_sites"}, {"score": 0.0043560464825349275, "phrase": "e-commerce_services"}, {"score": 0.004248294537944227, "phrase": "web_servers"}, {"score": 0.004195418010131832, "phrase": "overload_conditions"}, {"score": 0.0037246656582642272, "phrase": "server-side_request_scheduling_mechanism"}, {"score": 0.003454858296390957, "phrase": "higher_execution_priority"}, {"score": 0.0034118234596993836, "phrase": "client_web_sessions"}, {"score": 0.003047776993499616, "phrase": "future_session_structure"}, {"score": 0.0028986672783671147, "phrase": "aggregated_information"}, {"score": 0.0028625406368744995, "phrase": "recent_client_behavior"}, {"score": 0.0027054473441439422, "phrase": "web_server_resources"}, {"score": 0.0026055251533586804, "phrase": "tpc-w_benchmark_application"}, {"score": 0.002509284173541882, "phrase": "rdrp_techniques"}, {"score": 0.0024625017739528096, "phrase": "jboss_web_application_server_show"}, {"score": 0.002255431275670053, "phrase": "better_qos"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["e-Commerce services", " Profit maximization", " Performance", " Quality-of-Service", " Request scheduling", " Admission control", " Bayesian inference analysis"], "paper_abstract": "Meeting client Quality-of-Service (QoS) expectations proves to be a difficult task for the providers of e-Commerce services, especially when web servers experience overload conditions, which cause increased response times and request rejections, leading to user frustration, lowered usage of the service and reduced revenues. In this paper, we propose a server-side request scheduling mechanism that addresses these problems. Our Reward-Driven Request Prioritization (RDRP) algorithm gives higher execution priority to client web sessions that are likely to bring more service profit (or any other application-specific reward). The method works by predicting future session structure by comparing its requests seen so far with aggregated information about recent client behavior, and using these predictions to preferentially allocate web server resources. Our experiments using the TPC-W benchmark application with an implementation of the RDRP techniques in the JBoss web application server show that RDRP can significantly boost profit attained by the service, while providing better QoS to clients that bring more profit. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "RDRP: Reward-Driven Request Prioritization for e-Commerce web sites", "paper_id": "WOS:000282274200008"}