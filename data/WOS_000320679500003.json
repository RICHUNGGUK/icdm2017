{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "machine_parameters"}, {"score": 0.043486858340036, "phrase": "multicore-oblivious_algorithm"}, {"score": 0.004520272777451894, "phrase": "parallel_shared-memory_machine"}, {"score": 0.004472935829694716, "phrase": "hierarchical_multi-level_caching"}, {"score": 0.00433386573276633, "phrase": "multicore-oblivious_approach"}, {"score": 0.004199103786109637, "phrase": "hm."}, {"score": 0.0037594599958631404, "phrase": "cache_levels"}, {"score": 0.003720060615588018, "phrase": "cache_sizes"}, {"score": 0.0036810726176482278, "phrase": "block_lengths"}, {"score": 0.0035106041824568618, "phrase": "small_set"}, {"score": 0.0032954888655173666, "phrase": "run-time_scheduler"}, {"score": 0.003209782650616364, "phrase": "parallel_tasks"}, {"score": 0.0031428202743657057, "phrase": "efficient_multicore-oblivious_algorithms"}, {"score": 0.0030449789178940787, "phrase": "matrix_transposition"}, {"score": 0.0030131451144525157, "phrase": "fft"}, {"score": 0.0029346624184926305, "phrase": "gaussian_elimination_paradigm"}, {"score": 0.0028432828877281388, "phrase": "connected_components"}, {"score": 0.002654911400878851, "phrase": "network-oblivious_algorithm"}, {"score": 0.0025994945418484935, "phrase": "bilardi_et_al"}, {"score": 0.0024789887640568093, "phrase": "parallel_distributed-memory_machines"}, {"score": 0.0022544399432457164, "phrase": "efficient_network-oblivious_algorithms"}, {"score": 0.002172701452347454, "phrase": "known_efficient_network-oblivious_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Multicore", " Cache", " Network", " Oblivious algorithm", " Gaussian elimination paradigm", " List ranking"], "paper_abstract": "We address the design of algorithms for multicores that are oblivious to machine parameters. We propose HM, a multicore model consisting of a parallel shared-memory machine with hierarchical multi-level caching, and we introduce a multicore-oblivious approach to algorithms and schedulers for HM. A multicore-oblivious algorithm is specified with no mention of any machine parameters, such as the number of cores, number of cache levels, cache sizes and block lengths. However, it is equipped with a small set of instructions that can be used to provide hints to the run-time scheduler on how to schedule parallel tasks. We present efficient multicore-oblivious algorithms for several fundamental problems including matrix transposition, FFT, sorting, the Gaussian Elimination Paradigm, list ranking, and connected components. The notion of a multicore-oblivious algorithm is complementary to that of a network-oblivious algorithm, introduced by Bilardi et al. (2007) [8] for parallel distributed-memory machines where processors communicate point-to-point. We show that several of our multicore-oblivious algorithms translate into efficient network-oblivious algorithms, adding to the body of known efficient network-oblivious algorithms. (c) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Oblivious algorithms for multicores and networks of processors", "paper_id": "WOS:000320679500003"}