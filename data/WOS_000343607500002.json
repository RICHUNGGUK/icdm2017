{"auto_keywords": [{"score": 0.042389058155836386, "phrase": "unified_framework"}, {"score": 0.03817032356847601, "phrase": "top-k_pairs_queries"}, {"score": 0.00481495049065317, "phrase": "k_closest_pairs_queries"}, {"score": 0.004660453113061494, "phrase": "scoring_function"}, {"score": 0.004366106816225457, "phrase": "top-k_pairs_query_returns"}, {"score": 0.0042489946866108895, "phrase": "smallest_scores"}, {"score": 0.003980531478122155, "phrase": "generic_top-k_pairs_queries"}, {"score": 0.003937459891461576, "phrase": "k-closest_pairs_queries"}, {"score": 0.0038948525410795517, "phrase": "k-furthest_pairs_queries"}, {"score": 0.003728966994353039, "phrase": "-closest_pairs_query"}, {"score": 0.003668591097652231, "phrase": "special_case"}, {"score": 0.0031329184724341592, "phrase": "broad_class"}, {"score": 0.0030989899982042236, "phrase": "top-k_queries"}, {"score": 0.00295078850927459, "phrase": "efficient_algorithms"}, {"score": 0.002887210021573995, "phrase": "detailed_theoretical_analysis"}, {"score": 0.0028096544129939277, "phrase": "expected_performance"}, {"score": 0.0026033756286033285, "phrase": "pre-built_indexes"}, {"score": 0.0025611773887867255, "phrase": "limited_main_memory"}, {"score": 0.002235040467016128, "phrase": "exclusive_top-k_pairs_queries"}], "paper_keywords": ["Closest pairs queries", " furthest pairs queries", " top-k queries", " multi-valued objects", " uncertain objects"], "paper_abstract": "Given a scoring function that computes the score of a pair of objects, a top-k pairs query returns k pairs with the smallest scores. In this paper, we present a unified framework for answering generic top-k pairs queries including k-closest pairs queries, k-furthest pairs queries and their variants. Note that k-closest pairs query is a special case of top-k pairs queries where the scoring function is the distance between the two objects in a pair. We are the first to present a unified framework to efficiently answer a broad class of top-k queries including the queries mentioned above. We present efficient algorithms and provide a detailed theoretical analysis that demonstrates that the expected performance of our proposed algorithms is optimal for two dimensional data sets. Furthermore, our framework does not require pre-built indexes, uses limited main memory and is easy to implement. We also extend our techniques to support top-k pairs queries on multi-valued (or uncertain) objects. We also demonstrate that our framework can handle exclusive top-k pairs queries. Our extensive experimental study demonstrates effectiveness and efficiency of our proposed techniques.", "paper_title": "A Unified Framework for Answering k Closest Pairs Queries and Variants", "paper_id": "WOS:000343607500002"}