{"auto_keywords": [{"score": 0.0047277417909824745, "phrase": "stochastic_matchings"}, {"score": 0.004659108142668152, "phrase": "random_graph_model"}, {"score": 0.004608284537368354, "phrase": "possible_edge_e"}, {"score": 0.004508286991825192, "phrase": "probability_p"}, {"score": 0.004221072004655573, "phrase": "randomly_generated_graph"}, {"score": 0.003303259489028193, "phrase": "expected_weight"}, {"score": 0.0031845067058084583, "phrase": "general_framework"}, {"score": 0.0031039212233596415, "phrase": "kidney_exchanges"}, {"score": 0.002992313172550772, "phrase": "online_advertisements"}, {"score": 0.0029380187414193653, "phrase": "lp-rounding_based_constant-factor_approximation_algorithms"}, {"score": 0.00276066021951467, "phrase": "weighted_stochastic_matching"}, {"score": 0.0027405092973494293, "phrase": "general_graphs"}, {"score": 0.002680932410366204, "phrase": "bipartite_graphs"}, {"score": 0.002632272952905936, "phrase": "open_question"}, {"score": 0.002613056713968863, "phrase": "chen_et_al"}, {"score": 0.0023582694348219233, "phrase": "stochastic_online_matching_problem"}, {"score": 0.0021049977753042253, "phrase": "constant_factor_approximation_algorithm"}], "paper_keywords": ["Stochastic optimization", " Stochastic packing", " Online dating", " Dependent rounding"], "paper_abstract": "Consider a random graph model where each possible edge e is present independently with some probability p (e) . Given these probabilities, we want to build a large/heavy matching in the randomly generated graph. However, the only way we can find out whether an edge is present or not is to query it, and if the edge is indeed present in the graph, we are forced to add it to our matching. Further, each vertex i is allowed to be queried at most t (i) times. How should we adaptively query the edges to maximize the expected weight of the matching? We consider several matching problems in this general framework (some of which arise in kidney exchanges and online dating, and others arise in modeling online advertisements); we give LP-rounding based constant-factor approximation algorithms for these problems. Our main results are the following: We give a 4 approximation for weighted stochastic matching on general graphs, and a 3 approximation on bipartite graphs. This answers an open question from Chen et al. (ICALP'09, LNCS, vol. 5555, pp. 266-278, [2009]). We introduce a generalization of the stochastic online matching problem (Feldman et al. in FOCS'09, pp. 117-126, [2009]) that also models preference-uncertainty and timeouts of buyers, and give a constant factor approximation algorithm.", "paper_title": "When LP Is the Cure for Your Matching Woes: Improved Bounds for Stochastic Matchings", "paper_id": "WOS:000303530100002"}