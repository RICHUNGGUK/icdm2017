{"auto_keywords": [{"score": 0.03330604039232812, "phrase": "dirichlet_distributions"}, {"score": 0.00481495049065317, "phrase": "online_bayesian"}, {"score": 0.004621671570727774, "phrase": "prism_programs"}, {"score": 0.004346139434813299, "phrase": "posterior_distributions"}, {"score": 0.0040869663676860535, "phrase": "sequential_approach"}, {"score": 0.003613899384402803, "phrase": "online_learning_situations"}, {"score": 0.003025277245730244, "phrase": "true_posterior"}, {"score": 0.002430411367515404, "phrase": "heavy_computational_burden"}, {"score": 0.002238767763626708, "phrase": "mercury_logic_programming_language"}, {"score": 0.002148677187261496, "phrase": "hidden_markov_model"}, {"score": 0.0021049977753042253, "phrase": "probabilistic_graph"}], "paper_keywords": ["Inductive logic programming", " Bayesian statistics", " Statistical relational learning", " PRISM", " Mixture models", " Missing data"], "paper_abstract": "This paper presents a method for approximating posterior distributions over the parameters of a given PRISM program. A sequential approach is taken where the distribution is updated one datapoint at a time. This makes it applicable to online learning situations where data arrives over time. The method is applicable whenever the prior is a mixture of products of Dirichlet distributions. In this case the true posterior will be a mixture of very many such products. An approximation is effected by merging products of Dirichlet distributions. An analysis of the quality of the approximation is presented. Due to the heavy computational burden of this approach, the method has been implemented in the Mercury logic programming language. Initial results using a hidden Markov model and a probabilistic graph are presented.", "paper_title": "Online Bayesian inference for the parameters of PRISM programs", "paper_id": "WOS:000308442200005"}