{"auto_keywords": [{"score": 0.039210582839072555, "phrase": "field_operations"}, {"score": 0.03531738520573261, "phrase": "input_matrix"}, {"score": 0.00481495049065317, "phrase": "polynomial_matrix"}, {"score": 0.004741167616693272, "phrase": "improved_cost_estimates"}, {"score": 0.0043215158337835706, "phrase": "n_x_n_matrix"}, {"score": 0.004031238480458909, "phrase": "deterministic_algorithm"}, {"score": 0.003878451139312637, "phrase": "worst_case_complexity"}, {"score": 0.0035076666315744525, "phrase": "upper_bound"}, {"score": 0.003427246079774314, "phrase": "average_column_degree"}, {"score": 0.0030283730114326014, "phrase": "missing_factor"}, {"score": 0.002846647336160784, "phrase": "positive_real_constants"}, {"score": 0.0025151755329660837, "phrase": "largest_invariant_factor"}, {"score": 0.002205079358459154, "phrase": "matrix_multiplication"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Polynomial matrix", " Matrix inversion", " Deterministic algorithm", " Nearly optimal algorithm"], "paper_abstract": "Improved cost estimates are given for the problem of computing the inverse of an n x n matrix of univariate polynomials over a field. A deterministic algorithm is demonstrated that has worst case complexity (n(3)s)(1+o(1)) field operations, where s >= 1 is an upper bound for the average column degree of the input matrix. Here, the \"+o(1)\" in the exponent indicates a missing factor c(1) (log ns)(c2) for positive real constants c(1) and c(2). As an application we show how to compute the largest invariant factor of the input matrix in (n(omega)s)(1+o(1)) field operations, where omega is the exponent of matrix multiplication. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A deterministic algorithm for inverting a polynomial matrix", "paper_id": "WOS:000350073300002"}