{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "break_scheduling_problems"}, {"score": 0.004747620102130588, "phrase": "working_areas"}, {"score": 0.004551199992546761, "phrase": "air_traffic_control"}, {"score": 0.00444559516711374, "phrase": "assembly_lines"}, {"score": 0.004261617028111862, "phrase": "supervision_personnel"}, {"score": 0.004104456271230213, "phrase": "break_assignment"}, {"score": 0.004047020753789236, "phrase": "existing_shiftplan"}, {"score": 0.003953068310598579, "phrase": "legal_demands"}, {"score": 0.003916098498242888, "phrase": "ergonomic_criteria"}, {"score": 0.003807242767474929, "phrase": "staffing_requirement_violations"}, {"score": 0.0032756158688245, "phrase": "memetic_algorithm"}, {"score": 0.0032145922365231093, "phrase": "genetic_operators"}, {"score": 0.0031695693589575916, "phrase": "local_search"}, {"score": 0.0029816229984366374, "phrase": "local_optima"}, {"score": 0.002818013056816282, "phrase": "statistical_methods"}, {"score": 0.0027012086158226456, "phrase": "best_parameter"}, {"score": 0.0021249064184347658, "phrase": "real-life_instances"}, {"score": 0.0021049977753042253, "phrase": "new_upper_bounds"}], "paper_keywords": ["Break scheduling", " Complexity", " Memetic algorithms", " Hybrid genetic algorithms", " Real-life application"], "paper_abstract": "Break scheduling problems arise in working areas where breaks are indispensable, e.g., in air traffic control, supervision, or assembly lines. We regard such a problem from the area of supervision personnel. The objective is to find a break assignment for an existing shiftplan such that various constraints reflecting legal demands or ergonomic criteria are satisfied and such that staffing requirement violations are minimised. We prove the NP-completeness of this problem when all possible break patterns for each shift are given explicitly as part of the input. To solve our problem we propose two variations of a memetic algorithm. We define genetic operators, a local search based on three neighbourhoods, and a penalty system that helps to avoid local optima. Parameters influencing the algorithms are experimentally evaluated and assessed with statistical methods. We compare our algorithms, each with the best parameter setting according to the evaluation, with the state-of-the-art algorithm on a set of 30 real-life and randomly generated instances that are publicly available. One of our algorithms returns improved results on 28 out of the 30 benchmark instances. To the best of our knowledge, our improved results for the real-life instances constitute new upper bounds for this problem", "paper_title": "The break scheduling problem: complexity results and practical algorithms", "paper_id": "WOS:000343289900004"}