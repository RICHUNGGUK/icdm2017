{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "intra-path_load"}, {"score": 0.013585517269476361, "phrase": "end-to-end_qos_requirement"}, {"score": 0.0105051441203138, "phrase": "lsa_algorithms"}, {"score": 0.004750873844061641, "phrase": "network_resource_provisioning_techniques"}, {"score": 0.004502943680955863, "phrase": "network's_resource_usage_efficiency"}, {"score": 0.0044430006374681285, "phrase": "end-to-end_qos_guarantees"}, {"score": 0.0035851703423654432, "phrase": "new_algorithms"}, {"score": 0.0034902664176377943, "phrase": "slack_allocation"}, {"score": 0.003367611042980526, "phrase": "qos_partitioning_problem"}, {"score": 0.0032492519841546682, "phrase": "key_concept"}, {"score": 0.002918483026678636, "phrase": "selected_path"}, {"score": 0.0027907771648224273, "phrase": "network_resource_usage_efficiency"}, {"score": 0.002729029534060092, "phrase": "slack_partition"}, {"score": 0.0026330549554033876, "phrase": "underlying_links"}, {"score": 0.0025518429503461736, "phrase": "multiple_qos_requirements"}, {"score": 0.0024842242921857705, "phrase": "violation_probability_bounds"}, {"score": 0.002451088210833819, "phrase": "detailed_simulation_study"}, {"score": 0.0023861329619604666, "phrase": "previous_approaches"}, {"score": 0.0023125191783901367, "phrase": "total_number"}, {"score": 0.0021915573326125428, "phrase": "network_path"}, {"score": 0.0021049977753042253, "phrase": "statistical_delay_guarantees"}], "paper_keywords": ["QoS partitioning", " load-balancing", " resource allocation"], "paper_abstract": "Network resource provisioning techniques need to perform both inter-path and intra-path load balancing to maximize the network's resource usage efficiency while supporting end-to-end QoS guarantees. This paper focuses on the intra-path load balancing problem: How to partition the end-to-end QoS requirement of an aggregate network flow along the links of a given path such that the deviation in the loads on these links is as small as possible? We propose a set of new algorithms, called Load-balancing Slack Allocation (LSA), to solve this QoS partitioning problem for unicast and multicast traffic. The key concept in the LSA algorithms is the notion of slack, which quantifies the flexibility available in partitioning the end-to-end QoS requirement across the links of a selected path or tree. We show that one can improve network resource usage efficiency by carefully selecting a slack partition that explicitly balances the loads on the underlying links. These algorithms can simultaneously partition multiple QoS requirements such as delay and delay violation probability bounds. A detailed simulation study demonstrates that, compared with previous approaches, the LSA algorithms can increase the total number of long-term flows that can be provisioned along a network path by up to 1.2 times for deterministic and 2.8 times for statistical delay guarantees.", "paper_title": "Slack allocation techniques for intra-path load balancing", "paper_id": "WOS:000251722600001"}