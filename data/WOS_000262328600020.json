{"auto_keywords": [{"score": 0.027738049954733696, "phrase": "nash_equilibrium"}, {"score": 0.005592495380698625, "phrase": "best_response_strategy"}, {"score": 0.00481495049065317, "phrase": "distributed_opportunistic_scheduling"}, {"score": 0.004789760466836797, "phrase": "ad_hoc_networks_with_random_access"}, {"score": 0.004617064974703469, "phrase": "opportunistic_scheduling"}, {"score": 0.004544963224988473, "phrase": "ad_hoe_network"}, {"score": 0.004438906892324366, "phrase": "random_access"}, {"score": 0.004323953965532459, "phrase": "joint_channel"}, {"score": 0.004234129588974058, "phrase": "channel_fading"}, {"score": 0.004200926582376575, "phrase": "link_condition"}, {"score": 0.004157058883925715, "phrase": "successful_channel"}, {"score": 0.0040387608245932086, "phrase": "latter_case"}, {"score": 0.0039341294012600085, "phrase": "additional_delay"}, {"score": 0.003882830641765884, "phrase": "better_channel_conditions"}, {"score": 0.003842271807385085, "phrase": "higher_throughput"}, {"score": 0.0038121298895564173, "phrase": "desired_tradeoff"}, {"score": 0.003742711659195878, "phrase": "optimal_stopping_rule"}, {"score": 0.0036938996194386016, "phrase": "distributed_scheduling"}, {"score": 0.003607630811220324, "phrase": "rigorous_characterization"}, {"score": 0.003579322995055781, "phrase": "optimal_strategies"}, {"score": 0.003360685661587978, "phrase": "network-centric_point"}, {"score": 0.00327356326590461, "phrase": "overall_network_throughput"}, {"score": 0.003247868216333148, "phrase": "optimal_stopping_theory"}, {"score": 0.0031970796597571367, "phrase": "optimal_scheme"}, {"score": 0.0031804269612927196, "phrase": "dos"}, {"score": 0.0031305909906978327, "phrase": "pure_threshold_policy"}, {"score": 0.003097865379563127, "phrase": "rate_threshold"}, {"score": 0.0030414140732789186, "phrase": "fixed-point_equation"}, {"score": 0.0030017207229983385, "phrase": "iterative_algorithms"}, {"score": 0.002893305833687092, "phrase": "account_fairness_requirements"}, {"score": 0.002825681384008326, "phrase": "user-centric_perspective"}, {"score": 0.0027164585428301837, "phrase": "threshold_selection"}, {"score": 0.00270221723573854, "phrase": "different_links"}, {"score": 0.0026809947669782005, "phrase": "noncooperative_game"}, {"score": 0.002471197479601348, "phrase": "neighboring_nodes"}, {"score": 0.0024325244760735566, "phrase": "online_stochastic_iterative_algorithm"}, {"score": 0.0024134149741656557, "phrase": "local_observations"}, {"score": 0.0023261986886876336, "phrase": "efficiency_loss"}, {"score": 0.0022777800735119405, "phrase": "pricing-based_mechanisms"}, {"score": 0.0021667778225942227, "phrase": "ad_hoc_networks"}, {"score": 0.0021328586481696157, "phrase": "initial_steps"}, {"score": 0.002116098276745512, "phrase": "new_avenue"}, {"score": 0.0021049977753042253, "phrase": "channel-aware_distributed_scheduling"}], "paper_keywords": ["Ad hoc networks", " distributed opportunistic scheduling (DOS)", " game theory", " optimal stopping", " threshold policy"], "paper_abstract": "In this paper, we study distributed opportunistic scheduling (DOS) in an ad hoe network, where many links contend for the same channel using random access. In such a network, DOS involves a process of joint channel probing and distributed scheduling. Due to channel fading, the link condition corresponding to a successful channel probing could be either good or poor. In the latter case, further channel probing, although at the cost of additional delay, may lead to better channel conditions and hence yield higher throughput. The desired tradeoff boils down to judiciously choosing the optimal stopping rule for channel probing and distributed scheduling. In this paper, we pursue a rigorous characterization of the optimal strategies from two perspectives, namely, a network-centric perspective and a user-centric perspective. We first consider DOS from a network-centric point of view, where links cooperate to maximize the overall network throughput. Using optimal stopping theory, we show that the optimal scheme for DOS turns out to be a pure threshold policy, where the rate threshold can be obtained by solving a fixed-point equation. We further devise iterative algorithms for computing the threshold. We also generalize the studies to take into account fairness requirements. Next, we explore DOS from a user-centric perspective, where each link seeks to maximize its own throughput. We treat the problem of threshold selection across different links as a noncooperative game. We explore the existence and uniqueness of the Nash equilibrium, and show that the Nash equilibrium can be approached by the best response strategy. Since the best response strategy requires message passing from neighboring nodes, we then develop an online stochastic iterative algorithm based on local observations only, and establish its convergence to the Nash equilibrium. Because there is an efficiency loss at the Nash equilibrium, we then study pricing-based mechanisms to mitigate the loss. Our results reveal that rich physical layer/MAC layer (PHY/MAC) diversities are available for exploitation in ad hoc networks. We believe that these initial steps open a new avenue for channel-aware distributed scheduling.", "paper_title": "Distributed Opportunistic Scheduling for Ad Hoc Networks With Random Access: An Optimal Stopping Approach", "paper_id": "WOS:000262328600020"}