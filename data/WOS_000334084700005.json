{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "linear"}, {"score": 0.00466085208934021, "phrase": "call-by-value_scenario"}, {"score": 0.004092026656771699, "phrase": "formal_system"}, {"score": 0.003834099867584972, "phrase": "time_complexity"}, {"score": 0.003569050665799723, "phrase": "krivine's_abstract_machine"}, {"score": 0.0031535341431377837, "phrase": "value_computation"}, {"score": 0.0030924870122337905, "phrase": "system_of_linear_dependent_types"}, {"score": 0.0030524593806830255, "phrase": "plotkin"}, {"score": 0.0026969099161088398, "phrase": "cek_machine"}, {"score": 0.0024297565926197505, "phrase": "true_statement"}, {"score": 0.0023826870912207303, "phrase": "extensional_and_intentional_behavior"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Complexity analysis", " Implicit computational complexity", " Type systems", " Linear logic"], "paper_abstract": "Linear dependent types were introduced recently (Dal Lago and Gaboardi, 2012) [26] as a formal system that allows to precisely capture both the extensional behavior and the time complexity of A-terms, when the latter are evaluated by Krivine's abstract machine. In this work, we show that the same paradigm can be applied to call-by-value computation. A system of linear dependent types for Plotkin's PCF is introduced, called dlPCF(v), whose types reflect the complexity of evaluating terms in the CEK machine. dlPCF(v) is proved to be sound, but also relatively complete: every true statement about the extensional and intentional behavior of terms can be derived, provided all true index term inequalities can be used as assumptions. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Linear dependent types in a call-by-value scenario", "paper_id": "WOS:000334084700005"}