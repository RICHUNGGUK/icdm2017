{"auto_keywords": [{"score": 0.040855906235626405, "phrase": "mpsocs"}, {"score": 0.00481495049065317, "phrase": "task_scheduling"}, {"score": 0.004707479285061122, "phrase": "feature_size"}, {"score": 0.004602395776895036, "phrase": "single_chip"}, {"score": 0.004204904449336037, "phrase": "power_supply_noise"}, {"score": 0.00414830454375092, "phrase": "major_reliability_problem"}, {"score": 0.004092463367307375, "phrase": "low_power_mpsocs"}, {"score": 0.004055652445791872, "phrase": "power_gating_techniques"}, {"score": 0.003929391999210588, "phrase": "processing_unit"}, {"score": 0.0037052054802048707, "phrase": "timing_divergence"}, {"score": 0.003671865026158296, "phrase": "even_functional_errors"}, {"score": 0.0036224139706218916, "phrase": "processing_units"}, {"score": 0.0035898158129721003, "phrase": "previous_work"}, {"score": 0.003557509959237602, "phrase": "resilient_architectures"}, {"score": 0.0034311578789991363, "phrase": "important_side-effect"}, {"score": 0.0033393377529146893, "phrase": "power_gating"}, {"score": 0.003220709449062307, "phrase": "first_time"}, {"score": 0.003148709618042979, "phrase": "task_scheduling_problem"}, {"score": 0.0029025435402480326, "phrase": "noise_protection_penalty"}, {"score": 0.0028634235895823594, "phrase": "mpsoc_performance"}, {"score": 0.002603918128553617, "phrase": "conservative_stop-go_method"}, {"score": 0.002455168454109375, "phrase": "longer_tasks"}, {"score": 0.002389403849342894, "phrase": "performance_improvement"}, {"score": 0.0021925226977381244, "phrase": "lightweight_online_adjustment_strategy"}, {"score": 0.002162951519368368, "phrase": "offline_scheduling_method"}, {"score": 0.0021049977753042253, "phrase": "runtime_variations"}], "paper_keywords": ["Mixed integer linear programming (MILP)", " multiprocessor system-on-chip (MPSoC)", " power gating", " power ground (P/G) noise", " task scheduling"], "paper_abstract": "Shrinking the feature size allows more and better functions on a single chip. However, it makes multiprocessor system-on-chip (MPSoC) more susceptible to various reliability threats. Power supply noise is a major reliability problem faced by low power MPSoCs using power gating techniques. Powering on and off a processing unit in MPSoCs will induce large power/ground (P/G) noise and can cause timing divergence and even functional errors in surrounding processing units. Previous work on resilient architectures mainly focused on power/thermal management and neglected the important side-effect: P/G noise induced by power gating. In this paper, for the first time, we formulate a task scheduling problem with the consideration of P/G noise based on our detailed P/G noise analysis platform for MPSoC. Two efficient algorithms are proposed to reduce noise protection penalty and improve MPSoC performance. Our experiments show that both simulated annealing and heuristic algorithms can achieve on average 25% performance improvement together with up to 80% noise protection penalty saving compared with the conservative stop-go method for short tasks (shorter than 20 K clock cycles). For longer tasks up to 200 K clock cycles, the performance improvement of our methods will become relatively low. However, we can still achieve at least 35.2% noise protection penalty saving. Furthermore, a lightweight online adjustment strategy accompanying the offline scheduling method is proposed to adapt to runtime variations and improve reliability.", "paper_title": "Power Gating Aware Task Scheduling in MPSoC", "paper_id": "WOS:000293755900007"}