{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cfd_applications"}, {"score": 0.004695900553353526, "phrase": "dynamic_thread_balancing"}, {"score": 0.004579780586951551, "phrase": "smp_clusters"}, {"score": 0.004466519142879166, "phrase": "fat_nodes"}, {"score": 0.004301834610818624, "phrase": "interesting_capability"}, {"score": 0.004195418010131832, "phrase": "large_applications"}, {"score": 0.003990385737207714, "phrase": "hybrid_parallelization_model"}, {"score": 0.003795335309109018, "phrase": "load_balance"}, {"score": 0.0031448288291084, "phrase": "busy_mpi_processes"}, {"score": 0.0029169007179202164, "phrase": "idle_nipi_processes"}, {"score": 0.0023566987138026285, "phrase": "thread_adjustment"}, {"score": 0.0022696277881969896, "phrase": "program_execution"}, {"score": 0.0022133711375320244, "phrase": "experimental_results"}, {"score": 0.002158505888557746, "phrase": "remarkable_speed-ups"}, {"score": 0.0021049977753042253, "phrase": "minimal_programming_effort"}], "paper_keywords": [""], "paper_abstract": "SMP Clusters with fat nodes offer an interesting capability for large applications that employ a hybrid parallelization model: to improve load balance, the number of threads can be increased in order to speed-up busy MPI processes or decreased to slow down idle NIPI processes, provided these processes reside on the same SMP node. We developed a library which performs this thread adjustment automatically during program execution. Experimental results demonstrate remarkable speed-ups with minimal programming effort.", "paper_title": "Hybrid parallelization of CFD applications with dynamic thread balancing", "paper_id": "WOS:000237003200051"}