{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "weighted_facet_tree"}, {"score": 0.047302204764271695, "phrase": "ubiquitous_computing"}, {"score": 0.0047057084749407485, "phrase": "computing_paradigm"}, {"score": 0.004577869668211548, "phrase": "desktop_computing"}, {"score": 0.004176194589991187, "phrase": "active_services"}, {"score": 0.0038802832668554457, "phrase": "existing_service_components"}, {"score": 0.0036721416244816455, "phrase": "service_components"}, {"score": 0.0034911335714333507, "phrase": "user_requirements"}, {"score": 0.003427540517249369, "phrase": "fundamental_and_significant_problem"}, {"score": 0.0033651019362620866, "phrase": "current_service_components"}, {"score": 0.0031845067058084583, "phrase": "unified_specification"}, {"score": 0.003126481516783286, "phrase": "traditional_component_retrieval_methods"}, {"score": 0.002851790448644913, "phrase": "novel_component_retrieval_method"}, {"score": 0.002686284749214443, "phrase": "user_queries"}, {"score": 0.0026616868981501006, "phrase": "facet_classification_space"}, {"score": 0.0026011706232569316, "phrase": "weighted_trees"}, {"score": 0.0025420267431501367, "phrase": "component_retrieval_algorithm"}, {"score": 0.0023079225317714815, "phrase": "query_tree"}, {"score": 0.002224510044064184, "phrase": "matched_components"}, {"score": 0.002163930783583212, "phrase": "experimental_results"}, {"score": 0.0021441057555396013, "phrase": "promising_results"}, {"score": 0.0021049977753042253, "phrase": "retrieval_accuracy"}], "paper_keywords": ["Active services", " Component ranking", " Weighted tree", " Ubiquitous computing"], "paper_abstract": "Recently, the computing paradigm has switched from mainframe and desktop computing to ubiquitous computing; one of whose motivations is to provide intelligent, personalized and comprehensive services to users. As a solution of ubiquitous computing, Active Services has proposed to generate such services on demand by retrieving, adapting, and composing of existing service components. As the popularity of this paradigm, and hence the number of service components increases, how to efficiently retrieve components to maximally meet user requirements has become a fundamental and significant problem. However, current service components are stored dispersedly on the Internet, nor classified in a unified specification, so that traditional component retrieval methods often fail to search and rank components among several different repositories. To solve these problems, this paper proposes a novel component retrieval method based on a weighted facet tree. We first formally specify the components and user queries under facet classification space in the form of weighted trees, then design a component retrieval algorithm by matching between the trees of query and component, in which the sum of the weights of all the leaf nodes in Query Tree are calculated, and finally rank the matched components by matching degree. The experimental results show promising results in terms of retrieval accuracy and efficiency.", "paper_title": "A novel component retrieval method based on weighted facet tree", "paper_id": "WOS:000326805000003"}