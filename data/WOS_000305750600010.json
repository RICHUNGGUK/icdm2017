{"auto_keywords": [{"score": 0.04020394874646989, "phrase": "change-driven_transformations"}, {"score": 0.00481495049065317, "phrase": "change-driven_model_transformations"}, {"score": 0.004477870190590885, "phrase": "complex_model_changes"}, {"score": 0.004378958522416482, "phrase": "arbitrary_transactions"}, {"score": 0.003960101604693806, "phrase": "relevant_change_scenarios"}, {"score": 0.003641713874009232, "phrase": "current_paper"}, {"score": 0.0033864888703414903, "phrase": "graph_patterns"}, {"score": 0.003348838095597268, "phrase": "graph_transformation_rules"}, {"score": 0.003256526411907174, "phrase": "previous_results"}, {"score": 0.003220315882881027, "phrase": "live_model_transformations"}, {"score": 0.003166751241099304, "phrase": "trigger_events"}, {"score": 0.0031315358193567708, "phrase": "arbitrarily_complex_model_changes"}, {"score": 0.0030794433253250476, "phrase": "dedicated_reactions"}, {"score": 0.0030451958332949735, "phrase": "specific_kinds"}, {"score": 0.002815864555488112, "phrase": "first-class_citizen"}, {"score": 0.0027690086059100495, "phrase": "transformation_language"}, {"score": 0.002677616534005393, "phrase": "underlying_transformation_engine"}, {"score": 0.0024897902536499005, "phrase": "different_change_scenarios"}, {"score": 0.0021049977753042253, "phrase": "engineering_domain"}], "paper_keywords": ["Incremental model transformation", " Change models", " Change-driven transformations"], "paper_abstract": "In this paper, we investigate change-driven model transformations, a novel class of transformations, which are directly triggered by complex model changes carried out by arbitrary transactions on the model (e.g. editing operation, transformation, etc). After a classification of relevant change scenarios, we identify challenges for change-driven transformations. As the main technical contribution of the current paper, we define an expressive, high-level language for specifying change-driven transformations as an extension of graph patterns and graph transformation rules. This language generalizes previous results on live model transformations by offering trigger events for arbitrarily complex model changes, and dedicated reactions for specific kinds of changes, making this way the concept of change to be a first-class citizen of the transformation language. We discuss how the underlying transformation engine needs to be adapted in order to use the same language uniformly for different change scenarios. The technicalities of our approach will be discussed on a (1) model synchronization case study with non-materialized target models and (2) a case study on detecting the violation of evolutionary (temporal) constraints in the security requirements engineering domain.", "paper_title": "Change-driven model transformations", "paper_id": "WOS:000305750600010"}