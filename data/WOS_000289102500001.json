{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_betweenness_centrality"}, {"score": 0.004518442937844318, "phrase": "joint_study"}, {"score": 0.004074901471704325, "phrase": "irregular_application-computing_betweenness_centrality"}, {"score": 0.0037935066882208235, "phrase": "unstructured_parallelism"}, {"score": 0.0036167509502276294, "phrase": "memory_access"}, {"score": 0.003531474887552889, "phrase": "low_arithmetic_intensity"}, {"score": 0.00347574024760684, "phrase": "betweenness_centrality"}, {"score": 0.003313741359811683, "phrase": "efficient_mapping"}, {"score": 0.0032614317990293695, "phrase": "parallel_algorithms"}, {"score": 0.002964415652865295, "phrase": "efficient_strategies"}, {"score": 0.002826181226538412, "phrase": "massive_multi-threading_many-core_architecture"}, {"score": 0.0026518169452004465, "phrase": "multi-grain_parallelism"}, {"score": 0.0026099289298770023, "phrase": "just-in-time_locality"}, {"score": 0.002488183412451029, "phrase": "non-preemptive_thread_execution"}, {"score": 0.002429451930463481, "phrase": "fine-grain_data_synchronization"}, {"score": 0.0023346234464901978, "phrase": "conventional_parallel_algorithm"}], "paper_keywords": ["Many-core architecture", " Betweenness centrality", " Just-in-time locality", " Multi-grain parallelism"], "paper_abstract": "This paper presents a joint study of application and architecture to improve the performance and scalability of an irregular application-computing betweenness centrality-on a many-core architecture IBM Cyclops64. The characteristics of unstructured parallelism, dynamically non-contiguous memory access, and low arithmetic intensity in betweenness centrality pose an obstacle to an efficient mapping of parallel algorithms on such many-core architectures. By identifying several key architectural features, we propose and evaluate efficient strategies for achieving scalability on a massive multi-threading many-core architecture. We demonstrate several optimization strategies including multi-grain parallelism, just-in-time locality with explicit memory hierarchy and non-preemptive thread execution, and fine-grain data synchronization. Comparing with a conventional parallel algorithm, we get 4X-50X improvement in performance and 16X improvement in scalability on a 128-cores IBM Cyclops64 simulator.", "paper_title": "Analysis and performance results of computing betweenness centrality on IBM Cyclops64", "paper_id": "WOS:000289102500001"}