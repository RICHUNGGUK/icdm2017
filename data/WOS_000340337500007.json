{"auto_keywords": [{"score": 0.04685574222273184, "phrase": "genetic_programming"}, {"score": 0.02322730111336098, "phrase": "max_problem"}, {"score": 0.003976203286249396, "phrase": "rigorous_understanding"}, {"score": 0.003907586297783078, "phrase": "genetic_programming_algorithms"}, {"score": 0.003806866174028117, "phrase": "runtime_complexity_analyses"}, {"score": 0.0037087324991876727, "phrase": "well-known_max_problem"}, {"score": 0.0032263862712733934, "phrase": "crossover-based_algorithms"}, {"score": 0.003062091606343783, "phrase": "different_variants"}, {"score": 0.002806595775343074, "phrase": "simple_mutation-based_genetic_programming_algorithms"}, {"score": 0.0026175952455594277, "phrase": "computational_complexity_analyses"}, {"score": 0.0023168823213024856, "phrase": "new_insights"}, {"score": 0.0022180544041790697, "phrase": "mutation-based_genetic_programming_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Genetic programming", " Mutation", " Theory", " Runtime analysis"], "paper_abstract": "We study the importance of mutation in genetic programming and contribute to the rigorous understanding of genetic programming algorithms by providing runtime complexity analyses for the well-known Max problem. Several experimental studies have indicated that it is hard to solve the Max problem with crossover-based algorithms. Our analyses show that different variants of the Max problem can provably be solved efficiently using simple mutation-based genetic programming algorithms. Our results advance the body of computational complexity analyses of genetic programming, indicate the importance of mutation in genetic programming, and reveal new insights into the behavior of mutation-based genetic programming algorithms. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "The Max problem revisited: The importance of mutation in genetic programming", "paper_id": "WOS:000340337500007"}