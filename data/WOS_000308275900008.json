{"auto_keywords": [{"score": 0.04954397446159371, "phrase": "hardware_neural_networks"}, {"score": 0.009099312787110053, "phrase": "approximate_multiplying_circuits"}, {"score": 0.00481495049065317, "phrase": "approximate_multipliers"}, {"score": 0.004551781491498328, "phrase": "growing_interest"}, {"score": 0.004351595642056769, "phrase": "conventional_software_models"}, {"score": 0.004044822781630218, "phrase": "energy_efficiency"}, {"score": 0.00397714507836836, "phrase": "great_importance"}, {"score": 0.003717528595128948, "phrase": "multiplication_operations"}, {"score": 0.0036553070575015344, "phrase": "special_care"}, {"score": 0.003474799999519295, "phrase": "neural_network_processing"}, {"score": 0.0029681091946289757, "phrase": "complex_exact_multiplying_circuits"}, {"score": 0.0029020077365708966, "phrase": "approximate_ones"}, {"score": 0.002853396755102163, "phrase": "present_work"}, {"score": 0.0026820015810254004, "phrase": "feed-forward_neural_network_model"}, {"score": 0.002651960559564796, "phrase": "on-chip_learning_ability"}, {"score": 0.002450864311898833, "phrase": "neural_network_model"}, {"score": 0.0023827927890399357, "phrase": "calculation_errors"}, {"score": 0.0022522565004588113, "phrase": "proposed_designs"}, {"score": 0.0021773853011112882, "phrase": "increased_energy_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Hardware neural network", " Iterative logarithmic multiplier", " FPGA", " Digital design", " Computer arithmetic"], "paper_abstract": "In recent years there has been a growing interest in hardware neural networks, which express many benefits over conventional software models, mainly in applications where speed, cost, reliability, or energy efficiency are of great importance. These hardware neural networks require many resource-, power- and time-consuming multiplication operations, thus special care must be taken during their design. Since the neural network processing can be performed in parallel, there is usually a requirement for designs with as many concurrent multiplication circuits as possible. One option to achieve this goal is to replace the complex exact multiplying circuits with simpler, approximate ones. The present work demonstrates the application of approximate multiplying circuits in the design of a feed-forward neural network model with on-chip learning ability. The experiments performed on a heterogeneous PROBEN1 benchmark dataset show that the adaptive nature of the neural network model successfully compensates for the calculation errors of the approximate multiplying circuits. At the same time, the proposed designs also profit from more computing power and increased energy efficiency. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Applicability of approximate multipliers in hardware neural networks", "paper_id": "WOS:000308275900008"}