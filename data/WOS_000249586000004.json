{"auto_keywords": [{"score": 0.04648667566882703, "phrase": "logical_design"}, {"score": 0.032485236788075564, "phrase": "model_elements"}, {"score": 0.00481495049065317, "phrase": "logical_uml_models"}, {"score": 0.004757643419056999, "phrase": "umldiff"}, {"score": 0.004672953146379813, "phrase": "heuristic_algorithm"}, {"score": 0.004375061788023814, "phrase": "object-oriented_software_system"}, {"score": 0.004195418010131832, "phrase": "subject_system"}, {"score": 0.003927848423072668, "phrase": "input_two_models"}, {"score": 0.002416589459425828, "phrase": "underlying_metamodel"}, {"score": 0.002373472641477602, "phrase": "umldiff_algorithm"}, {"score": 0.0023033100935570755, "phrase": "lexical_and_structural_similarity"}, {"score": 0.0021049977753042253, "phrase": "real-world_case_study"}], "paper_keywords": ["design differencing", " structural evolution", " design understanding", " design mentoring"], "paper_abstract": "UMLDiff is a heuristic algorithm for automatically detecting the changes that the logical design of an object-oriented software system has gone through, as the subject system evolved from one version to the next. UMLDiff requires as input two models of the logical design of the system, corresponding to two of its versions. It produces as output a set of change facts, reporting the differences between the two logical-design versions in terms of (a) additions, removals, moves, renamings of model elements, i.e., subsystems, packages, classes, interfaces, attributes and operations, (b) changes to their attributes, and (c) changes to the relations among these model elements. In this paper, we detail the underlying metamodel, the UMLDiff algorithm and its heuristics for establishing lexical and structural similarity. We report on our experimental evaluation of the correctness and robustness of UMLDiff through a real-world case study.", "paper_title": "Differencing logical UML models", "paper_id": "WOS:000249586000004"}