{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "best_reliability_model"}, {"score": 0.004548253531664032, "phrase": "predict_residual_defects"}, {"score": 0.004296264970612285, "phrase": "open_source_software"}, {"score": 0.003944112858235306, "phrase": "proposed_method"}, {"score": 0.003725470458263889, "phrase": "eight_popular_software_reliability_growth_models"}, {"score": 0.0028006988338192375, "phrase": "software's_remaining_faults"}, {"score": 0.002570817338292482, "phrase": "practical_support"}, {"score": 0.0024281181691350085, "phrase": "project_managers"}, {"score": 0.0021049977753042253, "phrase": "open_source_component"}], "paper_keywords": [""], "paper_abstract": "A proposed method evaluates eight popular software reliability growth models and selects the one that can best predict the software's remaining faults, providing practical support for project managers who are considering an open source component.", "paper_title": "Selecting the Best Reliability Model to Predict Residual Defects in Open Source Software", "paper_id": "WOS:000358417600008"}