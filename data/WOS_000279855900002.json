{"auto_keywords": [{"score": 0.028542978811000985, "phrase": "cms"}, {"score": 0.00481495049065317, "phrase": "web_services-based_applications"}, {"score": 0.004542780650208743, "phrase": "next_generation"}, {"score": 0.004507667881645218, "phrase": "web_applications"}, {"score": 0.00447282529270722, "phrase": "ws-based_application_providers"}, {"score": 0.004352974291381373, "phrase": "nonfunctional_properties"}, {"score": 0.004138813595009761, "phrase": "ws-based_developers"}, {"score": 0.003965896338424979, "phrase": "sh"}, {"score": 0.003874512990986722, "phrase": "autonomic_computing"}, {"score": 0.0035850198321277418, "phrase": "sh_mechanisms"}, {"score": 0.0034618794528555063, "phrase": "ws_providers"}, {"score": 0.003435092524339692, "phrase": "requesters_sides"}, {"score": 0.0033821367649595254, "phrase": "deployment_constraints"}, {"score": 0.0033429545815200825, "phrase": "application-specific_performance_requirements"}, {"score": 0.003304224820203298, "phrase": "-specific_constraints"}, {"score": 0.003253279945540651, "phrase": "complex_configurations"}, {"score": 0.003228101865545105, "phrase": "fine_tuning"}, {"score": 0.0031660031870090434, "phrase": "sh_solutions"}, {"score": 0.002998390117435555, "phrase": "ws_technology"}, {"score": 0.002917931350071647, "phrase": "monitoring_and_measurement_framework"}, {"score": 0.002839625463110821, "phrase": "larger_self-healing_architectures"}, {"score": 0.002817650207340202, "phrase": "sha"}, {"score": 0.002763415176377921, "phrase": "european_ws-diamond_project"}, {"score": 0.0027102313244646934, "phrase": "conference_management_system"}, {"score": 0.002637521448299848, "phrase": "ws"}, {"score": 0.0025468074858862964, "phrase": "large-scale_experimentation_campaign"}, {"score": 0.0024496978447849835, "phrase": "french_grid"}, {"score": 0.0023380300046435187, "phrase": "service_provider"}, {"score": 0.002293014162421338, "phrase": "reconfiguration_strategies"}, {"score": 0.002205560249972527, "phrase": "structured_database"}, {"score": 0.002188472974132732, "phrase": "external_use"}, {"score": 0.002163089417146551, "phrase": "ws_community"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["web services", " QoS", " monitoring", " performance measurement"], "paper_abstract": "Web Services (WS) can be considered as the most influent enabling technology for the next generation of web applications. WS-based application providers will face challenging features related to nonfunctional properties in general and to performance and QoS in particular. Moreover, WS-based developers have to provide solutions to extend such applications with self-healing (SH) mechanisms as required for autonomic computing to face the complexity of interactions and to improve availability. Such solutions should be applicable when the components implementing SH mechanisms are deployed on both or only one platform on the WS providers and requesters sides depending on the deployment constraints. Associating application-specific performance requirements and monitoring-specific constraints will lead to complex configurations where fine tuning is needed to provide SH solutions. To contribute to enhancing the design and the assessment of such solutions for WS technology, we designed and implemented a monitoring and measurement framework, which is part of a larger Self-Healing Architectures (SHA) developed during the European WS-DIAMOND project. We implemented the Conference Management System (CMS), a real WS-based complex application. We achieved a large-scale experimentation campaign by deploying CMS on top of SHA on the French grid Grid5000. We experienced the problem as if we were a service provider who has to tune reconfiguration strategies. Our results are available on the web in a structured database for external use by the WS community. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "A large-scale monitoring and measurement campaign for web services-based applications", "paper_id": "WOS:000279855900002"}