{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sequence_constraint"}, {"score": 0.004497762477097628, "phrase": "car_sequencing"}, {"score": 0.004347057700479576, "phrase": "feature_sequence_constraints"}, {"score": 0.0036037265181631324, "phrase": "filtering_algorithms"}, {"score": 0.003542786326740931, "phrase": "guaranteed_domain_consistency"}, {"score": 0.0031440159350875057, "phrase": "complementary_strengths"}, {"score": 0.0029871209444889716, "phrase": "dynamic_programming"}, {"score": 0.0028139168128067343, "phrase": "regular_constraint"}, {"score": 0.0026282000779095987, "phrase": "last_two_algorithms"}, {"score": 0.002583713580625699, "phrase": "domain_consistency"}, {"score": 0.0024547103576350233, "phrase": "polynomial_time"}, {"score": 0.0022731540640627307, "phrase": "generalized_sequence_constraint"}, {"score": 0.0021968238865548812, "phrase": "variable_widths"}, {"score": 0.002159623311924437, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "practical_usefulness"}], "paper_keywords": [""], "paper_abstract": "Many combinatorial problems, such as car sequencing and rostering, feature sequence constraints, restricting the number of occurrences of certain values in every subsequence of a given width. To date, none of the filtering algorithms proposed guaranteed domain consistency. In this paper, we present three filtering algorithms for the sequence constraint, with complementary strengths. One borrows ideas from dynamic programming; another reformulates it as a regular constraint; the last is customized. The last two algorithms establish domain consistency. Our customized algorithm does so in polynomial time, and can even be applied to a generalized sequence constraint for subsequences of variable widths. Experimental results show the practical usefulness of each.", "paper_title": "Revisiting the sequence constraint", "paper_id": "WOS:000241582400043"}