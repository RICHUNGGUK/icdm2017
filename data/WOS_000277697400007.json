{"auto_keywords": [{"score": 0.029360982795517902, "phrase": "gsst"}, {"score": 0.00481495049065317, "phrase": "guaranteed_search"}, {"score": 0.0047555023078686386, "phrase": "spanning_trees"}, {"score": 0.0044968982227349625, "phrase": "multi-robot_search"}, {"score": 0.0041478818670853115, "phrase": "adversarial_target"}, {"score": 0.004071249707923223, "phrase": "fewest_number"}, {"score": 0.0038986745009424915, "phrase": "np"}, {"score": 0.003802135020791801, "phrase": "arbitrary_graphs"}, {"score": 0.0034420211080526094, "phrase": "graphical_representation"}, {"score": 0.0031746155143471725, "phrase": "spanning_tree_generation"}, {"score": 0.0030582832134483685, "phrase": "best_strategy"}, {"score": 0.0029645930408561086, "phrase": "resulting_strategy"}, {"score": 0.002855934865505357, "phrase": "additional_information"}, {"score": 0.002700348931172875, "phrase": "performance_guarantees"}, {"score": 0.002521623057264411, "phrase": "optimal_solution"}, {"score": 0.0024904187737391807, "phrase": "sufficient_runtime"}, {"score": 0.002340081450249521, "phrase": "human-robot_search_team"}, {"score": 0.002212535878761148, "phrase": "clearing_schedules"}, {"score": 0.0021049977753042253, "phrase": "competing_algorithms"}], "paper_keywords": ["Multi-robot coordination", " Graph search", " Anytime algorithms", " Decentralized computation", " Pursuit/evasion"], "paper_abstract": "We present Guaranteed Search with Spanning Trees (GSST), an anytime algorithm for multi-robot search. The problem is as follows: clear the environment of any adversarial target using the fewest number of searchers. This problem is NP-hard on arbitrary graphs but can be solved in linear-time on trees. Our algorithm generates spanning trees of a graphical representation of the environment to guide the search. At any time, spanning tree generation can be stopped yielding the best strategy so far. The resulting strategy can be modified online if additional information becomes available. Though GSST does not have performance guarantees after its first iteration, we prove that several variations will find an optimal solution given sufficient runtime. We test GSST in simulation and on a human-robot search team using a distributed implementation. GSST quickly generates clearing schedules with as few as 50% of the searchers used by competing algorithms.", "paper_title": "GSST: anytime guaranteed search", "paper_id": "WOS:000277697400007"}