{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tile_assembly_model"}, {"score": 0.04375046794702629, "phrase": "self-assembling_systems"}, {"score": 0.004695183699894267, "phrase": "powerful_process"}, {"score": 0.004555371402128666, "phrase": "simple_objects"}, {"score": 0.0043753813457279404, "phrase": "complex_structures"}, {"score": 0.004223708778943785, "phrase": "computer_scientists"}, {"score": 0.003975781274672803, "phrase": "distributed_robotics_systems"}, {"score": 0.0038573081851680656, "phrase": "formal_mathematical_model"}, {"score": 0.003282383509542342, "phrase": "efficient_tile_systems"}, {"score": 0.0032494292163722065, "phrase": "small_tilesets"}, {"score": 0.003216804708106142, "phrase": "fast_execution_times"}, {"score": 0.0030431198971423937, "phrase": "vastly_complex_tile_systems"}, {"score": 0.002952356518921907, "phrase": "fast_algorithms"}, {"score": 0.002821247621250663, "phrase": "tile_system"}, {"score": 0.0027370835853738626, "phrase": "nondeterministic_assemblies"}, {"score": 0.0026420518944303716, "phrase": "previous_best_known_solution"}, {"score": 0.0024247382451294255, "phrase": "distributed_software"}, {"score": 0.0022592313766072658, "phrase": "required_parallel_assemblies"}, {"score": 0.0021807544600219216, "phrase": "system's_tileset"}, {"score": 0.0021263705039915198, "phrase": "assembly_time"}, {"score": 0.0021049977753042253, "phrase": "nondeterministic_linear"}], "paper_keywords": ["Self-assembly", " 3-SAT", " Efficient 3-SAT algorithms", " Tile assembly model"], "paper_abstract": "Self-assembly is a powerful process found in nature that guides simple objects assembling, on their own, into complex structures. Self-assembly is of interest to computer scientists because self-assembling systems can compute functions, assemble shapes, and guide distributed robotics systems. The tile assembly model is a formal mathematical model of self-assembly that allows the study of time and space complexities of self-assembling systems that lie at the heart of several molecular computer implementations and distributed computational software systems. These implementations and systems require efficient tile systems with small tilesets and fast execution times. The state of the art, however, requires vastly complex tile systems with large tilesets to implement fast algorithms. In this paper, I present a tile system that decides 3-SAT by creating nondeterministic assemblies in parallel, improving on the previous best known solution that requires such assemblies. This solution directly improves the feasibility of building molecular 3-SAT solvers and efficiency of distributed software. I formally prove the correctness of the system, the number of required parallel assemblies, that the size of the system's tileset is and that the assembly time is nondeterministic linear in the size of the input.", "paper_title": "Efficient 3-SAT algorithms in the tile assembly model", "paper_id": "WOS:000304589800004"}