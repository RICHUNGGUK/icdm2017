{"auto_keywords": [{"score": 0.04610372906407674, "phrase": "maxeler_dataflow_computer"}, {"score": 0.010636661930840422, "phrase": "sorting_times"}, {"score": 0.00481495049065317, "phrase": "maxeler_dataflow_supercomputing_systems"}, {"score": 0.004746065479362881, "phrase": "primary_contribution"}, {"score": 0.004270003565426343, "phrase": "numerous_applications"}, {"score": 0.004089239912167375, "phrase": "network_sorting_algorithms"}, {"score": 0.004030695216899165, "phrase": "major_part"}, {"score": 0.003750260412839128, "phrase": "sorting_networks"}, {"score": 0.003643607569483598, "phrase": "principal_network_sorting_algorithms"}, {"score": 0.003608732492631878, "phrase": "predominant_sequential_and_parallel_sorting_algorithms"}, {"score": 0.0034558655164987134, "phrase": "entry_model"}, {"score": 0.0034063576796640603, "phrase": "maxeler_dataflow_supercomputing_system"}, {"score": 0.0030642636185693054, "phrase": "optimal_sequential_and_parallel_sorting_algorithms"}, {"score": 0.002948547333717581, "phrase": "different_testing_scenarios"}, {"score": 0.0028784478769295204, "phrase": "high_sorting_speedups"}, {"score": 0.0026395715432958665, "phrase": "different_testing_parameters"}, {"score": 0.002432152706473349, "phrase": "parallel_sorting"}, {"score": 0.0023972750359328235, "phrase": "dataflow_computational_paradigm"}, {"score": 0.00236289633510808, "phrase": "possible_solution"}, {"score": 0.002219516542316085, "phrase": "new_ideas"}, {"score": 0.0021356322417874106, "phrase": "large_arrays"}, {"score": 0.0021049977753042253, "phrase": "large_speedups"}], "paper_keywords": [""], "paper_abstract": "The primary contribution of this study is the implementation and evaluation of network sorting algorithms on a Maxeler dataflow computer. Sorting is extensively used in numerous applications. We discuss sequential, parallel, and network sorting algorithms. The major part of this study is dedicated to the properties, construction, and testing of sorting networks. We introduce and compare principal network sorting algorithms with predominant sequential and parallel sorting algorithms. We implement network sorting algorithms in an entry model of the Maxeler dataflow supercomputing system. The goal of our study is to compare the sorting times of network sorting algorithms using a Maxeler dataflow computer with the sorting times of optimal sequential and parallel sorting algorithms using a control flow computer. In different testing scenarios, we demonstrate that high sorting speedups can be achieved with network sorting using a Maxeler dataflow computer. We sorted arrays of 128 values. Using different testing parameters, we achieved speedups that ranged from approximately 10 to more than 200. Sorting networks that execute parallel sorting using the dataflow computational paradigm offer a possible solution for expanding volumes of data. By converting to more advanced Maxeler systems and researching new ideas and solutions, we aim to sort large arrays and achieve large speedups.", "paper_title": "Sorting Networks on Maxeler Dataflow Supercomputing Systems", "paper_id": "WOS:000370523800005"}