{"auto_keywords": [{"score": 0.04907561130245922, "phrase": "athanasia"}, {"score": 0.008713768692145006, "phrase": "parallel_applications"}, {"score": 0.004404994123834589, "phrase": "large-scale_cluster_systems"}, {"score": 0.004240116703465252, "phrase": "de_facto_standard"}, {"score": 0.004186534737631288, "phrase": "multitera-flop_computing_power"}, {"score": 0.003978866233891427, "phrase": "inherent_failure_factor"}, {"score": 0.0039119492240482, "phrase": "computation_failure"}, {"score": 0.0038624981944755813, "phrase": "reliability_issue"}, {"score": 0.003829877278269543, "phrase": "parallel_computing_systems"}, {"score": 0.0036864465771943933, "phrase": "relatively_long_time"}, {"score": 0.0034886660821793576, "phrase": "extensive_research"}, {"score": 0.003400984514637656, "phrase": "rigorous_studies"}, {"score": 0.00337224813954299, "phrase": "practical_and_easily_deployable_fault-tolerant_systems"}, {"score": 0.0032184697893776052, "phrase": "user-transparent_checkpointing_system"}, {"score": 0.0031777570808834213, "phrase": "fault-tolerant_message"}, {"score": 0.0030071857666598193, "phrase": "sync-and-stop_protocol"}, {"score": 0.0028944757265206332, "phrase": "fault_tolerance"}, {"score": 0.0027159094186967247, "phrase": "process_migration"}, {"score": 0.0025919830205975215, "phrase": "main_features"}, {"score": 0.0024527767211457046, "phrase": "application_code"}, {"score": 0.0023708445073819277, "phrase": "high_performance_characteristics"}, {"score": 0.0023507916951658455, "phrase": "high-speed_networks"}, {"score": 0.0022530375696567136, "phrase": "good_candidate"}, {"score": 0.0022339789476489877, "phrase": "practically_deployable_fault-tolerant_systems"}, {"score": 0.002215081186105616, "phrase": "very-large_and_high-performance_clusters"}, {"score": 0.0021049977753042253, "phrase": "parallel_communication_libraries"}], "paper_keywords": ["User transparency", " fault tolerance", " message passing interface", " parallel systems", " Myrinet", " InfiniBand", " ch_p4"], "paper_abstract": "This article presents Athanasia, a user-transparent and fault-tolerant system, for parallel applications running on large-scale cluster systems. Cluster systems have been regarded as a de facto standard to achieve multitera-flop computing power. These cluster systems, as we know, have an inherent failure factor that can cause computation failure. The reliability issue in parallel computing systems, therefore, has been studied for a relatively long time in the literature, and we have seen many theoretical promises arise from the extensive research. However, despite the rigorous studies, practical and easily deployable fault-tolerant systems have not been successfully adopted commercially. Athanasia is a user-transparent checkpointing system for a fault-tolerant Message Passing Interface (MPI) implementation that is primarily based on the sync-and-stop protocol. Athanasia supports three critical functionalities that are necessary for fault tolerance: a light-weight failure detection mechanism, dynamic process management that includes process migration, and a consistent checkpoint and recovery mechanism. The main features of Athanasia are that it does not require any modifications to the application code and that it preserves many of the high performance characteristics of high-speed networks. Experimental results show that Athanasia can be a good candidate for practically deployable fault-tolerant systems in very-large and high-performance clusters and that its protocol can be applied to a variety of parallel communication libraries easily.", "paper_title": "Athanasia: A User-Transparent and Fault-Tolerant System for Parallel Applications", "paper_id": "WOS:000294162500006"}