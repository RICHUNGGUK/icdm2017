{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "interactive_applications"}, {"score": 0.004568871736067739, "phrase": "language-driven_approach"}, {"score": 0.004479855062309818, "phrase": "high-level_design"}, {"score": 0.0042508289538799905, "phrase": "model-view-controller_pattern"}, {"score": 0.003852371777780562, "phrase": "sophisticated_structures"}, {"score": 0.003334309053314909, "phrase": "applications'_models"}, {"score": 0.00329080576226637, "phrase": "suitable_domain-specific_languages"}, {"score": 0.0031636612155559267, "phrase": "interactive_behavior"}, {"score": 0.0030414140732789186, "phrase": "suitable_operational_semantics"}, {"score": 0.0029238768315330305, "phrase": "resulting_designs"}, {"score": 0.0028293966058473476, "phrase": "rapid_prototyping"}, {"score": 0.00270221723573854, "phrase": "application_features"}, {"score": 0.0026148807877309417, "phrase": "standard_web-based_technologies"}, {"score": 0.0025638362414466278, "phrase": "rational_collaboration_processes"}, {"score": 0.002530359917257626, "phrase": "domain_experts"}, {"score": 0.0023079225317714815, "phrase": "e-learning_domain"}, {"score": 0.0021896891011033105, "phrase": "socratic_tutors"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["language-driven development", " domain-specific language", " model-view-controller", " e-learning", " document-oriented approach"], "paper_abstract": "In this paper we propose a language-driven approach for the high-level design of interactive applications architected according to the model-view-controller pattern. The approach is especially well-suited for applications that incorporate contents with sophisticated structures, and whose interactive behavior is driven by these structures. In our approach we characterize the structure of the contents stored in the applications' models with suitable domain-specific languages. Then we characterize the interactive behavior of these applications by assigning suitable operational semantics to these languages. The resulting designs are amenable to support rapid prototyping, exploration and early discovery of application features, systematic implementation using standard web-based technologies, and rational collaboration processes between domain experts and developers during production and maintenance. We exemplify the approach in the e-learning domain with a system for the production of Socratic tutors. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "A language-driven approach for the design of interactive applications", "paper_id": "WOS:000253104900007"}