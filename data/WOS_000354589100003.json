{"auto_keywords": [{"score": 0.04249294934044819, "phrase": "saas"}, {"score": 0.036862763560251255, "phrase": "iaas"}, {"score": 0.02443026814782035, "phrase": "paas"}, {"score": 0.00481495049065317, "phrase": "saas_cloud_service_providers"}, {"score": 0.004689650818647484, "phrase": "two-tier_job_scheduling_problem"}, {"score": 0.004448705308279165, "phrase": "laas_cloud_providers"}, {"score": 0.0043519860930099795, "phrase": "computational_power"}, {"score": 0.004183137595671171, "phrase": "user_request"}, {"score": 0.0041102032028337366, "phrase": "multiple_jobs"}, {"score": 0.0039333604469462356, "phrase": "multiple_resources"}, {"score": 0.003698442219929622, "phrase": "project_turn-around_time"}, {"score": 0.003633927813203731, "phrase": "priority_scheduling"}, {"score": 0.003586278948128509, "phrase": "suitable_scheduling_algorithms"}, {"score": 0.003477505397536663, "phrase": "two-tier_backfilling_algorithms"}, {"score": 0.0034168317227203206, "phrase": "well-known_conservative_backfilling_algorithm"}, {"score": 0.0033131804981786747, "phrase": "priority_concepts"}, {"score": 0.003255364511414329, "phrase": "proposed_algorithms"}, {"score": 0.00307431840409833, "phrase": "preemption_in_job_waiting_queues"}, {"score": 0.002941913249957503, "phrase": "two-tier_flexible_backfilling"}, {"score": 0.002693919110230191, "phrase": "new_incoming_project"}, {"score": 0.0026585629592360085, "phrase": "waiting_jobs"}, {"score": 0.002488604965680912, "phrase": "waiting_queues"}, {"score": 0.0023501014144112443, "phrase": "low-priority_ones"}, {"score": 0.0023192471808039746, "phrase": "experimental_results"}, {"score": 0.0021998194157393353, "phrase": "mean_turn-around_time"}, {"score": 0.0021805201234139475, "phrase": "high-priority_projects"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Two-tier scheduling", " SaaS scheduling", " Backfilling", " Slack factor"], "paper_abstract": "This study addresses a two-tier job scheduling problem for SaaS cloud Service providers which rely on resources leased from laaS cloud providers to achieve elasticity to computational power. In our model, a project represents a user request which consists of multiple jobs; the SaaS is obligated to complete projects using multiple resources leased from IaaS or PaaS providers. The goals are to reduce the project turn-around time and to support priority scheduling by employing suitable scheduling algorithms. We propose a set of two-tier backfilling algorithms which extend the well-known conservative backfilling algorithm with project slack-time and priority concepts. Among the proposed algorithms, Two-Tier Strict Backfilling (2TSB) does not allow preemption in job waiting queues. On the other hand, preemption is allowable in Two-tier Flexible Backfilling which has two versions: 2TFB and 2TFB-SF (slack factor). In 2TFB, a new incoming project can preempt waiting jobs but not waiting projects, while 2TFB-SF permits preemption in both job and project waiting queues. Two-Tier Priority Backfilling (2TPB) algorithm takes priority into account such that only high-priority projects can preempt the low-priority ones. The experimental results indicate that, compared with 2TSB, 2TPB could reduce the mean turn-around time of high-priority projects by more than 25%. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Two-tier project and job scheduling for SaaS cloud service providers", "paper_id": "WOS:000354589100003"}