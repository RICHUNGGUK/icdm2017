{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "total_weighted_flow_time"}, {"score": 0.012328457339467252, "phrase": "necessary_and_sufficient_condition"}, {"score": 0.009336219139425218, "phrase": "precedence-dominance_relations"}, {"score": 0.009217011919366734, "phrase": "n_jobs"}, {"score": 0.00467207889925365, "phrase": "interval_processing_times"}, {"score": 0.0045726187330434025, "phrase": "single-machine_scheduling_problem"}, {"score": 0.004456044928556639, "phrase": "uncertain_processing_time"}, {"score": 0.004361163586439822, "phrase": "real_value"}, {"score": 0.004305203085016233, "phrase": "corresponding_closed_interval"}, {"score": 0.0041773934798743405, "phrase": "scheduling_objective"}, {"score": 0.0036710872046569532, "phrase": "job_permutation"}, {"score": 0.003577414339646767, "phrase": "possible_realizations"}, {"score": 0.003531474887552889, "phrase": "n_uncertain_processing_times"}, {"score": 0.0033971539563683174, "phrase": "extreme_case"}, {"score": 0.0032820385246266773, "phrase": "job_permutations"}, {"score": 0.0032259472087775138, "phrase": "possible_realization"}, {"score": 0.0031845067058084613, "phrase": "uncertain_processing_times"}, {"score": 0.0029980260560551982, "phrase": "polynomial_time"}, {"score": 0.0027503564589458837, "phrase": "general_case"}, {"score": 0.0027150087516999047, "phrase": "uncertain_scheduling_problem"}, {"score": 0.0024799423362011582, "phrase": "maximal_absolute_or_relative_regret"}, {"score": 0.002375253757224999, "phrase": "randomly_generated_instances"}, {"score": 0.002226430168622392, "phrase": "established_precedence-dominance_relations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Single-machine scheduling", " Uncertainty", " Domination"], "paper_abstract": "We consider a single-machine scheduling problem with each job having an uncertain processing time which can take any real value within each corresponding closed interval before completing the job. The scheduling objective is to minimize the total weighted flow time of all n jobs, where there is a weight associated with each job. We establish the necessary and sufficient condition for the existence of a job permutation which remains optimal for any possible realizations of these n uncertain processing times. We also establish the necessary and sufficient condition for another extreme case that for each of then n! job permutations there exists a possible realization of the uncertain processing times that this permutation is uniquely optimal. Testing each of the conditions takes polynomial time in terms of the number n of jobs. We develop precedence-dominance relations among the n jobs in dealing with the general case of this uncertain scheduling problem. In case there exist no precedence-dominance relations among a subset of n jobs, a heuristic procedure to minimize the maximal absolute or relative regret is used for sequencing such a job subset. Computational experiments for randomly generated instances with n jobs (5 <= n <= 1000) show that the established precedence-dominance relations are quite useful in reducing the total weighted flow time. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Minimizing total weighted flow time of a set of jobs with interval processing times", "paper_id": "WOS:000267469800023"}