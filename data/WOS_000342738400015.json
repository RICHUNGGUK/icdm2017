{"auto_keywords": [{"score": 0.04642059407256737, "phrase": "total_autocorrelation"}, {"score": 0.00481495049065317, "phrase": "shared_binary_decision_diagrams"}, {"score": 0.004536862734384202, "phrase": "efficient_computation"}, {"score": 0.004389339243427964, "phrase": "large_multiple-output_boolean_functions"}, {"score": 0.004303127794432684, "phrase": "shared_binary_decision_diagram"}, {"score": 0.0041357305373417455, "phrase": "existing_methods"}, {"score": 0.0039748192550806815, "phrase": "decision_diagrams"}, {"score": 0.003871024872459116, "phrase": "single_output_functions"}, {"score": 0.0037203741725514126, "phrase": "multiple-output_functions"}, {"score": 0.0033465923623290034, "phrase": "proposed_method"}, {"score": 0.0031739835218110015, "phrase": "single_traversal"}, {"score": 0.003132236287543072, "phrase": "sbdd."}, {"score": 0.0029903851294825023, "phrase": "standard_bdd_packages"}, {"score": 0.002798780784517325, "phrase": "sbdd"}, {"score": 0.0027256122357680393, "phrase": "additional_memory_function"}, {"score": 0.0026543514413663893, "phrase": "hash_table"}, {"score": 0.0023249757987087055, "phrase": "total_amount"}, {"score": 0.002161542155696987, "phrase": "practical_applications"}, {"score": 0.0021330830123432614, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "standard_benchmarks"}], "paper_keywords": ["switching theory", " computation of transforms", " binary decision diagram", " BDD-package"], "paper_abstract": "This paper describes a method for the efficient computation of the total autocorrelation for large multiple-output Boolean functions over a Shared Binary Decision Diagram (SBDD). The existing methods for computing the total autocorrelation over decision diagrams are restricted to single output functions and in the case of multiple-output functions require repeating the procedure k times where k is the number of outputs. The proposed method permits to perform the computation in a single traversal of SBDD. In that order, compared to standard BDD packages, we modified the way of traversing sub-diagrams in SBDD and introduced an additional memory function kept in the hash table for storing results of the computation of the autocorrelation between two subdiagrarns in the SBDD. Due to that, the total amount of computations is reduced which makes the method feasible in practical applications. Experimental results over standard benchmarks confirm the efficiency of the method.", "paper_title": "Computation of the Total Autocorrelation over Shared Binary Decision Diagrams", "paper_id": "WOS:000342738400015"}