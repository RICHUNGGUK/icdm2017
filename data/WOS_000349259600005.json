{"auto_keywords": [{"score": 0.03699607636337113, "phrase": "path_condition"}, {"score": 0.015438372319943291, "phrase": "compositional_condition"}, {"score": 0.014361734187155582, "phrase": "loop_iterations"}, {"score": 0.011297644871148826, "phrase": "branch_conditions"}, {"score": 0.01036460615349899, "phrase": "symbolic_expressions"}, {"score": 0.00481495049065317, "phrase": "flow_information"}, {"score": 0.004558289038745564, "phrase": "flow_analysis_approach"}, {"score": 0.004496280772084575, "phrase": "accurate_flow_facts"}, {"score": 0.004354841111644036, "phrase": "infeasible_paths"}, {"score": 0.004315249628884236, "phrase": "wcet_analysis"}, {"score": 0.0038849148160362257, "phrase": "program_flow"}, {"score": 0.0037971749182744334, "phrase": "basic_blocks"}, {"score": 0.0037454814403672697, "phrase": "execution_path"}, {"score": 0.0036944890904337833, "phrase": "single_loop_iteration"}, {"score": 0.003611034322786669, "phrase": "proposed_approach"}, {"score": 0.0035781807623238905, "phrase": "distinct_symbolic_expressions"}, {"score": 0.003325852346387272, "phrase": "path_conditions"}, {"score": 0.0032358709481309913, "phrase": "constituent_variables"}, {"score": 0.0030352396244492604, "phrase": "final_symbolic_expression"}, {"score": 0.002926212333939311, "phrase": "loop_entry_point"}, {"score": 0.0027954035431845344, "phrase": "loop_variables"}, {"score": 0.0027197343489967296, "phrase": "feasible_values"}, {"score": 0.002539379289856756, "phrase": "iteration_path"}, {"score": 0.0024706232839499546, "phrase": "smt_solver"}, {"score": 0.002349357968054711, "phrase": "loop_body"}, {"score": 0.0021735249249471614, "phrase": "malardalen_benchmark_suite"}], "paper_keywords": ["Loop bound analysis", " WCET", " Timing analysis", " Real-time systems"], "paper_abstract": "This paper proposes a flow analysis approach to provide accurate flow facts such as number of loop iterations and infeasible paths for WCET analysis. To achieve this, a novel approach to model program flows of given loops as compositional condition of controls that can model the program flow of the sequence of basic blocks on an execution path through a single loop iteration is proposed. The proposed approach builds distinct symbolic expressions each representing a path condition as conjunctions of branch conditions along the path. Then, the path conditions are formed via substituting all constituent variables of the branch conditions with symbolic expressions computing the value of these variables. The final symbolic expression will contain variables denoting theirs value at the loop entry point. Considering the change in the value of the loop variables of the path condition, the feasible values of these variables are computed and consequently the number of the loop iterations along the iteration path is determined. Applying a SMT solver to the symbolic expressions representing each path condition, all the infeasible paths along the loop body are detected. The results of applying our flow analysis approach to a number of programs addressed in the Malardalen benchmark suite reveal the capability and efficiency of our proposed approach.", "paper_title": "Modeling flow information of loops using compositional condition of controls", "paper_id": "WOS:000349259600005"}