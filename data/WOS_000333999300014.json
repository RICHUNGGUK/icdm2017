{"auto_keywords": [{"score": 0.04044365292597908, "phrase": "projection_methods"}, {"score": 0.03906597166738946, "phrase": "low-dissipative_alternatives"}, {"score": 0.00481495049065317, "phrase": "low-dissipative_runge-kutta_projection_methods"}, {"score": 0.004529696178827392, "phrase": "rapid_dissemination"}, {"score": 0.00443308765153716, "phrase": "large-eddy_simulations"}, {"score": 0.004401518745446564, "phrase": "les"}, {"score": 0.004125634486868786, "phrase": "low-dissipative_algorithms"}, {"score": 0.004052148727852149, "phrase": "industrial_relevance"}, {"score": 0.0039942998891989955, "phrase": "present_paper"}, {"score": 0.003677280504320636, "phrase": "second_order_time_integration_methods"}, {"score": 0.0035729944980593324, "phrase": "standard_pressure_correction_approach"}, {"score": 0.0035601698085492026, "phrase": "piso"}, {"score": 0.003373181367365139, "phrase": "practical_implementation"}, {"score": 0.0031390053628808706, "phrase": "classical_fourth_order_rk-method"}, {"score": 0.00278752137116301, "phrase": "test_problems"}, {"score": 0.002708399936381754, "phrase": "cavity_flow"}, {"score": 0.0023367260405565814, "phrase": "piso_pressure_correction_method"}, {"score": 0.0022785613865764923, "phrase": "rk_projection_methods"}, {"score": 0.0022379017425216917, "phrase": "piso_method"}, {"score": 0.0022138542785562444, "phrase": "turbulent_test_cases"}, {"score": 0.0021509807762081145, "phrase": "good_computational_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["OpenFOAM (R)", " Runge-Kutta", " Projection methods", " Incompressible flows"], "paper_abstract": "Open source computational fluid dynamics (CFD) codes provide suitable environments for implementation, testing and rapid dissemination of algorithms typically used for large-eddy simulations (LES) and direct numerical simulations (DNS). In particular, it is important to test low-dissipative algorithms in unstructured codes of industrial relevance. In the present paper, the implementation of incompressible, explicit Runge-Kutta (RK) based projection methods into the OpenFOAM (R) library is discussed. We search for low-dissipative alternatives to the second order time integration methods which are commonly used together with the standard pressure correction approach PISO (Pressure Implicit with Splitting of Operators) in many commercial and open source codes including OpenFOAM (R). The practical implementation of the projection methods in OpenFOAM (R) is provided together with theory. The method is tested with the classical fourth order RK-method and the accelerated third order RK-method. Four numerical experiments are carried out in order to cross-validate the solvers and in order to investigate the drawbacks/ benefits of the solution approaches. The test problems are: (1) 2d lid driven cavity flow at Re = 2500, (2) DNS of 3d turbulent channel flow at Re-tau = 180, (3) LES of a 3d mixing layer, and (4) the 2d inviscid Taylor-Green vortex. The RK-methods are benchmarked against the standard OpenFOAM (R) LES/DNS solver based on the PISO pressure correction method. The results indicate that the RK projection methods provide low-dissipative alternatives to the PISO method. The turbulent test cases show also that the RK-methods have a good computational efficiency. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "On the implementation of low-dissipative Runge-Kutta projection methods for time dependent flows using OpenFOAM (R)", "paper_id": "WOS:000333999300014"}