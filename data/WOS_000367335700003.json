{"auto_keywords": [{"score": 0.024572526676773062, "phrase": "nsga-ii."}, {"score": 0.00481495049065317, "phrase": "multiobjective_monte"}, {"score": 0.0047906082951008665, "phrase": "carlo_tree_search"}, {"score": 0.004742290714667451, "phrase": "real-time_games"}, {"score": 0.004263336444795021, "phrase": "games_research"}, {"score": 0.004114641015648682, "phrase": "multiobjective_evaluation"}, {"score": 0.0039310261964323545, "phrase": "high_quality_level"}, {"score": 0.0037746771370555546, "phrase": "multiobjective_monte_carlo_tree_search_algorithm"}, {"score": 0.0036614948691735105, "phrase": "real-time_game_domains"}, {"score": 0.003569763795153386, "phrase": "time_budget"}, {"score": 0.00349803055484394, "phrase": "next_move"}, {"score": 0.003291336101694653, "phrase": "proposed_algorithm"}, {"score": 0.0032415934630668484, "phrase": "single-objective_version"}, {"score": 0.0032088487124106936, "phrase": "monte_carlo_tree_search"}, {"score": 0.0031603487697867538, "phrase": "rolling_horizon_implementation"}, {"score": 0.00309681702203087, "phrase": "evolutionary_algorithm"}, {"score": 0.002414544068560716, "phrase": "search_space"}, {"score": 0.0021373366163721518, "phrase": "different_optimal_solutions"}, {"score": 0.0021049977753042253, "phrase": "optimal_pareto_front"}], "paper_keywords": ["Monte Carlo tree search", " multiobjective optimization", " real-time games"], "paper_abstract": "Multiobjective optimization has been traditionally a matter of study in domains like engineering or finance, with little impact on games research. However, action-decision based on multiobjective evaluation may be beneficial in order to obtain a high quality level of play. This paper presents a multiobjective Monte Carlo tree search algorithm for planning and control in real-time game domains, those where the time budget to decide the next move to make is close to 40 ms. A comparison is made between the proposed algorithm, a single-objective version of Monte Carlo tree search and a rolling horizon implementation of nondominated sorting evolutionary algorithm II (NSGA-II). Two different benchmarks are employed, deep sea treasure (DST) and the multiobjective physical traveling salesman problem (MO-PTSP). Using the same heuristics on each game, the analysis is focused on how well the algorithms explore the search space. Results show that the algorithm proposed outperforms NSGA-II. Additionally, it is also shown that the algorithm is able to converge to different optimal solutions or the optimal Pareto front (if achieved during search).", "paper_title": "Multiobjective Monte Carlo Tree Search for Real-Time Games", "paper_id": "WOS:000367335700003"}