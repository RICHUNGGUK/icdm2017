{"auto_keywords": [{"score": 0.036564088951105085, "phrase": "static_and_dynamic_adapters"}, {"score": 0.013073776654194508, "phrase": "mismatch_problems"}, {"score": 0.012713210018649562, "phrase": "fault_problems"}, {"score": 0.011052555909755242, "phrase": "dynamic_adaptations"}, {"score": 0.010898782998595409, "phrase": "service_life-cycle"}, {"score": 0.010837867966162623, "phrase": "adaptation-related_activities"}, {"score": 0.00481495049065317, "phrase": "service-based_systems"}, {"score": 0.004747544039399003, "phrase": "service-oriented_computing"}, {"score": 0.004681076799813777, "phrase": "service_providers"}, {"score": 0.004654749973584499, "phrase": "reusable_services"}, {"score": 0.004615535808765734, "phrase": "service_consumers"}, {"score": 0.004512564966999066, "phrase": "potential_problems"}, {"score": 0.004350092798087046, "phrase": "candidate_service"}, {"score": 0.003863951933933301, "phrase": "service_invocations"}, {"score": 0.0037776850052383014, "phrase": "static_and_dynamic_adaptations"}, {"score": 0.003610865367437772, "phrase": "comprehensive_framework"}, {"score": 0.003550218173441985, "phrase": "service_adaptation_framework"}, {"score": 0.0034030107704458063, "phrase": "saf"}, {"score": 0.003271099035362546, "phrase": "causal-effect_relationships"}, {"score": 0.0030138579483664917, "phrase": "six_static_adapters"}, {"score": 0.0029968794886425227, "phrase": "five_dynamic_adapters"}, {"score": 0.002938202365941281, "phrase": "static_adapters"}, {"score": 0.002905188343381489, "phrase": "step-wise_algorithms"}, {"score": 0.00288067078705169, "phrase": "dynamic_adapters"}, {"score": 0.0028563595473206555, "phrase": "enterprise_service_bus"}, {"score": 0.0024383151463193793, "phrase": "high_reusability"}, {"score": 0.0024109043398753316, "phrase": "static_adaptations"}, {"score": 0.0022977967191969515, "phrase": "technical_insights"}, {"score": 0.0022848429198019885, "phrase": "service_adaption"}, {"score": 0.002202401083667089, "phrase": "proposed_saf"}, {"score": 0.002189983895470592, "phrase": "service_adapters"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Service adaptation", " Mismatch problem", " Fault", " Static adaptation", " Dynamic adaptation"], "paper_abstract": "Context: In service-oriented computing (SOC), service providers publish reusable services, and service consumers subscribe them. However, there exist potential problems in reusing services. Mismatch is a problem that occurs when a candidate service does not fully match to the feature expected. Fault is a problem that occurs when an invocation of services results in some abnormality at runtime. Without remedying mismatch problems, services would not be reusable. Without remedying fault problems, service invocations at runtime would result in failures. Static and dynamic adaptations are practical approaches to remedying the problems. Objective: Our objective is to define a comprehensive framework which includes a design of service adaptation framework (SAF), and design of static and dynamic adapters. Method: We design the SAF which governs dynamic adaptations, and define a service life-cycle with adaptation-related activities. Based on causal-effect relationships among mismatch, fault, cause, and adapter, we derive mismatches and faults, from which their relevant causes are identified. For the causes, we define six static adapters and five dynamic adapters. We specify instructions for designing static adapters, and provide step-wise algorithms for designing dynamic adapters based on enterprise service bus (ESB). And, we show a proof-of-concept (POC) of implementation to show applicability of the methods. Results: The paper presents service life-cycle with adaptation-related activities, SAF design, and design of static and dynamic adapters. Conclusion: Mismatch and fault problems in utilizing services present threats to high reusability of services. Static adaptations can remedy mismatch problems, and dynamic adaptations can remedy fault problems. In this paper, we presented technical insights of service adaption, SAF design, and definitions of static and dynamic adapters. By utilizing the proposed SAF and service adapters, reusability of services can be greatly enhanced. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Static and dynamic adaptations for service-based systems", "paper_id": "WOS:000296986900001"}