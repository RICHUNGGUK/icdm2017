{"auto_keywords": [{"score": 0.049744433137194954, "phrase": "linear_algebra"}, {"score": 0.04277397877449399, "phrase": "dop"}, {"score": 0.03749604695299381, "phrase": "generic_platforms"}, {"score": 0.00481495049065317, "phrase": "intrinsic_parallelism"}, {"score": 0.004457995891964028, "phrase": "independent_operation_sets"}, {"score": 0.004200319352919505, "phrase": "generic_framework"}, {"score": 0.004041546659145336, "phrase": "rank_theorem"}, {"score": 0.0039024014688338964, "phrase": "algorithmic_parallelisms"}, {"score": 0.0036382660173943393, "phrase": "architectural_information"}, {"score": 0.003415812499773905, "phrase": "significant_role"}, {"score": 0.0033800778203837726, "phrase": "concurrent_optimization"}, {"score": 0.0029897144664663643, "phrase": "aac."}, {"score": 0.0029688173975648173, "phrase": "case_study"}, {"score": 0.0027775085792394326, "phrase": "fpga"}, {"score": 0.00275800486983114, "phrase": "multicore_systems"}, {"score": 0.0026722904884984348, "phrase": "conventional_spectral_parallelization"}, {"score": 0.00263505298504827, "phrase": "fine-grain_parallelism"}, {"score": 0.0025801648787263662, "phrase": "better_porting"}, {"score": 0.0025531499687505483, "phrase": "discrete_wavelet_transform"}, {"score": 0.0025087506382067536, "phrase": "single_instruction_multiple_data"}, {"score": 0.0024912210327379274, "phrase": "simd"}, {"score": 0.002439308179084911, "phrase": "commercial_compiler"}, {"score": 0.0024137645015872952, "phrase": "high-quality_deinterlacer"}, {"score": 0.002371783323468861, "phrase": "low-cost_multicore_platform"}, {"score": 0.0023551955270737215, "phrase": "real-time_high-definition_applications"}, {"score": 0.002289993730291136, "phrase": "case_studies"}, {"score": 0.0022110183535859374, "phrase": "generic_systems"}, {"score": 0.0021801944769738618, "phrase": "traditional_graph_traversal_techniques"}, {"score": 0.0021422669204408263, "phrase": "low_complexity"}, {"score": 0.0021049977753042253, "phrase": "complicated_algorithms"}], "paper_keywords": ["Intrinsic parallelism", " linear algebra", " algorithm/architecture coexploration"], "paper_abstract": "Degree of parallelism (DoP) is an essential complexity metric that characterizes the number of independent operation sets (IOSs) that can be concurrently executed within an algorithm. This paper presents a generic framework to identify IOSs and to quantify the DoP based on rank theorem in linear algebra. This framework is applied to extract algorithmic parallelisms at various granularities, namely, multigrain parallelism. Our parallelism is intrinsic and platform independent and can provide insights into architectural information, thus facilitating mapping onto generic platforms and early back annotation for modifying algorithms. It plays a significant role in the concurrent optimization of both algorithms and architectures, referred to as Algorithm/Architecture Coexploration (AAC), by trading off between the DoP and the number of operations (NoO). This paper reports three case studies for AAC. The case study on an IDCT reveals that our framework accurately quantifies the parallelism for mapping the algorithm onto generic platforms, including FPGA and multicore systems. The IDCT parallelized by our technique surpasses a conventional spectral parallelization. By exploiting fine-grain parallelism, this paper presents a better porting of a discrete wavelet transform (DWT) onto single instruction multiple data (SIMD) machines compared with a commercial compiler. A high-quality deinterlacer is implemented on a low-cost multicore platform for real-time high-definition applications by analyzing the multigrain parallelism. These case studies reveal the effectiveness of our parallel analysis framework which is applicable to generic systems. Compared with traditional graph traversal techniques, our linear algebraic approach impressively features low complexity and is practical for complicated algorithms.", "paper_title": "Quantifying Intrinsic Parallelism Using Linear Algebra for Algorithm/Architecture Coexploration", "paper_id": "WOS:000301890400016"}