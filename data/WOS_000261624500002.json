{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "qualitative_z_constraints"}, {"score": 0.004655924035639928, "phrase": "ltl-like_logic"}, {"score": 0.004442032546224076, "phrase": "constraint_language_interpreting_variables"}, {"score": 0.00432423070113186, "phrase": "constraint_language"}, {"score": 0.004266501496765747, "phrase": "periodicity_constraints"}, {"score": 0.004209539728590977, "phrase": "comparison_constraints"}, {"score": 0.003780286517897356, "phrase": "boolean_operations"}, {"score": 0.003679969180334367, "phrase": "restricted_form"}, {"score": 0.003630809610997277, "phrase": "existential_quantification"}, {"score": 0.0033946556965877873, "phrase": "calendar_formalisms"}, {"score": 0.0033045378860812403, "phrase": "counter_automata"}, {"score": 0.00300749708357049, "phrase": "arithmetic_operators"}, {"score": 0.002830757050018908, "phrase": "satisfiability_and_model-checking_problems"}, {"score": 0.0027187231747900814, "phrase": "appropriate_class"}, {"score": 0.0026823700218343506, "phrase": "constraint_automata"}, {"score": 0.002541741549046619, "phrase": "polynomial_space"}, {"score": 0.002507748938616919, "phrase": "significantly_known_results"}, {"score": 0.0023923066544220277, "phrase": "largest_set"}, {"score": 0.0023603078194781965, "phrase": "qualitative_constraints"}, {"score": 0.0021917966722180132, "phrase": "decidable_ltl_extension"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Temporal logic", " Arithmetical constraint", " Buchi automaton", " Symbolic model", " Complexity"], "paper_abstract": "We introduce an LTL-like logic with atomic formulae built over a constraint language interpreting variables in Z. The constraint language includes periodicity constraints and comparison constraints of the form x = y and x < y; it is closed under Boolean operations and admits a restricted form of existential quantification. Such constraints are used, for instance, in calendar formalisms or abstractions of counter automata by using congruences modulo some power of two. Indeed, various programming languages perform arithmetic operators modulo some integer. We show that the satisfiability and model-checking problems (with respect to an appropriate class of constraint automata) for this logic are decidable in polynomial space improving significantly known results about its strict fragments. This is the largest set of qualitative constraints over Z known so far, shown to admit a decidable LTL extension. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Verification of qualitative Z constraints", "paper_id": "WOS:000261624500002"}