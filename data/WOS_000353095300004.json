{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "connected-component_labeling_algorithms"}, {"score": 0.004749646583168342, "phrase": "distributed-memory_systems"}, {"score": 0.004685224205630963, "phrase": "connected_component_labeling"}, {"score": 0.004590217765551337, "phrase": "key_step"}, {"score": 0.004316552692395911, "phrase": "community_detection"}, {"score": 0.0042579795015449005, "phrase": "social_networks"}, {"score": 0.004200197763119297, "phrase": "coherent_structure_identification"}, {"score": 0.004143196873246147, "phrase": "massively-parallel_scientific_simulations"}, {"score": 0.0036386875640595944, "phrase": "theoretical_and_experimental_results"}, {"score": 0.003540539868937462, "phrase": "five_algorithms"}, {"score": 0.0034215569542785907, "phrase": "direct_implementations"}, {"score": 0.003375087185182269, "phrase": "previous_approaches"}, {"score": 0.003173636240475185, "phrase": "previous_approach"}, {"score": 0.002903628734069691, "phrase": "novel_approach"}, {"score": 0.0028446460307503343, "phrase": "graph_contraction"}, {"score": 0.002786858120570499, "phrase": "weak_scaling"}, {"score": 0.0026384167183586015, "phrase": "graph_contraction_algorithm"}, {"score": 0.0024304113675154017, "phrase": "significantly_less_memory"}, {"score": 0.0023486473525617816, "phrase": "alternative_methods"}], "paper_keywords": ["Distributed-memory", " Connected component", " Scalability"], "paper_abstract": "Connected component labeling is a key step in a wide-range of applications, such as community detection in social networks and coherent structure identification in massively-parallel scientific simulations. There have been several distributed-memory connected component algorithms described in literature; however, little has been done regarding their stalability analysis. Theoretical and experimental results are presented for five algorithms: three that are direct implementations of previous approaches, one that is an implementation of a previous approach that is optimized to reduce communication, and one that is a novel approach based on graph contraction. Under weak scaling and for certain classes of graphs, the graph contraction algorithm scales consistently better than the four other algorithms. Furthermore, it uses significantly less memory than two of the alternative methods and is of the same order in terms of memory as the other two. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Evaluation of connected-component labeling algorithms for distributed-memory systems", "paper_id": "WOS:000353095300004"}