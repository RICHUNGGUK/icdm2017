{"auto_keywords": [{"score": 0.04967710401179305, "phrase": "multiple_robots"}, {"score": 0.015719716506582538, "phrase": "supervisory_control"}, {"score": 0.004655285779819366, "phrase": "multiple_operators"}, {"score": 0.004278807087784626, "phrase": "critical_questions"}, {"score": 0.003965975628742746, "phrase": "team_structure"}, {"score": 0.003932654396285872, "phrase": "scheduling_notification"}, {"score": 0.0038996120252338556, "phrase": "operators'_performance"}, {"score": 0.0038668462001710314, "phrase": "subjective_workload"}, {"score": 0.0038343546245999285, "phrase": "work_processes"}, {"score": 0.003584025547693836, "phrase": "urban_search"}, {"score": 0.0035539019235553897, "phrase": "rescue_setting"}, {"score": 0.003479692058963528, "phrase": "pooled_condition"}, {"score": 0.003421437601439154, "phrase": "team_members"}, {"score": 0.0033078284621762817, "phrase": "sector_condition"}, {"score": 0.0032387402145603412, "phrase": "team_member"}, {"score": 0.0027937732927852646, "phrase": "discrete-event_simulation_model"}, {"score": 0.002471661547432869, "phrase": "backup_behavior"}, {"score": 0.0024405312482831646, "phrase": "critical_coordination_mechanism"}, {"score": 0.0023296961971785357, "phrase": "pooled_teams"}, {"score": 0.002271372252250557, "phrase": "backup_behaviors"}], "paper_keywords": ["Backup behavior", " discrete-event simulation (DES)", " human supervisory control", " robots", " teamwork"], "paper_abstract": "Simultaneously controlling multiple robots requires multiple operators working together as a team. Determining how to construct the team to promote performance and reduce workload are critical questions that must be answered in these settings. To this end, we investigated the effect of team structure and scheduling notification on operators' performance, subjective workload, work processes, and communication using a human-in-the-loop experiment. In an urban search and rescue setting, we compared a pooled condition, in which team members shared control of 24 robots, with a sector condition, in which each team member controlled half of all the robots. For scheduling notification, an alert was given when the operator spent too much time on one robot and either suggested or forced the operator to change to another robot. A discrete-event simulation model was constructed to model the teamwork in supervisory control of multiple robots. The model was significantly improved by the inclusion of a behavior termed as \"backup.\" Backup behavior is a critical coordination mechanism often observed in teams, but rarely explicitly modeled. Pooled teams showed an advantage when performing backup behaviors in both the experiment and the model. However, other factors must be considered when making a decision on what team structure to use.", "paper_title": "Modeling Teamwork in Supervisory Control of Multiple Robots", "paper_id": "WOS:000340436000002"}