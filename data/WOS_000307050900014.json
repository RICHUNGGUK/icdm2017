{"auto_keywords": [{"score": 0.03484284724048068, "phrase": "optimizing_compiler"}, {"score": 0.00481495049065317, "phrase": "microarchitectural_parameters"}, {"score": 0.004610058444728656, "phrase": "embedded_processor_performance"}, {"score": 0.004456717971917794, "phrase": "compiler_optimizations"}, {"score": 0.004125027493339274, "phrase": "time_constraints_designers"}, {"score": 0.003987755561492638, "phrase": "current_methodology"}, {"score": 0.0037811784409635023, "phrase": "suboptimal_performance"}, {"score": 0.0037267132967205136, "phrase": "final_product"}, {"score": 0.0036201167891046046, "phrase": "novel_approach"}, {"score": 0.0035679633126097115, "phrase": "codesign_space_problem"}, {"score": 0.003131023880006021, "phrase": "microarchitecture_configurations"}, {"score": 0.0030267296900520217, "phrase": "single_run"}, {"score": 0.002925899335792914, "phrase": "standard_optimization_setting"}, {"score": 0.002801166393333128, "phrase": "new_microarchitecture"}, {"score": 0.0026175952455594277, "phrase": "architectural_configuration"}, {"score": 0.0021049977753042253, "phrase": "energy-delay-squared_product"}], "paper_keywords": ["Design", " Experimentation", " Performance", " Architecture/compiler codesign", " design-space exploration", " performance prediction"], "paper_abstract": "Embedded processor performance is dependent on both the underlying architecture and the compiler optimizations applied. However, designing both simultaneously is extremely difficult to achieve due to the time constraints designers must work under. Therefore, current methodology involves designing compiler and architecture in isolation, leading to suboptimal performance of the final product. This article develops a novel approach to this codesign space problem. For our specific design space, we demonstrate that we can automatically predict the performance that an optimizing compiler would achieve without actually tuning it for any of the microarchitecture configurations considered. Once trained, a single run of the program compiled with the standard optimization setting is enough to make a prediction on the new microarchitecture with just a 3.2% error rate on average. This allows the designer to accurately choose an architectural configuration with knowledge of how an optimizing compiler will perform on it. We use this to find the best optimizing compiler/architectural configuration in our codesign space and demonstrate that it achieves an average 19% performance improvement and energy savings of 16% compared to the baseline, nearly doubling the energy-efficiency measured as the energy-delay-squared product (EDD).", "paper_title": "Exploring and Predicting the Effects of Microarchitectural Parameters and Compiler Optimizations on Performance and Energy", "paper_id": "WOS:000307050900014"}