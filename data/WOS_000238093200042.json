{"auto_keywords": [{"score": 0.049488021144002546, "phrase": "visual_queries"}, {"score": 0.00481495049065317, "phrase": "graph_database"}, {"score": 0.004581505405526037, "phrase": "graph_database_system"}, {"score": 0.004225950334493496, "phrase": "query_result"}, {"score": 0.003971262520692664, "phrase": "intrinsic_relationship"}, {"score": 0.0038978806337961565, "phrase": "returned_data"}, {"score": 0.003802135020791801, "phrase": "database_system"}, {"score": 0.0037551466963589965, "phrase": "coral"}, {"score": 0.003617616153730564, "phrase": "query_execution_engine"}, {"score": 0.0032953582866530966, "phrase": "coral_optimization_techniques"}, {"score": 0.003254610516477302, "phrase": "visual_query_processing"}, {"score": 0.003039311963787733, "phrase": "coral's_query"}, {"score": 0.0029279232349513724, "phrase": "supplementary_magic_templates"}, {"score": 0.0028917056916949744, "phrase": "magic_templates"}, {"score": 0.002855934865505357, "phrase": "context_factoring"}, {"score": 0.0028206052780047424, "phrase": "naive_backtracking"}, {"score": 0.0025691622090542304, "phrase": "minimum_total_time"}, {"score": 0.0025059724686541263, "phrase": "benchmark_queries"}, {"score": 0.002444333100610621, "phrase": "coral's_default_optimization_method"}, {"score": 0.002429161048032688, "phrase": "supplementary_magic"}, {"score": 0.002340081450249521, "phrase": "best_choice"}, {"score": 0.0021049977753042253, "phrase": "right_optimization_approach"}], "paper_keywords": [""], "paper_abstract": "We have constructed a graph database system where a query can be expressed intuitively as a diagram. The query result is also visualized as a diagram based on the intrinsic relationship among the returned data. In this database system, CORAL plays the role of a query execution engine to evaluate queries and deduce results. In order to understand the effectiveness of CORAL optimization techniques on visual query processing. We present and analyze the performance and scalability of CORAL's query rewriting strategies, which include Supplementary Magic Templates, Magic Templates, Context Factoring, Naive Backtracking, and Without Rewriting method. Our research surprisingly shows that the Without Rewriting method takes the minimum total time to process the benchmark queries. Furthermore, CORAL's default optimization method Supplementary Magic Templates is not uniformly the best choice for every query. The \"optimization\" of visual queries is beneficial if one could select the right optimization approach for each query.", "paper_title": "Query optimization for a graph database with visual queries", "paper_id": "WOS:000238093200042"}