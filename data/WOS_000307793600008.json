{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "comment_update_practices"}, {"score": 0.00468476935399643, "phrase": "source_code"}, {"score": 0.004575977644865379, "phrase": "associated_comments"}, {"score": 0.0036315039559860654, "phrase": "software_engineering_folklore"}, {"score": 0.003547084456662448, "phrase": "inconsistent_updates"}, {"score": 0.003357633232360232, "phrase": "out-of-date_comments"}, {"score": 0.0027814417101979317, "phrase": "future_bugs"}, {"score": 0.0027060907634889734, "phrase": "prior_bugs"}, {"score": 0.0026327757304477665, "phrase": "inconsistent_changes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Code quality", " Software bugs", " Software evolution", " Source code comments", " Empirical studies"], "paper_abstract": "When changing source code, developers sometimes update the associated comments of the code (a consistent update), while at other times they do not (an inconsistent update). Similarly, developers sometimes only update a comment without its associated code (an inconsistent update). The relationship of such comment update practices and software bugs has never been explored empirically. While some (in)consistent updates might be harmless, software engineering folklore warns of the risks of inconsistent updates between code and comments, because these updates are likely to lead to out-of-date comments, which in turn might mislead developers and cause the introduction of bugs in the future. In this paper, we study comment update practices in three large open-source systems written in C (FreeBSD and PostgreSQL) and Java (Eclipse). We find that these practices can better explain and predict future bugs than other indicators like the number of prior bugs or changes. Our findings suggest that inconsistent changes are not necessarily correlated with more bugs. Instead, a change in which a function and its comment are suddenly updated inconsistently, whereas they are usually updated consistently (or vice versa), is risky (high probability of introducing a bug) and should be reviewed carefully by practitioners. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "On the relationship between comment update practices and Software Bugs", "paper_id": "WOS:000307793600008"}