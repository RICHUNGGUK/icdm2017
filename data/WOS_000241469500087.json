{"auto_keywords": [{"score": 0.030938573577618204, "phrase": "daedalus"}, {"score": 0.00481495049065317, "phrase": "daedalus_-_a"}, {"score": 0.004417848254181138, "phrase": "ubiquitous_computing"}, {"score": 0.004195418010131832, "phrase": "large_scale"}, {"score": 0.004088421020408183, "phrase": "high_volatility_tolerance"}, {"score": 0.0038825121288253435, "phrase": "peer_solutions"}, {"score": 0.0037188360359702182, "phrase": "memory_systems"}, {"score": 0.003130077012135034, "phrase": "concurrent_write_accesses"}, {"score": 0.002822434555587263, "phrase": "sun's_jxta_framework"}, {"score": 0.002703327151461985, "phrase": "efficient_stochastic_locking_protocol"}, {"score": 0.0026570998719084153, "phrase": "proper_resource_clustering"}, {"score": 0.0025892330566358503, "phrase": "semi-hierarchical_grouping"}, {"score": 0.0023958326775913165, "phrase": "heavy_load"}, {"score": 0.002294686545883412, "phrase": "node_mobility"}], "paper_keywords": [""], "paper_abstract": "Data sharing in a large scale and for high volatility tolerance requires peer-to-peer solutions where traditional multiprocessor shared memory systems are not applicable. Efficiency of those P2P shared memory systems depends, in particular, on scale, dynamics, and concurrent write accesses. We have developed a P2P shared memory solution, DAEDALUS, based on SUN's JXTA framework, and integrated an efficient stochastic locking protocol, proper resource clustering, and semi-hierarchical grouping of nodes. We evaluated the applicability under heavy load, scale, and node mobility. Here, DAEDALUS outperformed a client/server system and solved its inherent scalability problem.", "paper_title": "DAEDALUS - A peer-to-peer shared memory system for ubiquitous computing", "paper_id": "WOS:000241469500087"}