{"auto_keywords": [{"score": 0.03599555596570459, "phrase": "different_algorithms"}, {"score": 0.031077631305480972, "phrase": "different_mappings"}, {"score": 0.00481495049065317, "phrase": "flux_interconnection_networks"}, {"score": 0.004569293780076254, "phrase": "parallel_system"}, {"score": 0.004361428012479218, "phrase": "program_execution"}, {"score": 0.004236321075918639, "phrase": "programming_paradigm"}, {"score": 0.004043541331944951, "phrase": "proposed_solution"}, {"score": 0.003726967166630923, "phrase": "potential_performance_gain"}, {"score": 0.0031660031870090434, "phrase": "grid\"-like_or_reconfigurable_physical_interconnection_networks"}, {"score": 0.0029694040368299624, "phrase": "underlying_network"}, {"score": 0.00278497898719426, "phrase": "single_algorithm"}, {"score": 0.002658068304632523, "phrase": "processing_data_size"}, {"score": 0.0025816953009851072, "phrase": "utilized_nodes"}, {"score": 0.002536926192232391, "phrase": "hardware_cost"}, {"score": 0.00249293148301837, "phrase": "processing_elements_changes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["interconnection networks", " multiprocessor parallel systems"], "paper_abstract": "In this paper, we introduce the FLUX interconnection networks, a scheme where the interconnections of a parallel system are established on demand before or during program execution. We present a programming paradigm which can be utilized to make the proposed solution feasible. We perform several experiments to show the viability of our approach and the potential performance gain of using the most suitable network configuration for a given parallel program. We experiment on several case studies, evaluate different algorithms, developed for meshes or trees, and map them on \"grid\"-like or reconfigurable physical interconnection networks. Our results clearly show that, based on the underlying network, different mappings are suitable for different algorithms. Even for a single algorithm different mappings are more appropriate, when the processing data size, the number of utilized nodes or the hardware cost of the processing elements changes. The implication of the above is that changing interconnection topologies/mappings (dynamically) on demand depending on the program needs can be beneficial. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "FLUX interconnection networks on demand", "paper_id": "WOS:000248607900009"}