{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "buffer_optimization"}, {"score": 0.013335511546322952, "phrase": "regulation_spectrum"}, {"score": 0.004777727208711472, "phrase": "network"}, {"score": 0.00433531459712787, "phrase": "major_source"}, {"score": 0.004260134699483774, "phrase": "power_consumption"}, {"score": 0.004167982855788402, "phrase": "flow_regulation"}, {"score": 0.003920384090110374, "phrase": "chip_architects"}, {"score": 0.0038355531523269217, "phrase": "backlog_bounds"}, {"score": 0.003545024951402821, "phrase": "conflicting_regulation_requirements"}, {"score": 0.0032908057622663732, "phrase": "regulation_parameters"}, {"score": 0.002936709606809639, "phrase": "buffer_size"}, {"score": 0.0028857130140890787, "phrase": "minimization_objectives"}, {"score": 0.002860546817196148, "phrase": "minimizing_buffer_variance"}, {"score": 0.0027140798043053986, "phrase": "network_interfaces"}, {"score": 0.0026786469998321084, "phrase": "realistic_case_study"}, {"score": 0.0026321198895843173, "phrase": "total_buffers"}, {"score": 0.0025863988422430797, "phrase": "total_latency"}, {"score": 0.0024218895273910943, "phrase": "experimental_results"}, {"score": 0.0024007585788965655, "phrase": "similar_improvements"}, {"score": 0.0023487324083283205, "phrase": "synthetic_traffic_patterns"}, {"score": 0.0023180581939456686, "phrase": "optimization_algorithm"}, {"score": 0.002297831085501592, "phrase": "low_run-time_complexity"}, {"score": 0.0022382002476510573, "phrase": "large_design_spaces"}, {"score": 0.0021801135036476136, "phrase": "optimal_flow_regulation"}, {"score": 0.0021422271362195734, "phrase": "highly_valuable_instrument"}, {"score": 0.0021049977753042253, "phrase": "noc_designs"}], "paper_keywords": ["Buffer size", " buffer variance", " interior point method", " network-on-chip (NoC)", " optimization problem"], "paper_abstract": "For network-on-chip (NoC) designs, optimizing buffers is an essential task since buffers are a major source of cost and power consumption. This paper proposes flow regulation and has defined a regulation spectrum as a means for system-on-chip architects to control delay and backlog bounds. The regulation is performed per flow for its peak rate and burstiness. However, many flows may have conflicting regulation requirements due to interferences with each other. Based on the regulation spectrum, this paper optimizes the regulation parameters aiming for buffer optimization. Three timing-constrained buffer optimization problems are formulated, namely, buffer size minimization, buffer variance minimization, and multiobjective optimization, which has both buffer size and variance as minimization objectives. Minimizing buffer variance is also important because it affects the modularity of routers and network interfaces. A realistic case study exhibits 62.8% reduction of total buffers, 84.3% reduction of total latency, and 94.4% reduction on the sum of variances of buffers. Likewise, the experimental results demonstrate similar improvements in the case of synthetic traffic patterns. The optimization algorithm has low run-time complexity, enabling quick exploration of large design spaces. This paper concludes that optimal flow regulation can be a highly valuable instrument for buffer optimization in NoC designs.", "paper_title": "Buffer Optimization in Network-on-Chip Through Flow Regulation", "paper_id": "WOS:000284417400011"}