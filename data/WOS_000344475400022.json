{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "detect_code_injection_attacks"}, {"score": 0.004312622975366676, "phrase": "memory_pages"}, {"score": 0.003459191419478298, "phrase": "scheme_blocks"}, {"score": 0.0031845067058084583, "phrase": "code_activation"}, {"score": 0.0026252106881752067, "phrase": "legitimate_code_injection"}, {"score": 0.0024842242921857705, "phrase": "negligible_performance_impact"}, {"score": 0.0021049977753042253, "phrase": "user_application"}], "paper_keywords": [""], "paper_abstract": "By identifying memory pages that external I/O operations have modified, a proposed scheme blocks malicious injected code activation, accurately distinguishing an attack from legitimate code injection with negligible performance impact and no changes to the user application.", "paper_title": "Monitoring Translation Lookahead Buffers to Detect Code Injection Attacks", "paper_id": "WOS:000344475400022"}