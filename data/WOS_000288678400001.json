{"auto_keywords": [{"score": 0.03963329481008671, "phrase": "fpga"}, {"score": 0.03165723457468732, "phrase": "xilinx"}, {"score": 0.00481495049065317, "phrase": "system-on-chip_design_complexity"}, {"score": 0.004456872931482395, "phrase": "register_transfer_level"}, {"score": 0.004352123742308589, "phrase": "unsuccessful_adoptions"}, {"score": 0.00430067200637091, "phrase": "early_generations"}, {"score": 0.003980687255880282, "phrase": "hls_methodology"}, {"score": 0.003818326867123525, "phrase": "field-programmable_gate_array"}, {"score": 0.0036625643243684827, "phrase": "latest_generation"}, {"score": 0.003619235073669304, "phrase": "hls_tools"}, {"score": 0.0035551969986263553, "phrase": "significant_progress"}, {"score": 0.0034922880300145283, "phrase": "wide_language_coverage"}, {"score": 0.003450966222451678, "phrase": "robust_compilation_technology"}, {"score": 0.0034101316738399203, "phrase": "platform-based_modeling"}, {"score": 0.0033299015941662302, "phrase": "core_hls_algorithms"}, {"score": 0.003251552926963083, "phrase": "domain-specific_approach"}, {"score": 0.0031003255054939524, "phrase": "autoesl's_autopilot_hls_tool"}, {"score": 0.003045440856986832, "phrase": "domain-specific_system-level_implementation_platforms"}, {"score": 0.0028354207806133153, "phrase": "state-of-art_c-to-fpga_synthesis_solutions"}, {"score": 0.00248718591918233, "phrase": "hls_solutions"}, {"score": 0.0024577274522206436, "phrase": "optimized_manual_designs"}, {"score": 0.002329412930430366, "phrase": "sphere_decoder"}, {"score": 0.0022745508619577927, "phrase": "hls_solution"}, {"score": 0.002142970278347126, "phrase": "improved_design_productivity"}, {"score": 0.0021049977753042253, "phrase": "hand-coded_design"}], "paper_keywords": ["Domain-specific design", " field-programmable gate array (FPGA)", " high-level synthesis (HLS)", " quality of results (QoR)"], "paper_abstract": "Escalating system-on-chip design complexity is pushing the design community to raise the level of abstraction beyond register transfer level. Despite the unsuccessful adoptions of early generations of commercial high-level synthesis (HLS) systems, we believe that the tipping point for transitioning to HLS methodology is happening now, especially for field-programmable gate array (FPGA) designs. The latest generation of HLS tools has made significant progress in providing wide language coverage and robust compilation technology, platform-based modeling, advancement in core HLS algorithms, and a domain-specific approach. In this paper, we use AutoESL's AutoPilot HLS tool coupled with domain-specific system-level implementation platforms developed by Xilinx as an example to demonstrate the effectiveness of state-of-art C-to-FPGA synthesis solutions targeting multiple application domains. Complex industrial designs targeting Xilinx FPGAs are also presented as case studies, including comparison of HLS solutions versus optimized manual designs. In particular, the experiment on a sphere decoder shows that the HLS solution can achieve an 11-31% reduction in FPGA resource usage with improved design productivity compared to hand-coded design.", "paper_title": "High-Level Synthesis for FPGAs: From Prototyping to Deployment", "paper_id": "WOS:000288678400001"}