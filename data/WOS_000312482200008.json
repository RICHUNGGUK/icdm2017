{"auto_keywords": [{"score": 0.04842456838190479, "phrase": "reeb_graph"}, {"score": 0.010070221152695217, "phrase": "scalar_function"}, {"score": 0.00481495049065317, "phrase": "reeb_graphs"}, {"score": 0.0047310525657970615, "phrase": "union_of_contour_trees"}, {"score": 0.004207734323806386, "phrase": "fast_algorithm"}, {"score": 0.0038534477978822133, "phrase": "key_idea"}, {"score": 0.0037862398004482253, "phrase": "proposed_approach"}, {"score": 0.0036553070575015344, "phrase": "efficient_contour_tree_algorithm"}, {"score": 0.0032505921489759224, "phrase": "loop-free_reeb_graphs"}, {"score": 0.0029766550209309127, "phrase": "contour_trees"}, {"score": 0.0028736379396305596, "phrase": "key_ingredient"}, {"score": 0.0027417911324611917, "phrase": "union-find_operations"}, {"score": 0.002600661525224505, "phrase": "experimental_results"}, {"score": 0.0025254115243261875, "phrase": "current_generic_algorithms"}, {"score": 0.0022323643840655646, "phrase": "restricted_classes"}, {"score": 0.0021049977753042253, "phrase": "large_data"}], "paper_keywords": ["Computational topology", " scalar functions", " Reeb graphs", " level set topology", " out-of-core algorithm"], "paper_abstract": "The Reeb graph of a scalar function tracks the evolution of the topology of its level sets. This paper describes a fast algorithm to compute the Reeb graph of a piecewise-linear (PL) function defined over manifolds and non-manifolds. The key idea in the proposed approach is to maximally leverage the efficient contour tree algorithm to compute the Reeb graph. The algorithm proceeds by dividing the input into a set of subvolumes that have loop-free Reeb graphs using the join tree of the scalar function and computes the Reeb graph by combining the contour trees of all the subvolumes. Since the key ingredient of this method is a series of union-find operations, the algorithm is fast in practice. Experimental results demonstrate that it outperforms current generic algorithms by a factor of up to two orders of magnitude, and has a performance on par with algorithms that are catered to restricted classes of input. The algorithm also extends to handle large data that do not fit in memory.", "paper_title": "Computing Reeb Graphs as a Union of Contour Trees", "paper_id": "WOS:000312482200008"}