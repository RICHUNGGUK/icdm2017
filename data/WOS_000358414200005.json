{"auto_keywords": [{"score": 0.04710443424650763, "phrase": "linear_systems"}, {"score": 0.04243032195732421, "phrase": "central_processing_unit"}, {"score": 0.00481495049065317, "phrase": "massively_parallel_computations"}, {"score": 0.004753670676591174, "phrase": "graphics_processing_units"}, {"score": 0.004693167092003573, "phrase": "direct_and_iterative_methods"}, {"score": 0.0041287394089001405, "phrase": "heavy_computations"}, {"score": 0.0039729853486821995, "phrase": "graphics_processing_unit"}, {"score": 0.0035856674209019234, "phrase": "new_library"}, {"score": 0.0035173498506324476, "phrase": "alinea"}, {"score": 0.003450329424861292, "phrase": "advanced_linear_algebra"}, {"score": 0.0032568697338830896, "phrase": "cuda"}, {"score": 0.0029203055813347874, "phrase": "graphic_processing_unit_devices"}, {"score": 0.0028463059289874637, "phrase": "different_matrix_storage_formats"}, {"score": 0.0027920359090544107, "phrase": "real_and_complex_arithmetics"}, {"score": 0.0026693851900137953, "phrase": "cuda_version"}, {"score": 0.0024243586247372087, "phrase": "hardware_configuration"}, {"score": 0.0023029886389559122, "phrase": "numerical_experiments"}, {"score": 0.002244596395352896, "phrase": "existing_libraries"}, {"score": 0.0021049977753042253, "phrase": "proposed_library"}], "paper_keywords": ["Alinea", " linear algebra", " direct solvers", " iterative solvers", " parallel computing", " CPU", " GPU", " CUDA", " OpenCL", " auto-tuning", " energy efficiency"], "paper_abstract": "Direct and iterative methods are often used to solve linear systems in engineering. The matrices involved can be large, which leads to heavy computations on the central processing unit. A graphics processing unit can be used to accelerate these computations. In this paper, we propose a new library, named Alinea, for advanced linear algebra. This library is implemented in C++, CUDA and OpenCL. It includes several linear algebra operations and numerous algorithms for solving linear systems. For both central processing unit and graphic processing unit devices, there are different matrix storage formats, and real and complex arithmetics in single- and double-precision. The CUDA version includes a self-tuning of the grid, i.e. threading distribution, depending upon the hardware configuration and the size of the problems. Numerical experiments and comparison with existing libraries illustrates the efficiency, accuracy and robustness of the proposed library.", "paper_title": "Alinea: An Advanced Linear Algebra Library for Massively Parallel Computations on Graphics Processing Units", "paper_id": "WOS:000358414200005"}