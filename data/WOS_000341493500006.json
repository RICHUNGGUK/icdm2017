{"auto_keywords": [{"score": 0.047863895213888945, "phrase": "dags"}, {"score": 0.02929631882825332, "phrase": "area-maximizing_schedules"}, {"score": 0.00481495049065317, "phrase": "scheduling_series-parallel_dags"}, {"score": 0.004533427352547707, "phrase": "average_number"}, {"score": 0.004249957578636515, "phrase": "area_maximization"}, {"score": 0.004195418010131832, "phrase": "new_optimization_goal"}, {"score": 0.0040708542958968605, "phrase": "computational_environments"}, {"score": 0.004001335931796133, "phrase": "internet-based_computing"}, {"score": 0.003916098498242888, "phrase": "volunteer_computing_projects"}, {"score": 0.0037188360359702182, "phrase": "environments'_constituent_computers"}, {"score": 0.003353521531649663, "phrase": "dynamically_heterogeneous_environments"}, {"score": 0.0032820385246266773, "phrase": "larger_areas"}, {"score": 0.003212074324593725, "phrase": "smaller_completion_time"}, {"score": 0.0030898642396380662, "phrase": "preliminary_simulation-based_experiments"}, {"score": 0.0029980260560551982, "phrase": "area-maximizing_schedule"}, {"score": 0.0028468767420392945, "phrase": "arbitrary_dag."}, {"score": 0.0028346293790895024, "phrase": "earlier_work"}, {"score": 0.0025780912201045555, "phrase": "current_paper"}, {"score": 0.002448061472257196, "phrase": "series-parallel_dags"}, {"score": 0.002375253757224999, "phrase": "multithreading_computing_paradigm"}, {"score": 0.002226430168622392, "phrase": "recursively_defined_dags."}, {"score": 0.0021049977753042253, "phrase": "efficient_area-oriented_heuristic"}], "paper_keywords": ["Dynamically heterogeneous computing platforms", " DAG-scheduling for dynamically heterogeneous platforms", " series-parallel DAGS", " cloud computing", " desktop grids", " volunteer computing"], "paper_abstract": "The AREA of a schedule for executing DAGS is the average number of DAG-chores that are eligible for execution at each step of the computation. AREA maximization is a new optimization goal for schedules that execute DAGS within computational environments, such as Internet-based computing, clouds, and volunteer computing projects, that are dynamically heterogeneous, in the sense that the environments' constituent computers can change their effective powers at times and in ways that are not predictable. This paper is motivated by the thesis that, within dynamically heterogeneous environments, DAG-schedules that have larger AREAs execute a computation-DAG with smaller completion time under many circumstances; this thesis is supported by preliminary simulation-based experiments. While every DAG admits an AREA-maximizing schedule, it is likely computationally difficult to find such a schedule for an arbitrary DAG. Earlier work has shown how to craft AREA-maximizing schedules efficiently for a number of families of DAGS whose structures are reminiscent of many scientific computations. The current paper extends this work by showing how to efficiently craft AREA-maximizing schedules for series-parallel DAGS, a family that models a multithreading computing paradigm. The techniques for crafting these schedules promise to apply also to other large families of recursively defined DAGS. Moreover, the ability to derive these schedules efficiently leads to an efficient AREA-oriented heuristic for scheduling arbitrary DAGS.", "paper_title": "ON SCHEDULING SERIES-PARALLEL DAGs TO MAXIMIZE AREA", "paper_id": "WOS:000341493500006"}