{"auto_keywords": [{"score": 0.04609968630540793, "phrase": "pcm"}, {"score": 0.04178453621666503, "phrase": "lbmvbt"}, {"score": 0.012059058647835286, "phrase": "version-range_queries"}, {"score": 0.00481495049065317, "phrase": "multiversion_b-tree"}, {"score": 0.004758457292840376, "phrase": "pcm-based_embedded_databases"}, {"score": 0.004592905436175987, "phrase": "application_characteristics"}, {"score": 0.004556901872357751, "phrase": "cyber-physical_systems"}, {"score": 0.004521226609025712, "phrase": "cps"}, {"score": 0.004450568197899267, "phrase": "performance_characteristics"}, {"score": 0.004329630571352367, "phrase": "new_b-tree_index_structure"}, {"score": 0.0042119653427658025, "phrase": "multi-version_b-tree"}, {"score": 0.00409748471133883, "phrase": "multi-version_data"}, {"score": 0.00404937519538515, "phrase": "embedded_multi-version_database"}, {"score": 0.004017617232154088, "phrase": "cps."}, {"score": 0.00361237042013781, "phrase": "block-based_scheme"}, {"score": 0.003541923233726252, "phrase": "multiple_versions"}, {"score": 0.003500313767208306, "phrase": "data_item"}, {"score": 0.003432044343307207, "phrase": "version_block"}, {"score": 0.0033518704336033874, "phrase": "single_entry"}, {"score": 0.003312486229143855, "phrase": "multi-version_index"}, {"score": 0.00320970209394799, "phrase": "organization_cost"}, {"score": 0.0030614565460256897, "phrase": "node_overflow"}, {"score": 0.0029899137403982027, "phrase": "external_entries"}, {"score": 0.0029547698888028697, "phrase": "index_leaf"}, {"score": 0.002763261749602258, "phrase": "index_entries"}, {"score": 0.0027307746993761035, "phrase": "re-organized_leaf_nodes"}, {"score": 0.00266693888510356, "phrase": "analytic_studies"}, {"score": 0.002474447780553576, "phrase": "lbmvbt."}, {"score": 0.002455009746748708, "phrase": "experimental_results"}, {"score": 0.0022958180852458215, "phrase": "good_overall_performance"}, {"score": 0.002268814162496699, "phrase": "update_transactions"}, {"score": 0.0022070310530794097, "phrase": "smaller_number"}, {"score": 0.0021384748235753425, "phrase": "mvbt."}], "paper_keywords": ["Phase change memory", " Multi-version index", " Cyber-physical systems", " Embedded systems"], "paper_abstract": "In this paper, by exploring the application characteristics of cyber-physical systems (CPS) and the performance characteristics of PCM, we propose a new B-tree index structure, called Linked Block-based Multi-Version B-Tree (LBMVBT), for indexing multi-version data in an embedded multi-version database for CPS. In LBMVBT, to reduce the number of writes to PCM in maintaining the index and improve the efficiency in serving version-range queries, we introduce the block-based scheme for indexing in which multiple versions of a data item are grouped into a version block to be indexed by a single entry in the multi-version index. To reduce the index re-organization cost (i.e., number of writes to PCM) due to node overflow and underflow, we add external entries in each index leaf node so that a node re-organization can be done by only updating pointers without copying the index entries of the re-organized leaf nodes to the new node. Analytic studies have been performed on LBMVBT and a series of experiments has been conducted to evaluate the efficacy of LBMVBT. The experimental results show that LBMVBT can effectively reduce the number of writes to the index and achieve a good overall performance on serving update transactions while version-range queries can be served with smaller number of reads to the index compared with MVBT. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Linked Block-based Multiversion B-Tree index for PCM-based embedded databases", "paper_id": "WOS:000364271900001"}