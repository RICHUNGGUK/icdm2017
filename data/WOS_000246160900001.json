{"auto_keywords": [{"score": 0.031947736897611906, "phrase": "shortest_s-t_path"}, {"score": 0.00481495049065317, "phrase": "shortest_paths"}, {"score": 0.004513631630494221, "phrase": "shortest_path"}, {"score": 0.004451546786101008, "phrase": "vertex_s"}, {"score": 0.004390312150344245, "phrase": "vertex_t"}, {"score": 0.0035498822293046884, "phrase": "estimation_algorithm"}, {"score": 0.0034210342328868017, "phrase": "exact_length"}, {"score": 0.0032665093519968083, "phrase": "cheapest_set"}, {"score": 0.0029234476524900794, "phrase": "additive_kappa"}, {"score": 0.0024636239664210433, "phrase": "cheap_set"}, {"score": 0.0024409345168575833, "phrase": "edge_queries"}, {"score": 0.0023091093387071593, "phrase": "positive_and_negative_results"}, {"score": 0.0022458849724980904, "phrase": "general_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["shortest path"], "paper_abstract": "We consider the problem of estimating the length of the shortest path from a vertex s to a vertex t in a DAG whose edge lengths are known only approximately but can be determined exactly at a cost. Initially, for each edge e, the length of e is known only to lie within an interval [l(e), h(e)]; the estimation algorithm can pay w(e) to find the exact length of e. We study the problem of finding the cheapest set of edges such that, if exactly these edges are queried, the length of the shortest s-t path will be known, within an additive kappa >= 0, an input parameter. An actual s-t path, whose true length exceeds that of the shortest s-t path by at most kappa, will be obtained as well. The problem of finding a cheap set of edge queries is in neither NP nor co-NP unless NP = co-NP. We give positive and negative results for two special cases and for the general case, which we show is in Sigma(2). (c) 2004 Elsevier Inc. All rights reserved.", "paper_title": "Computing shortest paths with uncertainty", "paper_id": "WOS:000246160900001"}