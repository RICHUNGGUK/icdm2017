{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.004360412703519539, "phrase": "novel_real-time_cartoon-style_rendering_approach"}, {"score": 0.0041357305373417455, "phrase": "cartoon_drawing"}, {"score": 0.004027751272984522, "phrase": "limited_number"}, {"score": 0.003845500924733243, "phrase": "special_effects"}, {"score": 0.0037450707321601963, "phrase": "sharp_curvature"}, {"score": 0.0035519826240477444, "phrase": "remaining_large_regions"}, {"score": 0.0035052810710060893, "phrase": "uniform_solid_colors"}, {"score": 0.003413705707789296, "phrase": "light_intensity"}, {"score": 0.0033465923623290034, "phrase": "different_shadow_colors"}, {"score": 0.0032807941194429235, "phrase": "multiresolution_mesh_hierarchy"}, {"score": 0.003216285378512588, "phrase": "appropriate_levels"}, {"score": 0.0029706504420983896, "phrase": "visual_requirements"}, {"score": 0.0028930017387859804, "phrase": "graphics_hardware_programmability"}, {"score": 0.0028360962841331634, "phrase": "smooth_silhouette"}, {"score": 0.002798780784517325, "phrase": "color_boundaries"}, {"score": 0.002707620139970122, "phrase": "fragment_processors"}, {"score": 0.002602127996667857, "phrase": "simplification_scheme"}, {"score": 0.0025509294021449254, "phrase": "simplification_operators"}, {"score": 0.00250073564820402, "phrase": "extra_simplification_operations"}, {"score": 0.00240328454980006, "phrase": "real-time_refinement"}, {"score": 0.0022492129111567824, "phrase": "graphics_processing_unit"}, {"score": 0.002147265537489893, "phrase": "image_quality"}, {"score": 0.0021049977753042253, "phrase": "cpu_load"}], "paper_keywords": ["cartoon rendering", " view-dependent rendering", " hardware acceleration"], "paper_abstract": "In this paper we present a novel real-time cartoon-style rendering approach, which targets very large meshes. Cartoon drawing usually uses a limited number of colors for shading and emphasizes special effects, such as sharp curvature and silhouettes. It also paints the remaining large regions with uniform solid colors. Our approach quantizes light intensity to generate different shadow colors and utilizes multiresolution mesh hierarchy to maintain appropriate levels of detail across various regions of the mesh. To comply with visual requirements, our algorithm exploits graphics hardware programmability to draw smooth silhouette and color boundaries within the vertex and fragment processors. We have adopted a simplification scheme that executes simplification operators without incurring extra simplification operations as a precondition. The real-time refinement of the mesh, which is performed by the graphics processing unit (GPU), dramatically improves image quality and reduces CPU load.", "paper_title": "Interactive GPU-based adaptive cartoon-style rendering", "paper_id": "WOS:000254240100003"}