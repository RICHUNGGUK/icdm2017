{"auto_keywords": [{"score": 0.03916275266840604, "phrase": "vm"}, {"score": 0.014914301774064533, "phrase": "grid_computing"}, {"score": 0.004815133169290437, "phrase": "distributed"}, {"score": 0.004610058444728656, "phrase": "virtual_machine_environments"}, {"score": 0.004435230698216773, "phrase": "data_management_solution"}, {"score": 0.004329331617724, "phrase": "efficient_run-time_execution"}, {"score": 0.004225950334493496, "phrase": "execution_environments"}, {"score": 0.004026505114417176, "phrase": "file_system_virtualization_techniques"}, {"score": 0.00376293585033711, "phrase": "cross-domain_access"}, {"score": 0.0036730297909962142, "phrase": "unmodified_vm_monitors"}, {"score": 0.0035507457285983268, "phrase": "private_file_system_channels"}, {"score": 0.00346589179059467, "phrase": "secure_tunneling"}, {"score": 0.00320770578058916, "phrase": "disk_caches"}, {"score": 0.0029117710453690827, "phrase": "application-specific_meta-data"}, {"score": 0.002828418443899226, "phrase": "data_transfers"}, {"score": 0.0027209713296448296, "phrase": "wide-area_setups"}, {"score": 0.00269475174341129, "phrase": "vmware-based_vms"}, {"score": 0.002542642270762272, "phrase": "native_nfs"}, {"score": 0.0025059724686541263, "phrase": "warm_caches"}, {"score": 0.002446024708601971, "phrase": "application-perceived_overheads"}, {"score": 0.0023759728305710365, "phrase": "local-disk_setup"}, {"score": 0.002241816883550397, "phrase": "virtual_memory"}, {"score": 0.0021566056345478373, "phrase": "first_clone"}, {"score": 0.0021049977753042253, "phrase": "subsequent_clones"}], "paper_keywords": ["distributed file system", " virtual machine", " grid computing"], "paper_abstract": "This paper presents a data management solution which allows fast Virtual Machine (VM) instantiation and efficient run-time execution to support VMs as execution environments in Grid computing. It is based on novel distributed file system virtualization techniques and is unique in that: (1) it provides on-demand cross-domain access to VM state for unmodified VM monitors; (2) it enables private file system channels for VM instantiation by secure tunneling and session-key based authentication; (3) it supports user-level and write-back disk caches, per-application caching policies and middleware-driven consistency models; and (4) it leverages application-specific meta-data associated with files to expedite data transfers. The paper reports on its performance in wide-area setups using VMware-based VMs. Results show that the solution delivers performance over 30% better than native NFS and with warm caches it can bring the application-perceived overheads below 10% compared to a local-disk setup. The solution also allows a VM with 1.6 GB virtual disk and 320 MB virtual memory to be cloned within 160 seconds for the first clone and within 25 seconds for subsequent clones.", "paper_title": "Distributed file system virtualization techniques supporting on-demand Virtual Machine environments for grid computing", "paper_id": "WOS:000202967600004"}