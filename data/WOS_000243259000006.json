{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "common_presupposition"}, {"score": 0.004762202897268383, "phrase": "enterprise_systems"}, {"score": 0.0045318666714939905, "phrase": "significant_efficiency_gains"}, {"score": 0.00433645229352341, "phrase": "well-implemented_es"}, {"score": 0.0040366412779632085, "phrase": "es_implementation_failures"}, {"score": 0.003841263262252044, "phrase": "insufficiently_addressed_fundamental_problem"}, {"score": 0.0032916702592724217, "phrase": "non-generic_character"}, {"score": 0.003132236287543072, "phrase": "re-thinking_current_practices"}, {"score": 0.0029805015010906013, "phrase": "new_approach"}, {"score": 0.002931569771634119, "phrase": "configurable_process_models"}, {"score": 0.0028675712105299496, "phrase": "es_functionalities"}, {"score": 0.0026252106881752067, "phrase": "business_perspective"}, {"score": 0.0025963890234079333, "phrase": "process_model_configuration"}, {"score": 0.002497976173193543, "phrase": "so-called_semantic_configuration_patterns"}, {"score": 0.0023768935613577985, "phrase": "so-called_syntactic_configuration_patterns"}, {"score": 0.0022994427535192514, "phrase": "configuration_patterns"}, {"score": 0.002261666793030715, "phrase": "semantic_configuration_patterns"}, {"score": 0.0022368274529152342, "phrase": "specific_modelling_techniques"}], "paper_keywords": ["adaptability", " configuration", " customising", " alignment", " process model", " requirements engineering"], "paper_abstract": "The common presupposition of enterprise systems ( ES) is that they lead to significant efficiency gains. However, this is only the case for well-implemented ES that are well-aligned with the organisation. The list of ES implementation failures is significant which is partly attributable to the insufficiently addressed fundamental problem of adapting an ES efficiently. As long as it is not intuitively possible to configure an ES, this problem will prevail because organisations have a non-generic character. A solution to this problem consists in re-thinking current practices of ES provision. This paper proposes a new approach based on configurable process models, which reflect ES functionalities. We provide in this paper a taxonomy of situations that can occur from a business perspective during process model configuration. This taxonomy is represented via so-called semantic configuration patterns. In the next step, we discuss so-called syntactic configuration patterns. This second type of configuration patterns implements the semantic configuration patterns for specific modelling techniques. We chose two popular process modelling languages in order to illustrate our approach.", "paper_title": "Model-based software configuration: patterns and languages", "paper_id": "WOS:000243259000006"}