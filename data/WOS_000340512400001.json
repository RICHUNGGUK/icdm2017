{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "scalable_data_placement"}, {"score": 0.004741167616693272, "phrase": "large-scale_storage_systems"}, {"score": 0.004632597963417253, "phrase": "ever-growing_amount"}, {"score": 0.004491678520807451, "phrase": "highly_scalable_storage_solutions"}, {"score": 0.0042552618754756934, "phrase": "storage_pools"}, {"score": 0.003878451139312637, "phrase": "storage_devices"}, {"score": 0.0034008496666026585, "phrase": "data_items"}, {"score": 0.0027813397260607487, "phrase": "pseudo-randomized_hashing_strategies"}, {"score": 0.0026347074232350503, "phrase": "simple_and_efficient_strategy"}, {"score": 0.0025151755329660837, "phrase": "exascale_data"}, {"score": 0.002476546030310661, "phrase": "random_slicing"}, {"score": 0.002419708657850547, "phrase": "small_table"}, {"score": 0.002345944657572499, "phrase": "previous_storage_system_insert"}, {"score": 0.002205079358459154, "phrase": "required_amount"}, {"score": 0.0021049977753042253, "phrase": "perfect_load_distribution"}], "paper_keywords": ["Design", " Experimentation", " Performance", " Reliability", " PRNG", " randomized data distribution", " storage management", " scalability"], "paper_abstract": "The ever-growing amount of data requires highly scalable storage solutions. The most flexible approach is to use storage pools that can be expanded and scaled down by adding or removing storage devices. To make this approach usable, it is necessary to provide a solution to locate data items in such a dynamic environment. This article presents and evaluates the Random Slicing strategy, which incorporates lessons learned from table-based, rule-based, and pseudo-randomized hashing strategies and is able to provide a simple and efficient strategy that scales up to handle exascale data. Random Slicing keeps a small table with information about previous storage system insert and remove operations, drastically reducing the required amount of randomness while delivering a perfect load distribution.", "paper_title": "Random Slicing: Efficient and Scalable Data Placement for Large-Scale Storage Systems", "paper_id": "WOS:000340512400001"}