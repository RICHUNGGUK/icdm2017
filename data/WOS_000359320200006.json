{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "foremost_broadcast"}, {"score": 0.004788416208637939, "phrase": "dynamic_networks"}, {"score": 0.004762027452336851, "phrase": "highly_dynamic_networks"}, {"score": 0.004722715450671519, "phrase": "end-to-end_connectivity"}, {"score": 0.004444129263082239, "phrase": "temporal_analogues"}, {"score": 0.00441962943143471, "phrase": "multi-hop_paths"}, {"score": 0.003891806560322573, "phrase": "efficient_centralized_algorithms"}, {"score": 0.0037961306355345577, "phrase": "full_knowledge"}, {"score": 0.003764762246246238, "phrase": "network_evolution"}, {"score": 0.003651938158106204, "phrase": "distributed_counterparts"}, {"score": 0.003522936431140836, "phrase": "termination_detection"}, {"score": 0.003464938608764737, "phrase": "minimal_knowledge"}, {"score": 0.0033148877626424295, "phrase": "distinct_features"}, {"score": 0.003233348735314861, "phrase": "dynamic_graphs"}, {"score": 0.0029348176536617013, "phrase": "specific_knowledge"}, {"score": 0.0028400487181954237, "phrase": "delta"}, {"score": 0.0027921557572813294, "phrase": "recurrence_time"}, {"score": 0.002583861106007179, "phrase": "overall_footprint"}, {"score": 0.0024856006642521317, "phrase": "strict_inclusion"}, {"score": 0.002411018291255539, "phrase": "feasibility_order"}, {"score": 0.0023386685733717038, "phrase": "weaker_assumptions"}, {"score": 0.0023193155235550354, "phrase": "topology_dynamics"}, {"score": 0.0021821915946356168, "phrase": "computational_powers"}, {"score": 0.0021049977753042253, "phrase": "strict_hierarchy"}], "paper_keywords": ["Dynamic networks", " distributed algorithm", " time-varying graphs", " delay-tolerant broadcast", " recurrent edges"], "paper_abstract": "Highly dynamic networks rarely offer end-to-end connectivity at a given time. Yet, connectivity in these networks can be established over time and space, based on temporal analogues of multi-hop paths (also called journeys). Attempting to optimize the selection of the journeys in these networks naturally leads to the study of three cases: shortest (minimum hop), fastest (minimum duration), and foremost (earliest arrival) journeys. Efficient centralized algorithms exists to compute all cases, when the full knowledge of the network evolution is given. In this paper, we study the distributed counterparts of these problems, i.e. shortest, fastest, and foremost broadcast with termination detection (TDB), with minimal knowledge on the topology. We show that the feasibility of each of these problems requires distinct features on the evolution, through identifying three classes of dynamic graphs wherein the problems become gradually feasible: graphs in which the re-appearance of edges is recurrent (class R.), bounded-recurrent (B), or periodic (p), together with specific knowledge that are respectively n (the number of nodes), Delta (a bound on the recurrence time), and p (the period). In these classes it is not required that all pairs of nodes get in contact only that the overall footprint of the graph is connected over time. Our results, together with the strict inclusion between P, B, and R, implies a feasibility order among the three variants of the problem, i.e. TDB[foremost] requires weaker assumptions on the topology dynamics than TDB[shortest], which itself requires less than TDB[fastest]. Reversely, these differences in feasibility imply that the computational powers of R-n, B-Delta, and P-p also form a strict hierarchy.", "paper_title": "Shortest, Fastest, and Foremost Broadcast in Dynamic Networks", "paper_id": "WOS:000359320200006"}