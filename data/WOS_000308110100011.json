{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "random_hashing"}, {"score": 0.004678785623021003, "phrase": "approximate_computation_technique"}, {"score": 0.0046253989970108985, "phrase": "inter-object_distances"}, {"score": 0.0045726187330434025, "phrase": "binary_data_sets"}, {"score": 0.004417848254181138, "phrase": "locality_sensitive_hashing"}, {"score": 0.0040767015025213625, "phrase": "group_objects"}, {"score": 0.003938650032712796, "phrase": "hash_values"}, {"score": 0.003531474887552889, "phrase": "exact_hamming_distance"}, {"score": 0.003166259444961177, "phrase": "mainly_two_schemes"}, {"score": 0.003058944053868522, "phrase": "random_subspace"}, {"score": 0.002938317647182056, "phrase": "local_co-occurrence_matrix"}, {"score": 0.002806256131739047, "phrase": "final_co-occurrence_matrix"}, {"score": 0.002664749302333897, "phrase": "longer_runtimes"}, {"score": 0.0026041635822373265, "phrase": "total_message_size"}, {"score": 0.0025596276616952516, "phrase": "parallel_computing_environment"}, {"score": 0.0024305268807926056, "phrase": "immense_message_traffic"}, {"score": 0.0022041312401435346, "phrase": "processor_failures"}, {"score": 0.0021789194955896124, "phrase": "experimental_evaluations"}], "paper_keywords": [""], "paper_abstract": "We propose an approximate computation technique for inter-object distances of binary data sets. Our approach is based on locality sensitive hashing. We randomly select a number of projections of the data set and group objects into buckets based on the hash values of these projections. For each pair of objects, occurrences in the same bucket are counted and the exact Hamming distance is approximated based on the number of co-occurrences in all buckets. We parallelize the computation using mainly two schemes. The first assigns each random subspace to a processor for calculating the local co-occurrence matrix, where all the local co-occurrence matrices are combined into the final co-occurrence matrix. The second method provides the same distance approximation in longer runtimes by limiting the total message size in a parallel computing environment, which is especially useful for very large data sets generating immense message traffic. Our methods produce very accurate results, scale up well with the number of objects, and tolerate processor failures. Experimental evaluations on supercomputers and workstations with several processors demonstrate the usefulness of our methods.", "paper_title": "Approximative distance computation by random hashing", "paper_id": "WOS:000308110100011"}