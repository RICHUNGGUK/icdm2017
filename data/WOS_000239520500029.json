{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "monolithic_software_components"}, {"score": 0.004622450915803531, "phrase": "composite_configurations"}, {"score": 0.003966388754366831, "phrase": "component_structures"}, {"score": 0.003807684498435389, "phrase": "component_services"}, {"score": 0.003545024951402821, "phrase": "software_component"}, {"score": 0.003438058620195309, "phrase": "monolithic_configuration"}, {"score": 0.0028026735035370206, "phrase": "flexible_deployment"}, {"score": 0.0027459678326877744, "phrase": "software_components"}, {"score": 0.002690406375639144, "phrase": "flexible_loading"}, {"score": 0.0026359661683151006, "phrase": "component_service-code"}, {"score": 0.002530359917257626, "phrase": "available_resources"}, {"score": 0.0021049977753042253, "phrase": "component_codes"}], "paper_keywords": ["software component", " adaptation", " restructuration", " composite-component", " refactoring"], "paper_abstract": "We present in this paper an approach aiming at adapting component structures instead of adapting component services. It focuses on transforming a software component from a monolithic configuration to a composite one. Among the motivations of this kind of adaptation, we note its possible application to permit flexible deployment of software components and flexible loading of component service-code according to the available resources (CPU, memory). This adaptation is based on the analysis and the instrumentation of component codes.", "paper_title": "Adaptation of monolithic software components by their transformation into composite configurations based on refactoring", "paper_id": "WOS:000239520500029"}