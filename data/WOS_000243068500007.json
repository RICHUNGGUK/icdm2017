{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "web_services"}, {"score": 0.019029675457810615, "phrase": "composite_web_services"}, {"score": 0.01873948066372944, "phrase": "web_services_compositions"}, {"score": 0.004559270778306828, "phrase": "viable_means"}, {"score": 0.004506265705673849, "phrase": "web-based_applications"}, {"score": 0.004436545340717729, "phrase": "web-native_xml_based_solution"}, {"score": 0.004233762728640565, "phrase": "heterogeneous_sources"}, {"score": 0.00396218934254591, "phrase": "business_processes"}, {"score": 0.0037516215763875225, "phrase": "elementary_web_services"}, {"score": 0.0036648265911110164, "phrase": "service_providers"}, {"score": 0.0036363418376496484, "phrase": "application_developers"}, {"score": 0.0035940277928341265, "phrase": "value-added_services"}, {"score": 0.0034162643819889054, "phrase": "current_distribution_process"}, {"score": 0.0033502512757488433, "phrase": "general_analysis"}, {"score": 0.0030387767523076528, "phrase": "emerging_technologies"}, {"score": 0.002956858061485755, "phrase": "ranking_candidate_services"}, {"score": 0.0029110398328258194, "phrase": "optimization_strategies"}, {"score": 0.002756180088265064, "phrase": "non-functional_service_properties"}, {"score": 0.0025095811903520274, "phrase": "object-orientated_concept"}, {"score": 0.002422890839801611, "phrase": "design_object"}, {"score": 0.0022760856906838814, "phrase": "systemic_but_complete_composition_process"}, {"score": 0.0022320551224679526, "phrase": "web_services_composition"}, {"score": 0.002197443382039439, "phrase": "great_promise"}, {"score": 0.002171836484200008, "phrase": "emerging_demand"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Web services", " service composition", " design with object", " functional and non-functional properties", " Web services description language (WSDL)"], "paper_abstract": "Web services are being adopted, more and more, as a viable means of accessing Web-based applications. With a Web-native XML based solution, Web services can, thus, tackle the problem of heterogeneous sources and make them inter-operable. At present, there is a trend towards deploying business processes as composite Web services, known as Web services compositions. Web services compositions are synthesized by researchers from elementary web services, offering the opportunity for service providers and application developers to create value-added services, through Web services composition. However, a problem exists in the current distribution process of Web services compositions: the general analysis and selection of services can be overly complex and un-systemic. There is a need to manage composite Web services, based on these emerging technologies, but the research related to ranking candidate services and selection of optimization strategies is sparse. Nothing has yet been published that considers the constraints of non-functional service properties. In this paper, a design with object (DwO) approach is proposed. This has the advantage of being an object-orientated concept, which characterizes (i) changing the design object without directly changing the Web services themselves, and (ii) information hiding. A systemic but complete composition process is also proposed for Web services composition, which shows great promise in the emerging demand for composite Web services. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "The design with object (DwO) approach to Web services composition", "paper_id": "WOS:000243068500007"}