{"auto_keywords": [{"score": 0.03902269339461907, "phrase": "ga"}, {"score": 0.014386932587473736, "phrase": "single-hidden_layer"}, {"score": 0.014086698424421076, "phrase": "fnn"}, {"score": 0.00481495049065317, "phrase": "single_hidden_layer_feedforward_neural_networks"}, {"score": 0.004536244367689415, "phrase": "universal_approximation_theorem"}, {"score": 0.0041835168653521, "phrase": "corresponding_desired_outputs"}, {"score": 0.004060566667226606, "phrase": "genetic_algorithms"}, {"score": 0.003941215575554871, "phrase": "global_optimal_solution"}, {"score": 0.003891140864902669, "phrase": "fnn_structure"}, {"score": 0.0036345874263722542, "phrase": "fnn."}, {"score": 0.003512702405367876, "phrase": "new_optimization_algorithm"}, {"score": 0.0033517342967390065, "phrase": "convex_combination_algorithm"}, {"score": 0.003267054216881229, "phrase": "hidden_layer"}, {"score": 0.0031440159350875057, "phrase": "continuum_idea"}, {"score": 0.0030908254851076005, "phrase": "classic_mutation"}, {"score": 0.0030645676308053444, "phrase": "crossover_strategies"}, {"score": 0.0029871209444889716, "phrase": "proposed_method"}, {"score": 0.002850168497994985, "phrase": "preprocessing_works"}, {"score": 0.0027311076665349657, "phrase": "binary_codes"}, {"score": 0.002572709810193776, "phrase": "new_error_function"}, {"score": 0.0024547103576350233, "phrase": "optimal_choice"}, {"score": 0.0024234763342790852, "phrase": "connection_weights"}, {"score": 0.0023824468367751365, "phrase": "nonlinear_optimization_problem"}, {"score": 0.0022634699331607615, "phrase": "proposed_algorithm"}, {"score": 0.0022251433045184454, "phrase": "good_exploration_and_exploitation_capabilities"}, {"score": 0.002178144355363467, "phrase": "optimal_weight"}, {"score": 0.002159623311924437, "phrase": "single_hidden_layer_fnns"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Feedforward neural networks", " Training of neural networks", " Evolutionary algorithm"], "paper_abstract": "Feedforward neural networks are the most commonly used function approximation techniques in neural networks. By the universal approximation theorem, it is clear that a single-hidden layer feedforward neural network (FNN) is sufficient to approximate the corresponding desired outputs arbitrarily close. Some researchers use genetic algorithms (GAs) to explore the global optimal solution of the FNN structure. However, it is rather time consuming to use GA for the training of FNN. In this paper, we propose a new optimization algorithm for a single-hidden layer FNN. The method is based on the convex combination algorithm for massaging information in the hidden layer. In fact, this technique explores a continuum idea which combines the classic mutation and crossover strategies in GA together. The proposed method has the advantage over GA which requires a lot of preprocessing works in breaking down the data into a sequence of binary codes before learning or mutation can apply. Also, we set up a new error function to measure the performance of the FNN and obtain the optimal choice of the connection weights and thus the nonlinear optimization problem can be solved directly. Several computational experiments are used to illustrate the proposed algorithm, which has good exploration and exploitation capabilities in search of the optimal weight for single hidden layer FNNs. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A new optimization algorithm for single hidden layer feedforward neural networks", "paper_id": "WOS:000319205200055"}