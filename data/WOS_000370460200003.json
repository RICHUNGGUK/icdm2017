{"auto_keywords": [{"score": 0.04226255901245676, "phrase": "amisurvey"}, {"score": 0.03252337977804758, "phrase": "casa_subroutines"}, {"score": 0.004814951205791168, "phrase": "chimenea"}, {"score": 0.0047321804183303486, "phrase": "automated"}, {"score": 0.004683073921949839, "phrase": "multi-epoch_radio-synthesis_data"}, {"score": 0.004650672477559975, "phrase": "casa."}, {"score": 0.004445419749485783, "phrase": "pressing_need"}, {"score": 0.00436890075128947, "phrase": "transient_sky"}, {"score": 0.004323620278409076, "phrase": "fully_robotic_fashion"}, {"score": 0.004278807087784626, "phrase": "current_generation"}, {"score": 0.004249188865832993, "phrase": "radio_telescopes"}, {"score": 0.004219774794569897, "phrase": "effective_exploitation"}, {"score": 0.004147123642915346, "phrase": "largely_automated_data-reduction_process"}, {"score": 0.004061584718427419, "phrase": "end-to-end_automated_reduction_pipeline"}, {"score": 0.00395026016389782, "phrase": "imaging_data"}, {"score": 0.003749654338704576, "phrase": "open-source_release"}, {"score": 0.003571591012750155, "phrase": "telescope-agnostic_algorithm"}, {"score": 0.0035100601949451028, "phrase": "pre_calibrated_multi-epoch_radio-synthesis_data"}, {"score": 0.003413800638453572, "phrase": "transient_surveys"}, {"score": 0.0032971676471625646, "phrase": "standard_imaging_pipelines"}, {"score": 0.0032629585038738856, "phrase": "iterative_rms-estimation"}, {"score": 0.003240349178289032, "phrase": "automated_source-detection"}, {"score": 0.0030437652050982643, "phrase": "underlying_image-synthesis_operations"}, {"score": 0.0030017207229983385, "phrase": "lower_level"}, {"score": 0.0028000270988465486, "phrase": "mature_radio-astronomy_software_packages"}, {"score": 0.0027711083998943706, "phrase": "python"}, {"score": 0.0027137301650680175, "phrase": "automated_imaging"}, {"score": 0.002685558057339722, "phrase": "drive-casa_interface"}, {"score": 0.0025490131630603757, "phrase": "generic_python_process"}, {"score": 0.0024704333220467393, "phrase": "wider_technical_interest"}, {"score": 0.0023859534478427313, "phrase": "python_library_pexpect"}, {"score": 0.0023611760395203106, "phrase": "terminal_interaction"}, {"score": 0.002336655334451464, "phrase": "external_process"}, {"score": 0.0022883734727569298, "phrase": "rapid_development"}, {"score": 0.002264607102799332, "phrase": "python_interface"}, {"score": 0.002225542510652775, "phrase": "externally-maintained_pipeline"}, {"score": 0.002202427244004817, "phrase": "command-line_input"}, {"score": 0.002149418970824546, "phrase": "original_code"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Methods: data analysis", " Techniques: interferometric"], "paper_abstract": "In preparing the way for the Square Kilometre Array and its pathfinders, there is a pressing need to begin probing the transient sky in a fully robotic fashion using the current generation of radio telescopes. Effective exploitation of such surveys requires a largely automated data-reduction process. This paper introduces an end-to-end automated reduction pipeline, AMIsurvey, used for calibrating and imaging data from the Arcminute Microkelvin Imager Large Array. AMIsurvey makes use of several component libraries which have been packaged separately for open-source release. The most scientifically significant of these is chimenea, which implements a telescope-agnostic algorithm for automated imaging of pre calibrated multi-epoch radio-synthesis data, of the sort typically acquired for transient surveys or followup. The algorithm aims to improve upon standard imaging pipelines by utilizing iterative RMS-estimation and automated source-detection to avoid so called 'Clean-bias', and makes use of CASA subroutines for the underlying image-synthesis operations. At a lower level, AMIsurvey relies upon two libraries, drive-ami and drive-casa, built to allow use of mature radio-astronomy software packages from within Python scripts. While targeted at automated imaging, the drive-casa interface can also be used to automate interaction with any of the CASA subroutines from a generic Python process. Additionally, these packages may be of wider technical interest beyond radio-astronomy, since they demonstrate use of the Python library pexpect to emulate terminal interaction with an external process. This approach allows for rapid development of a Python interface to any legacy or externally-maintained pipeline which accepts command-line input, without requiring alterations to the original code. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Chimenea and other tools: Automated imaging of multi-epoch radio-synthesis data with CASA", "paper_id": "WOS:000370460200003"}