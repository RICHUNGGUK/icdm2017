{"auto_keywords": [{"score": 0.04965786117733892, "phrase": "multiple_heterogeneous_receivers"}, {"score": 0.04505511989360206, "phrase": "power_consumption"}, {"score": 0.027776461950332926, "phrase": "single_receiver_scenario"}, {"score": 0.027066156021393634, "phrase": "multiple_receiver_scenario"}, {"score": 0.02580952549503671, "phrase": "optimal_solution_value"}, {"score": 0.00481495049065317, "phrase": "motion_compensation"}, {"score": 0.00470975295439431, "phrase": "mobile_multimedia_systems"}, {"score": 0.004627244470096107, "phrase": "battery_technology"}, {"score": 0.00436890075128947, "phrase": "processing_power"}, {"score": 0.0042171108629745655, "phrase": "mobile_systems"}, {"score": 0.004161553532799662, "phrase": "computational_complexity"}, {"score": 0.004124920849728372, "phrase": "video_codecs"}, {"score": 0.0040347380310668994, "phrase": "cpu_operations"}, {"score": 0.003999217176949845, "phrase": "memory_accesses"}, {"score": 0.003894512634265439, "phrase": "main_factors"}, {"score": 0.003660700128133065, "phrase": "near-optimal_video_quality"}, {"score": 0.0036124465071873998, "phrase": "user-defined_bounds"}, {"score": 0.0033805214040814233, "phrase": "motion_compensation_process"}, {"score": 0.003335948601271999, "phrase": "motion_vector_prediction"}, {"score": 0.0032199307816384577, "phrase": "single_largest_component"}, {"score": 0.003191560305761507, "phrase": "computation-based_power_consumption"}, {"score": 0.003053402354907241, "phrase": "single_receiver"}, {"score": 0.003013129637451091, "phrase": "rate-distortion_optimization_problem"}, {"score": 0.0029471818883482688, "phrase": "efficient_decoder-complexity-aware_video_encoding_method"}, {"score": 0.0027456676902333304, "phrase": "different_complexity_requirement"}, {"score": 0.0022101055924375725, "phrase": "actual_power_measurements"}, {"score": 0.0021809311689473493, "phrase": "power_saving"}, {"score": 0.0021049977753042253, "phrase": "complexity_threshold"}], "paper_keywords": ["Algorithms", " Experimentation", " Measurement", " Decoder complexity modeling", " H.264/AVC decoding", " H.264/SVC decoding", " motion compensation"], "paper_abstract": "For mobile multimedia systems, advances in battery technology have been much slower than those in memory, graphics, and processing power, making power consumption a major concern in mobile systems. The computational complexity of video codecs, which consists of CPU operations and memory accesses, is one of the main factors affecting power consumption. In this article, we propose a method that achieves near-optimal video quality while respecting user-defined bounds on the complexity needed to decode a video. We specifically focus on the motion compensation process, including motion vector prediction and interpolation, because it is the single largest component of computation-based power consumption. We start by formulating a scenario with a single receiver as a rate-distortion optimization problem and we develop an efficient decoder-complexity-aware video encoding method to solve it. Then we extend our approach to handle multiple heterogeneous receivers, each with a different complexity requirement. We test our method experimentally using the H.264 standard for the single receiver scenario and the H.264 SVC extension for the multiple receiver scenario. Our experimental results show that our method can achieve up to 97% of the optimal solution value in the single receiver scenario, and an average of 97% of the optimal solution value in the multiple receiver scenario. Furthermore, our tests with actual power measurements show a power saving of up to 23% at the decoder when the complexity threshold is halved in the encoder.", "paper_title": "Decoder-Complexity-Aware Encoding of Motion Compensation for Multiple Heterogeneous Receivers", "paper_id": "WOS:000350567000006"}