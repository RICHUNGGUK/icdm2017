{"auto_keywords": [{"score": 0.02811459610865118, "phrase": "odbp"}, {"score": 0.00481495049065317, "phrase": "demand_dynamic_branch_prediction"}, {"score": 0.004403480614319231, "phrase": "good_single_thread_performance"}, {"score": 0.004258372598568333, "phrase": "branch_prediction_unit_tables"}, {"score": 0.004027031316965272, "phrase": "instruction_cache"}, {"score": 0.0038725824361608243, "phrase": "fetch_group"}, {"score": 0.003829548069657859, "phrase": "branch_instructions"}, {"score": 0.0037658881407605445, "phrase": "integer_applications"}, {"score": 0.003641713874009232, "phrase": "bpu_lookups"}, {"score": 0.003561205990687285, "phrase": "non-branch_operations"}, {"score": 0.0034824716857663114, "phrase": "remaining_lookups"}, {"score": 0.003367611042980526, "phrase": "highly_biased_branches"}, {"score": 0.0032383707002544755, "phrase": "high_accuracy"}, {"score": 0.003166751241099304, "phrase": "on-demand_branch_prediction"}, {"score": 0.00306227185008558, "phrase": "novel_technique"}, {"score": 0.0027535633837592597, "phrase": "unnecessary_bpu_lookups"}, {"score": 0.002603758927691463, "phrase": "static_and_dynamic_branch_prediction"}, {"score": 0.0021406417439887907, "phrase": "large_bpu's"}], "paper_keywords": ["Energy efficiency", " static and dynamic branch prediction hybrid", " ahead prediction", " energy-delay product optimization"], "paper_abstract": "In out-of-order (OoO) processors, speculative execution with high branch prediction accuracy is employed to achieve good single thread performance. In these processors the branch prediction unit tables (BPU) are accessed in parallel with the instruction cache before it is known whether a fetch group contains branch instructions. For integer applications, we find 85 percent of BPU lookups are done for non-branch operations and of the remaining lookups, 42 percent are done for highly biased branches that can be predicted statically with high accuracy. We evaluate on-demand branch prediction (ODBP), a novel technique that uses compiler generated hints to identify those instructions that can be more accurately predicted statically to eliminate unnecessary BPU lookups. We evaluate an implementation of ODBP that combines static and dynamic branch prediction. For a four wide superscalar processor, ODBP delivers as much as 9 percent improvement in average energy-delay (ED) product, 7 percent core average energy saving, and 3 percent speedup. ODBP also enables the use of large BPU's for a given power budget.", "paper_title": "On-Demand Dynamic Branch Prediction", "paper_id": "WOS:000356718700013"}