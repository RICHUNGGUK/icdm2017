{"auto_keywords": [{"score": 0.039317403151617226, "phrase": "mobile_transactions"}, {"score": 0.03900504628505647, "phrase": "local_pre-validation"}, {"score": 0.028296010032106494, "phrase": "mobile_read-only_transactions"}, {"score": 0.00481495049065317, "phrase": "mobile_distributed_real-time_database_systems"}, {"score": 0.0046970764288494764, "phrase": "distributed_multiversion_optimistic_concurrency"}, {"score": 0.0046392209103157936, "phrase": "two-phase_local_validation"}, {"score": 0.0045443671106012405, "phrase": "mobile_distributed_real-time_transactions"}, {"score": 0.004378469469879815, "phrase": "transaction_validation"}, {"score": 0.0041666157975446564, "phrase": "local_validation"}, {"score": 0.0036202043425301042, "phrase": "backward_validation_mechanism"}, {"score": 0.0035755653799043, "phrase": "local_pre-validation_process"}, {"score": 0.003502382624110703, "phrase": "committed_transactions"}, {"score": 0.0034165310204389682, "phrase": "last_broadcast_cycle"}, {"score": 0.0031193028729331667, "phrase": "local_final_validation"}, {"score": 0.0030808211830129304, "phrase": "global_validation"}, {"score": 0.0030680994147125364, "phrase": "distributed_update_transactions"}, {"score": 0.0029928611380840757, "phrase": "distributed_serializability"}, {"score": 0.0028596699752849682, "phrase": "mobile_read-only_and_mobile_update_transactions"}, {"score": 0.0027665315772006575, "phrase": "multiversion_dynamic_adjustment"}, {"score": 0.0027437235598539904, "phrase": "serialization_order"}, {"score": 0.002709862658377861, "phrase": "unnecessary_restarts"}, {"score": 0.00240328454980006, "phrase": "broadcast_channel"}, {"score": 0.002286781334850213, "phrase": "new_protocol"}, {"score": 0.002258546887303777, "phrase": "better_performance"}, {"score": 0.0022214412809055013, "phrase": "miss_rate"}, {"score": 0.002203117204010397, "phrase": "restart_rate"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Mobile distributed real-time database systems", " Multiversion optimistic concurrency control", " Multiversion dynamic adjustment", " Pre-validation", " Multiversion data broadcast"], "paper_abstract": "This paper presents DMVOCC-2PLV (Distributed Multiversion Optimistic Concurrency Control with Two-Phase Local Validation) protocol for processing mobile distributed real-time transactions in mobile broadcast environments. In DMVOCC-2PLV protocol, transaction validation is performed at two levels: local validation and global validation. Local validation of transactions is performed in two phases: local pre-validation and local final validation. At the MHs (Mobile Hosts), all mobile transactions perform local pre-validation of transactions by using a backward validation mechanism. The local pre-validation process is carried out against committed transactions at the server in the last broadcast cycle. Such an early data conflict detection feature can save processing and communication resources. Transactions that survive in local pre-validation must be submitted to the server for local final validation. In global validation distributed update transactions have to check to ensure distributed serializability in all participants. The protocol can eliminate conflicts between mobile read-only and mobile update transactions, and resolve data conflicts flexibly using multiversion dynamic adjustment of serialization order to avoid unnecessary restarts of transactions. Mobile read-only transactions can be committed with no-blocking, and respond time of mobile read-only transactions is greatly reduced. The tolerance of mobile transactions of disconnections from the broadcast channel is increased. The results of simulation experiment show that the new protocol proposed offers better performance in terms of miss rate, restart rate, commit rate and throughput. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Concurrency control in mobile distributed real-time database systems", "paper_id": "WOS:000273937500006"}