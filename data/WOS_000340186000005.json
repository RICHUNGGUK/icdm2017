{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "web_application"}, {"score": 0.00474946741204285, "phrase": "multi-core_server"}, {"score": 0.004642292792558686, "phrase": "multi-core_technology"}, {"score": 0.004475798524102238, "phrase": "web_servers"}, {"score": 0.004315249628884236, "phrase": "detailed_performance_study"}, {"score": 0.004256533389293113, "phrase": "web_server_application"}, {"score": 0.004179480763003705, "phrase": "modern_eight-core_server"}, {"score": 0.004066498558415824, "phrase": "default_web_server_configurations"}, {"score": 0.0040111533608228195, "phrase": "poor_scalability"}, {"score": 0.003974673997871831, "phrase": "increasing_core_counts"}, {"score": 0.003561865840737996, "phrase": "scaling_behaviour"}, {"score": 0.0032955848190195343, "phrase": "static_and_dynamic_requests"}, {"score": 0.00325069754015951, "phrase": "static_requests"}, {"score": 0.0029666322924554274, "phrase": "dynamic_requests"}, {"score": 0.0028082176224611542, "phrase": "previous_work"}, {"score": 0.002782647772219627, "phrase": "web_server_scalability_improvement_policies"}, {"score": 0.0025047659706737215, "phrase": "workload-specific_web_server_configuration_strategies"}, {"score": 0.0023173287402646577, "phrase": "significant_queuing_delays"}, {"score": 0.0021735249249471614, "phrase": "'acceptable'_response_times"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["experimental performance characterization", " Web server scalability", " multi-core architecture"], "paper_abstract": "The advent of multi-core technology motivates new studies to understand how efficiently Web servers utilize such hardware. This paper presents a detailed performance study of a Web server application deployed on a modern eight-core server. Our study shows that default Web server configurations result in poor scalability with increasing core counts. We study two different types of workloads, namely, a workload with intense TCP/IP related OS activity and the SPECweb2009 Support workload with more application-level processing. We observe that the scaling behaviour is markedly different for these workloads, mainly because of the difference in the performance of static and dynamic requests. While static requests perform poorly when moving from using one socket to both sockets in the system, the converse is true for dynamic requests. We show that, contrary to what was suggested by previous work, Web server scalability improvement policies need to be adapted based on the type of workload experienced by the server. The results of our experiments reveal that with workload-specific Web server configuration strategies, a multi-core server can be utilized up to 80% while still serving requests without significant queuing delays; utilizations beyond 90% are also possible, while still serving requests with 'acceptable' response times. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Characterizing the scalability of a Web application on a multi-core server", "paper_id": "WOS:000340186000005"}