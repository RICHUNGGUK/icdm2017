{"auto_keywords": [{"score": 0.040681754293612836, "phrase": "multicore_processors"}, {"score": 0.00481495049065317, "phrase": "current_trend"}, {"score": 0.004718897469501381, "phrase": "multithreading_processors"}, {"score": 0.004442032546224076, "phrase": "thread_level_parallelism"}, {"score": 0.00439749684030755, "phrase": "tlp"}, {"score": 0.004202472962684885, "phrase": "traditional_threading_components"}, {"score": 0.004118587636081584, "phrase": "pthread"}, {"score": 0.004036369952624852, "phrase": "commercially_available_processors"}, {"score": 0.003975781274672803, "phrase": "simultaneous_multithreading"}, {"score": 0.003935974843789514, "phrase": "smt"}, {"score": 0.003704797078215222, "phrase": "conventional_sequential_execution_model"}, {"score": 0.00363080961099728, "phrase": "multiple_threads"}, {"score": 0.0033156708990372047, "phrase": "programming_techniques"}, {"score": 0.003073988343893906, "phrase": "multithreading_processor"}, {"score": 0.002982307488519847, "phrase": "tlp."}, {"score": 0.002922705896608178, "phrase": "fuce"}, {"score": 0.0028355237433457313, "phrase": "continuation-based_multithreading"}, {"score": 0.002563219920877287, "phrase": "thread_execution"}, {"score": 0.0023762535034673017, "phrase": "continuation-based_multithread_execution_model"}, {"score": 0.0022937210378944457, "phrase": "multithreaded_programming_techniques"}, {"score": 0.0022592313766072658, "phrase": "continuation-based_multithreading_language_system"}, {"score": 0.0022478501955483024, "phrase": "cml._last"}, {"score": 0.0021807544600219216, "phrase": "fuce_processor"}, {"score": 0.0021049977753042253, "phrase": "clock-level_software_simulation"}], "paper_keywords": ["Multithreading", " Parallel processing", " Thread level parallelism", " Multithreaded programming", " Processor architecture"], "paper_abstract": "Current trend of research on multithreading processors is toward the chip multithreading (CMT), which exploits thread level parallelism (TLP) and improves performance of softwares built on traditional threading components, e.g., Pthread. There exist commercially available processors that support simultaneous multithreading (SMT) on multicore processors. But they are basically based on the conventional sequential execution model, and execute multiple threads in parallel under the control of OS that handles interruptions. Moreover, there exist few languages or programming techniques to utilize the multicore processors effectively. We are taking another approach to develop a multithreading processor, which is dedicated to TLP. Our processor, named Fuce, is based on the continuation-based multithreading. A thread is defined as a block of sequentially ordered instructions which are executed without interruption. Every thread execution is triggered only by the event called continuation. This paper first introduces the continuation-based multithread execution model and its processor architecture then gives multithreaded programming techniques and the continuation-based multithreading language system CML. Last, the performance of the Fuce processor is evaluated by means of the clock-level software simulation.", "paper_title": "A continuation-based noninterruptible multithreading processor architecture", "paper_id": "WOS:000262990200006"}