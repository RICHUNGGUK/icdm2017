{"auto_keywords": [{"score": 0.036363621481158265, "phrase": "nearest_rounding_approach"}, {"score": 0.035762438880225844, "phrase": "large_timing_violations"}, {"score": 0.00481495049065317, "phrase": "gate_sizing"}, {"score": 0.004760017604908536, "phrase": "cell-library-based_designs"}, {"score": 0.0045464538515249085, "phrase": "market_pressure"}, {"score": 0.0044688500725247726, "phrase": "semiconductor_product_cycles"}, {"score": 0.0042928648367867835, "phrase": "library-based_methodologies"}, {"score": 0.004030157055463817, "phrase": "discrete_gate"}, {"score": 0.003938650032712796, "phrase": "significantly_less_attention"}, {"score": 0.0037617986040878342, "phrase": "cell_sizes"}, {"score": 0.003130077012135034, "phrase": "effective_algorithm"}, {"score": 0.003058944053868522, "phrase": "discrete_gate-sizing_problem"}, {"score": 0.002806256131739047, "phrase": "continuous-solution-guided_dynamic-programming-like_approach"}, {"score": 0.0026494723416072316, "phrase": "locality-sensitive-hashing-based_solution_pruning"}, {"score": 0.002268441347979241, "phrase": "well-known_coudert's_approach"}, {"score": 0.002166421738415464, "phrase": "area_cost"}, {"score": 0.0021049977753042253, "phrase": "timing_constraint"}], "paper_keywords": ["Discretization", " dynamic programming (DP)", " gate sizing", " pruning", " sparse cell library"], "paper_abstract": "With increasing time-to-market pressure and shortening semiconductor product cycles, more and more chips are being designed with library-based methodologies. In spite of this shift, the problem of discrete gate sizing has received significantly less attention than its continuous counterpart. On the other hand, cell sizes of many realistic libraries are sparse, for example, geometrically spaced, which makes the nearest rounding approach inapplicable as large timing violations may be introduced. Therefore, it is highly desirable to design an effective algorithm to handle this discrete gate-sizing problem. Such an algorithm is proposed in this paper. The algorithm is a continuous-solution-guided dynamic-programming-like approach. A set of novel techniques, such as locality-sensitive-hashing-based solution pruning, is also proposed to accelerate the algorithm. Our experimental results demonstrate that 1) the nearest rounding approach often leads to large timing violations and 2) compared to the well-known Coudert's approach, the new algorithm saves up to 21% in area cost while still satisfying the timing constraint.", "paper_title": "Gate Sizing for Cell-Library-Based Designs", "paper_id": "WOS:000266332200004"}