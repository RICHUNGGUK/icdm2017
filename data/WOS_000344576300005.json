{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "alternative_approaches"}, {"score": 0.03968026705759814, "phrase": "cycle_graph"}, {"score": 0.0047292449487169345, "phrase": "transposition_distance"}, {"score": 0.004401342842183475, "phrase": "minimum_number"}, {"score": 0.004171210542333754, "phrase": "np"}, {"score": 0.0040777192615062815, "phrase": "best_approximation_algorithms"}, {"score": 0.003933736547198066, "phrase": "standard_tool"}, {"score": 0.0033160345607565565, "phrase": "breakpoint_diagrams"}, {"score": 0.0032277611129050234, "phrase": "permutation_codes"}, {"score": 0.0031277316566463978, "phrase": "longest_increasing_subsequences"}, {"score": 0.0030036501770192865, "phrase": "previous_experimental_data"}, {"score": 0.002833035775182696, "phrase": "missing_gap"}, {"score": 0.00249767641333441, "phrase": "minor_adaptation"}, {"score": 0.0023451553255837317, "phrase": "experimental_data"}, {"score": 0.00216263228969761, "phrase": "best_known_algorithms"}, {"score": 0.0021049977753042253, "phrase": "large_permutations"}], "paper_keywords": ["genome rearrangement", " sorting by transpositions", " approximation algorithms"], "paper_abstract": "We study the problem of sorting by transpositions, which consists in computing the minimum number of transpositions required to sort a permutation. This problem is NP-hard and the best approximation algorithms for solving it are based on a standard tool for attacking problems of this kind, the cycle graph. In an attempt to bypass it, some researches posed alternative approaches. In this paper, we address three algorithms yielded by such approaches: a 2.25-approximation algorithm based on breakpoint diagrams, a 3-approximation algorithm based on permutation codes, and a heuristic based on longest increasing subsequences. Regarding the 2.25-approximation algorithm, we show that previous experimental data on its approximation ratio are incorrect. Regarding the 3-approximation algorithm, we close a missing gap on the proof of its approximation ratio and we show a way to run it in O(n log n) time. Regarding the heuristic, we propose a minor adaptation that allow us to prove an approximation bound of 3. We present experimental data obtained by running these algorithms for all permutations with up to 13 elements and by running these algorithms and the best known algorithms based on the cycle graph for large permutations. The data indicate that the 2.25-approximation algorithm is the best of the algorithms based on alternative approaches and that it is the only one comparable to the algorithms based on the cycle graph.", "paper_title": "On Alternative Approaches for Approximating the Transposition Distance", "paper_id": "WOS:000344576300005"}