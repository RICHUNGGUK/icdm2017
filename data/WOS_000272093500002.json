{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "backward-oracle-matching_algorithm."}, {"score": 0.004301834610818624, "phrase": "bom_string"}, {"score": 0.0037480753312398754, "phrase": "original_algorithm"}, {"score": 0.0035204268675160257, "phrase": "bit-parallel_versions"}, {"score": 0.003306559295382181, "phrase": "efficient_variant"}, {"score": 0.0031845067058084583, "phrase": "bndm_algorithm"}, {"score": 0.002953711377604328, "phrase": "newly_presented_algorithms"}, {"score": 0.00247799842715255, "phrase": "new_proposed_variants"}, {"score": 0.0021049977753042253, "phrase": "large_alphabets"}], "paper_keywords": ["String matching", " experimental algorithms", " text processing", " automaton"], "paper_abstract": "In this article we present two efficient variants of the BOM string matching algorithm which are more efficient and flexible than the original algorithm. We also present bit-parallel versions of them obtaining an efficient variant of the BNDM algorithm. Then we compare the newly presented algorithms with some of the most recent and effective string matching algorithms. It turns out that the new proposed variants are very flexible and achieve very good results, especially in the case of large alphabets.", "paper_title": "EFFICIENT VARIANTS OF THE BACKWARD-ORACLE-MATCHING ALGORITHM", "paper_id": "WOS:000272093500002"}