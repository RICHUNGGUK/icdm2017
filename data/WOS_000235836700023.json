{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "numerical_abstract_domains"}, {"score": 0.00471071771178029, "phrase": "lightweight_and_generic_symbolic_methods"}, {"score": 0.004558564684763264, "phrase": "numerical_static_analyses"}, {"score": 0.004484332781147261, "phrase": "abstract_interpretation"}, {"score": 0.00441130431691048, "phrase": "main_idea"}, {"score": 0.004315771670213371, "phrase": "numerical_expressions"}, {"score": 0.004176321608449849, "phrase": "abstract_transfer_functions"}, {"score": 0.004108288481894523, "phrase": "important_novelty"}, {"score": 0.003661987063211563, "phrase": "first_method"}, {"score": 0.003485824905231454, "phrase": "arbitrary_expressions"}, {"score": 0.0034478392374444177, "phrase": "affine_forms"}, {"score": 0.0034102660898135155, "phrase": "interval_coefficients"}, {"score": 0.003299977511820374, "phrase": "second_method"}, {"score": 0.0031069334778456633, "phrase": "simplification_feature"}, {"score": 0.0030064251340251196, "phrase": "assigned_expressions"}, {"score": 0.0029573932605287947, "phrase": "symbolic_way"}, {"score": 0.0028150302583265655, "phrase": "relationality_level"}, {"score": 0.002679501909303057, "phrase": "program_transformations"}, {"score": 0.002522662955545598, "phrase": "classical_interval"}, {"score": 0.00221153232497724, "phrase": "run-time_errors"}, {"score": 0.0021874023741762496, "phrase": "embedded_critical_avionics_software"}, {"score": 0.002128220632893247, "phrase": "experimental_proof"}], "paper_keywords": [""], "paper_abstract": "We present lightweight and generic symbolic methods to improve the precision of numerical static analyses based on Abstract Interpretation. The main idea is to simplify numerical expressions before they are fed to abstract transfer functions. An important novelty is that these simplifications are performed on-the-fly, using information gathered dynamically by the analyzer. A first method, called \"linearization,\" allows abstracting arbitrary expressions into affine forms with interval coefficients while simplifying them. A second method, called \"symbolic constant propagation,\" enhances the simplification feature of the linearization by propagating assigned expressions in a symbolic way. Combined together, these methods increase the relationality level of numerical abstract domains and make them more robust against program transformations. We show how they can be integrated within the classical interval, octagon and polyhedron domains. These methods have been incorporated within the ASTP(REE) static analyzer that checks for the absence of run-time errors in embedded critical avionics software. We present an experimental proof of their usefullness.", "paper_title": "Symbolic methods to enhance the precision of numerical abstract domains", "paper_id": "WOS:000235836700023"}