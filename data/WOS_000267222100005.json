{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "flow_game"}, {"score": 0.004655924035639928, "phrase": "algorithmic_issues"}, {"score": 0.004266501496765747, "phrase": "cooperative_game"}, {"score": 0.0038833278847237858, "phrase": "player_set"}, {"score": 0.003679969180334367, "phrase": "coalition_s_subset"}, {"score": 0.00344062888674746, "phrase": "maximum_flow"}, {"score": 0.003216804708106142, "phrase": "s._we"}, {"score": 0.0029873281676201565, "phrase": "simple_network"}, {"score": 0.002628747284714371, "phrase": "polynomial_time"}, {"score": 0.0025761937402886954, "phrase": "linear_program_duality_approach"}, {"score": 0.002507748938616919, "phrase": "twenty-three_years_old_conjecture"}, {"score": 0.0024742224551067243, "phrase": "kalai"}, {"score": 0.002441118140830714, "phrase": "zemel"}, {"score": 0.00219209476877684, "phrase": "np"}, {"score": 0.0021335427588412056, "phrase": "flow_games"}, {"score": 0.0021049977753042253, "phrase": "general_capacity"}], "paper_keywords": ["Flow game", " Nucleolus", " Linear program duality", " Efficient algorithm", " NP-hard"], "paper_abstract": "We study the algorithmic issues of finding the nucleolus of a flow game. The flow game is a cooperative game defined on a network D = (V, E; omega). The player set is E and the value of a coalition S subset of E is defined as the value of a maximum flow from source to sink in the subnetwork induced by S. We show that the nucleolus of the flow game defined on a simple network (omega(e) = 1 for each e is an element of E) can be computed in polynomial time by a linear program duality approach, settling a twenty-three years old conjecture by Kalai and Zemel. In contrast, we prove that both the computation and the recognition of the nucleolus are NP-hard for flow games with general capacity.", "paper_title": "Finding nucleolus of flow game", "paper_id": "WOS:000267222100005"}