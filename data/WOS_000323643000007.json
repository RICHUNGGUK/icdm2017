{"auto_keywords": [{"score": 0.04943159058562835, "phrase": "reference_documentation"}, {"score": 0.00481495049065317, "phrase": "api_reference_documentation"}, {"score": 0.004685575787741084, "phrase": "important_part"}, {"score": 0.00460125407969429, "phrase": "application_programming_interfaces"}, {"score": 0.004437142136449791, "phrase": "api"}, {"score": 0.004278807087784626, "phrase": "api_syntax"}, {"score": 0.004015182362035361, "phrase": "relevant_information"}, {"score": 0.0033326252993345685, "phrase": "java_sdk"}, {"score": 0.0031271133933467575, "phrase": "knowledge_types"}, {"score": 0.0030847461428168614, "phrase": "grounded_methods"}, {"score": 0.003056819704624705, "phrase": "independent_empirical_validation"}, {"score": 0.0030291453183733897, "phrase": "seventeen_trained_coders"}, {"score": 0.0028944757265206332, "phrase": "randomly_sampled_documentation_units"}, {"score": 0.002753224894944965, "phrase": "comprehensive_perspective"}, {"score": 0.00266693888510356, "phrase": "api_documentation"}, {"score": 0.0021049977753042253, "phrase": "low-value_content"}], "paper_keywords": ["API documentation", " software documentation", " empirical study", " content analysis", " grounded method", " data mining", " pattern mining", " Java", " .NET"], "paper_abstract": "Reading reference documentation is an important part of programming with application programming interfaces (APIs). Reference documentation complements the API by providing information not obvious from the API syntax. To improve the quality of reference documentation and the efficiency with which the relevant information it contains can be accessed, we must first understand its content. We report on a study of the nature and organization of knowledge contained in the reference documentation of the hundreds of APIs provided as a part of two major technology platforms: Java SDK 6 and .NET 4.0. Our study involved the development of a taxonomy of knowledge types based on grounded methods and independent empirical validation. Seventeen trained coders used the taxonomy to rate a total of 5,574 randomly sampled documentation units to assess the knowledge they contain. Our results provide a comprehensive perspective on the patterns of knowledge in API documentation: observations about the types of knowledge it contains and how this knowledge is distributed throughout the documentation. The taxonomy and patterns of knowledge we present in this paper can be used to help practitioners evaluate the content of their API documentation, better organize their documentation, and limit the amount of low-value content. They also provide a vocabulary that can help structure and facilitate discussions about the content of APIs.", "paper_title": "Patterns of Knowledge in API Reference Documentation", "paper_id": "WOS:000323643000007"}