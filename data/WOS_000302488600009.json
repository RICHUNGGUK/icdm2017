{"auto_keywords": [{"score": 0.04931481962834528, "phrase": "stepping_stones"}, {"score": 0.04381652051820685, "phrase": "traffic_timing"}, {"score": 0.040551114406428106, "phrase": "packet_count"}, {"score": 0.00481495049065317, "phrase": "interactive_traffic"}, {"score": 0.004776360477283921, "phrase": "interactive_attack_traffic"}, {"score": 0.0045879792359519375, "phrase": "packet_headers"}, {"score": 0.004154332348800334, "phrase": "side_channel"}, {"score": 0.003781772207256374, "phrase": "stepping_stone"}, {"score": 0.0035078427258024613, "phrase": "incidental_repacketization"}, {"score": 0.0034610501297253895, "phrase": "network_interfaces"}, {"score": 0.0034057193921138078, "phrase": "new_method"}, {"score": 0.0032449610741097992, "phrase": "flow_splitting"}, {"score": 0.0031167895790050405, "phrase": "invariant_characteristic"}, {"score": 0.0028986672783671147, "phrase": "short_fixed-length_intervals"}, {"score": 0.0028142286985235977, "phrase": "specific_intervals"}, {"score": 0.002617224926793867, "phrase": "clock_synchronization"}, {"score": 0.0025962029048520324, "phrase": "watermark_encoder"}, {"score": 0.002561539797590314, "phrase": "statistical_analysis"}, {"score": 0.0024669194981583, "phrase": "packet_times"}, {"score": 0.0024014759148123736, "phrase": "sufficient_number"}, {"score": 0.0022696277881969896, "phrase": "large_number"}, {"score": 0.002162379426839795, "phrase": "multiple_countermeasures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Intrusion tracing", " Stepping stones", " Flow watermarking", " Flow correlation"], "paper_abstract": "Tracing interactive attack traffic that traverses stepping stones (i.e., intermediate hosts) is challenging, as the packet headers, lengths, and contents can all be changed by the stepping stones. The traffic timing (delays between packets) has therefore been studied as a means of tracing traffic. One such technique uses traffic timing as a side channel into which a watermark, or identifying tag, can be embedded to aid with tracing. The effectiveness of such techniques is greatly reduced when the packet count of the traffic is changed at the stepping stone. Such transformations may occur as a result of either active countermeasures (e.g. chaff packets, flow splitting) by an adversary attempting to defeat tracing, or by incidental repacketization of the traffic by network interfaces. This paper presents a new method of embedding a watermark in traffic timing, for purposes of tracing the traffic in the presence of flow splitting, chaff packets, timing perturbation, and repacketization. This method uses an invariant characteristic of two connection flows which are part of the same stepping stone chain, namely, the elapsed time of the flows. The duration of each flow is sliced into short fixed-length intervals. Packet timing is adjusted to manipulate the packet count in specific intervals (without adding or deleting any packets), for purposes of embedding the watermark. The method is self-synchronizing and does not require clock synchronization between the watermark encoder and decoder. A statistical analysis of the method, with no assumptions or limitations concerning the distribution of packet times, proves the effectiveness of the method given a sufficient number of packets, despite natural and/or deliberate repacketization and countermeasures by an adversary. The method has been implemented and tested on a large number of SSH traffic flows. The results demonstrate that 100% detection rates and very low false positive rates are achieved under conditions of multiple countermeasures, and using only a few hundred packets. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Interval-based flow watermarking for tracing interactive traffic", "paper_id": "WOS:000302488600009"}