{"auto_keywords": [{"score": 0.03722990101575028, "phrase": "api"}, {"score": 0.00481495049065317, "phrase": "mmff_force_field"}, {"score": 0.004556901872357751, "phrase": "general_purpose_force_field"}, {"score": 0.00428892403807229, "phrase": "wide_range"}, {"score": 0.004241914481080374, "phrase": "diverse_structures"}, {"score": 0.004014452814186653, "phrase": "cheminformatics_toolkit"}, {"score": 0.003950836014631852, "phrase": "uff"}, {"score": 0.003883850058095871, "phrase": "open-source_implementation"}, {"score": 0.003820144626025562, "phrase": "force_field"}, {"score": 0.0036958398682001015, "phrase": "new_mmff_functionality"}, {"score": 0.0031150035760241705, "phrase": "official_validation_suite"}, {"score": 0.0030470127429039497, "phrase": "mmff_authors"}, {"score": 0.0026986685585382347, "phrase": "smiles_strings"}, {"score": 0.002639740960006001, "phrase": "full_flexibility"}, {"score": 0.0025963890234079333, "phrase": "available_api"}, {"score": 0.0025678829712650437, "phrase": "direct_access"}, {"score": 0.0025257081555100556, "phrase": "individual_terms"}, {"score": 0.0024842242921857705, "phrase": "mmff_energy_expression"}, {"score": 0.00241658945942583, "phrase": "constrained_geometry_optimizations"}, {"score": 0.002337848196418384, "phrase": "mmff-capable_molecular_mechanics_engine"}, {"score": 0.0022492129111567824, "phrase": "rdkit_functionality"}, {"score": 0.0021879624017959493, "phrase": "bsd_license"}], "paper_keywords": ["Molecular mechanics", " Force field", " MMFF", " RDKit"], "paper_abstract": "A general purpose force field such as MMFF94/MMFF94s, which can properly deal with a wide range of diverse structures, is very valuable in the context of a cheminformatics toolkit. Herein we present an open-source implementation of this force field within the RDKit. The new MMFF functionality can be accessed through a C++/C#/Python/Java application programming interface (API) developed along the lines of the one already available for UFF in the RDKit. Our implementation was fully validated against the official validation suite provided by the MMFF authors. All energies and gradients were correctly computed; moreover, atom type and force constants were correctly assigned for 3D molecules built from SMILES strings. To provide full flexibility, the available API provides direct access to include/exclude individual terms from the MMFF energy expression and to carry out constrained geometry optimizations. The availability of a MMFF-capable molecular mechanics engine coupled with the rest of the RDKit functionality and covered by the BSD license is appealing to researchers operating in both academia and industry.", "paper_title": "Bringing the MMFF force field to the RDKit: implementation and validation", "paper_id": "WOS:000339583500001"}