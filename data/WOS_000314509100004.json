{"auto_keywords": [{"score": 0.04849559522610527, "phrase": "perceptual_computing"}, {"score": 0.00481495049065317, "phrase": "perceptual_computer_applications"}, {"score": 0.004311241567238011, "phrase": "subjective_judgments"}, {"score": 0.004188702178897384, "phrase": "perceptual_computer"}, {"score": 0.003786499717944588, "phrase": "cww"}, {"score": 0.0035229930971258316, "phrase": "per-c_output"}, {"score": 0.0030790429005600898, "phrase": "fuzzy_sets"}, {"score": 0.002850875630787708, "phrase": "cww_engine"}, {"score": 0.0023972750359328235, "phrase": "similar_words"}, {"score": 0.0022626835039082746, "phrase": "actual_applications"}], "paper_keywords": [""], "paper_abstract": "Perceptual Computing is a methodology of Computing with Words (CWW) to assist humans in making subjective judgments. This article introduces the Perceptual Computer (Per-C), our instantiation of Perceptual Computing. Per-C consists of three components: encoder, CWW engine and decoder. Perceptions-words-activate the Per-C and are the Per-C output (along with data); so, it is possible for a human to interact with the Per-C using just a vocabulary. The encoder transforms words into fuzzy sets and leads to a codebook-words with their associated fuzzy set models. The outputs of the encoder activate a CWW engine whose output is one or more other fuzzy sets, which are then mapped by the decoder into a recommendation (subjective judgment) with supporting data. The recommendation may be in the form of a word, group of similar words, rank or class. When the Per-C was applied to actual applications, challenges occurred that had to be overcome. In this article we describe three applications (investment decision making, social judgment making, and distributed decision making), the challenges encountered and how they were overcome.", "paper_title": "Challenges for Perceptual Computer Applications and How They Were Overcome", "paper_id": "WOS:000314509100004"}