{"auto_keywords": [{"score": 0.04906920311821667, "phrase": "kriegspiel"}, {"score": 0.04857180293888818, "phrase": "partial_information_games"}, {"score": 0.00481495049065317, "phrase": "monte_carlo"}, {"score": 0.004613940521007727, "phrase": "excellent_examples"}, {"score": 0.004147216579100177, "phrase": "traditional_algorithms"}, {"score": 0.003952828685048176, "phrase": "monte_carlo_tree_search"}, {"score": 0.0038283058265876713, "phrase": "significant_improvements"}, {"score": 0.003727527379253624, "phrase": "computer_programs"}, {"score": 0.0032793933580835574, "phrase": "particularly_large_trees"}, {"score": 0.003244567402785763, "phrase": "reduced_information"}, {"score": 0.0031760175583084274, "phrase": "naive_mcts_approach"}, {"score": 0.002947266048104005, "phrase": "long_matches"}, {"score": 0.0029159568444629053, "phrase": "dynamic_information"}, {"score": 0.002869613770219469, "phrase": "complex_victory_conditions"}, {"score": 0.0027203865983816125, "phrase": "mcts"}, {"score": 0.0026771333996253783, "phrase": "wargame-like_board_game"}, {"score": 0.0023051837161137674, "phrase": "mcts-based_programs"}, {"score": 0.0022685255265595624, "phrase": "strongest_known_minimax-based_kriegspiel_program"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Games", " Chess", " Kriegspiel", " Incomplete information", " Monte Carlo tree search"], "paper_abstract": "Partial information games are excellent examples of decision making under uncertainty. In particular, some games have such an immense state space and high degree of uncertainty that traditional algorithms and methods struggle to play them effectively. Monte Carlo tree search (MCTS) has brought significant improvements to the level of computer programs in games such as Go, and it has been used to play partial information games as well. However, there are certain games with particularly large trees and reduced information in which a naive MCTS approach is insufficient: in particular, this is the case of games with long matches, dynamic information, and complex victory conditions. In this paper we explore the application of MCTS to a wargame-like board game, Kriegspiel. We describe and study three MCTS-based methods, starting from a very simple implementation and moving to more refined versions for playing the game with little specific knowledge. We compare these MCTS-based programs to the strongest known minimax-based Kriegspiel program, obtaining significantly better experimental results with less domain-specific knowledge. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Monte Carlo tree search in Kriegspiel", "paper_id": "WOS:000279221100002"}