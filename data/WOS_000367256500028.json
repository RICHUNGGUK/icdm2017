{"auto_keywords": [{"score": 0.010330364813477523, "phrase": "operating_system"}, {"score": 0.00481495049065317, "phrase": "cross-layer_memory_management_for_managed_language_applications"}, {"score": 0.004548253531664032, "phrase": "wide_range"}, {"score": 0.004511373893354558, "phrase": "computing_domains"}, {"score": 0.004313793774439379, "phrase": "memory_power"}, {"score": 0.004141663280057689, "phrase": "multiple_layers"}, {"score": 0.004091370602573054, "phrase": "vertical_execution_stack"}, {"score": 0.0038962096720793443, "phrase": "collaborative_framework"}, {"score": 0.003848886045448135, "phrase": "object_placement"}, {"score": 0.003817655499320344, "phrase": "cross-layer_communication"}, {"score": 0.003771282384646587, "phrase": "page-level_management"}, {"score": 0.003710323357333052, "phrase": "application_objects"}, {"score": 0.0036652492107503956, "phrase": "dram_hardware"}, {"score": 0.00332375606483146, "phrase": "automatic_object"}, {"score": 0.0032434583977423996, "phrase": "application_layer"}, {"score": 0.003217124533918232, "phrase": "fine-grained_management"}, {"score": 0.0031910037920846817, "phrase": "memory_hardware_resources"}, {"score": 0.0029652292779277782, "phrase": "memory_power_consumption"}, {"score": 0.0029053904956617043, "phrase": "custom_memory-intensive_workload"}, {"score": 0.0027441711627551064, "phrase": "profiling-based_analyses"}, {"score": 0.002699769374493867, "phrase": "code_generator"}, {"score": 0.00266693888510356, "phrase": "hotspot_vm"}, {"score": 0.002634506575564286, "phrase": "object_usage_patterns"}, {"score": 0.002539550974361945, "phrase": "hot_and_cold_objects"}, {"score": 0.002508663916554954, "phrase": "partitioned_vm_heap"}, {"score": 0.002350152413458658, "phrase": "logical_application_pages"}, {"score": 0.002321563536990284, "phrase": "appropriate_dram_ranks"}, {"score": 0.0022933216359142736, "phrase": "user-defined_provisioning_goals"}, {"score": 0.0021837406983565098, "phrase": "significant_dram_energy_savings"}, {"score": 0.0021049977753042253, "phrase": "source_code_modifications"}], "paper_keywords": ["Design", " Experimentation", " Performance", " Cross-layer", " Power", " Efficiency", " DRAM", " HotSpot"], "paper_abstract": "Performance and energy efficiency in memory have become critically important for a wide range of computing domains. However, it is difficult to control and optimize memory power and performance because these effects depend upon activity across multiple layers of the vertical execution stack. To address this challenge, we construct a novel and collaborative framework that employs object placement, cross-layer communication, and page-level management to effectively distribute application objects in the DRAM hardware to achieve desired power/performance goals. In this work, we describe the design and implementation of our framework, which is the first to integrate automatic object profiling and analysis at the application layer with fine-grained management of memory hardware resources in the operating system. We demonstrate the utility of our framework by employing it to more effectively control memory power consumption. We design a custom memory-intensive workload to show the potential of our approach. Next, we develop sampling and profiling-based analyses and modify the code generator in the HotSpot VM to understand object usage patterns and automatically determine and control the placement of hot and cold objects in a partitioned VM heap. This information is communicated to the operating system, which uses it to map the logical application pages to the appropriate DRAM ranks according to user-defined provisioning goals. We evaluate our framework and find that it achieves our test goal of significant DRAM energy savings across a variety of workloads, without any source code modifications or recompilations.", "paper_title": "Cross-Layer Memory Management for Managed Language Applications", "paper_id": "WOS:000367256500028"}