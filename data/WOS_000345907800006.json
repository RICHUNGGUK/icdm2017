{"auto_keywords": [{"score": 0.035192881131114524, "phrase": "gsemo"}, {"score": 0.010741611441750513, "phrase": "mlst_problem"}, {"score": 0.008713768289289523, "phrase": "evolutionary_algorithms"}, {"score": 0.004361428012479218, "phrase": "minimum_label"}, {"score": 0.0042610538983912805, "phrase": "mlst"}, {"score": 0.0035160982007651073, "phrase": "ea"}, {"score": 0.0031476068430779367, "phrase": "mlstb_problem"}, {"score": 0.0024072121760839427, "phrase": "expected_polynomial_runtime"}, {"score": 0.002129701089817251, "phrase": "local_search_algorithms"}], "paper_keywords": ["Approximation ratio", " evolutionary algorithm", " minimum label spanning tree", " multiobjective", " runtime complexity"], "paper_abstract": "A few experimental investigations have shown that evolutionary algorithms (EAs) are efficient for the minimum label spanning tree (MLST) problem. However, we know little about that in theory. In this paper, we theoretically analyze the performances of the (1+1) EA, a simple version of EA, and a simple multiobjective evolutionary algorithm called GSEMO on the MLST problem. We reveal that for the MLSTb problem, the (1+1) EA and GSEMO achieve a (b + 1)/2-approximation ratio in expected polynomial runtime with respect to n, the number of nodes, and k, the number of labels. We also find that GSEMO achieves a (2 ln n+1)-approximation ratio for the MLST problem in expected polynomial runtime with respect to n and k. At the same time, we show that the (1+1) EA and GSEMO outperform local search algorithms on three instances of the MLST problem. We also construct an instance on which GSEMO outperforms the (1+1) EA.", "paper_title": "Performance Analysis of Evolutionary Algorithms for the Minimum Label Spanning Tree Problem", "paper_id": "WOS:000345907800006"}