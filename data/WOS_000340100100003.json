{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "lazy_abstraction"}, {"score": 0.004535124351828787, "phrase": "interpolation-based_refinement"}, {"score": 0.004348936976349555, "phrase": "powerful_technique"}, {"score": 0.004271490815763164, "phrase": "imperative_programs"}, {"score": 0.003927848423072668, "phrase": "intrinsic_limitation"}, {"score": 0.003633464433320317, "phrase": "universally_quantified_variables"}, {"score": 0.0034841647157189985, "phrase": "program_specifications"}, {"score": 0.0032618078775887077, "phrase": "interpolation-based_lazy_abstraction_framework"}, {"score": 0.0031654684543975077, "phrase": "unknown_length"}, {"score": 0.003053598205821532, "phrase": "natural_manner"}, {"score": 0.0028758391869611374, "phrase": "modulo_theories_framework"}, {"score": 0.0028076592725295646, "phrase": "backward_reachability_version"}, {"score": 0.002644179117033107, "phrase": "new_approach"}, {"score": 0.002387758958649797, "phrase": "wide_range"}, {"score": 0.002169132543304096, "phrase": "universally_quantified_properties"}, {"score": 0.0021049977753042253, "phrase": "completely_automatic_fashion"}], "paper_keywords": ["SMT", " Model checking", " Lazy abstraction", " Array programs"], "paper_abstract": "Lazy abstraction with interpolation-based refinement has been shown to be a powerful technique for verifying imperative programs. In presence of arrays, however, the method suffers from an intrinsic limitation, due to the fact that invariants needed for verification usually contain universally quantified variables, which are not present in program specifications. In this work we present an extension of the interpolation-based lazy abstraction framework in which arrays of unknown length can be handled in a natural manner. In particular, we exploit the Model Checking Modulo Theories framework to derive a backward reachability version of lazy abstraction that supports reasoning about arrays. The new approach has been implemented in a tool, called safari, which has been validated on a wide range of benchmarks. We show by means of experiments that our approach can synthesize and prove universally quantified properties over arrays in a completely automatic fashion.", "paper_title": "An extension of lazy abstraction with interpolation for programs with arrays", "paper_id": "WOS:000340100100003"}