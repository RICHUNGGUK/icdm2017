{"auto_keywords": [{"score": 0.036928713142320116, "phrase": "apt-logic_programs"}, {"score": 0.009712361433917073, "phrase": "ground_rule"}, {"score": 0.00847933416873511, "phrase": "fixpoint_operator"}, {"score": 0.00481495049065317, "phrase": "approximate_fixpoint_implementation"}, {"score": 0.004776484866276242, "phrase": "annotated_probabilistic_temporal"}, {"score": 0.004700468701207975, "phrase": "logic_programs"}, {"score": 0.004425979295788883, "phrase": "formula_g"}, {"score": 0.004084662575167727, "phrase": "delta_t_time_units"}, {"score": 0.003606711217432998, "phrase": "apt_logic_programs"}, {"score": 0.0035350218469335573, "phrase": "first_implementation"}, {"score": 0.0030591147406390986, "phrase": "entailment_problems"}, {"score": 0.002722634472231842, "phrase": "reasonable_amount"}, {"score": 0.002636489396049042, "phrase": "apt-logic_formulas"}, {"score": 0.0022001958412800745, "phrase": "practical_first_step"}, {"score": 0.0021391300942881, "phrase": "temporal_probabilistic_logics"}, {"score": 0.0021049977753042253, "phrase": "markovian_assumptions"}], "paper_keywords": ["Algorithms", " Languages", " Probabilistic and temporal reasoning", " threads", " frequency functions", " imprecise probabilities"], "paper_abstract": "Annotated Probabilistic Temporal (APT) logic programs support building applications where we wish to reason about statements of the form \"Formula G becomes true with a probability in the range [L, U] within (or in exactly) Delta t time units after formula F became true.\" In this paper, we present a sound, but incomplete fixpoint operator that can be used to check consistency and entailment in APT logic programs. We present the first implementation of APT-logic programs and evaluate both its compute time and convergence on a suite of 23 ground APT-logic programs that were automatically learned from two real-world data sets. In both cases, the APT-logic programs contained up to 1,000 ground rules. In one data set, entailment problems were solved on average in under 0.1 seconds per ground rule, while in the other, it took up to 1.3 seconds per ground rule. Consistency was also checked in a reasonable amount of time. When discussing entailment of APT-logic formulas, convergence of the fixpoint operator refers to (U-L) being below a certain threshold. We show that on virtually all of the 23 automatically generated APT-logic programs, convergence was quick-often in just 2-3 iterations of the fixpoint operator. Thus, our implementation is a practical first step towards checking consistency and entailment in temporal probabilistic logics without independence or Markovian assumptions.", "paper_title": "Annotated Probabilistic Temporal Logic: Approximate Fixpoint Implementation", "paper_id": "WOS:000303047800004"}