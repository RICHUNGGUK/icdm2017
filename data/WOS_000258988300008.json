{"auto_keywords": [{"score": 0.03529141389950178, "phrase": "representative_item"}, {"score": 0.02322730111336099, "phrase": "frequent_itemsets"}, {"score": 0.009451044817876095, "phrase": "bittable"}, {"score": 0.0047810714349158165, "phrase": "efficient_algorithms"}, {"score": 0.004664352260912174, "phrase": "mining_association_rules"}, {"score": 0.004408106853358092, "phrase": "bittable_structure"}, {"score": 0.004377077848734575, "phrase": "bittablefi"}, {"score": 0.004136548839735555, "phrase": "efficient_bit_wise_operations"}, {"score": 0.004021267064832957, "phrase": "high_cost"}, {"score": 0.003992950134435965, "phrase": "candidate_generation"}, {"score": 0.00385431710959668, "phrase": "new_algorithm"}, {"score": 0.0038407203087210775, "phrase": "index-bittablefi"}, {"score": 0.0034299649219748513, "phrase": "subsume_index"}, {"score": 0.003264316172836322, "phrase": "breadth-first_search"}, {"score": 0.00316206336164649, "phrase": "resulting_itemsets"}, {"score": 0.0031176485976102688, "phrase": "index_array"}, {"score": 0.003095674983836725, "phrase": "depth-first_search_strategy"}, {"score": 0.0029775511937434797, "phrase": "hybrid_search"}, {"score": 0.0029150253706493852, "phrase": "search_space"}, {"score": 0.0028236828952575735, "phrase": "proposed_methods"}, {"score": 0.0027255350933549703, "phrase": "redundant_operations"}, {"score": 0.0021731423856364003, "phrase": "experimental_results"}, {"score": 0.0021425882815624803, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "dense_datasets"}], "paper_keywords": ["data mining", " association rule", " frequent itemset", " BitTable", " index array", " subsume index"], "paper_abstract": "Efficient algorithms for mining frequent itemsets are crucial for mining association rules as well as for many other data mining tasks. Methods for mining frequent itemsets have been implemented using a BitTable structure. BitTableFI is such a recently proposed efficient BitTable-based algorithm, which exploits BitTable both horizontally and vertically. Although making use of efficient bit wise operations, BitTableFI still may suffer from the high cost of candidate generation and test. To address this problem, a new algorithm Index-BitTableFI is proposed. Index-BitTableFI also uses BitTable horizontally and vertically. To make use of BitTable horizontally, index array and the corresponding computing method are proposed. By computing the subsume index, those itemsets that co-occurrence with representative item can be identified quickly by using breadth-first search at one time. Then, for the resulting itemsets generated through the index array, depth-first search strategy is used to generate all other frequent itemsets. Thus, the hybrid search is implemented, and the search space is reduced greatly. The advantages of the proposed methods are as follows. On the one hand, the redundant operations on intersection of tidsets and frequency-checking can be avoided greatly; On the other hand, it is proved that frequent itemsets, including representative item and having the same supports as representative item, can be identified directly by connecting the representative item with all the combinations of items in its subsume index. Thus, the cost for processing this kind of itemsets is lowered, and the efficiency is improved. Experimental results show that the proposed algorithm is efficient especially for dense datasets. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Index-BitTableFI: An improved algorithm for mining frequent itemsets", "paper_id": "WOS:000258988300008"}