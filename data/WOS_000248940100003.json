{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "automatic_deductive_synthesis"}, {"score": 0.049488021144002546, "phrase": "functional_programs"}, {"score": 0.03805591382224184, "phrase": "automatic_synthesis"}, {"score": 0.031004918011388126, "phrase": "deductive_tableau_method"}, {"score": 0.004469042910390712, "phrase": "formal_specification"}, {"score": 0.004252296935371162, "phrase": "mathematical_existence_theorem"}, {"score": 0.003506851152129303, "phrase": "synthesis_rules"}, {"score": 0.003357435261066107, "phrase": "basic_constructions"}, {"score": 0.0032953582866530966, "phrase": "functional_program"}, {"score": 0.0032143649757754595, "phrase": "rule_application"}, {"score": 0.0031159081999910694, "phrase": "particular_induction_rule"}, {"score": 0.0028737647829311587, "phrase": "basic_method"}, {"score": 0.002803104254950008, "phrase": "functional_program_construction"}, {"score": 0.0027172101552870973, "phrase": "proof_strategy"}, {"score": 0.00265038878247831, "phrase": "external_heuristics"}, {"score": 0.002521623057264411, "phrase": "induction_hypothesis_formation"}, {"score": 0.002325554982412043, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "lisp_language"}], "paper_keywords": ["deductive program synthesis", " automated reasoning", " proof planning", " rippling", " induction"], "paper_abstract": "The work deals with automatic deductive synthesis of functional programs. Formal specification of a program is taken as a mathematical existence theorem and while proving it, we derive a program and simultaneously prove that this program corresponds to given specification. Several problems have to be resolved for automatic synthesis: the choice of synthesis rules that allows us to derive the basic constructions of a functional program, order of rule application and choice of a particular induction rule. The method proposed here is based on the deductive tableau method. The basic method gives rules for functional program construction. To determine the proof strategy we use some external heuristics, including rippling. And for the induction hypothesis formation the combination of rippling and the deductive tableau method became very useful. The proposed techniques are implemented in the system ALISA (Automatic Lisp Synthesizer) and used for automatic synthesis of several functions in the Lisp language.", "paper_title": "An approach to automatic deductive synthesis of functional programs", "paper_id": "WOS:000248940100003"}