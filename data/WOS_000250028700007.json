{"auto_keywords": [{"score": 0.04959913342990779, "phrase": "windows_xp_applications"}, {"score": 0.029468551220963573, "phrase": "benign_and_malicious_applications"}, {"score": 0.00481495049065317, "phrase": "api_sequence_analysis"}, {"score": 0.004671588539217021, "phrase": "pervasive_nature"}, {"score": 0.004624751696958501, "phrase": "malicious_mobile_code"}, {"score": 0.004331501320993783, "phrase": "code_execution"}, {"score": 0.004266501496765747, "phrase": "considerable_importance"}, {"score": 0.004160319763461951, "phrase": "probabilistic_suffix_trees"}, {"score": 0.004056769841308405, "phrase": "associated_suffix_automata"}, {"score": 0.0038964032225585117, "phrase": "benign_application_behavior"}, {"score": 0.003704797078215222, "phrase": "malicious_applications"}, {"score": 0.003522579870903474, "phrase": "probabilistic_suffix_models"}, {"score": 0.003469676666252421, "phrase": "new_generic_analysis"}, {"score": 0.003184564027329188, "phrase": "api"}, {"score": 0.002982307044758515, "phrase": "analysis_algorithms"}, {"score": 0.002821247621250663, "phrase": "api_calls"}, {"score": 0.0026959452932289797, "phrase": "appropriate_modeling_strategy"}, {"score": 0.0026420518944303716, "phrase": "distance_metrics"}, {"score": 0.0025892330566358503, "phrase": "classification_measures"}, {"score": 0.0025374674652885354, "phrase": "sequence-to-model_matching"}, {"score": 0.0024125253170522816, "phrase": "unobserved_traces"}, {"score": 0.0023523750536537102, "phrase": "suffix_model"}, {"score": 0.0022592313766072658, "phrase": "small_set"}, {"score": 0.0022365262201954643, "phrase": "benign_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["probabilistic suffix model", " API sequence classification", " anomaly detection", " agglomerative clustering", " windows XP", " malicious mobile code", " virus worm"], "paper_abstract": "Given the pervasive nature of malicious mobile code (viruses, worms, etc.), developing statistical/structural models of code execution is of considerable importance. We investigate using probabilistic suffix trees (PSTs) and associated suffix automata (PSAs) to build models of benign application behavior with the goal of subsequently being able to detect malicious applications as anything that deviates therefrom. We describe these probabilistic suffix models and present new generic analysis and manipulation algorithms. The models and the algorithms are then used in the context of API (i.e., system call) sequences realized by Windows XP applications. The analysis algorithms, when applied to traces (i.e., sequences of API calls) of benign and malicious applications, aid in choosing an appropriate modeling strategy in terms of distance metrics and consequently provide classification measures in terms of sequence-to-model matching. We give experimental results based on classification of unobserved traces of benign and malicious applications against a suffix model trained solely from traces generated by a small set of benign applications. (C) 2007 Pattern Recognition Society. Published by Elsevier Ltd. All rights reserved.", "paper_title": "Probabilistic suffix models for API sequence analysis of Windows XP applications", "paper_id": "WOS:000250028700007"}