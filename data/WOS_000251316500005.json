{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "simple_grammars"}, {"score": 0.004665764181113345, "phrase": "highly-polynomial_time"}, {"score": 0.004521179256835894, "phrase": "simple_grammar_reduction"}, {"score": 0.004415675459182871, "phrase": "important_component"}, {"score": 0.0042452552248398445, "phrase": "concatenation_state_machines"}, {"score": 0.00404937519538515, "phrase": "stateless_push-down_automata"}, {"score": 0.003954837422946628, "phrase": "wire-speed_network_packet_classification"}, {"score": 0.0037133478610481994, "phrase": "experimental_analysis"}, {"score": 0.003626626504149897, "phrase": "best-known_algorithms"}, {"score": 0.00290855128461017, "phrase": "second_approach"}, {"score": 0.0027741761880779535, "phrase": "considered_practical_scenario"}, {"score": 0.0025237171554924128, "phrase": "first_one"}, {"score": 0.002259883463607508, "phrase": "network_packet_classification"}, {"score": 0.0021049977753042253, "phrase": "classification_policies"}], "paper_keywords": [""], "paper_abstract": "Simple grammar reduction is an important component in the implementation of Concatenation State Machines (a hardware version of stateless push-down automata designed for wire-speed network packet classification). We present a comparison and experimental analysis of the best-known algorithms for grammar reduction. There are two approaches to this problem: one processing compressed strings without decompression and another one which processes strings explicitly. It turns out that the second approach is more efficient in the considered practical scenario despite having worst-case exponential time complexity (while the first one is polynomial). The study has been conducted in the context of network packet classification, where simple grammars are used for representing the classification policies.", "paper_title": "Reducing simple grammars: Exponential against highly-polynomial time in practice", "paper_id": "WOS:000251316500005"}