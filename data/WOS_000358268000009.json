{"auto_keywords": [{"score": 0.04923607408107278, "phrase": "instance_space"}, {"score": 0.009586992083055879, "phrase": "test_instances"}, {"score": 0.007152368807539886, "phrase": "new_test_instances"}, {"score": 0.004626255242038005, "phrase": "future_performance"}, {"score": 0.00450456611645112, "phrase": "optimization_algorithms"}, {"score": 0.004488421005079009, "phrase": "algorithm_strengths"}, {"score": 0.004232875294230749, "phrase": "algorithm_performance"}, {"score": 0.004195418010131832, "phrase": "future_instances"}, {"score": 0.00408501512749186, "phrase": "recent_work"}, {"score": 0.003754140294151593, "phrase": "known_test_instances"}, {"score": 0.003543273649210823, "phrase": "measurable_features"}, {"score": 0.0028875481626754696, "phrase": "strong_performance"}, {"score": 0.0025266078302900036, "phrase": "controllable_properties"}, {"score": 0.002482013330276732, "phrase": "observed_gaps"}, {"score": 0.0023739321566540682, "phrase": "rich_new_sets"}, {"score": 0.0021910825909008946, "phrase": "graph_colouring"}, {"score": 0.0021620042653528846, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Test instances", " Benchmarking", " Graph colouring", " Instance space", " Evolving instances"], "paper_abstract": "Our confidence in the future performance of any algorithm, including optimization algorithms, depends on how carefully we select test instances so that the generalization of algorithm performance on future instances can be inferred. In recent work, we have established a methodology to generate a 2-d representation of the instance space, comprising a set of known test instances. This instance space shows the similarities and differences between the instances using measurable features or properties, and enables the performance of algorithms to be viewed across the instance space, where generalizations can be inferred. The power of this methodology is the insights that can be generated into algorithm strengths and weaknesses by examining the regions in instance space where strong performance can be expected. The representation of the instance space is dependent on the choice of test instances however. In this paper we present a methodology for generating new test instances with controllable properties, by filling observed gaps in the instance space. This enables the generation of rich new sets of test instances to support better the understanding of algorithm strengths and weaknesses. The methodology is demonstrated on graph colouring as a case study. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Generating new test instances by evolving in instance space", "paper_id": "WOS:000358268000009"}