{"auto_keywords": [{"score": 0.04764602699421293, "phrase": "glift"}, {"score": 0.004815316573636744, "phrase": "gpu"}, {"score": 0.0039088121438737924, "phrase": "gpu_programmers"}, {"score": 0.0037658881407605445, "phrase": "data_structure_definitions"}, {"score": 0.0036281710561308377, "phrase": "algorithmic_development"}, {"score": 0.0035479614996805383, "phrase": "reusable_and_interchangeable_data_structures"}, {"score": 0.003418186564522323, "phrase": "large_body"}, {"score": 0.003367611042980526, "phrase": "previously_published_gpu_data_structures"}, {"score": 0.002836942411239067, "phrase": "simple_glift_concepts"}, {"score": 0.0027535633837592597, "phrase": "reusable_glift_components"}, {"score": 0.0024620842899061614, "phrase": "adaptive_shadow_maps"}, {"score": 0.0024075916292945715, "phrase": "three-dimensional_paint"}, {"score": 0.002268088741853586, "phrase": "glift_data_structures"}, {"score": 0.0022013916728990564, "phrase": "handwritten_implementations"}, {"score": 0.0021049977753042253, "phrase": "programming_effort"}], "paper_keywords": ["algorithms", " languages", " adaptive", " adaptive shadow maps", " data structures", " graphics hardware", " GPU", " GPGPU", " multiresolution", " octree textures", " parallel computation"], "paper_abstract": "This article presents Glift, an abstraction and generic template library for defining complex, random-access graphics processor (GPU) data structures. Like modern CPU data structure libraries, Glift enables GPU programmers to separate algorithms from data structure definitions; thereby greatly simplifying algorithmic development and enabling reusable and interchangeable data structures. We characterize a large body of previously published GPU data structures in terms of our abstraction and present several new GPU data structures. The structures, a stack, quadtree, and octree, are explained using simple Glift concepts and implemented using reusable Glift components. We also describe two applications of these structures not previously demonstrated on GPUs: adaptive shadow maps and octree three-dimensional paint. Last, we show that our example Glift data structures perform comparably to handwritten implementations while requiring only a fraction of the programming effort.", "paper_title": "Glift: Generic, efficient, random-access GPU data structures", "paper_id": "WOS:000236885100004"}