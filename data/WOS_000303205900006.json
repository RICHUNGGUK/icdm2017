{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "task_scheduling"}, {"score": 0.0045357787854931894, "phrase": "growing_trend"}, {"score": 0.004490842671590769, "phrase": "current_complex_embedded_systems"}, {"score": 0.0043804319008535555, "phrase": "multiprocessor_system"}, {"score": 0.004105850229681625, "phrase": "multiple_heterogeneous_processing_elements"}, {"score": 0.0040449598280454645, "phrase": "memory_hierarchy"}, {"score": 0.003848413823574867, "phrase": "on-chip_interconnect_structure"}, {"score": 0.003643185395780667, "phrase": "performance_requirements"}, {"score": 0.0036070601923916196, "phrase": "multimedia_applications"}, {"score": 0.003281186608301359, "phrase": "software-managed_memories"}, {"score": 0.0032324864013225166, "phrase": "scratch-pad_memories"}, {"score": 0.002797329638474873, "phrase": "embedded_application"}, {"score": 0.002701361707441567, "phrase": "available_spm_budget"}, {"score": 0.0024571101010891347, "phrase": "better_quality_schedules"}, {"score": 0.002349228457383314, "phrase": "integrated_approach"}, {"score": 0.002234893735225432, "phrase": "execution_time"}, {"score": 0.0022127018991294047, "phrase": "embedded_applications"}], "paper_keywords": ["Memory partitioning", " multiprocessor system-on-chip (MPSoC)", " scratchpad", " task scheduling"], "paper_abstract": "The growing trend in current complex embedded systems is to deploy a multiprocessor system-on-chip (MPSoC). A MPSoC consists of multiple heterogeneous processing elements, a memory hierarchy, and input/output components which are linked together by an on-chip interconnect structure. Such an architecture provides the flexibility to meet the performance requirements of multimedia applications while respecting the constraints on memory, cost, size, time, and power. Many embedded systems employ software-managed memories known as scratch-pad memories (SPM). Unlike caches, SPMs are software-controlled and hence the execution time of applications on such systems can be accurately predicted. Scheduling the tasks of an embedded application on the processors and partitioning the available SPM budget among these processors are two critical issues in such systems. Often, these are considered separately; such a decoupled approach may miss better quality schedules. In this paper, we present an integrated approach to task scheduling and SPM partitioning to further reduce the execution time of embedded applications. Results on several real-life benchmarks show the significant improvement from our proposed technique.", "paper_title": "An Effective Solution to Task Scheduling and Memory Partitioning for Multiprocessor System-on-Chip", "paper_id": "WOS:000303205900006"}