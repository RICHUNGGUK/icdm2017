{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "inductive_logic_programming"}, {"score": 0.004695900553353526, "phrase": "model_transformation"}, {"score": 0.004410938507689426, "phrase": "novel_approach"}, {"score": 0.004301834610818624, "phrase": "model-driven_software_engineering"}, {"score": 0.004143196873246147, "phrase": "model_transformation_rules"}, {"score": 0.003990385737207714, "phrase": "initial_prototypical_set"}, {"score": 0.00389164348807591, "phrase": "interrelated_source"}, {"score": 0.0035648266669315943, "phrase": "critical_cases"}, {"score": 0.0034332736827447654, "phrase": "model_transformation_problem"}, {"score": 0.003306559295382181, "phrase": "purely_declarative_way"}, {"score": 0.0031448288291084, "phrase": "current_paper"}, {"score": 0.0028091907694771613, "phrase": "muggleton"}, {"score": 0.0027395972474669834, "phrase": "raedt"}, {"score": 0.002671722386856879, "phrase": "j_logic_program"}, {"score": 0.0022696277881969896, "phrase": "inductive_construction"}, {"score": 0.0022133711375320266, "phrase": "first-order_clausal_theories"}, {"score": 0.0021049977753042253, "phrase": "background_knowledge"}], "paper_keywords": ["Model transformation", " By-example synthesis", " Inductive logic programming"], "paper_abstract": "Model transformation by example is a novel approach in model-driven software engineering to derive model transformation rules from an initial prototypical set of interrelated source and target models, which describe critical cases of the model transformation problem in a purely declarative way. In the current paper, we automate this approach using inductive logic programming (Muggleton and Raedt in J Logic Program 19-20:629-679, 1994) which aims at the inductive construction of first-order clausal theories from examples and background knowledge.", "paper_title": "Model transformation by example using inductive logic programming", "paper_id": "WOS:000267687600004"}