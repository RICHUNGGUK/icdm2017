{"auto_keywords": [{"score": 0.004610058444728656, "phrase": "portable_approach._single_instruction"}, {"score": 0.003987755561492638, "phrase": "processor_manufacturers"}, {"score": 0.0034491650585057754, "phrase": "significant_accelerations"}, {"score": 0.003208081171089699, "phrase": "simd"}, {"score": 0.0030267296900520217, "phrase": "potentially_fragile_compiler_support"}, {"score": 0.002897710777957041, "phrase": "vendor-specific_libraries"}, {"score": 0.0021987994275190314, "phrase": "simd_hardware"}], "paper_keywords": [""], "paper_abstract": "Single instruction, multiple data (SIMD) extensions have been a feature of choice for processor manufacturers for a couple of decades. Designed to provide significant accelerations, they require expertise, the use of potentially fragile compiler support, or vendor-specific libraries. Here, a C++ template library called Boost.SIMD is presented that simplifies the exploitation of SIMD hardware within a standing C++ programming model.", "paper_title": "EXPLOITING MULTIMEDIA EXTENSIONS IN C++: A PORTABLE APPROACH", "paper_id": "WOS:000308617700010"}