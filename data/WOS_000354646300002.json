{"auto_keywords": [{"score": 0.03577773358930474, "phrase": "cuda"}, {"score": 0.00481495049065317, "phrase": "free-vibrations_analysis"}, {"score": 0.004664352260912174, "phrase": "cuda._purpose_-_the_purpose"}, {"score": 0.004497973025639345, "phrase": "novel_strategy"}, {"score": 0.004397000006837371, "phrase": "free-vibration_analysis"}, {"score": 0.00429828390000229, "phrase": "hierarchical_matrices_structure"}, {"score": 0.004088807948906792, "phrase": "traditional_dual_reciprocity_boundary_element_method"}, {"score": 0.00385431710959668, "phrase": "integral_equation"}, {"score": 0.0036998728605395384, "phrase": "optimization_computation"}, {"score": 0.003584025547693836, "phrase": "adaptive_cross-approximation_method"}, {"score": 0.003424771860049617, "phrase": "high-efficiency_parallel_algorithm"}, {"score": 0.00330246222643051, "phrase": "serial_effective_algorithm"}, {"score": 0.0032429499567088113, "phrase": "inverse_arithmetic_operation"}, {"score": 0.0030988045934942587, "phrase": "impressive_time"}, {"score": 0.003015401937358271, "phrase": "hierarchical_matrices_technique"}, {"score": 0.0029610472910087176, "phrase": "serial_algorithm"}, {"score": 0.0028813415821988156, "phrase": "fair_performance"}, {"score": 0.002855251306715901, "phrase": "complex_inversion_operation"}, {"score": 0.002816556934231128, "phrase": "cuda_parallel_algorithm"}, {"score": 0.0026069623057065664, "phrase": "numerical_example"}, {"score": 0.0025716240685409513, "phrase": "relative_error"}, {"score": 0.002536763634539386, "phrase": "approximation_process"}, {"score": 0.0024797072773840704, "phrase": "increasing_degrees"}, {"score": 0.002401972657236926, "phrase": "internal_points"}, {"score": 0.0022743274702883456, "phrase": "computational_efficiency"}, {"score": 0.0022434880661725493, "phrase": "memory_consumption"}, {"score": 0.0022231606165229235, "phrase": "free-vibration_problems"}, {"score": 0.002203016940021265, "phrase": "h-matrices_structure"}, {"score": 0.0021049977753042253, "phrase": "traditional_drbem."}], "paper_keywords": ["Adaptive cross-approximation", " Compute unified device architecture", " Dual reciprocity boundary element method", " H-matrices"], "paper_abstract": "Purpose - The purpose of this paper is to present a novel strategy used for acceleration of free-vibration analysis, in which the hierarchical matrices structure and Compute Unified Device Architecture (CUDA) platform is applied to improve the performance of the traditional dual reciprocity boundary element method (DRBEM). Design/methodology/approach - The DRBEM is applied in forming integral equation to reduce complexity. In the procedure of optimization computation, H-Matrices are introduced by applying adaptive cross-approximation method. At the same time, this paper proposes a high-efficiency parallel algorithm using CUDA and the counterpart of the serial effective algorithm in H-Matrices for inverse arithmetic operation. Findings - The analysis for free-vibration could achieve impressive time and space efficiency by introducing hierarchical matrices technique. Although the serial algorithm based on H-Matrices could obtain fair performance for complex inversion operation, the CUDA parallel algorithm would further double the efficiency. Without much loss in accuracy according to the examination of the numerical example, the relative error appeared in approximation process can be fixed by increasing degrees of freedoms or introducing certain amount of internal points. Originality/value - The paper proposes a novel effective strategy to improve computational efficiency and decrease memory consumption of free-vibration problems. H-Matrices structure and parallel operation based on CUDA are introduced in traditional DRBEM.", "paper_title": "Acceleration of free-vibrations analysis with the Dual Reciprocity BEM based on H-matrices and CUDA", "paper_id": "WOS:000354646300002"}