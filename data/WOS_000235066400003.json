{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_evolution_calculus"}, {"score": 0.022871633192341766, "phrase": "darwin"}, {"score": 0.00462919213721188, "phrase": "first_implementation"}, {"score": 0.004450570402092401, "phrase": "baumgartner"}, {"score": 0.004381055728897155, "phrase": "tinelli"}, {"score": 0.004178935413340453, "phrase": "dpll_procedure"}, {"score": 0.0041136473765874815, "phrase": "first-order_logic"}, {"score": 0.0038624981944755813, "phrase": "fast_and_clean_implementation"}, {"score": 0.0033255627814855163, "phrase": "brief_summary"}, {"score": 0.003097865379563127, "phrase": "main_part"}, {"score": 0.0027093285574752457, "phrase": "main_design_decisions"}, {"score": 0.0026045914281028473, "phrase": "darwin's_performance"}, {"score": 0.0024842242921857705, "phrase": "practical_experiments"}, {"score": 0.002259883463607508, "phrase": "tptp_problem_library"}], "paper_keywords": ["automated theorem proving", " Davis-Putnam-Logemann-Loveland procedure"], "paper_abstract": "Darwin is the first implementation of the Model Evolution Calculus by Baumgartner and Tinelli. The Model Evolution Calculus lifts the DPLL procedure to first-order logic. Darwin is meant to be a fast and clean implementation of the calculus, showing its effectiveness and providing a base for further improvements and extensions. Based on a brief summary of the Model Evolution Calculus, we describe in the main part of the paper Darwin's proof procedure and its data structures and algorithms, discussing the main design decisions and features that influence Darwin's performance. We also report on practical experiments carried out with problems from the CASC-J2 system competition and parts of the TPTP Problem Library, and compare the results with those of other state-of-the-art theorem provers.", "paper_title": "Implementing the model evolution calculus", "paper_id": "WOS:000235066400003"}