{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "python"}, {"score": 0.021673925350463412, "phrase": "wyrm"}, {"score": 0.0045726187330434025, "phrase": "scientific_community"}, {"score": 0.004364921229704825, "phrase": "matplotlib"}, {"score": 0.004275650416511604, "phrase": "strong_foundation"}, {"score": 0.004231699728933577, "phrase": "scientific_computing"}, {"score": 0.004145143433523008, "phrase": "machine_learning_packages_like_scikit-learn"}, {"score": 0.004060350364088702, "phrase": "data_analysis"}, {"score": 0.004018607312723794, "phrase": "pandas"}, {"score": 0.0035866734383189396, "phrase": "broad_range"}, {"score": 0.0035497797026638033, "phrase": "neuroscientific_problems"}, {"score": 0.00330189927527898, "phrase": "neurophysiological_data"}, {"score": 0.0032510690712452147, "phrase": "real-time_settings"}, {"score": 0.0031845067058084583, "phrase": "online_bci_application"}, {"score": 0.0030872017736888113, "phrase": "software_defects"}, {"score": 0.0030239842475439814, "phrase": "extensive_use"}, {"score": 0.0029928611380840757, "phrase": "unit_testing"}, {"score": 0.0029013950320185573, "phrase": "key_aspects"}, {"score": 0.0028715299874549245, "phrase": "wyrm's_software_architecture"}, {"score": 0.0025892330566358503, "phrase": "classification_tasks"}, {"score": 0.0025230952890994236, "phrase": "bci_competition_iii."}, {"score": 0.0024333239726872604, "phrase": "brief_analysis"}, {"score": 0.0023958326775913165, "phrase": "data_sets"}, {"score": 0.0022749744354271816, "phrase": "online_experiment"}, {"score": 0.0021714122348552747, "phrase": "final_piece"}], "paper_keywords": ["Brain-computer interface", " BCI", " EEG", " ECoG", " Toolbox", " Python", " Machine learning", " Signal processing"], "paper_abstract": "In the last years Python has gained more and more traction in the scientific community. Projects like NumPy, SciPy, and Matplotlib have created a strong foundation for scientific computing in Python and machine learning packages like scikit-learn or packages for data analysis like Pandas are building on top of it. In this paper we present Wyrm (https://github.com/bbci/wyrm), an open source BCI toolbox in Python. Wyrm is applicable to a broad range of neuroscientific problems. It can be used as a toolbox for analysis and visualization of neurophysiological data and in real-time settings, like an online BCI application. In order to prevent software defects, Wyrm makes extensive use of unit testing. We will explain the key aspects of Wyrm's software architecture and design decisions for its data structure, and demonstrate and validate the use of our toolbox by presenting our approach to the classification tasks of two different data sets from the BCI Competition III. Furthermore, we will give a brief analysis of the data sets using our toolbox, and demonstrate how we implemented an online experiment using Wyrm. With Wyrm we add the final piece to our ongoing effort to provide a complete, free and open source BCI system in Python.", "paper_title": "Wyrm: A Brain-Computer Interface Toolbox in Python", "paper_id": "WOS:000364154200007"}