{"auto_keywords": [{"score": 0.040410708564970775, "phrase": "bsp_algorithms"}, {"score": 0.00481495049065317, "phrase": "multicore_programming"}, {"score": 0.004564291332315995, "phrase": "distributed-memory_systems"}, {"score": 0.00443308765153716, "phrase": "shared-memory_multicore_systems"}, {"score": 0.004305639197085793, "phrase": "bsp_libraries"}, {"score": 0.004222707054751191, "phrase": "scientific_computing"}, {"score": 0.004101281992566145, "phrase": "proof-of-concept_multicorebsp_library"}, {"score": 0.004002975913821652, "phrase": "java"}, {"score": 0.0037942165191367366, "phrase": "proper_speedups"}, {"score": 0.003757480190200645, "phrase": "multicore_architectures"}, {"score": 0.003614044704141927, "phrase": "bsplib_implementation"}, {"score": 0.003527181559366122, "phrase": "object-oriented_setting"}, {"score": 0.003392507399258166, "phrase": "function_primitives"}, {"score": 0.003294875957676514, "phrase": "overall_design_simplicity"}, {"score": 0.0031690434364310435, "phrase": "bsp_model"}, {"score": 0.003092842645798083, "phrase": "sparse_matrix-vector"}, {"score": 0.00303319936111073, "phrase": "multiplication_problem"}, {"score": 0.0029458777184930896, "phrase": "numerical_experiments"}, {"score": 0.002903161412792026, "phrase": "resulting_bsp_spmv_algorithm"}, {"score": 0.0025578967205807843, "phrase": "fast_fourier"}, {"score": 0.0023776656246300063, "phrase": "super-linear_speedups"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["bulk synchronous parallel", " BSP", " parallel computing", " sparse matrix-vector multiplication", " multicore", " shared memory", " fast Fourier transform", " dense LU decomposition"], "paper_abstract": "We show that the bulk synchronous parallel (BSP) model, originally designed for distributed-memory systems, is also applicable for shared-memory multicore systems and, furthermore, that BSP libraries are useful in scientific computing on these systems. A proof-of-concept MulticoreBSP library has been implemented in Java, and is used to show that BSP algorithms can attain proper speedups on multicore architectures. This library is based on the BSPlib implementation, adapted to an object-oriented setting. In comparison, the number of function primitives is reduced, while the overall design simplicity is improved. We detail applying the BSP model and library on the sparse matrix-vector (SpMV) multiplication problem, and show by performing numerical experiments that the resulting BSP SpMV algorithm attains speedups, in one case reaching a speedup of 3.5 for 4 threads. Whereas not described in detail in this paper, algorithms for the fast Fourier transform and the dense LU decomposition are also investigated; in one case, attaining super-linear speedups of 5 for 4 threads. The predictability of BSP algorithms in the case of the SpMV is also investigated. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "An object-oriented bulk synchronous parallel library for multicore programming", "paper_id": "WOS:000300977700007"}