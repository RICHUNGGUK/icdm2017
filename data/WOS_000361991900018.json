{"auto_keywords": [{"score": 0.04281600488087641, "phrase": "cloud_server"}, {"score": 0.008351832725773813, "phrase": "cloud_storage"}, {"score": 0.00481495049065317, "phrase": "outsourced_functions"}, {"score": 0.004773692073488661, "phrase": "verifiable_delegation"}, {"score": 0.00467207889925365, "phrase": "considerable_attention"}, {"score": 0.004475266375001531, "phrase": "delegation_models"}, {"score": 0.004398872331144531, "phrase": "verifiable_computation_model"}, {"score": 0.004361163586439822, "phrase": "gennaro_et_al"}, {"score": 0.003577414339646767, "phrase": "client's_supplied_input"}, {"score": 0.0035162927451540065, "phrase": "correctness_proof"}, {"score": 0.0032398798149196432, "phrase": "substantially_less_time"}, {"score": 0.0031166151196841308, "phrase": "existing_verifiable_computation_schemes"}, {"score": 0.003050166508545763, "phrase": "delegated_function"}, {"score": 0.002934098412396701, "phrase": "stringent_requirement"}, {"score": 0.002738523189244011, "phrase": "batch_verifiable_computation"}, {"score": 0.0026916956768363158, "phrase": "simultaneous_delegation"}, {"score": 0.002668582249630492, "phrase": "multiple_functions"}, {"score": 0.002622947550220266, "phrase": "batch_verifiable_computation_schemes"}, {"score": 0.0025122373359090454, "phrase": "efficient_client_verification"}, {"score": 0.0021789194955896124, "phrase": "information-theoretic_construction"}, {"score": 0.0021416404045850224, "phrase": "computational_assumptions"}], "paper_keywords": ["Delegation of computation", " Batch verification", " Storage overhead"], "paper_abstract": "Verifiable delegation of computation has attracted considerable attention in recent years and had resulted in a number of delegation models. In the verifiable computation model of Gennaro et al., a client wants to delegate the computation of a function to a cloud server. The client generates an encoding of the function that will be stored on the cloud server, and has the property that the cloud server can compute the function on any client's supplied input together with a correctness proof. The proof will allow the client to verify the correctness of the computation by the server using substantially less time than performing the computation itself. In all existing verifiable computation schemes the encoding of the delegated function requires at least twice as much cloud storage as the function itself. This stringent requirement on storage can become a bottleneck in practice. In this paper, we introduce batch verifiable computation which enables the simultaneous delegation of multiple functions. We construct batch verifiable computation schemes that effectively reduce the requirement on cloud storage while preserving efficient client verification. To delegate functions, our batch verifiable computation schemes only require as much cloud storage as the functions themselves. Our schemes are asymptotically optimal in terms of cloud storage in the sense that as . We start with an information-theoretic construction and then introduce computational assumptions to obtain the above efficiencies.", "paper_title": "Batch verifiable computation of outsourced functions", "paper_id": "WOS:000361991900018"}