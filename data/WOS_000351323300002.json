{"auto_keywords": [{"score": 0.04598947580092755, "phrase": "latest_backup"}, {"score": 0.010612387000973441, "phrase": "backup_storage"}, {"score": 0.010152791956424226, "phrase": "inline_deduplication"}, {"score": 0.009857396258836333, "phrase": "duplicate_chunks"}, {"score": 0.008672663624811295, "phrase": "expired_backups"}, {"score": 0.007050060767508066, "phrase": "revdedup"}, {"score": 0.004767546015485477, "phrase": "backup_storage_systems"}, {"score": 0.0043183186953102805, "phrase": "existing_backups"}, {"score": 0.003815607281455725, "phrase": "data_chunks"}, {"score": 0.0035249212996297332, "phrase": "existing_duplicate_chunks"}, {"score": 0.0029055323737809825, "phrase": "coarse-grained_inline_deduplication"}, {"score": 0.002579622880371082, "phrase": "older_backups"}, {"score": 0.0025415366388578465, "phrase": "deduplication_design"}, {"score": 0.002454835845644037, "phrase": "efficient_deletion"}, {"score": 0.002394719113232821, "phrase": "extensive_testbed_experiments"}, {"score": 0.0023710856920150574, "phrase": "synthetic_and_real-world_datasets"}, {"score": 0.002278856202878812, "phrase": "high_performance"}, {"score": 0.0021365562685368767, "phrase": "high_storage_efficiency"}, {"score": 0.0021049977753042253, "phrase": "conventional_inline_deduplication"}], "paper_keywords": ["Design", " Implementation", " Experiments", " Performance", " Deduplication", " backup storage"], "paper_abstract": "Backup storage systems often remove redundancy across backups via inline deduplication, which works by referring duplicate chunks of the latest backup to those of existing backups. However, inline deduplication degrades restore performance of the latest backup due to fragmentation, and complicates deletion of expired backups due to the sharing of data chunks. While out-of-line deduplication addresses the problems by forward-pointing existing duplicate chunks to those of the latest backup, it introduces additional I/Os of writing and removing duplicate chunks. We design and implement RevDedup, an efficient hybrid inline and out-of-line deduplication system for backup storage. It applies coarse-grained inline deduplication to remove duplicates of the latest backup, and then fine-grained out-of-line reverse deduplication to remove duplicates from older backups. Our reverse deduplication design limits the I/O overhead and prepares for efficient deletion of expired backups. Through extensive testbed experiments using synthetic and real-world datasets, we show that RevDedup can bring high performance to the backup, restore, and deletion operations, while maintaining high storage efficiency comparable to conventional inline deduplication.", "paper_title": "Efficient Hybrid Inline and Out-of-Line Deduplication for Backup Storage", "paper_id": "WOS:000351323300002"}