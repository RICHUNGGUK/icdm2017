{"auto_keywords": [{"score": 0.02706835141441535, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "large_scale"}, {"score": 0.004704187604192605, "phrase": "important_subset"}, {"score": 0.004667833113864304, "phrase": "combinatorial_optimization"}, {"score": 0.004269329235934791, "phrase": "new_simplified_binary_harmony_search"}, {"score": 0.004090901264701185, "phrase": "diverse_research_fields"}, {"score": 0.004043541331944951, "phrase": "key_difference"}, {"score": 0.004012288507637359, "phrase": "sbhs"}, {"score": 0.003770633265791941, "phrase": "harmony_memory"}, {"score": 0.0037125240439927114, "phrase": "pitch_adjustment_rate"}, {"score": 0.0036840266853276744, "phrase": "par"}, {"score": 0.0036411406244705557, "phrase": "step_bandwidth"}, {"score": 0.0035297609635321203, "phrase": "new_solutions"}, {"score": 0.0033821367649595254, "phrase": "important_factors"}, {"score": 0.003304224820203298, "phrase": "harmony_memory_considering_rate"}, {"score": 0.0032786537599187125, "phrase": "hmcr"}, {"score": 0.0031660031870090434, "phrase": "dimension_size"}, {"score": 0.003033546013625887, "phrase": "proposed_method"}, {"score": 0.002975178815784779, "phrase": "tedious_process"}, {"score": 0.002952146666681891, "phrase": "proper_parameter_setting"}, {"score": 0.002884111441153185, "phrase": "population_diversity"}, {"score": 0.0028506823968539206, "phrase": "specific_heuristic_based_local_search"}, {"score": 0.002752695791351096, "phrase": "better_quality_solutions"}, {"score": 0.0026580683046325253, "phrase": "large_scale_instances"}, {"score": 0.002527083139627522, "phrase": "extensive_comparisons"}, {"score": 0.002293014162421338, "phrase": "better_solutions"}, {"score": 0.00227525089435209, "phrase": "almost_all_cases"}, {"score": 0.0021970000365512227, "phrase": "statistical_significance"}, {"score": 0.002154693685426657, "phrase": "large_scale_problems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Harmony search", " Simplified binary harmony search", " 0-1 knapsack problems", " Large scale", " Ingenious improvisation scheme"], "paper_abstract": "As an important subset of combinatorial optimization, 0-1 knapsack problems, especially the high-dimensional ones, are often difficult to solve. This study aims to provide a new simplified binary harmony search (SBHS) algorithm, to tackle such NP-hard problems arising in diverse research fields. The key difference between SBHS and other HS methods is in the process of improvisation. The differences among harmonies stored in harmony memory rather than the pitch adjustment rate (PAR) and step bandwidth (bw) are employed to produce new solutions and this can greatly alleviate the burden of setting these important factors manually. Moreover, the harmony memory considering rate (HMCR) is dynamically adjusted in terms of the dimension size to improve convergence of the algorithm. Therefore, the proposed method does not require any tedious process of proper parameter setting. To further enhance the population diversity, a specific heuristic based local search around infeasible solutions is carried out to obtain better quality solutions. A set of 10 low dimensional knapsack problems as well as large scale instances with up to 10,000 items are used to test the effectiveness of the proposed algorithm. Extensive comparisons are made with the most well-known state-of-the-art HS methods including 9 continuous versions and 5 binary-coded variants. The results reveal that the proposed algorithm can obtain better solutions in almost all cases and outperforms the other considered HS methods with statistical significance, especially for the large scale problems. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A simplified binary harmony search algorithm for large scale 0-1 knapsack problems", "paper_id": "WOS:000353746900025"}