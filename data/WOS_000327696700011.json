{"auto_keywords": [{"score": 0.043704949447414855, "phrase": "valiant"}, {"score": 0.00481495049065317, "phrase": "efficient_divide-and-conquer_parsing_of_practical_context-free_languages"}, {"score": 0.004605748839642513, "phrase": "divide-and-conquer_algorithm"}, {"score": 0.004484596684703308, "phrase": "context-free_languages"}, {"score": 0.0037209035703970705, "phrase": "matrix_multiplications"}, {"score": 0.003465350958971198, "phrase": "conquer_step"}, {"score": 0.0031703706626348507, "phrase": "worst_case"}, {"score": 0.0025605773834404253, "phrase": "program_texts"}, {"score": 0.0022806798371116698, "phrase": "overwhelming_majority"}, {"score": 0.0022404162042797262, "phrase": "empty_matrices"}, {"score": 0.0021049977753042253, "phrase": "modern_computing"}], "paper_keywords": ["Divide-and-Conquer", " Parsing", " Complexity", " Context-Free Languages", " Iteration"], "paper_abstract": "We present a divide-and-conquer algorithm for parsing context-free languages efficiently. Our algorithm is an instance of Valiant's (1975), who reduced the problem of parsing to matrix multiplications. We show that, while the conquer step of Valiant's is O(n(3)) in the worst case, it improves to O(log (3) n), under certain conditions satisfied by many useful inputs. These conditions occur for example in program texts written by humans. The improvement happens because the multiplications involve an overwhelming majority of empty matrices. This result is relevant to modern computing: divide-and-conquer algorithms can be parallelized relatively easily.", "paper_title": "Efficient Divide-and-Conquer Parsing of Practical Context-Free Languages", "paper_id": "WOS:000327696700011"}