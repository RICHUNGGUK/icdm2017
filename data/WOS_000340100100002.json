{"auto_keywords": [{"score": 0.04561064932086239, "phrase": "lha"}, {"score": 0.015719693992243013, "phrase": "linear_hybrid_automata"}, {"score": 0.014561721431130839, "phrase": "bmc"}, {"score": 0.011200880944033521, "phrase": "sat-lp-iis_joint-directed_solution"}, {"score": 0.004756521061849989, "phrase": "discrete_jumps"}, {"score": 0.004717960684395242, "phrase": "continuous_flows"}, {"score": 0.004493045859210086, "phrase": "bounded_model_checking"}, {"score": 0.004313793774439379, "phrase": "challenging_problem"}, {"score": 0.004278807087784626, "phrase": "current_works"}, {"score": 0.004008897491380646, "phrase": "smt_formulas"}, {"score": 0.0038962096720793443, "phrase": "smt_solvers"}, {"score": 0.003802135020791801, "phrase": "system_size"}, {"score": 0.003725470458263889, "phrase": "object_smt_problem"}, {"score": 0.0032700071110068323, "phrase": "layered_way"}, {"score": 0.0032040376301815544, "phrase": "bounded_graph_structure"}, {"score": 0.0031139032290048788, "phrase": "propositional_formula"}, {"score": 0.0029895074299598275, "phrase": "potential_paths"}, {"score": 0.0029291801502381513, "phrase": "target_location"}, {"score": 0.0027330029055210926, "phrase": "linear_constraints"}, {"score": 0.0026560841114619147, "phrase": "linear_programming"}, {"score": 0.0025189177411152645, "phrase": "irreducible_infeasible_set"}, {"score": 0.0024480094603893175, "phrase": "infeasible_path_segment"}, {"score": 0.002379092507901856, "phrase": "sat_solver"}, {"score": 0.0023405839743112504, "phrase": "enumerating_process"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_smt-style_competitors"}], "paper_keywords": ["Bounded model checking", " Linear hybrid automata", " SAT", " Linear programming", " Irreducible infeasible set"], "paper_abstract": "As discrete jumps and continuous flows tangle in the behavior of linear hybrid automata (LHA), the bounded model checking (BMC) for reachability of LHA is a challenging problem. Current works try to handle this problem by encoding all the discrete and continuous behaviors in the bound into a set of SMT formulas which can then be solved by SMT solvers. However, when the system size is large, the object SMT problem could be huge and difficult to solve. Instead of encoding everything into one constraint set, this paper proposes a SAT-LP-IIS joint-directed solution to conduct the BMC for reachability of LHA in a layered way. First, the bounded graph structure of LHA is encoded into a propositional formula set, and solved by SAT solvers to find potential paths which can reach the target location on the graph. Then, the feasibility of certain path is encoded into a set of linear constraints which can then be solved by linear programming (LP) efficiently. If the path is not feasible, irreducible infeasible set (IIS) technique is deployed to locate an infeasible path segment which will be fed to the SAT solver to accelerate the enumerating process. Experiments show that by this SAT-LP-IIS joint-directed solution, the memory usage of the BMC of LHA is well-controlled and the performance outperforms the state-of-the-art SMT-style competitors significantly.", "paper_title": "SAT-LP-IIS joint-directed path-oriented bounded reachability analysis of linear hybrid automata", "paper_id": "WOS:000340100100002"}