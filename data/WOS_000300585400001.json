{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ffd"}, {"score": 0.03363891095273707, "phrase": "direct_shape_manipulation"}, {"score": 0.004756805752518494, "phrase": "programmable_graphics_hardware"}, {"score": 0.0046993598473345395, "phrase": "free-form_deformation"}, {"score": 0.00453113241842654, "phrase": "well_established_technique"}, {"score": 0.004449280529563265, "phrase": "arbitrary_object_shapes"}, {"score": 0.004012500850311087, "phrase": "cage-based_deformation"}, {"score": 0.003939980614608309, "phrase": "simple_and_versatile_nature"}, {"score": 0.003822003373331997, "phrase": "strong_advantage"}, {"score": 0.003640516896245813, "phrase": "commercial_geometric_modeling_and_animation_software_systems"}, {"score": 0.003343336516033681, "phrase": "ffd_paradigm"}, {"score": 0.003223494720348768, "phrase": "arbitrary_topology"}, {"score": 0.0031459887611258765, "phrase": "gpu_implementation"}, {"score": 0.0029965060407413898, "phrase": "volume-preserving_ffd."}, {"score": 0.0028541057064952876, "phrase": "expensive_nonlinear_optimization_techniques"}, {"score": 0.0027685531038981847, "phrase": "first_order_approximation"}, {"score": 0.0027019561451518768, "phrase": "small-scale_deformations"}, {"score": 0.0025423706961391034, "phrase": "multi-linear_nature"}, {"score": 0.0024963543716522087, "phrase": "volume_constraint"}, {"score": 0.0023346234464901978, "phrase": "volume-preserving_ffd._two_variants"}], "paper_keywords": ["Free form deformations (FFD)", " Volume preservation", " Graphics hardware", " Direct manipulation"], "paper_abstract": "Free-Form Deformation (FFD) is a well established technique for deforming arbitrary object shapes in space. Although more recent deformation techniques have been introduced, among them skeleton-based deformation and cage-based deformation, the simple and versatile nature of FFD is a strong advantage, and justifies its presence in nowadays leading commercial geometric modeling and animation software systems. Since its introduction in the late 1980s, many improvements have been proposed to the FFD paradigm, including control lattices of arbitrary topology, direct shape manipulation and GPU implementation. Several authors have addressed the problem of volume-preserving FFD. These previous approaches either make use of expensive nonlinear optimization techniques, or resort to first order approximation suitable only for small-scale deformations. In this paper we take advantage of the multi-linear nature of the volume constraint in order to derive a simple, exact and explicit solution to the problem of volume-preserving FFD. Two variants of the algorithm are given, without and with direct shape manipulation. Moreover, the linearity of our solution enables to implement it efficiently on GPU.", "paper_title": "Volume-preserving FFD for programmable graphics hardware", "paper_id": "WOS:000300585400001"}