{"auto_keywords": [{"score": 0.04274518365190484, "phrase": "strong_order_equivalence"}, {"score": 0.013186085757846184, "phrase": "logic_programs"}, {"score": 0.00481495049065317, "phrase": "strong_equivalence"}, {"score": 0.0047563776685277314, "phrase": "answer_set_programming"}, {"score": 0.004392565073466714, "phrase": "modular_programming"}, {"score": 0.004339108074589307, "phrase": "automated_optimization"}, {"score": 0.0041316803676012155, "phrase": "novel_notion"}, {"score": 0.0035887342563437935, "phrase": "preference_handling"}, {"score": 0.003545024951402818, "phrase": "necessary_and_sufficient_conditions"}, {"score": 0.0031942814007173254, "phrase": "so-called_soe_structure"}, {"score": 0.0031360786664165093, "phrase": "ordered_logic_program"}, {"score": 0.002690406375639144, "phrase": "studied_semantics"}, {"score": 0.002469032978674379, "phrase": "preferred_answer_sets"}, {"score": 0.0023652572260178637, "phrase": "computational_complexity"}, {"score": 0.002197379785587054, "phrase": "obtained_results"}, {"score": 0.0021049977753042253, "phrase": "first_time_-_simplification_methods"}], "paper_keywords": ["preferences", " answer set programming", " program equivalences", " complexity"], "paper_abstract": "Recently, strong equivalence for Answer Set Programming has been studied intensively, and was shown to be beneficial for modular programming and automated optimization. In this paper we define the novel notion of strong order equivalence for logic programs with preferences (ordered logic programs). Based on this definition we give, for several semantics for preference handling, necessary and sufficient conditions for programs to be strongly order equivalent. These results allow us also to associate a so-called SOE structure to each ordered logic program, such that two ordered logic programs are strongly order equivalent if and only if their SOE structures coincide. We also present the relationships among the studied semantics with respect to strong order equivalence, which differs considerably from their relationships with respect to preferred answer sets. Furthermore, we study the computational complexity of several reasoning tasks associated to strong order equivalence. Finally, based on the obtained results, we present - for the first time - simplification methods for ordered logic programs.", "paper_title": "Strong order equivalence", "paper_id": "WOS:000241947500003"}