{"auto_keywords": [{"score": 0.023020884375074033, "phrase": "tjswift_approach"}, {"score": 0.00481495049065317, "phrase": "using_sst-based_representation"}, {"score": 0.004697308822154191, "phrase": "internet_xml._compiling_documents"}, {"score": 0.004651057147690674, "phrase": "extensible_markup_language"}, {"score": 0.004605396281188362, "phrase": "xml"}, {"score": 0.004515004397496303, "phrase": "important_role"}, {"score": 0.004448471107649881, "phrase": "data_services"}, {"score": 0.004339744430169516, "phrase": "precise_use"}, {"score": 0.004296998284839309, "phrase": "search_engines"}, {"score": 0.00419195822011581, "phrase": "main_operation"}, {"score": 0.004150661689086371, "phrase": "xml_query_processing"}, {"score": 0.003815607281455725, "phrase": "efficient_query_service"}, {"score": 0.0037039021744127783, "phrase": "skillful_representation"}, {"score": 0.0036312482387007815, "phrase": "low_complexity"}, {"score": 0.0035954555250614197, "phrase": "high_precision_search_capabilities"}, {"score": 0.0034047882921717913, "phrase": "query_pattern"}, {"score": 0.0032241994368246065, "phrase": "structural_summary_tree"}, {"score": 0.0029490571526071016, "phrase": "better_time-saving_efficiency"}, {"score": 0.0027787638791664663, "phrase": "tjfast_algorithm"}, {"score": 0.0027112558159327607, "phrase": "swift"}, {"score": 0.0025668646315794947, "phrase": "efficient_xml_query_services"}, {"score": 0.0023245146355917626, "phrase": "hierarchical_information"}, {"score": 0.002278856202878812, "phrase": "new_index"}, {"score": 0.0021902063413831545, "phrase": "semantic_information"}, {"score": 0.0021259846592569407, "phrase": "template-based_indexing"}, {"score": 0.0021049977753042253, "phrase": "fast_data_searches"}], "paper_keywords": ["XML", " query tree pattern", " structural summary tree", " TJSwift", " TJFast"], "paper_abstract": "Compiling documents in extensible markup language (XML) plays an important role in accessing data services when both rapid response and the precise use of search engines are required. The main operation in XML query processing is to find nodes that match the given query tree pattern (QTP) in the document. An efficient query service should be based on a skillful representation that can support low complexity and high precision search capabilities. However, accessing too many useless nodes in order to match a query pattern is very time-consuming. This paper proposes a structural summary tree (SST) algorithm that is not only able to satisfy a query, but also has better time-saving efficiency compared with the existing twig-join algorithms such as the TJFast algorithm. A novel twig-join Swift (TJSwift) associated with adjacent linked (AL) lists for the provision of efficient XML query services is also proposed, in which queries can be versatile in terms of predicates. TJSwift can completely preserve hierarchical information, and the new index generated from SST is used to save semantic information. The TJSwift approach can provide template-based indexing for fast data searches. An experiment is also conducted for the evaluation of the TJSwift approach.", "paper_title": "A NOVEL TWIG-JOIN SWIFT USING SST-BASED REPRESENTATION FOR EFFICIENT RETRIEVAL OF INTERNET XML", "paper_id": "WOS:000359177900004"}