{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "surface_trees"}, {"score": 0.00450456611645112, "phrase": "layered_procedural_surface"}, {"score": 0.004242291530697285, "phrase": "limited_support"}, {"score": 0.004186105377259855, "phrase": "iterative_design"}, {"score": 0.004130660282810338, "phrase": "free-form_modeling"}, {"score": 0.003995226376780718, "phrase": "sketch-based_and_traditional_modeling_tools"}, {"score": 0.00378767277402891, "phrase": "sharp_creases"}, {"score": 0.003614895644619489, "phrase": "topological_holes"}, {"score": 0.0034963129868796033, "phrase": "local_parameterizations"}, {"score": 0.003314591878914152, "phrase": "dynamic_hierarchy"}, {"score": 0.0032489004068215407, "phrase": "procedural_operations"}, {"score": 0.0032058286587989234, "phrase": "linked_copy"}, {"score": 0.0031006232333900055, "phrase": "drag-and-drop_layer-based_editing"}, {"score": 0.002824005136794786, "phrase": "surface_tree"}, {"score": 0.0027312956497456374, "phrase": "csg_trees"}, {"score": 0.0026771333996253783, "phrase": "previous_hierarchical_surface"}, {"score": 0.002537880772794665, "phrase": "tree_nodes"}, {"score": 0.0024875444192203485, "phrase": "parameter_space"}, {"score": 0.0024545413637350765, "phrase": "lower_layers"}, {"score": 0.002250415129116109, "phrase": "underlying_surface_changes"}, {"score": 0.0021049977753042253, "phrase": "efficient_procedural_mesh_data_structure"}], "paper_keywords": [""], "paper_abstract": "We present a system for creating and manipulating layered procedural surface editing operations, which is motivated by the limited support for iterative design in free-form modeling. A combination of sketch-based and traditional modeling tools are used to design soft displacements, sharp creases, extrusions along 3D paths, and topological holes and handles. Using local parameterizations, these edits are combined in a dynamic hierarchy, enabling procedural operations like linked copy-and-paste and drag-and-drop layer-based editing. Such dynamic, layered \"surface compositing\" is formalized as a Surface Tree, an analog of CSG trees which generalizes previous hierarchical surface modeling techniques. By \"anchoring\" tree nodes in the parameter space of lower layers, our surface tree implementation can better preserve the semantics of an edit as the underlying surface changes. Details of our implementation are described, including an efficient procedural mesh data structure.", "paper_title": "Sketch-based procedural surface modeling and compositing using surface trees", "paper_id": "WOS:000255285500021"}