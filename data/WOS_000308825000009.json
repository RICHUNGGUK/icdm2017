{"auto_keywords": [{"score": 0.04880364979195164, "phrase": "cellular_neural_network"}, {"score": 0.01171144730364137, "phrase": "proposed_algorithm"}, {"score": 0.004815002692711699, "phrase": "hash"}, {"score": 0.004611369021812453, "phrase": "new_parallel_chaotic_hash_function"}, {"score": 0.004512814529823301, "phrase": "four-dimensional_cellular_neural_network"}, {"score": 0.0041840994704406866, "phrase": "chaotic_logistic_map"}, {"score": 0.003775803846431323, "phrase": "parallel_mode"}, {"score": 0.003635600104609725, "phrase": "significant_characteristics"}, {"score": 0.0030911702059432224, "phrase": "chaotic_cat_map"}, {"score": 0.002944284514509205, "phrase": "bit-wise_exclusive_or_operation"}, {"score": 0.0025031188149336257, "phrase": "middle_hash_value"}, {"score": 0.002436289099444074, "phrase": "generated_values"}, {"score": 0.002333044307949414, "phrase": "compression_function"}, {"score": 0.002222102813520547, "phrase": "computer_simulation"}, {"score": 0.0021049977753042253, "phrase": "secure_hash_function"}], "paper_keywords": ["Chaos", " Parallel mode", " Four-dimensional cellular neural network", " Four-dimensional cat map", " Hash function"], "paper_abstract": "A new parallel chaotic Hash function, based on four-dimensional cellular neural network, is proposed in this paper. The message is expanded by iterating chaotic logistic map and then divided into blocks with a length of 512 bits each. All blocks are processed in a parallel mode, which is one of the significant characteristics of the proposed algorithm. Each 512-bit block is divided into four 128-bit sub-blocks, each of which is further separated into four 32-bit values and then the four values are mixed into four new values generated by chaotic cat map. The obtained four new values are performed by the bit-wise exclusive OR operation with four initial values or previously generated four values, and then, they are used as the inputs of cellular neural network. By iterating cellular neural network, another four values as the middle Hash value are generated. The generated values of all blocks are inputted into the compression function to produce the final 128-bit Hash value. Theoretical analysis and computer simulation indicate that the proposed algorithm satisfies the requirements of a secure Hash function.", "paper_title": "Parallel chaotic Hash function construction based on cellular neural network", "paper_id": "WOS:000308825000009"}