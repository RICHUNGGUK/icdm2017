{"auto_keywords": [{"score": 0.031128290267786497, "phrase": "maximum_playback_delay"}, {"score": 0.00481495049065317, "phrase": "performance_tradeoffs"}, {"score": 0.004780926543714981, "phrase": "structured_peer"}, {"score": 0.004598027492787762, "phrase": "source_node"}, {"score": 0.004517210371632577, "phrase": "ordered_sequence"}, {"score": 0.0043289723873340255, "phrase": "k_clusters"}, {"score": 0.004018158280364063, "phrase": "different_cluster"}, {"score": 0.003989742144066683, "phrase": "t-c._time"}, {"score": 0.0036900720643677034, "phrase": "special_nodes"}, {"score": 0.0036123093557208492, "phrase": "higher_capacity"}, {"score": 0.0035487559182107112, "phrase": "multiple_packets"}, {"score": 0.0031451673059794236, "phrase": "d-ary_interior-disjoint_trees"}, {"score": 0.0030354183220734064, "phrase": "multi-tree_scheme"}, {"score": 0.0028881548838751684, "phrase": "size_buffers"}, {"score": 0.0027577972695911825, "phrase": "maximum_size"}, {"score": 0.002559501330352064, "phrase": "hypercube_scheme"}, {"score": 0.002325306388085057, "phrase": "arbitrary_n."}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Peer-to-peer systems", " Quality-of-service guarantees", " Streaming"], "paper_abstract": "We consider the following basic question: a source node wishes to stream an ordered sequence of packets to a collection of receivers, which are in K clusters. A node may send a packet to another node in its own cluster in one time step and to a node in a different cluster in T-C. time steps (T-C > 1). Each cluster has two special nodes. We assume that the source and the special nodes in each cluster have a higher capacity and thus can send multiple packets at each step, while all other nodes can both send and receive a packet at each step. We construct two (intra-cluster) data communication schemes, one based on multi-trees (using a collection of d-ary interior-disjoint trees) and the other based on hypercubes. The multi-tree scheme sustains streaming within a cluster with O(d log N) maximum playback delay and O(d log N) size buffers, while communicating with O(d) neighbors, where N is the maximum size of any cluster. We also show that this protocol is optimal when d = 2 or 3. The hypercube scheme sustains streaming within a cluster, with O(log(2)(N)) maximum playback delay and O(1) size buffers, while communicating with O(log(N)) neighbors, for arbitrary N. In addition, we extend our multi-tree scheme to work when receivers depart and arrive over time. We also evaluate our dynamic schemes using simulations. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Performance tradeoffs in structured peer to peer streaming", "paper_id": "WOS:000300033500001"}