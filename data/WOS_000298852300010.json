{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "weighted_tree"}, {"score": 0.004403480614319231, "phrase": "graph_g"}, {"score": 0.004306205029641728, "phrase": "nonnegative_integer_weight"}, {"score": 0.0039822874870125095, "phrase": "thousand_currency"}, {"score": 0.00389427992231721, "phrase": "thousand_currency_signu"}, {"score": 0.0037869901077566526, "phrase": "partition_g"}, {"score": 0.0037449033166879874, "phrase": "connected_components"}, {"score": 0.003561205990687285, "phrase": "total_weight"}, {"score": 0.002977835845437357, "phrase": "minimum_partition_problem"}, {"score": 0.002847540262784593, "phrase": "minimum_number"}, {"score": 0.0027690086059100495, "phrase": "maximum_partition_problem"}, {"score": 0.0026626797255348287, "phrase": "p-partition_problem"}, {"score": 0.002463088725513941, "phrase": "np"}, {"score": 0.0023941575109692336, "phrase": "series-parallel_graphs"}, {"score": 0.0023151088048303705, "phrase": "linear_time"}, {"score": 0.002176887956041267, "phrase": "first_polynomial-time_algorithm"}, {"score": 0.0021049977753042253, "phrase": "arbitrary_trees"}], "paper_keywords": ["Algorithm", " Dynamic programming", " Fast Fourier transform", " Graph partition", " Polynomial-time", " Subtree", " Tree"], "paper_abstract": "Assume that each vertex of a graph G is assigned a nonnegative integer weight and that l and u are given integers such that 0a parts per thousand currency signla parts per thousand currency signu. One wishes to partition G into connected components by deleting edges from G so that the total weight of each component is at least l and at most u. Such a partition is called an (l,u)-partition. We deal with three problems to find an (l,u)-partition of a given graph: the minimum partition problem is to find an (l,u)-partition with the minimum number of components; the maximum partition problem is defined analogously; and the p-partition problem is to find an (l,u)-partition with a given number p of components. All these problems are NP-hard even for series-parallel graphs, but are solvable in linear time for paths. In this paper, we present the first polynomial-time algorithm to solve the three problems for arbitrary trees.", "paper_title": "Partitioning a Weighted Tree into Subtrees with Weights in a Given Range", "paper_id": "WOS:000298852300010"}