{"auto_keywords": [{"score": 0.04342542707462748, "phrase": "scratchpad_memory"}, {"score": 0.03272920121718557, "phrase": "hardware_controller"}, {"score": 0.030826052653415044, "phrase": "custom_instructions"}, {"score": 0.00481495049065317, "phrase": "statistical_information"}, {"score": 0.004717125879761534, "phrase": "instruction_scratchpad_memory"}, {"score": 0.004668957916795845, "phrase": "embedded_system"}, {"score": 0.004367581653370531, "phrase": "processor-based_embedded_system"}, {"score": 0.004064653055162238, "phrase": "instruction_cache"}, {"score": 0.004002513373645485, "phrase": "target_system_dynamically"}, {"score": 0.003921129887153952, "phrase": "scratchpad_code_segments"}, {"score": 0.0037057255600764475, "phrase": "energy_efficiency"}, {"score": 0.0034663083890589235, "phrase": "heuristic_algorithm"}, {"score": 0.003176333519010176, "phrase": "temporal_relationships"}, {"score": 0.0027223626424366207, "phrase": "main_memory"}, {"score": 0.00263965046277432, "phrase": "novel_heuristic_algorithm"}, {"score": 0.002393907896783117, "phrase": "realistic_benchmarks"}, {"score": 0.0023694065215394593, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "traditional_cache_system"}], "paper_keywords": ["embedded system", " scratchpad memory"], "paper_abstract": "A method to both reduce energy and improve performance in a processor-based embedded system is described in this paper. Comprising of a scratchpad memory instead of an instruction cache, the target system dynamically (at runtime) copies into the scratchpad code segments that are determined to be beneficial (in terms of energy efficiency and/or speed) to execute from the scratchpad. We develop a heuristic algorithm to select such code segments based on a metric, called concomitance. Concomitance is derived from the temporal relationships of instructions. A hardware controller is designed and implemented for managing the scratchpad memory. Strategically placed custom instructions in the program inform the hardware controller when to copy instructions from the main memory to the scratchpad. A novel heuristic algorithm is implemented for determining locations within the program where to insert these custom instructions. For a set of realistic benchmarks, experimental results indicate the method uses 41.9% lower energy (on average) and improves performance by 40.0% (on average) when compared to a traditional cache system which is identical in size.", "paper_title": "Exploiting statistical information for implementation of instruction scratchpad memory in embedded system", "paper_id": "WOS:000239367100004"}