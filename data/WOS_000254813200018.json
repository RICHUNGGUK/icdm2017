{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "common_phrase_index"}, {"score": 0.006660829315728218, "phrase": "overall_and_large_queries"}, {"score": 0.004458722048888919, "phrase": "efficient_index_structure"}, {"score": 0.0043738432231020885, "phrase": "phrase_queries"}, {"score": 0.004076157223660074, "phrase": "previous_index_structures"}, {"score": 0.003947601392882997, "phrase": "better_query_efficiency"}, {"score": 0.0038973170902076707, "phrase": "modest_extra_storage_cost"}, {"score": 0.003494866798828308, "phrase": "dynamic_nature"}, {"score": 0.003450329424861292, "phrase": "common_word"}, {"score": 0.003362944428837724, "phrase": "experimental_evaluation"}, {"score": 0.0030741085942960814, "phrase": "query_time"}, {"score": 0.0029391032882625473, "phrase": "long_phrases"}, {"score": 0.0028463059289874637, "phrase": "auxiliary_nextword_index"}, {"score": 0.0026523079380037706, "phrase": "inverted_index"}, {"score": 0.0023327506323251074, "phrase": "dynamic_update_feature"}, {"score": 0.0022302306304023602, "phrase": "time_efficiency"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["indexing", " query evaluation", " phrase query evaluation", " inverted index", " auxiliary nextword index", " common phrase index"], "paper_abstract": "In this paper, we propose a common phrase index as an efficient index structure to support phrase queries in a very large text database. Our structure is an extension of previous index structures for phrases and achieves better query efficiency with modest extra storage cost. Further improvement in efficiency can be attained by implementing our index according to our observation of the dynamic nature of common word set. In experimental evaluation, a common phrase index using 255 common words has an improvement of about 11% and 62% in query time for the overall and large queries (queries of long phrases) respectively over an auxiliary nextword index. Moreover, it has only about 19% extra storage cost. Compared with an inverted index, our improvement is about 72% and 87% for the overall and large queries respectively. We also propose to implement a common phrase index with dynamic update feature. Our experiments show that more improvement in time efficiency can be achieved. (c) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient phrase querying with common phrase index", "paper_id": "WOS:000254813200018"}