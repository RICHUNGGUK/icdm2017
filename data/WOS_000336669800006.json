{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "experimental_evaluation_and_selection_of_data_consistency_mechanisms"}, {"score": 0.004756805752518494, "phrase": "hard_real-time_applications"}, {"score": 0.004614483128885678, "phrase": "multicore_platforms"}, {"score": 0.004476399615305783, "phrase": "real-time_embedded_applications"}, {"score": 0.003988180913997414, "phrase": "different_cores"}, {"score": 0.0037075456471849892, "phrase": "mutually_exclusive_way"}, {"score": 0.003640516896245813, "phrase": "worst_case"}, {"score": 0.0034049123167891955, "phrase": "possible_protocols"}, {"score": 0.0033637374697995616, "phrase": "mutual_exclusion"}, {"score": 0.003089080923888397, "phrase": "possible_protection_mechanisms"}, {"score": 0.00303319936111073, "phrase": "code_implementations"}, {"score": 0.0029965060407413898, "phrase": "real-time_operating_systems"}, {"score": 0.0029244418026475832, "phrase": "multicore_platform"}, {"score": 0.0027854565462509095, "phrase": "different_mechanisms"}, {"score": 0.002735052488172277, "phrase": "experimental_evaluation"}, {"score": 0.002511600086227215, "phrase": "heuristic_algorithm"}, {"score": 0.0024511688853030168, "phrase": "optimal_combination"}, {"score": 0.002392188222609101, "phrase": "shared_resources"}, {"score": 0.0023346234464901978, "phrase": "time_constraints"}, {"score": 0.0022101055924375725, "phrase": "optimization_procedure"}, {"score": 0.0021569129153653777, "phrase": "synthetic_systems"}, {"score": 0.0021049977753042253, "phrase": "industrial_case_studies"}], "paper_keywords": ["Data consistency", " flow preservation", " hard real-time", " multicore", " multiprocessor stack resource policy (MSRP)", " multiprocessor priority ceiling protocol (MPCP)", " wait-free", " optimization"], "paper_abstract": "Multicore platforms are increasingly used in real-time embedded applications. In control systems, including automotive, avionics, and automation, resources shared by tasks on different cores need to be protected by mechanisms that guarantee access in a mutually exclusive way with bounded worst case blocking time. The evaluation of the tradeoffs among the possible protocols for mutual exclusion requires an estimate of their implementation overheads. In this paper, we summarize the possible protection mechanisms and provide code implementations in real-time operating systems executing on a multicore platform. We discuss the tradeoffs among the different mechanisms based on experimental evaluation of their memory and timing overheads as well as their impact on system schedulability. We propose a heuristic algorithm to select the optimal combination of mechanisms for shared resources in systems with time constraints to minimize their memory requirements. The effectiveness of the optimization procedure is demonstrated by synthetic systems as well as industrial case studies.", "paper_title": "Experimental Evaluation and Selection of Data Consistency Mechanisms for Hard Real-Time Applications on Multicore Platforms", "paper_id": "WOS:000336669800006"}