{"auto_keywords": [{"score": 0.043891862951523704, "phrase": "soft_errors"}, {"score": 0.010763009986302323, "phrase": "shoestring"}, {"score": 0.004709193603747991, "phrase": "aggressive_technology_scaling"}, {"score": 0.004605748839642513, "phrase": "ever_increasing_budget"}, {"score": 0.004565007074039171, "phrase": "cheaper_and_faster_transistors"}, {"score": 0.004327981760540394, "phrase": "individual_device_reliability"}, {"score": 0.004066898031169739, "phrase": "new_era"}, {"score": 0.0034963129868796033, "phrase": "tighter_profit_margins"}, {"score": 0.003465350958971198, "phrase": "reliable_operation"}, {"score": 0.0031562971707460802, "phrase": "high_soft_error_coverage"}, {"score": 0.0030459283281463953, "phrase": "commodity_processors"}, {"score": 0.0030189426536422577, "phrase": "\"shoestring\"_reliability_budgets"}, {"score": 0.0029394074636168435, "phrase": "compile_time"}, {"score": 0.0027495914857929584, "phrase": "statistically-vulnerable_portions"}, {"score": 0.0026534064006291853, "phrase": "instruction_duplication"}, {"score": 0.002515384834484012, "phrase": "soft_error"}, {"score": 0.002438203996977464, "phrase": "user-visible_faults"}, {"score": 0.002395166073437286, "phrase": "symptomatic_behavior"}, {"score": 0.0022304616068189575, "phrase": "symptom-only_approach"}, {"score": 0.0021910825909008946, "phrase": "overall_user-visible_failure_rate"}, {"score": 0.002142832962924139, "phrase": "reliability_improvement"}, {"score": 0.0021049977753042253, "phrase": "modest_performance_overhead"}], "paper_keywords": ["Design", " Experimentation", " Reliability", " Compiler Analysis", " Error Detection", " Fault Injection"], "paper_abstract": "Aggressive technology scaling provides designers with an ever increasing budget of cheaper and faster transistors. Unfortunately, this trend is accompanied by a decline in individual device reliability as transistors become increasingly susceptible to soft errors. We are quickly approaching a new era where resilience to soft errors is no longer a luxury that can be reserved for just processors in high-reliability, mission-critical domains. Even processors used in mainstream computing will soon require protection. However, due to tighter profit margins, reliable operation for these devices must come at little or no cost. This paper presents Shoestring, a minimally invasive software solution that provides high soft error coverage with very little overhead, enabling its deployment even in commodity processors with \"shoestring\" reliability budgets. Leveraging intelligent analysis at compile time, and exploiting low-cost, symptom-based error detection, Shoestring is able to focus its efforts on protecting statistically-vulnerable portions of program code. Shoestring effectively applies instruction duplication to protect only those segments of code that, when subjected to a soft error, are likely to result in user-visible faults without first exhibiting symptomatic behavior. Shoestring is able to recover from an additional 33.9% of soft errors that are undetected by a symptom-only approach, achieving an overall user-visible failure rate of 1.6%. This reliability improvement comes at a modest performance overhead of 15.8%.", "paper_title": "Shoestring: Probabilistic Soft Error Reliability on the Cheap", "paper_id": "WOS:000275926700032"}