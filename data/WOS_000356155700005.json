{"auto_keywords": [{"score": 0.03266556095890514, "phrase": "range_fix"}, {"score": 0.00481495049065317, "phrase": "interactive_error_resolution_for_software_configuration"}, {"score": 0.004718897469501381, "phrase": "ill-formed_configurations"}, {"score": 0.004671588539217021, "phrase": "highly_configurable_software"}, {"score": 0.004509694461067052, "phrase": "available_options"}, {"score": 0.003576286811853861, "phrase": "desirable_fix"}, {"score": 0.0033832583769880576, "phrase": "non-boolean_constraints"}, {"score": 0.0031208772639433145, "phrase": "novel_concept"}, {"score": 0.0030431198971423937, "phrase": "software_configuration"}, {"score": 0.0026688629249775925, "phrase": "range_fixes"}, {"score": 0.002628747284714371, "phrase": "violated_constraint"}, {"score": 0.0024993218789131437, "phrase": "constraint_interactions"}, {"score": 0.002437012847684331, "phrase": "nine_open_source_projects"}, {"score": 0.0022937210378944457, "phrase": "mostly_simple_yet_complete_sets"}, {"score": 0.002137137933768807, "phrase": "configuration_systems"}], "paper_keywords": ["Consistency management", " error resolution", " range fix", " software configuration"], "paper_abstract": "To prevent ill-formed configurations, highly configurable software often allows defining constraints over the available options. As these constraints can be complex, fixing a configuration that violates one or more constraints can be challenging. Although several fix-generation approaches exist, their applicability is limited because (1) they typically generate only one fix or a very long fix list, difficult for the user to identify the desirable fix; and (2) they do not fully support non-Boolean constraints, which contain arithmetic, inequality, and string operators. This paper proposes a novel concept, range fix, for software configuration. A range fix specifies the options to change and the ranges of values for these options. We also design an algorithm that automatically generates range fixes for a violated constraint. We have evaluated our approach with three different strategies for handling constraint interactions, on data from nine open source projects over two configuration platforms. The evaluation shows that our notion of range fix leads to mostly simple yet complete sets of fixes, and our algorithm is able to generate fixes within one second for configuration systems with a few thousands options and constraints.", "paper_title": "Range Fixes: Interactive Error Resolution for Software Configuration", "paper_id": "WOS:000356155700005"}