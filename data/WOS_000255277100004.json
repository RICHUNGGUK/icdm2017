{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "communication_resources"}, {"score": 0.04960298207468317, "phrase": "integrated_architecture"}, {"score": 0.04743983135858139, "phrase": "application_subsystems"}, {"score": 0.0356535846972009, "phrase": "virtual_networks"}, {"score": 0.03267330109651519, "phrase": "temporal_properties"}, {"score": 0.004735414083933722, "phrase": "integrated_architectures"}, {"score": 0.004688321299229397, "phrase": "automotive_and_avionic_domain_promise"}, {"score": 0.004580243025274209, "phrase": "better_coordination"}, {"score": 0.00450456611645112, "phrase": "federated_systems"}, {"score": 0.004400705158735729, "phrase": "system's_communication_resources"}, {"score": 0.004342430078306461, "phrase": "single_physical_network"}, {"score": 0.004270665568018583, "phrase": "multiple_application_subsystems"}, {"score": 0.00420008205995114, "phrase": "computational_resources"}, {"score": 0.004035385456773232, "phrase": "node_computer"}, {"score": 0.003981928669805484, "phrase": "multiple_software_components"}, {"score": 0.0038900709793274484, "phrase": "seamless_system_integration"}, {"score": 0.0038642157757169315, "phrase": "unintended_side_effects"}, {"score": 0.003725042075410585, "phrase": "software_components"}, {"score": 0.003614895644619489, "phrase": "shared_resources"}, {"score": 0.003531474887552889, "phrase": "decos_integrated_architecture"}, {"score": 0.003404244237372396, "phrase": "communication_system"}, {"score": 0.0033256684464109242, "phrase": "underlying_time-triggered_physical_network_exhibit"}, {"score": 0.0030290342352603124, "phrase": "software_component"}, {"score": 0.0028052155436760528, "phrase": "temporal_partitioning"}, {"score": 0.0026771333996253783, "phrase": "experimental_evidence"}, {"score": 0.002470987929071079, "phrase": "rigid_temporal_partitioning"}, {"score": 0.002397833600728684, "phrase": "performance_requirements"}, {"score": 0.0023739321566540682, "phrase": "present-day_automotive_applications"}, {"score": 0.002183776628088228, "phrase": "experimental_framework"}, {"score": 0.002112040736349822, "phrase": "time_division_multiple_access"}], "paper_keywords": ["system architectures", " real-time and embedded systems", " system integration and implementation", " fault tolerance", " computer network performance", " distributed architectures", " infrastructure protection."], "paper_abstract": "Integrated architectures in the automotive and avionic domain promise improved resource utilization and enable a better coordination of application subsystems compared to federated systems. An integrated architecture shares the system's communication resources by using a single physical network for exchanging messages of multiple application subsystems. Similarly, the computational resources ( for example, memory and CPU time) of each node computer are available to multiple software components. In order to support a seamless system integration without unintended side effects in such an integrated architecture, it is important to ensure that the software components do not interfere through the use of these shared resources. For this reason, the DECOS integrated architecture encapsulates application subsystems and their constituting software components. At the level of the communication system, virtual networks on top of an underlying time-triggered physical network exhibit predefined temporal properties ( that is, bandwidth, latency, and latency jitter). Due to encapsulation, the temporal properties of messages sent by a software component are independent from the behavior of other software components, in particular from those within other application subsystems. This paper presents the mechanisms for the temporal partitioning of communication resources in the Dependable Embedded Components and Systems ( DECOS) integrated architecture. Furthermore, experimental evidence is provided in order to demonstrate that the messages sent by one software component do not affect the temporal properties of messages exchanged by other software components. Rigid temporal partitioning is achievable while at the same time meeting the performance requirements imposed by present-day automotive applications and those envisioned for the future ( for example, X-by-wire). For this purpose, we use an experimental framework with an implementation of virtual networks on top of a Time Division Multiple Access ( TDMA)-controlled Ethernet network.", "paper_title": "Temporal partitioning of communication resources in an integrated architecture", "paper_id": "WOS:000255277100004"}