{"auto_keywords": [{"score": 0.04486450781977006, "phrase": "sla_penalty_cost"}, {"score": 0.04448558694741613, "phrase": "infrastructure_cost"}, {"score": 0.044109718604278855, "phrase": "action_cost"}, {"score": 0.015582933475847684, "phrase": "cpu-bound_database_services"}, {"score": 0.00481495049065317, "phrase": "virtualized_resources"}, {"score": 0.0047306078475683865, "phrase": "virtualization-based_multi-tenant_database_consolidation"}, {"score": 0.0040886093072615, "phrase": "diverse_tenant_workloads"}, {"score": 0.003742554019950264, "phrase": "service_level_agreement"}, {"score": 0.003709608036523809, "phrase": "sla"}, {"score": 0.003676926952533304, "phrase": "penalty_cost"}, {"score": 0.0035178323426661626, "phrase": "database_systems"}, {"score": 0.0034714553759044664, "phrase": "dbaas_providers"}, {"score": 0.00344087639309216, "phrase": "tenants'_service_level_agreement"}, {"score": 0.003350740737336966, "phrase": "performance_implications"}, {"score": 0.003191560305761507, "phrase": "smartsla"}, {"score": 0.0029212075318449616, "phrase": "modeling_module"}, {"score": 0.00289546142998427, "phrase": "machine_learning_techniques"}, {"score": 0.002733539375462443, "phrase": "different_resource_allocations"}, {"score": 0.0026736945502820303, "phrase": "learned_model"}, {"score": 0.0025692477422626678, "phrase": "resource_allocation"}, {"score": 0.0025241429061867633, "phrase": "potential_reduction"}, {"score": 0.002320449502337321, "phrase": "ycsb_benchmarks"}, {"score": 0.0022999859758286423, "phrase": "dynamic_workload_trace"}, {"score": 0.002279702500235741, "phrase": "multiple_database_tenants"}, {"score": 0.0022496114364599328, "phrase": "experimental_results"}, {"score": 0.002161695357601592, "phrase": "total_cost"}, {"score": 0.0021426288417854987, "phrase": "time-varying_workloads"}], "paper_keywords": ["Cloud computing", " virtualization", " database systems", " multitenant databases"], "paper_abstract": "Virtualization-based multi-tenant database consolidation is an important technique for database-as-a-service (DBaaS) providers to minimize their total cost which is composed of SLA penalty cost, infrastructure cost and action cost. Due to the bursty and diverse tenant workloads, over-provisioning for the peak or under-provisioning for the off-peak often results in either infrastructure cost or service level agreement (SLA) penalty cost. Moreover, although the process of scaling out database systems will help DBaaS providers satisfy tenants' service level agreement, its indiscriminate use has performance implications or incurs action cost. In this paper, we propose SmartSLA, a cost-sensitive virtualized resource management system for CPU-bound database services which is composed of two modules. The system modeling module uses machine learning techniques to learn a model for predicting the SLA penalty cost for each tenant under different resource allocations. Based on the learned model, the resource allocating module dynamically adjusts the resource allocation by weighing the potential reduction of SLA penalty cost against increase of infrastructure cost and action cost. SmartSLA is evaluated by using the TPC-W and modified YCSB benchmarks with dynamic workload trace and multiple database tenants. The experimental results show that SmartSLA is able to minimize the total cost under time-varying workloads compared to the other cost-insensitive approaches.", "paper_title": "SmartSLA: Cost-Sensitive Management of Virtualized Resources for CPU-Bound Database Services", "paper_id": "WOS:000352728200020"}