{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "xml_functional_dependency_violations"}, {"score": 0.013977698941884338, "phrase": "xml_document"}, {"score": 0.004567596860086148, "phrase": "smallest_modifications"}, {"score": 0.004487989502479992, "phrase": "repair_cost"}, {"score": 0.004332894955218135, "phrase": "leaf_node"}, {"score": 0.004056334733843591, "phrase": "total_weight"}, {"score": 0.004003169429008801, "phrase": "modified_nodes"}, {"score": 0.003916098498242888, "phrase": "optimum_repair"}, {"score": 0.0038141000450978746, "phrase": "minimum_cost"}, {"score": 0.0036660436272785476, "phrase": "lower_and_upper_bounds"}, {"score": 0.0036179751816682454, "phrase": "optimum_xml_repair_problem"}, {"score": 0.003372019835750424, "phrase": "optimum_repairs"}, {"score": 0.0032848149804706214, "phrase": "np"}, {"score": 0.003170520716404193, "phrase": "fixed_dtd"}, {"score": 0.00308788133472785, "phrase": "functional_dependencies"}, {"score": 0.00284009509859163, "phrase": "efficient_two-step_heuristic_method"}, {"score": 0.0027417911324611917, "phrase": "initial_violations"}, {"score": 0.002646880721119838, "phrase": "conflict_hypergraph"}, {"score": 0.0025892330566358503, "phrase": "remaining_conflicts"}, {"score": 0.0025217065652145443, "phrase": "violating_nodes"}, {"score": 0.0024024377855956136, "phrase": "new_violations"}, {"score": 0.0023090525096074264, "phrase": "synthetic_and_real-life_data"}, {"score": 0.0021613897794439227, "phrase": "data_quality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["XML", " Functional dependency", " Repair", " Data quality"], "paper_abstract": "We study the problem of repairing XML functional dependency violations by making the smallest modifications in terms of repair cost. Our cost model assigns a weight to each leaf node in the XML document, and the cost of a repair is measured by the total weight of the modified nodes. We define an optimum repair as the repair with the minimum cost among all of the repairs. We prove lower and upper bounds for the optimum XML repair problem. We show that, in practice, it is beyond reach to find the optimum repairs; this problem is already NP-complete for a setting with a fixed DTD, a fixed set of functional dependencies, and equal weights for all of the nodes in the XML document. Instead, we provide an efficient two-step heuristic method to repair XML functional dependency violations. First, the initial violations are captured and fixed by leveraging the conflict hypergraph. Second, the remaining conflicts are resolved by modifying the violating nodes and their related nodes called determinants in a way that guarantees no new violations. We implement our method and evaluate it on synthetic and real-life data. The experimental results demonstrate that our algorithm scales well and is effective at improving data quality. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Repairing XML functional dependency violations", "paper_id": "WOS:000295760600014"}