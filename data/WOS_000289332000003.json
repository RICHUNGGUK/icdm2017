{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_idw_interpolation_algorithm"}, {"score": 0.004752221133109136, "phrase": "linux_cluster-based_parallel_gis."}, {"score": 0.00462919213721188, "phrase": "open-source_parallel_gis"}, {"score": 0.004450568197899267, "phrase": "linux_cluster"}, {"score": 0.0041136473765874815, "phrase": "working_model"}, {"score": 0.004007083686875716, "phrase": "parallel_pattern"}, {"score": 0.0038692638652494697, "phrase": "parallelization_patterns"}, {"score": 0.0037198532511087566, "phrase": "serial_idw_interpolation_algorithm"}, {"score": 0.003687439449869248, "phrase": "grass_gis"}, {"score": 0.003545024951402821, "phrase": "specific_parallel_idw_interpolation_algorithm"}, {"score": 0.0034835017385881385, "phrase": "single_process"}, {"score": 0.003453140302583322, "phrase": "multiple_data"}, {"score": 0.0034230438539913205, "phrase": "spmd"}, {"score": 0.003108735847242537, "phrase": "related_information"}, {"score": 0.0030017207229983385, "phrase": "slave_nodes"}, {"score": 0.002823207272381655, "phrase": "serial_algorithm"}, {"score": 0.002749980017065414, "phrase": "master_node"}, {"score": 0.0021993066642488237, "phrase": "similar_algorithms"}, {"score": 0.0021422271362195734, "phrase": "parallel_algorithm"}, {"score": 0.0021049977753042253, "phrase": "processing_time"}], "paper_keywords": ["IDW interpolation algorithm", " PCs cluster", " GRASS GIS", " MPI", " LiDAR"], "paper_abstract": "To design and implement an open-source parallel GIS (OP-GIS) based on a Linux cluster, the parallel inverse distance weighting (IOW) interpolation algorithm has been chosen as an example to explore the working model and the principle of algorithm parallel pattern (APP), one of the parallelization patterns for OP-GIS. Based on an analysis of the serial IDW interpolation algorithm of GRASS GIS, this paper has proposed and designed a specific parallel IDW interpolation algorithm, incorporating both single process, multiple data (SPMD) and master/slave (MIS) programming modes. The main steps of the parallel IDW interpolation algorithm are: (1) the master node packages the related information, and then broadcasts it to the slave nodes; (2) each node calculates its assigned data extent along one row using the serial algorithm; (3) the master node gathers the data from all nodes; and (4) iterations continue until all rows have been processed, after which the results are outputted. According to the experiments performed in the course of this work, the parallel IDW interpolation algorithm can attain an efficiency greater than 0.93 compared with similar algorithms, which indicates that the parallel algorithm can greatly reduce processing time and maximize speed and performance. (c) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Explorations of the implementation of a parallel IDW interpolation algorithm in a Linux cluster-based parallel GIS", "paper_id": "WOS:000289332000003"}