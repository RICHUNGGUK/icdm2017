{"auto_keywords": [{"score": 0.03345462709365391, "phrase": "inrob"}, {"score": 0.015719716506582538, "phrase": "real-time_embedded_software"}, {"score": 0.009957299313156497, "phrase": "timing_constraints"}, {"score": 0.00474283953918251, "phrase": "digital_technologies"}, {"score": 0.004671803485255806, "phrase": "significant_reduction"}, {"score": 0.004584495834677719, "phrase": "hardware_failures"}, {"score": 0.004498812433096501, "phrase": "growing_complexity"}, {"score": 0.004414723336530117, "phrase": "embedded_software"}, {"score": 0.004267287100135339, "phrase": "software_faults"}, {"score": 0.0042351951710402425, "phrase": "critical_systems"}, {"score": 0.004124754315882517, "phrase": "highly_competitive_market"}, {"score": 0.00409372989087314, "phrase": "software_intensive_subsystems"}, {"score": 0.0040171817997972335, "phrase": "different_suppliers"}, {"score": 0.0037674258625824113, "phrase": "collaborative_service"}, {"score": 0.0036969566358089644, "phrase": "subsystems_integration_support_verification"}, {"score": 0.0035599338383885447, "phrase": "subsystems_interfaces"}, {"score": 0.0035198224928307854, "phrase": "increasing_complexity"}, {"score": 0.0034933321145368336, "phrase": "tight_coupling"}, {"score": 0.003467040410632942, "phrase": "real-time_subsystems"}, {"score": 0.0033765627434550432, "phrase": "ad-hoc_approach"}, {"score": 0.0031905286720361145, "phrase": "integration_testing_approach"}, {"score": 0.0028919522313933525, "phrase": "formal_models"}, {"score": 0.0027741761880779535, "phrase": "test_cases"}, {"score": 0.002631172352670227, "phrase": "interconnected_subsystems"}, {"score": 0.0026014984513015368, "phrase": "proposed_formalism"}, {"score": 0.0025819015229390663, "phrase": "automatic_test_cases"}, {"score": 0.0025335509856200433, "phrase": "relevant_properties"}, {"score": 0.0025049752758014602, "phrase": "service_behavioral_model"}, {"score": 0.002458061764297103, "phrase": "critical_properties"}, {"score": 0.0024395426929046415, "phrase": "aerospace_systems"}, {"score": 0.0023490143960001675, "phrase": "integration_testing_process"}, {"score": 0.002322515212654509, "phrase": "telescope_onboard"}, {"score": 0.0022363199197710385, "phrase": "existing_testing_tools"}, {"score": 0.0022110892229209407, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Integration testing", " Interoperability test", " Service model", " Robustness test", " Automatic test case generation", " Timing deviations"], "paper_abstract": "Advances in digital technologies have contributed for significant reduction in accidents caused by hardware failures. However, the growing complexity of functions performed by embedded software has increased the number of accidents caused by software faults in critical systems. Moreover, due to the highly competitive market, software intensive subsystems are usually developed by different suppliers. Often these subsystems are required to interact with each other in order to provide a collaborative service. Testing approaches for subsystems integration support verification of the quality of service, focusing on the subsystems interfaces. The increasing complexity and tight coupling of real-time subsystems make integration testing unmanageable. The ad-hoc approach for testing is becoming less effective and more expensive. This article presents an integration testing approach denominated InRob, designed to verify the interoperability and robustness related to timing constraints of real-time embedded software. InRob guides the construction of services, based on formal models, aiming at the specifications of interoperability and robustness of test cases related to delays and time-outs of the messages exchanged in the interfaces of interconnected subsystems. The proposed formalism supports automatic test cases generation by verifying the relevant properties in the service behavioral model. As timing constraints are critical properties of aerospace systems, the feasibility of InRob is showed in the integration testing process of a telescope onboard in a satellite. The process is instantiated with existing testing tools and the case study is the software embedded in the telescope. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "InRob: An approach for testing interoperability and robustness of real-time embedded software", "paper_id": "WOS:000297892900002"}