{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "numeric_abstract_domains"}, {"score": 0.004704187604192605, "phrase": "sufficient_program_conditions"}, {"score": 0.004464156619275582, "phrase": "automatic_inference"}, {"score": 0.004412494693940597, "phrase": "sufficient_preconditions"}, {"score": 0.004361428012479218, "phrase": "abstract_interpretation"}, {"score": 0.004187284711626886, "phrase": "under-approximating_backward_analysis"}, {"score": 0.004067152645111547, "phrase": "numeric_properties"}, {"score": 0.003726967166630923, "phrase": "new_under-approximating_backward_transfer_functions"}, {"score": 0.0035989687070420977, "phrase": "non-deterministic_expressions"}, {"score": 0.0034956560177000656, "phrase": "lower_widenings"}, {"score": 0.003336468343971626, "phrase": "effective_under-approximation"}, {"score": 0.003129317057177867, "phrase": "disjunctive_completion_nor_domain_complementation"}, {"score": 0.0030042210975126616, "phrase": "sufficient_conditions"}, {"score": 0.002817639725689939, "phrase": "safe_states"}, {"score": 0.0025967927629150715, "phrase": "proof-of-concept_prototype_implementation"}, {"score": 0.002205560249972527, "phrase": "worthy_avenue"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Abstract interpretation", " Backward analysis", " Numeric abstract domains", " Static analysis", " Under-approximation"], "paper_abstract": "In this article, we discuss the automatic inference of sufficient preconditions by abstract interpretation and sketch the construction of an under-approximating backward analysis. We focus on numeric properties of variables and revisit three classic numeric abstract domains: intervals, octagons, and polyhedra, with new under-approximating backward transfer functions, including the support for non-deterministic expressions, as well as lower widenings to handle loops. We show that effective under-approximation is possible natively in these domains without necessarily resorting to disjunctive completion nor domain complementation. Applications include the derivation of sufficient conditions for a program to never step outside an envelope of safe states, or dually to force it to eventually fail. We built a proof-of-concept prototype implementation and tried it on simple examples. Our construction and our implementation are very preliminary and mostly untried: our hope is to convince the reader that this constitutes a worthy avenue of research. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Backward under-approximations in numeric abstract domains to automatically infer sufficient program conditions", "paper_id": "WOS:000350618100005"}