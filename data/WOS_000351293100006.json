{"auto_keywords": [{"score": 0.04755154299589266, "phrase": "workflow-aware_storage_system"}, {"score": 0.015100361751092039, "phrase": "potential_gains"}, {"score": 0.00414830454375092, "phrase": "workflow-based_applications"}, {"score": 0.003983016985197904, "phrase": "irregular_and_application-dependent_data_access_patterns"}, {"score": 0.003850299959557491, "phrase": "existing_generic_storage_systems"}, {"score": 0.0037219886365287085, "phrase": "optimization_opportunities"}, {"score": 0.00357362651129581, "phrase": "conflicting_optimizations"}, {"score": 0.003525493807130663, "phrase": "even_conflicting_design_decisions"}, {"score": 0.0034545033623115634, "phrase": "storage_system_level"}, {"score": 0.0033167679667625667, "phrase": "suboptimal_scheduling_decisions"}, {"score": 0.0032061793819537633, "phrase": "detailed_data_location_information"}, {"score": 0.003057503388220776, "phrase": "storage_system"}, {"score": 0.0029355502535757696, "phrase": "limit_study"}, {"score": 0.0026157259734105, "phrase": "data_location"}, {"score": 0.0025456716198597627, "phrase": "synthetic_benchmarks"}, {"score": 0.0025113494092413604, "phrase": "real_applications"}, {"score": 0.0023948164534491273, "phrase": "significant_performance_gains"}, {"score": 0.002237637525225501, "phrase": "vanilla_distributed_storage_system"}, {"score": 0.0021049977753042253, "phrase": "possible_file-level_optimizations"}], "paper_keywords": ["Large-scale storage system", " Workflow-aware", " Storage system", " Workflow runtime engine"], "paper_abstract": "This article evaluates the potential gains a workflow-aware storage system can bring. Two observations make us believe such storage system is crucial to efficiently support workflow-based applications: First, workflows generate irregular and application-dependent data access patterns. These patterns render existing generic storage systems unable to harness all optimization opportunities as this often requires enabling conflicting optimizations or even conflicting design decisions at the storage system level. Second, most workflow runtime engines make suboptimal scheduling decisions as they lack the detailed data location information that is generally hidden by the storage system. This paper presents a limit study that evaluates the potential gains from building a workflow-aware storage system that supports per-file access optimizations and exposes data location. Our evaluation using synthetic benchmarks and real applications shows that a workflow-aware storage system can bring significant performance gains: up to 3x performance gains compared to a vanilla distributed storage system deployed on the same resources yet unaware of the possible file-level optimizations.", "paper_title": "The Case for Workflow-Aware Storage:An Opportunity Study", "paper_id": "WOS:000351293100006"}