{"auto_keywords": [{"score": 0.033340417945684854, "phrase": "cut_selection"}, {"score": 0.01189284370699676, "phrase": "almmap"}, {"score": 0.00481495049065317, "phrase": "adaptive_logic_modules"}, {"score": 0.0047563776685277314, "phrase": "modern_field_programmable_gate_arrays"}, {"score": 0.004698515403844564, "phrase": "altera"}, {"score": 0.004641351004344458, "phrase": "stratix_series"}, {"score": 0.004529093447865156, "phrase": "adaptive_logic_module"}, {"score": 0.004473995010807719, "phrase": "alm"}, {"score": 0.00428629884026304, "phrase": "area_advantages"}, {"score": 0.00410645614623058, "phrase": "single_logic_function"}, {"score": 0.0036777702949712457, "phrase": "alm_mapping_algorithm"}, {"score": 0.003501846136829077, "phrase": "bounded_depth"}, {"score": 0.0033961782274326948, "phrase": "traditional_iterative_cut-based_mapping_flow"}, {"score": 0.00327356326590461, "phrase": "bounded_depth_mapping_generation"}, {"score": 0.0032336801561165113, "phrase": "dynamic_area_recovery"}, {"score": 0.0030601162942933665, "phrase": "area_recovery"}, {"score": 0.002895841197640062, "phrase": "new_procedure"}, {"score": 0.002860546817196148, "phrase": "computing_cut"}, {"score": 0.0028084079003212947, "phrase": "alm_minimization"}, {"score": 0.0027572166867780275, "phrase": "depth_constraint"}, {"score": 0.002673957615079041, "phrase": "area_flow"}, {"score": 0.0025148871904409095, "phrase": "lut_count"}, {"score": 0.002409188797323273, "phrase": "alm_count"}, {"score": 0.0023507916951658455, "phrase": "depth_optimal_solutions"}, {"score": 0.0021309898622781124, "phrase": "classical_mapper"}, {"score": 0.0021049977753042253, "phrase": "wiremap"}], "paper_keywords": ["Adaptive logic module (ALM)", " area minimization", " field-programmable gate arrays (FPGAs)", " technology mapping"], "paper_abstract": "Modern field programmable gate arrays like Altera's Stratix Series have adopted the adaptive logic module (ALM) structure due to its potential performance and area advantages. An ALM can implement a single logic function or can be fractured into two smaller lookup tables (LUTs). In this paper, we propose an ALM mapping algorithm, ALMmap, for area minimization with bounded depth. We revamp the traditional iterative cut-based mapping flow and introduce a procedure for bounded depth mapping generation with dynamic area recovery that effectively combines cut selection, mapping, and area recovery together. In addition, we introduce a new procedure for computing cut set for ALM minimization under a depth constraint. The notion of area flow which has been used successfully for cut selection to reduce LUT count is revised for cut selection to reduce ALM count. ALMmap obtains depth optimal solutions that are 25.6% and 11.6% smaller, on average, than those produced by a classical mapper and WireMap, respectively.", "paper_title": "ALMmap: Technology Mapping for FPGAs With Adaptive Logic Modules", "paper_id": "WOS:000305625700014"}