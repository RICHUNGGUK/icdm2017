{"auto_keywords": [{"score": 0.04882985100763265, "phrase": "processor_arrays"}, {"score": 0.00481495049065317, "phrase": "partitioned_programs"}, {"score": 0.0047517225918491226, "phrase": "array_architectures"}, {"score": 0.004389339243427964, "phrase": "dataflow-dominant_applications"}, {"score": 0.0039748192550806815, "phrase": "sophisticated_partitioning"}, {"score": 0.0037699306119313154, "phrase": "large_scale_problems"}, {"score": 0.0036714667610391535, "phrase": "local_memory_requirements"}, {"score": 0.0033911868693238894, "phrase": "efficient_control_path_synthesis"}, {"score": 0.0032807941194429235, "phrase": "greatest_challenges"}, {"score": 0.003050376875258722, "phrase": "efficient_methodology"}, {"score": 0.0029903851294825023, "phrase": "automated_control_path_synthesis"}, {"score": 0.0028930017387859804, "phrase": "partitioned_algorithms"}, {"score": 0.002798780784517325, "phrase": "major_advantages"}, {"score": 0.0027256122357680393, "phrase": "presented_methodology"}, {"score": 0.0025340874787959195, "phrase": "arbitrary_parallelepiped_tiles"}, {"score": 0.00240328454980006, "phrase": "local_control_strategy"}, {"score": 0.0023096222276192194, "phrase": "control_overhead"}, {"score": 0.0021049977753042253, "phrase": "existing_approaches"}], "paper_keywords": [""], "paper_abstract": "Processor arrays can be used as accelerators for a plenty of dataflow-dominant applications. Innately these applications have almost no control flow, but the application of sophisticated partitioning and scheduling techniques in order to handle large scale problems and to balance local memory requirements with I/O-bandwidth has the disadvantage of a more complex control flow. Thus, efficient control path synthesis is one of the greatest challenges when compiling algorithms onto processor arrays. This paper presents an efficient methodology for the automated control path synthesis for the mapping of partitioned algorithms onto processor arrays. The major advantages observed in the presented methodology are seen in, (a) control generation for different partitioning techniques and arbitrary parallelepiped tiles, (b) combined use of a global and a local control strategy in order to reduce the control overhead, (c) up to 90 percent reduction in control path area and resources compared to existing approaches.", "paper_title": "Controller synthesis for mapping partitioned programs on array architectures", "paper_id": "WOS:000236884200013"}