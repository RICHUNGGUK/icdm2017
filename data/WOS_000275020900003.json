{"auto_keywords": [{"score": 0.04458003012492911, "phrase": "icfp"}, {"score": 0.009588888328978614, "phrase": "slice_buffer"}, {"score": 0.00481495049065317, "phrase": "-level_cache_misses"}, {"score": 0.00436890075128947, "phrase": "continual_flow_pipeline"}, {"score": 0.004061584718427419, "phrase": "in-order_pipeline"}, {"score": 0.0037301606780397456, "phrase": "data_cache"}, {"score": 0.0035100601949451028, "phrase": "cache_miss"}, {"score": 0.0031459887611258765, "phrase": "-independent_instructions"}, {"score": 0.00303319936111073, "phrase": "miss-dependent_instructions"}, {"score": 0.0022101055924375725, "phrase": "existing_support"}], "paper_keywords": [""], "paper_abstract": "In-order Continual Flow Pipeline (ICFP) is an in-order pipeline that allows execution to flow around data cache misses. When a cache miss occurs. ICFP executes and speculatively retires miss-independent instructions it saves miss-dependent instructions in a slice buffer. When the miss returns, ICFP reexecutes the contents of the slice buffer and merges the results into working state up exploits existing support for multithreading and several novel components.", "paper_title": "ICFP: TOLERATING ALL-LEVEL CACHE MISSES IN IN-ORDER PROCESSORS", "paper_id": "WOS:000275020900003"}