{"auto_keywords": [{"score": 0.03197225574974637, "phrase": "gpu."}, {"score": 0.00481495049065317, "phrase": "gpu_computing_for_parallel_local_search_metaheuristic_algorithms"}, {"score": 0.004764859786310636, "phrase": "local_search_metaheuristics"}, {"score": 0.004641890423057823, "phrase": "efficient_methods"}, {"score": 0.004569630374630379, "phrase": "complex_problems"}, {"score": 0.004224786847720058, "phrase": "search_space"}, {"score": 0.0040942189695983185, "phrase": "search_time"}, {"score": 0.003988487841970088, "phrase": "resolution_time"}, {"score": 0.0038651944848734133, "phrase": "large_problem_instances"}, {"score": 0.0037261429556468217, "phrase": "gpu-based_massively_parallel_computing"}, {"score": 0.0034628156490003775, "phrase": "gpu_computing"}, {"score": 0.0031678720736808574, "phrase": "new_guideline"}, {"score": 0.0030538300202383106, "phrase": "effective_lsms"}, {"score": 0.0029438813080245544, "phrase": "cpu-gpu_data_transfer_optimization"}, {"score": 0.0028378798711397235, "phrase": "neighboring_solutions"}, {"score": 0.002808298910480358, "phrase": "gpu_threads"}, {"score": 0.0027645030021576926, "phrase": "memory_management"}, {"score": 0.0025025186963415, "phrase": "cpu-based_execution"}, {"score": 0.002362320344521919, "phrase": "large_combinatorial_problems"}, {"score": 0.0022653055209664284, "phrase": "continuous_problem"}, {"score": 0.002218299213266519, "phrase": "extensive_experiments"}, {"score": 0.002183684303511462, "phrase": "strong_potential"}, {"score": 0.0021609076467365247, "phrase": "gpu-based_lsms"}, {"score": 0.0021049977753042253, "phrase": "grid-based_parallel_architectures"}], "paper_keywords": ["Parallel metaheuristics", " local search metaheuristics", " GPU computing", " performance evaluation"], "paper_abstract": "Local search metaheuristics (LSMs) are efficient methods for solving complex problems in science and industry. They allow significantly to reduce the size of the search space to be explored and the search time. Nevertheless, the resolution time remains prohibitive when dealing with large problem instances. Therefore, the use of GPU-based massively parallel computing is a major complementary way to speed up the search. However, GPU computing for LSMs is rarely investigated in the literature. In this paper, we introduce a new guideline for the design and implementation of effective LSMs on GPU. Very efficient approaches are proposed for CPU-GPU data transfer optimization, thread control, mapping of neighboring solutions to GPU threads, and memory management. These approaches have been experimented using four well-known combinatorial and continuous optimization problems and four GPU configurations. Compared to a CPU-based execution, accelerations up to x 80 are reported for the large combinatorial problems and up to x 240 for a continuous problem. Finally, extensive experiments demonstrate the strong potential of GPU-based LSMs compared to cluster or grid-based parallel architectures.", "paper_title": "GPU Computing for Parallel Local Search Metaheuristic Algorithms", "paper_id": "WOS:000311846200014"}