{"auto_keywords": [{"score": 0.025508670811257263, "phrase": "tlav_frameworks"}, {"score": 0.004818463433338927, "phrase": "vertex"}, {"score": 0.004743594110762319, "phrase": "vertex-centric_frameworks"}, {"score": 0.004696608876994947, "phrase": "large-scale_distributed_graph_processing"}, {"score": 0.0046269981365987915, "phrase": "vertex-centric_programming_model"}, {"score": 0.004558414405811025, "phrase": "established_computational_paradigm"}, {"score": 0.0044685410845412745, "phrase": "distributed_processing_frameworks"}, {"score": 0.004358676214574977, "phrase": "large-scale_graph_processing"}, {"score": 0.004209369306023422, "phrase": "memory_capacity"}, {"score": 0.004167653403322565, "phrase": "commodity_machines"}, {"score": 0.0040449598280454645, "phrase": "popular_big_data_tools"}, {"score": 0.004004961954843409, "phrase": "mapreduce"}, {"score": 0.003848413823574867, "phrase": "iterative_graph_algorithms"}, {"score": 0.003791431548073898, "phrase": "pagerank"}, {"score": 0.00367967106192446, "phrase": "new_type"}, {"score": 0.003643185395780667, "phrase": "framework_challenges"}, {"score": 0.0034660943250195628, "phrase": "tlav"}, {"score": 0.003397683082821229, "phrase": "user-defined_programs"}, {"score": 0.003121636289442593, "phrase": "linear_scalability"}, {"score": 0.003044785536429499, "phrase": "natural_way"}, {"score": 0.0027557911038816256, "phrase": "operating_system"}, {"score": 0.0026217213613095322, "phrase": "thorough_understanding"}, {"score": 0.0025317627242523104, "phrase": "top_performance"}, {"score": 0.002420611343093316, "phrase": "first_comprehensive_survey"}, {"score": 0.0022913497040895586, "phrase": "vertex-centric_approach"}, {"score": 0.0021049977753042253, "phrase": "tlav_implementations"}], "paper_keywords": ["Design", " Algorithms", " Graph processing", " pregel", " distributed systems", " Big Data", " distributed algorithms"], "paper_abstract": "The vertex-centric programming model is an established computational paradigm recently incorporated into distributed processing frameworks to address challenges in large-scale graph processing. Billion-node graphs that exceed the memory capacity of commodity machines are not well supported by popular Big Data tools like MapReduce, which are notoriously poor performing for iterative graph algorithms such as PageRank. In response, a new type of framework challenges one to \"think like a vertex\" (TLAV) and implements user-defined programs from the perspective of a vertex rather than a graph. Such an approach improves locality, demonstrates linear scalability, and provides a natural way to express and compute many iterative graph algorithms. These frameworks are simple to program and widely applicable but, like an operating system, are composed of several intricate, interdependent components, of which a thorough understanding is necessary in order to elicit top performance at scale. To this end, the first comprehensive survey of TLAV frameworks is presented. In this survey, the vertex-centric approach to graph processing is overviewed, TLAV frameworks are deconstructed into four main components and respectively analyzed, and TLAV implementations are reviewed and categorized.", "paper_title": "Thinking Like a Vertex: A Survey of Vertex-Centric Frameworks for Large-Scale Distributed Graph Processing", "paper_id": "WOS:000368081600009"}