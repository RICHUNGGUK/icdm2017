{"auto_keywords": [{"score": 0.04566705205982715, "phrase": "workflow_process"}, {"score": 0.0450678547644915, "phrase": "structural_changes"}, {"score": 0.04350641237861327, "phrase": "new_workflow"}, {"score": 0.00481495049065317, "phrase": "workflow_dynamic_changes"}, {"score": 0.004749106104067268, "phrase": "petri_net"}, {"score": 0.0047057084749407485, "phrase": "dynamic_adaptability"}, {"score": 0.004577869668211548, "phrase": "major_research_topics"}, {"score": 0.004473982381245469, "phrase": "workflow_management_system"}, {"score": 0.004214729542986473, "phrase": "potential_problem"}, {"score": 0.0039522429946090174, "phrase": "even_loss"}, {"score": 0.0038624981944755813, "phrase": "paper_primary"}, {"score": 0.0036052633308076933, "phrase": "structural_change"}, {"score": 0.0033037970113095577, "phrase": "structural_errors"}, {"score": 0.00327356326590461, "phrase": "behavioral_inconsistencies"}, {"score": 0.003097865379563127, "phrase": "minimal_region"}, {"score": 0.002931569771634119, "phrase": "change_regions"}, {"score": 0.0028127163745564777, "phrase": "workflow_changes"}, {"score": 0.0026252106881752067, "phrase": "large-scale_and_complex_systems"}, {"score": 0.002472822097373027, "phrase": "active_workflow_instance"}, {"score": 0.0023400004981080818, "phrase": "sufficient_condition"}, {"score": 0.002318566141177149, "phrase": "valid_migration"}, {"score": 0.0021539955106204337, "phrase": "proposed_concepts"}], "paper_keywords": ["Workflow", " Dynamic change", " Petri net", " Change region", " Migration"], "paper_abstract": "Dynamic adaptability has become one of the major research topics in the area of workflow management system. When adjusting a workflow process to some structural changes, there is a potential problem: the new workflow may contain errors, such as deadlock, inconsistency and even loss of instance. This paper primary addresses the issues related to workflow structural changes. It firstly defines a class of structural change called compatible change. This kind of change can be applied to the workflow process, without causing any structural errors or behavioral inconsistencies. Secondly, an algorithm is put forward to calculate the minimal region affected by the changes. Furthermore, it proves that the change regions can be used to check the compatibility of workflow changes. This approach is applicable and efficient in terms of time and space for large-scale and complex systems. Lastly, this paper discusses the problem to decide whether an active workflow instance can be smoothly evolved to the new workflow, and provides a sufficient condition for valid migration. In the end, an example is given to illustrate the effectiveness of the proposed concepts and method. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Analysis of workflow dynamic changes based on Petri net", "paper_id": "WOS:000261919900004"}