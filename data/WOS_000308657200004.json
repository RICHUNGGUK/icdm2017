{"auto_keywords": [{"score": 0.032837302374888855, "phrase": "reeact"}, {"score": 0.00481495049065317, "phrase": "customizable_virtual_execution_manager"}, {"score": 0.004771672073078768, "phrase": "multicore_platforms"}, {"score": 0.004644146045859622, "phrase": "many-core_chip_multiprocessors"}, {"score": 0.0045200127552893704, "phrase": "critical_issue"}, {"score": 0.004262273304740847, "phrase": "hardware_resources"}, {"score": 0.004167086373747367, "phrase": "power_consumption"}, {"score": 0.004110993414942228, "phrase": "reliability_challenges"}, {"score": 0.004019171295196278, "phrase": "application_variations"}, {"score": 0.003947186611084043, "phrase": "new_computing_environment"}, {"score": 0.00391167729353583, "phrase": "effective_resource"}, {"score": 0.0038764861784138117, "phrase": "application_management"}, {"score": 0.003688497722149817, "phrase": "management_decisions"}, {"score": 0.0036224139706218916, "phrase": "actual_run-time_environment"}, {"score": 0.0033242742850902295, "phrase": "run-time_environment"}, {"score": 0.0031773149810690494, "phrase": "operating_system_level"}, {"score": 0.0029689311901364797, "phrase": "user-level_management_policies"}, {"score": 0.0028634235895823594, "phrase": "virtual_execution_environment"}, {"score": 0.0027867539356701302, "phrase": "core_services"}, {"score": 0.002699889709390707, "phrase": "custom_management_policies"}, {"score": 0.0023465400668244386, "phrase": "specific_dynamic_management_policy"}, {"score": 0.0023148964315569866, "phrase": "real_cmp."}, {"score": 0.0022836785412390544, "phrase": "case_studies"}, {"score": 0.0021049977753042253, "phrase": "application_execution"}], "paper_keywords": ["Performance", " Management", " Design", " Chip multiprocessor", " Resource management", " Run-time adaptation", " Virtual Execution Environment"], "paper_abstract": "With the shift to many-core chip multiprocessors (CMPs), a critical issue is how to effectively coordinate and manage the execution of applications and hardware resources to overcome performance, power consumption, and reliability challenges stemming from hardware and application variations inherent in this new computing environment. Effective resource and application management on CMPs requires consideration of user/application/hardware-specific requirements and dynamic adaption of management decisions based on the actual run-time environment. However, designing an algorithm to manage resources and applications that can dynamically adapt based on the run-time environment is difficult because most resource and application management and monitoring facilities are only available at the operating system level. This paper presents REEact, an infrastructure that provides the capability to specify user-level management policies with dynamic adaptation. REEact is a virtual execution environment that provides a framework and core services to quickly enable the design of custom management policies for dynamically managing resources and applications. To demonstrate the capabilities and usefulness of REEact, this paper describes three case studies-each illustrating the use of REEact to apply a specific dynamic management policy on a real CMP. Through these case studies, we demonstrate that REEact can effectively and efficiently implement policies to dynamically manage resources and adapt application execution.", "paper_title": "REEact: A Customizable Virtual Execution Manager for Multicore Platforms", "paper_id": "WOS:000308657200004"}