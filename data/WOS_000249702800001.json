{"auto_keywords": [{"score": 0.038643638808922604, "phrase": "best_task_schedule"}, {"score": 0.03782959619079952, "phrase": "fast_deterministic_task"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_cluster_systems"}, {"score": 0.00471003041684707, "phrase": "acyclic_graph"}, {"score": 0.0045318666714939905, "phrase": "large_heterogeneous_system"}, {"score": 0.004360412703519539, "phrase": "varying_processing_capabilities"}, {"score": 0.004312622975366672, "phrase": "network_links"}, {"score": 0.004265354774450696, "phrase": "varying_bandwidths"}, {"score": 0.004195418010131832, "phrase": "search_space"}, {"score": 0.004149429072483132, "phrase": "possible_task_schedules"}, {"score": 0.0039269071382230444, "phrase": "optimization_problem"}, {"score": 0.0034024277222012597, "phrase": "task_schedule"}, {"score": 0.003328184259386487, "phrase": "general_random_guided_search_method"}, {"score": 0.0031845067058084583, "phrase": "extremely_long_search_times"}, {"score": 0.002915437843874821, "phrase": "original_deterministic_task_scheduling_algorithm"}, {"score": 0.0027741761880779535, "phrase": "alternative_strategy"}, {"score": 0.0024299678474208023, "phrase": "current_best_solution"}, {"score": 0.0023900527169254744, "phrase": "deterministic_guided_search_method"}, {"score": 0.002312174113289583, "phrase": "similar_runtimes"}, {"score": 0.0022741894748181243, "phrase": "push-_pull_algorithm"}], "paper_keywords": ["task scheduling", " optimization", " heterogeneous systems", " cluster systems"], "paper_abstract": "Consider directed acyclic graph ( DAG) scheduling for a large heterogeneous system, which consists of processors with varying processing capabilities and network links with varying bandwidths. The search space of possible task schedules for this problem is immense. One possible approach for this optimization problem, which is NP- hard, is to start with the best task schedule found by a fast deterministic task scheduling algorithm and then iteratively attempt to improve the task schedule by employing a general random guided search method. However, such an approach can lead to extremely long search times, and the solutions found are sometimes not significantly better than those found by the original deterministic task scheduling algorithm. In this paper, we propose an alternative strategy, termed Push- Pull, which starts with the best task schedule found by a fast deterministic task scheduling algorithm and then iteratively attempts to improve the current best solution using a deterministic guided search method. Our simulation results show that given similar runtimes, the Push- Pull algorithm performs well, achieving results similar to or better than all of the other algorithms being compared.", "paper_title": "Push-pull: Deterministic search-based DAG scheduling for heterogeneous cluster systems", "paper_id": "WOS:000249702800001"}