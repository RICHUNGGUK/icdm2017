{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "edf"}, {"score": 0.004546000131069232, "phrase": "partitioned_edf_scheduling"}, {"score": 0.004449045430179066, "phrase": "sporadic_task_systems"}, {"score": 0.004385555408850022, "phrase": "identical_multiprocessor_platforms"}, {"score": 0.0037171648669537287, "phrase": "different_approximation_algorithms"}, {"score": 0.0035601676907962626, "phrase": "utilization_bounds"}, {"score": 0.003361069456060196, "phrase": "different_metric"}, {"score": 0.0029740732099993706, "phrase": "best_partitioning_algorithms"}, {"score": 0.0022298571016688335, "phrase": "processor-such_algorithms"}, {"score": 0.0021821915946356168, "phrase": "widely-used_first-fit_decreasing"}, {"score": 0.0021509807762081145, "phrase": "best-fit_decreasing"}, {"score": 0.0021049977753042253, "phrase": "worst-fit"}], "paper_keywords": ["Partitioned scheduling", " Implicit-deadline sporadic task systems", " Earliest deadline first", " Speedup bounds"], "paper_abstract": "The partitioned EDF scheduling of implicit-deadline sporadic task systems upon identical multiprocessor platforms is considered. The problem is known to be intractable, but many different polynomial-time algorithms have been proposed for solving it approximately. These different approximation algorithms have previously been compared using utilization bounds; they are compared here using a different metric-the speedup factor. It is shown that from the perspective of their speedup factors, the best partitioning algorithms are those that (i) assign the tasks in decreasing order of utilization; and (ii) are \"reasonable\" in the sense that they will assign a task if there is capacity available on some processor-such algorithms include the widely-used First-Fit Decreasing, Best-Fit Decreasing, and Worst-Fit Decreasing partitioning heuristics.", "paper_title": "Partitioned EDF scheduling: a closer look", "paper_id": "WOS:000324091800002"}