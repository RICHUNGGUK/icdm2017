{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "stt-ram_last-level_caches"}, {"score": 0.004158290806404304, "phrase": "spin-transfer_torque"}, {"score": 0.0038385317554884713, "phrase": "fast_read_latency"}, {"score": 0.00378767277402891, "phrase": "low_leakage_power"}, {"score": 0.003712640297460159, "phrase": "high_density"}, {"score": 0.0035197152758635344, "phrase": "last-level_caches"}, {"score": 0.003381607100127276, "phrase": "stt-ram_write_operation"}, {"score": 0.0032058286587989234, "phrase": "long_stt-ram_cache_write_operation"}, {"score": 0.0030189426536422577, "phrase": "severe_performance_degradation"}, {"score": 0.002881130228859848, "phrase": "stt-ram_write_overhead"}, {"score": 0.0027495914857929584, "phrase": "stt-ram_adoption"}, {"score": 0.0025892330566358503, "phrase": "obstruction-aware_cache_management_policy"}, {"score": 0.00255488432062653, "phrase": "oar_oap"}, {"score": 0.0024545413637350765, "phrase": "llc-obstructive_processes"}, {"score": 0.0023268399760599336, "phrase": "different_processes"}, {"score": 0.002250415129116109, "phrase": "four-core_architecture"}], "paper_keywords": ["Design", " Experimentation", " Performance", " Nonvolatile memory", " STT-RAM", " last-level caches", " port obstruction", " performance improvement"], "paper_abstract": "Many new nonvolatile memory (NVM) technologies have been heavily studied to replace the power-hungry SRAM/DRAM-based memory hierarchy in today's computers. Among various emerging NVM technologies, Spin-Transfer Torque RAM (STT-RAM) has many benefits, such as fast read latency, low leakage power, and high density, making it a promising candidate for last-level caches (LLCs).(1) However, STT-RAM write operation is expensive. In particular, a long STT-RAM cache write operation might obstruct other cache accesses and result in severe performance degradation. Consequently, how to mitigate STT-RAM write overhead is critical to the success of STT-RAM adoption. In this article, we propose an obstruction-aware cache management policy called OAR OAP monitors cache traffic, detects LLC-obstructive processes, and differentiates the cache accesses from different processes. Our experiment on a four-core architecture with an 8MB STT-RAM L3 cache shows a 14% performance improvement and 64% energy reduction.", "paper_title": "Preventing STT-RAM Last-Level Caches from Port Obstruction", "paper_id": "WOS:000344830900001"}