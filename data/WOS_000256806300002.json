{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "current_resource_management_mechanisms"}, {"score": 0.004360412703519539, "phrase": "future_multicore_systems"}, {"score": 0.003757480190200645, "phrase": "virtual_private_machine_abstraction"}, {"score": 0.0035755653799043, "phrase": "software_policies"}, {"score": 0.0033465923623290034, "phrase": "microarchitecture_resources"}, {"score": 0.0032376465741070274, "phrase": "vpm_policies"}, {"score": 0.0028360962841331634, "phrase": "application_and_system_objectives"}, {"score": 0.0027437235598539904, "phrase": "vpm_resource_assignments"}, {"score": 0.0025678829712650437, "phrase": "vpm_mechanisms"}, {"score": 0.0022492129111567824, "phrase": "hardware_resources"}, {"score": 0.0021049977753042253, "phrase": "vpm_assignments"}], "paper_keywords": [""], "paper_abstract": "Current resource management mechanisms and policies are inadequate for future multicore systems. Instead, a hardware/software interface based on the virtual private machine abstraction would allow software policies to explicitly manage microarchitecture resources. VPM policies, implemented primarily in software, translate application and system objectives into VPM resource assignments. Then, VPM mechanisms securely multiplex, arbitrate, or distribute hardware resources to satisfy the VPM assignments.", "paper_title": "Multicore resource management", "paper_id": "WOS:000256806300002"}