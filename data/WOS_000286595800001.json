{"auto_keywords": [{"score": 0.049407782669650464, "phrase": "glass"}, {"score": 0.00481495049065317, "phrase": "efficient_modular_glass_box_software_model_checking"}, {"score": 0.004550469496119256, "phrase": "novel_techniques"}, {"score": 0.004361644989356558, "phrase": "state_space"}, {"score": 0.004270178957872099, "phrase": "model_checker"}, {"score": 0.004151188559520802, "phrase": "large_numbers"}, {"score": 0.004092937456065441, "phrase": "redundant_states"}, {"score": 0.0035283552859817764, "phrase": "program_properties"}, {"score": 0.0034057975804778293, "phrase": "pipal"}, {"score": 0.00310664242361199, "phrase": "glass_box_software_model"}, {"score": 0.003099261030711913, "phrase": "cmc"}, {"score": 0.0030199761431186434, "phrase": "modular_checking"}, {"score": 0.0027546167254869493, "phrase": "traditional_software_model_checkers"}, {"score": 0.0026967596578196325, "phrase": "java_pathfinder"}, {"score": 0.002661958795781872, "phrase": "jpf"}, {"score": 0.002548331088496964, "phrase": "glass_box_software_model_checker"}, {"score": 0.00232431758517087, "phrase": "large_set"}, {"score": 0.0021049977753042253, "phrase": "pipal's_effectiveness"}], "paper_keywords": ["Algorithms", " Reliability", " Verification", " Pipal", " Software Model Checking"], "paper_abstract": "Glass box software model checking incorporates novel techniques to identify similarities in the state space of a model checker and safely prune large numbers of redundant states without explicitly checking them. It is significantly more efficient than other software model checking approaches for checking certain kinds of programs and program properties. This paper presents PIPAL, a system for modular glass box software model checking. Extending glass box software model checking to perform modular checking is important to further improve its scalability. It is nontrivial because unlike traditional software model checkers such as Java PathFinder (JPF) and CMC, a glass box software model checker does not check every state separately-instead, it checks a large set of states together in each step.We present a solution and demonstrate PIPAL's effectiveness on a variety of programs", "paper_title": "Efficient Modular Glass Box Software Model Checking", "paper_id": "WOS:000286595800001"}