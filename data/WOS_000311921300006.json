{"auto_keywords": [{"score": 0.0456315961504987, "phrase": "aco"}, {"score": 0.034673750403939975, "phrase": "solution_quality"}, {"score": 0.00481495049065317, "phrase": "parallel_ant_colony_optimization_on_graphics_processing_units"}, {"score": 0.004491970050862321, "phrase": "effective_parallelization_strategies"}, {"score": 0.004278807087784626, "phrase": "graphics_processing_units"}, {"score": 0.00367228341822469, "phrase": "parallel_ants"}, {"score": 0.003621588555525458, "phrase": "multiple_ant_colonies"}, {"score": 0.0035965032173588753, "phrase": "general_parallelization_approaches"}, {"score": 0.003217896008931311, "phrase": "state-of-the-art_fermi_cpu_architecture"}, {"score": 0.0030226700832113942, "phrase": "parallel_algorithms"}, {"score": 0.002939737235379635, "phrase": "original_mmas"}, {"score": 0.0028590732866152118, "phrase": "traveling_salesman_problem"}, {"score": 0.002630085891013006, "phrase": "original_sequential_implementation"}, {"score": 0.0024876840172100567, "phrase": "parallelization_framework"}, {"score": 0.0023694065215394593, "phrase": "comparative_experimental_study"}, {"score": 0.002320449502337321, "phrase": "performance_impact"}, {"score": 0.0022883734727569298, "phrase": "aco_parameters"}, {"score": 0.0022567398334877847, "phrase": "cpu_technical_configuration"}, {"score": 0.002225542510652775, "phrase": "memory_structures"}, {"score": 0.0021947755130109696, "phrase": "parallelization_granularity"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Ant colony optimization", " Parallel metaheuristics", " GPU", " CUDA", " MMAS", " Parallel ants", " Multiple colonies"], "paper_abstract": "The purpose of this paper is to propose effective parallelization strategies for the Ant Colony Optimization (ACO) metaheuristic on Graphics Processing Units (GPUs). The Max-Min Ant System (MMAS) algorithm augmented with 3-opt local search is used as a framework for the implementation of the parallel ants and multiple ant colonies general parallelization approaches. The four resulting GPU algorithms are extensively evaluated and compared on both speedup and solution quality on a state-of-the-art Fermi CPU architecture. A rigorous effort is made to keep parallel algorithms true to the original MMAS applied to the Traveling Salesman Problem. We report speedups of up to 23.60 with solution quality similar to the original sequential implementation. With the intent of providing a parallelization framework for ACO on GPUs, a comparative experimental study highlights the performance impact of ACO parameters, CPU technical configuration, memory structures and parallelization granularity. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Parallel Ant Colony Optimization on Graphics Processing Units", "paper_id": "WOS:000311921300006"}