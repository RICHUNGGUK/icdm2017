{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "solvable_loops"}, {"score": 0.00470325458481566, "phrase": "essential_part"}, {"score": 0.0046593017130868, "phrase": "program_correctness"}, {"score": 0.004529881123652277, "phrase": "regular_programs"}, {"score": 0.004241648852523704, "phrase": "theoretical_computer_science"}, {"score": 0.004066076430818046, "phrase": "presburger_arithmetic"}, {"score": 0.004028054020045027, "phrase": "linear_programming"}, {"score": 0.0038794730876377057, "phrase": "restricted_linear_problems"}, {"score": 0.00375395061615019, "phrase": "newly-emerged_algebraic_methods"}, {"score": 0.003684048704119722, "phrase": "polynomial_problems"}, {"score": 0.003531474887552889, "phrase": "polynomial_programs"}, {"score": 0.0033851984021896287, "phrase": "large_class"}, {"score": 0.003353521531649663, "phrase": "imperative_programs"}, {"score": 0.003229741076887148, "phrase": "general_polynomials"}, {"score": 0.0031695693589575916, "phrase": "special_polynomial_mappings"}, {"score": 0.003081400693055518, "phrase": "sufficient_criteria"}, {"score": 0.002818013056816282, "phrase": "quantifier_elimination_problem"}, {"score": 0.0023902026696615473, "phrase": "symbolic_computation"}, {"score": 0.002301896758256575, "phrase": "considerably_high_complexity"}, {"score": 0.0022378101636842296, "phrase": "strong_and_exact_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Program verification", " Termination analysis", " Polynomial loops", " Symbolic computation", " Quantifier elimination", " Real root bounds"], "paper_abstract": "Termination is an essential part of program correctness. For a class of regular programs, both automatically proving termination and constructing witnesses of nontermination are significant in theoretical computer science. Many traditional theorem-proving methods for analyzing termination are based on Presburger arithmetic or linear programming, so they are valid only for restricted linear problems. On the contrary, some newly-emerged algebraic methods are suitable for polynomial problems, and are promising in deciding termination of polynomial programs. In this paper, we investigate a large class of imperative programs, called solvable loops, whose guards are general polynomials and assignments are special polynomial mappings. We then propose some sufficient criteria for proving termination and nontermination of such loops in parallel. These criteria can further be translated to the quantifier elimination problem over the reals, and hence are computable. Finally, feasible sample points in the process for inferring nontermination are eventually nonterminating inputs, which can be used to generate witnesses of nontermination. Our decision procedure uses symbolic computation and is mechanically implementable in spite of considerably high complexity. Thereby a series of strong and exact results are established in analyzing termination of loops. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Symbolic termination analysis of solvable loops", "paper_id": "WOS:000312574000002"}