{"auto_keywords": [{"score": 0.04196067534343774, "phrase": "packet_loss"}, {"score": 0.015472250003262557, "phrase": "long_distance_networks"}, {"score": 0.015229212003720906, "phrase": "cubic"}, {"score": 0.00481495049065317, "phrase": "cubic_tcp"}, {"score": 0.00455202992136173, "phrase": "tcp-friendly_algorithm"}, {"score": 0.00440825801245188, "phrase": "cubic_curve"}, {"score": 0.004234884779773412, "phrase": "round-trip_time"}, {"score": 0.003845994935767022, "phrase": "linux_use"}, {"score": 0.0037244390953401533, "phrase": "tcp_protocol"}, {"score": 0.00340954056723008, "phrase": "socket_buffer_size"}, {"score": 0.0033017870342738234, "phrase": "tcp"}, {"score": 0.003146360480030653, "phrase": "bandwidth-delay_product"}, {"score": 0.0030962064913500164, "phrase": "linux_tcp_window_size"}, {"score": 0.0023940274498526213, "phrase": "uploading_time"}, {"score": 0.0023369711258107244, "phrase": "cumulative_socket_buffer_size"}, {"score": 0.002244876254113051, "phrase": "large_buffer_size"}, {"score": 0.002209060366991921, "phrase": "parallel_connections"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["TCP CUBIC", " Bandwidth estimation"], "paper_abstract": "CUBIC is a TCP-friendly algorithm that uses a cubic curve, independent of the round-trip time, to rapidly recover from a packet loss. New releases of Linux use CUBIC for the TCP protocol. In this paper, we show that if the socket buffer size of a sender TCP is small compared with the bandwidth-delay product, Linux TCP window size drops to almost zero every time a packet loss occurs. Using this fact, we estimate data uploading time in long distance networks with packet loss. Also we discuss the improvement of the uploading time by increasing cumulative socket buffer size in two ways: large buffer size or parallel connections. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Data uploading time estimation for CUBIC TCP in long distance networks", "paper_id": "WOS:000306718900009"}