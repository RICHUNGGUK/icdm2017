{"auto_keywords": [{"score": 0.03828506358213306, "phrase": "chariot"}, {"score": 0.028484518458651, "phrase": "isolated_drivers"}, {"score": 0.00481495049065317, "phrase": "drivers'_write_operations"}, {"score": 0.0047555023078686386, "phrase": "full_virtualization_technology"}, {"score": 0.004386503433248535, "phrase": "existing_operating_systems"}, {"score": 0.004173743791750695, "phrase": "virtual_machine"}, {"score": 0.004096635798793164, "phrase": "users'_application_environments"}, {"score": 0.0038737214010638745, "phrase": "drivers'_write_operation_faults"}, {"score": 0.0036857412768922827, "phrase": "reused_drivers"}, {"score": 0.0035728978842974246, "phrase": "reliability_architecture"}, {"score": 0.0032749212355657215, "phrase": "driver's_write_operations"}, {"score": 0.0031944286166257466, "phrase": "write_permissions"}, {"score": 0.0031549249117721946, "phrase": "shadow_pages"}, {"score": 0.0029279232349513724, "phrase": "capture_method"}, {"score": 0.0028382152567141784, "phrase": "virtual_machine_monitor"}, {"score": 0.0027684263985790526, "phrase": "adverse_impact"}, {"score": 0.0026175952455594277, "phrase": "performance_losses"}, {"score": 0.002490418773739183, "phrase": "recently_used_shadow_pages"}, {"score": 0.0023990982005125763, "phrase": "frequent_page_faults"}, {"score": 0.0023546984428119864, "phrase": "experimental_results"}, {"score": 0.0021715812867126884, "phrase": "shadow_page_caches"}, {"score": 0.0021049977753042253, "phrase": "isolation_efficiency"}], "paper_keywords": ["virtualization", " performance", " cache", " shadow page", " driver isolation", " fault tolerance", " operating system"], "paper_abstract": "Full virtualization technology is highly reusable. Using this property, various types and versions of existing operating systems and drivers can be reused in a virtual machine to customize users' application environments. However, these environments are threatened by drivers' write operation faults, which are caused by bugs in reused drivers. Chariot is a reliability architecture that has been developed to solve this problem. This architecture captures a driver's write operations by maintaining the write permissions of shadow pages as read-only to examine their correctness. Nevertheless, this capture method produces many page faults in the virtual machine monitor and has an adverse impact on the performance of isolated drivers. To reduce performance losses, this paper examines two algorithms that cache recently used shadow pages using different structures to avoid frequent page faults. The experimental results show that the performance of isolated drivers can be greatly improved using these shadow page caches without significantly impacting the isolation efficiency of Chariot.", "paper_title": "Research on Algorithms to Capture Drivers' Write Operations", "paper_id": "WOS:000365157000017"}