{"auto_keywords": [{"score": 0.033002348931367075, "phrase": "query_efficiency"}, {"score": 0.014401204507405624, "phrase": "web_services"}, {"score": 0.014054703109939047, "phrase": "pervasive_computing"}, {"score": 0.00481495049065317, "phrase": "data_sharing"}, {"score": 0.004767826806287385, "phrase": "adaptive_query_processing"}, {"score": 0.00462919213721188, "phrase": "environment's_heterogeneity"}, {"score": 0.004583878086896926, "phrase": "information_providers"}, {"score": 0.004013662619667083, "phrase": "diverse_range"}, {"score": 0.003820896867623235, "phrase": "multiple_web_services"}, {"score": 0.0036194914688460656, "phrase": "optimal_query_plans"}, {"score": 0.003462599815177726, "phrase": "query_execution_model"}, {"score": 0.003296212583539166, "phrase": "query_execution"}, {"score": 0.003016544840824688, "phrase": "execution_processing"}, {"score": 0.002986969236641105, "phrase": "query_plans"}, {"score": 0.002914288956035066, "phrase": "data-flow_execution_model"}, {"score": 0.002843372121209168, "phrase": "adaptive_query_framework"}, {"score": 0.0027878797103973313, "phrase": "pqmodel"}, {"score": 0.002706659627293686, "phrase": "resource_utilization"}, {"score": 0.002640781900605126, "phrase": "computation_sharing_opportunities"}, {"score": 0.0024891269874339553, "phrase": "prototype_tool"}, {"score": 0.002125859121671525, "phrase": "response_time"}, {"score": 0.0021049977753042253, "phrase": "network_overhead"}], "paper_keywords": ["Web service", " Query processing", " Data sharing", " Data-flow execution model"], "paper_abstract": "To deal with the environment's heterogeneity, information providers usually offer access to their data by publishing Web services in the domain of pervasive computing. Therefore, to support applications that need to combine data from a diverse range of sources, pervasive computing requires a middleware to query multiple Web services. There exist works that have been investigating on generating optimal query plans. We however in this paper propose a query execution model, called PQModel, to optimize the process of query execution over Web Services. In other words, we attempt to improve query efficiency from the aspect of optimizing the execution processing of query plans. PQModel is a data-flow execution model. Along with an adaptive query framework it used, PQModel aims to improve query efficiency and resource utilization by exploiting data and computation sharing opportunities across queries. A set of experiments, based on a prototype tool we developed, were carefully designed to evaluate PQModel by comparing it with a model whose query engine evaluates queries independently. Results show that our model can improve query efficiency in terms of both response time and network overhead.", "paper_title": "Service-oriented execution model supporting data sharing and adaptive query processing", "paper_id": "WOS:000277283300003"}