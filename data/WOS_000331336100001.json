{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "closest_string_problem"}, {"score": 0.004636027838194003, "phrase": "csp"}, {"score": 0.004429727701202369, "phrase": "string_t"}, {"score": 0.004363058588000252, "phrase": "minimum_hamming_distance"}, {"score": 0.0038938807148174975, "phrase": "simulated_annealing_approach"}, {"score": 0.0037774893672602506, "phrase": "new_heuristic"}, {"score": 0.0036645642553325215, "phrase": "good_initial_solution"}, {"score": 0.003371066990851953, "phrase": "sensibly_the_convergence"}, {"score": 0.0026640466056415298, "phrase": "artificial_and_real_instances"}, {"score": 0.0024504843466435487, "phrase": "good_solutions"}, {"score": 0.002203200914130907, "phrase": "ip_formulation"}, {"score": 0.0021050084340097234, "phrase": "csp."}], "paper_keywords": ["closest string problem", " NP-hard problems", " simulated-annealing", " computational biology", " bioinformatics", " heuristics"], "paper_abstract": "The closest string problem (CSP) consists in finding a string t with minimum Hamming distance from the strings of a given finite input set. To overcome its NP-hardness, we propose a simulated annealing approach along with a new heuristic for finding a good initial solution for the problem, which allows one to speed up sensibly the convergence of the algorithm. To assess its effectiveness and robustness, we extensively compared our approach with the integer-programming (IP) exact solution, and with other heuristic approaches present in the literature, both on artificial and real instances. Experimental results show that our approach allows one to locate good solutions for the problem, that are close to the optimum found by the IP formulation and outperforms other heuristic methods for the CSP.", "paper_title": "A combined greedy-walk heuristic and simulated annealing approach for the closest string problem", "paper_id": "WOS:000331336100001"}