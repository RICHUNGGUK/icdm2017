{"auto_keywords": [{"score": 0.026109777368216704, "phrase": "cad"}, {"score": 0.023899459598567922, "phrase": "api"}, {"score": 0.006210780210080631, "phrase": "disassembly"}, {"score": 0.00481495049065317, "phrase": "graph_based_method"}, {"score": 0.004675652357253327, "phrase": "disassembly_time_estimation"}, {"score": 0.004636594774238505, "phrase": "early_design"}, {"score": 0.004210114198411514, "phrase": "early_embodiment_design"}, {"score": 0.00403709306806495, "phrase": "design_suggestions"}, {"score": 0.003986581218661184, "phrase": "product_disassemblability"}, {"score": 0.003903789851015775, "phrase": "critical_process"}, {"score": 0.0035148319209810128, "phrase": "material_recovery"}, {"score": 0.0034281523043639753, "phrase": "boothroyd"}, {"score": 0.0033561632967173856, "phrase": "manual_estimation"}, {"score": 0.0033280910751441522, "phrase": "disassembly_time"}, {"score": 0.003286420941205958, "phrase": "physical_prototype"}, {"score": 0.0032046343506232588, "phrase": "dewhurst_system"}, {"score": 0.003059925849144792, "phrase": "early_design_stage"}, {"score": 0.0029837589912490026, "phrase": "graph_based_data_structures"}, {"score": 0.002885135695263876, "phrase": "complete_and_selective_disassembly_time"}, {"score": 0.002743262400544957, "phrase": "single_part"}, {"score": 0.002543392353000551, "phrase": "selective_disassembly_time"}, {"score": 0.0024904974828343033, "phrase": "particular_nodes"}, {"score": 0.0023879771786116228, "phrase": "graph_metrics"}, {"score": 0.0022609695885550058, "phrase": "solidworks_application_programming_interface"}, {"score": 0.002131720106846481, "phrase": "boothroyd_and_dewhurst_method"}, {"score": 0.0021049977753042253, "phrase": "error_range"}], "paper_keywords": ["disassembly time", " selective disassembly time", " adjacency list", " design suggestion generation", " SolidWorks Application Programming Interface (API)"], "paper_abstract": "The goal of this research is to develop a method and tool (a) to estimate disassembly time automatically from early embodiment design based CAD model and (b) to provide design suggestions to improve product disassemblability. Disassembly is a critical process in the end-of-life (EOL) stage of a product. It is usually followed by sorting and then by material recovery for recycling or part recovery for reuse or remanufacturing. Manual estimation of disassembly time, through physical prototype disassembly or through Boothroyd and Dewhurst system, is time consuming and is not applicable in the early design stage. In this research, graph based data structures and related metrics are utilized to estimate complete and selective disassembly time at embodiment design stage. Selective disassembly is important when a single part of subassembly is to be recovered while the rest of the product is to be discarded. Selective disassembly time is estimated by merging particular nodes in assembly and bipartite graph and then recomputing the graph metrics. The method and algorithm presented in this paper is implemented using SolidWorks application programming interface (API) in Visual C#. Results are compared with the results obtained by Boothroyd and Dewhurst method, the error range is reasonable.", "paper_title": "Graph Based Method and Tool for Complete and Selective Disassembly Time Estimation in Early Design", "paper_id": "WOS:000358446100005"}