{"auto_keywords": [{"score": 0.043025239716159284, "phrase": "task_scheduling"}, {"score": 0.00481495049065317, "phrase": "accumulative_memory_load_cost"}, {"score": 0.004760765880314089, "phrase": "multi-core_dsps"}, {"score": 0.004707188147442449, "phrase": "multi-level_memory"}, {"score": 0.004398094237005956, "phrase": "primary_obstacle"}, {"score": 0.004324031677173549, "phrase": "system_performance"}, {"score": 0.003949508242904001, "phrase": "system_architecture"}, {"score": 0.0035065523764817143, "phrase": "memory_utilization"}, {"score": 0.0030433302702291116, "phrase": "memory_accesses"}, {"score": 0.002859345731792013, "phrase": "first_one"}, {"score": 0.0028271058251633815, "phrase": "integer_linear_programming"}, {"score": 0.0025673005153462707, "phrase": "second_one"}, {"score": 0.0025239898026543964, "phrase": "heuristic_algorithm"}, {"score": 0.0024257447861185813, "phrase": "polynomial_running_time"}, {"score": 0.0023848164282879885, "phrase": "experimental_results"}, {"score": 0.0023313149689465386, "phrase": "memory_access_cost"}, {"score": 0.002215274527909304, "phrase": "schedule_length"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scheduling", " Memory access", " DSPs", " Multi-core", " Multi-level memory"], "paper_abstract": "In multi-core Digital Signal Processing (DSP) Systems, the processor-memory gap remains the primary obstacle in improving system performance. This paper addresses this bottleneck by combining task scheduling and memory accesses so that the system architecture and memory modules of a multi-core DSP can be utilized as efficiently as possible. To improve the system and memory utilization, the key is to take advantage of locality as much as possible and integrate it into task scheduling. Two algorithms are proposed to optimize memory accesses while scheduling tasks with timing and resource constraints. The first one uses Integer Linear Programming (ILP) to produce a schedule with the most efficient memory access sequence while satisfying the constraints. The second one is a heuristic algorithm which can produce a near optimal schedule with polynomial running time. The experimental results show that the memory access cost can be reduced up to 60% while the schedule length is also shortened. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Minimizing accumulative memory load cost on multi-core DSPs with multi-level memory", "paper_id": "WOS:000323405100005"}