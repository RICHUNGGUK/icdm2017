{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "word_languages"}, {"score": 0.004466519142879166, "phrase": "maximum_number"}, {"score": 0.0035648266669315943, "phrase": "local_determinization_procedure"}, {"score": 0.003369322866499541, "phrase": "distance_automata"}, {"score": 0.0027139447110929586, "phrase": "finite_state_transducer"}, {"score": 0.0025409639091476363, "phrase": "-payoff_games"}, {"score": 0.0023127544795063263, "phrase": "optimal_streaming_editor"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Repair", " Asymptotic normalized cost", " Edit distance", " Distance automata", " Regular languages"], "paper_abstract": "We show how to calculate the maximum number of edits per character needed to convert any string in one regular language to a string in another language. Our algorithm makes use of a local determinization procedure applicable to a subclass of distance automata. We then show how to calculate the same property when the editing needs to be done in streaming fashion, by a finite state transducer, using a reduction to mean-payoff games. In this case, we show that the optimal streaming editor can be produced in P. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "The per-character cost of repairing word languages", "paper_id": "WOS:000338598500004"}