{"auto_keywords": [{"score": 0.04143119734779178, "phrase": "dfa"}, {"score": 0.00481495049065317, "phrase": "parallel_dfa_architecture"}, {"score": 0.004766388573192505, "phrase": "ultra_high_throughput_dfa-based_pattern_matching"}, {"score": 0.004600228893803583, "phrase": "key_technique"}, {"score": 0.004530794611704416, "phrase": "network_security_applications"}, {"score": 0.004198965651975536, "phrase": "predefined_attack_signatures"}, {"score": 0.004135562737140424, "phrase": "regular_expressions"}, {"score": 0.003991305899593133, "phrase": "deterministic_finite_automaton"}, {"score": 0.0038325685550319863, "phrase": "multi_regex_matching"}, {"score": 0.003793876828939456, "phrase": "existing_dfa_based_researches"}, {"score": 0.003736567662016446, "phrase": "high_throughput"}, {"score": 0.003642962673467835, "phrase": "extremely_high_memory_cost"}, {"score": 0.003462704420080129, "phrase": "high_speed_routers"}, {"score": 0.003341839487905525, "phrase": "available_memory"}, {"score": 0.00317643367669255, "phrase": "parallel_architecture"}, {"score": 0.0030038988468808845, "phrase": "large_amount"}, {"score": 0.0029735479904284706, "phrase": "concurrent_flows"}, {"score": 0.002884317729022721, "phrase": "nearly_no_extra_memory_cost"}, {"score": 0.0027835848648596513, "phrase": "underlying_dfa"}, {"score": 0.0027554538693034163, "phrase": "memory_modules"}, {"score": 0.0023301793939902015, "phrase": "worst_cases"}, {"score": 0.002248755794042486, "phrase": "numerical_results"}, {"score": 0.002159170788765385, "phrase": "average_speedup"}, {"score": 0.0021049977753042253, "phrase": "traditional_dfa_based_matching_approach"}], "paper_keywords": ["Deterministic Finite Automata (DFA)", " Deep Packet Inspection (DPI) regular expression parallel matching speedup"], "paper_abstract": "Multi pattern matching is a key technique for Implementing network security applications such as Network Intrusion Detection/Protection Systems (NIDS/NIPSes) where every packet is inspected against tens of thousands of predefined attack signatures written in regular expressions (regexes) To this end Deterministic Finite Automaton (DFA) is widely used for multi regex matching but existing DFA based researches have claimed high throughput at an expense of extremely high memory cost so fail to be employed in devices such as high speed routers and em bedded systems where the available memory is quite limited In this paper we propose a parallel architecture of DFA called Parallel DFA (PDFA) taking advantage of the large amount of concurrent flows to increase the throughput with nearly no extra memory cost The basic Idea is to selectively store the underlying DFA in memory modules that can be accessed in parallel To explore its potential parallelism we intensively study DFA split schemes from both state and transition points in this paper The performance of our approach in both the average cases and the worst cases is analyzed optimized and evaluated by numerical results The evaluation shows that we obtain an average speedup of 100 times compared with traditional DFA based matching approach", "paper_title": "Parallel DFA Architecture for Ultra High Throughput DFA-Based Pattern Matching", "paper_id": "WOS:000285434100009"}