{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "energy_behaviors"}, {"score": 0.049558064870310475, "phrase": "thread_management_constructs"}, {"score": 0.02501450882771164, "phrase": "concurrent_programs"}, {"score": 0.00471071771178029, "phrase": "java_programmers"}, {"score": 0.004608730887154718, "phrase": "numerous_choices"}, {"score": 0.004533685795068016, "phrase": "concurrent_execution"}, {"score": 0.004484332781147261, "phrase": "multicore_platforms"}, {"score": 0.004339459955098738, "phrase": "different_trade-offs"}, {"score": 0.003953806321226277, "phrase": "additional_dimension"}, {"score": 0.003784328428527216, "phrase": "empirical_study"}, {"score": 0.0035049738376240567, "phrase": "energy_consumption"}, {"score": 0.0034102660898135155, "phrase": "important_thread_management"}, {"score": 0.0033546701239540555, "phrase": "concurrent_programming"}, {"score": 0.002592784882557155, "phrase": "processed_data"}, {"score": 0.002536534348967786, "phrase": "extensive_experimental_space_exploration"}, {"score": 0.002508867228980776, "phrase": "real-world_java_programs"}, {"score": 0.0021874023741762496, "phrase": "first_step"}, {"score": 0.0021516991383785985, "phrase": "energy_efficiency"}, {"score": 0.0021049977753042253, "phrase": "parallel_architectures"}], "paper_keywords": ["Performance and Measurement", " Energy Consumption", " Performance", " Thread Management", " Multi-threaded Programming", " Java"], "paper_abstract": "Java programmers are faced with numerous choices in managing concurrent execution on multicore platforms. These choices often have different trade-offs (e.g., performance, scalability, and correctness guarantees). This paper analyzes an additional dimension, energy consumption. It presents an empirical study aiming to illuminate the relationship between the choices and settings of thread management constructs and energy consumption. We consider three important thread management constructs in concurrent programming: explicit thread creation, fixed-size thread pooling, and work stealing. We further shed light on the energy/performance trade-off of three \"tuning knobs\" of these constructs: the number of threads, the task division strategy, and the characteristics of processed data. Through an extensive experimental space exploration over real-world Java programs, we produce a list of findings about the energy behaviors of concurrent programs, which are not always obvious. The study serves as a first step toward improving energy efficiency of concurrent programs on parallel architectures.", "paper_title": "Understanding Energy Behaviors of Thread Management Constructs", "paper_id": "WOS:000348907400020"}