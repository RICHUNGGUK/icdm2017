{"auto_keywords": [{"score": 0.034582024677350484, "phrase": "iterative_approach"}, {"score": 0.03272075925832381, "phrase": "considered_machines"}, {"score": 0.027571885117316522, "phrase": "resource_allocation_heuristics"}, {"score": 0.00481495049065317, "phrase": "iterative_application"}, {"score": 0.004769444094319619, "phrase": "makespan_heuristics"}, {"score": 0.004724365740062236, "phrase": "non-makespan_machines"}, {"score": 0.004657542074154025, "phrase": "heterogeneous_parallel"}, {"score": 0.004548253531664032, "phrase": "heterogeneous_computing"}, {"score": 0.004420472010542188, "phrase": "coordinated_use"}, {"score": 0.0043786774510943625, "phrase": "different_types"}, {"score": 0.004195418010131832, "phrase": "diverse_workload"}, {"score": 0.004038943596016986, "phrase": "combined_performance"}, {"score": 0.004000741805312148, "phrase": "cost_effectiveness"}, {"score": 0.0037969755088553326, "phrase": "hc_system"}, {"score": 0.00370780481244907, "phrase": "optimization_criterion"}, {"score": 0.0036553070575015344, "phrase": "common_optimization_criterion"}, {"score": 0.003569451476205552, "phrase": "completion_time"}, {"score": 0.003199687131875466, "phrase": "mapping_heuristic"}, {"score": 0.0030078460113945136, "phrase": "successive_iteration"}, {"score": 0.002965229277927781, "phrase": "makespan_machine"}, {"score": 0.002923214590192792, "phrase": "previous_iteration"}, {"score": 0.0026202187680903063, "phrase": "different_mathematical_characteristics"}, {"score": 0.002371018116266096, "phrase": "first_contribution"}, {"score": 0.002304263635960015, "phrase": "iterative_technique"}, {"score": 0.0022181655497912796, "phrase": "second_contribution"}, {"score": 0.0021659920594094407, "phrase": "mathematical_characterization"}, {"score": 0.0021352776064254195, "phrase": "iteration_invariant\"_heuristics"}, {"score": 0.0021049977753042253, "phrase": "third_contribution"}], "paper_keywords": ["Heterogeneous computing", " Resource allocation", " Heuristics", " Parallel computing"], "paper_abstract": "Heterogeneous computing (HC) is the coordinated use of different types of machines, and networks to process a diverse workload in a manner that will maximize the combined performance and/or cost effectiveness of the system. Heuristics for allocating resources in an HC system are based on some optimization criterion. A common optimization criterion is to minimize the completion time of the machine that finishes last (makespan). In this study, we consider an iterative approach that repeatedly runs a mapping heuristic to minimize the makespan of the considered machines and tasks. For each successive iteration, the makespan machine of the previous iteration and the tasks assigned to it are removed from the set of considered machines and tasks. This study focuses on understanding the different mathematical characteristics of resource allocation heuristics that cause them to behave differently when combined with this iterative approach. This paper has three main contributions. The first contribution is the study of an iterative technique used in conjunction with resource allocation heuristics. The second contribution is the definition and mathematical characterization of \"iteration invariant\" heuristics. The third contribution is to determine the characteristics of a heuristic that will cause the mapping to change across iterations.", "paper_title": "Characterization of the iterative application of makespan heuristics on non-makespan machines in a heterogeneous parallel and distributed environment", "paper_id": "WOS:000308110300024"}