{"auto_keywords": [{"score": 0.0409303070249204, "phrase": "transformation_matrices"}, {"score": 0.03388515610215849, "phrase": "lower_levels"}, {"score": 0.02864039936811681, "phrase": "surface_normals"}, {"score": 0.00481495049065317, "phrase": "deformable_b-spline_surfaces"}, {"score": 0.004707672504464783, "phrase": "structured_computational_framework"}, {"score": 0.004517137548648729, "phrase": "vr_environment"}, {"score": 0.004383406949799696, "phrase": "deformable_shape"}, {"score": 0.004301834610818624, "phrase": "b-spline_surface"}, {"score": 0.004005410765048467, "phrase": "virtual_material_properties"}, {"score": 0.00396050388346298, "phrase": "proposed_technique"}, {"score": 0.0037153426267756452, "phrase": "b-spline_surfaces"}, {"score": 0.0035648266669315943, "phrase": "discrete_points"}, {"score": 0.0034332736827447654, "phrase": "control_points"}, {"score": 0.003148774338287351, "phrase": "accuracy_requirements"}, {"score": 0.0027811441123794427, "phrase": "multiple_contact_collision_detection"}, {"score": 0.0025892330566358503, "phrase": "triangulated_region"}, {"score": 0.0025409639091476363, "phrase": "necessary_information"}, {"score": 0.0025124343366192954, "phrase": "tangential_forces"}, {"score": 0.0024842242921857705, "phrase": "frictional_forces"}, {"score": 0.0024563302149829, "phrase": "proposed_algorithm"}, {"score": 0.002392453087295389, "phrase": "concept_design"}, {"score": 0.002330233210731171, "phrase": "existing_cad_softwares"}, {"score": 0.0023127544795063263, "phrase": "detailed_design"}, {"score": 0.002252602622785975, "phrase": "worst_case_scenario"}, {"score": 0.0021775526153883355, "phrase": "present_algorithm"}, {"score": 0.002161216637621284, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Collision detection", " Haptics", " Virtual sculpting", " Deformable objects", " B-spline surface", " Concept design", " Virtual reality"], "paper_abstract": "A structured Computational framework to efficiently detect collision between deformable freeform shapes in a VR environment is proposed in this paper. The deformable shape is represented as a B-spline surface and no assumption is made with regard to the degree of the surface, extent of deformation or virtual material properties. The proposed technique calculates and stores transformation matrices and their inverse during preprocessing, which are then used to discretize the B-spline surfaces. It exploits the fact that the transformation matrices for calculating discrete points on the B-spline are independent of the position of control points and therefore can be pre-calculated. The intensity of the points is dynamically increased at lower levels of detail as per accuracy requirements, and finally the regions which are likely to undergo collision are tessellated using these points. Spheres are used to determine lower levels of detail which makes this algorithm highly Suitable for Multiple contact collision detection. The algorithm efficiently calculates tangents and surface normals at these points. The surface normals give inside/outside property to the triangulated region and tangents provide the necessary information to model tangential forces such as frictional forces. The proposed algorithm is especially suitable for sculpting during concept design and its validation before exchanging information with existing CAD softwares for detailed design. A comparison based on the worst case scenario is presented to prove the efficiency of the present algorithm. Crown Copyright (c) 2008 Published by Elsevier Ltd. All rights reserved.", "paper_title": "Efficient algorithm to detect collision between deformable B-spline surfaces for virtual sculpting", "paper_id": "WOS:000261980900008"}