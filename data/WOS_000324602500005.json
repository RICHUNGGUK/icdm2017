{"auto_keywords": [{"score": 0.031164477181043794, "phrase": "galois_connections"}, {"score": 0.00481495049065317, "phrase": "unifying_theories"}, {"score": 0.004776297980616768, "phrase": "program_refinement"}, {"score": 0.0045324756541157574, "phrase": "different_levels"}, {"score": 0.004318422955036175, "phrase": "basic_unifying_theories_of_programming"}, {"score": 0.004114459435967195, "phrase": "vdm"}, {"score": 0.003951800212882157, "phrase": "extended_theory"}, {"score": 0.003660226272906374, "phrase": "utp-style_designs"}, {"score": 0.003501322813520807, "phrase": "program_constructors"}, {"score": 0.0034452601929727752, "phrase": "nondeterministic_choice"}, {"score": 0.003417565253539315, "phrase": "sequential_composition"}, {"score": 0.003335804608791029, "phrase": "single_designs"}, {"score": 0.0027260525536580912, "phrase": "program_structure"}, {"score": 0.0026500668745484957, "phrase": "important_property"}, {"score": 0.0026181517251690606, "phrase": "galois_connection"}, {"score": 0.0024149629835339926, "phrase": "refinement_laws"}, {"score": 0.0022546720211200893, "phrase": "extended_model"}, {"score": 0.002182958452794581, "phrase": "timed_model"}, {"score": 0.002165388556451298, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Unifying theories of programming (UTP)", " Real-time refinement", " Program termination"], "paper_abstract": "In this paper we consider three theories of programs and specifications at different levels of abstraction. The theories we focus on are: the basic Unifying Theories of Programming (UTP) model, which corresponds to the theories of VDM, B, and the refinement calculus; an extended theory that distinguishes abort from nontermination; and a further extension that introduces (abstract) time. We define UTP-style designs (or specifications) in each theory and show how program constructors, such as nondeterministic choice and sequential composition, can be expressed as single designs in each theory. To examine the relationships between the theories, we construct mappings in both directions between pairs of theories and show that the pairs of mappings form Galois connections. This shows that the simpler (more abstract) models are sub-theories of the more complex extensions. The mappings preserve the program structure and hence are homomorphisms. An important property of a Galois connection is that both mappings preserve refinement. The Galois connections between the models can be exploited to translate properties, including refinement laws, between theories. In addition, we show how to define an iteration in the extended model in terms of an iteration in the timed model. Crown Copyright (C) 2012 Published by Elsevier B.V. All rights reserved.", "paper_title": "Linking Unifying Theories of Program refinement", "paper_id": "WOS:000324602500005"}