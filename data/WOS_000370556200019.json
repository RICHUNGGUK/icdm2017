{"auto_keywords": [{"score": 0.04862717445897776, "phrase": "wimac"}, {"score": 0.00481495049065317, "phrase": "rapid_implementation_platform_for_user"}, {"score": 0.004790306679000464, "phrase": "definable_mac_protocols_through_separation"}, {"score": 0.0043452175611323335, "phrase": "wide_variety"}, {"score": 0.004300830853119242, "phrase": "real-time_mac_protocols"}, {"score": 0.004085579055228594, "phrase": "link_layer"}, {"score": 0.004023120753104693, "phrase": "physical_layer"}, {"score": 0.003982011128052839, "phrase": "mac_protocols"}, {"score": 0.0038413947966606118, "phrase": "underlying_physical_layer"}, {"score": 0.003724810609448597, "phrase": "extremely_small_latencies"}, {"score": 0.0036490529923833884, "phrase": "new_mac"}, {"score": 0.0035932440062595252, "phrase": "long_time"}, {"score": 0.00332670230152448, "phrase": "new_mac_protocols"}, {"score": 0.003209152260950748, "phrase": "quick_prototyping"}, {"score": 0.0030957429853133147, "phrase": "policy_separation"}, {"score": 0.002986329509791943, "phrase": "mac_layer"}, {"score": 0.002940626369102927, "phrase": "phy_layer"}, {"score": 0.0028659990472580154, "phrase": "separation_framework"}, {"score": 0.0026532596852754525, "phrase": "high_degree"}, {"score": 0.0026261108615242557, "phrase": "function_reuse"}, {"score": 0.0025992391074270097, "phrase": "design_flexibility"}, {"score": 0.002494466951433885, "phrase": "easy_cross-layer_design"}, {"score": 0.002443671484766342, "phrase": "protocol_changes"}, {"score": 0.0022738775158524793, "phrase": "new_mac_protocol"}, {"score": 0.002193447487477984, "phrase": "proposed_platform"}, {"score": 0.0021067014052712253, "phrase": "chain"}], "paper_keywords": ["Wireless testbed", " MAC", " software-defined radio"], "paper_abstract": "This demo presents WiMAC, a general-purpose wireless testbed for researchers to quickly prototype a wide variety of real-time MAC protocols for wireless networks. As the interface between the link layer and the physical layer, MAC protocols are often tightly coupled with the underlying physical layer, and need to have extremely small latencies. Implementing a new MAC requires a long time. In fact, very few MACs have ever been implemented, even though dozens of new MAC protocols have been proposed. To enable quick prototyping, we employ the mechanism vs. policy separation to decompose the functionality in the MAC layer and the PHY layer. Built on the separation framework, WiMAC achieves the independence of the software from the hardware, offering a high degree of function reuse and design flexibility. Hence, our platform not only supports easy cross-layer design but also allows protocol changes on the fly. Following the 802.11-like reference design, we demonstrate that deploying a new MAC protocol is quick and simple on the proposed platform through the implementation of the CSMA/CA and CHAIN protocols.", "paper_title": "WiMAC: Rapid Implementation Platform for User Definable MAC Protocols Through Separation", "paper_id": "WOS:000370556200019"}