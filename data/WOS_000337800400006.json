{"auto_keywords": [{"score": 0.049445419527232116, "phrase": "multicore_clusters"}, {"score": 0.04881990207677595, "phrase": "cpu_oversubscription"}, {"score": 0.00481495049065317, "phrase": "parallel_jobs"}, {"score": 0.004626255242038005, "phrase": "job_scheduling_strategies"}, {"score": 0.004565007074039171, "phrase": "multiprocessing_systems"}, {"score": 0.004444921827311577, "phrase": "waiting_times"}, {"score": 0.004299228562179176, "phrase": "user_requirements"}, {"score": 0.004130660282810338, "phrase": "execution_units"}, {"score": 0.003737485125097945, "phrase": "reduced_margin"}, {"score": 0.0036390887584943723, "phrase": "scheduling_decisions"}, {"score": 0.003381607100127276, "phrase": "specific_jobs"}, {"score": 0.003314591878914152, "phrase": "wait_queue"}, {"score": 0.00312138530097218, "phrase": "job_scheduling_strategy"}, {"score": 0.0030391594477173485, "phrase": "overall_performance"}, {"score": 0.0029789104204803137, "phrase": "resource_utilization"}, {"score": 0.0026593184154220123, "phrase": "experimental_evaluations"}, {"score": 0.00260657976055413, "phrase": "real_executions"}, {"score": 0.0024545413637350765, "phrase": "real_production_systems"}, {"score": 0.0023268399760599336, "phrase": "significant_improvements"}, {"score": 0.002295964130868963, "phrase": "previous_proposals"}, {"score": 0.002220551471767685, "phrase": "backfilling"}, {"score": 0.0021333110194180997, "phrase": "high_workloads"}, {"score": 0.0021049977753042253, "phrase": "strong_variations"}], "paper_keywords": ["Job scheduling", " MPI", " Malleability", " Application reconfiguration", " Multicore clusters", " CPU oversubscription"], "paper_abstract": "Job scheduling strategies in multiprocessing systems aim to minimize waiting times of jobs while satisfying user requirements in terms of number of execution units. However, the lack of flexibility in the requests leaves the scheduler a reduced margin of action for scheduling decisions. Many of such decisions consist on just moving ahead some specific jobs in the wait queue. In this work, we propose a job scheduling strategy that improves the overall performance and maximizes resource utilization by allowing jobs to adapt to variations in the load through CPU oversubscription and backfilling. The experimental evaluations include both real executions on multicore clusters and simulations of workload traces from real production systems. The results show that our strategy provides significant improvements over previous proposals like Gang Scheduling with Backfilling, especially in medium to high workloads with strong variations.", "paper_title": "Scheduling parallel jobs on multicore clusters using CPU oversubscription", "paper_id": "WOS:000337800400006"}