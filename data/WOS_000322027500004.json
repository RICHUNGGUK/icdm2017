{"auto_keywords": [{"score": 0.02623588463964941, "phrase": "locality-preserving_tasks"}, {"score": 0.00481495049065317, "phrase": "wait-free_computing"}, {"score": 0.00453772385360173, "phrase": "distributed_tasks"}, {"score": 0.004484215355348556, "phrase": "fundamental_relationships"}, {"score": 0.004327429667024575, "phrase": "individual_process"}, {"score": 0.004276390289178831, "phrase": "whole_system"}, {"score": 0.004225950334493496, "phrase": "locality_property"}, {"score": 0.0037234376132464463, "phrase": "distributed_algorithm"}, {"score": 0.003522749900725601, "phrase": "valid_output"}, {"score": 0.0034129490818185595, "phrase": "projection-closed_tasks"}, {"score": 0.0033328427701162368, "phrase": "rich_class"}, {"score": 0.0032034752726003025, "phrase": "projection-closed_task"}, {"score": 0.003042752533935891, "phrase": "stronger_notion"}, {"score": 0.002680556511196791, "phrase": "covering_complex"}, {"score": 0.002607246047604476, "phrase": "topological_property_yields_obstacles"}, {"score": 0.0025866699249916508, "phrase": "wait-free_solvability"}, {"score": 0.0025259082947443343, "phrase": "classical_impossibility_results"}, {"score": 0.0021301766910531137, "phrase": "edgepath_group"}, {"score": 0.0021049977753042253, "phrase": "input_complex"}], "paper_keywords": ["Checking", " Locality", " Topology", " Wait-free computing"], "paper_abstract": "This paper studies notions of locality that are inherent to the specification of distributed tasks by identifying fundamental relationships between the various scales of computation, from the individual process to the whole system. A locality property called projection-closed is identified. This property completely characterizes tasks that are wait-free checkable, where a task is said to be checkable if there exists a distributed algorithm that, given and , determines whether , i.e., whether is a valid output for according to the specification of . Projection-closed tasks are proved to form a rich class of tasks. In particular, determining whether a projection-closed task is wait-free solvable is shown to be undecidable. A stronger notion of locality is identified by considering tasks whose outputs \"look identical\" to the inputs at every process: a task is said to be locality-preserving if is a covering complex of . We show that this topological property yields obstacles for wait-free solvability different in nature from the classical impossibility results. On the other hand, locality-preserving tasks are projection-closed, and thus they are wait-free checkable. A classification of locality-preserving tasks in term of their relative computational power is provided. This is achieved by defining a correspondence between subgroups of the edgepath group of an input complex and locality-preserving tasks. This correspondence enables to demonstrate the existence of hierarchies of locality-preserving tasks, each one containing, at the top, the universal task (induced by the universal covering complex), and, at the bottom, the trivial identity task.", "paper_title": "Locality and checkability in wait-free computing", "paper_id": "WOS:000322027500004"}