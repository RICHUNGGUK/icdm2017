{"auto_keywords": [{"score": 0.04954397446159371, "phrase": "software_product_lines"}, {"score": 0.03410093818129743, "phrase": "spl_engineering"}, {"score": 0.00481495049065317, "phrase": "software_product_line_engineering"}, {"score": 0.004707942424755376, "phrase": "spl"}, {"score": 0.004475659507646842, "phrase": "variant-rich_software_systems"}, {"score": 0.004376131419366239, "phrase": "non-variable_systems"}, {"score": 0.004160177106153782, "phrase": "increasingly_amount"}, {"score": 0.0041136473765874815, "phrase": "possible_products"}, {"score": 0.004067635935640407, "phrase": "different_approaches"}, {"score": 0.0036347979916389467, "phrase": "error_detection_capability"}, {"score": 0.0035141291835319682, "phrase": "error_injection"}, {"score": 0.003474799999519295, "phrase": "correct_version"}, {"score": 0.003266201217790818, "phrase": "potential_errors"}, {"score": 0.002984867789900281, "phrase": "existing_paradigms"}, {"score": 0.0027898428590137515, "phrase": "respective_specification_processes"}, {"score": 0.0027123819773059127, "phrase": "test_quality"}, {"score": 0.002651960559564796, "phrase": "mutation_testing_techniques"}, {"score": 0.0025638362414466278, "phrase": "identified_errors"}, {"score": 0.002535115422089855, "phrase": "mutation_operators"}, {"score": 0.0024370965602952496, "phrase": "existing_tests"}, {"score": 0.0024097920845706795, "phrase": "defective_products"}, {"score": 0.0023428586429492713, "phrase": "test_assessment"}, {"score": 0.0021651504858015364, "phrase": "surveyed_spl_design_paradigms"}, {"score": 0.0021049977753042253, "phrase": "spl_tests"}], "paper_keywords": [""], "paper_abstract": "Software product lines (SPL) are a method for the development of variant-rich software systems. Compared to non-variable systems, testing SPLs is extensive due to an increasingly amount of possible products. Different approaches exist for testing SPLs, but there is less research for assessing the quality of these tests by means of error detection capability. Such test assessment is based on error injection into correct version of the system under test. However to our knowledge, potential errors in SPL engineering have never been systematically identified before. This article presents an overview over existing paradigms for specifying software product lines and the errors that can occur during the respective specification processes. For assessment of test quality, we leverage mutation testing techniques to SPL engineering and implement the identified errors as mutation operators. This allows us to run existing tests against defective products for the purpose of test assessment. From the results, we draw conclusions about the error-proneness of the surveyed SPL design paradigms and how quality of SPL tests can be improved.", "paper_title": "Potential Errors and Test Assessment in Software Product Line Engineering", "paper_id": "WOS:000367334300005"}