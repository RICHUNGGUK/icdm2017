{"auto_keywords": [{"score": 0.042829132218243846, "phrase": "ires"}, {"score": 0.012026046691953342, "phrase": "integration_linker"}, {"score": 0.00481495049065317, "phrase": "reconfigurable_embedded_system"}, {"score": 0.004669845451682529, "phrase": "interesting_topic"}, {"score": 0.004460309246062286, "phrase": "hardware_and_software_communications_interface"}, {"score": 0.004238452771031322, "phrase": "hardware_communication_interface"}, {"score": 0.004152818376630929, "phrase": "reconfigurable_embedded_systems"}, {"score": 0.003926105480202798, "phrase": "reconfigurable_computing_architectures"}, {"score": 0.0038467574225322086, "phrase": "traditional_central_processing_unit"}, {"score": 0.003788296551609616, "phrase": "reconfigurable_field_programmable_gate_array"}, {"score": 0.0032336801561165113, "phrase": "hardware_net-list_files"}, {"score": 0.0029951555610569225, "phrase": "boot_loader"}, {"score": 0.002731971103291716, "phrase": "task_and_hardware_functions"}, {"score": 0.00267669209359436, "phrase": "program_segment_prefixes"}, {"score": 0.0026091594819333654, "phrase": "interaction_information"}, {"score": 0.0025826247025542213, "phrase": "hardware_and_software_resources"}, {"score": 0.002479150189700726, "phrase": "target-embedded_environment"}, {"score": 0.0024414225109100672, "phrase": "implicit_hardwire-call"}, {"score": 0.002367676766637248, "phrase": "hardware_functions"}, {"score": 0.002331641523873951, "phrase": "task_codes"}, {"score": 0.0022382002476510573, "phrase": "realised_hardware_platform"}, {"score": 0.0021705796895687864, "phrase": "communication_effectiveness"}, {"score": 0.0021049977753042253, "phrase": "video_compression_applications"}], "paper_keywords": [""], "paper_abstract": "Hardware/software co-design is an interesting topic for most embedded system architects. However, designers find integrating hardware and software communications interface challenging. A framework for integrating the software and hardware communication interface for computing in reconfigurable embedded systems, called IRES, is proposed. The framework supports reconfigurable computing architectures, based on traditional central processing unit and the reconfigurable field programmable gate array, and composed of the integration linker, the boot loader, small task-oriented operating objects and the hardware management unit. The integration linker enables the IRES to link hardware net-list files and tasks into one execution. le, called the executor, constructed with the boot loader, the task-oriented operating kernel, the application tasks and the accelerating hardware functions. Task and hardware functions are segregated by program segment prefixes, designed to record interaction information of hardware and software resources. When the executor operates on the target-embedded environment, the implicit hardwire-call will be supported to invoke hardware functions in the task codes. The IRES successfully implements in the realised hardware platform, and this work verifies communication effectiveness between hardware and software through video compression applications.", "paper_title": "IRES: An integrated software and hardware interface framework for reconfigurable embedded system", "paper_id": "WOS:000273044100003"}