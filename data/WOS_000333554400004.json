{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "configurable_range_memory"}, {"score": 0.04913548507380238, "phrase": "programmable_accelerators"}, {"score": 0.03924757433032126, "phrase": "main_processor"}, {"score": 0.004767261858417823, "phrase": "effective_data_reuse"}, {"score": 0.004581162468419365, "phrase": "application-specific_processors"}, {"score": 0.004402295697276237, "phrase": "compute-intensive_kernels"}, {"score": 0.004294052530714228, "phrase": "application_performance"}, {"score": 0.003984968827278219, "phrase": "communication_overhead"}, {"score": 0.00392586404888927, "phrase": "shared_memory"}, {"score": 0.003848413823574867, "phrase": "scratchpad_memory"}, {"score": 0.00367967106192446, "phrase": "accelerator_coprocessor"}, {"score": 0.0035358770665604657, "phrase": "significant_challenge"}, {"score": 0.0032486392192981944, "phrase": "superfluous_data_copying"}, {"score": 0.002769568481822277, "phrase": "unnecessary_data_copying"}, {"score": 0.002687922713487696, "phrase": "data_reuse"}, {"score": 0.00256993314099902, "phrase": "software_management_algorithm"}, {"score": 0.002531763854925924, "phrase": "crm."}, {"score": 0.0024941578231560055, "phrase": "detailed_simulation"}, {"score": 0.0024693979425773993, "phrase": "full_multimedia_applications"}, {"score": 0.0023028105026714533, "phrase": "kernel_execution_time"}, {"score": 0.002158179521369965, "phrase": "considerable_system_energy_reduction"}, {"score": 0.0021049977753042253, "phrase": "conventional_architecture"}], "paper_keywords": ["Algorithms", " Design", " Performance", " On-chip memory architectures and management", " scratchpads", " compiler-controlled memories", " coarse-grained reconfigurable architecture", " array mapping"], "paper_abstract": "While programmable accelerators such as application-specific processors and reconfigurable architectures can dramatically speed up compute-intensive kernels of an application, application performance can still be severely limited by the communication between processors. To minimize the communication overhead, a shared memory such as a scratchpad memory may be employed between the main processor and the accelerator coprocessor. However, this setup poses a significant challenge to the main processor, which now must manage data on the scratchpad explicitly, resulting in superfluous data copying due to the inflexibility of a scratchpad. In this article, we present an enhancement of a scratchpad, Configurable Range Memory (CRM), whose address range can be reprogrammed to minimize unnecessary data copying between processors and therefore promote data reuse on the accelerator, and also present a software management algorithm for the CRM. Our experimental results involving detailed simulation of full multimedia applications demonstrate that our CRM architecture can reduce the communication overhead quite effectively, reducing the kernel execution time by up to 28% and the application runtime by up to 12.8%, in addition to considerable system energy reduction, compared to the conventional architecture based on a scratchpad.", "paper_title": "Configurable Range Memory for Effective Data Reuse on Programmable Accelerators", "paper_id": "WOS:000333554400004"}