{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "memory_access"}, {"score": 0.01515275491232451, "phrase": "double_binary_convolutional_turbo_code"}, {"score": 0.011392992840882663, "phrase": "smc"}, {"score": 0.004726382602809228, "phrase": "decoding_scheme"}, {"score": 0.00399881984083004, "phrase": "iterative_decoding_scheme"}, {"score": 0.003644001325962353, "phrase": "backward_state_metrics"}, {"score": 0.003543804852018315, "phrase": "state_metric_cache"}, {"score": 0.003140401552000472, "phrase": "recalculation_unit"}, {"score": 0.0029699874949715367, "phrase": "forward_direction"}, {"score": 0.0023537101705489957, "phrase": "scaling_technique"}, {"score": 0.0022889103976458437, "phrase": "proposed_scheme"}, {"score": 0.0021049977753042253, "phrase": "well-known_log-map_algorithm"}], "paper_keywords": ["backward state metrics", " DB CTC", " recalculation", " SMC"], "paper_abstract": "To decrease memory access of the decoder for double binary convolutional turbo code (DB CTC), an iterative decoding scheme is proposed. Instead of accessing all of the backward state metrics from the state metric cache (SMC), a part of them is computed by the recalculation unit (RU) in the forward direction. By analysis and simulations, both the amount of memory access and the size of SMC are reduced by about 45%. Moreover, combined with the scaling technique, the proposed scheme gets decoding performance near to that of the well-known Log-MAP algorithm.", "paper_title": "A Memory Access Decreased Decoding Scheme for Double Binary Convolutional Turbo Code", "paper_id": "WOS:000323236400017"}