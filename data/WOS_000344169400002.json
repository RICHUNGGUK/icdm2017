{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hpc_applications"}, {"score": 0.035069352259263144, "phrase": "performance_portability"}, {"score": 0.004763565662615503, "phrase": "scientific_applications"}, {"score": 0.004301834610818624, "phrase": "computing_infrastructures"}, {"score": 0.004143196873246147, "phrase": "software_engineering"}, {"score": 0.004055176557424983, "phrase": "major_issue"}, {"score": 0.003802135020791801, "phrase": "high_performance"}, {"score": 0.0037615180375561805, "phrase": "component_based_software_engineering"}, {"score": 0.003701401653850141, "phrase": "promising_approach"}, {"score": 0.0035648266669315943, "phrase": "software_architecture"}, {"score": 0.003451766520526601, "phrase": "existing_models"}, {"score": 0.0033602844686125375, "phrase": "adequate_support"}, {"score": 0.0031845067058084583, "phrase": "low_level_component_model"}, {"score": 0.003066945490483524, "phrase": "inter-component_interactions"}, {"score": 0.002985631781749091, "phrase": "high_performance_computing"}, {"score": 0.0029221312451219203, "phrase": "process-local_shared_memory"}, {"score": 0.002814309525596036, "phrase": "fortran"}, {"score": 0.0027693053691662008, "phrase": "mpi"}, {"score": 0.002724909017963099, "phrase": "corba."}, {"score": 0.0025003054002226965, "phrase": "stencil_computation"}, {"score": 0.002473560912156024, "phrase": "i.e._a_structured_mesh_jacobi_implementation"}, {"score": 0.0023694065215394593, "phrase": "domain_decomposition"}, {"score": 0.0023314867226678555, "phrase": "experimental_results"}, {"score": 0.0022333012657436307, "phrase": "curie_supercomputer_show"}, {"score": 0.0021049977753042253, "phrase": "native_implementations"}], "paper_keywords": ["HPC", " Component models", " Performance portability", " Curie supercomputer", " Grid'5000"], "paper_abstract": "Scientific applications are getting increasingly complex, e.g., to improve their accuracy by taking into account more phenomena. Meanwhile, computing infrastructures are continuing their fast evolution. Thus, software engineering is becoming a major issue to offer ease of development, portability and maintainability while achieving high performance. Component based software engineering offers a promising approach that enables the manipulation of the software architecture of applications. However, existing models do not provide an adequate support for performance portability of HPC applications. This paper proposes a low level component model ((LC)-C-2) that supports inter-component interactions for typical scenarios of high performance computing, such as process-local shared memory and function invocation (C++ and FORTRAN), MPI, and CORBA. To study the benefits of using (LC)-C-2, this paper walks through an example of stencil computation, i.e. a structured mesh Jacobi implementation of the 2D heat equation parallelized through domain decomposition. The experimental results obtained on the Grid'5000 testbed and on the Curie supercomputer show that (LC)-C-2 can achieve performance similar to that of native implementations, while easing performance portability.", "paper_title": "A low level component model easing performance portability of HPC applications", "paper_id": "WOS:000344169400002"}