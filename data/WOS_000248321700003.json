{"auto_keywords": [{"score": 0.04966008989090485, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "hybrid_image-based_collision_detection"}, {"score": 0.004628223381645729, "phrase": "computer_graphics"}, {"score": 0.0045877173513910055, "phrase": "virtual_reality"}, {"score": 0.0043519860930099795, "phrase": "geometrical_interference"}, {"score": 0.00416478405812793, "phrase": "geometrical_complexity"}, {"score": 0.0040385352882334235, "phrase": "image-based_methods"}, {"score": 0.003985602342418578, "phrase": "increasing_acceptance"}, {"score": 0.0037973594873521596, "phrase": "object_geometry"}, {"score": 0.0036660436272785476, "phrase": "computational_burden"}, {"score": 0.003633927813203731, "phrase": "graphics_hardware"}, {"score": 0.00355485940716082, "phrase": "existing_image-based_methods"}, {"score": 0.0034775126378109545, "phrase": "opengl"}, {"score": 0.0033572130837348623, "phrase": "direct_way"}, {"score": 0.002994178996584381, "phrase": "hybrid_image-based_collision_detection_method"}, {"score": 0.00284009509859163, "phrase": "image-based_collision_detection"}, {"score": 0.0026352496813713292, "phrase": "successive_offscreen_views"}, {"score": 0.002544017922741882, "phrase": "probing_object"}, {"score": 0.0024130437638400404, "phrase": "offscreen_rendering"}, {"score": 0.0023604768913655463, "phrase": "collision_detection"}, {"score": 0.002238930800075706, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["collision detection", " hybrid", " image-based", " Java 3D", " temporal coherence"], "paper_abstract": "Collision detection is highly important in computer graphics and virtual reality. Most collision detection methods are object-based, relying on testing the geometrical interference of objects, and their performance therefore depends on the geometrical complexity of the objects. Recently, image-based methods have gained increasing acceptance for their simplicity in implementation, robustness with respect to the object geometry, and the potential to distribute the computational burden onto graphics hardware. However, all existing image-based methods require direct calls to OpenGL, but so far there is no direct way to access OpenGL through the Java 3D API. Although Java 3D provides its own built-in collision detection classes, they are either incorrect or inefficient. In this paper, we present a hybrid image-based collision detection method in Java 31), which incorporates the Java 3D built-in collision detection and the image-based collision detection in our specially devised scene graph. In addition, we take advantage of the fact that the 3D position of successive offscreen views (i.e. virtual views perceived by the probing object) does not change significantly and thereby reduce the occurrences of offscreen rendering, so that the collision detection becomes even faster (up to 50% in our case). Experimental results prove the correctness and efficiency of our method. Copyright (C) 2006 John Wiley & Sons, Ltd.", "paper_title": "Hybrid image-based collision detection in Java 3D", "paper_id": "WOS:000248321700003"}