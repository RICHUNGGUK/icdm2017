{"auto_keywords": [{"score": 0.04862539438503132, "phrase": "crown_structures"}, {"score": 0.04194133676529324, "phrase": "linear_programming"}, {"score": 0.00481497194457054, "phrase": "crown"}, {"score": 0.0047267100475487595, "phrase": "vertex_cover_kernelization"}, {"score": 0.004335739075947899, "phrase": "kernelization_algorithms"}, {"score": 0.004256243266481051, "phrase": "classic_vertex_cover_problem"}, {"score": 0.003880017219275826, "phrase": "prior_use"}, {"score": 0.003738973626996355, "phrase": "predictable_results"}, {"score": 0.0031845067058084583, "phrase": "somewhat_variable_results"}, {"score": 0.0025495426598675583, "phrase": "crown_reductions"}, {"score": 0.0023527296826339225, "phrase": "induced_crown-free_subgraph"}, {"score": 0.0022117133940361025, "phrase": "maximum_size"}, {"score": 0.0021710766932077972, "phrase": "arbitrary_graph"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time"}], "paper_keywords": [""], "paper_abstract": "Crown structures in a graph are defined and shown to be useful in kernelization algorithms for the classic vertex cover problem. Two vertex cover kernelization methods are discussed. One, based on linear programming, has been in prior use and is known to produce predictable results, although it was not previously associated with crowns. The second, based on crown structures, is newer and much faster, but produces somewhat variable results. These two methods are studied and compared both theoretically and experimentally with each other and with older, more primitive kernelization algorithms. Properties of crowns and methods for identifying them are discussed. Logical connections between, linear programming and crown reductions are established. It is shown that the problem of finding an induced crown-free subgraph, and the problem of finding a crown of maximum size in an arbitrary graph, are solvable in polynomial time.", "paper_title": "Crown structures for vertex cover kernelization", "paper_id": "WOS:000249654500003"}