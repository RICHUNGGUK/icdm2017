{"auto_keywords": [{"score": 0.03923307184680597, "phrase": "state_transition_models"}, {"score": 0.036146701610938206, "phrase": "symbolic_generalisation"}, {"score": 0.03565555207038495, "phrase": "logic_programs"}, {"score": 0.029017828263131214, "phrase": "state_transitions"}, {"score": 0.00481495049065317, "phrase": "stochastic_logical_automaton"}, {"score": 0.004486640769041646, "phrase": "logical_generalisation"}, {"score": 0.0044237033788643715, "phrase": "probabilistic_temporal_models"}, {"score": 0.0042102651938187114, "phrase": "logic_and_probabilistic_models"}, {"score": 0.004035500442527029, "phrase": "inductive_generalisation_algorithms"}, {"score": 0.0038679618585498597, "phrase": "first_part"}, {"score": 0.0037868092509097404, "phrase": "graphical_generalisation"}, {"score": 0.0035533891890176823, "phrase": "state_mergers"}, {"score": 0.003478813491904962, "phrase": "second_part"}, {"score": 0.003195787852087248, "phrase": "plotkin's_lgg"}, {"score": 0.002998688867384969, "phrase": "third_part"}, {"score": 0.002793874145713024, "phrase": "input_sequences"}, {"score": 0.002603012037901889, "phrase": "probability_distributions"}, {"score": 0.0024251568696803177, "phrase": "em_algorithm"}, {"score": 0.0022434880661725493, "phrase": "chemical_reaction_rules"}, {"score": 0.002211947103318718, "phrase": "stochsim"}, {"score": 0.0021049977753042253, "phrase": "biochemical_reactions"}], "paper_keywords": [""], "paper_abstract": "This paper is concerned with algorithms for the logical generalisation of probabilistic temporal models from examples. The algorithms combine logic and probabilistic models through inductive generalisation. The inductive generalisation algorithms consist of three parts. The first part describes the graphical generalisation of state transition models. State transition models are generalised by applying state mergers. The second part involves symbolic generalisation of logic programs which are embedded in each states. Plotkin's LGG is used for symbolic generalisation of logic programs. The third part covers learning of parameters using statistics derived from the input sequences. The state transitions are unobservable in our settings. The probability distributions over the state transitions and actions are estimated using the EM algorithm. As an application of these algorithms, we learn chemical reaction rules from StochSim, the stochastic software simulator of biochemical reactions.", "paper_title": "Learning stochastic logical automaton", "paper_id": "WOS:000239588900024"}