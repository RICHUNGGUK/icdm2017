{"auto_keywords": [{"score": 0.009601039712381593, "phrase": "all-pairs_lca_problem"}, {"score": 0.0073096945081891716, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "lowest_common_ancestors"}, {"score": 0.004790153050564259, "phrase": "directed_acyclic_graphs"}, {"score": 0.004692227830462433, "phrase": "lowest_common_ancestor"}, {"score": 0.004560826038984214, "phrase": "directed_acyclic_graph"}, {"score": 0.00443308765153716, "phrase": "first_method"}, {"score": 0.004286708921931472, "phrase": "n_vertices"}, {"score": 0.004155865805609238, "phrase": "second_method"}, {"score": 0.0041131413335556396, "phrase": "novel_reduction"}, {"score": 0.0040186038781533946, "phrase": "maximum_witnesses"}, {"score": 0.003997891221012094, "phrase": "boolean_matrix_product"}, {"score": 0.0039465735912396355, "phrase": "latter_problem"}, {"score": 0.003468145597448862, "phrase": "n_x"}, {"score": 0.0031845067058084583, "phrase": "previously_known_o"}, {"score": 0.0030872017736888113, "phrase": "general_all-pairs_lca_problem"}, {"score": 0.0030554300179552415, "phrase": "bender_et_al"}, {"score": 0.0030161733498347476, "phrase": "faster_algorithm"}, {"score": 0.002985130390111069, "phrase": "all-pairs_lowest_common_ancestor_problem"}, {"score": 0.0028346293790895024, "phrase": "longest_path"}, {"score": 0.002199698267439487, "phrase": "arbitrary_dags"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b._v."}], "paper_keywords": ["directed acyclic graphs", " lowest common ancestors", " matrix multiplication", " time complexity"], "paper_abstract": "We present two new methods for finding a lowest common ancestor (LCA) for each pair of vertices of a directed acyclic graph (dag) on n vertices and m edges. The first method is surprisingly natural and solves the all-pairs LCA problem for the input dag on n vertices and m edges in time 0 (n m). The second method relies on a novel reduction of the all-pairs LCA problem to the problem of finding maximum witnesses for Boolean matrix product. We solve the latter problem (and hence also the all-pairs LCA problem) in time 0 (n (2+lambda)), where A satisfies the equation to (1, lambda, I) = 1 + 2 lambda and w (1, lambda, 1) is the exponent of the multiplication of an n x n (lambda) matrix by an n (lambda) x n matrix. By the currently best known bounds on w 1, lambda, 1), the running time of our algorithm is O (n (2.575)). Our algorithm improves the previously known O (n (2.688)) time-bound for the general all-pairs LCA problem in dags by Bender et al. Our additional contribution is a faster algorithm for solving the all-pairs lowest common ancestor problem in dags of small depth, where the depth of a dag is defined as the length of the longest path in the dag. For all dags of depth at most h <= n alpha where alpha approximate to 0.294, our algorithm runs in a time that is asymptotically the same as that required for multiplying two n x n matrices, that is, O (n (w)); we also prove that this running time is optimal even for dags of depth 1. For dags with depth h > n (alpha) the running time of our algorithm is at most O (n (w) ho (0.468)). This algorithm is faster than our algorithm for arbitrary dags for all values of h <= n (0.42). (C) 2007 Elsevier B. V. All rights reserved.", "paper_title": "Faster algorithms for finding lowest common ancestors in directed acyclic graphs", "paper_id": "WOS:000247766100004"}