{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sequential_programs"}, {"score": 0.004549063619065006, "phrase": "control-flow-based_safety_properties"}, {"score": 0.004102528738941734, "phrase": "desired_global_property"}, {"score": 0.004060350364088702, "phrase": "local_properties"}, {"score": 0.0037965243835456214, "phrase": "property_decomposition"}, {"score": 0.0037188360359702182, "phrase": "maximal_model_construction"}, {"score": 0.0035497797026638033, "phrase": "component_implementations"}, {"score": 0.003441352119167824, "phrase": "safety_properties"}, {"score": 0.0033190180867511605, "phrase": "program_control_flow"}, {"score": 0.003168079471049896, "phrase": "grumberg"}, {"score": 0.0030872017736888113, "phrase": "maximal_models"}, {"score": 0.0030396665931462, "phrase": "compositional_verification"}, {"score": 0.0030083825666563898, "phrase": "finite-state_parallel_processes"}, {"score": 0.0028715299874549245, "phrase": "novel_maximal_model_construction"}, {"score": 0.0027837615811247963, "phrase": "modal_p-calculus"}, {"score": 0.002726740692380339, "phrase": "greatest_fixed_points"}, {"score": 0.0026297428083782875, "phrase": "control-flow_graphs"}, {"score": 0.0025493457404304446, "phrase": "sequential_procedural_language"}, {"score": 0.002445950676329976, "phrase": "private_procedures"}, {"score": 0.0023346234464901978, "phrase": "inlining_transformation"}, {"score": 0.0021826828321952615, "phrase": "required_verification_steps"}, {"score": 0.0021049977753042253, "phrase": "electronic_purse_case_study"}], "paper_keywords": ["program verification", " control-flow behaviour", " compositional reasoning", " modal mu-calculus", " safety properties", " maximal model", " private procedures"], "paper_abstract": "We present a method for algorithmic, compositional verification of control-flow-based safety properties of sequential programs with procedures. The application of the method involves three steps: (1) decomposing the desired global property into local properties of the components, (2) proving the correctness of the property decomposition by using a maximal model construction, and (3) verifying that the component implementations obey their local specifications. We consider safety properties of both the structure and the behaviour of program control flow. Our compositional verification method builds on a technique proposed by Grumberg and Long that uses maximal models to reduce compositional verification of finite-state parallel processes to standard model checking. We present a novel maximal model construction for the fragment of the modal P-calculus with boxes and greatest fixed points only, and adapt it to control-flow graphs modelling components described in a sequential procedural language. We extend our verification method to programs with private procedures by defining an abstraction, presented as an inlining transformation. All algorithms have been implemented in a tool set automating all required verification steps. We validate our approach on an electronic purse case study. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Compositional verification of sequential programs with procedures", "paper_id": "WOS:000258015900004"}