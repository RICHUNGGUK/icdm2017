{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "counterexample"}, {"score": 0.004605434064238641, "phrase": "sat-based_model"}, {"score": 0.00443308765153716, "phrase": "important_and_distinguished_method"}, {"score": 0.004321772629297024, "phrase": "recent_synthesis"}, {"score": 0.004267163206961948, "phrase": "verification_research_topics"}, {"score": 0.004213240903095234, "phrase": "existing_approaches"}, {"score": 0.003548368289666932, "phrase": "unsat_proof"}, {"score": 0.0033295966773779174, "phrase": "interpolation-based_model_checking_procedure"}, {"score": 0.0031845067058084583, "phrase": "new_approach"}, {"score": 0.0030651710672229926, "phrase": "functionally_different_interpolants"}, {"score": 0.0028037753646260937, "phrase": "novel_interpolant_generation_algorithm"}, {"score": 0.002750721367040336, "phrase": "reinterpreted_interpolation-based_model"}, {"score": 0.0026475981474045414, "phrase": "spurious_counterexamples"}, {"score": 0.0025974916908139472, "phrase": "model_checker"}, {"score": 0.0024527767211457046, "phrase": "excessive_refinements"}, {"score": 0.002391067964886602, "phrase": "extra_benefit"}, {"score": 0.002360796860462937, "phrase": "proof_logging"}, {"score": 0.002286781334850213, "phrase": "sat_solvers"}, {"score": 0.0022292394795878643, "phrase": "promising_results"}, {"score": 0.0021319959284827896, "phrase": "large_set"}, {"score": 0.0021049977753042253, "phrase": "hwmcc_benchmarks"}], "paper_keywords": ["Formal verification", " model checking", " satisfiability (SAT)", " simulation"], "paper_abstract": "Interpolation is an important and distinguished method popularly applied to recent synthesis and verification research topics. Existing approaches generate interpolants by analyzing unsatisfiability (UNSAT) proofs from satisfiable (SAT) solvers. Unfortunately, the interpolant is predestinedly determined by how the UNSAT proof is logged. This particularly weakens the abstraction of interpolation-based model checking procedure. In this paper, a new approach to generate a variety of functionally different interpolants using simulation and SAT solving is proposed. We further seamlessly integrated the novel interpolant generation algorithm into a reinterpreted interpolation-based model checking procedure. Moreover, spurious counterexamples from the model checker further guide the generation of interpolants to refute excessive refinements. As an extra benefit, proof logging is not required for SAT solvers. Experiments show promising results of our interpolation-based model checker NewITP on solving a large set of HWMCC benchmarks.", "paper_title": "A Counterexample-Guided Interpolant Generation Algorithm for SAT-Based Model Checking", "paper_id": "WOS:000345518500007"}