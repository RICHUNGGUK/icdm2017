{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "first_performance_results"}, {"score": 0.004413846562278824, "phrase": "real-world_domain"}, {"score": 0.0038737214010638745, "phrase": "effective_move"}, {"score": 0.003350480663660326, "phrase": "strong_backgammon_programs"}, {"score": 0.002897710777957041, "phrase": "tournament_conditions"}, {"score": 0.002814759530655965, "phrase": "regular_hardware"}, {"score": 0.00269475174341129, "phrase": "risky_forward-pruning_techniques"}, {"score": 0.0025059724686541263, "phrase": "empirical_evidence"}, {"score": 0.0023990982005125763, "phrase": "today's_sophisticated_evaluation_functions"}, {"score": 0.0021049977753042253, "phrase": "deep_searches"}], "paper_keywords": [""], "paper_abstract": "This paper presents the first performance results for Ballard's *-MINIMAX algorithms applied to a real-world domain: backgammon. It is shown that with effective move ordering and probing the STAR2 algorithm considerably outperforms EXPECTIMAX. STAR2 allows strong backgammon programs to conduct depth-5 full-width searches (up from 3) under tournament conditions on regular hardware without using risky forward-pruning techniques. We also present empirical evidence that with today's sophisticated evaluation functions good checker play in backgammon does not require deep searches.", "paper_title": "*-MINIMAX performance in backgammon", "paper_id": "WOS:000236481900004"}