{"auto_keywords": [{"score": 0.04006457389992901, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "optimal_polytrees"}, {"score": 0.00472961267657106, "phrase": "np-hard_problem"}, {"score": 0.004662427600500598, "phrase": "directed_acyclic_graph"}, {"score": 0.004278807087784626, "phrase": "probabilistic_network"}, {"score": 0.004110805636140557, "phrase": "dag"}, {"score": 0.004084307764140389, "phrase": "artificial_intelligence"}, {"score": 0.004055176557424983, "phrase": "machine_learning"}, {"score": 0.0034394269654205094, "phrase": "polynomial-time_algorithms"}, {"score": 0.003378385493203297, "phrase": "rare_special_cases"}, {"score": 0.003023307182674672, "phrase": "polynomial-time_result"}, {"score": 0.0028857130140890787, "phrase": "constant_number"}, {"score": 0.0028041618337853, "phrase": "matroid_intersection_formulation"}, {"score": 0.002734692147497601, "phrase": "polynomial_time"}, {"score": 0.00266693888510356, "phrase": "deleted_arcs"}, {"score": 0.0026008598632891837, "phrase": "fixed-parameter_tractability"}, {"score": 0.002482443883144136, "phrase": "sought_polytree"}, {"score": 0.002377916348320401, "phrase": "positive_result"}, {"score": 0.002285961573963468, "phrase": "deleted_nodes"}, {"score": 0.0022615046141708987, "phrase": "somewhat_more_powerful_parameter"}, {"score": 0.0021507795710951384, "phrase": "complexity-theoretic_assumption"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Directed acyclic graphs", " Branchings", " Polytrees", " Parameterized complexity", " Matroids", " Probabilistic networks"], "paper_abstract": "We study the NP-hard problem of finding a directed acyclic graph (DAG) on a given set of nodes so as to maximize a given scoring function. The problem models the task of inferring a probabilistic network from data, which has been studied extensively in the fields of artificial intelligence and machine learning. Several variants of the problem, where the output DAG is constrained in several ways, are NP-hard as well, for example when the DAG is required to have bounded in-degree, or when it is required to be a polytree. Polynomial-time algorithms are known only for rare special cases, perhaps most notably for branchings, that is, polytrees in which the in-degree of every node is at most one. In this paper, we generalize this polynomial-time result to polytrees that can be turned into a branching by deleting a constant number of arcs. Our algorithm stems from a matroid intersection formulation. As the order of the polynomial time bound depends on the number of deleted arcs, the algorithm does not establish fixed-parameter tractability when parameterized by that number. We show that certain additional constraints on the sought polytree render the problem fixed-parameter tractable. We contrast this positive result by showing that if we parameterize by the number of deleted nodes, a somewhat more powerful parameter, the problem is not fixed-parameter tractable, subject to a complexity-theoretic assumption. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "On finding optimal polytrees", "paper_id": "WOS:000358624300005"}