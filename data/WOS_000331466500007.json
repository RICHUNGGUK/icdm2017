{"auto_keywords": [{"score": 0.04197433980815135, "phrase": "ellen_et_al"}, {"score": 0.039626448526133604, "phrase": "obstruction-free_implementation"}, {"score": 0.03924757433032126, "phrase": "long-lived_timestamp_systems"}, {"score": 0.004402295697276237, "phrase": "unbounded_timestamp_object"}, {"score": 0.004358676214574977, "phrase": "multiwriter_atomic_registers"}, {"score": 0.004272724011826495, "phrase": "asynchronous_distributed_system"}, {"score": 0.004230382915464492, "phrase": "n_processes"}, {"score": 0.004188459638572375, "phrase": "distinct_identifiers"}, {"score": 0.0040449598280454645, "phrase": "arbitrary_universe"}, {"score": 0.0033140589981208693, "phrase": "lower_bound"}, {"score": 0.0032324864013225166, "phrase": "obstruction-free_long-lived_timestamp_problem"}, {"score": 0.0030600032877646263, "phrase": "constrained_versions"}, {"score": 0.003014576010931602, "phrase": "timestamp_problem"}, {"score": 0.002797329638474873, "phrase": "wait-free_algorithm"}, {"score": 0.0025827837420330816, "phrase": "one-shot_timestamp_systems"}, {"score": 0.002268598551466928, "phrase": "wait-free_one-shot_timestamp_system"}, {"score": 0.0021049977753042253, "phrase": "space_complexity_gap"}], "paper_keywords": ["Algorithms", " Theory", " Timestamps", " solo-termination", " wait-free", " obstruction-free", " space complexity", " shared memory"], "paper_abstract": "This article is concerned with the problem of implementing an unbounded timestamp object from multiwriter atomic registers, in an asynchronous distributed system of n processes with distinct identifiers where timestamps are taken from an arbitrary universe. Ellen et al. [2008] showed that root n/2 - O(1) registers are required for any obstruction-free implementation of long-lived timestamp systems from atomic registers (meaning processes can repeatedly get timestamps). We improve this existing lower bound in two ways. First we establish a lower bound of n/6 - 1 registers for the obstruction-free long-lived timestamp problem. Previous such linear lower bounds were only known for constrained versions of the timestamp problem. This bound is asymptotically tight; Ellen et al. [2008] constructed a wait-free algorithm that uses n - 1 registers. Second we show that root 2n - log n -O(1) registers are required for any obstruction-free implementation of one-shot timestamp systems (meaning each process can get a timestamp at most once). We show that this bound is also asymptotically tight by providing a wait-free one-shot timestamp system that uses at most [2 root n] registers, thus establishing a space complexity gap between one-shot and long-lived timestamp systems.", "paper_title": "The Space Complexity of Long-Lived and One-Shot Timestamp Implementations", "paper_id": "WOS:000331466500007"}