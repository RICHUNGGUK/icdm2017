{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "smalltalk"}, {"score": 0.007972082804055156, "phrase": "gradualtalk"}, {"score": 0.007159830548676384, "phrase": "type_system"}, {"score": 0.004645057834614705, "phrase": "static_and_dynamic_typing"}, {"score": 0.004508048086020253, "phrase": "clear_benefits"}, {"score": 0.004195418010131832, "phrase": "mature_robust_programs"}, {"score": 0.00407161650109722, "phrase": "emblematic_dynamic_object-oriented_language"}, {"score": 0.0034016119212097826, "phrase": "incremental_typing"}, {"score": 0.003361069456060196, "phrase": "existing_programs"}, {"score": 0.0033011569787033297, "phrase": "main_design_goal"}, {"score": 0.0030904433394138963, "phrase": "smalltalk_language"}, {"score": 0.002963390095037466, "phrase": "live_programming"}, {"score": 0.0028586409810976367, "phrase": "programming_idioms"}, {"score": 0.002692200353719145, "phrase": "existing_projects"}, {"score": 0.002387758958649797, "phrase": "practical_approach"}, {"score": 0.0023592715993204796, "phrase": "gradual_types"}, {"score": 0.0022758279600841014, "phrase": "novel_blend"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Type systems", " Gradual typing", " Smalltalk"], "paper_abstract": "Being able to combine static and dynamic typing within the same language has clear benefits in order to support the evolution of prototypes or scripts into mature robust programs. While being an emblematic dynamic object-oriented language, Smalltalk is lagging behind in this regard. We report on the design, implementation and application of Gradualtalk, a gradually-typed Smalltalk meant to enable incremental typing of existing programs. The main design goal of the type system is to support the features of the Smalltalk language, like metaclasses and blocks, live programming, and to accommodate the programming idioms used in practice. We studied a number of existing projects in order to determine the features to include in the type system. As a result, Gradualtalk is a practical approach to gradual types in Smalltalk, with a novel blend of type system features that accommodate most programming idioms. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Gradual typing for Smalltalk", "paper_id": "WOS:000345180800005"}