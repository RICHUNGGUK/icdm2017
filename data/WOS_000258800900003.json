{"auto_keywords": [{"score": 0.04922237591220716, "phrase": "software_development_methodologies"}, {"score": 0.00481495049065317, "phrase": "methodology_specification"}, {"score": 0.004320421465896323, "phrase": "process_steps"}, {"score": 0.004019171295196278, "phrase": "next_stage"}, {"score": 0.00391167729353583, "phrase": "software_application"}, {"score": 0.0038242899532391914, "phrase": "end_user"}, {"score": 0.003557509959237602, "phrase": "human_organizations"}, {"score": 0.0034467039994594065, "phrase": "\"_processes"}, {"score": 0.003415681637907093, "phrase": "often_results"}, {"score": 0.0029689311901364797, "phrase": "ultimate_aim"}, {"score": 0.002942196368747418, "phrase": "software_development"}, {"score": 0.0028764048059439205, "phrase": "software_product"}, {"score": 0.0027491902732542013, "phrase": "intermediate_products"}, {"score": 0.0025456716198597627, "phrase": "necessary_evils"}, {"score": 0.002455168454109375, "phrase": "appropriate_work_products"}, {"score": 0.002389403849342894, "phrase": "product-oriented_approach"}, {"score": 0.002162951519368368, "phrase": "plan-oriented_ones"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["software development methodologies", " enactment", " metamodelling", " ISO/IEC 24744"], "paper_abstract": "Software development methodologies advocated and used today, whether traditional and plan-based or contemporary and agile, usually focus on process steps i.e. they start with requirements and iteratively describe what steps are necessary to move to the next stage or phase, until the software application is delivered to the end user. Such a process-oriented view of methodologies, based on the metaphor that human organizations are \"machines\" that \"execute\" processes, often results in methodologies that are too rigid and hard to follow, and most often than not end up being ignored or bypassed. Our proposal here is that, since the ultimate aim of software development is to provide a software product, software development methodologies should be described in terms of the intermediate products that are necessary to reach such a final product, plus the needed micro-processes that, as necessary evils, will be required to produce the appropriate work products from other, previously created ones. Using this product-oriented approach, software development methodologies can be specified that are, at least, as flexible as lightweight, agile approaches and, at the same time, as powerful and scalable as plan-oriented ones. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "A work product pool approach to methodology specification and enactment", "paper_id": "WOS:000258800900003"}