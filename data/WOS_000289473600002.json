{"auto_keywords": [{"score": 0.004521566043596533, "phrase": "complex_models"}, {"score": 0.0043619799095455415, "phrase": "man-made_structures"}, {"score": 0.0042459818200777846, "phrase": "urban_data_sets"}, {"score": 0.004059438255358923, "phrase": "user-defined_inputs"}, {"score": 0.003677280504320636, "phrase": "user-defined_input_model"}, {"score": 0.0027825094419000637, "phrase": "efficient_techniques"}, {"score": 0.002708399936381754, "phrase": "complex_shapes"}, {"score": 0.002453116398642071, "phrase": "model_synthesis_algorithms"}, {"score": 0.002282667669149476, "phrase": "different_approaches"}, {"score": 0.0021821915946356168, "phrase": "close_connection"}, {"score": 0.002143247921132179, "phrase": "model_synthesis"}, {"score": 0.0021049977753042253, "phrase": "context-sensitive_grammars"}], "paper_keywords": ["Model synthesis", " procedural modeling"], "paper_abstract": "We present a method for procedurally modeling general complex 3D shapes. Our approach can automatically generate complex models of buildings, man-made structures, or urban data sets in a few minutes based on user-defined inputs. The algorithm attempts to generate complex 3D models that resemble a user-defined input model and satisfy various dimensional, geometric, and algebraic constraints to control the shape. These constraints are used to capture the intent of the user and generate shapes that look more natural. We also describe efficient techniques to handle complex shapes and highlight its performance on many different types of models. We compare model synthesis algorithms with other procedural modeling techniques, discuss the advantages of different approaches, and describe as close connection between model synthesis and context-sensitive grammars.", "paper_title": "Model Synthesis: A General Procedural Modeling Algorithm", "paper_id": "WOS:000289473600002"}