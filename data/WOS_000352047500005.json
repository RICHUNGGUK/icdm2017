{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "torch_problem"}, {"score": 0.004695900553353526, "phrase": "bridge_problem"}, {"score": 0.004637478829869904, "phrase": "flashlight_problem"}, {"score": 0.0037480753312398754, "phrase": "well-known_puzzle"}, {"score": 0.003579750245670577, "phrase": "general_problem"}, {"score": 0.003306559295382181, "phrase": "input_parameters"}, {"score": 0.003197843245296877, "phrase": "shortest_total_crossing_time"}, {"score": 0.0030797912111959137, "phrase": "integer-programming_problem"}, {"score": 0.0029909851863915283, "phrase": "standard_linear-programming_package"}, {"score": 0.0028685304140180137, "phrase": "shortest-path_problem"}, {"score": 0.0028327783069076883, "phrase": "acyclic_directed_graph"}, {"score": 0.0027741761880779535, "phrase": "dynamic-programming_problem"}, {"score": 0.0027054473441439422, "phrase": "linear-programming_solution"}, {"score": 0.0025730425700096365, "phrase": "independent_test"}, {"score": 0.00246765655376112, "phrase": "second_solution_method"}, {"score": 0.002436888552432559, "phrase": "dynamic-programming_solution"}, {"score": 0.0022413233627905696, "phrase": "empirical_comparison"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithmic problem solving", " Dynamic programming", " Linear programming", " Integer programming", " Optimisation"], "paper_abstract": "The torch problem (also known as the bridge problem or the flashlight problem) is about getting a number of people across a bridge as quickly as possible under certain constraints. Although a very simply stated problem, the solution is surprisingly non-trivial. The case in which there are just four people and the capacity of the bridge is two is a well-known puzzle, widely publicised on the Internet. We consider the general problem where the number of people, their individual crossing times and the capacity of the bridge are all input parameters. We present two methods to determine the shortest total crossing time: the first expresses the problem as an integer-programming problem that can be solved by a standard linear-programming package, and the second expresses the problem as a shortest-path problem in an acyclic directed graph, i.e. as a dynamic-programming problem. The complexity of the linear-programming solution is difficult to predict; its main purpose is to act as an independent test of the correctness of the results returned by the second solution method. The dynamic-programming solution has best- and worst-case time complexity proportional to the square of the number of people. An empirical comparison of the efficiency of both methods is also presented. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "The capacity-C torch problem", "paper_id": "WOS:000352047500005"}