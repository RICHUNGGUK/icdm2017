{"auto_keywords": [{"score": 0.008713768692145006, "phrase": "hexahedral_meshes"}, {"score": 0.004510336430422002, "phrase": "interleaved_stream"}, {"score": 0.004264558080356621, "phrase": "presented_order"}, {"score": 0.0040890178236849825, "phrase": "input_stream"}, {"score": 0.003920674807745575, "phrase": "last_time"}, {"score": 0.003812299519486331, "phrase": "topological_finalization_tags"}, {"score": 0.0036553070575015344, "phrase": "data_structures"}, {"score": 0.0032827577713351336, "phrase": "whole_mesh"}, {"score": 0.0022793032191981404, "phrase": "compressed_file"}, {"score": 0.0021750990136123367, "phrase": "first_scheme"}, {"score": 0.002154835714714195, "phrase": "predictive_compression"}, {"score": 0.0021049977753042253, "phrase": "hexahedral_cells"}], "paper_keywords": ["Large meshes", " Streaming compression", " Hexahedral meshes", " Cell data compression"], "paper_abstract": "We describe a method for streaming compression of hexahedral meshes. Given an interleaved stream of vertices and hexahedra our coder incrementally compresses the mesh in the presented order. Our coder is extremely memory efficient when the input stream also documents when vertices are referenced for the last time (i.e. when it contains topological finalization tags). Our coder then continuously releases and reuses data structures that no longer contribute to compressing the remainder of the stream. This means in practice that our coder has only a small fraction of the whole mesh in memory at any time. We can therefore compress very large meshes-even meshes that do not fit in memory. Compared to traditional, non-streaming approaches that load the entire mesh and globally reorder it during compression, our algorithm trades a less compact compressed representation for significant gains in speed, memory, and I/O efficiency. For example, on the 456k hexahedra \"blade\" mesh, our coder is twice as fast and uses 88 times less memory (only 3.1 MB) with the compressed file increasing about 3% in size. We also present the first scheme for predictive compression of properties associated with hexahedral cells.", "paper_title": "Streaming compression of hexahedral meshes", "paper_id": "WOS:000278135800070"}