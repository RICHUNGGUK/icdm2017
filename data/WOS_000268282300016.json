{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "interactive_visual_overlays"}, {"score": 0.03828620693621283, "phrase": "visual_overlays"}, {"score": 0.03290833451478228, "phrase": "different_delay_constraints"}, {"score": 0.03025717957773878, "phrase": "multiple_streams"}, {"score": 0.004697655699119423, "phrase": "community_streaming"}, {"score": 0.004640079189342692, "phrase": "enhanced_form"}, {"score": 0.004602085616330634, "phrase": "joint_content_viewing"}, {"score": 0.0041696157492057, "phrase": "shared_video_stream"}, {"score": 0.004101579688745222, "phrase": "concrete_example"}, {"score": 0.004018087343963485, "phrase": "community_video_system"}, {"score": 0.0039362878637371574, "phrase": "personalized_avatars"}, {"score": 0.003824547895167011, "phrase": "real-time_encoded_video_stream"}, {"score": 0.0037312893857519803, "phrase": "multicast_consumption"}, {"score": 0.0034506596895901003, "phrase": "live_and_non-live_portions"}, {"score": 0.00327086925741257, "phrase": "delay_sensitivity"}, {"score": 0.003177958355586418, "phrase": "video_streams"}, {"score": 0.0030123335878664064, "phrase": "known_channel_case"}, {"score": 0.002740109776120878, "phrase": "potential_gains"}, {"score": 0.002684257009647205, "phrase": "different_sub-streams"}, {"score": 0.002618730478351454, "phrase": "\"water_filling\"_strategy"}, {"score": 0.002492425259337031, "phrase": "simulation_results"}, {"score": 0.002193559776999383, "phrase": "supported_streams"}, {"score": 0.0021049977753042253, "phrase": "ten_streams"}], "paper_keywords": ["Video coding", " video streaming"], "paper_abstract": "Community streaming is an enhanced form of joint content viewing where a sense of community is reinforced by the addition of interactive visual overlays, controlled in real-time by viewers, on top of a shared video stream. As a concrete example, we describe a community video system called ECHO, where personalized avatars are overlaid on top of a real-time encoded video stream of an Internet game for multicast consumption. Recognizing that only the visual overlays are generated live, we propose schemes that encode and schedule the live and non-live portions of the overlaid video separately in order to exploit the difference in delay sensitivity of the two, leading to video streams that contain two sub-streams with different delay constraints. We show that, in the known channel case, a low complexity \"earliest deadline first\" packet scheduling algorithm minimizes receiver buffer delay. We also analyze the case where multiple streams are multiplexed, which allows us to quantify the potential gains of allowing different delay constraints for different sub-streams. We show that a \"water filling\" strategy maximizes the total number of streams that can be supported. Simulation results show that the bandwidth necessary to maintain low-latency for visual overlays is reduced by about 40% when our proposed sub-stream approach is used. For multiplexing of multiple streams, our approach can increase the number of supported streams ( e. g., a 30% increase when around ten streams are multiplexed).", "paper_title": "Community Streaming With Interactive Visual Overlays: System and Optimization", "paper_id": "WOS:000268282300016"}