{"auto_keywords": [{"score": 0.02299031773233867, "phrase": "swap_space"}, {"score": 0.00481495049065317, "phrase": "optimizing_swap_space"}, {"score": 0.004740476936977635, "phrase": "improving_process_response"}, {"score": 0.004667149874736771, "phrase": "system_resume"}, {"score": 0.003993216345115755, "phrase": "hibernation_mode"}, {"score": 0.003580032420161922, "phrase": "hibernation_file"}, {"score": 0.0031597433845085092, "phrase": "main_memory"}, {"score": 0.0029916929549256297, "phrase": "response_time"}, {"score": 0.002579198644225095, "phrase": "linux"}, {"score": 0.0024610448251906453, "phrase": "sbh_algorithm"}, {"score": 0.0021049977753042253, "phrase": "proposed_method"}], "paper_keywords": ["Quick booting", " Android", " Linux", " Hibernation", " Suspend to Drive"], "paper_abstract": "The swap-before-hibernate (SBH) swaps out all swappable pages before the system enters hibernation mode, thus reducing the memory used by the system and the size of hibernation file. However, when the system resumes, the program must be reloaded into the main memory by swap-in; hence, the response time of program depends on the swap-in speed. This study experimentally proved that the present swap-in/swap-out mechanism of Linux is not acceptable to the SBH algorithm. Moreover, it proposed the method of reordering all the requests to be written out to the swap space. The proposed method was proven to increase the efficiency of swap space by 1/2 to 1/3.", "paper_title": "Optimizing Swap Space for Improving Process Response after System Resume", "paper_id": "WOS:000371137200004"}