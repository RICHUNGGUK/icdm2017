{"auto_keywords": [{"score": 0.03492129383115456, "phrase": "random_value_selection"}, {"score": 0.030711241854255947, "phrase": "first_step"}, {"score": 0.02833407608751138, "phrase": "entailed_regions"}, {"score": 0.00481495049065317, "phrase": "random_test_generation"}, {"score": 0.004762202897268383, "phrase": "recent_design"}, {"score": 0.004582076098959621, "phrase": "systemverilog"}, {"score": 0.004482206282876944, "phrase": "rich_test_bench_language"}, {"score": 0.004384504920139083, "phrase": "significant_support"}, {"score": 0.004218602458288531, "phrase": "constrained_random_test_bench_architectures"}, {"score": 0.004103942174451674, "phrase": "test_bench_language"}, {"score": 0.0035953368057880593, "phrase": "main_challenges"}, {"score": 0.00327356326590461, "phrase": "specified_constraints"}, {"score": 0.003097865379563127, "phrase": "first_time"}, {"score": 0.002996992362027833, "phrase": "two-step_approach"}, {"score": 0.0026107601878587816, "phrase": "second_step"}, {"score": 0.002286781334850213, "phrase": "modest_area"}, {"score": 0.0022368274529152342, "phrase": "constraint_satisfying_random_valuations"}, {"score": 0.002163930783583212, "phrase": "test_bench_architectures"}, {"score": 0.002128376306688074, "phrase": "arm_amba_bus"}, {"score": 0.0021049977753042253, "phrase": "ibm_coreconnect_protocol_suites"}], "paper_keywords": [""], "paper_abstract": "Recent design and verification languages, such as SystemVerilog, support a rich test bench language, which provides significant support towards developing layered, structured, constrained random test bench architectures. Typically, the test bench language offers many features that are not synthesisable and therefore cannot be carried into the hardware for hardware accelerated simulation. One of the main challenges in improving the performance of hardware accelerated simulation is to run the task of random value selection under specified constraints in hardware. This problem (possibly for the first time) is addressed and a two-step approach is presented. In the first step, the constraints are pre-processed in software to generate a set of entailed regions. In the second step, random value selection is performed in hardware using the entailed regions pre-computed in the first step. It is shown that this method has modest area overhead and produces constraint satisfying random valuations within very few cycles. Results on test bench architectures for the ARM AMBA Bus and IBM CoreConnect protocol suites have been reported.", "paper_title": "Hardware accelerated constrained random test generation", "paper_id": "WOS:000248317000019"}