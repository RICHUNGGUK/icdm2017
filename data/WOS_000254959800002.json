{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "thread-level_parallelism"}, {"score": 0.004709567162738894, "phrase": "simultaneous_multithreaded_processor"}, {"score": 0.004606479650820579, "phrase": "chip_multiprocessors"}, {"score": 0.004539005582217309, "phrase": "simultaneous_multithreaded_cores"}, {"score": 0.004216112320418982, "phrase": "simple_approaches"}, {"score": 0.00388729255686046, "phrase": "thread-level_speculation"}, {"score": 0.0036373553416391823, "phrase": "application_binaries"}, {"score": 0.0034034331737042363, "phrase": "speculative_threads"}, {"score": 0.0032558762499901727, "phrase": "different_cores"}, {"score": 0.0030239842475439814, "phrase": "former_approach"}, {"score": 0.0029576827451501956, "phrase": "latter_approach"}, {"score": 0.0028085616610192456, "phrase": "inter-core_communication"}, {"score": 0.0026867260506696455, "phrase": "resource_contention"}, {"score": 0.002570162055835289, "phrase": "first_approach"}, {"score": 0.0025137856138000014, "phrase": "best_performance"}, {"score": 0.0024586427394152196, "phrase": "lower_inter-thread_communication_cost"}, {"score": 0.0022834017104377525, "phrase": "proposed_design"}, {"score": 0.0022005118194652704, "phrase": "dual-thread_speculation_system"}], "paper_keywords": ["computer architecture", " thread-level speculation", " simultaneous multithreading", " chip multiprocessors", " thread-level parallelism"], "paper_abstract": "As chip multiprocessors with simultaneous multithreaded cores are becoming commonplace, there is a need for simple approaches to exploit thread-level parallelism. In this paper, we consider thread-level speculation as a means to reap thread-level parallelism out of application binaries. We first investigate the tradeoffs between scheduling speculative threads on the same core and on different cores. While threads contend for the same resources using the former approach, the latter approach is plagued by the overhead for inter-core communication. Despite the impact of resource contention, our detailed simulations show that the first approach provides the best performance due to lower inter-thread communication cost. The key contribution of the paper is the proposed design and evaluation of the dual-thread speculation system. This design point has very low complexity and reaps most of the gains of a system.", "paper_title": "Dual-thread speculation: A simple approach to uncover thread-level parallelism on a simultaneous multithreaded processor", "paper_id": "WOS:000254959800002"}