{"auto_keywords": [{"score": 0.03777019120241023, "phrase": "all-heterozygous_assumption"}, {"score": 0.020013026582869253, "phrase": "optimal_solutions"}, {"score": 0.010612387000973441, "phrase": "haplotype_assembly"}, {"score": 0.009063183438285858, "phrase": "haplotype_assembly_problem"}, {"score": 0.006052754896917448, "phrase": "total_time"}, {"score": 0.005493434062350169, "phrase": "general_case"}, {"score": 0.004792208732166814, "phrase": "whole-genome_sequence_data"}, {"score": 0.004713451139632921, "phrase": "crucial_role"}, {"score": 0.004691186518512389, "phrase": "genetic_analysis"}, {"score": 0.004625018766855349, "phrase": "gene_disease_diagnoses"}, {"score": 0.0046031699360024525, "phrase": "association_studies"}, {"score": 0.004581423845101698, "phrase": "ancestry_inference"}, {"score": 0.004495457341039889, "phrase": "dna_sequencing_technologies"}, {"score": 0.004379869510222426, "phrase": "aligned_reads"}, {"score": 0.004277359615286959, "phrase": "single_individual"}, {"score": 0.004177238875974245, "phrase": "exact_algorithms"}, {"score": 0.004040978728221931, "phrase": "previous_algorithms"}, {"score": 0.0038906656646466474, "phrase": "pc_cluster"}, {"score": 0.0036322790330476813, "phrase": "input_matrix_correspond"}, {"score": 0.0034805758838000007, "phrase": "small_number"}, {"score": 0.0033909939408043473, "phrase": "mec_model"}, {"score": 0.003288082466985261, "phrase": "new_methods"}, {"score": 0.0032263057510551123, "phrase": "small_independent_blocks"}, {"score": 0.003143247488707568, "phrase": "integer_linear_programming_problem"}, {"score": 0.0030841835218795694, "phrase": "integer_linear_programming_solver"}, {"score": 0.003026226041815386, "phrase": "single_pc"}, {"score": 0.0030047956869828766, "phrase": "linux"}, {"score": 0.0029204666543220337, "phrase": "filtered_huref"}, {"score": 0.002765416217014478, "phrase": "whole_huref_data"}, {"score": 0.002569345532992206, "phrase": "first_time"}, {"score": 0.002557182861679395, "phrase": "mec_optimal_solutions"}, {"score": 0.002521038339625905, "phrase": "filtered_huref_dataset"}, {"score": 0.0022710972479391906, "phrase": "optimal_costs"}, {"score": 0.0022073303906817734, "phrase": "all-heterozygous_case"}, {"score": 0.002160680432287145, "phrase": "input_matrix"}, {"score": 0.0021049977753042253, "phrase": "false-heterozygous_sites"}], "paper_keywords": [""], "paper_abstract": "Motivation: Haplotypes play a crucial role in genetic analysis and have many applications such as gene disease diagnoses, association studies, ancestry inference and so forth. The development of DNA sequencing technologies makes it possible to obtain haplotypes from a set of aligned reads originated from both copies of a chromosome of a single individual. This approach is often known as haplotype assembly. Exact algorithms that can give optimal solutions to the haplotype assembly problem are highly demanded. Unfortunately, previous algorithms for this problem either fail to output optimal solutions or take too long time even executed on a PC cluster. Results: We develop an approach to finding optimal solutions for the haplotype assembly problem under the minimum-error-correction (MEC) model. Most of the previous approaches assume that the columns in the input matrix correspond to (putative) heterozygous sites. This all-heterozygous assumption is correct for most columns, but it may be incorrect for a small number of columns. In this article, we consider the MEC model with or without the all-heterozygous assumption. In our approach, we first use new methods to decompose the input read matrix into small independent blocks and then model the problem for each block as an integer linear programming problem, which is then solved by an integer linear programming solver. We have tested our program on a single PC [a Linux (x64) desktop PC with i7-3960X CPU], using the filtered HuRef and the NA 12878 datasets (after applying some variant calling methods). With the all-heterozygous assumption, our approach can optimally solve the whole HuRef data set within a total time of 31 h (26 h for the most difficult block of the 15th chromosome and only 5 h for the other blocks). To our knowledge, this is the first time that MEC optimal solutions are completely obtained for the filtered HuRef dataset. Moreover, in the general case (without the all-heterozygous assumption), for the HuRef dataset our approach can optimally solve all the chromosomes except the most difficult block in chromosome 15 within a total time of 12 days. For both of the HuRef and NA12878 datasets, the optimal costs in the general case are sometimes much smaller than those in the all-heterozygous case. This implies that some columns in the input matrix (after applying certain variant calling methods) still correspond to false-heterozygous sites.", "paper_title": "Exact algorithms for haplotype assembly from whole-genome sequence data", "paper_id": "WOS:000322337400003"}