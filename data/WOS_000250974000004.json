{"auto_keywords": [{"score": 0.027901681011988116, "phrase": "logic_specifications"}, {"score": 0.02727438722969178, "phrase": "control_flow_graph"}, {"score": 0.025328953965341995, "phrase": "a-calculus_terms"}, {"score": 0.00481495049065317, "phrase": "service-oriented_computing"}, {"score": 0.00475924837336259, "phrase": "service-based_systems"}, {"score": 0.00451642066363115, "phrase": "health_care"}, {"score": 0.004438250823243621, "phrase": "homeland_security"}, {"score": 0.003950453462399077, "phrase": "higher-level_functionality"}, {"score": 0.0038820411362656803, "phrase": "dynamic_service-oriented_computing_environments"}, {"score": 0.0037487368769596814, "phrase": "service_composition"}, {"score": 0.003557283483525861, "phrase": "robust_and_adaptive_workflows"}, {"score": 0.003415137969569376, "phrase": "automated_situation-aware_service_composition_approach"}, {"score": 0.0030572112793962004, "phrase": "situation_awareness"}, {"score": 0.00280126189041041, "phrase": "saw_requirements"}, {"score": 0.002492931483018372, "phrase": "service_composition_goal"}, {"score": 0.002351705899181029, "phrase": "situation-aware_workflow_agents"}, {"score": 0.0022708315711029423, "phrase": "sa_w_requirements"}, {"score": 0.0021049977753042253, "phrase": "executable_components"}], "paper_keywords": ["alpha-calculus", " alpha-logic", " agent synthesis", " automated situation-aware service composition", " service-basedsystems", " situation-aware workflow"], "paper_abstract": "Service-based systems have many applications, such as e-business, health care, and homeland security. In these systems, it is necessary to provide users the capability of composing services into workflows providing higher-level functionality. In dynamic service-oriented computing environments, it is desirable that service composition is automated and situation-aware to generate robust and adaptive workflows. In this paper, an automated situation-aware service composition approach is presented This approach is based on the a-logic, a-calculus, and a declarative model for situation awareness (SAW). This approach consists of four major components: (1) analyzing SAW requirements using our SAW model, (2) translating our SAW model representation to a-logic specifications and specifying a control flow graph in a-logic as the service composition goal, (3) automated synthesis of a-calculus terms defining situation-aware workflow agents based on a-logic specifications for SA W requirements and the control flow graph, and (4) compilation of a-calculus terms to executable components.", "paper_title": "Automated situation-aware service composition in service-oriented computing", "paper_id": "WOS:000250974000004"}