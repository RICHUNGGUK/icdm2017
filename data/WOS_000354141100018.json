{"auto_keywords": [{"score": 0.04991332794456821, "phrase": "lie_algebras"}, {"score": 0.048076793500905005, "phrase": "irreducible_representations"}, {"score": 0.010912825906220674, "phrase": "subalgebra_decomposition"}, {"score": 0.008389419388819158, "phrase": "tensor_product_decomposition"}, {"score": 0.007555730366433746, "phrase": "tensor_products"}, {"score": 0.007141429813564271, "phrase": "distributed_program"}, {"score": 0.007116810100712189, "phrase": "test_data"}, {"score": 0.006710938987812534, "phrase": "lie_algebra's_rank"}, {"score": 0.006386657698900483, "phrase": "particle_physics"}, {"score": 0.006255579489510005, "phrase": "compact_lie_groups"}, {"score": 0.00481495049065317, "phrase": "lieart-a_mathematica"}, {"score": 0.004754223481523815, "phrase": "mathematica_application"}, {"score": 0.004656491942592313, "phrase": "representation_theory"}, {"score": 0.004624361190819351, "phrase": "subalgebra_branching"}, {"score": 0.004581863217705314, "phrase": "classical_and_exceptional_lie_algebras"}, {"score": 0.004560760243120665, "phrase": "root_systems_of_lie"}, {"score": 0.004544996529763863, "phrase": "weight_systems"}, {"score": 0.004513631630494221, "phrase": "lieart's_user_interface"}, {"score": 0.004482482204898431, "phrase": "strong_focus"}, {"score": 0.0043852472786526245, "phrase": "textbook_style"}, {"score": 0.004354979981723993, "phrase": "unique_dynkin_labels"}, {"score": 0.00427528055045053, "phrase": "lieart"}, {"score": 0.004260499023171199, "phrase": "weyl_reflection_group"}, {"score": 0.004216460017083267, "phrase": "fast_computations"}, {"score": 0.004201881312320611, "phrase": "low_memory_consumption"}, {"score": 0.004192190072470619, "phrase": "extensive_tables"}, {"score": 0.004163249698532643, "phrase": "branching_rules"}, {"score": 0.004134508282135594, "phrase": "online_supplementary_material"}, {"score": 0.004101801113383985, "phrase": "program"}, {"score": 0.004087044369498474, "phrase": "lieart_catalogue"}, {"score": 0.004035460614689853, "phrase": "cpc_program_library"}, {"score": 0.00402630159205275, "phrase": "trans"}, {"score": 0.004026151656467505, "phrase": "queen's_university"}, {"score": 0.004016864234715771, "phrase": "belfast"}, {"score": 0.004007597852886131, "phrase": "n._ireland"}, {"score": 0.0038266801821232503, "phrase": "tar.gz_programming_language"}, {"score": 0.003817887313571452, "phrase": "mathematica"}, {"score": 0.003726360885768275, "phrase": "memory_usage"}, {"score": 0.0035994372026264478, "phrase": "wolfram_mathematica"}, {"score": 0.003488893459572719, "phrase": "gauge_theories"}, {"score": 0.003428948901996154, "phrase": "interaction_terms"}, {"score": 0.0033934759905515674, "phrase": "computing_tensor_products"}, {"score": 0.003358368814209542, "phrase": "spontaneous_symmetry"}, {"score": 0.0033197852349438877, "phrase": "computer_code"}, {"score": 0.0032930399118325663, "phrase": "grand_unified_theory"}, {"score": 0.003166157798271574, "phrase": "classical_lie_groups"}, {"score": 0.003065334588546748, "phrase": "weight_system"}, {"score": 0.003054723770710122, "phrase": "irreducible_representation"}, {"score": 0.0030336118627011786, "phrase": "lie_algebra"}, {"score": 0.0030196181347744372, "phrase": "weyl_reflection_groups"}, {"score": 0.0029952837928212883, "phrase": "simple_lie_algebras"}, {"score": 0.0029642838574678526, "phrase": "klimyk's_formula"}, {"score": 0.0028898463008049055, "phrase": "projection_matrices"}, {"score": 0.0028566300478906916, "phrase": "maximal_subalgebras"}, {"score": 0.002788109952576949, "phrase": "lieart's_default_behavior"}, {"score": 0.002781670333439647, "phrase": "traditionalform"}, {"score": 0.002765636101369536, "phrase": "dimensional_name"}, {"score": 0.0027086722644157598, "phrase": "different_irreps"}, {"score": 0.0026163210719740847, "phrase": "brute-force_loop"}, {"score": 0.0025594632204416906, "phrase": "infinite_number"}, {"score": 0.0025096359514694523, "phrase": "maximum_dynkin_digit"}, {"score": 0.00249228185466943, "phrase": "rare_cases"}, {"score": 0.0024807790107290585, "phrase": "high_dimensionality"}, {"score": 0.0024750474634399797, "phrase": "high-rank_algebras"}, {"score": 0.0023251909535052426, "phrase": "internal_unique_representation"}, {"score": 0.0023198180380964305, "phrase": "dynkin_labels"}, {"score": 0.0022329593191547825, "phrase": "semisimple"}, {"score": 0.002225196379204285, "phrase": "semisimple_lie_algebras"}, {"score": 0.0021592627393724577, "phrase": "classical_groups"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Lie algebra", " Lie group", " Representation theory", " Irreducible representation", " Tensor product", " Branching rule", " GUT", " Model building"], "paper_abstract": "We present the Mathematica application \"LieART\" (Lie Algebras and Representation Theory) for computations frequently encountered in Lie algebras and representation theory, such as tensor product decomposition and subalgebra branching of irreducible representations. LieART can handle all classical and exceptional Lie algebras. It computes root Systems of Lie algebras, weight systems and several other properties of irreducible representations. LieART's user interface has been created with a strong focus on usability and thus allows the input of irreducible representations via their dimensional name, while the output is in the textbook style used in most particle-physics publications. The unique Dynkin labels of irreducible representations are used internally and can also be used for input and output. LieART exploits the Weyl reflection group for most of the calculations, resulting in fast computations and a low memory consumption. Extensive tables of properties, tensor products and branching rules of irreducible representations are included as online supplementary material (see Appendix A). Program summary Program title: LieART Catalogue identifier: AEVL_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEVL_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU Lesser General Public License No. of lines in distributed program, including test data, etc.: 183178 No. of bytes in distributed program, including test data, etc.: 411658 Distribution format: tar.gz Programming language: Mathematica. Computer: x86, x86_64, PowerPC. Operating system: cross-platform. RAM: >= 1 GB recommended. Memory usage depends strongly on the Lie algebra's rank and type, as well as the dimensionality of the representations in the computation. Classification: 4.2, 11.1. External routines: Wolfram Mathematica 8-10 Nature of problem: The use of Lie algebras and their representations is widespread in physics, especially in particle physics. The description of nature in terms of gauge theories requires the assignment of fields to representations of compact Lie groups and their Lie algebras. Mass and interaction terms in the Lagrangian give rise to the need for computing tensor products of representations of Lie algebras. The mechanism of spontaneous symmetry breaking leads to the application of subalgebra decomposition. This computer code was designed for the purpose of Grand Unified Theory (GUT) Model building, where compact Lie groups beyond the U(1), SU(2) and SU(3) of the Standard Model of particle physics are needed. Tensor product decomposition and subalgebra decomposition have been implemented for all classical Lie groups SU(N), SO(N) and Sp(2N) and the exceptionals E6, E7, E8, F4 and G2. Solution method: LieART generates the weight system of an irreducible representation (irrep) of a Lie algebra by exploiting the Weyl reflection groups, which is inherent in all simple Lie algebras. Tensor products are computed by the application of Klimyk's formula, except for SU(N)'s, where the Young-tableaux algorithm is used. Subalgebra decomposition of SU(N)'s are performed by projection matrices, which are generated from an algorithm to determine maximal subalgebras as originally developed by Dynkin [1, 2]. Restrictions: Internally irreps are represented by their unique Dynkin label. LieART's default behavior in TraditionalForm is to print the dimensional name, which is the labeling preferred by physicists. Most Lie algebras can have more than one irrep of the same dimension and different irreps with the same dimension are usually distinguished by one or more primes (e.g. 175 and 175' of A(4)). To determine the need for one or more primes of an irrep a brute-force loop over other irreps must be performed to search for irreps with the same dimensionality. Since Lie algebras have an infinite number of irreps, this loop must be cut off, which is done by limiting the maximum Dynkin digit in the loop. In rare cases for irreps of high dimensionality in high-rank algebras, if the cutoff used is too low, then the assignment of primes will be incorrect, but the problem can be avoided by raising the cutoff. However, in either case, this can only affect the display of the irrep because all computations involving this irrep are correct, since the internal unique representation of Dynkin labels is used. Running time: From less than a second to hours depending on the Lie algebra's rank and type and/or the dimensionality of the representations in the computation. References: [1] E. Dynkin, Semisimple subalgebras of semisimple Lie algebras, Trans. Am. Math. Soc. 6 (1957) 111. [2] E. Dynkin, Maximal subgroups of the classical groups, Trans. Am. Math. Soc. 6 (1957) 245. (C) 2015 Published by Elsevier B.V.", "paper_title": "LieART-A Mathematica application for Lie algebras and representation theory", "paper_id": "WOS:000354141100018"}