{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "datatype-generic_programs"}, {"score": 0.0038510053729959074, "phrase": "designing_datatype-generic_programs"}, {"score": 0.0034437574674180365, "phrase": "new_opportunities"}, {"score": 0.0030794433253250476, "phrase": "allegorical_foundations"}, {"score": 0.0021049977753042253, "phrase": "extraordinarily_concise_proof"}], "paper_keywords": ["datatype", " generic programming", " relation algebra", " allegory", " programming methodology"], "paper_abstract": "Datatype-generic programs are programs that are parameterised by a datatype. Designing datatype-generic programs brings new challenges and new opportunities. We review the allegorical foundations of a methodology of designing datatype-generic programs. The effectiveness of the methodology is demonstrated by an extraordinarily concise proof of the well-foundedness of a datatype-generic occurs-in relation.", "paper_title": "Datatype-generic reasoning", "paper_id": "WOS:000239424100003"}