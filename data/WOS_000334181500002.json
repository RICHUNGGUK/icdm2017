{"auto_keywords": [{"score": 0.04634942632138191, "phrase": "language_l"}, {"score": 0.00481495049065317, "phrase": "system_m"}, {"score": 0.00475382761232911, "phrase": "ltl_formula_phi"}, {"score": 0.004402973626416765, "phrase": "finite_computations"}, {"score": 0.004291848822287492, "phrase": "infinite_computations"}, {"score": 0.004026552442738552, "phrase": "trigger"}, {"score": 0.003958049372486465, "phrase": "query_checking"}, {"score": 0.0038911408649026724, "phrase": "propositional_solutions"}, {"score": 0.0038090874465452214, "phrase": "extremely_useful_methodology"}, {"score": 0.003776750773624222, "phrase": "system_exploration"}, {"score": 0.0029998918671747168, "phrase": "abstraction-refinement_framework"}, {"score": 0.0027078974645805736, "phrase": "user_two_languages"}, {"score": 0.0024969812322112174, "phrase": "automata-theoretic_approach"}, {"score": 0.002342110338541984, "phrase": "classical_counterexample-based_refinement_approaches"}, {"score": 0.0021049977753042253, "phrase": "classical_query_checking"}], "paper_keywords": [""], "paper_abstract": "Trigger querying is the problem of finding, given a system M and an LTL formula phi, the set of scenarios that trigger phi in M; that is, the language L of finite computations of M such that all infinite computations that have a prefix in L continue with a suffix that satisfies phi. Trigger querying significantly extends query checking, which seeks propositional solutions, and is an extremely useful methodology for system exploration and understanding. The weakness of trigger querying lies in the fact that the size of the solution is linear in the size of the system. For trigger querying to become feasible in practice, we must offer solutions to cope with systems of big, and possibly infinite, state spaces. In this paper we describe an abstraction-refinement framework for trigger querying. Instead of reasoning about the system M, we reason about an abstraction of it and return to the user two languages that under- and over-approximate the language L of computations that trigger phi in M. We describe an automata-theoretic approach for refining and reducing the gap between the approximations and show how, unlike classical counterexample-based refinement approaches, here it is possible to symbolically handle batches of counterexamples. We show that our framework is robust and can be applied also for classical query checking as well as variants and extensions of trigger querying.", "paper_title": "An abstraction-refinement framework for trigger querying", "paper_id": "WOS:000334181500002"}