{"auto_keywords": [{"score": 0.03326958267136085, "phrase": "kahn"}, {"score": 0.007007815058685737, "phrase": "verilog"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_embedded_systems"}, {"score": 0.0038062581748678245, "phrase": "nondeterministic_model"}, {"score": 0.0030775481952377017, "phrase": "rendezvous_communication"}, {"score": 0.0030082398041055003, "phrase": "deterministic_concurrency"}, {"score": 0.002896167001212006, "phrase": "tiny-shim_language"}, {"score": 0.0023591417077156555, "phrase": "real-world_system"}], "paper_keywords": ["deterministic model of computation", " hardware/software codesign", " hardware synthesis", " software synthesis"], "paper_abstract": "Typical embedded hardware/software systems are implemented using a combination of C and an HDL such as Verilog. While each is well-behaved in isolation, combining the two gives a nondeterministic model of computation whose ultimate behavior must be validated through expensive (cycle-accurate) simulation. We propose an alternative for describing such systems. Our software/hardware integration medium (SHIM) model, effectively Kahn networks with rendezvous communication, provides deterministic concurrency. We present the Tiny-SHIM language for such systems and its semantics, demonstrate how to implement it in hardware and software, and discuss how it can be used to model a real-world system. By providing a powerful, deterministic formalism for expressing systems, designing systems, and verifying their correctness will become easier.", "paper_title": "SHIM: A deterministic model for heterogeneous embedded systems", "paper_id": "WOS:000239367100007"}