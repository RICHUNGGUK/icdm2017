{"auto_keywords": [{"score": 0.032842678408202, "phrase": "smooth_sending_rate"}, {"score": 0.03056160650871999, "phrase": "multfrc"}, {"score": 0.00481495049065317, "phrase": "weighted_fairness"}, {"score": 0.0047559432344272, "phrase": "multimedia_applications"}, {"score": 0.0039040344230094164, "phrase": "transport_protocol"}, {"score": 0.0036030386046805598, "phrase": "almost_arbitrary_fashion"}, {"score": 0.0035369291417564606, "phrase": "data_transfers"}, {"score": 0.0034506596895901003, "phrase": "real-time_media_streams"}, {"score": 0.0025338369486914364, "phrase": "tfrc_flows"}, {"score": 0.0023967582707115354, "phrase": "real-life_test"}, {"score": 0.0021710766932077972, "phrase": "broader_range"}, {"score": 0.002104998715788783, "phrase": "tfrc"}], "paper_keywords": ["transport protocols", " TFRC", " TCP-friendliness"], "paper_abstract": "When data transfers to or from a host happen in parallel, users do not always consider them to have the same importance. Ideally, a transport protocol should therefore allow its users to manipulate the fairness among flows in an almost arbitrary fashion. Since data transfers can also include real-time media streams which need to keep delay - and hence buffers - small, the protocol should also have a smooth sending rate. In an effort to satisfy the above requirements, we present MulTFRC, a congestion control mechanism which is based on the TCP-friendly Rate Control (TFRC) protocol. It emulates the behavior of a number of TFRC flows while maintaining a smooth sending rate. Our simulations and a real-life test demonstrate that MulTFRC performs significantly better than its competitors, potentially making it applicable in a broader range of settings than what TFRC is normally associated with.", "paper_title": "MulTFRC: Providing Weighted Fairness for Multimedia Applications (and others too!)", "paper_id": "WOS:000268469200002"}