{"auto_keywords": [{"score": 0.04060049025416118, "phrase": "beehive"}, {"score": 0.015163520117118108, "phrase": "css"}, {"score": 0.00481495049065317, "phrase": "subscription_service"}, {"score": 0.0046803650677267146, "phrase": "content_subscription_service"}, {"score": 0.004549524321051407, "phrase": "notable_success"}, {"score": 0.00445830200258645, "phrase": "unpopular_data"}, {"score": 0.004298666679374568, "phrase": "storage_pool"}, {"score": 0.004229556887896042, "phrase": "subscribed_file"}, {"score": 0.004045157344249484, "phrase": "existing_commercial_css"}, {"score": 0.003932003833923186, "phrase": "third-party_cloud_storage"}, {"score": 0.003495855671790616, "phrase": "inherent_cloudlet_storage"}, {"score": 0.0032497506915502876, "phrase": "high_performance"}, {"score": 0.003171615440419782, "phrase": "random_linear_network_coding"}, {"score": 0.0030455297429878873, "phrase": "complicated_wide-area_coordination"}, {"score": 0.0029126002350975634, "phrase": "coding_parameters"}, {"score": 0.002865710140187219, "phrase": "cloudlet_storage"}, {"score": 0.0028425481299483254, "phrase": "guaranteed_performance"}, {"score": 0.0028195727965553367, "phrase": "file_availability"}, {"score": 0.002796782643988021, "phrase": "data_distribution_efficiency"}, {"score": 0.0027295084882654917, "phrase": "task_outsourcing"}, {"score": 0.002547535564922075, "phrase": "system_resources"}, {"score": 0.0023298892270500983, "phrase": "success_ratio"}, {"score": 0.0023016843709107297, "phrase": "peer-side_files"}], "paper_keywords": ["content subscription service", " peer-to-peer", " low-cost", " cloudlet-based storage"], "paper_abstract": "In recent years, Content Subscription Service (CSS) is showing a notable success in helping users fetch unpopular data in P2P networks. It works by maintaining a storage pool to pull the subscribed file and then redistribute them to the requestor. However, existing commercial CSS incurs huge bandwidth/equipment cost due to introducing a third-party cloud storage. We present Beehive, a low-cost yet efficient CSS, which leverages the idle node bandwidth/storage (i.e., cloudlets) in the original P2P system to form an inherent cloudlet storage. Since P2P nodes are geographically distributed, highly dynamic and heterogeneous, Beehive adopts three key techniques to achieve high performance. First, by applying random linear network coding, multiple seeders can upload the same file simultaneously without complicated wide-area coordination. Second, a model is developed to set the coding parameters so that the cloudlet storage achieves guaranteed performance in file availability and data distribution efficiency. Finally, by performing task outsourcing, overloaded seeders quickly offload their tasks to idle peers, which effectively balances the load and utilizes the system resources. We implement Beehive with 29,000 lines of C++ codes and deploy it in a real P2P file-sharing system. Results show that Beehive improves the success ratio of pulling peer-side files from 38.7% (traditional online download) to 84.3% (users offline waiting for less than three days), and provides users with over 200 kB/s download speed.", "paper_title": "Beehive: low-cost content subscription service using cloudlets", "paper_id": "WOS:000323202000016"}