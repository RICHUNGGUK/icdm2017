{"auto_keywords": [{"score": 0.04336705121455173, "phrase": "dependability_modeling"}, {"score": 0.004815037733678189, "phrase": "benchmarking"}, {"score": 0.004637478829869904, "phrase": "basic_concepts"}, {"score": 0.004438642216475526, "phrase": "dependability_characterization"}, {"score": 0.003795341516142306, "phrase": "cots"}, {"score": 0.003701401653850141, "phrase": "cots-based_systems"}, {"score": 0.0034332736827447654, "phrase": "dependability_benchmarking"}, {"score": 0.0031646057802503526, "phrase": "service_level"}, {"score": 0.0031056437850836326, "phrase": "cots-based_fault_tolerant_system"}, {"score": 0.0029722900280316216, "phrase": "software_components"}, {"score": 0.0029169007179202164, "phrase": "first_benchmark"}, {"score": 0.002756832447586547, "phrase": "alternative_architectural_solutions"}, {"score": 0.0026384167183586015, "phrase": "nuclear_power_plants"}, {"score": 0.0025892330566358503, "phrase": "benchmarked_measure"}, {"score": 0.002477998427152547, "phrase": "second_benchmark"}, {"score": 0.002327310963701377, "phrase": "operating_systems"}, {"score": 0.0022984554607129466, "phrase": "windows"}, {"score": 0.002269679154930107, "phrase": "linux"}, {"score": 0.0021995257343837547, "phrase": "benchmark_measures"}, {"score": 0.0021450029487459403, "phrase": "reaction_time"}, {"score": 0.0021049977753042253, "phrase": "restart_time"}], "paper_keywords": [""], "paper_abstract": "This chapter presents briefly basic concepts, measures, and approaches for dependability characterization and benchmarking, and examples of benchmarks, based on dependability modeling and measurements. We put emphasis on commercial off-the-shelf (COTS) components on COTS-based systems. To illustrate the various concepts, techniques, and results of dependability benchmarking, we present two examples of benchmarks: one addressing the system and service level of a COTS-based fault tolerant system, and one dedicated to COTS software components. The first benchmark shows how dependability modeling can be used to benchmark alternative architectural solutions of instrumentation and control systems of nuclear power plants. The benchmarked measure corresponds to system availability. The second benchmark shows how controlled experiments can be used to benchmark operating systems taking Windows and Linux as examples. The benchmark measures are robustness, reaction time, and restart time.", "paper_title": "System Dependability: Characterization and Benchmarking", "paper_id": "WOS:000303778400004"}