{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "nested_words"}, {"score": 0.006396776540398396, "phrase": "mso"}, {"score": 0.00531728045336077, "phrase": "regular_relations"}, {"score": 0.004712578694777353, "phrase": "automata"}, {"score": 0.004552981066668676, "phrase": "natural_model"}, {"score": 0.0044369056710423065, "phrase": "recursive_procedure_calls"}, {"score": 0.004379977556546879, "phrase": "usual_connection"}, {"score": 0.004342430078306461, "phrase": "monadic_second-order_logic"}, {"score": 0.0040708542958968605, "phrase": "natural_notion"}, {"score": 0.004035946043145475, "phrase": "regular_languages"}, {"score": 0.0037348894128879082, "phrase": "fixed_points"}, {"score": 0.0037028514035425037, "phrase": "deterministic_and_alternating_automata"}, {"score": 0.003310447652300423, "phrase": "finite_and_infinite_nested_words"}, {"score": 0.0030898642396380662, "phrase": "arbitrary_positions"}, {"score": 0.0029722900280316216, "phrase": "first_position"}, {"score": 0.002726740692380339, "phrase": "usual_automata"}, {"score": 0.0026570998719084153, "phrase": "muller_automata"}, {"score": 0.0025449518236394103, "phrase": "visibly_pushdown_languages"}, {"score": 0.0023855210798264205, "phrase": "usual_letter-to-letter_synchronization"}, {"score": 0.0022651818270925704, "phrase": "even_the_weakest_form"}, {"score": 0.0022073031056287903, "phrase": "undecidable_formalism"}, {"score": 0.0021601997088758957, "phrase": "alternative_form"}, {"score": 0.0021049977753042253, "phrase": "decidable_notions"}], "paper_keywords": ["Automata", " Nested words", " Mu-calculus", " Query languages", " Automatic structures"], "paper_abstract": "Nested words provide a natural model of runs of programs with recursive procedure calls. The usual connection between monadic second-order logic (MSO) and automata extends from words to nested words and gives us a natural notion of regular languages of nested words. In this paper we look at some well-known aspects of regular languages-their characterization via fixed points, deterministic and alternating automata for them, and synchronization for defining regular relations-and extend them to nested words. We show that mu-calculus is as expressive as MSO over finite and infinite nested words, and the equivalence holds, more generally, for mu-calculus with past modalities evaluated in arbitrary positions in a word, not only in the first position. We introduce the notion of alternating automata for nested words, show that they are as expressive as the usual automata, and also prove that Muller automata can be determinized (unlike in the case of visibly pushdown languages). Finally we look at synchronization over nested words. We show that the usual letter-to-letter synchronization is completely incompatible with nested words (in the sense that even the weakest form of it leads to an undecidable formalism) and present an alternative form of synchronization that gives us decidable notions of regular relations.", "paper_title": "Regular Languages of Nested Words: Fixed Points, Automata, and Synchronization", "paper_id": "WOS:000293247300007"}