{"auto_keywords": [{"score": 0.04794124607475937, "phrase": "cost-sensitive_learning_algorithms"}, {"score": 0.03003768593634123, "phrase": "tcsdt_algorithm"}, {"score": 0.00481495049065317, "phrase": "test_cost-sensitive_decision_tree"}, {"score": 0.004455409162867219, "phrase": "total_cost"}, {"score": 0.004414907432703781, "phrase": "multiple_costs"}, {"score": 0.004160435626849478, "phrase": "significant_challenge"}, {"score": 0.0040111533608228195, "phrase": "applied_context"}, {"score": 0.003974673997871831, "phrase": "cost-sensitive_learning"}, {"score": 0.003832031470970347, "phrase": "good_results"}, {"score": 0.0037971749182744334, "phrase": "training_data"}, {"score": 0.0036776458116294986, "phrase": "optimal_model"}, {"score": 0.003611034322786669, "phrase": "unseen_data"}, {"score": 0.0035781807623238905, "phrase": "real_world_applications"}, {"score": 0.002769950045729965, "phrase": "threshold_pruning"}, {"score": 0.0026582395558737855, "phrase": "class_probability_estimate"}, {"score": 0.0026220103561723045, "phrase": "decision_tree_leaf"}, {"score": 0.002527788827701828, "phrase": "extensive_experiments"}, {"score": 0.002493333098814506, "phrase": "selected_uci_data"}, {"score": 0.0024593458703463474, "phrase": "different_cost_ratios"}, {"score": 0.002327956449278255, "phrase": "real_misclassification_cost"}, {"score": 0.0022962183207691188, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Classification", " Cost-sensitive learning", " Over-fitting"], "paper_abstract": "Cost-sensitive learning algorithms are typically designed for minimizing the total cost when multiple costs are taken into account. Like other learning algorithms, cost-sensitive learning algorithms must face a significant challenge, over-fitting, in an applied context of cost-sensitive learning. Specifically speaking, they can generate good results on training data but normally do not produce an optimal model when applied to unseen data in real world applications. It is called data over-fitting. This paper deals with the issue of data over-fitting by designing three simple and efficient strategies, feature selection, smoothing and threshold pruning, against the TCSDT (test cost-sensitive decision tree) method. The feature selection approach is used to pre-process the data set before applying the TCSDT algorithm. The smoothing and threshold pruning are used in a TCSDT algorithm before calculating the class probability estimate for each decision tree leaf. To evaluate our approaches, we conduct extensive experiments on the selected UCI data sets across different cost ratios, and on a real world data set, KDD-98 with real misclassification cost. The experimental results show that our algorithms outperform both the original TCSDT and other competing algorithms on reducing data over-fitting. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Handling over-fitting in test cost-sensitive decision tree learning by feature selection, smoothing and pruning", "paper_id": "WOS:000278656500006"}