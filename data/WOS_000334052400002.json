{"auto_keywords": [{"score": 0.03005210930552318, "phrase": "constraint_programming"}, {"score": 0.00481495049065317, "phrase": "optimization_technology"}, {"score": 0.004701825207431857, "phrase": "combinatorial_optimization"}, {"score": 0.004249825947483216, "phrase": "steadily_increases"}, {"score": 0.004100851549096203, "phrase": "underlying_technology"}, {"score": 0.003933609372601274, "phrase": "huge_demand"}, {"score": 0.003795677450778112, "phrase": "combinatorial_optimization_technology"}, {"score": 0.0034715658596258018, "phrase": "increasing_need"}, {"score": 0.003329901594166227, "phrase": "complex_hybrid_solutions"}, {"score": 0.003213070385558666, "phrase": "new_emphasis"}, {"score": 0.0031750418391373035, "phrase": "universal_modeling_languages"}, {"score": 0.0031374619658664843, "phrase": "model_transformation_capabilities"}, {"score": 0.002921114512115261, "phrase": "hybrid_solutions"}, {"score": 0.0027852126030055305, "phrase": "ideal_position"}, {"score": 0.002532035301903554, "phrase": "modeling_difficulties"}, {"score": 0.002428617044669043, "phrase": "integrative_technology"}, {"score": 0.0023433334920926713, "phrase": "considerable_effort"}, {"score": 0.0023018188296933923, "phrase": "different_solving_technologies"}, {"score": 0.0022077827041801193, "phrase": "position_paper"}, {"score": 0.00213023743193503, "phrase": "key_challenges"}, {"score": 0.0021049977753042253, "phrase": "important_research_directions"}], "paper_keywords": ["Constraint programming", " Modelling languages", " Hybrid solving"], "paper_abstract": "Technology for combinatorial optimization is rapidly changing, and as the size and scope of problems that can be solved steadily increases, the complexity of the underlying technology is growing. We foresee a huge demand for both the simplification of use of combinatorial optimization technology (so called \"model and run\" capabilities), as well as increasing need for the ability to quickly build complex hybrid solutions. These demands will place new emphasis on universal modeling languages and model transformation capabilities, as well as flexible and high level ways of specifying hybrid solutions. These changes put constraint programming in an ideal position since: constraint programming has the most high-level view of problems to begin with so we can ease modeling difficulties; and since constraint programming is an integrative technology, we have already spent considerable effort in making different solving technologies work together seamlessly. In this position paper we outline some of the key challenges and important research directions we foresee for optimization technology,.", "paper_title": "The future of optimization technology", "paper_id": "WOS:000334052400002"}