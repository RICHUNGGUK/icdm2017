{"auto_keywords": [{"score": 0.04378244379633523, "phrase": "image_quality"}, {"score": 0.021931381403859397, "phrase": "input_vector"}, {"score": 0.01881161983240792, "phrase": "dp-tsvq"}, {"score": 0.010612387000973441, "phrase": "tree-structured_vector_quantization"}, {"score": 0.010449186175135638, "phrase": "tsvq"}, {"score": 0.0054822893290180676, "phrase": "edp-tsvq"}, {"score": 0.005334851437923457, "phrase": "dp-tsvq."}, {"score": 0.004667149874736771, "phrase": "highly_efficient_technique"}, {"score": 0.004594951819987416, "phrase": "appropriate_codeword"}, {"score": 0.004384960761826366, "phrase": "selected_codeword"}, {"score": 0.004055998173160551, "phrase": "full-search_vq"}, {"score": 0.003916098498242888, "phrase": "multipath_tsvq"}, {"score": 0.0036791522245326514, "phrase": "high_image_quality"}, {"score": 0.0035660913513115267, "phrase": "novel_full_search"}, {"score": 0.0034029588672379926, "phrase": "closest_codeword"}, {"score": 0.003298357357267836, "phrase": "triangle_inequality"}, {"score": 0.0032599633778910516, "phrase": "efficient_pruning"}, {"score": 0.003234615195382533, "phrase": "impossible_codewords"}, {"score": 0.0029800360974218836, "phrase": "encoding_time"}, {"score": 0.0028996963188373144, "phrase": "hybrid_technique"}, {"score": 0.002865929543375884, "phrase": "dp-tsvq's_critical_function"}, {"score": 0.0028436364707396613, "phrase": "fse-tsvq._edp-tsvq"}, {"score": 0.0026299995767138304, "phrase": "fse-tsvq"}, {"score": 0.002579140290642792, "phrase": "running_time"}, {"score": 0.002559072326933071, "phrase": "fsvq."}, {"score": 0.0025292620341476283, "phrase": "high_image_quality_application"}, {"score": 0.002357535807803925, "phrase": "codebook_tree"}, {"score": 0.0022760856906838814, "phrase": "critical_function"}, {"score": 0.0022320551224679526, "phrase": "simulation_results"}, {"score": 0.002163367190715979, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["codebook search", " tree-structured vector quantization", " codebook", " vector quantization"], "paper_abstract": "Tree-structured vector quantization (TSVQ) is a highly efficient technique for locating an appropriate codeword for each input vector. The algorithm does not guarantee that the selected codeword is the closest one to the input vector. Consequently, the image quality of TSVQ is worse than that of full-search VQ (FSVQ). Although researchers have proposed multipath TSVQ and DP-TSVQ to enhance the image quality, these methods are still too slow for achieving high image quality. Therefore, this study presents a novel full search equivalent TSVQ (FSE-TSVQ) to obtain efficiently the closest codeword for each input vector. FSE-TSVQ employs the triangle inequality to achieve efficient pruning of impossible codewords. Moreover, this study also develops the enhanced DP-TSVQ (EDP-TSVQ) algorithm, which achieves a better trade-off than DP-TSVQ between encoding time and image quality. EDP-TSVQ is a hybrid technique which adds DP-TSVQ's critical function to FSE-TSVQ. EDP-TSVQ always provides an image quality identical to that of DP-TSVQ, but by searching fewer codebook tree nodes. Simulation results reveal that FSE-TSVQ requires only 21-38% of the running time of FSVQ. For a high image quality application, the performance of EDP-TSVQ is always better than that of DP-TSVQ. Using the example of a codebook tree with 512 codewords, with the threshold of the critical function set to 0.6, simulation results indicate that EDP-TSVQ requires only 37% of the execution time of DP-TSVQ. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Fast codebook search algorithms based on tree-structured vector quantization", "paper_id": "WOS:000238018200004"}