{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "additional_lonely_bit"}, {"score": 0.03494794829412794, "phrase": "additional_bit"}, {"score": 0.004721162131188487, "phrase": "linearly_coded_payload_data"}, {"score": 0.004494570360108983, "phrase": "coding_scheme"}, {"score": 0.0040334640350288, "phrase": "payload_data_packet"}, {"score": 0.003877737556673229, "phrase": "linear_channel_code"}, {"score": 0.003728000957725218, "phrase": "essential_extra_cost"}, {"score": 0.003479692058963528, "phrase": "underlying_principle"}, {"score": 0.002914288956035066, "phrase": "payload_packet"}, {"score": 0.0027200305495826797, "phrase": "nonlinear_code"}, {"score": 0.0025892330566358503, "phrase": "fast_algorithm"}, {"score": 0.0023694065215394593, "phrase": "data_packet"}], "paper_keywords": ["Coding", " additional bit"], "paper_abstract": "We provide a coding scheme, by which an additional lonely bit can be piggybacked on a payload data packet encoded with a linear channel code, at no essential extra cost in power or bandwidth. The underlying principle is to use the additional bit to select which of two linear codes that should be used for encoding the payload packet, this way effectively creating a nonlinear code. We give a fast algorithm for detecting the additional bit, without decoding the data packet. Applications include control signaling, for example, transmission of ACK/NACK bits.", "paper_title": "Piggybacking an Additional Lonely Bit on Linearly Coded Payload Data", "paper_id": "WOS:000209696200008"}