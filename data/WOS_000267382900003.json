{"auto_keywords": [{"score": 0.023448371379640003, "phrase": "mpi"}, {"score": 0.00481495049065317, "phrase": "communication_traces"}, {"score": 0.0047555023078686386, "phrase": "high-performance_computing"}, {"score": 0.004638788604042707, "phrase": "communication_behavior"}, {"score": 0.004581505405526037, "phrase": "large-scale_applications"}, {"score": 0.0044968982227349625, "phrase": "difficult_and_costly_task"}, {"score": 0.004359328949187473, "phrase": "long_execution_times"}, {"score": 0.0039221899471111, "phrase": "lossy_way"}, {"score": 0.0038737214010638745, "phrase": "high-level_statistics"}, {"score": 0.003802135020791801, "phrase": "huge_trace_files"}, {"score": 0.003357435261066107, "phrase": "near-constant_size"}, {"score": 0.0031159081999910694, "phrase": "structural_information"}, {"score": 0.0030017207229983385, "phrase": "inter-node_compression_techniques"}, {"score": 0.0028206052780047424, "phrase": "application's_communication_structure"}, {"score": 0.0027172101552870973, "phrase": "replay_mechanism"}, {"score": 0.0024595996811420566, "phrase": "novel_capability"}, {"score": 0.0023694065215394593, "phrase": "communication_tuning"}, {"score": 0.0021446993452098597, "phrase": "scalable_manner"}, {"score": 0.0021049977753042253, "phrase": "deterministic_mpi_call_replay"}], "paper_keywords": ["High-performance computing", " Scalability", " Communication tracing"], "paper_abstract": "Characterizing the communication behavior of large-scale applications is a difficult and costly task due to code/system complexity and long execution times. While many tools to study this behavior have been developed, these approaches either aggregate information in a lossy way through high-level statistics or produce huge trace files that are hard to handle. We contribute an approach that provides orders of magnitude smaller, if not near-constant size, communication traces regardless of the number of nodes while preserving structural information. We introduce intra- and inter-node compression techniques of MPI events that are capable of extracting an application's communication structure. We further present a replay mechanism for the traces generated by our approach and discuss results of our implementation for BlueGene/L Given this novel capability, we discuss its impact on communication tuning and beyond. To the best of our knowledge, such a concise representation of MPI traces in a scalable manner combined with deterministic MPI call replay is without any precedent. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "ScalaTrace: Scalable compression and replay of communication traces for high-performance computing", "paper_id": "WOS:000267382900003"}