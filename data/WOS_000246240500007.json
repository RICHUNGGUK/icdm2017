{"auto_keywords": [{"score": 0.0490583388803429, "phrase": "perfectly_synchronized_round-based_model"}, {"score": 0.00481495049065317, "phrase": "distributed_computing"}, {"score": 0.004513450434595191, "phrase": "crash-stop_failures"}, {"score": 0.004449045430179066, "phrase": "atomic_and_synchronous_message_delivery"}, {"score": 0.0035601676907962626, "phrase": "general_omission"}, {"score": 0.003509317669345521, "phrase": "byzantine_models"}, {"score": 0.00326572165784246, "phrase": "constant_time_complexity_overhead"}, {"score": 0.003105305189036267, "phrase": "target_model"}, {"score": 0.002952745241052452, "phrase": "general_omissions"}, {"score": 0.002910545717767559, "phrase": "byzantine_failures"}, {"score": 0.0025568135952982345, "phrase": "traditional_crash-stop_model"}, {"score": 0.0024842242921857705, "phrase": "atomic_message_delivery"}, {"score": 0.002396371892825691, "phrase": "even_stronger_model"}, {"score": 0.0022298571016688335, "phrase": "send-omission_model"}, {"score": 0.0021509807762081145, "phrase": "better_time_complexity_performance"}, {"score": 0.0021049977753042253, "phrase": "failure-free_execution"}], "paper_keywords": ["abstraction", " simulation", " distributed systems", " fault-tolerance", " synchronous system models", " complexity"], "paper_abstract": "The perfectly synchronized round-based model provides the powerful abstraction of crash-stop failures with atomic and synchronous message delivery. This abstraction makes distributed programming very easy. We describe a technique to automatically transform protocols devised in the perfectly synchronized round-based model into protocols for the crash, send omission, general omission or Byzantine models. Our transformation is achieved using a round shifting technique with a constant time complexity overhead. The overhead depends on the target model: crashes, send omissions, general omissions or Byzantine failures. Rather surprisingly, we show that no other automatic non-uniform transformation from a weaker model, say from the traditional crash-stop model (with no atomic message delivery), onto an even stronger model than the general-omission one, say the send-omission model, can provide a better time complexity performance in a failure-free execution. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "The perfectly synchronized round-based model of distributed computing", "paper_id": "WOS:000246240500007"}