{"auto_keywords": [{"score": 0.02487500632321469, "phrase": "opph_algorithm"}, {"score": 0.015719716506582538, "phrase": "perfect_phylogeny_haplotyping"}, {"score": 0.012136457606838931, "phrase": "pph_problem"}, {"score": 0.004763565662615503, "phrase": "haplotype_data"}, {"score": 0.00472961267657106, "phrase": "genotype_data"}, {"score": 0.004679134285953932, "phrase": "crucial_step"}, {"score": 0.004596192494271827, "phrase": "human_diseases"}, {"score": 0.0045471315699087385, "phrase": "n_genotypes"}, {"score": 0.0041283957965834875, "phrase": "combining_a_pair"}, {"score": 0.003856971411867688, "phrase": "hi_problem"}, {"score": 0.0034148795808317555, "phrase": "complete_use"}, {"score": 0.0031788080316930687, "phrase": "pairwise_relationships"}, {"score": 0.0031561148083611647, "phrase": "snp_sites"}, {"score": 0.003055977395076106, "phrase": "perfect_phylogeny"}, {"score": 0.002896071795090179, "phrase": "data_structure"}, {"score": 0.0027941308786390033, "phrase": "flextree_data_structure"}, {"score": 0.002764252199256058, "phrase": "compact_representation"}, {"score": 0.0025182951088683863, "phrase": "flextree_sequentially"}, {"score": 0.0022696277881969896, "phrase": "simulated_data"}, {"score": 0.0021662599012740127, "phrase": "previous_algorithms"}], "paper_keywords": ["perfect phylogeny", " haplotype inference", " coalescence", " parsimony", " HapMap"], "paper_abstract": "Inferring haplotype data from genotype data is a crucial step in linking SNPs to human diseases. Given n genotypes over m SNP sites, the haplotype inference (HI) problem deals with finding a set of haplotypes so that each given genotype can be formed by a combining a pair of haplotypes from the set. The perfect phylogeny haplotyping (PPH) problem is one of the many computational approaches to the HI problem. Though it was conjectured that the complexity of the PPH problem was O(nm), the complexity of all the solutions presented until recently was O(nm(2)). In this paper, we make complete use of the column-ordering that was presented earlier and show that there must be some interdependencies among the pairwise relationships between SNP sites in order for the given genotypes to allow a perfect phylogeny. Based on these interdependencies, we introduce the FlexTree (flexible tree) data structure that represents all the pairwise relationships in O(m) space. The FlexTree data structure provides a compact representation of all the perfect phylogenies for the given set of genotypes. We also introduce an ordering of the genotypes that allows the genotypes to be added to the FlexTree sequentially. The column ordering, the FlexTree data structure, and the row ordering we introduce make the O(nm) OPPH algorithm possible. We present some results on simulated data which demonstrate that the OPPH algorithm performs quiet impressively when compared to the previous algorithms. The OPPH algorithm is one of the first O(nm) algorithms presented for the PPH problem.", "paper_title": "An optimal algorithm for perfect phylogeny haplotyping", "paper_id": "WOS:000238488000004"}