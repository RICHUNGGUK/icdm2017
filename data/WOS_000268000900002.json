{"auto_keywords": [{"score": 0.04957466661795797, "phrase": "schedulability_analysis"}, {"score": 0.04833595394475732, "phrase": "prototype_implementation"}, {"score": 0.029879624246873487, "phrase": "model_transformation"}, {"score": 0.004590820632326585, "phrase": "atl._model_driven_architecture"}, {"score": 0.004447201233380302, "phrase": "software_development_approach"}, {"score": 0.004353948887538618, "phrase": "omg._mda"}, {"score": 0.003936910716320182, "phrase": "development_process"}, {"score": 0.00385431710959668, "phrase": "software_system"}, {"score": 0.003694312763799457, "phrase": "uml"}, {"score": 0.003559675269411366, "phrase": "uml_profile"}, {"score": 0.003522124318486352, "phrase": "real-time_systems"}, {"score": 0.0032355864829403413, "phrase": "software_systems"}, {"score": 0.0031342307827666675, "phrase": "performance_models"}, {"score": 0.003101153870424188, "phrase": "schedulability_models"}, {"score": 0.002744888626958772, "phrase": "schedulability_analysis_models"}, {"score": 0.0024947985374078143, "phrase": "atl."}, {"score": 0.002378408229095287, "phrase": "target_metamodels"}, {"score": 0.0022434880661725493, "phrase": "atl_module"}], "paper_keywords": ["UML", " UML/SPT", " MDA", " Model transformations", " Schedulability analysis", " ATL", " Real-time"], "paper_abstract": "Model Driven Architecture (MDA) is a software development approach promoted by the OMG. MDA is based on two key concepts, models and model transformations. Several kinds of models are generally used throughout the development process to specify a software system and to support its analysis and validation. UML and its extensions, such as the UML profile for real-time systems (UML/SPT), are commonly used to define the structure and the behavior of software systems while other models, such as performance models or schedulability models, are more suitable for performance or schedulability analysis, respectively. In this paper we discuss a model transformation enabling the derivation of schedulability analysis models from UML/SPT models. As a proof of concepts, we present a prototype implementation of this model transformation using ATL. We provide a definition of the source and target metamodels using the metamodel specification language KM3 and we specify the transformation in an ATL module. We discuss the merits and limitations of our approach and of its implementation.", "paper_title": "From UML/SPT models to schedulability analysis: approach and a prototype implementation using ATL", "paper_id": "WOS:000268000900002"}