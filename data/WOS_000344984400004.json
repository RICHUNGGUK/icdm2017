{"auto_keywords": [{"score": 0.0490881866285214, "phrase": "hood"}, {"score": 0.00481495049065317, "phrase": "case_studies"}, {"score": 0.0046176782475198085, "phrase": "debugging_haskell_programs"}, {"score": 0.004475022550508119, "phrase": "observation_marks"}, {"score": 0.0034088473318056537, "phrase": "parallel_dialects"}, {"score": 0.0033382310306655253, "phrase": "haskell"}, {"score": 0.0022653055209664284, "phrase": "unneeded_work"}, {"score": 0.0021049977753042253, "phrase": "duplicated_work"}], "paper_keywords": ["Functional Programming", " Parallel Programming", " Profiling"], "paper_abstract": "Hood allows debugging Haskell programs by introducing observation marks. In this paper, we show how to use pHood (a parallel version of Hood) to analyze properties of programs written using parallel dialects of Haskell. In particular, we have tested the tool with programs written in the languages GpH and Eden (although it also works with other parallel dialects), and we have implemented methods to perform analyses of unneeded work as well as an analysis of duplicated work. By doing so, we show the usefulness and versatility of the tool.", "paper_title": "pHood: Tool Description, Analysis Techniques, and Case Studies", "paper_id": "WOS:000344984400004"}