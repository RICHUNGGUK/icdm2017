{"auto_keywords": [{"score": 0.03998042467305199, "phrase": "high-utility_itemsets"}, {"score": 0.010612387000973441, "phrase": "discovered_high-utility_itemsets"}, {"score": 0.006520477232089364, "phrase": "pre-large_concept"}, {"score": 0.0046986841646790315, "phrase": "dynamic_databases"}, {"score": 0.004562847483469705, "phrase": "association_rule_mining"}, {"score": 0.004452641437293878, "phrase": "frequent_itemsets"}, {"score": 0.004387793971765289, "phrase": "binary_database"}, {"score": 0.004077394032903726, "phrase": "binary_databases"}, {"score": 0.004037694641919865, "phrase": "utility_mining"}, {"score": 0.003901754272977278, "phrase": "utility_values"}, {"score": 0.003863758357292741, "phrase": "purchased_items"}, {"score": 0.0037519679864796906, "phrase": "static_database"}, {"score": 0.003697287104870263, "phrase": "real-world_applications"}, {"score": 0.003503497128638099, "phrase": "dynamic_database"}, {"score": 0.0034524248924699985, "phrase": "existing_maintenance_approach"}, {"score": 0.003319830633865628, "phrase": "transaction_deletion"}, {"score": 0.00311510526624626, "phrase": "efficient_algorithm"}, {"score": 0.0030696773722514105, "phrase": "pre-hui-del"}, {"score": 0.002783250284824728, "phrase": "partition_transaction-weighted_utilization_itemsets"}, {"score": 0.0027159094186967247, "phrase": "nine_cases"}, {"score": 0.002265586601922693, "phrase": "proposed_pre-hui-del_algorithm"}, {"score": 0.002232519579957707, "phrase": "batch_twophase_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Utility mining", " Pre-large concept", " Transaction deletion", " Two-phase approach", " Dynamic databases"], "paper_abstract": "Most algorithms related to association rule mining are designed to discover frequent itemsets from a binary database. Other factors such as profit, cost, or quantity are not concerned in binary databases. Utility mining was thus proposed to measure the utility values of purchased items for finding high-utility itemsets from a static database. In real-world applications, transactions are changed whether insertion or deletion in a dynamic database. An existing maintenance approach for handling high-utility itemsets in dynamic databases with transaction deletion must rescan the database when necessary. In this paper, an efficient algorithm, called PRE-HUI-DEL, for updating high-utility itemsets based on the pre-large concept for transaction deletion is proposed. The pre-large concept is used to partition transaction-weighted utilization itemsets into three sets with nine cases according to whether they have large (high), pre-large, or small transaction-weighted utilization in the original database and in the deleted transactions. Specific procedures are then applied to each case for maintaining and updating the discovered high-utility itemsets. Experimental results show that the proposed PRE-HUI-DEL algorithm outperforms a batch twophase algorithm and a FUP2-based algorithm in maintaining high-utility itemsets. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient updating of discovered high-utility itemsets for transaction deletion in dynamic databases", "paper_id": "WOS:000349882500002"}