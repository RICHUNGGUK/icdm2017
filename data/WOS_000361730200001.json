{"auto_keywords": [{"score": 0.04918458396503636, "phrase": "population-based_search_algorithms"}, {"score": 0.04761349708168883, "phrase": "run-time_behaviour"}, {"score": 0.04461328156994424, "phrase": "genetic_programming"}, {"score": 0.00481495049065317, "phrase": "statistical_distribution"}, {"score": 0.004760765880314089, "phrase": "expected_run-time"}, {"score": 0.004689462599037994, "phrase": "run-time_analysis"}, {"score": 0.004332199142914195, "phrase": "stochastic_local_search_algorithms"}, {"score": 0.0042351951710402425, "phrase": "related_stochastic_search_algorithms"}, {"score": 0.00378167947598949, "phrase": "empirical_evidence"}, {"score": 0.0037532257703888315, "phrase": "common_statistical_properties"}, {"score": 0.003546513036085932, "phrase": "grammatical_evolution"}, {"score": 0.0035198224928307854, "phrase": "differential_evolution"}, {"score": 0.0034933321145368336, "phrase": "particle_swarm"}, {"score": 0.0031905286720361145, "phrase": "unsuccessful_runs"}, {"score": 0.002913895605074143, "phrase": "well-known_evolutionary_algorithms"}, {"score": 0.002763709443278514, "phrase": "lognormal_distribution"}, {"score": 0.0026915366885986586, "phrase": "difficult_problems"}, {"score": 0.002543148295176345, "phrase": "algorithm_parameter_settings"}, {"score": 0.0025049752758014602, "phrase": "yielding_run-time_statistical_distribution"}, {"score": 0.0024211628058125067, "phrase": "selective_pressure"}, {"score": 0.0022618378709785172, "phrase": "weibull_distribution"}, {"score": 0.0022278779300543548, "phrase": "lognormal_one"}, {"score": 0.0021451873499061633, "phrase": "simple_theoretical_discrete-time_model"}, {"score": 0.0021049977753042253, "phrase": "geometrically_distributed_run-time"}], "paper_keywords": ["RTD", " Run-time analysis", " RTD analysis", " Statistical models"], "paper_abstract": "Run-time analysis is a method that characterizes the run-time behaviour of an algorithm. It has been successfully used to analyse metaheuristics and stochastic local search algorithms. Somestudies on genetic programming and related stochastic search algorithms suggested the existence of a rationale behind the run-time behaviour which could be exploited to better understand the algorithm looking at its run-time response. Under that hypothesis, this paper presents empirical evidence suggesting common statistical properties in the run-time of several types of population-based search algorithms, including genetic algorithms, genetic programming, grammatical evolution, differential evolution or particle swarm optimization. In this analysis, only the run-time of runs that were able to find a solution are considered; unsuccessful runs are not included in the analysis. The run-time to find a solution, measured by the number of evaluations, of some well-known evolutionary algorithms is empirically obtained, finding that it usually can be approximated using a lognormal distribution, with the exception of some difficult problems, which are better approximated by an exponential. We also show that the algorithm parameter settings might influence the yielding run-time statistical distribution; in particular, when there is no selective pressure, the run-time, measured as the number of evaluations to find a solution, follows a Weibull distribution instead of a lognormal one. Finally, we outline a framework using a simple theoretical discrete-time model, showing that the geometrically distributed run-time is a consequence of the lack of memory in the algorithm.", "paper_title": "On the statistical distribution of the expected run-time in population-based search algorithms", "paper_id": "WOS:000361730200001"}