{"auto_keywords": [{"score": 0.04968114352851346, "phrase": "signed_clausal_forms"}, {"score": 0.00993068452947457, "phrase": "satisfiability_problem"}, {"score": 0.00481495049065317, "phrase": "multiple-valued_optimization"}, {"score": 0.0047155367844327, "phrase": "suitable_logical_framework"}, {"score": 0.004676345706416371, "phrase": "automated_reasoning"}, {"score": 0.004637478829869904, "phrase": "multiple-valued_logics"}, {"score": 0.004447915226010682, "phrase": "finitely-valued_propositional_logic"}, {"score": 0.004195418010131832, "phrase": "polynomial_time"}, {"score": 0.0039737570920809215, "phrase": "clausal_forms"}, {"score": 0.003924284136338428, "phrase": "powerful_knowledge_representation_language"}, {"score": 0.0037480753312398754, "phrase": "practical_and_competitive_approach"}, {"score": 0.003701401653850141, "phrase": "combinatorial_decision_problems"}, {"score": 0.0036248955128033084, "phrase": "existing_theoretical_and_practical_results"}, {"score": 0.0034332736827447654, "phrase": "recent_logical_and_algorithmic_results"}, {"score": 0.0033905067962602515, "phrase": "boolean_maximum_satisfiability_problem"}, {"score": 0.003279039724748895, "phrase": "maximum_satisfiability_problem"}, {"score": 0.0032517484445814334, "phrase": "propositional_signed_clausal_forms"}, {"score": 0.0032112354575523317, "phrase": "logical_and_practical_points"}, {"score": 0.0031317126905234145, "phrase": "logical_perspective"}, {"score": 0.0030541531847589807, "phrase": "complete_inference_systems"}, {"score": 0.00300351371036355, "phrase": "starting_point"}, {"score": 0.002978508766388785, "phrase": "resolution-style_calculi"}, {"score": 0.0029291198314113608, "phrase": "boolean_cnf_case"}, {"score": 0.0028091907694771613, "phrase": "complete_resolution-style_rules"}, {"score": 0.0027741761880779535, "phrase": "signed_binary_resolution"}, {"score": 0.0027395968397212053, "phrase": "parallel_resolution"}, {"score": 0.0027167830773160203, "phrase": "maximum_satisfiability"}, {"score": 0.002671722386856879, "phrase": "practical_perspective"}, {"score": 0.002530359917257626, "phrase": "newly_defined_inference_systems"}, {"score": 0.002498812056838983, "phrase": "generic_approach"}, {"score": 0.00246765655376112, "phrase": "combinatorial_optimization_problems"}, {"score": 0.0023964590500856887, "phrase": "decision_problems"}, {"score": 0.00223196703759329, "phrase": "constraint_programming"}, {"score": 0.002194929830604162, "phrase": "concise_and_elegant_logical_framework"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Multiple-valued logics", " Signed logic", " Resolution", " Optimization", " Maximum satisfiability"], "paper_abstract": "Signed clausal forms offer a suitable logical framework for automated reasoning in multiple-valued logics. It turns out that the satisfiability problem of any finitely-valued propositional logic, as well as of certain infinitely-valued logics, can be easily reduced, in polynomial time, to the satisfiability problem of signed clausal forms. On the other hand, signed clausal forms are a powerful knowledge representation language for constraint programming, and have shown to be a practical and competitive approach to solving combinatorial decision problems. Motivated by the existing theoretical and practical results for the satisfiability problem of signed clausal forms, as well as by the recent logical and algorithmic results on the Boolean maximum satisfiability problem, in this paper we investigate the maximum satisfiability problem of propositional signed clausal forms from the logical and practical points of view. From the logical perspective, our aim is to define complete inference systems taking as a starting point the resolution-style calculi defined for the Boolean CNF case. The result is the definition of two sound and complete resolution-style rules, called signed binary resolution and signed parallel resolution for maximum satisfiability. From the practical perspective, our main motivation is to use the language of signed clausal forms along with the newly defined inference systems as a generic approach to solve combinatorial optimization problems, and not just for solving decision problems as so far. The result is the establishment of a link between signed logic and constraint programming that provides a concise and elegant logical framework for weighted constraint programming. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Resolution procedures for multiple-valued optimization", "paper_id": "WOS:000315245600003"}