{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "randomized_unit_testing"}, {"score": 0.0047559432344272, "phrase": "randomized_testing"}, {"score": 0.00466877910546307, "phrase": "effective_method"}, {"score": 0.004583205112737672, "phrase": "software_units"}, {"score": 0.004101579688745222, "phrase": "relative_frequencies"}, {"score": 0.0037854112749311844, "phrase": "nighthawk"}, {"score": 0.003625347557965931, "phrase": "genetic_algorithm"}, {"score": 0.0035810783086489503, "phrase": "ga"}, {"score": 0.0033873366086549735, "phrase": "test_coverage"}, {"score": 0.0032240802202623316, "phrase": "black_art"}, {"score": 0.0031068064097811844, "phrase": "feature_subset_selection"}, {"score": 0.0024416087858984644, "phrase": "full_representation"}, {"score": 0.0023819914954155905, "phrase": "almost_the_same_results"}, {"score": 0.0023382335380460304, "phrase": "full_system"}, {"score": 0.002157719859061794, "phrase": "fss"}, {"score": 0.0021049977753042253, "phrase": "metaheuristic_search-based_software_engineering_tools"}], "paper_keywords": ["Software testing", " randomized testing", " genetic algorithms", " feature subset selection", " search-based optimization", " testing tools"], "paper_abstract": "Randomized testing is an effective method for testing software units. The thoroughness of randomized unit testing varies widely according to the settings of certain parameters, such as the relative frequencies with which methods are called. In this paper, we describe Nighthawk, a system which uses a genetic algorithm (GA) to find parameters for randomized unit testing that optimize test coverage. Designing GAs is somewhat of a black art. We therefore use a feature subset selection (FSS) tool to assess the size and content of the representations within the GA. Using that tool, we can reduce the size of the representation substantially while still achieving most of the coverage found using the full representation. Our reduced GA achieves almost the same results as the full system, but in only 10 percent of the time. These results suggest that FSS could significantly optimize metaheuristic search-based software engineering tools.", "paper_title": "Genetic Algorithms for Randomized Unit Testing", "paper_id": "WOS:000286676700006"}