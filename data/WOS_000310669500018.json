{"auto_keywords": [{"score": 0.04714657528813317, "phrase": "technology_flexibility"}, {"score": 0.01049200954582652, "phrase": "community_source"}, {"score": 0.010196944714859279, "phrase": "kuali"}, {"score": 0.01008128625981754, "phrase": "sakai"}, {"score": 0.00481495049065317, "phrase": "robust_application_development"}, {"score": 0.004417848254181138, "phrase": "important_topic"}, {"score": 0.00436742595270452, "phrase": "software_engineering"}, {"score": 0.004243862930012258, "phrase": "computerized_business_applications"}, {"score": 0.004147523799581407, "phrase": "frequent_changes"}, {"score": 0.0041001740903338834, "phrase": "system_specifications"}, {"score": 0.004030157055463817, "phrase": "ever_changing_business_requirements"}, {"score": 0.003938650032712796, "phrase": "higher_degree"}, {"score": 0.0038052556098065694, "phrase": "long-running_challenge"}, {"score": 0.003697538418750941, "phrase": "project_managers"}, {"score": 0.003531474887552889, "phrase": "new_software_development_approach"}, {"score": 0.003372844338742438, "phrase": "numerous_development_partners"}, {"score": 0.0028715299874549245, "phrase": "software_requirements"}, {"score": 0.002444544487772349, "phrase": "application_software_engineering"}, {"score": 0.0023079225317714815, "phrase": "useful_insights"}, {"score": 0.002268441347979241, "phrase": "continuous_efforts"}, {"score": 0.0021789194955896124, "phrase": "agile_enterprises"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Technology flexibility", " Open source", " Community source", " Workflow technology", " Service oriented architecture", " Agile enterprise"], "paper_abstract": "Technology flexibility has been an important topic in software engineering since the start of computerized business applications, which require frequent changes to system specifications due to ever changing business requirements. Achieving a higher degree of technology flexibility has been a long-running challenge to software engineers and project managers. Recently, there has been a new software development approach called \"community source\" consisting of numerous development partners that are also users of the software. In community source, technology flexibility is even more important than usual due to the increase in complexity and uncertainty of software requirements by its many development partners in the community. In this paper, we investigate two community source cases, i.e., Kuali and Sakai, and examine how technology flexibility is achieved in application software engineering. The principles generated from this study should offer useful insights to the continuous efforts toward making more robust business applications in support of agile enterprises. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Technology flexibility as enabler of robust application development in community source: The case of Kuali and Sakai", "paper_id": "WOS:000310669500018"}