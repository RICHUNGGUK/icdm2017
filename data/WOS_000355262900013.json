{"auto_keywords": [{"score": 0.0418568761606081, "phrase": "demand_nodes"}, {"score": 0.04061843818468746, "phrase": "root_nodes"}, {"score": 0.00481495049065317, "phrase": "wireless_backhaul_network_design"}, {"score": 0.004703671193348433, "phrase": "biased_random-key_genetic_algorithm"}, {"score": 0.004648995193787914, "phrase": "real-world_wireless_backhaul_network_design_problem"}, {"score": 0.004402088928254543, "phrase": "steiner_tree_problem"}, {"score": 0.0043509032299218955, "phrase": "facility_location_problem"}, {"score": 0.004283576270012874, "phrase": "parameter_h"}, {"score": 0.0037662852047763112, "phrase": "candidate_steiner"}, {"score": 0.003389704997952315, "phrase": "cellular_core_network"}, {"score": 0.0033502512757488433, "phrase": "steiner_node"}, {"score": 0.0032094634756436595, "phrase": "capacity_constraint"}, {"score": 0.0031721009574803127, "phrase": "aggregate_set"}, {"score": 0.0029916929549256297, "phrase": "revenue_function"}, {"score": 0.002911039832825817, "phrase": "total_amount"}, {"score": 0.0026299995767138304, "phrase": "total_revenue"}, {"score": 0.002559072326933071, "phrase": "installed_equipment"}, {"score": 0.002376027109070317, "phrase": "demand_vertices"}, {"score": 0.00234834406550549, "phrase": "undirected_cycles"}, {"score": 0.0023029188952824685, "phrase": "directed_acyclic_graph"}, {"score": 0.002154930852763048, "phrase": "real-world_telecommunication_networks"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Wireless backhaul network design", " Small cells", " Genetic algorithm", " Mixed integer programming model"], "paper_abstract": "This paper describes a biased random-key genetic algorithm for a real-world wireless backhaul network design problem. This is a novel problem, closely related to variants of the Steiner tree problem and the facility location problem. Given a parameter h, we want to build a forest where each tree has at most h hops from the demand nodes, where traffic originates, to the root nodes where each tree is rooted. Candidate Steiner nodes do not have any demand but represent locations where we can install cellsites to cover the traffic and equipment to backhaul the traffic to the cellular core network. Each Steiner node can cover demand nodes within a given distance, subject to a capacity constraint. The aggregate set of constraints may make it impossible to cover or backhaul all demands. A revenue function computes the revenue associated with the total amount of traffic covered and backhauled to the root nodes. The objective of the problem is to build a forest that maximizes the difference between the total revenue and the cost associated with the installed equipment. Although we will have a forest when we consider only the backhaul links and root nodes, the addition of demand vertices can induce undirected cycles, resulting in a directed acyclic graph. We consider instances of this problem with several additional constraints that are motivated by the requirements of real-world telecommunication networks. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "A biased random-key genetic algorithm for wireless backhaul network design", "paper_id": "WOS:000355262900013"}