{"auto_keywords": [{"score": 0.047448351111331596, "phrase": "emvc"}, {"score": 0.04370189162868952, "phrase": "dsp"}, {"score": 0.007699668562491814, "phrase": "hardware_framework"}, {"score": 0.00481495049065317, "phrase": "configurable_video_encoder"}, {"score": 0.004760913095812542, "phrase": "real-time_video_coding_systems"}, {"score": 0.004696864364071179, "phrase": "memory_volume"}, {"score": 0.004675705937966494, "phrase": "cpu_speed"}, {"score": 0.004644146045859622, "phrase": "challenging_task"}, {"score": 0.004439097815805505, "phrase": "encoding_different_modals"}, {"score": 0.004138945265545317, "phrase": "full_advantage"}, {"score": 0.0040648241451154525, "phrase": "digital_signal_processing_ability"}, {"score": 0.003974029135585984, "phrase": "complex_video_coding"}, {"score": 0.0038677679714074088, "phrase": "fpga"}, {"score": 0.003832940448965255, "phrase": "logical_control"}, {"score": 0.003815658905884114, "phrase": "auxiliary_functions"}, {"score": 0.0037984549828326106, "phrase": "video_coding"}, {"score": 0.003738847528809348, "phrase": "strong_processing_ability"}, {"score": 0.0037219886365287085, "phrase": "flexible_configuration"}, {"score": 0.0036968421974412522, "phrase": "extensive_coverage"}, {"score": 0.003671865026158296, "phrase": "software_design"}, {"score": 0.0036224139706218916, "phrase": "key_algorithms"}, {"score": 0.0035817120480902964, "phrase": "great_impact"}, {"score": 0.0035655591618834587, "phrase": "coding_efficiency"}, {"score": 0.0035414658322295515, "phrase": "fast_motion_estimation"}, {"score": 0.003525493807130663, "phrase": "motion_vector_field"}, {"score": 0.0034858770824277843, "phrase": "smvfast"}, {"score": 0.003309278541665552, "phrase": "dsp's_hardware_resource"}, {"score": 0.0032869112485252976, "phrase": "encoder_software"}, {"score": 0.0032573224146609644, "phrase": "system_and_code_levels"}, {"score": 0.0032279990773657215, "phrase": "system_level"}, {"score": 0.0031558368006755913, "phrase": "data_transfer"}, {"score": 0.0031274241990108123, "phrase": "software_structure"}, {"score": 0.0031062822219953524, "phrase": "video_encoders"}, {"score": 0.003023129616910419, "phrase": "group_of_macro-block"}, {"score": 0.002975652654536407, "phrase": "parallel_processing_capacity"}, {"score": 0.0029622254141814944, "phrase": "dsp."}, {"score": 0.0029488574862886552, "phrase": "code_level"}, {"score": 0.0029091151459211943, "phrase": "frequently_called_modules"}, {"score": 0.002869906879287049, "phrase": "critical_optimized_part"}, {"score": 0.002844061214740664, "phrase": "main_code_optimization_methods"}, {"score": 0.0027930641181754434, "phrase": "intrinsic_function"}, {"score": 0.0027491902732542013, "phrase": "packed_data"}, {"score": 0.002718273239964212, "phrase": "data_throughput"}, {"score": 0.002675571068567923, "phrase": "software_pipelines"}, {"score": 0.002657475560851377, "phrase": "c_code"}, {"score": 0.0026454797509374004, "phrase": "linear_assembly"}, {"score": 0.0025804616931593897, "phrase": "reserved_user-data_field"}, {"score": 0.0025456716198597627, "phrase": "multi-modal_function"}, {"score": 0.00237861522566195, "phrase": "mode_switch"}, {"score": 0.002351855802526913, "phrase": "real_time"}, {"score": 0.002330664671716791, "phrase": "input_control_command"}, {"score": 0.0023201406500426083, "phrase": "experimental_results"}, {"score": 0.0022631003204259224, "phrase": "good_flexibility"}, {"score": 0.00222249726328354, "phrase": "diverse_video"}, {"score": 0.0022124605840026313, "phrase": "image_coding"}, {"score": 0.002138613111985898, "phrase": "strict_restriction"}, {"score": 0.002119339298633587, "phrase": "power_consumption"}, {"score": 0.0021049977753042253, "phrase": "control_flexibility"}], "paper_keywords": [""], "paper_abstract": "The implementation of real-time video coding systems with limited resources such as memory volume and CPU speed is a challenging task. In this paper, an efficient embedded multi-modal MPEG-4 video encoder (EMVC) is proposed and implemented to meet the requirement of encoding different modals (colors, resolutions, and bandwidths) video in size and power-restricted scenario. The hardware framework of EMVC is based on FPGA and DSP, which takes full advantage of the strongpoint of DSP and FPGApowerful digital signal processing ability of DSP is utilized to complete most of the complex video coding, and flexible configuration, the parallelism and high speed of FPGA cooperates to accomplish logical control and auxiliary functions in video coding. The hardware framework is designed with strong processing ability, flexible configuration, and extensive coverage. In software design, we first improve some key algorithms in MPEG-4 standard that have great impact on coding efficiency, a fast motion estimation algorithmsmooth motion vector field adaptive search technique (SMVFAST) and a DSP-based efficient quantization computation methodEQ4DSP are put forward respectively; second, according to the characters of DSP's hardware resource, the encoder software is optimized at system and code levels. At the system level, EDMA (Enhanced Direct Memory Access) channels in DSP are used to parallel the data transfer, and the software structure of the video encoders is changed from frame-based to GMB-based (Group of Macro-Block) to make use of the parallel processing capacity of DSP. At code level, the codes of the frequently called modules in the encoder are the critical optimized part, and the main code optimization methods used in EMVC include: using an intrinsic function to replace the complicated C/C++ code, using packed data processing to maximize the data throughput, unrolling the loop to increase software pipelines, translating C code to Linear Assembly, and so on. By making use of the reserved user-data field in the MPEG-4 standard syntax, a multi-modal function of EMVC is realized, namely, the system can switch among 720 576 and 352 288 resolutions, grey and color video, 2 M and 256 K bandwidth. Moreover, the mode switch can be achieved in real time according to the input control command. Experimental results show that EMVC not only runs efficiently but also has good flexibility and generality. Furthermore, by realizing diverse video or image coding algorithms, it can also satisfy the requirements of various embedded video applications, especially those with strict restriction in size, power consumption, and control flexibility.", "paper_title": "An Efficient Framework for Configurable Video Encoder", "paper_id": "WOS:000265103800016"}