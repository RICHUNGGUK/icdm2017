{"auto_keywords": [{"score": 0.049521347818116, "phrase": "tree_aggregation"}, {"score": 0.02322730111336097, "phrase": "large_domains"}, {"score": 0.007178050234376834, "phrase": "tald"}, {"score": 0.004675930527604869, "phrase": "efficient_proposition"}, {"score": 0.004487989502479992, "phrase": "multicast_forwarding_state_scalability"}, {"score": 0.00440976345264104, "phrase": "main_idea"}, {"score": 0.0039449104968131655, "phrase": "multicast_forwarding_states"}, {"score": 0.0035082436540296406, "phrase": "aggregation_ratio"}, {"score": 0.0032889671598112023, "phrase": "new_algorithm"}, {"score": 0.002994178996584381, "phrase": "large_number"}, {"score": 0.0024667783849055634, "phrase": "possible_aggregation"}, {"score": 0.002326068563512387, "phrase": "forwarding_states"}, {"score": 0.002129877319760485, "phrase": "rocketfuel_network"}], "paper_keywords": ["multicasting", " tree aggregation", " network simulation"], "paper_abstract": "Tree aggregation is an efficient proposition that can solve the problem of multicast forwarding state scalability. The main idea of tree aggregation is to force several groups to share the same delivery tree: in this way, the number of multicast forwarding states per router is reduced. Unfortunately, when achieving tree aggregation in large domains, few groups share the same tree and the aggregation ratio is small. In this paper, we propose a new algorithm called TALD (Tree Aggregation in Large Domains) that achieves tree aggregation in domains with a large number of nodes. The principle of TALD is to divide the domain into several sub-domains and to achieve the aggregation in each of the sub-domain separately. In this way, there is possible aggregation in each of the sub-domain and the number of forwarding states is significantly reduced. We show the performance of our algorithm by simulations on a Rocketfuel network of 200 routers.", "paper_title": "Multicast tree aggregation in large domains", "paper_id": "WOS:000238114800058"}