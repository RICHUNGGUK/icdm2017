{"auto_keywords": [{"score": 0.04816141098185893, "phrase": "gkm"}, {"score": 0.04300690327111064, "phrase": "group_rekeying"}, {"score": 0.00481495049065317, "phrase": "efficient_rekeying_framework"}, {"score": 0.004706895428234964, "phrase": "diverse-subscription-period_mobile_users"}, {"score": 0.004664352260912174, "phrase": "group_key_management"}, {"score": 0.004559661374976129, "phrase": "mobile_communication"}, {"score": 0.004457309741979921, "phrase": "access_control"}, {"score": 0.00429828390000229, "phrase": "major_issue"}, {"score": 0.004144908086646161, "phrase": "communication_cost"}, {"score": 0.004015182362035361, "phrase": "optimal_gkm"}, {"score": 0.0038895008852940323, "phrase": "group_members"}, {"score": 0.003584025547693836, "phrase": "real_mobile_computing_environment"}, {"score": 0.003378385493203297, "phrase": "large_gap"}, {"score": 0.0033326252993345685, "phrase": "impractical_analysis"}, {"score": 0.003257727050827128, "phrase": "real-life_situations"}, {"score": 0.0031845067058084583, "phrase": "gkm_schemes"}, {"score": 0.002988101395789399, "phrase": "new_gkm_framework"}, {"score": 0.002765776659294382, "phrase": "initial_construction"}, {"score": 0.0027282915297520624, "phrase": "basic_key-tree"}, {"score": 0.0026307897899760383, "phrase": "membership_changes"}, {"score": 0.0025951294037626174, "phrase": "first_algorithm"}, {"score": 0.0025137856138000014, "phrase": "optimal_key-tree"}, {"score": 0.0023694065215394593, "phrase": "second_algorithm"}, {"score": 0.0023479408542211875, "phrase": "continual_maintenance"}, {"score": 0.0021731423856364003, "phrase": "previous_one"}, {"score": 0.0021049977753042253, "phrase": "best_balanced_and_complete_structure"}], "paper_keywords": ["Multicast", " security", " group key", " group key management", " logical key hierarchy", " batch rekeying", " group dynamics"], "paper_abstract": "Group key management (GKM) in mobile communication is important to enable access control for a group of users. A major issue in GKM is how to minimize the communication cost for group rekeying. To design the optimal GKM, researchers have assumed that all group members have the same leaving probabilities and that the tree is balanced and complete to simplify analysis. In the real mobile computing environment, however, these assumptions are impractical and may lead to a large gap between the impractical analysis and the measurement in real-life situations, thus allowing for GKM schemes to incorporate only a specific number of users. In this paper, we propose a new GKM framework supporting more general cases that do not require these assumptions. Our framework consists of two algorithms: one for initial construction of a basic key-tree and another for optimizing the key-tree after membership changes. The first algorithm enables the framework to generate an optimal key-tree that reflects the characteristics of users' leaving probabilities, and the second algorithm allows continual maintenance of communication with less overhead in group rekeying. Through simulations, we show that our GKM framework outperforms the previous one which is known to be the best balanced and complete structure.", "paper_title": "Efficient Rekeying Framework for Secure Multicast with Diverse-Subscription-Period Mobile Users", "paper_id": "WOS:000333092700006"}