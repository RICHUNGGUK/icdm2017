{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "common_platforms"}, {"score": 0.004100851549096203, "phrase": "whole_botnet"}, {"score": 0.003957078581524691, "phrase": "isolated_compromised_machines"}, {"score": 0.0034715658596258018, "phrase": "current_research_focus"}, {"score": 0.0034304883989739804, "phrase": "botnet_detection"}, {"score": 0.0031750418391373035, "phrase": "new_attacks"}, {"score": 0.0027522340188241446, "phrase": "user_identity"}, {"score": 0.0025169965861573185, "phrase": "acceptable_effort"}, {"score": 0.0024577274522206436, "phrase": "security_defenders"}, {"score": 0.002155779067056877, "phrase": "security_researchers"}, {"score": 0.0021049977753042253, "phrase": "traditional_shutting"}], "paper_keywords": ["Botnet", " Recoverability", " User identity addressing", " Defense"], "paper_abstract": "Nowadays, botnets have become common platforms for many Internet attacks. However, most of current Command and Control (C&C) architectures of botnets suffer from the risk of being shut down or poisoned. Once the C&C channel is disrupted, the whole botnet will become a set of isolated compromised machines. Consequently, considering how to construct a recoverable C&C channel in case it is closed is attractive for botmasters. Most of current research focus on botnet detection and monitor, but these are not enough. Defenders should research new attacks that could be developed by botmasters in the near future. In this paper, a recoverable botnet, extending current C&C channel designs with User Identity (UserID) Addressing, is proposed. It could recover the destroyed C&C channel with acceptable effort and latency which security defenders must pay more attention to. Based on the analysis of the UserID-centralized C&C architecture, possible defenses against this botnet are suggested. Security researchers should concern that traditional shutting down of a botnet may not eliminate the botnet really.", "paper_title": "A USERID-CENTRALIZED RECOVERABLE BOTNET: STRUCTURE RESEARCH AND DEFENSE", "paper_id": "WOS:000282919400004"}