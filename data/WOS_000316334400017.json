{"auto_keywords": [{"score": 0.04749178419281337, "phrase": "dpf"}, {"score": 0.004814977665482127, "phrase": "vlsi"}, {"score": 0.004697655699119423, "phrase": "efficient_fuzzification_algorithm"}, {"score": 0.004611554879923759, "phrase": "dynamic_precision_fuzzification"}, {"score": 0.004230068512904886, "phrase": "hardware_implementation"}, {"score": 0.003952513974962462, "phrase": "piecewise_linear_membership_function"}, {"score": 0.0038561471948364723, "phrase": "inherent_capacity"}, {"score": 0.0037854112749311844, "phrase": "normal_fuzzification_algorithm"}, {"score": 0.0036030386046805598, "phrase": "finite-precision_implementation_bed"}, {"score": 0.0034720284451902083, "phrase": "accuracy_simulation_results"}, {"score": 0.0033664873319204027, "phrase": "normal_fuzzification_method"}, {"score": 0.003145418333946571, "phrase": "dpf."}, {"score": 0.0029753513692467315, "phrase": "finite-precision_implementation_environment"}, {"score": 0.0029027394930867902, "phrase": "system_cost-precision_trade-off"}, {"score": 0.0027457584014804574, "phrase": "suitable_precision_improvements"}, {"score": 0.002678734566245688, "phrase": "traditional_fuzzification"}, {"score": 0.0026133424923929227, "phrase": "system_word-length"}, {"score": 0.002565345470805401, "phrase": "vlsi_synthesis_results"}, {"score": 0.0023967582707115354, "phrase": "considerable_accuracy_improvement"}, {"score": 0.002323826502178581, "phrase": "acceptable_increase"}, {"score": 0.0021576973674470997, "phrase": "power_consumption"}, {"score": 0.0021049977753042253, "phrase": "traditional_methods"}], "paper_keywords": ["Cost-accuracy trade-off", " Fuzzification algorithm", " Fuzzy hardware", " VLSI"], "paper_abstract": "An efficient fuzzification algorithm named as Dynamic Precision Fuzzification (DPF) is introduced in this paper which is mainly developed for hardware implementation. The DPF which might be generally used with any piecewise linear membership function, exploits an inherent capacity of the normal fuzzification algorithm to improve its efficiency when realized in a finite-precision implementation bed such as digital VLSI. The accuracy simulation results of the DPF and normal fuzzification method are presented and compared to show the superiority of the DPF. As the word-length is the most important parameter in a finite-precision implementation environment which determines the system cost-precision trade-off, the simulation results show that DPF provides suitable precision improvements with respect to traditional fuzzification without increasing the system word-length. The VLSI synthesis results of both methods are also presented to show that this considerable accuracy improvement is achieved by an acceptable increase in its VLSI implementation costs in terms of area, delay, and power consumption with respect to traditional methods.", "paper_title": "A hardware oriented fuzzification algorithm and its VLSI implementation", "paper_id": "WOS:000316334400017"}