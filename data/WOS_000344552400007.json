{"auto_keywords": [{"score": 0.0494096760831155, "phrase": "gpu"}, {"score": 0.04723396191520873, "phrase": "iterative_methods"}, {"score": 0.025912135974726243, "phrase": "bcg"}, {"score": 0.00481495049065317, "phrase": "kernel_fusion_blas_routines"}, {"score": 0.004637478829869904, "phrase": "case_study"}, {"score": 0.004466519142879166, "phrase": "partial_differential_equations"}, {"score": 0.004301834610818624, "phrase": "basic_kernels"}, {"score": 0.004182301599359094, "phrase": "graphics_processing_unit"}, {"score": 0.004066076430818046, "phrase": "global_runtime"}, {"score": 0.004009175817816061, "phrase": "resulting_combination"}, {"score": 0.003897742942358768, "phrase": "smallest_and_most_inefficient_vector_operations"}, {"score": 0.003807242767474929, "phrase": "gpu_exploitation"}, {"score": 0.003684048704119722, "phrase": "potential_kernels"}, {"score": 0.0035648266669315943, "phrase": "data_dependence"}, {"score": 0.003531474887552889, "phrase": "data_type"}, {"score": 0.0034494494982242187, "phrase": "gpu_resources"}, {"score": 0.003353521531649663, "phrase": "extensive_analysis"}, {"score": 0.0032602525602322832, "phrase": "vector_operations"}, {"score": 0.0031845067058084583, "phrase": "basic_linear_algebra_subprograms"}, {"score": 0.003038289562465395, "phrase": "gpu."}, {"score": 0.0030097975788892896, "phrase": "experimental_evaluation"}, {"score": 0.0029260602766930065, "phrase": "noticeable_improvement"}, {"score": 0.0028580564897994175, "phrase": "lower_memory_requirements"}, {"score": 0.0027139447110929586, "phrase": "fused_blas_operations"}, {"score": 0.002552946390854313, "phrase": "large_linear_systems"}, {"score": 0.002493592357827492, "phrase": "gpu._iterative_methods"}, {"score": 0.0024586427394152196, "phrase": "biconjugate_gradient_method"}, {"score": 0.002301896758256575, "phrase": "optimization_strategy"}, {"score": 0.0022589720760078274, "phrase": "kernel_fusion"}, {"score": 0.0022378101636842296, "phrase": "vector_routines"}, {"score": 0.0021049977753042253, "phrase": "different_characteristics"}], "paper_keywords": ["Kernel fusion", " Iterative solvers", " BCG", " BLAS 1", " GPU"], "paper_abstract": "Programmers usually implement iterative methods that solve partial differential equations by expressing them using a sequence of basic kernels from libraries optimized for the graphics processing unit (GPU). The global runtime of the resulting combination is often penalized by the smallest and most inefficient vector operations. To improve the GPU exploitation, we identify and analyze the potential kernels to be fused according to the data dependence, data type and size, and GPU resources. This paper provides an extensive analysis of the impact of fusing vector operations [level 1 of Basic Linear Algebra Subprograms (BLAS)] on the performance of the GPU. The experimental evaluation shows that this optimization provides noticeable improvement especially for kernels with lower memory requirements and on more modern GPUs. It is worth noting that the fused BLAS operations can be very useful to help programmers efficiently code iterative methods to solve large linear systems of equations for the GPU. Iterative methods such as biconjugate gradient method (BCG) are one of the examples that can benefit from this optimization strategy. Indeed, kernel fusion of vector routines makes the most efficient GPU implementation of BCG run between and faster on three GPUs of different characteristics.", "paper_title": "Performance evaluation of kernel fusion BLAS routines on the GPU: iterative solvers as case study", "paper_id": "WOS:000344552400007"}