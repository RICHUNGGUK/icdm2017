{"auto_keywords": [{"score": 0.046040545801964726, "phrase": "consumer_function"}, {"score": 0.04321741822655008, "phrase": "producer_function"}, {"score": 0.00481495049065317, "phrase": "accumulating_parameter"}, {"score": 0.004669085371587273, "phrase": "unifying_solution"}, {"score": 0.004276120412040056, "phrase": "key_idea"}, {"score": 0.00395069818358908, "phrase": "data_contexts"}, {"score": 0.0037973594873521596, "phrase": "fusion_method"}, {"score": 0.003682207422331339, "phrase": "elementary_theory"}, {"score": 0.0036499505265403377, "phrase": "universal_algebra"}, {"score": 0.003492840830999027, "phrase": "monoid_homomorphism"}, {"score": 0.0030206579994328975, "phrase": "general_concept"}, {"score": 0.002682081928174866, "phrase": "monoid_homomorphism_h"}, {"score": 0.002646880721119838, "phrase": "function_g"}, {"score": 0.0025217065652145443, "phrase": "principled_way"}, {"score": 0.0024776677004255104, "phrase": "first-order_function"}, {"score": 0.0024130437638400404, "phrase": "fusion_problem"}, {"score": 0.0023501014144112443, "phrase": "clean_and_unifying_account"}, {"score": 0.0023294867572824147, "phrase": "varying_fusion_methods"}, {"score": 0.0021613897794439227, "phrase": "partial_and_infinite_data_structures"}, {"score": 0.0021049977753042253, "phrase": "appropriate_monoid_structure"}], "paper_keywords": ["shortcut fusion", " accumulating parameter", " data contexts", " monoids and monoid homomorphisms", " higher-order removal", " partial and infinite data structures"], "paper_abstract": "We present a unifying solution to the problem of fusion of functions, where both the producer function and the consumer function have one accumulating parameter. The key idea in this development is to formulate the producer function as a function which computes over a monoid of data contexts. Upon this formulation, we develop a fusion method called algebraic fusion based on the elementary theory of universal algebra and monoids. The producer function is fused with a monoid homomorphism that is derived from the definition of the consumer function, and is turned into a higher-order function f that computes over the monoid of endofunctions. We then introduce a general concept called improvement, in order to reduce the cost of computing over the monoid of endofunctions (i.e., function closures). An improvement of the function f via a monoid homomorphism h is a function g that satisfies f = h o g. This provides a principled way of finding a first-order function representing a solution to the fusion problem. It also presents a clean and unifying account for varying fusion methods that have been proposed so far. Furthermore, we show that our method extends to support partial and infinite data structures, by means of an appropriate monoid structure.", "paper_title": "Algebraic fusion of functions with an accumulating parameter and its improvement", "paper_id": "WOS:000202972400023"}