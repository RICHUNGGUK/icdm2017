{"auto_keywords": [{"score": 0.04454691450362353, "phrase": "hough"}, {"score": 0.04274518365190484, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "circular_patterns"}, {"score": 0.00441718685609235, "phrase": "novel_approach"}, {"score": 0.004140490129683107, "phrase": "graphics_hardware"}, {"score": 0.003965684670332574, "phrase": "primary_role"}, {"score": 0.003853251284913932, "phrase": "vertex_processors"}, {"score": 0.0036640806940633373, "phrase": "traditional_foreground"}, {"score": 0.003611751858608048, "phrase": "pixel_processors"}, {"score": 0.0035346515636097533, "phrase": "parallel_processing"}, {"score": 0.0034097787109430384, "phrase": "vertex_cache"}, {"score": 0.003361069456060196, "phrase": "blending_units"}, {"score": 0.003105305189036267, "phrase": "extraordinary_peak_gain_factors"}, {"score": 0.002995554770117301, "phrase": "typical_cpu_execution"}, {"score": 0.002952745241052452, "phrase": "software_optimizations"}, {"score": 0.0028279422436488116, "phrase": "precomputed_tables"}, {"score": 0.00278752137116301, "phrase": "gradient_information"}, {"score": 0.002396371892825691, "phrase": "better_scalability"}, {"score": 0.0022950308685133224, "phrase": "solid_alternative"}, {"score": 0.0022298571016688335, "phrase": "classical_circle"}, {"score": 0.0021509807762081145, "phrase": "optimal_methods"}, {"score": 0.0021049977753042253, "phrase": "emerging_multicore_architectures"}], "paper_keywords": ["Image processing", " Hough transform", " Graphics processors", " Parallel programming on shaders", " GPU rasterizer", " Multicore architectures", " High performance computing"], "paper_abstract": "We develop a novel approach for computing the circle Hough transform entirely on graphics hardware (GPU). A primary role is assigned to vertex processors and the rasterizer, overshadowing the traditional foreground of pixel processors and enhancing parallel processing. Resources like the vertex cache or blending units are studied too, with our set of optimizations leading to extraordinary peak gain factors exceeding 358x over a typical CPU execution. Software optimizations, like the use of precomputed tables or gradient information and hardware improvements, like hyperthreading and multicores are explored on CPUs as well. Overall, the GPU exhibits better scalability and much greater parallel performance to become a solid alternative for computing the classical circle Hough transform versus those optimal methods run on emerging multicore architectures. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Recognition of circular patterns on GPUs: Performance analysis and contributions", "paper_id": "WOS:000259881400004"}