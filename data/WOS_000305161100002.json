{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "filtering_technique"}, {"score": 0.004632597963417253, "phrase": "constraint_satisfaction_problems._arc-consistency_algorithms"}, {"score": 0.004388796812234033, "phrase": "search_space"}, {"score": 0.0043215158337835706, "phrase": "constraint_satisfaction_problems"}, {"score": 0.00406250784433007, "phrase": "similar_technique"}, {"score": 0.003534889186471058, "phrase": "second_variable"}, {"score": 0.003246672441842787, "phrase": "binary_csps"}, {"score": 0.003051887221639784, "phrase": "new_algorithm"}, {"score": 0.0026347074232350503, "phrase": "unnecessary_checking"}, {"score": 0.002476546030310661, "phrase": "experimental_results"}, {"score": 0.002292097733181405, "phrase": "arc-consistency_algorithms"}, {"score": 0.0022568866348667547, "phrase": "non-normalized_instances"}], "paper_keywords": ["Constraint satisfaction problems", " Consistency techniques", " 2-consistency"], "paper_abstract": "Arc-Consistency algorithms are the most commonly used filtering techniques to prune the search space in Constraint Satisfaction Problems (CSPs). 2-consistency is a similar technique that guarantees that any instantiation of a value to a variable can be consistently extended to any second variable. Thus, 2-consistency can be stronger than arc-consistency in binary CSPs. In this work we present a new algorithm to achieve 2-consistency called 2-C4. This algorithm is a reformulation of AC4 algorithm that is able to reduce unnecessary checking and prune more search space than AC4. The experimental results show that 2-C4 was able to prune more search space than arc-consistency algorithms in non-normalized instances. Furthermore, 2-C4 was more efficient than other 2-consistency algorithms presented in the literature.", "paper_title": "A FILTERING TECHNIQUE TO ACHIEVE 2-CONSISTENCY IN CONSTRAINT SATISFACTION PROBLEMS", "paper_id": "WOS:000305161100002"}