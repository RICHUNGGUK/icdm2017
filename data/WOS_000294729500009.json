{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "search_spaces"}, {"score": 0.004715702140552199, "phrase": "randomized_search"}, {"score": 0.004308630865024719, "phrase": "propositional_satisfiability_problem"}, {"score": 0.004219774794569897, "phrase": "randomized_satisfiability_solver"}, {"score": 0.004047500054405469, "phrase": "n_computers"}, {"score": 0.003909301559145041, "phrase": "best_way"}, {"score": 0.0024026156525362684, "phrase": "real_search_space"}, {"score": 0.0021049977753042253, "phrase": "simple_distribution"}], "paper_keywords": ["SAT solving", " Randomized search", " Distributed constraint-based search"], "paper_abstract": "This paper studies the following question: given an instance of the propositional satisfiability problem, a randomized satisfiability solver, and a cluster of n computers, what is the best way to use the computers to solve the instance? Two approaches, simple distribution and search space partitioning as well as their combinations are investigated both analytically and empirically. It is shown that the results depend heavily on the type of the problem (unsatisfiable, satisfiable with few solutions, and satisfiable with many solutions) as well as on how good the search space partitioning function is. In addition, the behavior of a real search space partitioning function is evaluated in the same framework. The results suggest that in practice one should combine the simple distribution and search space partitioning approaches.", "paper_title": "Partitioning Search Spaces of a Randomized Search", "paper_id": "WOS:000294729500009"}