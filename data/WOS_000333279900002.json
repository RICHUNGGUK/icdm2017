{"auto_keywords": [{"score": 0.030424249019695215, "phrase": "consensus_string"}, {"score": 0.00481495049065317, "phrase": "weighted_finite_automaton"}, {"score": 0.004692227830462433, "phrase": "probabilistic_grammar"}, {"score": 0.004417848254181138, "phrase": "important_questions"}, {"score": 0.004053362743156545, "phrase": "best_translation"}, {"score": 0.003751011827704279, "phrase": "probabilistic_finite_state_transducer"}, {"score": 0.003531474887552889, "phrase": "general_weights"}, {"score": 0.0034427546795637145, "phrase": "np"}, {"score": 0.0031032109441552287, "phrase": "pseudo-polynomial_algorithm"}, {"score": 0.0029980260560551982, "phrase": "decision_problem"}, {"score": 0.0023145690608400425, "phrase": "probabilistic_finite_automata"}, {"score": 0.0022749744354271816, "phrase": "probabilistic_context-free_grammars"}, {"score": 0.0021601997088758957, "phrase": "randomized_algorithm"}], "paper_keywords": ["Probabilistic automata", " parsing"], "paper_abstract": "The problem of finding the consensus (most probable string) for a distribution generated by a weighted finite automaton or a probabilistic grammar is related to a number of important questions: computing the distance between two distributions or finding the best translation (the most probable one) given a probabilistic finite state transducer. The problem is undecidable with general weights and is NP-hard if the automaton is probabilistic. We give a pseudo-polynomial algorithm that solves a decision problem directly associated with the consensus string and answers if there is a (reasonably short) string whose probability is larger than a given bound in time polynomial in the the size of this bound, both for probabilistic finite automata and probabilistic context-free grammars. We also study a randomized algorithm solving the same problem. Finally, we report links between the length of the consensus string and the probability of this string.", "paper_title": "The most probable string: an algorithmic study", "paper_id": "WOS:000333279900002"}