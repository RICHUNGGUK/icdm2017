{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.04887628199608142, "phrase": "computer_vision"}, {"score": 0.003802135020791801, "phrase": "graphics_processing_unit"}, {"score": 0.0030787405733989615, "phrase": "gpu_library"}, {"score": 0.003027178161479457, "phrase": "mingpu"}, {"score": 0.002853396755102163, "phrase": "necessary_functions"}, {"score": 0.002758597251689795, "phrase": "existing_cpu_code"}, {"score": 0.002712428398645384, "phrase": "gpu."}, {"score": 0.0026222551419772867, "phrase": "gpu_implementations"}, {"score": 0.002349467661235188, "phrase": "timing_charts"}, {"score": 0.002233301265743633, "phrase": "homography_transformations"}], "paper_keywords": ["GPU", " GPGPU", " Computer vision", " Homography transformation"], "paper_abstract": "In the field of computer vision, it is becoming increasingly popular to implement algorithms, in sections or in their entirety, on a graphics processing unit (GPU). This is due to the superior speed GPUs offer compared to CPUs. In this paper, we present a GPU library, MinGPU, which contains all of the necessary functions to convert an existing CPU code to GPU. We have created GPU implementations of several well known computer vision algorithms, including the homography transformation between two 3D views. We provide timing charts and show that our MinGPU implementation of homography transformations performs approximately 600 times faster than its C++ CPU implementation.", "paper_title": "MinGPU: a minimum GPU library for computer vision", "paper_id": "WOS:000207724100003"}