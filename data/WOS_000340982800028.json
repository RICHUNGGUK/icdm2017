{"auto_keywords": [{"score": 0.04410425397162581, "phrase": "resource_conflicts"}, {"score": 0.03433523704979226, "phrase": "elimination_mechanism"}, {"score": 0.00481495049065317, "phrase": "critical_chains"}, {"score": 0.004728624975677976, "phrase": "multi-project_scheduling_approach"}, {"score": 0.004478782833067256, "phrase": "distributed_resource"}, {"score": 0.004425072111844721, "phrase": "multi-project_scheduling_problem"}, {"score": 0.004372002674739612, "phrase": "drcmpsp"}, {"score": 0.003969640975997097, "phrase": "precedence_constraints"}, {"score": 0.003922011960904278, "phrase": "resource_constraints"}, {"score": 0.00360417515510547, "phrase": "critical_chain_concept"}, {"score": 0.003539479990299223, "phrase": "distributed_problem"}, {"score": 0.0034550163444256386, "phrase": "corresponding_heuristic_strategy"}, {"score": 0.003312009953245191, "phrase": "large_scale_instances"}, {"score": 0.0030251262102203385, "phrase": "global_resources"}, {"score": 0.0029707940194245216, "phrase": "time_slots"}, {"score": 0.0027463775689957255, "phrase": "distributed_multi-agent_system"}, {"score": 0.0025853238923610076, "phrase": "satisfactory_solutions"}, {"score": 0.0025542617599268323, "phrase": "low_average_project_delay"}, {"score": 0.0025235718883452585, "phrase": "significant_time_savings"}, {"score": 0.002389956401870098, "phrase": "great_scalability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed multi-project scheduling", " Critical chain", " Multi-agent system", " Elimination mechanism"], "paper_abstract": "In this paper, we discuss the distributed resource constrained multi-project scheduling problem (DRCMPSP) and focus on handling resource conflicts. The resource conflicts among projects are originally caused by precedence constraints and resource constraints. To reflect the influences of both constraints, this paper incorporates the critical chain concept into the distributed problem and introduces a corresponding heuristic strategy. Besides, to deal with large scale instances, an elimination mechanism is proposed, which identifies a few conflict time slots in advance and allocates global resources in those time slots only. Depending upon the heuristics and elimination mechanism, we develop a distributed multi-agent system based algorithm called DMAS/EM. Experiments show that DMAS/EM algorithm can generate satisfactory solutions with low average project delay and significant time savings. Furthermore, we observe that our algorithm provides great scalability with respect to variations in the size of instances processed and the degree of conflicts. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A critical chains based distributed multi-project scheduling approach", "paper_id": "WOS:000340982800028"}