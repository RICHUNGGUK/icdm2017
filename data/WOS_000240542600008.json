{"auto_keywords": [{"score": 0.033255588523354467, "phrase": "tmo"}, {"score": 0.00481495049065317, "phrase": "tmo_kernels"}, {"score": 0.004758457292840376, "phrase": "ubiquitous_and_embedded_real-time_distributed_computing"}, {"score": 0.00443308765153716, "phrase": "real-time_distributed_computing"}, {"score": 0.00420368356873615, "phrase": "autonomous_object"}, {"score": 0.004105558123159003, "phrase": "member_threads"}, {"score": 0.0040334640350288, "phrase": "first_type"}, {"score": 0.003916098498242888, "phrase": "time-triggered_threads"}, {"score": 0.00384731849108269, "phrase": "pre-defined_timing_constraints"}, {"score": 0.0036481158025940016, "phrase": "second_type"}, {"score": 0.003541923233726252, "phrase": "message-triggered_threads"}, {"score": 0.0034388111429203222, "phrase": "distributed_ipc_messages"}, {"score": 0.0033984088755183287, "phrase": "remote_tmo"}, {"score": 0.0032800186243040663, "phrase": "pre-given_deadlines"}, {"score": 0.0031100973266506163, "phrase": "ubiquitous_and_real-time_distributed_applications"}, {"score": 0.002984027623988469, "phrase": "logical_network"}, {"score": 0.0028630535573013686, "phrase": "tmo_model"}, {"score": 0.0026827569390113822, "phrase": "tmo_engines"}, {"score": 0.0026355812883224203, "phrase": "open-source_kernel_platforms"}, {"score": 0.0025587867729949037, "phrase": "tmo-linux"}, {"score": 0.0025286975935774245, "phrase": "general_embedded_systems"}, {"score": 0.002498961351132696, "phrase": "tmo-ecos"}, {"score": 0.0023415390666563177, "phrase": "general_architectures"}, {"score": 0.002273292707863821, "phrase": "developed_tmo_kernels"}, {"score": 0.002246553137021003, "phrase": "embedded_systems"}], "paper_keywords": [""], "paper_abstract": "The TMO (Time-triggered Message-triggered Object) model is a real-time object model for real-time distributed computing. A TMO instance is a kind of autonomous object having two special types of member threads. The first type is a group of time-triggered threads activated by pre-defined timing constraints such as periods and deadlines. And the second type is a group of message-triggered threads that are activated by distributed IPC messages from remote TMO's and finish their computing within pre-given deadlines. With these properties of the TMO, ubiquitous and real-time distributed applications can be easily organized as a logical network of TMO's. Since the TMO model has been proposed, there have been many successful progresses in developing TMO engines based on open-source kernel platforms. The kernels are TMO-Linux for general embedded systems and TMO-eCos for small embedded/ubiquitous systems. In this paper, after introducing the general architectures and functions of the developed TMO kernels for embedded systems, some comparisons of their characteristics are also given to specify their suitable usage domains.", "paper_title": "Architectures and functions of the TMO kernels for ubiquitous and embedded real-time distributed computing", "paper_id": "WOS:000240542600008"}