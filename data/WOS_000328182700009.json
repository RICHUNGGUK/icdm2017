{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "association-based_active_access_control"}, {"score": 0.004756805752518494, "phrase": "balanced_scalability"}, {"score": 0.00453113241842654, "phrase": "security_policy_specification"}, {"score": 0.004094639048362357, "phrase": "fine-grained_constraints"}, {"score": 0.003567455727660992, "phrase": "task-role_associations"}, {"score": 0.0035100601949451028, "phrase": "workflow_case"}, {"score": 0.0033029038236817372, "phrase": "association's_assigned_permissions"}, {"score": 0.0030455297429878873, "phrase": "generalized_association"}, {"score": 0.002984373546099842, "phrase": "common_authorizations"}, {"score": 0.0029602552900111407, "phrase": "multiple_associations"}, {"score": 0.002877361619893651, "phrase": "fine-grained_separation"}, {"score": 0.0027295084882654917, "phrase": "maximal_model"}, {"score": 0.0026316112429083235, "phrase": "similar_constraints"}, {"score": 0.002537216271965659, "phrase": "software_workflow"}, {"score": 0.0025167026017217926, "phrase": "case_validation"}, {"score": 0.0024461989110005447, "phrase": "representative_association"}, {"score": 0.002436289099444074, "phrase": "based_mc_model"}, {"score": 0.0022011501095573747, "phrase": "different_permissions"}, {"score": 0.0021569129153653777, "phrase": "multiple_roles"}], "paper_keywords": ["Access control", " Workflow", " Task", " Role", " Scalability", " Flexibility"], "paper_abstract": "In existing Active Access Control (MC) models, the scalability and flexibility of security policy specification should be well balanced, especially: (1) authorizations to plenty of tasks should be simplified; (2) team workflows should be enabled; (3) fine-grained constraints should be enforced. To address this issue, a family of Association-Based Active Access Control (ABAAC) models is proposed. In the minimal model ABAAC(0), users are assigned to roles while permissions are assigned to task-role associations. In a workflow case, to execute such an association some users assigned to its component role will be allocated. The association's assigned permissions can be performed by them during the task is running in the case. In ABAAC(1), a generalized association is employed to extract common authorizations from multiple associations. In ABAAC(2), a fine-grained separation of duty (SoD) is enforced among associations. In the maximal model ABAAC(3), all these features are integrated, and similar constraints can be specified more concisely. Using a software workflow, case validation is performed. Comparison with a representative association based MC model and the most scalable MC model so far indicates that: (1) enough scalability is achieved; (2) without decomposition of a task, different permissions can be authorized to multiple roles in it; (3) separation of more fine-grained duties than roles and tasks can be enforced. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Association-Based Active Access Control models with balanced scalability and flexibility", "paper_id": "WOS:000328182700009"}