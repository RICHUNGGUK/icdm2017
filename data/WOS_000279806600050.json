{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "star-contours_for_efficient_hierarchical_self-collision_detection"}, {"score": 0.004736045157669388, "phrase": "collision_detection"}, {"score": 0.004218602458288531, "phrase": "hierarchical_culling_data_structures"}, {"score": 0.004014452814186653, "phrase": "self-collision_detection"}, {"score": 0.003030247482854539, "phrase": "surface_patches"}, {"score": 0.0028360962841331634, "phrase": "contour_conditions"}, {"score": 0.0026543514413663893, "phrase": "culling_criterion"}, {"score": 0.0026107601878587816, "phrase": "hierarchical_self-collision_detection"}, {"score": 0.00240328454980006, "phrase": "shape_regularity"}, {"score": 0.002175913488493802, "phrase": "known_algorithm"}], "paper_keywords": [""], "paper_abstract": "Collision detection is a problem that has often been addressed efficiently with the use of hierarchical culling data structures. In the subproblem of self-collision detection for triangle meshes, however, such hierarchical data structures lose much of their power, because triangles adjacent to each other cannot be distinguished from actually colliding ones unless individually tested. Shape regularity of surface patches, described in terms of orientation and contour conditions, was proposed long ago as a culling criterion for hierarchical self-collision detection. However, to date, algorithms based on shape regularity had to trade conservativeness for efficiency, because there was no known algorithm for efficiently performing 2D contour self-intersection tests.", "paper_title": "Star-Contours for Efficient Hierarchical Self-Collision Detection", "paper_id": "WOS:000279806600050"}