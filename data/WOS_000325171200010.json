{"auto_keywords": [{"score": 0.04771060760127828, "phrase": "ftl"}, {"score": 0.03131924078979917, "phrase": "ftl_operations"}, {"score": 0.00481495049065317, "phrase": "petri_net-based"}, {"score": 0.0047906082951008665, "phrase": "ftl_architecture"}, {"score": 0.004742290714667451, "phrase": "parametric_wcet_estimation"}, {"score": 0.00469445816161498, "phrase": "ftl_operation_sequence_derivation"}, {"score": 0.004623608221548592, "phrase": "flash_translation_layer"}, {"score": 0.004507882471601552, "phrase": "file_systems"}, {"score": 0.00446240364863009, "phrase": "transparent_access"}, {"score": 0.00441738161338662, "phrase": "nand_flash_memory"}, {"score": 0.004241771072194993, "phrase": "real-time_guarantees"}, {"score": 0.00409382470158851, "phrase": "tight_worst_case_execution_time"}, {"score": 0.003971111060168551, "phrase": "conventional_static_wcet_analysis"}, {"score": 0.0038520615699124123, "phrase": "large_variance"}, {"score": 0.0038131738052230254, "phrase": "execution_time"}, {"score": 0.003717656912608012, "phrase": "parametric_wcet_analysis"}, {"score": 0.003642962673467835, "phrase": "effective_alternative"}, {"score": 0.0034803228231621687, "phrase": "parametric_wcet_function"}, {"score": 0.0034277338119963886, "phrase": "ftl_program"}, {"score": 0.003393115177189967, "phrase": "traditional_ftl_architecture"}, {"score": 0.003291336101694653, "phrase": "runtime_availability"}, {"score": 0.003258090521354736, "phrase": "flash_resources"}, {"score": 0.00309681702203087, "phrase": "petri_net-based_ftl_architecture"}, {"score": 0.00305003242178145, "phrase": "petri"}, {"score": 0.0029137604783116065, "phrase": "runtime_resource_availability"}, {"score": 0.0028263192354046245, "phrase": "ftl_operation_sequencer"}, {"score": 0.0026457367614424756, "phrase": "incoming_ftl_request"}, {"score": 0.0026057256900479026, "phrase": "current_resource_availability"}, {"score": 0.0025275084498379507, "phrase": "wcet"}, {"score": 0.002226017732566121, "phrase": "tight_wcet_estimation"}, {"score": 0.0021049977753042253, "phrase": "statically_analyzed_ones"}], "paper_keywords": ["Real-time and embedded systems", " software architectures", " performance modeling and prediction"], "paper_abstract": "A flash translation layer (FTL) provides file systems with transparent access to NAND flash memory. Although many applications running on it require real-time guarantees, it is difficult to provide tight worst case execution time (WCET) bounds with conventional static WCET analysis since an FTL exhibits a large variance in execution time depending on its runtime state. Parametric WCET analysis could be an effective alternative but it is also challenging to formulate a parametric WCET function for an FTL program because traditional FTL architecture does not properly model the runtime availability of flash resources in its code structure. To overcome such a limitation, we propose Petri net-based FTL architecture where a Petri net explicitly specifies dependencies between FTL operations and the runtime resource availability. It comes with an FTL operation sequencer that derives at runtime the shortest sequence of FTL operations for servicing an incoming FTL request under the current resource availability. The sequencer computes the WCET of the request by merely summing the WCETs of only those FTL operations in the sequence. Our experimental results show the effectiveness of our FTL architecture. It allowed for tight WCET estimation that yielded WCETs shorter by a factor of 54 than statically analyzed ones.", "paper_title": "Petri Net-Based FTL Architecture for Parametric WCET Estimation via FTL Operation Sequence Derivation", "paper_id": "WOS:000325171200010"}