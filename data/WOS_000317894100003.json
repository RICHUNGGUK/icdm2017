{"auto_keywords": [{"score": 0.04609968630540795, "phrase": "zeno"}, {"score": 0.00481495049065317, "phrase": "coarse_abstractions"}, {"score": 0.004777214679969785, "phrase": "make_zeno_behaviours"}, {"score": 0.004592905436175987, "phrase": "infinite_run"}, {"score": 0.004485735417293941, "phrase": "timed_automaton"}, {"score": 0.003378385493203297, "phrase": "important_improvements"}, {"score": 0.0032223742018434856, "phrase": "reachability_properties"}, {"score": 0.0031719830393831115, "phrase": "timed_automata"}, {"score": 0.0026045914281028473, "phrase": "behrmann_et_al"}, {"score": 0.0023507916951658455, "phrase": "general_conditions"}, {"score": 0.0023139986108451946, "phrase": "extrapolation_operators"}, {"score": 0.002207032039029656, "phrase": "zenoness"}, {"score": 0.0021049977753042253, "phrase": "slight_weakening"}], "paper_keywords": ["Timed automata", " Zeno runs", " Abstractions", " Verification"], "paper_abstract": "An infinite run of a timed automaton is Zeno if it spans only a finite amount of time. Such runs are considered unfeasible and hence it is important to detect them, or dually, find runs that are non-Zeno. Over the years important improvements have been obtained in checking reachability properties for timed automata. We show that some of these very efficient optimizations make testing for Zeno runs costly. In particular we show NP-completeness for the LU-extrapolation of Behrmann et al. We analyze the source of this complexity in detail and give general conditions on extrapolation operators that guarantee a (low) polynomial complexity of Zenoness checking. We propose a slight weakening of the LU-extrapolation that satisfies these conditions.", "paper_title": "COARSE ABSTRACTIONS MAKE ZENO BEHAVIOURS DIFFICULT TO DETECT", "paper_id": "WOS:000317894100003"}