{"auto_keywords": [{"score": 0.027680225659223377, "phrase": "existing_algorithms"}, {"score": 0.00481495049065317, "phrase": "parallel_hierarchical_clustering"}, {"score": 0.004653667500876187, "phrase": "hierarchical_agglomerative_clustering"}, {"score": 0.00457506350332475, "phrase": "hac"}, {"score": 0.004273601449537163, "phrase": "high_cpu_time"}, {"score": 0.0033660587983313536, "phrase": "hac_small_and_closely_placed_clusters"}, {"score": 0.0030908254851076005, "phrase": "larger_and_distant_clusters"}, {"score": 0.0028623555849897632, "phrase": "parallel_version"}, {"score": 0.002814017729043213, "phrase": "pop"}, {"score": 0.0027662954811372175, "phrase": "ppop._theoretical_analysis"}, {"score": 0.0025183881730011597, "phrase": "cpu_time_speed-up"}, {"score": 0.002475755804232436, "phrase": "memory_scale-down"}, {"score": 0.0021049977753042253, "phrase": "shared_memory_implementation"}], "paper_keywords": ["hierarchical agglomerative clustering", " partitioning", " parallel algorithm", " shared memory multiprocessor architecture"], "paper_abstract": "Hierarchical agglomerative clustering (HAC) is very useful but due to high CPU time and memory complexity its practical use is limited. Earlier, we proposed an efficient partitioning - partially overlapping partitioning (POP) - based on the fact that in HAC small and closely placed clusters are agglomerated initially, and only towards the end larger and distant clusters are agglomerated. Here, we present the parallel version of POP, pPOP. Theoretical analysis shows that, compared to the existing algorithms, pPOP achieves CPU time speed-up and memory scale-down of O(c) without compromising accuracy where c is the number of cells in the partition. A shared memory implementation shows that pPOP outperforms existing algorithms significantly. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "pPOP: Fast yet accurate parallel hierarchical clustering using partitioning", "paper_id": "WOS:000246382800012"}