{"auto_keywords": [{"score": 0.049720747269749885, "phrase": "multiagent_systems"}, {"score": 0.005029203800304908, "phrase": "multiagent_system"}, {"score": 0.0049728759169487425, "phrase": "first-class_abstraction"}, {"score": 0.00481495049065317, "phrase": "first_class_abstraction"}, {"score": 0.004725385523804256, "phrase": "current_practice"}, {"score": 0.00443308765153716, "phrase": "advanced_uses"}, {"score": 0.004318027255281003, "phrase": "indirect_coordination"}, {"score": 0.004253618550301311, "phrase": "digital_pheromones"}, {"score": 0.004174451361776433, "phrase": "governed_interaction"}, {"score": 0.004143196873246147, "phrase": "electronic_institutions"}, {"score": 0.003729335910488339, "phrase": "ad_hoc_manner"}, {"score": 0.0036461569988218267, "phrase": "poor_engineering_practice"}, {"score": 0.0035248419365839856, "phrase": "full_potential"}, {"score": 0.0032941471167321408, "phrase": "explicit_part"}, {"score": 0.002953711377604328, "phrase": "surrounding_conditions"}, {"score": 0.0028127163745564777, "phrase": "essential_part"}, {"score": 0.002678433668156678, "phrase": "exploitable_design_abstraction"}, {"score": 0.0026483647033436674, "phrase": "multiagent_system_applications"}, {"score": 0.0025124343366192954, "phrase": "reference_model"}, {"score": 0.0024105326885334962, "phrase": "environment_engineering"}, {"score": 0.0023127544795063263, "phrase": "design_abstraction"}, {"score": 0.0022105951175680856, "phrase": "real_world_application"}, {"score": 0.0021049977753042253, "phrase": "new_horizons"}], "paper_keywords": ["environment in multiagent systems", " definition, responsibilities, reference model of the environment"], "paper_abstract": "The current practice in multiagent systems typically associates the environment with resources that are external to agents and their communication infrastructure. Advanced uses of the environment include infrastructures for indirect coordination, such as digital pheromones, or support for governed interaction in electronic institutions. Yet, in general, the notion of environment is not well defined. Functionalities of the environment are often dealt with implicitly or in an ad hoc manner. This is not only poor engineering practice, it also hinders engineers to exploit the full potential of the environment in multiagent systems. In this paper, we put forward the environment as an explicit part of multiagent systems. We give a definition stating that the environment in a multiagent system is a first-class abstraction with dual roles: (1) the environment provides the surrounding conditions for agents to exist, which implies that the environment is an essential part of every multiagent system, and (2) the environment provides an exploitable design abstraction for building multiagent system applications. We discuss the responsibilities of such an environment in multiagent systems and we present a reference model for the environment that can serve as a basis for environment engineering. To illustrate the power of the environment as a design abstraction, we show how the environment is successfully exploited in a real world application. Considering the environment as a first-class abstraction in multiagent systems opens up new horizons for research and development in multiagent systems.", "paper_title": "Environment as a first class abstraction in multiagent systems", "paper_id": "WOS:000242155200002"}