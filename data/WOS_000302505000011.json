{"auto_keywords": [{"score": 0.04904947763914552, "phrase": "linear-algebraic_lambda-calculus"}, {"score": 0.00481495049065317, "phrase": "algebraic_lambda-calculus"}, {"score": 0.004350308086118336, "phrase": "arbitrary_linear_combinations"}, {"score": 0.0037903327482565097, "phrase": "\"scalar\"_type_system"}, {"score": 0.0036553070575015344, "phrase": "strong-normalisation_property"}, {"score": 0.0034491650585057754, "phrase": "significant_simplification"}, {"score": 0.002961519813246521, "phrase": "scalar_type_system"}, {"score": 0.0022472527731744974, "phrase": "normal_form"}], "paper_keywords": ["linear-algebraic lambda-calculus", " type theory", " barycentric calculus"], "paper_abstract": "The algebraic lambda-calculus and the linear-algebraic lambda-calculus extend the lambda-calculus with the possibility of making arbitrary linear combinations of terms. In this paper we provide a fine-grained, System F-like type system for the linear-algebraic lambda-calculus. We show that this \"Scalar\" type system enjoys both the subject-reduction property and the strong-normalisation property, our main technical results. The latter yields a significant simplification of the linear-algebraic lambda-calculus itself, by removing the need for some restrictions in its reduction rules. But the more important, original feature of the Scalar type system is that it keeps track of 'the amount of a type' that is present in each term. As an example of its use, we show that it can serve as a guarantee that the normal form of a term is barycentric, i.e that its scalars are summing to one.", "paper_title": "A SYSTEM F ACCOUNTING FOR SCALARS", "paper_id": "WOS:000302505000011"}