{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "threshold_testing"}, {"score": 0.020637590615022204, "phrase": "error_tolerance"}, {"score": 0.006824795431157059, "phrase": "atpg"}, {"score": 0.006467899710374064, "phrase": "new_approaches"}, {"score": 0.006286527023820958, "phrase": "new_types"}, {"score": 0.004739344544832536, "phrase": "nanoscale_vlsi."}, {"score": 0.004694549334241098, "phrase": "digital_very-large-scale-integration_chips"}, {"score": 0.004188779311510202, "phrase": "wide_range"}, {"score": 0.004162328961227939, "phrase": "high-performance_digital_applications"}, {"score": 0.003956627672153024, "phrase": "wireless_communication"}, {"score": 0.0037136840686010303, "phrase": "erroneous_outputs"}, {"score": 0.0033875770020590796, "phrase": "new_testing_approach"}, {"score": 0.00322003996276874, "phrase": "absolute_numerical_magnitudes"}, {"score": 0.0031794625343029457, "phrase": "application-specified_threshold"}, {"score": 0.0031096747349602344, "phrase": "new_automatic_test_pattern_generator"}, {"score": 0.0029746473344900784, "phrase": "test_generator"}, {"score": 0.002863572466594507, "phrase": "test_vector"}, {"score": 0.002791829974944666, "phrase": "necessary_conditions"}, {"score": 0.002570817338292482, "phrase": "test_generation_effort"}, {"score": 0.0024984517279573906, "phrase": "threshold_fault_simulators"}, {"score": 0.0024513404432665153, "phrase": "transition_delay_faults"}, {"score": 0.0023448318062933527, "phrase": "fault_model"}, {"score": 0.0023152577218214804, "phrase": "suitable_model"}, {"score": 0.002242940472941759, "phrase": "low-cost_tools"}, {"score": 0.0021936636821827935, "phrase": "high_threshold_coverage"}, {"score": 0.0021797840569206697, "phrase": "realistic_faults"}, {"score": 0.0021318918306931474, "phrase": "higher_yields"}, {"score": 0.00211840221503438, "phrase": "future_nanoscale_processes"}, {"score": 0.0021049977753042253, "phrase": "low_costs"}], "paper_keywords": ["Automatic test pattern generation (ATPG)", " design for testability", " error tolerance", " very large scale integration (VLSI) testing"], "paper_abstract": "Yields for digital very-large-scale-integration chips have been declining in the recent years, and the decline is accelerating as the technology moves deep into nanoscale. Recently, we have proposed the notion of error tolerance to improve yields for a wide range of high-performance digital applications, including audio, speech, video, graphics, visualization, games, and wireless communication. Error tolerance systematically codifies the fact that chips used in such applications can be acceptable despite having defects that produce erroneous outputs, provided that the errors are guaranteed to be of certain types and have severities within thresholds specified by the application. In this paper, we propose a new testing approach called threshold testing to practically exploit the notion of error tolerance for applications where errors with absolute numerical magnitudes lower than an application-specified threshold are acceptable. We propose a new automatic test pattern generator (ATPG) for threshold testing for single stuck-at faults. This test generator embodies several completely new techniques, including new approaches for directing the search for a test vector, new types of objectives, new types of necessary conditions, and new approaches to identify and exploit these conditions. We demonstrate that threshold testing can enhance yield and that it is practical in terms of test generation effort and test application costs. We also propose threshold fault simulators and ATPG for bridging and transition delay faults. We use these tools to show that the stuck-at-fault model is indeed a suitable model for threshold testing. This opens the way for developing low-cost tools for threshold testing that will provide high threshold coverage for realistic faults and defects and hence help provide higher yields in future nanoscale processes at low costs.", "paper_title": "Threshold Testing: Improving Yield for Nanoscale VLSI", "paper_id": "WOS:000271952300009"}