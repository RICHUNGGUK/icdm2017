{"auto_keywords": [{"score": 0.02901368531602902, "phrase": "quasi-block_simulation"}, {"score": 0.011680576392523139, "phrase": "parameterized_system"}, {"score": 0.010368994511891941, "phrase": "preorder_relation"}, {"score": 0.00481495049065317, "phrase": "asynchronous_parameterized_networks"}, {"score": 0.004753512932910936, "phrase": "uniform_verification_problem"}, {"score": 0.004712988631183401, "phrase": "parameterized_systems"}, {"score": 0.004593467306126913, "phrase": "temporal_property"}, {"score": 0.004326188427877999, "phrase": "arbitrary_number"}, {"score": 0.004289291421348352, "phrase": "homogeneous_processes"}, {"score": 0.004109454074072009, "phrase": "induction-based_technique"}, {"score": 0.0040223714916651845, "phrase": "conventional_model_checking"}, {"score": 0.003988055287053139, "phrase": "finite_state_systems"}, {"score": 0.003920295222165263, "phrase": "first_stage"}, {"score": 0.0037719988989298983, "phrase": "appropriate_invariant_system"}, {"score": 0.0037078961288626185, "phrase": "second_stage"}, {"score": 0.0034033029171804106, "phrase": "conventional_model_checking_tool"}, {"score": 0.003316884515934182, "phrase": "invariant_system"}, {"score": 0.002954287204671029, "phrase": "invariant_rule"}, {"score": 0.002916521664779295, "phrase": "considerable_importance"}, {"score": 0.0028181504086563967, "phrase": "new_type"}, {"score": 0.0027940789980683, "phrase": "simulation_preorder_-_quasi-block_simulation"}, {"score": 0.0026199603775129516, "phrase": "asynchronous_composition"}, {"score": 0.002404522326122611, "phrase": "induction-based_verification_techniques"}, {"score": 0.002169201297543198, "phrase": "rsvp"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Program verification", " Asynchronous networks", " Invariant generation", " Induction", " Simulation", " Model checking"], "paper_abstract": "A uniform verification problem for parameterized systems is to determine whether a temporal property is satisfied for every instance of the system which is composed of an arbitrary number of homogeneous processes. To cope with this problem we combine an induction-based technique for invariant generation and conventional model checking of finite state systems. At the first stage of verification we try to select automatically an appropriate invariant system. At the second stage, as soon as an invariant of the parameterized system is obtained, we verify it by means of a conventional model checking tool for temporal logics. An invariant system is one that is greater (with respect to some preorder relation) than any instance of the parameterized system. Therefore, the preorder relation involved in the invariant rule is of considerable importance. For this purpose we introduce a new type of simulation preorder - quasi-block simulation. We show that quasi-block simulation preserves the satisfiability of formulae from ACTL*-X and that asynchronous composition of processes is monotonic w.r.t. quasi-block simulation. This suggests the use of quasi-block simulation in the induction-based verification techniques for asynchronous networks. To demonstrate the feasibility of quasi-block simulation we implemented this technique and applied it to the verification of the Resource ReSerVation Protocol (RSVP). (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "An invariant-based approach to the verification of asynchronous parameterized networks", "paper_id": "WOS:000282627600004"}