{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "list_algorithms"}, {"score": 0.04856216099390579, "phrase": "algorithm_synthesis"}, {"score": 0.04404291878285864, "phrase": "synthesis_statement"}, {"score": 0.03381464011789937, "phrase": "auxiliary_functions"}, {"score": 0.004789189493119298, "phrase": "mechanical_proving"}, {"score": 0.004637478829869904, "phrase": "systematic_exploration"}, {"score": 0.004466519142879166, "phrase": "inference_rules"}, {"score": 0.00441883624011048, "phrase": "computer_based_synthesis"}, {"score": 0.00409895142748329, "phrase": "input_condition"}, {"score": 0.004011867299107537, "phrase": "output_condition"}, {"score": 0.003969018740062018, "phrase": "main_difficulty"}, {"score": 0.003916098498242888, "phrase": "constructive_proof"}, {"score": 0.003832884214087895, "phrase": "corresponding_algorithm"}, {"score": 0.003751431514258335, "phrase": "conditional_equalities"}, {"score": 0.0036717033873979125, "phrase": "computer_automation"}, {"score": 0.003584025547693836, "phrase": "sorted_version"}, {"score": 0.0035552656899783793, "phrase": "input_list"}, {"score": 0.003517276620998936, "phrase": "different_proof_methods"}, {"score": 0.003479692058963528, "phrase": "five_sorting_algorithms"}, {"score": 0.0033512702352060356, "phrase": "merge_sort"}, {"score": 0.003315453665547982, "phrase": "novel_algorithm"}, {"score": 0.0032712190037495975, "phrase": "unbalanced_merge"}, {"score": 0.003167441161387607, "phrase": "sorting_algorithms"}, {"score": 0.0031084265029747067, "phrase": "first_order"}, {"score": 0.003026016349291665, "phrase": "horn_clauses"}, {"score": 0.0029616594364766297, "phrase": "sld_resolution_style_inferences"}, {"score": 0.0025962029048520324, "phrase": "case_study"}, {"score": 0.002407941567598653, "phrase": "necessary_properties"}, {"score": 0.002382182688788248, "phrase": "knowledge_base"}, {"score": 0.002325225883106, "phrase": "respective_version"}, {"score": 0.0022393151471501137, "phrase": "new_proof_goal"}, {"score": 0.0021798963627236915, "phrase": "missing_auxiliary_functions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["List", " Algorithm synthesis", " Theorema"], "paper_abstract": "We address the automation of the processes of algorithm synthesis and systematic exploration of the theory of lists. Our focus is on methods, techniques, inference rules and strategies for computer based synthesis of list algorithms based on proving. Starting from the specification of the problem (input and output conditions), a synthesis statement is built: \"for any list satisfying the input condition, there exists a list satisfying the output condition\". The main difficulty is to find a constructive proof of this statement, from which the corresponding algorithm is easily extracted as a set of conditional equalities. In more detail, we aim at computer automation of the proof of the existence of the sorted version of the input list. By using different proof methods we automatically synthesize five sorting algorithms: Selection-Sort, Insertion-Sort, Quick-Sort, Merge Sort, and a novel algorithm, which we call Unbalanced Merge-Sort, as well as the auxiliary functions used in the sorting algorithms. The theory we use is first order, and mostly contains formulae which are equivalent to Horn clauses. Therefore, except for induction, SLD resolution style inferences are in principle sufficient for performing the proofs. However, for most of the proofs this leads to a very large search space. Therefore we introduce several novel inference rules and specific strategies, which are based on the properties of lists, and which we developed in the course of this case study on sorting. Moreover, during the process of algorithm synthesis we explore the theory of lists by introducing (automatically prove, and then use) the necessary properties. When the knowledge base does not contain the auxiliary functions needed for the respective version of the algorithm, then the proof fails and from this failure a new proof goal is created, which is the synthesis statement for the missing auxiliary functions (\"cascading\"). (C) 2014 Published by Elsevier Ltd.", "paper_title": "Synthesis of list algorithms by mechanical proving", "paper_id": "WOS:000348882800004"}