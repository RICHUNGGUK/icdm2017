{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hebrew"}, {"score": 0.04705118771765909, "phrase": "classifier_combination"}, {"score": 0.004413846562278824, "phrase": "morphological_analysis"}, {"score": 0.004225950334493496, "phrase": "crucial_stages"}, {"score": 0.004002242925856335, "phrase": "natural_language_processing_applications"}, {"score": 0.0037493114715625784, "phrase": "complex_morphology"}, {"score": 0.003219368413618912, "phrase": "morphological_analyzer"}, {"score": 0.0022718774783143203, "phrase": "back-off_mechanism"}, {"score": 0.002151388538895855, "phrase": "large_unannotated_corpus"}], "paper_keywords": [""], "paper_abstract": "Morphological analysis and disambiguation are crucial stages in a variety of natural language processing applications, especially when languages with complex morphology are concerned. We present a system which disambiguates the output of a morphological analyzer for Hebrew. It consists of several simple classifiers and a module that combines them under the constraints imposed by the analyzer. We explore several approaches to classifier combination, as well as a back-off mechanism that relies on a large unannotated corpus. Our best result, around 83 percent accuracy, compares favorably with the state of the art on this task.", "paper_title": "Morphological disambiguation of Hebrew: a case study in classifier combination", "paper_id": "WOS:000332383400003"}