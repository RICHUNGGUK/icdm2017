{"auto_keywords": [{"score": 0.05007578954347616, "phrase": "fortrilinos"}, {"score": 0.04418803868976237, "phrase": "fortran"}, {"score": 0.04243684509799684, "phrase": "pliris"}, {"score": 0.0041273948552665645, "phrase": "epetra"}, {"score": 0.003994624397219346, "phrase": "trilinos_library"}, {"score": 0.003570889780957037, "phrase": "distributed_matrix"}, {"score": 0.0035376693476114733, "phrase": "vector_storage"}, {"score": 0.003504756881063581, "phrase": "basic_linear_algebra_calculations"}, {"score": 0.0034398445347109396, "phrase": "direct_solvers"}, {"score": 0.003407839062159497, "phrase": "dense_linear_systems"}, {"score": 0.0033761303704612734, "phrase": "aztecoo"}, {"score": 0.0033447157263095223, "phrase": "iterative_sparse_linear_solvers"}, {"score": 0.0032219438233946312, "phrase": "parallel_application"}, {"score": 0.002989714021608139, "phrase": "direct_calls"}, {"score": 0.00296198650603147, "phrase": "mpi"}, {"score": 0.002853124436286832, "phrase": "presented_example"}, {"score": 0.002684819249720834, "phrase": "finite-difference_solution"}, {"score": 0.0026474076254702525, "phrase": "cartesian_grid"}, {"score": 0.0025741370320813968, "phrase": "abstract_data_type"}, {"score": 0.002550168818667057, "phrase": "adt"}, {"score": 0.0025028892126605124, "phrase": "sci._program"}, {"score": 0.002311525062244175, "phrase": "serial_code"}, {"score": 0.002289993730291136, "phrase": "lower-level_abstractions"}, {"score": 0.0022161977759646693, "phrase": "adt_calculus"}, {"score": 0.0021347607855562102, "phrase": "mathematical_formulation"}, {"score": 0.0021049977753042253, "phrase": "partial_differential_equation"}], "paper_keywords": ["ForTrilinos", " Trilinos", " Fortran 2003/2008", " object oriented programming"], "paper_abstract": "We present the first three-dimensional, partial differential equation solver to be built atop the recently released, open-source ForTrilinos package (http://trilinos.sandia.gov/packages/fortrilinos). ForTrilinos currently provides portable, object-oriented Fortran 2003 interfaces to the C++ packages Epetra, AztecOO and Pliris in the Trilinos library and framework [ACM Trans. Math. Softw. 31(3) (2005), 397-423]. Epetra provides distributed matrix and vector storage and basic linear algebra calculations. Pliris provides direct solvers for dense linear systems. AztecOO provides iterative sparse linear solvers. We demonstrate how to build a parallel application that encapsulates the Message Passing Interface (MPI) without requiring the user to make direct calls to MPI except for startup and shutdown. The presented example demonstrates the level of effort required to set up a high-order, finite-difference solution on a Cartesian grid. The example employs an abstract data type (ADT) calculus [Sci. Program. 16(4) (2008), 329-339] that empowers programmers to write serial code that lower-level abstractions resolve into distributed-memory, parallel implementations. The ADT calculus uses compilable Fortran constructs that resemble the mathematical formulation of the partial differential equation of interest.", "paper_title": "Exploring capabilities within ForTrilinos by solving the 3D Burgers equation", "paper_id": "WOS:000309216600005"}