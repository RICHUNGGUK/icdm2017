{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_tree-depth"}, {"score": 0.004317109072311102, "phrase": "connected_graph"}, {"score": 0.0034162643819889054, "phrase": "rooted_tree"}, {"score": 0.0022760856906838814, "phrase": "combinatorial_results"}, {"score": 0.0021049977753042253, "phrase": "minimal_rooted_trees"}], "paper_keywords": ["Exact algorithms", " Tree-depth", " 2(n) Barrier"], "paper_abstract": "A connected graph has tree-depth at most if it is a subgraph of the closure of a rooted tree whose height is at most . We give an algorithm which for a given -vertex graph , in time computes the tree-depth of . Our algorithm is based on combinatorial results revealing the structure of minimal rooted trees whose closures contain .", "paper_title": "Computing Tree-Depth Faster Than 2(n)", "paper_id": "WOS:000357113900009"}