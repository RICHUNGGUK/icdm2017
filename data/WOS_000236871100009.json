{"auto_keywords": [{"score": 0.04095921860961233, "phrase": "leakage_power"}, {"score": 0.007335910869993821, "phrase": "power_gating"}, {"score": 0.00481495049065317, "phrase": "leakage_power_reduction"}, {"score": 0.004776297980616768, "phrase": "power_leakage"}, {"score": 0.004718897469501381, "phrase": "increasing_fraction"}, {"score": 0.0046621835537196754, "phrase": "total_power_consumption"}, {"score": 0.004624751696958501, "phrase": "modern_semiconductor_technologies"}, {"score": 0.0045876189888390895, "phrase": "recent_research_efforts"}, {"score": 0.004283739213556286, "phrase": "switching_power"}, {"score": 0.00419823857480455, "phrase": "dynamic_power"}, {"score": 0.0038263136898042285, "phrase": "static_power"}, {"score": 0.003660226272906374, "phrase": "compiler-analysis_techniques"}, {"score": 0.0035296940954990964, "phrase": "architecture_model"}, {"score": 0.003282383509542342, "phrase": "component_level"}, {"score": 0.003216804708106142, "phrase": "analysis_framework"}, {"score": 0.0030278017562213265, "phrase": "data_flow"}, {"score": 0.0029792984108210525, "phrase": "component_activities"}, {"score": 0.0029553380263320195, "phrase": "fixed_points"}, {"score": 0.002896274285996145, "phrase": "pipeline_architectures"}, {"score": 0.0027041233221381756, "phrase": "power-gating_instructions"}, {"score": 0.002639385610609024, "phrase": "total_energy_requirements"}, {"score": 0.0024345529783611703, "phrase": "program_branches"}, {"score": 0.002218526133566788, "phrase": "suif_compiler_tools"}, {"score": 0.002174155795026218, "phrase": "energy_consumptions"}, {"score": 0.0021566565951738658, "phrase": "wattch_toolkits"}, {"score": 0.0021306709646058295, "phrase": "experimental_results"}], "paper_keywords": ["algorithms", " experimentation", " languages", " compilers for low power", " leakage-power reduction", " power gating mechanisms"], "paper_abstract": "Power leakage constitutes an increasing fraction of the total power consumption in modern semiconductor technologies. Recent research efforts indicate that architectures, compilers, and software can be optimized so as to reduce the switching power (also known as dynamic power) in microprocessors. This has lead to interest in using architecture and compiler optimization to reduce leakage power (also known as static power) in microprocessors. In this article, we investigate compiler-analysis techniques that are related to reducing leakage power. The architecture model in our design is a system with an instruction set to support the control of power gating at the component level. Our compiler provides an analysis framework for utilizing instructions to reduce the leakage power. We present a framework for analyzing data flow for estimating the component activities at fixed points of programs whilst considering pipeline architectures. We also provide equations that can be used by the compiler to determine whether employing power-gating instructions in given program blocks will reduce the total energy requirements. As the duration of power gating on components when executing given program routines is related to the number and complexity of program branches, we propose a set of scheduling policies and evaluate their effectiveness. We performed experiments by incorporating our compiler analysis and scheduling policies into SUIF compiler tools and by simulating the energy consumptions on Wattch toolkits. The experimental results demonstrate that our mechanisms are effective in reducing leakage power in microprocessors.", "paper_title": "Compilers for leakage power reduction", "paper_id": "WOS:000236871100009"}