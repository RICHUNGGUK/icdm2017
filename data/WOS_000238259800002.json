{"auto_keywords": [{"score": 0.0488492843865137, "phrase": "cca"}, {"score": 0.00481495049065317, "phrase": "high-performance_scientific_computing"}, {"score": 0.004511663118269957, "phrase": "software_developers"}, {"score": 0.004338898899247236, "phrase": "large-scale_scientific_simulations"}, {"score": 0.004172722575842674, "phrase": "plug-and-play_environment"}, {"score": 0.003935267970727093, "phrase": "scientific_computing_context"}, {"score": 0.0038843558517333327, "phrase": "component_models"}, {"score": 0.0037599278182081056, "phrase": "independently_developed_software"}, {"score": 0.003663250792230243, "phrase": "particular_individuals"}, {"score": 0.003454687811707182, "phrase": "greatest_interest"}, {"score": 0.0031535341431377837, "phrase": "local_high-performance_connections"}, {"score": 0.0030524448705134283, "phrase": "language-independent_manner"}, {"score": 0.0029545864975783023, "phrase": "minimal_requirements"}, {"score": 0.0027862576750944277, "phrase": "existing_code"}, {"score": 0.0027323009127771525, "phrase": "cca_environment"}, {"score": 0.002679386232765167, "phrase": "cca_model"}, {"score": 0.002644678812707061, "phrase": "minimal_overhead"}, {"score": 0.002543224008253855, "phrase": "application_performance"}, {"score": 0.0024616504443079512, "phrase": "high_performance"}, {"score": 0.0022468671200629024, "phrase": "increasing_range"}, {"score": 0.0021747784376752776, "phrase": "combustion_research"}, {"score": 0.00214659338413584, "phrase": "global_climate_simulation"}, {"score": 0.0021049977753042253, "phrase": "computational_chemistry"}], "paper_keywords": ["component architecture", " combustion modeling", " climate modeling", " quantum chemistry", " parallel computing"], "paper_abstract": "The Common Component Architecture (CCA) provides a means for software developers to manage the complexity of large-scale scientific simulations and to move toward a plug-and-play environment for high-performance computing. In the scientific computing context, component models also promote collaboration using independently developed software, thereby allowing particular individuals or groups to focus on the aspects of greatest interest to them. The CCA supports parallel and distributed computing as well as local high-performance connections between components in a language-independent manner. The design places minimal requirements on components and thus facilitates the integration of existing code into the CCA environment. The CCA model imposes minimal overhead to minimize the impact on application performance. The focus on high performance distinguishes the CCA from most other component models. The CCA is being applied within an increasing range of disciplines, including combustion research, global climate simulation, and computational chemistry.", "paper_title": "A component architecture for high-performance scientific computing", "paper_id": "WOS:000238259800002"}