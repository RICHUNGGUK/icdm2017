{"auto_keywords": [{"score": 0.0447839370319534, "phrase": "incremental_checkpointing"}, {"score": 0.00481495049065317, "phrase": "point_decision_mechanism"}, {"score": 0.004441059405327222, "phrase": "cost_analysis"}, {"score": 0.0043619799095455415, "phrase": "process_execution_time"}, {"score": 0.0031845067058084613, "phrase": "modified_pages"}, {"score": 0.003071965703296204, "phrase": "efficient_intervals"}, {"score": 0.0025660347613972573, "phrase": "efficient_and_adaptive_page-level_incremental_checkpointing_facility"}, {"score": 0.0024311346712789553, "phrase": "taking_point_decision_mechanism"}, {"score": 0.0023451553255837317, "phrase": "total_execution_time"}, {"score": 0.0022218413146898887, "phrase": "expected_execution_time"}, {"score": 0.0021049977753042253, "phrase": "existing_periodic_page-level_incremental_checkpointing"}], "paper_keywords": ["checkpoint and recovery", " page-level incremental checkpointing", " fault tolerance", " Linux kernel", " operating system reliability"], "paper_abstract": "Incremental checkpointing, which is intended to minimize checkpointing overhead, saves only the modified pages of a process. This means that in incremental checkpointing, the time consumed for checkpointing varies according to the amount of modified pages. Thus, efficient intervals of checkpointing have to be determined on run-time of a process. In this paper, we present an efficient and adaptive page-level incremental checkpointing facility that is based on the taking point decision mechanism for minimizing the total execution time. Our simulation results show that the expected execution time was significantly reduced compared with existing periodic page-level incremental checkpointing.", "paper_title": "Taking point decision mechanism for page-level incremental checkpointing based on cost analysis of process execution time", "paper_id": "WOS:000249934900002"}