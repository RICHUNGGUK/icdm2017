{"auto_keywords": [{"score": 0.03742160548515537, "phrase": "inverse_problems"}, {"score": 0.00481495049065317, "phrase": "np_problems"}, {"score": 0.004729856080441582, "phrase": "inverse_problem"}, {"score": 0.004618720776729413, "phrase": "verifier_v"}, {"score": 0.004430452655732319, "phrase": "np_language"}, {"score": 0.0041995784967999985, "phrase": "set_h"}, {"score": 0.003957078581524691, "phrase": "string_x"}, {"score": 0.003450966222451681, "phrase": "new_notion"}, {"score": 0.002938560664857691, "phrase": "\"natural\"_verifiers"}, {"score": 0.0027852126030055305, "phrase": "inverse_complexity"}, {"score": 0.0026874405408023956, "phrase": "language_l"}, {"score": 0.002142970278347126, "phrase": "new_and_natural_example"}], "paper_keywords": ["NP verifiers", " reductions"], "paper_abstract": "The inverse problem relative to a verifier V of proofs of membership for a NP language is the problem of deciding, given a set H of proofs, whether or not there exists a string x having exactly 11 as its set of proofs. In this paper, we study the complexity of inverse problems. We develop a new notion of reduction which allows one to compare the complexity of inverse problems. Using this notion, we classify as coNP-complete the inverse problems for the \"natural\" verifiers of many NP-complete problems. We also show that the inverse complexity of a verifier for a language L cannot be predicted solely from the complexity of L, but rather, is highly dependent upon the choice of verifier used to accept L. In this context, a verifier with a Sigma(p)(2) complete inverse problem is exhibited, giving a new and natural example of a Sigma(p)(2)-complete problem.", "paper_title": "Inverse NP problems", "paper_id": "WOS:000255413800005"}