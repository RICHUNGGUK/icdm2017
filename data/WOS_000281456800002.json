{"auto_keywords": [{"score": 0.0045143706249204905, "phrase": "major_problem"}, {"score": 0.004461761855323898, "phrase": "computer_science"}, {"score": 0.004257360656055417, "phrase": "computational_biology"}, {"score": 0.004134372859330047, "phrase": "information_retrieval"}, {"score": 0.00408617426304956, "phrase": "image_processing"}, {"score": 0.0039218440805789965, "phrase": "possible_corruptions"}, {"score": 0.0037862398004482253, "phrase": "genome_rearrangements"}, {"score": 0.003487721546598799, "phrase": "merely_complete_resemblance"}, {"score": 0.0031565959573536194, "phrase": "natural_mistakes"}, {"score": 0.00304737045343781, "phrase": "meagre_number"}, {"score": 0.002994178996584381, "phrase": "edit_distance_problem"}, {"score": 0.002693919110230191, "phrase": "string_matching"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Pattern matching", " Swap"], "paper_abstract": "Finding the similarity between two sequences is a major problem in computer science. It is motivated by many issues from computational biology as well as from information retrieval and image processing. These fields take into account possible corruptions of the data caused by genome rearrangements, typing mistakes, and more. Therefore, many applications do not require merely complete resemblance of the sequences, but rather an approximate matching. We consider mismatches and swaps as natural mistakes which are allowed in a meagre number. The edit distance problem with swap and mismatch operations was solved in O(n root m log m) time. Yet, the problem of string matching with at most k swaps and mismatches errors was open. In this paper, we present an algorithm that finds all locations where the pattern has at most k mismatch and swap errors in time O(n root k log m). (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "String matching with up to k swaps and mismatches", "paper_id": "WOS:000281456800002"}