{"auto_keywords": [{"score": 0.04117972994186605, "phrase": "model_management"}, {"score": 0.007706973484887397, "phrase": "concrete_meta-models"}, {"score": 0.00481495049065317, "phrase": "model_management_operations"}, {"score": 0.0046937237797352515, "phrase": "core_assets"}, {"score": 0.004646088032529303, "phrase": "model-driven_engineering"}, {"score": 0.004007083686875716, "phrase": "model-related_activities"}, {"score": 0.003334309053314909, "phrase": "low_level"}, {"score": 0.003025915966640355, "phrase": "generic_programming"}, {"score": 0.002831462722290752, "phrase": "model_manipulations"}, {"score": 0.0027041907335656782, "phrase": "generic_meta-model_concepts"}, {"score": 0.0023197517832705297, "phrase": "concept_requirements"}, {"score": 0.0021049977753042253, "phrase": "epsilon_family"}], "paper_keywords": ["Model management", " Genericity", " Reusability", " Epsilon", " Eclipse Modelling Framework"], "paper_abstract": "Models are the core assets in model-driven engineering, and are therefore subject to all kind of manipulations, such as refactorings, animations, transformations into other languages, comparisons and merging. This set of model-related activities is known as model management. Even though many languages and approaches have been proposed for model management, most of them are type-centric, specific to concrete meta-models, and hence leading to specifications with a low level of abstraction and difficult to be reused in practice. In this paper, we introduce ideas from generic programming into model management to raise the level of abstraction of the specifications of model manipulations and facilitate their reuse. In particular we adopt generic meta-model concepts as an intermediate, abstract meta-model over which model management specifications are defined. Such meta-model concepts are mapped to concrete meta-models, so that specifications can be applied to families of meta-models satisfying the concept requirements. As a proof of concept, we show the implementation of these ideas using the Eclipse Modeling Framework and the Epsilon family of languages for model management.", "paper_title": "Genericity for model management operations", "paper_id": "WOS:000314978800013"}