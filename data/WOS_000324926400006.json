{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "delimited_continuations"}, {"score": 0.004660453113061494, "phrase": "famous_control"}, {"score": 0.004366106816225457, "phrase": "functional_programming_world"}, {"score": 0.0038737214010638745, "phrase": "remaining_part"}, {"score": 0.0033262524445013303, "phrase": "new_prolog-compatible_face"}, {"score": 0.0026176209601530996, "phrase": "prolog"}, {"score": 0.0025059724686541263, "phrase": "high-level_language_features"}, {"score": 0.0021049982455464515, "phrase": "wam."}], "paper_keywords": ["delimited continuations", " Prolog"], "paper_abstract": "Delimited continuations are a famous control primitive that originates in the functional programming world. It allows the programmer to suspend and capture the remaining part of a computation in order to resume it later. We put a new Prolog-compatible face on this primitive and specify its semantics by means of a meta-interpreter. Moreover, we establish the power of delimited continuations in Prolog with several example definitions of high-level language features. Finally, we show how to easily and effectively add delimited continuations support to the WAM.", "paper_title": "Delimited continuations for prolog", "paper_id": "WOS:000324926400006"}