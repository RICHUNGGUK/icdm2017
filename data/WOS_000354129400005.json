{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multiobjective_optimization_problem"}, {"score": 0.028003253442046332, "phrase": "modep"}, {"score": 0.004577440795549049, "phrase": "defect-prediction_problem"}, {"score": 0.004230956171850591, "phrase": "multiobjective_defect_predictor"}, {"score": 0.004067635935640407, "phrase": "multiobjective_forms"}, {"score": 0.00397714507836836, "phrase": "techniqueslogistic_regression"}, {"score": 0.003932654396285872, "phrase": "decision_trees"}, {"score": 0.003845154818609644, "phrase": "genetic_algorithm"}, {"score": 0.00378080526397273, "phrase": "multiobjective_approach"}, {"score": 0.003738502710504415, "phrase": "software_engineers"}, {"score": 0.0036144035798673967, "phrase": "specific_compromise"}, {"score": 0.0035141291835319682, "phrase": "likely_defect-prone_classes"}, {"score": 0.0028857130140890787, "phrase": "code_inspection"}, {"score": 0.0027898428590137515, "phrase": "empirical_evaluation"}, {"score": 0.0027123819773059127, "phrase": "promise_repository"}, {"score": 0.00266693888510356, "phrase": "quantitative_superiority"}, {"score": 0.00257831812581194, "phrase": "single-objective_predictors"}, {"score": 0.0024926348205500715, "phrase": "trivial_baseline_ranking_classes"}, {"score": 0.0023035922232490106, "phrase": "alternative_approach"}, {"score": 0.0022777800735119405, "phrase": "cross-project_prediction"}, {"score": 0.0022270182923887012, "phrase": "local_prediction"}, {"score": 0.0021773853011112882, "phrase": "similar_classes"}], "paper_keywords": ["defect prediction", " multiobjective optimization", " cost-effectiveness", " cross-project defect prediction"], "paper_abstract": "In this paper, we formalize the defect-prediction problem as a multiobjective optimization problem. Specifically, we propose an approach, coined as multiobjective defect predictor (MODEP), based on multiobjective forms of machine learning techniqueslogistic regression and decision trees specificallytrained using a genetic algorithm. The multiobjective approach allows software engineers to choose predictors achieving a specific compromise between the number of likely defect-prone classes or the number of defects that the analysis would likely discover (effectiveness), and lines of code to be analysed/tested (which can be considered as a proxy of the cost of code inspection). Results of an empirical evaluation on 10 datasets from the PROMISE repository indicate the quantitative superiority of MODEP with respect to single-objective predictors, and with respect to trivial baseline ranking classes by size in ascending or descending order. Also, MODEP outperforms an alternative approach for cross-project prediction, based on local prediction upon clusters of similar classes. Copyright (c) 2015John Wiley & Sons, Ltd.", "paper_title": "Defect prediction as a multiobjective optimization problem", "paper_id": "WOS:000354129400005"}