{"auto_keywords": [{"score": 0.048843518180451954, "phrase": "modelica"}, {"score": 0.006675126064117335, "phrase": "modelica_subset"}, {"score": 0.00481495049065317, "phrase": "qualifiable_code_generation"}, {"score": 0.004740009255053372, "phrase": "clocked_synchronous_subset"}, {"score": 0.004246947739596565, "phrase": "digital_control_applications"}, {"score": 0.0040094142308666975, "phrase": "tedious_additional_efforts"}, {"score": 0.0038249462699142733, "phrase": "qualifiable_target_system_production_code"}, {"score": 0.0035920758080335655, "phrase": "model-based_development"}, {"score": 0.0034267429854665035, "phrase": "qualifiable_automatic_code_generator"}, {"score": 0.003355717283753749, "phrase": "typical_modelica_code_generation"}, {"score": 0.003303412571939192, "phrase": "fairly_complex_process"}, {"score": 0.003234934827553253, "phrase": "huge_development_burden"}, {"score": 0.0031513240597392843, "phrase": "tool_qualification"}, {"score": 0.0029905104479072482, "phrase": "digital_control_function_development"}, {"score": 0.0029438813080245544, "phrase": "well-understood_synchronous_data-flow_kernel_language"}, {"score": 0.002808298910480358, "phrase": "established_compilation_techniques"}, {"score": 0.0027790254309734428, "phrase": "data-flow_languages"}, {"score": 0.002651015392318126, "phrase": "certification_authorities"}, {"score": 0.0025288869172313674, "phrase": "translational_semantics"}, {"score": 0.002450602177683068, "phrase": "synchronous_data-flow_kernel_language"}, {"score": 0.002172266188075892, "phrase": "suitable_design_decisions"}, {"score": 0.0021049977753042253, "phrase": "language_subset"}], "paper_keywords": ["Modelica", " Automatic Code Generation", " Model-Based Development", " Safety-Relevant Systems"], "paper_abstract": "So far no qualifiable automatic code generators (ACGs) are available for Modelica. Hence, digital control applications can be modeled and simulated in Modelica, but require tedious additional efforts (e.g., manual reprogramming) to produce qualifiable target system production code. In order to more fully leverage the potential of a model-based development (MBD) process in Modelica, a qualifiable automatic code generator is needed. Typical Modelica code generation is a fairly complex process which imposes a huge development burden to any efforts of tool qualification. This work aims at mapping a Modelica subset for digital control function development to a well-understood synchronous data-flow kernel language. This kernel language allows to resort to established compilation techniques for data-flow languages which are understood enough to be accepted by certification authorities. The mapping is established by providing a translational semantics from the Modelica subset to the synchronous data-flow kernel language. However, this translation turned out to be more intricate than initially expected and has given rise to several interesting issues that require suitable design decisions regarding the mapping and the language subset.", "paper_title": "Towards Qualifiable Code Generation from a Clocked Synchronous Subset of Modelica", "paper_id": "WOS:000351718000003"}