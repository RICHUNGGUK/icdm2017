{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "transitive_mixins"}, {"score": 0.004721893473387288, "phrase": "object-oriented_composition"}, {"score": 0.004600596158672458, "phrase": "class_inheritance"}, {"score": 0.00445332728705756, "phrase": "type_relationships"}, {"score": 0.004395742407834023, "phrase": "reusable_building_blocks"}, {"score": 0.003960972732123083, "phrase": "inheritance_hierarchies"}, {"score": 0.002859856368059419, "phrase": "mixin_concept"}, {"score": 0.0027501697136375555, "phrase": "simple_and_reusable_solution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["mixins", " mixin classes", " software composition", " object-oriented composition"], "paper_abstract": "In object-oriented composition, classes and class inheritance are applied to realize type relationships and reusable building blocks. Unfortunately, these two goals might be contradictory in many situations, leading to classes and inheritance hierarchies that are hard to reuse. Some approaches exist to remedy this problem, such as mixins, aspects, roles, and meta-objects. However, in all these approaches, situations where the mixins, aspects, roles, or meta-objects have complex interdependencies among each other are not well solved yet. In this paper, we propose transitive mixins as an extension of the mixin concept. This approach provides a simple and reusable solution to define \"mixins of mixins\". Moreover, because mixins can be easily realized on top of aspects, roles, and meta-objects, the same solution can also be applied to those other approaches. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Object-based and class-based composition of transitive mixins", "paper_id": "WOS:000247844300005"}