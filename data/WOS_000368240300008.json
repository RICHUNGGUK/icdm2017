{"auto_keywords": [{"score": 0.04804050199975016, "phrase": "regular_expressions"}, {"score": 0.013881580239245244, "phrase": "mso_formulas"}, {"score": 0.007152368807539886, "phrase": "decision_procedures"}, {"score": 0.007083774880565192, "phrase": "mso"}, {"score": 0.00456571874088313, "phrase": "monadic_second-order_logic"}, {"score": 0.004435230698216773, "phrase": "decidable_yet_expressive_logic"}, {"score": 0.004185289462328125, "phrase": "regular_languages"}, {"score": 0.00393032656248792, "phrase": "regular_structures"}, {"score": 0.0037267132967205136, "phrase": "verified_functional_decision_procedure"}, {"score": 0.0034826993555190765, "phrase": "functional_languages"}, {"score": 0.0033182152378613767, "phrase": "data_types"}, {"score": 0.003070996252787868, "phrase": "structural_induction"}, {"score": 0.0030121159909273897, "phrase": "regular_expression_equivalence"}, {"score": 0.002883718207958817, "phrase": "brzozowski_derivatives"}, {"score": 0.002801166393333128, "phrase": "straightforward_embedding"}, {"score": 0.0026430660986106955, "phrase": "projection_operation"}, {"score": 0.0025673856614952854, "phrase": "total_correctness"}, {"score": 0.0025059724686541263, "phrase": "equivalence_checker"}, {"score": 0.0023644936731468252, "phrase": "language-preserving_translation"}, {"score": 0.002252701925634125, "phrase": "mso."}, {"score": 0.0021049977753042253, "phrase": "isabelle's_code_generation_facility"}], "paper_keywords": [""], "paper_abstract": "Monadic second-order logic on finite words is a decidable yet expressive logic into which many decision problems can be encoded. Since MSO formulas correspond to regular languages, equivalence of MSO formulas can be reduced to the equivalence of some regular structures (e.g., automata). This paper presents a verified functional decision procedure for MSO formulas that is not based on automata but on regular expressions. Functional languages are ideally suited for this task: regular expressions are data types and functions on them are defined by pattern matching and recursion and are verified by structural induction. Decision procedures for regular expression equivalence have been formalized before, usually based on Brzozowski derivatives. Yet, for a straightforward embedding of MSO formulas into regular expressions, an extension of regular expressions with a projection operation is required. We prove total correctness and completeness of an equivalence checker for regular expressions extended in that way. We also define a language-preserving translation of formulas into regular expressions with respect to two different semantics of MSO. Our results have been formalized and verified in the theorem prover Isabelle. Using Isabelle's code generation facility, this yields purely functional, formally verified programs that decide equivalence of MSO formulas.", "paper_title": "Verified decision procedures for MSO on words based on derivatives of regular expressions", "paper_id": "WOS:000368240300008"}