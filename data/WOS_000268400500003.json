{"auto_keywords": [{"score": 0.04418518864132593, "phrase": "different_systems"}, {"score": 0.03720707411991549, "phrase": "model_checking"}, {"score": 0.00481495049065317, "phrase": "automated_verification"}, {"score": 0.004758053266234474, "phrase": "layered_graph_transformation_specifications"}, {"score": 0.004701825207431857, "phrase": "graph_transformation_systems"}, {"score": 0.004430452655732319, "phrase": "general_formal_modelling_language"}, {"score": 0.00430067200637091, "phrase": "suitable_formalism"}, {"score": 0.0038870860864224656, "phrase": "proper_analysis_capabilities"}, {"score": 0.003619235073669304, "phrase": "stated_requirements"}, {"score": 0.0034101316738399203, "phrase": "viable_solution"}, {"score": 0.003232254571848865, "phrase": "efficient_solution"}, {"score": 0.0030273620861817055, "phrase": "layered_graph_transformation_systems"}, {"score": 0.0029737652463012318, "phrase": "powerful_formalism"}, {"score": 0.0028693932802982417, "phrase": "hierarchical_systems"}, {"score": 0.0027852126030055305, "phrase": "agg_layered_graph_transformation_specifications"}, {"score": 0.002719644855867468, "phrase": "bandera_intermediate_representation"}, {"score": 0.0026241684260044414, "phrase": "input_language"}, {"score": 0.0025776913268808124, "phrase": "bogor_model_checker"}, {"score": 0.0025169969608561764, "phrase": "bogor"}, {"score": 0.002428617044669043, "phrase": "interesting_properties"}, {"score": 0.0023714699839914154, "phrase": "ltl"}, {"score": 0.0022745508619577927, "phrase": "special_graph_rules"}, {"score": 0.002234252028553481, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "existing_approaches"}], "paper_keywords": [""], "paper_abstract": "Graph transformation systems have recently become more and more popular as a general formal modelling language. It is a suitable formalism for modelling different systems like distributed and complex systems. However, modelling must be complemented with proper analysis capabilities to let the user understand how designed models behave and whether stated requirements are fulfilled and model checking has proven to be a viable solution for this purpose. The authors propose an efficient solution for model checking attributed typed and layered graph transformation systems. Layered graph transformation systems are a powerful formalism to formally model different systems like hierarchical systems. In our proposal, AGG layered graph transformation specifications are translated to Bandera intermediate representation (BIR) - the input language of a Bogor model checker - and then Bogor verifies the model against some interesting properties defined by combining LTL (linear temporal logic) and special graph rules. The experimental results are encouraging and show that in most cases our proposal improves existing approaches, in terms of both performance and expressiveness.", "paper_title": "Towards automated verification of layered graph transformation specifications", "paper_id": "WOS:000268400500003"}