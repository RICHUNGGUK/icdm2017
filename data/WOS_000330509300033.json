{"auto_keywords": [{"score": 0.04852232688729349, "phrase": "energy_efficiency"}, {"score": 0.00481495049065317, "phrase": "practical_data_filter_cache"}, {"score": 0.004506968388996092, "phrase": "conventional_data_filter_cache"}, {"score": 0.004433094896933133, "phrase": "dfc"}, {"score": 0.00428892403807229, "phrase": "processor_energy_efficiency"}, {"score": 0.0039813976794342, "phrase": "single-cycle_line_transfer"}, {"score": 0.0034024277222012597, "phrase": "practical_dfc"}, {"score": 0.0030554300179552415, "phrase": "multiple_cycles"}, {"score": 0.0028596699752849682, "phrase": "substantial_fraction"}, {"score": 0.002676418520290942, "phrase": "tag_checks"}, {"score": 0.0022679195103377124, "phrase": "proposed_dfc"}, {"score": 0.0021940118003312397, "phrase": "data_access_energy"}, {"score": 0.0021049977753042253, "phrase": "execution_time"}], "paper_keywords": ["Speculation", " filter cache"], "paper_abstract": "Conventional Data Filter Cache (DFC) designs improve processor energy efficiency, but degrade performance. Furthermore, the single-cycle line transfer suggested in prior studies adversely affects Level-1 Data Cache (L1 DC) area and energy efficiency. We propose a practical DFC that is accessed early in the pipeline and transfers a line over multiple cycles. Our DFC design improves performance and eliminates a substantial fraction of L1 DC accesses for loads, L1 DC tag checks on stores, and data translation lookaside buffer accesses for both loads and stores. Our evaluation shows that the proposed DFC can reduce the data access energy by 42.5% and improve execution time by 4.2%.", "paper_title": "Designing a Practical Data Filter Cache to Improve Both Energy Efficiency and Performance", "paper_id": "WOS:000330509300033"}