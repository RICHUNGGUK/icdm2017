{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "service_usage_information"}, {"score": 0.033196982587530136, "phrase": "server_resource_utilization"}, {"score": 0.004771435352180973, "phrase": "optimizing_server_resource_management"}, {"score": 0.004539005582217305, "phrase": "modern_component-based_internet_services"}, {"score": 0.003978866233891427, "phrase": "application_behavior"}, {"score": 0.003871869188502677, "phrase": "component-based_internet_services"}, {"score": 0.0038194503801108324, "phrase": "complex_structural_organization"}, {"score": 0.0037506567448470163, "phrase": "different_types"}, {"score": 0.003716724243777879, "phrase": "widely_ranging_execution_complexity"}, {"score": 0.003535489842686145, "phrase": "detailed_information"}, {"score": 0.0034560481756572632, "phrase": "internet_services"}, {"score": 0.003287482882222731, "phrase": "improved_qos"}, {"score": 0.0032429499567088113, "phrase": "service_clients"}, {"score": 0.0030429511467945525, "phrase": "service_usage"}, {"score": 0.0028682668647074397, "phrase": "service_access_attribute"}, {"score": 0.0028037753646260937, "phrase": "service_access_attributes"}, {"score": 0.002765776659294382, "phrase": "different_aspects"}, {"score": 0.0026790983342162887, "phrase": "high-level_structure"}, {"score": 0.0026548344763838213, "phrase": "client_web_sessions"}, {"score": 0.0026307897899760383, "phrase": "low-level_fine-grained_information"}, {"score": 0.002548331088496964, "phrase": "different_requests"}, {"score": 0.0024797072773840704, "phrase": "identified_service_usage_information"}, {"score": 0.0023372808856170386, "phrase": "jboss_java_application_server"}, {"score": 0.0021830553825770097, "phrase": "service_performance"}], "paper_keywords": ["Design", " Experimentation", " Management", " Performance", " Internet application", " component middleware", " quality-of-service", " service usage information", " client behavior", " server resource management", " optimization"], "paper_abstract": "It is often difficult to tune the performance of modern component-based Internet services because: (1) component middleware are complex software systems that expose several independently tuned server resource management mechanisms; (2) session-oriented client behavior with complex data access patterns makes it hard to predict what impact tuning these mechanisms has on application behavior; and (3) component-based Internet services themselves exhibit complex structural organization with requests of different types having widely ranging execution complexity. In this article we show that exposing and using detailed information about how clients use Internet services enables mechanisms that achieve two interconnected goals: (1) providing improved QoS to the service clients, and (2) optimizing server resource utilization. To differentiate among levels of service usage (service access) information, we introduce the notion of the service access attribute and identify four related groups of service access attributes, encompassing different aspects of service usage information, ranging from the high-level structure of client web sessions to low-level fine-grained information about utilization of server resources by different requests. To show how the identified service usage information can be collected, we implement a request profiling infrastructure in the JBoss Java application server. In the context of four representative service management problems, we show how collected service usage information is used to improve service performance, optimize server resource utilization, or to achieve other problem-specific service management goals.", "paper_title": "Exploiting Service Usage Information for Optimizing Server Resource Management", "paper_id": "WOS:000293162800001"}