{"auto_keywords": [{"score": 0.024265234620046296, "phrase": "rbs"}, {"score": 0.006304307783415849, "phrase": "rca"}, {"score": 0.00481495049065317, "phrase": "efficient_algorithms"}, {"score": 0.0047491829932188884, "phrase": "ucs"}, {"score": 0.004191200981137508, "phrase": "full_adder"}, {"score": 0.00406663414150229, "phrase": "full_subtractor"}, {"score": 0.003714629047818465, "phrase": "fast_hardware_implementation"}, {"score": 0.0032722454818973853, "phrase": "uca-based_ripple_carry_adder"}, {"score": 0.0029707940194245216, "phrase": "delay_data"}, {"score": 0.0029351141718104725, "phrase": "standard_cell_library"}, {"score": 0.0026646374739979694, "phrase": "conventional_fa-based_rca"}, {"score": 0.0025542617599268323, "phrase": "fa-based_cla."}, {"score": 0.002404447017429959, "phrase": "conventional_fa-based_clas"}, {"score": 0.002304824112812496, "phrase": "ripple_borrow_subtractor"}], "paper_keywords": ["ripple carry adder (RCA)", " carry-lookahead adder (CLA)", " ripple-borrow subtractor (RBS)", " multiplier", " divider"], "paper_abstract": "This study presents efficient algorithms for performing multiply-by-3 (3N) and divide-by-3 (N/3) operations with the additions and subtractions, respectively. No multiplications and divisions are needed. Full adder (FA) and full subtractor (FS) can be implemented to realize the N3 and N/3 operations, respectively. For fast hardware implementation, this paper introduces two basic cells UCA and UCS for 3N and N/3 operations, respectively. For 3N operation, the UCA-based ripple carry adder (RCA) and carry lookahead adder (CLA) designs are proposed and their speed performances are estimated based on the delay data of standard cell library in TSMC 0.18 mu m CMOS process. Results show that the 16-bit UCA-based RCA is about 3 times faster than the conventional FA-based RCA and even 25% faster than the FA-based CLA. The proposed 16-bit and 64-bit UCA-based CLAs are 62% and 36% faster than the conventional FA-based CLAs, respectively. For N/3 operations, ripple borrow subtractor (RBS) is also presented. The 16-bit UCS-based RBS is about 15.5% faster than the 16-bit FS-based RBS.", "paper_title": "Efficient Multiply-by-3 and Divide-by-3 Algorithms and Their Fast Hardware Implementation", "paper_id": "WOS:000331343200023"}