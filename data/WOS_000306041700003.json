{"auto_keywords": [{"score": 0.04880247283985043, "phrase": "routing_tables"}, {"score": 0.04054719449266402, "phrase": "k-chordal_graphs"}, {"score": 0.013034034209836112, "phrase": "routing_scheme"}, {"score": 0.008611430755792843, "phrase": "chordal_graphs"}, {"score": 0.00481495049065317, "phrase": "efficient_routing_schemes"}, {"score": 0.004777917315737992, "phrase": "generalized_chordal_graphs"}, {"score": 0.004741167616693272, "phrase": "efficient_algorithms"}, {"score": 0.004596960835906736, "phrase": "particular_properties"}, {"score": 0.004544016163767266, "phrase": "large_scale_networks"}, {"score": 0.004422827355213055, "phrase": "special_interest"}, {"score": 0.004222515162635615, "phrase": "high_clustering_coefficient"}, {"score": 0.00393886140366453, "phrase": "short_routes"}, {"score": 0.003760385494931853, "phrase": "induced_cycles"}, {"score": 0.003548579306515579, "phrase": "additive_stretch"}, {"score": 0.003075583447856341, "phrase": "n-node_graph"}, {"score": 0.002993439939273828, "phrase": "distributed_algorithm"}, {"score": 0.0028687545730861665, "phrase": "corresponding_routing_scheme"}, {"score": 0.002665465323614577, "phrase": "better_additive_stretch"}, {"score": 0.0024957862318504753, "phrase": "distributed_computation"}, {"score": 0.0023830138881083436, "phrase": "delta"}, {"score": 0.0023550410480905727, "phrase": "maximum_degree"}, {"score": 0.0022308329460335985, "phrase": "local_memory"}, {"score": 0.0021796224306652326, "phrase": "n_bits"}, {"score": 0.0021461354559957234, "phrase": "degree_d."}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Routing scheme", " Stretch", " Chordal graph", " Distributed algorithm"], "paper_abstract": "Efficient algorithms for computing routing tables should take advantage of particular properties arising in large scale networks. Two of them are of special interest: low (logarithmic) diameter and high clustering coefficient. High clustering coefficient implies the existence of few large induced cycles. Considering this fact, we propose here a routing scheme that computes short routes in the class of k-chordal graphs, i.e., graphs with no induced cycles of length more than k. In the class of k-chordal graphs, our routing scheme achieves an additive stretch of at most k - 1, i.e., for all pairs of nodes, the length of the route never exceeds their distance plus k - 1. In order to compute the routing tables of any n-node graph with diameter D we propose a distributed algorithm which uses O(log n)-bit messages and takes O(D) time. The corresponding routing scheme achieves the stretch of k - 1 on k-chordal graphs. We then propose a routing scheme that achieves a better additive stretch of 1 in chordal graphs (notice that chordal graphs are 3-chordal graphs). In this case, distributed computation of routing tables takes O(min{Delta D, n}) time, where Delta is the maximum degree of the graph. Our routing schemes use addresses of size log n bits and local memory of size 2(d-1) log n bits per node of degree d. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Distributed computing of efficient routing schemes in generalized chordal graphs", "paper_id": "WOS:000306041700003"}