{"auto_keywords": [{"score": 0.04720912624670318, "phrase": "ba"}, {"score": 0.040979241321031, "phrase": "pbau"}, {"score": 0.010611897241718843, "phrase": "pba"}, {"score": 0.0046797114400479135, "phrase": "parallelized_version"}, {"score": 0.0038332390893263844, "phrase": "mere_verilog_hdl_translation"}, {"score": 0.0034690732089830045, "phrase": "runtime_complexity"}, {"score": 0.003419943984098415, "phrase": "best_case"}, {"score": 0.003094920033010818, "phrase": "multiprocessor_system-on"}, {"score": 0.002868116925014397, "phrase": "future_high_performance_computing_environments"}, {"score": 0.002787406053363446, "phrase": "multiple_instance_multiple_resource_systems"}, {"score": 0.0024051153560799335, "phrase": "particular_example"}, {"score": 0.0023485549678832628, "phrase": "application_execution_time"}, {"score": 0.0022393843660697484, "phrase": "mpsoc_area"}], "paper_keywords": ["Parallel Banker's Algorithm", " deadlock avoidance in hardware", " multiprocessor system-on-a-chip"], "paper_abstract": "This article proposes a novel O(n) Parallel Banker's Algorithm (PBA), which is a parallelized version of the Banker's Algorithm (BA), a well-known O(m x n) deadlock avoidance algorithm. We implement the approach in hardware, which we call PBA Unit (PBAU). PBAU is not a mere Verilog HDL translation of BA, but a novel, fully hardware-oriented implementation exploiting maximum hardware parallelism of all computations in BA, resulting in O(1) runtime complexity in the best case and O(n) in the worst. PBAU is an Intellectual Property (IP) block that provides a mechanism of very fast, automatic deadlock avoidance for Multiprocessor System-on-a-Chip (MPSoC), which we predict will be the mainstream of future high performance computing environments. Furthermore, our PBAU supports multiple instance multiple resource systems. We demonstrate that PBAU not only avoids deadlock in a few clock cycles (several orders of magnitude faster than BA in software), but also achieves, in a particular example, a 19 percent speedup of application execution time over avoiding deadlock in software. Lastly, the MPSoC area overhead due to PBAU is small, less than 0.05 percent in our candidate MPSoC example.", "paper_title": "A novel O(n) Parallel Banker's Algorithm for system-on-a-chip", "paper_id": "WOS:000241411800001"}