{"auto_keywords": [{"score": 0.04728331461408164, "phrase": "synchronization_errors"}, {"score": 0.015719716506582538, "phrase": "linear_and_cyclic_codes"}, {"score": 0.012827292869399268, "phrase": "linear_codes"}, {"score": 0.011216278962471713, "phrase": "cyclic_codes"}, {"score": 0.004625881588444304, "phrase": "substitution_errors"}, {"score": 0.004248294537944227, "phrase": "severe_performance_degradation"}, {"score": 0.004184921610672245, "phrase": "coding_scheme"}, {"score": 0.003356675879109443, "phrase": "repetition_codes"}, {"score": 0.002902304851882577, "phrase": "first_approach"}, {"score": 0.0028021527740710508, "phrase": "binary_or_nonbinary_cyclic_code"}, {"score": 0.002459414063407306, "phrase": "second_approach"}, {"score": 0.00242266141176955, "phrase": "cyclic_code"}, {"score": 0.002246955931290095, "phrase": "expurgated_code"}, {"score": 0.002115592443589729, "phrase": "codewords_costs"}], "paper_keywords": ["Cyclic code", " deletion", " expurgated code", " extended code", " insertion", " linear code", " substitution error", " synchronization error"], "paper_abstract": "Linear and cyclic codes are typically used to combat substitution errors. However, synchronization errors, associated with the deletion and insertion of symbols, can cause severe performance degradation unless the coding scheme possesses the capability to recover from such errors. It is shown that linear codes of rate greater than 1/2 cannot correct deletion or insertion errors but there are linear codes of rate 1/2 that can correct these errors. Although cyclic codes, except for repetition codes, cannot correct deletion or insertion errors, two approaches are investigated to yield codes, based on cyclic codes, that can correct these errors. In the first approach, it is shown that a binary or nonbinary cyclic code of rate at most 1/3 or 1/2, respectively, can be extended by one symbol to make it capable of correcting synchronization errors. In the second approach, a cyclic code of rate at most 1/2 is expurgated by appropriately deleting codewords such that the expurgated code is capable of correcting synchronization errors. It is shown that deleting codewords costs at most two information bits if the code is binary and one information symbol if the code is nonbinary.", "paper_title": "Correcting Deletions Using Linear and Cyclic Codes", "paper_id": "WOS:000283260900030"}