{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "complex_event_processing"}, {"score": 0.004555499634179394, "phrase": "complex_situations"}, {"score": 0.004231089088705995, "phrase": "low_level_event_notifications"}, {"score": 0.004172874316207784, "phrase": "higher_level_composite_events"}, {"score": 0.004058826900076531, "phrase": "user-defined_rules"}, {"score": 0.00398452530840582, "phrase": "accompanying_rule_languages"}, {"score": 0.0037696519417841287, "phrase": "oversimplified_modeling"}, {"score": 0.0037177622939493084, "phrase": "external_world"}, {"score": 0.003484864867147635, "phrase": "real-life_applications"}, {"score": 0.0028434550444740047, "phrase": "cep."}, {"score": 0.002765636101369536, "phrase": "existing_cep_language-tesla-"}, {"score": 0.0026651772919894534, "phrase": "modern_rule_languages"}, {"score": 0.0024636239664210433, "phrase": "t-rex_cep_engine"}, {"score": 0.002418453525649304, "phrase": "detailed_study"}, {"score": 0.0023522423291484212, "phrase": "limited_overhead"}, {"score": 0.0021049977753042253, "phrase": "valuable_combination"}], "paper_keywords": ["Complex event processing", " Uncertainty management", " Uncertainty modeling"], "paper_abstract": "Several application domains involve detecting complex situations and reacting to them. This asks for a Complex Event Processing (CEP) engine specifically designed to timely process low level event notifications to identify higher level composite events according to a set of user-defined rules. Several CEP engines and accompanying rule languages have been proposed. Their primary focus on performance often led to an oversimplified modeling of the external world where events happens, which is not suited to satisfy the demand of real-life applications. In particular, they are unable to consider, model, and propagate the uncertainty that exists in most scenarios. Moving from this premise, we present CEP2U (Complex Event Processing under Uncertainty), a novel model for dealing with uncertainty in CEP. We apply CEP2U to an existing CEP language-TESLA-, showing how it seamlessly integrate with modern rule languages by supporting all the operators they commonly offer. Moreover, we implement CEP2U on top of the T-Rex CEP engine and perform a detailed study of its performance, measuring a limited overhead that demonstrates its practical applicability. The discussion presented in this paper, together with the experiments we conducted, show how CEP2U provides a valuable combination of expressiveness, efficiency, and ease of use.", "paper_title": "Introducing uncertainty in complex event processing: model, implementation, and validation", "paper_id": "WOS:000348437200001"}