{"auto_keywords": [{"score": 0.04849105041601803, "phrase": "soft_shadows"}, {"score": 0.04695140669556018, "phrase": "global_illumination"}, {"score": 0.004734448316824488, "phrase": "interactive_rendering"}, {"score": 0.004694700982410345, "phrase": "distribution_effects"}, {"score": 0.004463096299091981, "phrase": "common_distribution_effects"}, {"score": 0.0043699845927285905, "phrase": "monte_carlo_ray_tracing"}, {"score": 0.004278807087784626, "phrase": "noise-free_images"}, {"score": 0.004189523950071494, "phrase": "ray_samples"}, {"score": 0.004067635935640407, "phrase": "long_time"}, {"score": 0.003999578057088828, "phrase": "recent_approaches"}, {"score": 0.003949280009382125, "phrase": "sparse_sampling"}, {"score": 0.0034359094594153304, "phrase": "new_approach"}, {"score": 0.0033359303584107615, "phrase": "gpu."}, {"score": 0.0031710903727066313, "phrase": "complexity_bounds"}, {"score": 0.0030787405733989615, "phrase": "per-pixel_complexity"}, {"score": 0.002889778121878728, "phrase": "linear_filter_width"}, {"score": 0.0028654728453890426, "phrase": "filter_size"}, {"score": 0.0023100907305651872, "phrase": "interactive_speeds"}, {"score": 0.0021773853011112882, "phrase": "axis-aligned_filtering"}, {"score": 0.0021049977753042253, "phrase": "equal_quality"}], "paper_keywords": ["Algorithms", " Performance", " Design", " Fourier analysis", " sampling", " filtering", " soft shadows", " depth of field", " diffuse global illumination", " sheared filtering"], "paper_abstract": "Soft shadows, depth of field, and diffuse global illumination are common distribution effects, usually rendered by Monte Carlo ray tracing. Physically correct, noise-free images can require hundreds or thousands of ray samples per pixel, and take a long time to compute. Recent approaches have exploited sparse sampling and filtering; the filtering is either fast (axis-aligned), but requires more input samples, or needs fewer input samples but is very slow (sheared). We present a new approach for fast sheared filtering on the GPU. Our algorithm factors the 4D sheared filter into four 1D filters. We derive complexity bounds for our method, showing that the per-pixel complexity is reduced from O(n(2)l(2)) to O(nl), where n is the linear filter width (filter size is O(n(2))) and l is the (usually very small) number of samples for each dimension of the light or lens per pixel (spp is l(2)). We thus reduce sheared filtering overhead dramatically. We demonstrate rendering of depth of field, soft shadows and diffuse global illumination at interactive speeds. We reduce the number of samples needed by 5-8x, compared to axis-aligned filtering, and framerates are 4x faster for equal quality.", "paper_title": "Fast 4D Sheared Filtering for Interactive Rendering of Distribution Effects", "paper_id": "WOS:000367270100007"}