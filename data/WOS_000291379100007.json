{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "suffix_arrays"}, {"score": 0.014064488150703528, "phrase": "data_compression"}, {"score": 0.004761132425263795, "phrase": "compressed_suffix_arrays"}, {"score": 0.00462919213721188, "phrase": "key_data_structure"}, {"score": 0.004254814649568355, "phrase": "information_retrieval"}, {"score": 0.004207230913063179, "phrase": "biological_sequence_analysis"}, {"score": 0.004160177106153782, "phrase": "pattern_discovery"}, {"score": 0.0035339597999254064, "phrase": "sorted_sequence"}, {"score": 0.003303177222901723, "phrase": "lexicographic_order"}, {"score": 0.0031223774204093713, "phrase": "ubiquitous_and_sophisticated_suffix_trees"}, {"score": 0.00293487292076612, "phrase": "special_class"}, {"score": 0.002758597251689795, "phrase": "extra_information"}, {"score": 0.00266693888510356, "phrase": "well_characterized_subset"}, {"score": 0.002506715532901322, "phrase": "short_tutorial"}, {"score": 0.0023035922232490106, "phrase": "space_issues"}, {"score": 0.0022396019251440724, "phrase": "text_indexing"}, {"score": 0.0022145052062614514, "phrase": "combinatorial_pattern_matching"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Pattern matching", " Suffix array", " Suffix tree", " Text indexing", " Data compression", " Space efficiency", " Implicitness and succinctness"], "paper_abstract": "Suffix arrays are a key data structure for solving a run of problems on texts and sequences, from data compression and information retrieval to biological sequence analysis and pattern discovery. In their simplest version, they can just be seen as a permutation of the elements in {1, 2, ..., n), encoding the sorted sequence of suffixes from a given text of length n, under the lexicographic order. Yet, they are on a par with ubiquitous and sophisticated suffix trees. Over the years, many interesting combinatorial properties have been devised for this special class of permutations: for instance, they can implicitly encode extra information, and they are a well characterized subset of the n! permutations. This paper gives a short tutorial on suffix arrays and their compressed version to explore and review some of their algorithmic features, discussing the space issues related to their usage in text indexing, combinatorial pattern matching, and data compression. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A quick tour on suffix arrays and compressed suffix arrays", "paper_id": "WOS:000291379100007"}