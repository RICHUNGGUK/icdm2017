{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "black-box_components"}, {"score": 0.0064301793094803245, "phrase": "contract-based_mutation"}, {"score": 0.0058927394408583205, "phrase": "mutation_testing"}, {"score": 0.004742179945772899, "phrase": "component_based_software_development"}, {"score": 0.004495996972278015, "phrase": "software_development"}, {"score": 0.004461882369408972, "phrase": "software_components"}, {"score": 0.004262539473250432, "phrase": "new_systems"}, {"score": 0.004150377643719188, "phrase": "software_systems"}, {"score": 0.00405658135587089, "phrase": "primary_concern"}, {"score": 0.0038752755502006442, "phrase": "adequate_testing"}, {"score": 0.00373036974937097, "phrase": "necessary_step"}, {"score": 0.0035772012773052065, "phrase": "source_code"}, {"score": 0.0035230711775515854, "phrase": "ensuring_test_adequacy"}, {"score": 0.003456554957885269, "phrase": "hardest_issues"}, {"score": 0.0032894118890753805, "phrase": "natural_idea"}, {"score": 0.003190584226787897, "phrase": "fault-based_testing_method"}, {"score": 0.0031422859551159506, "phrase": "test_adequacy"}, {"score": 0.003107049091964479, "phrase": "traditional_mutation_operators"}, {"score": 0.003106541164572609, "phrase": "component_contracts"}, {"score": 0.0026567830878420347, "phrase": "contract-based_mutation_technique"}, {"score": 0.002470987929071079, "phrase": "high_level_contract_mutation_operators"}, {"score": 0.002203663884543687, "phrase": "almost_the_same_ability"}, {"score": 0.0021049977753042253, "phrase": "effective_test_suites"}], "paper_keywords": ["black-box components", " component contract", " mutation testing"], "paper_abstract": "Component Based Software Development (CBSD) is gaining popularity in recent years. In this way of software development, software components, which are typically black-box components, are intensively reused to construct new systems. To ensure the quality of software systems composed of black-box components, a primary concern is how to ensure the quality of black-box components. Thus, adequate testing of those black-box components that will be reused is a necessary step in CBSD. However, due to the unavailability of the source code of black-box components, ensuring test adequacy becomes one of the hardest issues for testing black-box components. To tackle this problem, it is a natural idea to apply mutation testing, which is a fault-based testing method used for measuring test adequacy, for component contracts, whose aim is to improve the testability of the component. Though powerful, mutation testing is usually very computation-expensive, as many mutants need to be produced and executed in mutation testing. In this paper, we propose a contract-based mutation technique for testing black-box components. Based on the discordance between contracts and specification, our approach employs a set of high level contract mutation operators. The experimental results show that these operators can greatly reduce the number of mutants compared with traditional mutation operators. At the same time, the contract-based mutation using our contract mutation operators can provide almost the same ability as that of using traditional mutation operators. Therefore, our approach can produce effective test suites to reduce the cost of testing black-box components.", "paper_title": "An approach to testing black-box components using contract-based mutation", "paper_id": "WOS:000255159800005"}