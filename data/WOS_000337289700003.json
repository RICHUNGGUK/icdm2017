{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "mixed-criticality_systems"}, {"score": 0.04049495084814713, "phrase": "fault_tolerance"}, {"score": 0.004636340567075841, "phrase": "real-time_scheduling_algorithms"}, {"score": 0.004586531354697466, "phrase": "safety-critical_systems"}, {"score": 0.004512814529823301, "phrase": "challenging_problem"}, {"score": 0.00441635700580562, "phrase": "temporal_dependencies"}, {"score": 0.00436890075128947, "phrase": "different_design_constraints"}, {"score": 0.004229556887896042, "phrase": "sporadic_tasks"}, {"score": 0.004028796143006953, "phrase": "hard_deadlines"}, {"score": 0.003985487777785535, "phrase": "application_tasks"}, {"score": 0.003519561814102764, "phrase": "system's_certification"}, {"score": 0.00342568771304873, "phrase": "new_approach"}, {"score": 0.003158776195052182, "phrase": "uniprocessor_fixed-priority_scheduling_algorithm"}, {"score": 0.002865710140187219, "phrase": "proposed_model"}, {"score": 0.0028195727965553367, "phrase": "ftmc_algorithm"}, {"score": 0.0027295084882654917, "phrase": "task_errors"}, {"score": 0.002685558057339722, "phrase": "hardware_or_software_faults"}, {"score": 0.002613870237087035, "phrase": "sufficient_schedulability_test"}, {"score": 0.0021049977753042253, "phrase": "proposed_test"}], "paper_keywords": ["Run-time support", " Real-time scheduling", " Fixed-priority scheduling", " Mixed-criticality systems", " Fault-tolerance"], "paper_abstract": "The design and analysis of real-time scheduling algorithms for safety-critical systems is a challenging problem due to the temporal dependencies among different design constraints. This paper considers scheduling sporadic tasks with three interrelated design constraints: (i) meeting the hard deadlines of application tasks, (ii) providing fault tolerance by executing backups, and (iii) respecting the criticality of each task to facilitate system's certification. First, a new approach to model mixed-criticality systems from the perspective of fault tolerance is proposed. Second, a uniprocessor fixed-priority scheduling algorithm, called fault-tolerant mixed-criticality (FTMC) scheduling, is designed for the proposed model. The FTMC algorithm executes backups to recover from task errors caused by hardware or software faults. Third, a sufficient schedulability test is derived, when satisfied for a (mixed-criticality) task set, guarantees that all deadlines are met even if backups are executed to recover from errors. Finally, evaluations illustrate the effectiveness of the proposed test.", "paper_title": "Fault-tolerant and real-time scheduling for mixed-criticality systems", "paper_id": "WOS:000337289700003"}