{"auto_keywords": [{"score": 0.023011021835022485, "phrase": "prime_overlap-free_decomposition"}, {"score": 0.004061584718427419, "phrase": "overlap-free_languages"}, {"score": 0.003916098498242888, "phrase": "proper_subfamily"}, {"score": 0.003822003373331997, "phrase": "infix-free_languages"}, {"score": 0.0037301606780397456, "phrase": "also_a_proper_subfamily"}, {"score": 0.003640516896245813, "phrase": "comma-free_languages"}, {"score": 0.003223494720348768, "phrase": "polynomial-time_algorithm"}, {"score": 0.0029965060407413898, "phrase": "regular_language"}, {"score": 0.0025892330566358503, "phrase": "nondeterministic_finite-state_automaton"}, {"score": 0.002348883765159185, "phrase": "regular_expression"}, {"score": 0.0021049977753042253, "phrase": "overlap-free_regular_languages"}], "paper_keywords": [""], "paper_abstract": "We define a language to be overlap-free if any two distinct strings in the language do not overlap with each other. We observe that overlap-free languages are a proper subfamily of infix-free languages and also a proper subfamily of comma-free languages. Based on these observations, we design a polynomial-time algorithm that determines overlap-freeness of a regular language. We consider two cases: A language is specified by a nondeterministic finite-state automaton and a language is described by a regular expression. Furthermore, we examine the prime overlap-free decomposition of overlap-free regular languages and show that the prime overlap-free decomposition is not unique.", "paper_title": "Overlap-free regular languages", "paper_id": "WOS:000240077300049"}