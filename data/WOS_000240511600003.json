{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "kernel_methods"}, {"score": 0.004719359108879602, "phrase": "support_vector_machine"}, {"score": 0.00455202992136173, "phrase": "quadratic_programming"}, {"score": 0.004338076511024884, "phrase": "naive_implementation"}, {"score": 0.004286171444202565, "phrase": "qp_solver"}, {"score": 0.004201033616196156, "phrase": "training_time"}, {"score": 0.003955593400628455, "phrase": "major_stumbling_block"}, {"score": 0.003769567397860168, "phrase": "naive_method"}, {"score": 0.0037095162593960727, "phrase": "qp_solutions"}, {"score": 0.0035778632599436024, "phrase": "approximation_algorithms"}, {"score": 0.0035350218469335573, "phrase": "minimum_enclosing_ball"}, {"score": 0.00340954056723008, "phrase": "core_vector_machine"}, {"score": 0.0031717449091759045, "phrase": "cvm"}, {"score": 0.002880197194183488, "phrase": "cvm."}, {"score": 0.0027890803075309926, "phrase": "center-constrained_meb_problem"}, {"score": 0.002733598121537801, "phrase": "cvm_algorithm"}, {"score": 0.0027008385562908425, "phrase": "generalized_cvm_algorithm"}, {"score": 0.002522464258675796, "phrase": "svr"}, {"score": 0.002432834929068545, "phrase": "original_cvm"}, {"score": 0.002308953751676031, "phrase": "m._experiments"}, {"score": 0.0022721178679337025, "phrase": "generalized_cvm"}, {"score": 0.002253920389285441, "phrase": "comparable_performance"}, {"score": 0.002165091261117016, "phrase": "svr_implementations"}], "paper_keywords": ["approximation algorithms", " core vector machines (CVMs)", " kernel methods", " minimum enclosing ball (MEB)", " quadratic programming", " support vector machines (SVMs)"], "paper_abstract": "Kernel methods, such as the support vector machine (SVM), are often formulated as quadratic programming (QP) problems. However, given m training patterns, a naive implementation of the QP solver takes 0(m(3)) training time and at least 0(m(2)) space. Hence, scaling up these QPs is a major stumbling block in applying kernel methods on very large data sets, and a replacement of the naive method for finding the QP solutions is highly desirable. Recently, by using approximation algorithms for the minimum enclosing ball (MEB) problem, we proposed the core vector machine (CVM) algorithm that is much faster and can handle much larger data sets than existing SVM implementations,. However, the CVM can only be used with certain kernel functions and kernel methods. For example, the very popular support vector regression (SVR) cannot be used with the CVM. In this paper, we introduce the center-constrained MEB problem and subsequently extend the CVM algorithm. The generalized CVM algorithm can now be used with any linear/nonlinear kernel and can also be applied to kernel methods such as SVR and the ranking SVM. Moreover, like the original CVM, its asymptotic time complexity is again linear in m and its space complexity is independent of m. Experiments show that the generalized CVM has comparable performance with state-of-the-art SVM and SVR implementations, but is faster and produces fewer support vectors on very large data sets.", "paper_title": "Generalized core vector machines", "paper_id": "WOS:000240511600003"}