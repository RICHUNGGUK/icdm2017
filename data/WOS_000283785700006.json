{"auto_keywords": [{"score": 0.04577010928578612, "phrase": "local_image_processing_algorithms"}, {"score": 0.037453099874188406, "phrase": "redundant_computations"}, {"score": 0.00481495049065317, "phrase": "high-performance_image_processing"}, {"score": 0.004624751696958501, "phrase": "new_performance_improvement_technique"}, {"score": 0.004442032546224076, "phrase": "hardware_implementations"}, {"score": 0.004209539728590977, "phrase": "memoization_techniques"}, {"score": 0.004016072233242585, "phrase": "data_redundancy"}, {"score": 0.0039624406239057944, "phrase": "image_processing"}, {"score": 0.0033946556965877873, "phrase": "similar_neighborhoods"}, {"score": 0.0030688220103201836, "phrase": "optimized_architecture"}, {"score": 0.0029473940028924748, "phrase": "window_memoization_technique"}, {"score": 0.002811770047652563, "phrase": "high_speedups"}, {"score": 0.0027187231747900814, "phrase": "hardware_area"}, {"score": 0.002558909812664716, "phrase": "conventional_performance_improvement_techniques"}, {"score": 0.0023762535034673017, "phrase": "window_memoization"}, {"score": 0.0023287359930308864, "phrase": "kirsch_edge_detector"}, {"score": 0.002297585503415527, "phrase": "median_filter"}, {"score": 0.002251637552201872, "phrase": "typical_speedup_factor"}, {"score": 0.0021049977753042253, "phrase": "conventional_optimization_techniques"}], "paper_keywords": ["Computational redundancy", " Memoization", " Reuse", " High-performance and efficient real-time image processing", " Hardware architecture"], "paper_abstract": "This work presents a new performance improvement technique, window memoization, for hardware implementations of local image processing algorithms. Window memoization combines the memoization techniques proposed in software and hardware with data redundancy in image processing to improve the efficiency of local image processing algorithms implemented in hardware. It minimizes the number of redundant computations performed on an image by identifying similar neighborhoods of pixels in the image and skipping the redundant computations. We have developed an optimized architecture in hardware that embodies the window memoization technique. Our hardware design for window memoization achieves high speedups with an overhead in hardware area that is significantly less than that of the conventional performance improvement techniques. As case studies in hardware, we have applied window memoization to the Kirsch edge detector and median filter. The typical speedup factor in hardware is 1.58 with 40% less hardware in comparison to conventional optimization techniques.", "paper_title": "Window memoization: an efficient hardware architecture for high-performance image processing", "paper_id": "WOS:000283785700006"}