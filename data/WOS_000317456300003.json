{"auto_keywords": [{"score": 0.033556290154998364, "phrase": "date_system"}, {"score": 0.00481495049065317, "phrase": "efficient_compilation"}, {"score": 0.004766388573192505, "phrase": "domain_abstractions"}, {"score": 0.004718314112245913, "phrase": "reconfigurable_computers"}, {"score": 0.004507956809509809, "phrase": "fpgas"}, {"score": 0.00441738161338662, "phrase": "hpc_systems"}, {"score": 0.004263336444795021, "phrase": "low_level_code"}, {"score": 0.0037746771370555546, "phrase": "reconfigurable_accelerators"}, {"score": 0.0036245239349157236, "phrase": "domain_specific_abstractions"}, {"score": 0.0035880369975595777, "phrase": "fpga"}, {"score": 0.003569763795153386, "phrase": "based_accelerators"}, {"score": 0.00349803055484394, "phrase": "generic_programming"}, {"score": 0.0033588449972778004, "phrase": "main_concepts"}, {"score": 0.0032746712603464235, "phrase": "template_expansions"}, {"score": 0.0030655302236416502, "phrase": "individual_kernels"}, {"score": 0.0028263192354046245, "phrase": "complete_system_architecture"}, {"score": 0.0027414948679658816, "phrase": "six_kernels"}, {"score": 0.002686360550456695, "phrase": "individual_kernel_generation"}, {"score": 0.0026457367614424777, "phrase": "proposed_system"}, {"score": 0.002271725588755076, "phrase": "complete_system"}, {"score": 0.002226017732566121, "phrase": "template_architecture"}, {"score": 0.002203509076886664, "phrase": "reconfigurable_accelerator_designs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Domain abstractions", " Meta-programming", " Templates", " HLL", " HDL", " FPGA"], "paper_abstract": "Past research has addressed the issue of using FPGAs as accelerators for HPC systems. Such research has identified that writing low level code for the generation of an efficient, portable and scalable architecture is challenging. We propose to increase the level of abstraction in order to help developers of reconfigurable accelerators deal with these three key issues. Our approach implements domain specific abstractions for FPGA based accelerators using techniques from generic programming. In this paper we explain the main concepts behind our system to Design Accelerators by Template Expansions (DATE). The DATE system can be effectively used for expanding individual kernels of an application and also for the generation of interfaces between various kernels to implement a complete system architecture. We present evaluations for six kernels as examples of individual kernel generation using the proposed system. Our evaluations are mainly intended to provide a proof-of-concept. We also show the usage of the DATE system for integration of various kernels to build a complete system based on a Template Architecture for Reconfigurable Accelerator Designs (TARCAD). (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A template system for the efficient compilation of domain abstractions onto reconfigurable computers", "paper_id": "WOS:000317456300003"}