{"auto_keywords": [{"score": 0.05007674067847597, "phrase": "synchronous_gpu_applications"}, {"score": 0.04291641516267786, "phrase": "cuda"}, {"score": 0.03600573477359792, "phrase": "unstructured_control_flow"}, {"score": 0.0046429592670444945, "phrase": "important_classes"}, {"score": 0.004430784015995566, "phrase": "commercially_available_graphics_processing_units"}, {"score": 0.004250302819248558, "phrase": "real_workloads"}, {"score": 0.004055998173160551, "phrase": "opencl._broadly"}, {"score": 0.004014035333627087, "phrase": "control_flow"}, {"score": 0.003693533648584145, "phrase": "divergent_control"}, {"score": 0.00331125524068286, "phrase": "unstructured_control"}, {"score": 0.003030878461274962, "phrase": "unstructured-to-structured_control"}, {"score": 0.002847339938387273, "phrase": "large_class"}, {"score": 0.0028178463431115562, "phrase": "gpu_applications"}, {"score": 0.002422890839801611, "phrase": "jit_compiler"}, {"score": 0.0022879728308318205, "phrase": "gpu_devices"}, {"score": 0.002171836484200008, "phrase": "important_capability"}, {"score": 0.0021493248730171132, "phrase": "execution_portability"}, {"score": 0.0021049977753042253, "phrase": "gpu_accelerators"}], "paper_keywords": ["branch divergence", " GPU", " unstructured control flow"], "paper_abstract": "In this paper we identify important classes of program control flows in applications targeted to commercially available graphics processing units (GPUs) and characterize their presence in real workloads such as those that occur in CUDA and OpenCL. Broadly, control flow can be characterized as structured or unstructured. It is shown that most existing techniques for handling divergent control in bulk synchronous GPU applications handle structured control flow efficiently, some are incapable of executing unstructured control flow directly, and none handles unstructured control flow efficiently. An approach to reduce the impact of this problem is provided. An unstructured-to-structured control flow transformation for CUDA kernels is implemented and its performance impact on a large class of GPU applications is assessed. The results quantify the importance of improving support for programs with unstructured control flow on GPUs. The transformation can also be used in a JIT compiler pass to execute programs with unstructured control flow on the GPU devices that do not support unstructured control flow. This is an important capability for execution portability of applications using GPU accelerators.", "paper_title": "Characterization and transformation of unstructured control flow in bulk synchronous GPU applications", "paper_id": "WOS:000304698700009"}