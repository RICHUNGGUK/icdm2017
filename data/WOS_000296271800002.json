{"auto_keywords": [{"score": 0.049474472243262034, "phrase": "flexible_manufacturing_systems"}, {"score": 0.04858132305104682, "phrase": "petri_nets"}, {"score": 0.03622093346849978, "phrase": "necessary_siphon"}, {"score": 0.00481495049065317, "phrase": "deadlock_control"}, {"score": 0.00443308765153716, "phrase": "deadlock_states"}, {"score": 0.004349337717774093, "phrase": "deadlock_problems"}, {"score": 0.004055511503825102, "phrase": "novel_deadlock_prevention_policy"}, {"score": 0.004004288707996139, "phrase": "petri"}, {"score": 0.003928572641266562, "phrase": "siphon_extraction"}, {"score": 0.003757480190200645, "phrase": "siphon_extraction_algorithm"}, {"score": 0.0036864465771943933, "phrase": "maximal_deadly_marked_siphon"}, {"score": 0.00337224813954299, "phrase": "classified_places"}, {"score": 0.0032666255024083983, "phrase": "deadlock_prevention_policy"}, {"score": 0.003204841443605308, "phrase": "proper_control_place"}, {"score": 0.002912963877144772, "phrase": "controlled_system"}, {"score": 0.0026986685585382347, "phrase": "necessary_siphons"}, {"score": 0.0026140878612307536, "phrase": "proper_cps"}, {"score": 0.002564613964408878, "phrase": "proposed_deadlock_prevention_policy"}, {"score": 0.0025160740422447837, "phrase": "complete_siphon_enumeration"}, {"score": 0.0024527767211457046, "phrase": "small_number"}, {"score": 0.002421777110664578, "phrase": "cps"}, {"score": 0.0023309080951251335, "phrase": "liveness-enforcing_supervisor"}, {"score": 0.002286781334850213, "phrase": "simple_structure"}, {"score": 0.0022434880661725493, "phrase": "closely_related_approaches"}, {"score": 0.0021319959284827896, "phrase": "case_study"}], "paper_keywords": ["deadlock prevention", " Petri net", " flexible manufacturing system", " siphon", " liveness-enforcing supervisor"], "paper_abstract": "Siphons can be used to characterise deadlock states and solve deadlock problems in Petri nets that model flexible manufacturing systems. This article presents a novel deadlock prevention policy for Petri nets using siphon extraction. At each iteration, a siphon extraction algorithm finds a maximal deadly marked siphon, classifies the places in it, and decides a necessary siphon from the classified places. Accordingly, the deadlock prevention policy adds a proper control place (CP) to make each necessary siphon marked or max-controlled until the controlled system is live. By adopting the classification of places, deciding necessary siphons, and adding the proper CPs, the proposed deadlock prevention policy avoids a complete siphon enumeration, adds a small number of CPs, and leads to a liveness-enforcing supervisor with a simple structure compared with closely related approaches in the literature. Finally, a case study shows its appealing behavioural permissiveness.", "paper_title": "Siphon extraction for deadlock control in flexible manufacturing systems by using Petri nets", "paper_id": "WOS:000296271800002"}