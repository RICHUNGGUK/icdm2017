{"auto_keywords": [{"score": 0.048186916426953504, "phrase": "finite_fields"}, {"score": 0.010332646891009906, "phrase": "square_roots"}, {"score": 0.004814958118695131, "phrase": "atkin"}, {"score": 0.004502126088469323, "phrase": "s._muller"}, {"score": 0.004412285905508977, "phrase": "generalized_atkin_algorithm"}, {"score": 0.0036553070575015344, "phrase": "simple_improvement"}, {"score": 0.0035344448639851827, "phrase": "improved_algorithm"}, {"score": 0.0022215160785078797, "phrase": "frobenius_map"}, {"score": 0.0021917966722180132, "phrase": "normal_basis_representation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["square roots", " finite field arithmetic", " computational complexity", " cryptography"], "paper_abstract": "Recently, S. Muller developed a generalized Atkin algorithm for computing square roots, which requires two exponentiations in finite fields GF(q) when q = 9 (mod 16). In this paper, we present a simple improvement to it and the improved algorithm requires only one exponentiation for half of squares in finite fields GF(q) when q = 9 (mod 16). Furthermore. in finite fields GF(p(m)), where p = 9 (mod 16) and in is odd, we reduce the complexity of the algorithm from O(m(3) log(3) p) to O(m(2) log(2) p(log m + log p)) using the Frobenius map and normal basis representation. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Improved generalized Atkin algorithm for computing square roots in finite fields", "paper_id": "WOS:000235725400001"}