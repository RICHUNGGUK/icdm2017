{"auto_keywords": [{"score": 0.03767880802723059, "phrase": "adm"}, {"score": 0.02902595811272287, "phrase": "model_transformations"}, {"score": 0.00481495049065317, "phrase": "model-driven_approach"}, {"score": 0.004652016085325825, "phrase": "model-driven_development"}, {"score": 0.004463723624910583, "phrase": "appropriate_paradigm"}, {"score": 0.0044026610128451256, "phrase": "web_development"}, {"score": 0.004109600767747015, "phrase": "implementation_technologies"}, {"score": 0.0039431758381711125, "phrase": "permanent_evolution"}, {"score": 0.0036553070575015344, "phrase": "mdd_process"}, {"score": 0.003531474887552889, "phrase": "ariadne_development_method"}, {"score": 0.0031193028729331667, "phrase": "core_constructs"}, {"score": 0.0029722900280316216, "phrase": "meta-meta-model_specification"}, {"score": 0.0026616868981501006, "phrase": "consistency_checking"}, {"score": 0.0026252106881752067, "phrase": "model_validation"}, {"score": 0.002416589459425828, "phrase": "case_tool"}, {"score": 0.0023670716500937667, "phrase": "ariadnetool"}, {"score": 0.002302619021497886, "phrase": "different_abstract_levels"}, {"score": 0.0021342613107011624, "phrase": "light_prototypes"}, {"score": 0.0021049977753042253, "phrase": "different_web_implementation_technologies"}], "paper_keywords": ["web engineering", " model-driven development", " meta-models", " model transformations", " light prototypes"], "paper_abstract": "Model-Driven Development (MDD) is an appropriate paradigm for web development since interoperability and flexibility are required to cope with implementation technologies and functionalities that are in permanent evolution. In this paper, we describe and illustrate the MDD process of the ADM (Ariadne Development Method) hypermedia/web engineering method. The two cornerstones of the ADM are the Labyrinth++ meta-meta-model, which formalizes the core constructs used within all the design meta-models, and the meta-meta-model specification as an ontology that provides semantics and reasoning not only for model transformations but also for consistency checking and model validation. These features have been essential in the development of a CASE tool, called AriadneTool that supports the different abstract levels of modeling, model transformations as well as the generation of light prototypes in different web implementation technologies.", "paper_title": "From requirements to implementations: a model-driven approach for web development", "paper_id": "WOS:000250383400011"}