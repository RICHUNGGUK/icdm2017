{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "block-edit_problems"}, {"score": 0.00456020621016909, "phrase": "edit_distance"}, {"score": 0.004462105963334103, "phrase": "block-edit_operations"}, {"score": 0.004272164161788242, "phrase": "human_natural_edit_behaviors"}, {"score": 0.004069744432470446, "phrase": "np"}, {"score": 0.003980531478122155, "phrase": "block_moves"}, {"score": 0.003512308265830794, "phrase": "polynomial-time_optimization_algorithms"}, {"score": 0.003362660648932244, "phrase": "restricted_variations"}, {"score": 0.003272375502853897, "phrase": "character_insertions"}, {"score": 0.003236941658990869, "phrase": "character_deletions"}, {"score": 0.003201890266327127, "phrase": "block_copies"}, {"score": 0.003167217223469026, "phrase": "block_deletions"}, {"score": 0.0030157628075954588, "phrase": "different_measuring_functions"}, {"score": 0.0026033756286033285, "phrase": "minimum_block_edit_distances"}, {"score": 0.0024923577071656014, "phrase": "dynamic_programming"}], "paper_keywords": ["Design of algorithms", " String edit distance", " Block-edit", " Similarity", " Dynamic programming"], "paper_abstract": "In this paper, we focus on the edit distance between two given strings where block-edit operations are allowed and better fitting to the human natural edit behaviors. Previous results showed that this problem is NP-hard when block moves are allowed. Various approximations to this problem have been proposed in recent years. However, this problem can be solved by the polynomial-time optimization algorithms if some reasonable restructions are applied The restricted variations which we consider involve character insertions, character deletions, block copies and block deletions In this paper. three problems are defined with different measuring functions, which are P(EIS, C), P(EI, L) and P(EI, N) Then we show that with some preprocessing, the minimum block edit distances of these three problems can be obtained by dynamic programming in O(nm), O(nm log m) and O(nm(2)) time, respectively. where n and m are the lengths of the two input strings. (C) 2009 Elsevier Inc All rights reserved", "paper_title": "Efficient algorithms for the block-edit problems", "paper_id": "WOS:000275591500001"}