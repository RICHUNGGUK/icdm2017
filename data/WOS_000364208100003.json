{"auto_keywords": [{"score": 0.04926219622874723, "phrase": "pcm"}, {"score": 0.03895264894286582, "phrase": "fine-grained_writes"}, {"score": 0.012724083803369682, "phrase": "pcm_cells"}, {"score": 0.009224842376667262, "phrase": "bloom_filters"}, {"score": 0.00785160447124503, "phrase": "proposed_method"}, {"score": 0.00481495049065317, "phrase": "dynamic_wear_leveling_for_phase-change_memories_with_endurance_variations"}, {"score": 0.004765482708043842, "phrase": "change_memory"}, {"score": 0.004668059458774745, "phrase": "write_endurance_problem"}, {"score": 0.004541238786717793, "phrase": "endurance_variations"}, {"score": 0.0044483793824152944, "phrase": "advanced_process_technology"}, {"score": 0.004238993477742183, "phrase": "scaling_benefits"}, {"score": 0.004209893377338457, "phrase": "dynamic_random_access_memory"}, {"score": 0.004181108074853161, "phrase": "ram"}, {"score": 0.003970439654470374, "phrase": "memory_addresses"}, {"score": 0.0039431758381711125, "phrase": "pcm_physical_addresses"}, {"score": 0.0037834649508375544, "phrase": "effective_lifetime"}, {"score": 0.0036052633308076933, "phrase": "fine-grained_wear_leveling"}, {"score": 0.003483120583663528, "phrase": "previous_wear_leveling_approaches"}, {"score": 0.003296212583539166, "phrase": "high_data_copy"}, {"score": 0.00307657476125683, "phrase": "write_frequency"}, {"score": 0.0029722900280316216, "phrase": "dynamic_wear_leveling_method"}, {"score": 0.0027837615811247963, "phrase": "low-cost_write_counters"}, {"score": 0.0026525207297080937, "phrase": "hot_data"}, {"score": 0.0026342827320931937, "phrase": "weak_cells"}, {"score": 0.002544951823639408, "phrase": "dynamic_bloom_filter_management"}, {"score": 0.0024586427394152196, "phrase": "counter_thresholds"}, {"score": 0.0024333239726872604, "phrase": "hot-cold_address_lists"}, {"score": 0.0023346234464901978, "phrase": "hardware_implementation"}, {"score": 0.002302619021497886, "phrase": "small_amount"}, {"score": 0.002286781334850213, "phrase": "pcm_capacity_overhead"}, {"score": 0.0021940118003312397, "phrase": "pcm_device"}, {"score": 0.0021342613107011624, "phrase": "existing_methods"}, {"score": 0.0021049977753042253, "phrase": "significant_evs"}], "paper_keywords": ["Bloom filter", " endurance variation (EV)", " hot-cold list (HCL)", " phase change memory (PCM)", " wear leveling"], "paper_abstract": "Phase change memory (PCM) has a write endurance problem. This problem is exacerbated due to endurance variations (EVs) when using advanced process technology (e.g., sub-20 nm), where PCM is expected to provide scaling benefits over dynamic random access memory (RAM). Wear leveling can solve this problem by dynamically changing the mapping from memory addresses to PCM physical addresses such that all PCM cells are evenly written, thereby extending the effective lifetime of such devices. PCM permits fine-grained writes, i.e., even bit level updates are allowed. To allow fine-grained wear leveling, this capability must be exploited. However, previous wear leveling approaches do not fully exploit fine-grained writes since fine-grained writes cause them to suffer from high data copy (called swap) overhead for address remapping, and/or high area and runtime overhead for the management of write frequency and address mapping information. This paper proposes a dynamic wear leveling method for PCMs that addresses all of these issues. The method: 1) uses bloom filters to enable low-cost write counters for fine-grained writes and 2) exploits the EV of PCM cells to avoid mapping hot data onto weak cells. To improve the effectiveness of the bloom filters, dynamic bloom filter management (write counts, hash functions, and write counter thresholds) and hot-cold address lists are used. The proposed method was evaluated using simulations and a hardware implementation. Using a small amount of PCM capacity overhead (0.3%), the proposed method extended the lifetime of a PCM device by 2.8-4.6 times over the existing methods when there were significant EVs.", "paper_title": "Dynamic Wear Leveling for Phase-Change Memories With Endurance Variations", "paper_id": "WOS:000364208100003"}