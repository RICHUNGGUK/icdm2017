{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "elsevier"}, {"score": 0.00481495049065317, "phrase": "weighted_graphs"}, {"score": 0.004620093797504386, "phrase": "efficient_and_versatile_segmentation_tool"}, {"score": 0.004372442291178139, "phrase": "disjoint_catchment_basins"}, {"score": 0.0041666157975446564, "phrase": "node_or_edge_weighted_graphs"}, {"score": 0.003731673223879279, "phrase": "catchment_zones"}, {"score": 0.0032287289440915187, "phrase": "first_part"}, {"score": 0.0029114187110123105, "phrase": "flooding_graph"}, {"score": 0.0025014259919355453, "phrase": "second_part"}, {"score": 0.0023507916951658455, "phrase": "possible_trajectories"}, {"score": 0.0021940118003312397, "phrase": "watershed_partitions"}], "paper_keywords": ["Watershed", " Weighted graphs", " Catchment zone", " Catchment basin", " Flooding paths", " Lexicographic order"], "paper_abstract": "The watershed is an efficient and versatile segmentation tool, as it partitions the images into disjoint catchment basins. We study the watershed on node or edge weighted graphs. We do not aim at constructing a partition of the nodes but consider the catchment zones, i.e., the attraction zones of a drop of water. Often, such zones largely overlap. In a first part, we show how to derive from a node or edge weighted graph a flooding graph with the same trajectories of a drop of water, whether one considers its node weights alone or its edge weights alone. In a second part we show how to reduce the number of possible trajectories of a drop of water in order to generate watershed partitions. (C) 2014 Elsevier B. V. All rights reserved.", "paper_title": "Watersheds on weighted graphs", "paper_id": "WOS:000339999200008"}