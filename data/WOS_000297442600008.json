{"auto_keywords": [{"score": 0.042073747632549105, "phrase": "p-border_arrays"}, {"score": 0.008713768692145006, "phrase": "parameterized_pattern"}, {"score": 0.007049952075465761, "phrase": "linear_time_algorithm"}, {"score": 0.006859648824741702, "phrase": "valid_p-border_array"}, {"score": 0.0046526806928044485, "phrase": "renaming_bijection"}, {"score": 0.004359216541892805, "phrase": "parameterized_border_array"}, {"score": 0.004226713291503426, "phrase": "parameterized_version"}, {"score": 0.004183442897207925, "phrase": "standard_border_array"}, {"score": 0.0036095967013657906, "phrase": "binary_parameterized_strings"}, {"score": 0.0030298312658908855, "phrase": "binary_parameter_alphabet"}, {"score": 0.0029680398526914565, "phrase": "larger_alphabet"}, {"score": 0.002790103629701475, "phrase": "-_space_algorithm"}, {"score": 0.002622806755354039, "phrase": "best_previously_known_solution"}, {"score": 0.0025429488129788077, "phrase": "n-th_bell_number"}, {"score": 0.002262547875929931, "phrase": "unbounded_alphabet"}, {"score": 0.0022011873582212047, "phrase": "b-n"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["String matching", " Parameterized pattern matching", " Reverse engineering", " Enumeration algorithms"], "paper_abstract": "The parameterized pattern matching problem is to check if there exists a renaming bijection on the alphabet with which a given pattern can be transformed into a substring of a given text. A parameterized border array (p-border array) is a parameterized version of a standard border array, and we can efficiently solve the parameterized pattern matching problem using p-border arrays. In this paper, we present a linear time algorithm to verify if a given integer array is a valid p-border array for a binary alphabet. We also show a linear time algorithm to compute all binary parameterized strings sharing a given p-border array. In addition, we give an algorithm which computes all p-border arrays of length at most n, where n is a given threshold. This algorithm runs in O(B-2(n)) time, where B-2(n) is the number of all p-border arrays of length n for a binary parameter alphabet. The problems with a larger alphabet are much more difficult. Still, we present an O(n(1.5)) - time O(n) - space algorithm to verify if a given integer array of length n is a valid p-border array for an unbounded alphabet. The best previously known solution to this task takes time proportional to the n-th Bell number 1/e Sigma(infinity)(k=0) k(n)/k(l), and hence our algorithm is much more efficient. Also, we show that it is possible to enumerate all p-border arrays of length at most n for an unbounded alphabet in O(B(n)n(2.5)) time, where B-n denotes the number of p-border arrays of length n. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Verifying and enumerating parameterized border arrays", "paper_id": "WOS:000297442600008"}