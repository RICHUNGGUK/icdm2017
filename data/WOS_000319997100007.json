{"auto_keywords": [{"score": 0.04777760737094776, "phrase": "pattern-based_design"}, {"score": 0.013772287570565658, "phrase": "design_patterns"}, {"score": 0.009104622751615502, "phrase": "pattern-based_designs"}, {"score": 0.008713815744320117, "phrase": "uml"}, {"score": 0.008152733244909479, "phrase": "specific_patterns"}, {"score": 0.006950662782187824, "phrase": "conformance_process"}, {"score": 0.005660351300613714, "phrase": "uml_profiles"}, {"score": 0.005571582404060582, "phrase": "improved_design_method"}, {"score": 0.005294859851041799, "phrase": "uml_pattern-based_designs"}, {"score": 0.0051480823668490555, "phrase": "picup_design_method"}, {"score": 0.00480649449973134, "phrase": "design_pattern_metamodel-level_constraints"}, {"score": 0.004764435715755502, "phrase": "software_evolution"}, {"score": 0.004747714939490445, "phrase": "software_maintenance"}, {"score": 0.004425299304063172, "phrase": "corresponding_design_documents"}, {"score": 0.0043481611772332495, "phrase": "similar_level"}, {"score": 0.004294962474996283, "phrase": "initial_designer"}, {"score": 0.004235447875277809, "phrase": "picup_method"}, {"score": 0.004190501542258659, "phrase": "software_design_process"}, {"score": 0.00413194953817643, "phrase": "object-oriented_community"}, {"score": 0.003996133359116611, "phrase": "design_maintenance_phase"}, {"score": 0.00391954484074477, "phrase": "initial_design"}, {"score": 0.0038715697646612766, "phrase": "original_patterns"}, {"score": 0.0037840197586401494, "phrase": "systematic_process"}, {"score": 0.0037508743235608872, "phrase": "defects_discovery"}, {"score": 0.00371148138781691, "phrase": "deep_and_correct_knowledge"}, {"score": 0.003621160116056119, "phrase": "human_experts"}, {"score": 0.0035579889785989738, "phrase": "correct_designs"}, {"score": 0.003545487140867762, "phrase": "software_design_evolution"}, {"score": 0.003526816409980084, "phrase": "serious_problems"}, {"score": 0.003514423718141359, "phrase": "later_software_development"}, {"score": 0.0033749889869455407, "phrase": "strong_need"}, {"score": 0.0033572130837348623, "phrase": "systematic_design"}, {"score": 0.003275484813298105, "phrase": "pattern-based_software_design"}, {"score": 0.0032410683344688625, "phrase": "conventional_uml_design_methods"}, {"score": 0.0032013710938940424, "phrase": "pattern-based_design_conformance"}, {"score": 0.003101503914610488, "phrase": "design_method"}, {"score": 0.00304737045343781, "phrase": "uml_pattern-based_design_maintenance"}, {"score": 0.002900756392266265, "phrase": "formal_specification"}, {"score": 0.002885471017496998, "phrase": "design_pattern"}, {"score": 0.00285514078912911, "phrase": "main_part"}, {"score": 0.002825128469458473, "phrase": "metamodel-level_uml_design_constraints"}, {"score": 0.0027954307451910874, "phrase": "metamodel-level_object_constraint_language_design_constraints"}, {"score": 0.0027660443371695024, "phrase": "uml_class_diagram"}, {"score": 0.0027514668612638074, "phrase": "corresponding_dpups"}, {"score": 0.002679720723864212, "phrase": "original_designs"}, {"score": 0.002670296619878048, "phrase": "pattern-related_information"}, {"score": 0.002651547460031022, "phrase": "stereotype_notations"}, {"score": 0.0025915147359879616, "phrase": "structural_conformance_checking"}, {"score": 0.0025462598594116373, "phrase": "assessment_tool"}, {"score": 0.0025328377393370642, "phrase": "major_contributions"}, {"score": 0.0024798513107882956, "phrase": "extended_uml_profile"}, {"score": 0.0024194297576300796, "phrase": "dpups"}, {"score": 0.002410918838071782, "phrase": "naming_conventions"}, {"score": 0.002381365139274329, "phrase": "design_constraints"}, {"score": 0.0023563212280243682, "phrase": "correct_changes"}, {"score": 0.002327435240126805, "phrase": "explanatory_type_case_studies"}, {"score": 0.0022507989506447413, "phrase": "case_study_questionnaires"}, {"score": 0.0022389308000757037, "phrase": "pattern_defects"}, {"score": 0.00217284779477444, "phrase": "structural_conformance"}, {"score": 0.0021537846171072335, "phrase": "corresponding_design_patterns"}, {"score": 0.0021386543060032954, "phrase": "corrective_design_maintenance"}, {"score": 0.0021311289708605447, "phrase": "software_systems"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["design pattern", " UML", " software maintenance"], "paper_abstract": "Software maintenance including design is difficult because it is usually performed on someone else's work over a period of time. Maintaining a pattern-based design is especially much more difficult when the information on specific patterns that have been used are not available in the corresponding design documents. Also, finding a maintainer who has a similar level of knowledge on specific patterns that the initial designer had is not easy. Pattern-based design, the use of design patterns during the software design process, has become widely used in the object-oriented community because of its many benefits such as its reuse. However, the defects in pattern-based design can be introduced during the design maintenance phase when the changes are made to the requirements and the initial design, but the conformance to the original patterns is neglected. This conformance process is laborious and time consuming; no systematic process exists to guide the defects discovery and maintenance. Also, deep and correct knowledge of design patterns and their characteristics are required because this process is conducted by human experts. Failure to follow this conformance process and to maintain correct designs during software design evolution may cause serious problems in later software development and maintenance stages by not providing the benefits of pattern-based design that would have been possible if followed correctly. There is a strong need of a systematic design and maintenance method for preventing defects in design patterns introduced during the evolution of pattern-based software design and its maintenance. Because conventional UML design methods do not provide such systematic ways of assessing pattern-based design conformance to the evolutionary changes, we have developed the pattern instance changes with UML profiles (PICUP) design method, which is an improved design method for perfective and corrective UML pattern-based design maintenance and assessment. Design pattern in UML profiles (DPUP) is developed for the use of instantiation, maintenance, and assessment of UML pattern-based designs to support the formal specification of a design pattern. DPUPs, as the main part of the PICUP design method, provide metamodel-level UML design constraints using UML stereotype notations and metamodel-level Object Constraint Language design constraints. Assessment of pattern-based designs in UML class diagram with the corresponding DPUPs enforces maintainers to make necessary and correct changes to keep the principles of the original designs. Pattern-related information is annotated using stereotype notations to help assess pattern-based designs when changes are made. Furthermore, the structural conformance checking of a given UML pattern-based design can be automated by using the assessment tool. The major contributions of this paper are: (i) specifying design patterns using extended UML profile; (ii) providing a means of how to instantiate pattern-based designs from DPUPs with naming conventions; and (iii) providing design constraints for maintaining pattern-based design to guide correct changes of a given design in PICUP method. Explanatory type case studies were performed to better understand and evaluate the effectiveness of the PICUP design method with DPUPs. Answers to the case study questionnaires and the pattern defects discovered from the case studies support the hypothesis that the PICUP method is an improved design method that ensures structural conformance of UML pattern-based designs to the corresponding design patterns during perfective and corrective design maintenance for software systems. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "UML design pattern metamodel-level constraints for the maintenance of software evolution", "paper_id": "WOS:000319997100007"}