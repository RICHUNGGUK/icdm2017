{"auto_keywords": [{"score": 0.04069634062156298, "phrase": "hbft"}, {"score": 0.00481495049065317, "phrase": "virtual_machine_synchronization"}, {"score": 0.004761850836420121, "phrase": "fault_tolerance"}, {"score": 0.004709333998298903, "phrase": "hypervisor-based_fault_tolerance"}, {"score": 0.004430629452265786, "phrase": "primary_vm"}, {"score": 0.004333443402345191, "phrase": "vm"}, {"score": 0.004261885692956071, "phrase": "high_frequency"}, {"score": 0.004076858589744185, "phrase": "emerging_approach"}, {"score": 0.004009555045206973, "phrase": "mission-critical_applications"}, {"score": 0.00392153537973826, "phrase": "virtualization_technology"}, {"score": 0.003814212645832246, "phrase": "economic_and_transparent_fault_tolerant_solution"}, {"score": 0.0035684266744407485, "phrase": "substantial_performance_overhead"}, {"score": 0.0034134024569847264, "phrase": "memory_intensive_applications"}, {"score": 0.0033015555065209865, "phrase": "in-depth_examination"}, {"score": 0.0030545815929619306, "phrase": "memory_accesses"}, {"score": 0.0030208364972341096, "phrase": "checkpointing_epochs"}, {"score": 0.002905629026254221, "phrase": "-fault_reduction"}, {"score": 0.002857605453835429, "phrase": "-fault_prediction"}, {"score": 0.002794802975530612, "phrase": "memory_tracking_mechanism"}, {"score": 0.0024732038734968567, "phrase": "software_superpage"}, {"score": 0.002418829014435841, "phrase": "large_memory_regions"}, {"score": 0.0023920904611571783, "phrase": "virtual_machines"}, {"score": 0.0021049977753042253, "phrase": "native_vm."}], "paper_keywords": ["Virtualization", " hypervisor", " checkpoint", " recovery", " fault tolerance"], "paper_abstract": "Hypervisor-based fault tolerance (HBFT), which synchronizes the state between the primary VM and the backup VM at a high frequency of tens to hundreds of milliseconds, is an emerging approach to sustaining mission-critical applications. Based on virtualization technology, HBFT provides an economic and transparent fault tolerant solution. However, the advantages currently come at the cost of substantial performance overhead during failure-free, especially for memory intensive applications. This paper presents an in-depth examination of HBFT and options to improve its performance. Based on the behavior of memory accesses among checkpointing epochs, we introduce two optimizations, read-fault reduction and write-fault prediction, for the memory tracking mechanism. These two optimizations improve the performance by 31 percent and 21 percent, respectively, for some applications. Then, we present software superpage which efficiently maps large memory regions between virtual machines (VM). Our optimization improves the performance of HBFT by a factor of 1.4 to 2.2 and achieves about 60 percent of that of the native VM.", "paper_title": "Optimizing the Performance of Virtual Machine Synchronization for Fault Tolerance", "paper_id": "WOS:000296235300005"}