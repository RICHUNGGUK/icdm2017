{"auto_keywords": [{"score": 0.028782132536311768, "phrase": "cu"}, {"score": 0.00481495049065317, "phrase": "graphics_processing_unit"}, {"score": 0.004761132425263795, "phrase": "compute_unified_device_architecture"}, {"score": 0.00462919213721188, "phrase": "recent_development"}, {"score": 0.004577440795549049, "phrase": "graphics_processing_units"}, {"score": 0.004425616928975799, "phrase": "inexpensive_high_performance_computing"}, {"score": 0.004376131419366239, "phrase": "general-purpose_applications"}, {"score": 0.004230956171850591, "phrase": "adequate_c_language"}, {"score": 0.004067635935640407, "phrase": "parallel_power"}, {"score": 0.003999578057088828, "phrase": "gpu._data_mining"}, {"score": 0.0038668462001710314, "phrase": "significant_applications"}, {"score": 0.003738502710504415, "phrase": "current_data_mining_toolkits"}, {"score": 0.0035539019235553897, "phrase": "large-scale_databases"}, {"score": 0.003266201217790818, "phrase": "fundamental_problems"}, {"score": 0.0032296377835432533, "phrase": "data_mining_algorithms"}, {"score": 0.003175556211659149, "phrase": "cuda_platform"}, {"score": 0.00305285084207725, "phrase": "irregular_pattern"}, {"score": 0.003018668521745676, "phrase": "parallel_distributed_top-k_scheme"}, {"score": 0.0029681091946289757, "phrase": "parallel_high_dimension_reduction_scheme"}, {"score": 0.0028857130140890787, "phrase": "key_role"}, {"score": 0.0027898428590137515, "phrase": "cu-apriori"}, {"score": 0.002758597251689795, "phrase": "cu-knn"}, {"score": 0.002702007392182456, "phrase": "intel"}, {"score": 0.002607527117561699, "phrase": "parallel_implementations"}, {"score": 0.0021049977753042253, "phrase": "data_mining_applications"}], "paper_keywords": ["Parallel computing", " CUDA", " Data mining", " Classification", " Clustering", " Association rules mining"], "paper_abstract": "Recent development in Graphics Processing Units (GPUs) has enabled inexpensive high performance computing for general-purpose applications. Compute Unified Device Architecture (CUDA) programming model provides the programmers adequate C language like APIs to better exploit the parallel power of the GPU. Data mining is widely used and has significant applications in various domains. However, current data mining toolkits cannot meet the requirement of applications with large-scale databases in terms of speed. In this paper, we propose three techniques to speedup fundamental problems in data mining algorithms on the CUDA platform: scalable thread scheduling scheme for irregular pattern, parallel distributed top-k scheme, and parallel high dimension reduction scheme. They play a key role in our CUDA-based implementation of three representative data mining algorithms, CU-Apriori, CU-KNN, and CU-K-means. These parallel implementations outperform the other state-of-the-art implementations significantly on a HP xw8600 workstation with a Tesla C1060 GPU and a Core-quad Intel Xeon CPU. Our results have shown that GPU + CUDA parallel architecture is feasible and promising for data mining applications.", "paper_title": "Parallel data mining techniques on Graphics Processing Unit with Compute Unified Device Architecture (CUDA)", "paper_id": "WOS:000319075500017"}