{"auto_keywords": [{"score": 0.03407262430188694, "phrase": "new_scheme"}, {"score": 0.03342375345516991, "phrase": "cbs"}, {"score": 0.02693583250489881, "phrase": "marked_improvement"}, {"score": 0.00481495049065317, "phrase": "syntactic_pattern_recognition"}, {"score": 0.0047517225918491226, "phrase": "ai-based_heuristic-search_strategies"}, {"score": 0.004418456827500267, "phrase": "corresponding_string_y"}, {"score": 0.004346020686558718, "phrase": "noisy_version"}, {"score": 0.00400119808662365, "phrase": "dictionary_h"}, {"score": 0.003948613642680196, "phrase": "generalized_levenshtein_distance"}, {"score": 0.003757480190200645, "phrase": "x_e_h."}, {"score": 0.0035519826240477444, "phrase": "x_e_h"}, {"score": 0.003493701605117701, "phrase": "edit_distances"}, {"score": 0.0034363735647539267, "phrase": "maximum_number"}, {"score": 0.0030706395717772436, "phrase": "heuristic-based_search_approach"}, {"score": 0.003030247482854539, "phrase": "well-known_beam-search"}, {"score": 0.0029608481467336177, "phrase": "ai."}, {"score": 0.002883439044844259, "phrase": "approximate_string-matching_problem"}, {"score": 0.0027803070408286158, "phrase": "new_technique"}, {"score": 0.0027346529452880585, "phrase": "benchmark_depth-first_search"}, {"score": 0.0025849489224175548, "phrase": "large_and_small_dictionaries"}, {"score": 0.002476009439388887, "phrase": "total_number"}, {"score": 0.0021049977753042253, "phrase": "large_dictionaries"}], "paper_keywords": ["approximate string matching", " artificial intelligence (AI)", " local beam search (BS)", " noisy syntactic recognition using tries", " trie-based syntactic pattern recognition (PR)"], "paper_abstract": "This paper deals with the problem of estimating, using enhanced artificial-intelligence (AI) techniques, a transmitted string X* by processing the corresponding string Y, which is a noisy version of X*. It is assumed that Y contains substitution, insertion, and deletion (SID) errors. The best estimate X+ of X* is defined as that element of a dictionary H that minimizes the generalized Levenshtein distance (GLD) D(X,Y) between X and Y, for all X E H. In this paper, it is shown how to evaluate D(X,Y) for every X E H simultaneously, when the edit distances are general and the maximum number of errors is not given a priori, and when H is stored as a trie. A new scheme called clustered beam search (CBS) is first introduced, which is a heuristic-based search approach that enhances the well-known beam-search (BS) techniques used in AI. The new scheme is then applied to the approximate string-matching problem when the dictionary is stored as a trie. The new technique is compared with the benchmark depth-first search (DFS) trie-based technique (with respect to time and accuracy) using large and small dictionaries. The results demonstrate a marked improvement of up to 75% with respect to the total number of operations needed on three benchmark dictionaries, while yielding an accuracy comparable to the optimal. Experiments are also done to show the benefits of the CBS over the BS when the search is done on the trie. The results also demonstrate a marked improvement (more than 91%) for large dictionaries.", "paper_title": "On optimizing syntactic pattern recognition using tries and AI-based heuristic-search strategies", "paper_id": "WOS:000238069200011"}