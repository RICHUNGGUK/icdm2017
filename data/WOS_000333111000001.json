{"auto_keywords": [{"score": 0.040600490254161195, "phrase": "extreme-scale_machines"}, {"score": 0.004756805752518494, "phrase": "extreme-scale_event_tracing"}, {"score": 0.004558748120167778, "phrase": "vital_component"}, {"score": 0.004395532072377065, "phrase": "parallel_applications"}, {"score": 0.004342430078306461, "phrase": "event_tracing"}, {"score": 0.004263972370406983, "phrase": "principal_ingredient"}, {"score": 0.0037301606780397456, "phrase": "captured_events"}, {"score": 0.0035965032173588753, "phrase": "additional_data"}, {"score": 0.0035100601949451028, "phrase": "parallel_file_system"}, {"score": 0.0029422942175866057, "phrase": "log_data"}, {"score": 0.0028367868542874737, "phrase": "storage_system"}, {"score": 0.0027019561451518768, "phrase": "underlying_file_system"}, {"score": 0.0025892330566358503, "phrase": "sophisticated_write_buffering_capability"}, {"score": 0.0023776663326426613, "phrase": "vampir"}, {"score": 0.0023063614119692476, "phrase": "new_capabilities"}, {"score": 0.002183347623351868, "phrase": "maximum_traced_application_size"}], "paper_keywords": ["Event tracing", " I/O forwarding", " Atomic append"], "paper_abstract": "Programming development tools are a vital component for understanding the behavior of parallel applications. Event tracing is a principal ingredient to these tools, but new and serious challenges place event tracing at risk on extreme-scale machines. As the quantity of captured events increases with concurrency, the additional data can overload the parallel file system and perturb the application being observed. In this work we present a solution for event tracing on extreme-scale machines. We enhance an I/O forwarding software layer to aggregate and reorganize log data prior to writing to the storage system, significantly reducing the burden on the underlying file system. Furthermore, we introduce a sophisticated write buffering capability to limit the impact. To validate the approach, we employ the Vampir tracing toolset using these new capabilities. Our results demonstrate that the approach increases the maximum traced application size by a factor of 5x to more than 200,000 processes.", "paper_title": "Optimizing I/O forwarding techniques for extreme-scale event tracing", "paper_id": "WOS:000333111000001"}