{"auto_keywords": [{"score": 0.04897469322900726, "phrase": "grid_computing"}, {"score": 0.00481495049065317, "phrase": "data-intensive_scheduling"}, {"score": 0.004595356579614969, "phrase": "computer_resources"}, {"score": 0.004324723240308028, "phrase": "grid_data"}, {"score": 0.004108161406159407, "phrase": "large-scale_data"}, {"score": 0.003957477564354679, "phrase": "huge_amounts"}, {"score": 0.0038301525703886585, "phrase": "large_number"}, {"score": 0.0037592362369401546, "phrase": "data_grid_computing"}, {"score": 0.003689628075766217, "phrase": "independent_tasks"}, {"score": 0.003604421041893448, "phrase": "massive_distributed_data_sets"}, {"score": 0.0034884152484429207, "phrase": "different_resources"}, {"score": 0.003407839062159497, "phrase": "completion_time"}, {"score": 0.0032219438233946312, "phrase": "appropriate_computing_resources"}, {"score": 0.0030891871245908665, "phrase": "appropriate_storage_resources"}, {"score": 0.002787181295054319, "phrase": "storage_resources"}, {"score": 0.0027100527874262446, "phrase": "computing_resources"}, {"score": 0.002456486927713543, "phrase": "parallel_tabu_search"}, {"score": 0.002422249273477746, "phrase": "parallel_genetic_algorithm"}, {"score": 0.0023662411481713682, "phrase": "proposed_algorithm"}, {"score": 0.0022161977759646693, "phrase": "simulation_results"}, {"score": 0.0021750990136123367, "phrase": "proposed_approach"}, {"score": 0.0021347607855562102, "phrase": "good_choice"}, {"score": 0.0021049977753042253, "phrase": "large_data_grid_applications"}], "paper_keywords": ["data grid", " task scheduling", " tabu search", " genetic algorithms", " parallelism"], "paper_abstract": "Grid computing is the combination of computer resources in a loosely coupled, heterogeneous, and geographically dispersed environment. Grid data are the data used in grid computing, which consists of large-scale data-intensive applications, producing and consuming huge amounts of data, distributed across a large number of machines. Data grid computing composes sets of independent tasks each of which require massive distributed data sets that may each be replicated on different resources. To reduce the completion time of the application and improve the performance of the grid, appropriate computing resources should be selected to execute the tasks and appropriate storage resources selected to serve the files required by the tasks. So the problem can be broken into two sub-problems: selection of storage resources and assignment of tasks to computing resources. This paper proposes a scheduler, which is broken into three parts that can run in parallel and uses both parallel tabu search and a parallel genetic algorithm. Finally, the proposed algorithm is evaluated by comparing it with other related algorithms, which target minimizing makespan. Simulation results show that the proposed approach can be a good choice for scheduling large data grid applications.", "paper_title": "A PTS-PGATS based approach for data-intensive scheduling in data grids", "paper_id": "WOS:000297646300014"}