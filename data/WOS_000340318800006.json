{"auto_keywords": [{"score": 0.048839643896770986, "phrase": "process_models"}, {"score": 0.00481495049065317, "phrase": "business_process_models"}, {"score": 0.004773040022691547, "phrase": "automated_process_discovery_techniques"}, {"score": 0.004568871736067739, "phrase": "existing_techniques"}, {"score": 0.004392565073466714, "phrase": "relatively_small_or_regular_logs"}, {"score": 0.004316396683332752, "phrase": "spaghetti-like_and_sometimes_inaccurate_models"}, {"score": 0.004204602964512469, "phrase": "high_variability"}, {"score": 0.004149792080414689, "phrase": "previous_work"}, {"score": 0.0041136473765874815, "phrase": "trace_clustering"}, {"score": 0.0038692638652494697, "phrase": "automatically_discovered_process_models"}, {"score": 0.0033489371483830153, "phrase": "business_process"}, {"score": 0.0032621183241997777, "phrase": "all-encompassing_model"}, {"score": 0.003108735847242537, "phrase": "unacceptably_high_complexity"}, {"score": 0.00308163068747474, "phrase": "low_fitness"}, {"score": 0.002949598537993663, "phrase": "two-way_divide"}, {"score": 0.0028857130140890787, "phrase": "process_discovery_technique"}, {"score": 0.002835599469639296, "phrase": "discovered_process_models"}, {"score": 0.00266693888510356, "phrase": "subprocess_extraction"}, {"score": 0.0025863988422430797, "phrase": "controlled_manner"}, {"score": 0.002530359917257626, "phrase": "user-defined_complexity"}, {"score": 0.002453934333239467, "phrase": "real-life_logs"}, {"score": 0.002287783663138828, "phrase": "existing_trace"}, {"score": 0.0022777800735119405, "phrase": "clustering_techniques"}, {"score": 0.0021610874773389096, "phrase": "resulting_models"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Process mining", " Process discovery", " Trace clustering", " Clone detection"], "paper_abstract": "Automated process discovery techniques aim at extracting process models from information system logs. Existing techniques in this space are effective when applied to relatively small or regular logs, but generate spaghetti-like and sometimes inaccurate models when confronted to logs with high variability. In previous work, trace clustering has been applied in an attempt to reduce the size and complexity of automatically discovered process models. The idea is to split the log into clusters and to discover one model per cluster. This leads to a collection of process models - each one representing a variant of the business process - as opposed to an all-encompassing model. Still, models produced in this way may exhibit unacceptably high complexity and low fitness. In this setting, this paper presents a two-way divide-and-conquer process discovery technique, wherein the discovered process models are split on the one hand by variants and on the other hand hierarchically using subprocess extraction. Splitting is performed in a controlled manner in order to achieve user-defined complexity or fitness thresholds. Experiments on real-life logs show that the technique produces collections of models substantially smaller than those extracted by applying existing trace clustering techniques, while allowing the user to control the fitness of the resulting models. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Controlled automated discovery of collections of business process models", "paper_id": "WOS:000340318800006"}