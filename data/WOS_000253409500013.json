{"auto_keywords": [{"score": 0.04876985276069077, "phrase": "vliw"}, {"score": 0.00481495049065317, "phrase": "vliw_processors"}, {"score": 0.004735519962945449, "phrase": "run-time_performance"}, {"score": 0.004285594361623147, "phrase": "typical_vliw_compiler_phases"}, {"score": 0.004122351497440992, "phrase": "instruction_level_parallelism"}, {"score": 0.0038782499819752423, "phrase": "data_spills"}, {"score": 0.0038354405231002323, "phrase": "external_memory"}, {"score": 0.0037721267247339137, "phrase": "ilp"}, {"score": 0.003668859054928118, "phrase": "register_constraints"}, {"score": 0.003628352506247126, "phrase": "high_register_pressure"}, {"score": 0.003509487090932835, "phrase": "increased_spill_code"}, {"score": 0.003265090934183249, "phrase": "new_register_pressure_reduction_technique"}, {"score": 0.0030376623293574905, "phrase": "instruction_scheduling"}, {"score": 0.002905629026254221, "phrase": "relative_ordering"}, {"score": 0.00262910358108176, "phrase": "trimaran"}, {"score": 0.002445865715873089, "phrase": "vliw_benchmarks"}, {"score": 0.002418829014435841, "phrase": "experimental_results"}, {"score": 0.00230080652063411, "phrase": "dynamic_spills"}, {"score": 0.0021763973978248005, "phrase": "vliw_architecture"}, {"score": 0.0021049977753042253, "phrase": "previous_spill_code_reduction_techniques"}], "paper_keywords": ["register pressure", " instruction level parallelism", " very long instruction word (VLIW) processor", " algorithms", " performance"], "paper_abstract": "The run-time performance of VLIW ( very long instruction word) microprocessors depends heavily on the effectiveness of its associated optimizing compiler. Typical VLIW compiler phases include instruction scheduling, which maximizes instruction level parallelism (ILP), and register allocation, which minimizes data spills to external memory. If ILP is maximized without considering register constraints, high register pressure may result, leading to increased spill code and reduced run-time performance. In this paper, a new register pressure reduction technique for embedded VLIW processors is presented to control register pressure prior to instruction scheduling and register allocation. By modifying the relative ordering of operations, this technique restructures code to better reduce spills. Our technique has been implemented in Trimaran, an academic VLIW compiler, and evaluated using a series of VLIW benchmarks. Experimental results show that, on average, our algorithm reduces dynamic spills and improves overall cycle counts by 6% for a VLIW architecture with 8 functional units and 32 registers versus previous spill code reduction techniques.", "paper_title": "Tetris: A new register pressure control technique for VLIW processors", "paper_id": "WOS:000253409500013"}