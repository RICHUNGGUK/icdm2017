{"auto_keywords": [{"score": 0.0462368381299012, "phrase": "domain-specific_languages"}, {"score": 0.00481495049065317, "phrase": "domain-specific_language_debuggers"}, {"score": 0.004319830179921363, "phrase": "language_workbenches"}, {"score": 0.002660574167091781, "phrase": "language-parametric_infrastructure"}, {"score": 0.0022886952510350416, "phrase": "spoofax_language_workbench"}, {"score": 0.0022133711375320244, "phrase": "realistic_case_studies"}, {"score": 0.002158505888557746, "phrase": "stratego_transformation_language"}, {"score": 0.0021049977753042253, "phrase": "webdsl_web_programming_language"}], "paper_keywords": ["Languages", " Debugging", " Domain-Specific Language", " Language Workbench", " Spoofax"], "paper_abstract": "Tool support is vital to the effectiveness of domain-specific languages. With language workbenches, domain-specific languages and their tool support can be generated from a combined, high-level specification. This paper shows how such a specification can be extended to describe a debugger for a language. To realize this, we introduce a meta-language for coordinating the debugger that abstracts over the complexity of writing a debugger by hand. We describe the implementation of a language-parametric infrastructure for debuggers that can be instantiated based on this specification. The approach is implemented in the Spoofax language workbench and validated through realistic case studies with the Stratego transformation language and the WebDSL web programming language.", "paper_title": "Declaratively Defining Domain-Specific Language Debuggers", "paper_id": "WOS:000303558100017"}