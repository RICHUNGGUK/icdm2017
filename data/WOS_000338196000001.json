{"auto_keywords": [{"score": 0.04174666335988992, "phrase": "linear_time_complexity"}, {"score": 0.00481495049065317, "phrase": "constrained_arc-eager"}, {"score": 0.00445293569103488, "phrase": "dependency_parsers"}, {"score": 0.004403480614319231, "phrase": "process_sentences"}, {"score": 0.004258372598568333, "phrase": "single_left-to-right_pass"}, {"score": 0.00389427992231721, "phrase": "greedy_decoding"}, {"score": 0.003808209866576388, "phrase": "beam_search"}, {"score": 0.0031845067058084583, "phrase": "output_dependency_graph"}, {"score": 0.0021049977753042253, "phrase": "arc-eager_transition_system"}], "paper_keywords": [""], "paper_abstract": "Arc-eager dependency parsers process sentences in a single left-to-right pass over the input and have linear time complexity with greedy decoding or beam search. We show how such parsers can be constrained to respect two different types of conditions on the output dependency graph: span constraints, which require certain spans to correspond to subtrees of the graph, and arc constraints, which require certain arcs to be present in the graph. The constraints are incorporated into the arc-eager transition system as a set of preconditions for each transition and preserve the linear time complexity of the parser.", "paper_title": "Constrained Arc-Eager Dependency Parsing", "paper_id": "WOS:000338196000001"}