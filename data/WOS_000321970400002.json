{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_grid"}, {"score": 0.004762202897268383, "phrase": "cloud_computing_environment"}, {"score": 0.00471003041684707, "phrase": "effective_scheduling"}, {"score": 0.0046328364646343375, "phrase": "key_concern"}, {"score": 0.004506968388996092, "phrase": "performance-driven_grid_applications"}, {"score": 0.004195418010131832, "phrase": "workflow_scheduling_problem"}, {"score": 0.004103942174451674, "phrase": "existing_heuristic-based_and_metaheuristic-based_workflow_scheduling_strategies"}, {"score": 0.0039053194919285725, "phrase": "dynamic_critical-path-based_adaptive_workflow_scheduling_algorithm"}, {"score": 0.003716273882758735, "phrase": "workflow_tasks"}, {"score": 0.003555902292752528, "phrase": "critical_path"}, {"score": 0.0034975571855450343, "phrase": "workflow_task_graph"}, {"score": 0.0032376465741070274, "phrase": "proposed_approach"}, {"score": 0.0031845067058084583, "phrase": "existing_approaches"}, {"score": 0.0030638704739988595, "phrase": "different_types"}, {"score": 0.002883439044844259, "phrase": "heuristic-based_scheduling_techniques"}, {"score": 0.00280496585980086, "phrase": "dynamic_nature"}, {"score": 0.0027286224888843956, "phrase": "performance_degradation"}, {"score": 0.002669042572650594, "phrase": "grid_environments"}, {"score": 0.0025678829712650437, "phrase": "hybrid_heuristic"}, {"score": 0.0024842242921857705, "phrase": "proposed_adaptive_scheduling_technique"}, {"score": 0.00241658945942583, "phrase": "execution_cost"}, {"score": 0.002312174113289583, "phrase": "users_requirements"}, {"score": 0.0021879624017959493, "phrase": "hybrid_cloud_environment"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["adaptive scheduling", " workflow management", " grid computing"], "paper_abstract": "Effective scheduling is a key concern for the execution of performance-driven grid applications such as workflows. In this paper, we first define the workflow scheduling problem and describe the existing heuristic-based and metaheuristic-based workflow scheduling strategies in grids. Then, we propose a dynamic critical-path-based adaptive workflow scheduling algorithm for grids, which determines efficient mapping of workflow tasks to grid resources dynamically by calculating the critical path in the workflow task graph at every step. Using simulation, we compared the performance of the proposed approach with the existing approaches, discussed in this paper for different types and sizes of workflows. The results demonstrate that the heuristic-based scheduling techniques can adapt to the dynamic nature of resource and avoid performance degradation in dynamically changing grid environments. Finally, we outline a hybrid heuristic combining the features of the proposed adaptive scheduling technique with metaheuristics for optimizing execution cost and time as well as meeting the users requirements to efficiently manage the dynamism and heterogeneity of the hybrid cloud environment. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Adaptive workflow scheduling for dynamic grid and cloud computing environment", "paper_id": "WOS:000321970400002"}