{"auto_keywords": [{"score": 0.04911241438594345, "phrase": "search-based_software_engineering"}, {"score": 0.00481495049065317, "phrase": "designing_hardware_and_software"}, {"score": 0.004552255360140208, "phrase": "automated_search_algorithms"}, {"score": 0.00437021209960886, "phrase": "complicated_design_problems"}, {"score": 0.003986684503518077, "phrase": "minimal_amount"}, {"score": 0.003946195919158241, "phrase": "computing_hardware"}, {"score": 0.003769006950727621, "phrase": "image_processing_algorithms"}, {"score": 0.0036740168936985314, "phrase": "key_problem"}, {"score": 0.003545024951402821, "phrase": "hardware_and_software_designs"}, {"score": 0.0031845067058084613, "phrase": "algorithmic_techniques"}, {"score": 0.003025915966640355, "phrase": "image_processing_accuracy"}, {"score": 0.0029798924689472014, "phrase": "cost_constraints"}, {"score": 0.002479150189700726, "phrase": "polynomial-time_search-based_software_engineering_technique"}, {"score": 0.0021928902836049384, "phrase": "empirical_results"}, {"score": 0.0021595094738887767, "phrase": "ascent's_solutions"}, {"score": 0.0021049977753042253, "phrase": "optimal_solution's_value"}], "paper_keywords": ["Algorithms", " computer aided software engineering", " optimization methods", " distributed computing"], "paper_abstract": "Search-based software engineering is an emerging paradigm that uses automated search algorithms to help designers iteratively find solutions to complicated design problems. For example, when designing a climate monitoring satellite, designers may want to use the minimal amount of computing hardware to reduce weight and cost while supporting the image processing algorithms running onboard. A key problem in these situations is that the hardware and software designs are locked in a tightly coupled cost-constrained producer/consumer relationship that makes it hard to find a good hardware/software design configuration. Search-based software engineering can be used to apply algorithmic techniques to automate the search for hardware/software designs that maximize the image processing accuracy while respecting cost constraints. This paper provides the following contributions to research on search-based software engineering: 1) We show how a cost-constrained producer/consumer problem can be modeled as a set of two multidimensional multiple-choice knapsack problems (MMKPs), 2) we present a polynomial-time search-based software engineering technique, called the Allocation-baSed Configuration Exploration Technique (ASCENT), for finding near optimal hardware/software codesign solutions, and 3) we present empirical results showing that ASCENT's solutions average over 95 percent of the optimal solution's value.", "paper_title": "ASCENT: An Algorithmic Technique for Designing Hardware and Software in Tandem", "paper_id": "WOS:000284424100008"}