{"auto_keywords": [{"score": 0.040370282943231355, "phrase": "polyhedral_model"}, {"score": 0.008650422522680883, "phrase": "previous_approaches"}, {"score": 0.00458869631642791, "phrase": "static_analysis"}, {"score": 0.0044795698035664695, "phrase": "important_class"}, {"score": 0.0032231139180761183, "phrase": "dataflow_analysis"}, {"score": 0.0028342734482926677, "phrase": "array_dataflow_analysis_result"}, {"score": 0.002553063001454625, "phrase": "precise_statement"}, {"score": 0.0025326211341475903, "phrase": "instance-wise_and_array_element-wise_analysis_capability"}, {"score": 0.0022812715029149216, "phrase": "doall_parallelism"}, {"score": 0.002191366809047192, "phrase": "polyhedral_literature"}], "paper_keywords": ["X10", " Parallelism", " Non-determinism", " Array Data-flow Analysis", " Polyhedral Model", " Happens-Before", " Race Detection", " Execution Partial Order"], "paper_abstract": "This paper addresses the static analysis of an important class of X10 programs, namely those with finish/async parallelism, and affine loops and array reference structure as in the polyhedral model. For such programs our analysis can certify whenever a program is deterministic or flags races. Our key contributions are (i) adaptation of array dataflow analysis from the polyhedral model to programs with finish/async parallelism, and (ii) use of the array dataflow analysis result to certify determinacy. We distinguish our work from previous approaches by combining the precise statement instance-wise and array element-wise analysis capability of the polyhedral model with finish/async programs that are more expressive than doall parallelism commonly considered in the polyhedral literature. We show that our approach is exact (no false negative/positives) and more precise than previous approaches, but is limited to programs that fit the polyhedral model.", "paper_title": "Array Dataflow Analysis for Polyhedral X10 Programs", "paper_id": "WOS:000324158900003"}