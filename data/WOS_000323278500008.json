{"auto_keywords": [{"score": 0.026033701006803824, "phrase": "tied_models"}, {"score": 0.004815249373256465, "phrase": "monte-carlo"}, {"score": 0.004719473826242326, "phrase": "bayesian_reinforcement_learning"}, {"score": 0.004672444473700524, "phrase": "bayesian_model-based_reinforcement_learning"}, {"score": 0.004534136929881113, "phrase": "partially_observable_markov_decision_process"}, {"score": 0.004377921202912336, "phrase": "principled_framework"}, {"score": 0.004143196873246147, "phrase": "pomdp_solver"}, {"score": 0.00392100783796804, "phrase": "prior_distribution"}, {"score": 0.0038624981944755813, "phrase": "environment's_dynamics"}, {"score": 0.003766908559075843, "phrase": "dirichlet_distributions"}, {"score": 0.0037106898330901534, "phrase": "pomdp's_optimal_value_function"}, {"score": 0.0035648266669315943, "phrase": "multivariate_polynomials"}, {"score": 0.003339886795391701, "phrase": "problem_horizon"}, {"score": 0.0031448288291084, "phrase": "online_monte-carlo_tree_search"}, {"score": 0.003051601113971322, "phrase": "large_pomdps"}, {"score": 0.002976019715894587, "phrase": "bayesian_reinforcement_learning_problem"}, {"score": 0.0028021527740710508, "phrase": "near-optimal_policy"}, {"score": 0.0025730425700096365, "phrase": "model_search_space"}, {"score": 0.0024717881264735477, "phrase": "nested_mixture"}, {"score": 0.002158505888557746, "phrase": "proposed_methods"}, {"score": 0.0021049977753042253, "phrase": "current_bayesian_reinforcement_learning_methods"}], "paper_keywords": ["Bayesian reinforcement learning", " Model-based reinforcement learning", " Monte-Carlo tree search", " POMDP"], "paper_abstract": "Bayesian model-based reinforcement learning can be formulated as a partially observable Markov decision process (POMDP) to provide a principled framework for optimally balancing exploitation and exploration. Then, a POMDP solver can be used to solve the problem. If the prior distribution over the environment's dynamics is a product of Dirichlet distributions, the POMDP's optimal value function can be represented using a set of multivariate polynomials. Unfortunately, the size of the polynomials grows exponentially with the problem horizon. In this paper, we examine the use of an online Monte-Carlo tree search (MCTS) algorithm for large POMDPs, to solve the Bayesian reinforcement learning problem online. We will show that such an algorithm successfully searches for a near-optimal policy. In addition, we examine the use of a parameter tying method to keep the model search space small, and propose the use of nested mixture of tied models to increase robustness of the method when our prior information does not allow us to specify the structure of tied models exactly. Experiments show that the proposed methods substantially improve scalability of current Bayesian reinforcement learning methods.", "paper_title": "Monte-Carlo tree search for Bayesian reinforcement learning", "paper_id": "WOS:000323278500008"}