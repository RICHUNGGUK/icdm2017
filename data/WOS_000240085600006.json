{"auto_keywords": [{"score": 0.042442030617401434, "phrase": "overflow"}, {"score": 0.00481495049065317, "phrase": "pull_floating-point_proof"}, {"score": 0.00466877910546307, "phrase": "formal_proof"}, {"score": 0.0044991925146184025, "phrase": "floating-point_algorithms"}, {"score": 0.0039040344230094164, "phrase": "veltkamp_algorithm"}, {"score": 0.003693103542455806, "phrase": "upper_part"}, {"score": 0.003625347557965931, "phrase": "lower_part"}, {"score": 0.003558830226733501, "phrase": "dekker_algorithm"}, {"score": 0.0034294219963679857, "phrase": "exact_error"}, {"score": 0.0033664873319204027, "phrase": "floating-point_multiplication"}, {"score": 0.0030876784650745973, "phrase": "strong_justification"}, {"score": 0.0029207251108325006, "phrase": "generic_radix"}, {"score": 0.0028494429736563884, "phrase": "underflow"}, {"score": 0.002565345470805401, "phrase": "main_argument"}, {"score": 0.002471973283582411, "phrase": "first_algorithm"}, {"score": 0.002295277579105177, "phrase": "mild_assumptions"}, {"score": 0.0022531089868518235, "phrase": "proof_path"}, {"score": 0.0021049977753042253, "phrase": "new_methods"}], "paper_keywords": [""], "paper_abstract": "Some floating-point algorithms have been used for decades and proved decades ago in radix-2, providing neither Underflow, nor Overflow occurs. This includes the Veltkamp algorithm, used to split a float into an upper part and a lower part and the Dekker algorithm, used to compute the exact error of a floating-point multiplication. The aim of this article is to show the difficulties of a strong justification of the validity of these algorithms for a generic radix and even when Underflow or Overflow occurs. These cases are usually dismissed even if they should not: the main argument in radix 2 of the first algorithm fails in other radices. Nevertheless all results still hold here under mild assumptions. The proof path is interesting as these cases are hardly looked into and new methods and results had to be developed.", "paper_title": "Pitfalls of a pull floating-point proof: Example on the formal proof of the Veltkamp/Dekker algorithms", "paper_id": "WOS:000240085600006"}