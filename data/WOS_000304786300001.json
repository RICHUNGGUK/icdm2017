{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "local_ranking"}, {"score": 0.004671588539217021, "phrase": "time_series"}, {"score": 0.0045324756541157574, "phrase": "ranking_sequence"}, {"score": 0.003955787027818305, "phrase": "specific_period"}, {"score": 0.0037235274565193665, "phrase": "specific_trend"}, {"score": 0.003105168935158648, "phrase": "time_sequence"}, {"score": 0.003058515297281172, "phrase": "last_one"}, {"score": 0.0029672941061574375, "phrase": "matching_positions"}, {"score": 0.002922705896608178, "phrase": "query_sequence"}, {"score": 0.002821247621250663, "phrase": "different_algorithms"}, {"score": 0.0027788478707700274, "phrase": "modified_segment_tree_data_structure"}, {"score": 0.0026023381988430666, "phrase": "segment_tree"}, {"score": 0.0024993218789131437, "phrase": "target_ranking_sequence"}, {"score": 0.0024617483174454113, "phrase": "query_time"}, {"score": 0.002137137933768807, "phrase": "query_range"}], "paper_keywords": ["Data structures", " Ordinal ranking", " Segment trees", " Fractional cascading", " String matching"], "paper_abstract": "The trend of a time series can be represented as a ranking sequence, which reveals the ups and downs with the passage of time. In some applications, one might need to find the trend in some specific period of time or search for the period of time with some specific trend. We formulate three related problems: the local ranking problem, the local ranking sequence problem and the ranking sequence matching problem. The first two are to find the rankings given a segment of the time sequence and the last one is to search for the matching positions to the query sequence. For all the problems, we propose different algorithms utilizing a modified segment tree data structure. It takes O(n log a) time and space to build the segment tree where a is the length of the target ranking sequence. The query time of the three algorithms are O(logk), O (k) and O (n logk), respectively, where k is the size of the query range. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Efficient algorithms for local ranking", "paper_id": "WOS:000304786300001"}