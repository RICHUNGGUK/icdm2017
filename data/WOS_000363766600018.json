{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "java"}, {"score": 0.04917839372530882, "phrase": "rdma-enabled_networks"}, {"score": 0.004658426838467567, "phrase": "high-performance_inter-node_communication"}, {"score": 0.004506968388996092, "phrase": "high_performance_computing_applications"}, {"score": 0.0044435677598780796, "phrase": "parallel_architectures"}, {"score": 0.004339867166576126, "phrase": "current_systems_deployments"}, {"score": 0.004258644418211771, "phrase": "significant_number"}, {"score": 0.004159241394996858, "phrase": "advanced_networking_hardware"}, {"score": 0.004120130206000757, "phrase": "remote_direct_memory_access"}, {"score": 0.003967314311312148, "phrase": "zero-copy_and_kernel-bypass_features"}, {"score": 0.0038382392088338784, "phrase": "parallel_programming"}, {"score": 0.0037309384824565695, "phrase": "useful_characteristics"}, {"score": 0.0032529910932231924, "phrase": "continuous_increase"}, {"score": 0.0031619994642255846, "phrase": "java_virtual_machine"}, {"score": 0.003102752392819577, "phrase": "current_parallel_java_applications"}, {"score": 0.0030446120560494155, "phrase": "inefficient_communication_middleware"}, {"score": 0.0029454679553901613, "phrase": "high_communication_overhead"}, {"score": 0.0028766278519176355, "phrase": "full_advantage"}, {"score": 0.002782938683493689, "phrase": "efficient_low-level_java_communication_devices"}, {"score": 0.00266693888510356, "phrase": "underlying_rdma_hardware"}, {"score": 0.0026045914281028473, "phrase": "high-bandwidth_communications"}, {"score": 0.002580061425699194, "phrase": "parallel_java_applications"}, {"score": 0.0025436978068459565, "phrase": "performance_evaluation"}, {"score": 0.002507845411496512, "phrase": "representative_rdma_networks"}, {"score": 0.0024842242921857705, "phrase": "parallel_systems"}, {"score": 0.002336004938424957, "phrase": "previous_java_communication_middleware"}, {"score": 0.0022385926290967263, "phrase": "application-level_performance"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel systems", " Remote Direct Memory Access (RDMA)", " RDMA-enabled networks", " Java communication middleware", " Message-Passing in Java (MPJ)"], "paper_abstract": "Providing high-performance inter-node communication is a key capability for running high performance computing applications efficiently on parallel architectures. In fact, current systems deployments are aggregating a significant number of cores interconnected via advanced networking hardware with Remote Direct Memory Access (RDMA) mechanisms, that enable zero-copy and kernel-bypass features. The use of Java for parallel programming is becoming more promising thanks to some useful characteristics of this language, particularly its built-in multithreading support, portability, easy-to-learn properties, and high productivity, along with the continuous increase in the performance of the Java virtual machine. However, current parallel Java applications generally suffer from inefficient communication middleware, mainly based on protocols with high communication overhead that do not take full advantage of RDMA-enabled networks. This paper presents efficient low-level Java communication devices that overcome these constraints by fully exploiting the underlying RDMA hardware, providing low-latency and high-bandwidth communications for parallel Java applications. The performance evaluation conducted on representative RDMA networks and parallel systems has shown significant point-to-point performance increases compared with previous Java communication middleware, allowing to obtain up to 40% improvement in application-level performance on 4096 cores of a Cray XE6 supercomputer. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Low-latency Java communication devices on RDMA-enabled networks", "paper_id": "WOS:000363766600018"}