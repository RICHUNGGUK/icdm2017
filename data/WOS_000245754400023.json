{"auto_keywords": [{"score": 0.038310925689172756, "phrase": "spga"}, {"score": 0.030731841359398184, "phrase": "artificial_chromosomes"}, {"score": 0.00481495049065317, "phrase": "mining_gene_structures"}, {"score": 0.004765482708043842, "phrase": "multiobjective_flowshop_scheduling_problems"}, {"score": 0.004668059458774745, "phrase": "previous_research"}, {"score": 0.004620093797504386, "phrase": "chang_et_al"}, {"score": 0.004549134578322012, "phrase": "chang"}, {"score": 0.00450231514359539, "phrase": "p._c."}, {"score": 0.004456403038708644, "phrase": "chen"}, {"score": 0.004410248125081398, "phrase": "s._h."}, {"score": 0.004342584282990433, "phrase": "lin"}, {"score": 0.004060350364088702, "phrase": "parallel_machine_scheduling_problem"}, {"score": 0.0040186038781533946, "phrase": "expert_systems"}, {"score": 0.003531474887552889, "phrase": "multiobjective_scheduling_problems"}, {"score": 0.003441352119167824, "phrase": "pioneer_efforts"}, {"score": 0.003336225354214798, "phrase": "mining_gene_structure_technique"}, {"score": 0.003267925215811654, "phrase": "spga."}, {"score": 0.003234299589505403, "phrase": "mining_problem"}, {"score": 0.003201018846103988, "phrase": "elite_chromosomes"}, {"score": 0.0031193028729331667, "phrase": "linear_assignment_problem"}, {"score": 0.003071274938566466, "phrase": "greedy_heuristic"}, {"score": 0.0029928611380840757, "phrase": "redundant_information"}, {"score": 0.0028127163745564777, "phrase": "gene_mining_procedure"}, {"score": 0.002684740763324991, "phrase": "evolution_process"}, {"score": 0.0026026666736474404, "phrase": "solution_quality"}, {"score": 0.002408265305704217, "phrase": "artificial_chromosome"}, {"score": 0.0023711591828229736, "phrase": "dynamic_threshold_procedure"}, {"score": 0.002310578855290687, "phrase": "flowshop_scheduling_problems"}, {"score": 0.002251542790734307, "phrase": "benchmark_problem"}, {"score": 0.0022053994402287925, "phrase": "developed_algorithm"}, {"score": 0.0021826828321952615, "phrase": "extensive_tests"}, {"score": 0.0021490449563443025, "phrase": "flow-shop_scheduling_problem"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": ["genetic algorithms", " multiobjective optimization", " pareto optimum solution", " minging gene structures", " scheduling problem"], "paper_abstract": "According to previous research of Chang et al. [Chang, P. C., Chen, S. H., & Lin, K. L. (2005b). Two phase sub-population genetic algorithm for parallel machine scheduling problem. Expert Systems with Applications, 29(3), 705-712], the sub-population genetic algorithm (SPGA) is effective in solving multiobjective scheduling problems. Based on the pioneer efforts, this research proposes a mining gene structure technique integrated with the SPGA. The mining problem of elite chromosomes is formulated as a linear assignment problem and a greedy heuristic using threshold to eliminate redundant information. As a result, artificial chromosomes are created according to this gene mining procedure and these artificial chromosomes will be reintroduced into the evolution process to improve the efficiency and solution quality of the procedure. In addition, to further increase the quality of the artificial chromosome, a dynamic threshold procedure is developed and the flowshop scheduling problems are applied as a benchmark problem for testing the developed algorithm. Extensive tests in the flow-shop scheduling problem show that the proposed approach can improve the performance of SPGA significantly. (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "Sub-population genetic algorithm with mining gene structures for multiobjective flowshop scheduling problems", "paper_id": "WOS:000245754400023"}