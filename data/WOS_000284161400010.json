{"auto_keywords": [{"score": 0.04515697567790779, "phrase": "wiseman"}, {"score": 0.00481495049065317, "phrase": "wireless_sensor_networks_applications"}, {"score": 0.004388796812234033, "phrase": "performance_evaluation"}, {"score": 0.00406250784433007, "phrase": "mobile_agent_scripts"}, {"score": 0.0040002088320302935, "phrase": "wireless_sensor_networks"}, {"score": 0.003760385494931853, "phrase": "earlier_agent_system"}, {"score": 0.003562322256892338, "phrase": "distributed_process"}, {"score": 0.0035076666315744525, "phrase": "wired_networks"}, {"score": 0.003374655868348244, "phrase": "simplified_interpreter"}, {"score": 0.0032216622984027558, "phrase": "resource-limited_wireless_sensor_devices"}, {"score": 0.0031477782772867655, "phrase": "text-based_codes"}, {"score": 0.003075583447856341, "phrase": "diverse_wsns_tasks"}, {"score": 0.0027386335451725762, "phrase": "distinctive_programming_features"}, {"score": 0.0026411266075871513, "phrase": "sram."}, {"score": 0.002554406040896888, "phrase": "wiseman_interpreter_implementation"}, {"score": 0.002476546030310661, "phrase": "embedded_code"}, {"score": 0.0022394839933089074, "phrase": "different_agent_migration_methodologies"}, {"score": 0.0021049977753042253, "phrase": "performance_evaluations"}], "paper_keywords": ["mobile agents", " wireless sensor networks", " performance evaluation", " embedded software"], "paper_abstract": "We describe the design, implementation and performance evaluation of Wiseman: a middleware platform developed for interpreting mobile agent scripts in Wireless Sensor Networks (WSN). Inspired by an earlier agent system originally devised for the coordination of distributed process in wired networks, we developed a simplified interpreter that can be embedded in resource-limited wireless sensor devices for processing text-based codes that realize diverse WSNs tasks. We describe in detail the foundations of our proposed approach, as well as the distinctive programming features that reduce its operation's overhead. In its present form, the Wiseman interpreter implementation occupies 19Kbytes of embedded code and 3Kbytes of SRAM. We also study the effects of employing the different agent migration methodologies supported by the interpreter, and report performance evaluations that gauge the codes' consumed bandwidth and migration delay, which can take as little as 235 mS per hop.", "paper_title": "Programmable Middleware for Wireless Sensor Networks Applications Using Mobile Agents", "paper_id": "WOS:000284161400010"}