{"auto_keywords": [{"score": 0.004053362743156545, "phrase": "b-matching_problems"}, {"score": 0.0033419808453225516, "phrase": "total_cost"}, {"score": 0.0032065418360603293, "phrase": "best_known_algorithm"}, {"score": 0.003097865379563127, "phrase": "network_flow"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Weighted matching", " b-Matching", " Cyclic scheduling", " Balanced binary tree", " Network flow"], "paper_abstract": "We consider the (n - 2, n) cyclical scheduling problem which assigns a shift of n - 2 consecutive periods among a total of n periods to workers. We solve this problem by solving a series of b-matching problems on a cycle of n vertices. Each vertex has a capacity, and edges have costs associated with them. The objective is to maximize the total cost of the matching. The best known algorithm for this problem uses network flow, which runs in O (n(2) logo) on a cycle. We provide an O (n logn) algorithm for this problem. Using this, we provide an O (n logn lognb(max)) algorithm for the (n - 2, n) cyclical scheduling problem, where b(max) is the maximum capacity on a vertex. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "The cyclical scheduling problem", "paper_id": "WOS:000343627600003"}