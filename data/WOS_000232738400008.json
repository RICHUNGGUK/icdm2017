{"auto_keywords": [{"score": 0.047869525215773305, "phrase": "cost-complexity_pruning"}, {"score": 0.006669654793604245, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "decision_trees"}, {"score": 0.004129873531628877, "phrase": "holdout_sample"}, {"score": 0.003916098498242888, "phrase": "pruning_algorithms"}, {"score": 0.00384731849108269, "phrase": "posterior_calculations"}, {"score": 0.0037797715059097103, "phrase": "bic"}, {"score": 0.003735363163348674, "phrase": "mdl"}, {"score": 0.003669738876999364, "phrase": "mep"}, {"score": 0.0034388111429203222, "phrase": "poor_generalization_errors"}, {"score": 0.003260690513595527, "phrase": "alternative_pruning_procedure"}, {"score": 0.0026986685585382347, "phrase": "similar_accuracies"}, {"score": 0.0025137856138000014, "phrase": "non-nested_trees"}, {"score": 0.0024118292918742967, "phrase": "bumping_procedure"}, {"score": 0.0023694065215394593, "phrase": "empirical_results"}, {"score": 0.002142696956108844, "phrase": "bumping"}], "paper_keywords": ["cost-complexity pruning", " decision tree", " cross-validation", " BIC", " posterior probability", " BUMPing"], "paper_abstract": "The cost-complexity pruning generates nested subtrees and selects the best one. However, its computational cost is large since it uses holdout sample or cross-validation. On the other hand, the pruning algorithms based on posterior calculations such as BIC (MDL) and MEP are faster, but they sometimes produce too big or small trees to yield poor generalization errors. In this paper, we propose an alternative pruning procedure which combines the ideas of the cost-complexity pruning and posterior calculation. The proposed algorithm uses only training samples, so that its computational cost is almost same as the other posterior-based algorithms, and at the same time yields similar accuracies as the cost-complexity pruning. Moreover it can be used for comparing non-nested trees, which is necessary for the Bumping procedure. The empirical results show that the proposed algorithm performs similarly as the cost-complexity pruning in standard situations and works better for Bumping. (c) 2004 Elsevier B.V. All rights reserved.", "paper_title": "Maximum a posteriori pruning on decision trees and its application to bootstrap BUMPing", "paper_id": "WOS:000232738400008"}