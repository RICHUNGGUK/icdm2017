{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "antijoin_cardinality_estimation"}, {"score": 0.035524421372478625, "phrase": "query_optimizer"}, {"score": 0.004585212379675535, "phrase": "accurate_efficient_solutions"}, {"score": 0.004474468584252318, "phrase": "relational_query_optimizers"}, {"score": 0.0043877939717652855, "phrase": "widespread_use"}, {"score": 0.004302791070310513, "phrase": "subset-based_queries"}, {"score": 0.004178351419209898, "phrase": "extensive_research"}, {"score": 0.0041174821422410544, "phrase": "join_cardinality_estimation"}, {"score": 0.003920891569777894, "phrase": "adequate_solutions"}, {"score": 0.0036792371574197826, "phrase": "novel_sampling-based_estimator"}, {"score": 0.0035553221885904467, "phrase": "existent_estimators"}, {"score": 0.003503497128638099, "phrase": "sufficient_accuracy"}, {"score": 0.003319830633865628, "phrase": "proposed_estimator"}, {"score": 0.003192312493850036, "phrase": "prior_workload_information"}, {"score": 0.003130396338031522, "phrase": "mixture_superpopulation_model"}, {"score": 0.0030847461428168614, "phrase": "data_offline"}, {"score": 0.0029807934480637855, "phrase": "bayesian_statistics_framework"}, {"score": 0.0029229677574293725, "phrase": "superpopulation_model"}, {"score": 0.0028662606272282926, "phrase": "live_queries"}, {"score": 0.0027159094186967247, "phrase": "online_workload"}, {"score": 0.0026243534128245886, "phrase": "efficient_algorithm"}, {"score": 0.0025608471909800076, "phrase": "hypergeometric_distribution"}, {"score": 0.002498873893632726, "phrase": "monte_carlo_trials"}, {"score": 0.002254510319372956, "phrase": "efficient_antijoin_cardinality_estimator"}, {"score": 0.0022216045996270974, "phrase": "strict_requirements"}, {"score": 0.002125735077004312, "phrase": "extensive_experimental_results"}, {"score": 0.0021049977753042253, "phrase": "synthetically-generated_as_well_as_massive_tpc-h_data"}], "paper_keywords": ["Algorithms", " Design", " Experimentation", " Performance", " Antijoin operator", " query optimization", " sampling", " Monte Carlo", " Bayesian statistics"], "paper_abstract": "Antijoin cardinality estimation is among a handful of problems that has eluded accurate efficient solutions amenable to implementation in relational query optimizers. Given the widespread use of antijoin and subset-based queries in analytical workloads and the extensive research targeted at join cardinality estimation-a seemingly related problem-the lack of adequate solutions for antijoin cardinality estimation is intriguing. In this article, we introduce a novel sampling-based estimator for antijoin cardinality that (unlike existent estimators) provides sufficient accuracy and efficiency to be implemented in a query optimizer. The proposed estimator incorporates three novel ideas. First, we use prior workload information when learning a mixture superpopulation model of the data offline. Second, we design a Bayesian statistics framework that updates the superpopulation model according to the live queries, thus allowing the estimator to adapt dynamically to the online workload. Third, we develop an efficient algorithm for sampling from a hypergeometric distribution in order to generate Monte Carlo trials, without explicitly instantiating either the population or the sample. When put together, these ideas form the basis of an efficient antijoin cardinality estimator satisfying the strict requirements of a query optimizer, as shown by the extensive experimental results over synthetically-generated as well as massive TPC-H data.", "paper_title": "Workload-Driven Antijoin Cardinality Estimation", "paper_id": "WOS:000363567400002"}