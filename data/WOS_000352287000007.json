{"auto_keywords": [{"score": 0.03363896917055258, "phrase": "protocol_verification"}, {"score": 0.03118752087684094, "phrase": "inductive_method"}, {"score": 0.00481495049065317, "phrase": "multicast-based_security_protocols"}, {"score": 0.004645164092216739, "phrase": "multicast"}, {"score": 0.004481132747216135, "phrase": "efficient_way"}, {"score": 0.0044277810648955624, "phrase": "broadcasting_content"}, {"score": 0.004271490815763164, "phrase": "security_protocols"}, {"score": 0.004220624516321415, "phrase": "multicast_security_protocols"}, {"score": 0.0039043835848369215, "phrase": "large_number"}, {"score": 0.00374399358035391, "phrase": "exponential_growth"}, {"score": 0.003611751858608048, "phrase": "protocol_run"}, {"score": 0.0034633412134999425, "phrase": "specification_point"}, {"score": 0.0033011569787033297, "phrase": "general_way"}, {"score": 0.0030171910207671205, "phrase": "special_cases"}, {"score": 0.002741091312632307, "phrase": "multicast_protocols"}, {"score": 0.002597012212823168, "phrase": "backwards_compatibility"}, {"score": 0.00255068452076921, "phrase": "well-known_protocol"}, {"score": 0.0024604876113911173, "phrase": "mixed_environment_protocol"}, {"score": 0.002416589459425828, "phrase": "case_study"}, {"score": 0.0023171750718791713, "phrase": "usable_multicast_specification"}, {"score": 0.0021049977753042253, "phrase": "multicast_specification"}], "paper_keywords": ["Multicast protocols", " Security protocols", " Formal verification"], "paper_abstract": "Multicast, originally designed as an efficient way of broadcasting content, is being used in security protocols. Multicast security protocols are difficult to verify using model checking because they typically involve a large number of participants. Likewise, the exponential growth of knowledge being distributed during protocol run is a challenge. From a specification point of view, multicast is also a general way of representing message casting in protocol verification, with unicast, anycast and broadcast as special cases. Using the inductive method of protocol verification and Isabelle/HOL, we have devised techniques for specifying multicast protocols and proving many of their essential properties. We show backwards compatibility revisiting a well-known protocol and secrecy proofs for a mixed environment protocol as a case study. Our contributions are twofold: a usable multicast specification using the inductive method and the assertion that protocols should be verified by default using a multicast specification.", "paper_title": "Verifying multicast-based security protocols using the inductive method", "paper_id": "WOS:000352287000007"}