{"auto_keywords": [{"score": 0.040237319754098985, "phrase": "lists"}, {"score": 0.00481495049065317, "phrase": "self-organizing_lists"}, {"score": 0.004551506364497413, "phrase": "self-organizing_linear_search_lists"}, {"score": 0.00421410521089045, "phrase": "search_cost"}, {"score": 0.004042866322177613, "phrase": "reference_phenomenon"}, {"score": 0.003959863717046575, "phrase": "probabilistic_dependence"}, {"score": 0.0038785585716819785, "phrase": "novel_list_organization_framework"}, {"score": 0.0035696339388072086, "phrase": "individual_records"}, {"score": 0.003527550673371394, "phrase": "lol_organization"}, {"score": 0.0034963129868796033, "phrase": "reorganization_operation"}, {"score": 0.003465350958971198, "phrase": "accessed_record_level"}, {"score": 0.003314591878914152, "phrase": "record's_context"}, {"score": 0.003132979607342419, "phrase": "accessed_record"}, {"score": 0.002815638762571003, "phrase": "different_contexts"}, {"score": 0.0025988558501741327, "phrase": "stochastic_learning"}, {"score": 0.0023845255359681143, "phrase": "basic_list-organizing"}, {"score": 0.002301081571414049, "phrase": "asymptotic_search_costs"}, {"score": 0.0021175348478776846, "phrase": "best_algorithm"}], "paper_keywords": ["Lists-on-Lists", " adaptive data structures", " self-organizing lists", " locality of reference"], "paper_abstract": "We examine the problem of self-organizing linear search lists, which are lists that react to queries received from an environment by running a heuristic to reorganize the records in order to minimize the search cost. In particular, we are concerned with environments with the locality of reference phenomenon, when the queries exhibit a probabilistic dependence between themselves. We introduce a novel list organization framework that we call Lists-on-Lists (LOL), which regards the list as a set of sublists that are manageable in the same way that individual records are. An LOL organization involves a reorganization operation on the accessed record level, as well as another on the sublist which it belongs to (the record's context). We show that it is beneficial to consider the reorganization of the context together with the accessed record, since other records within the context are likely to be accessed in the near future. With the aid of a learning automaton-based partitioning algorithm, we demonstrate that we can accurately classify the different contexts of the sublist. To the best of our knowledge, both the concept of reorganizing the list 'hierarchically' using such a two-step LOL process, and the application of stochastic learning to this problem are new to the field. Indeed, while the costs involved to achieve these enhancements are almost of the same order as that which achieves basic list-organizing, using this framework, we were able to empirically achieve asymptotic search costs that are significantly superior to (sometimes even an order of magnitude better than) the Move-To-Front heuristic, widely acknowledged as the best algorithm for such environments.", "paper_title": "A novel framework for self-organizing lists in environments with locality of reference: Lists-on-Lists", "paper_id": "WOS:000244840100006"}