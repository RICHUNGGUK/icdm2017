{"auto_keywords": [{"score": 0.03318457888521305, "phrase": "dpso_algorithm"}, {"score": 0.00481495049065317, "phrase": "parallel_machines"}, {"score": 0.004681971826924847, "phrase": "novel_evolutionary_technique"}, {"score": 0.004616859702338596, "phrase": "particle_swarm_optimization"}, {"score": 0.0045527280799660275, "phrase": "pso"}, {"score": 0.004426882270402403, "phrase": "increasing_attention"}, {"score": 0.00436530211426514, "phrase": "wide_applications"}, {"score": 0.003985305257857655, "phrase": "first_application"}, {"score": 0.003929843413153981, "phrase": "pso_algorithm"}, {"score": 0.003821215658570578, "phrase": "parallel_machines_scheduling_problem"}, {"score": 0.003587616378156851, "phrase": "classical_pso_equations"}, {"score": 0.0034640450599342488, "phrase": "discrete_pso_algorithm"}, {"score": 0.003415812499773905, "phrase": "dpso"}, {"score": 0.003010757286626405, "phrase": "efficient_local_search_heuristic"}, {"score": 0.002616628760616317, "phrase": "recently_proposed_simulated_annealing_algorithm"}, {"score": 0.002405309378904663, "phrase": "comparator_algorithm"}, {"score": 0.002371783323468861, "phrase": "computational_results"}, {"score": 0.002306123367679187, "phrase": "proposed_dpso_algorithm"}, {"score": 0.0021049977753042253, "phrase": "local_search_heuristic"}], "paper_keywords": ["Scheduling", " Parallel machines", " Particle swarm optimization", " Makespan"], "paper_abstract": "As a novel evolutionary technique, particle swarm optimization (PSO) has received increasing attention and wide applications in a variety of fields. To our knowledge this paper investigates the first application of PSO algorithm to tackle the parallel machines scheduling problem. Proposing equations analogous to those of the classical PSO equations, we present a discrete PSO algorithm (DPSO) to minimize makespan (C-max) criterion. We also investigate the effectiveness of DPSO algorithm through hybridizing it with an efficient local search heuristic. To verify the performance of DPSO algorithm and its hybridized version (HDPSO), comparisons are made through using a recently proposed simulated annealing algorithm for the problem, addressed in the literature, as a comparator algorithm. Computational results signify that the proposed DPSO algorithm is very competitive and can be rapidly guided when hybridizing with a local search heuristic. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "A discrete particle swarm optimization algorithm for scheduling parallel machines", "paper_id": "WOS:000262599000027"}