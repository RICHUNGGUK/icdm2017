{"auto_keywords": [{"score": 0.0472067313893742, "phrase": "remote_data"}, {"score": 0.02574909202712058, "phrase": "pdp"}, {"score": 0.00481495049065317, "phrase": "remote_data_checking_using_provable_data_possession"}, {"score": 0.00468656988857138, "phrase": "provable_data_possession"}, {"score": 0.004338239182984759, "phrase": "untrusted_server"}, {"score": 0.004206236029936448, "phrase": "original_data"}, {"score": 0.004078232992955235, "phrase": "probabilistic_proofs"}, {"score": 0.0040002088320302935, "phrase": "random_sets"}, {"score": 0.003760385494931853, "phrase": "constant_amount"}, {"score": 0.0035076666315744525, "phrase": "network_communication"}, {"score": 0.0034405207528624983, "phrase": "pdp_model"}, {"score": 0.0033357416981328577, "phrase": "large_data_sets"}, {"score": 0.003310047704590791, "phrase": "distributed_storage_systems"}, {"score": 0.0031356295480964927, "phrase": "arbitrary_amounts"}, {"score": 0.003111472132927442, "phrase": "data_corruption"}, {"score": 0.002993439939273828, "phrase": "previous_solutions"}, {"score": 0.0026347074232350503, "phrase": "generic_transformation"}, {"score": 0.002283243905993669, "phrase": "cryptographic_computation"}, {"score": 0.0022222152430170254, "phrase": "in-depth_experimental_evaluation"}, {"score": 0.0021049977753042253, "phrase": "remote_data_checking_scheme"}], "paper_keywords": ["Security", " Reliability", " Performance", " Remote data checking", " provable data possession", " PDP", " homomorphic verifiable tags", " archival storage", " cloud storage security", " robust auditing", " erasure coding"], "paper_abstract": "We introduce a model for provable data possession (PDP) that can be used for remote data checking: A client that has stored data at an untrusted server can verify that the server possesses the original data without retrieving it. The model generates probabilistic proofs of possession by sampling random sets of blocks from the server, which drastically reduces I/O costs. The client maintains a constant amount of metadata to verify the proof. The challenge/response protocol transmits a small, constant amount of data, which minimizes network communication. Thus, the PDP model for remote data checking is lightweight and supports large data sets in distributed storage systems. The model is also robust in that it incorporates mechanisms for mitigating arbitrary amounts of data corruption. We present two provably-secure PDP schemes that are more efficient than previous solutions. In particular, the overhead at the server is low (or even constant), as opposed to linear in the size of the data. We then propose a generic transformation that adds robustness to any remote data checking scheme based on spot checking. Experiments using our implementation verify the practicality of PDP and reveal that the performance of PDP is bounded by disk I/O and not by cryptographic computation. Finally, we conduct an in-depth experimental evaluation to study the tradeoffs in performance, security, and space overheads when adding robustness to a remote data checking scheme.", "paper_title": "Remote Data Checking Using Provable Data Possession", "paper_id": "WOS:000291100500012"}