{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "three-layer_architectural_pattern"}, {"score": 0.04353775624016999, "phrase": "quality_attributes"}, {"score": 0.004734448316824488, "phrase": "plug-in-based_architectures"}, {"score": 0.00465564116276564, "phrase": "eclipse"}, {"score": 0.004450568197899267, "phrase": "software_architecture"}, {"score": 0.004400804926266097, "phrase": "different_kinds"}, {"score": 0.004230956171850591, "phrase": "different_designs"}, {"score": 0.003999578057088828, "phrase": "trade-off_analysis"}, {"score": 0.003888659470009222, "phrase": "informed_decisions"}, {"score": 0.00345530020388352, "phrase": "particular_set"}, {"score": 0.003175556211659149, "phrase": "particular_instance"}, {"score": 0.0026370661343466354, "phrase": "theoretical_knowledge"}, {"score": 0.0025928815987676535, "phrase": "case_study"}, {"score": 0.002464709648714996, "phrase": "-based_tool"}, {"score": 0.0024234059612683032, "phrase": "architectural_knowledge"}, {"score": 0.0023296961971785357, "phrase": "unexpected_difficulties"}, {"score": 0.0022270182923887012, "phrase": "theoretical_solution"}, {"score": 0.0021896891011033105, "phrase": "operative_architecture"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["plug-in-based development", " Three-Layer architectural pattern", " Eclipse", " software architecture", " architectural knowledge"], "paper_abstract": "The process of designing a software architecture using different kinds of components is often challenging. Different designs support some quality attributes while damaging others; therefore, trade-off analysis is needed to make informed decisions. Moreover, analysis made in theory needs to be complemented with observations in practice, especially when using a particular set of technologies to implement the system. In this paper, we present a particular instance of this problem. We study how the Three-Layer architectural pattern may be developed using plug-ins. We compare two extreme alternatives according to several representative scenarios and their impact in some quality attributes. Then, we apply this theoretical knowledge to a case study, the implementation of a plug-in-based tool for managing architectural knowledge using Eclipse. We report some unexpected difficulties found that forced us to adapt the theoretical solution into an operative architecture. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "The Three-Layer architectural pattern applied to plug-in-based architectures: the Eclipse case", "paper_id": "WOS:000316619200002"}