{"auto_keywords": [{"score": 0.04617122112854065, "phrase": "lcst"}, {"score": 0.00481495049065317, "phrase": "similar_unordered_trees"}, {"score": 0.004491678520807451, "phrase": "largest_common_subtree"}, {"score": 0.004222515162635615, "phrase": "optimal_alignment"}, {"score": 0.0039694170761766226, "phrase": "lcst_problem"}, {"score": 0.0039085400187964196, "phrase": "rooted_trees"}, {"score": 0.0035899674590142653, "phrase": "maximum_size"}, {"score": 0.0034538466642399976, "phrase": "total_number"}, {"score": 0.0034008496666026585, "phrase": "non-common_nodes"}, {"score": 0.0031477782772867655, "phrase": "unrooted_trees"}, {"score": 0.0025151755329660837, "phrase": "alignment_problem"}, {"score": 0.002476546030310661, "phrase": "rooted_and_unordered_trees"}, {"score": 0.0022394839933089074, "phrase": "constant_gamma"}, {"score": 0.002205079358459154, "phrase": "particularly_gamma"}, {"score": 0.0021049977753042253, "phrase": "unlabeled_binary_trees"}], "paper_keywords": ["largest common subtree", " tree alignment", " edit distance", " pattern matching"], "paper_abstract": "We present fast algorithms for computing the largest common subtree (LCST) and for computing the optimal alignment when two similar unordered trees are given. For the LCST problem for rooted trees, we present an O(4(K)n) time algorithm, where n is the maximum size of two input trees and the total number of non-common nodes is bounded by K. We extend this algorithm for unrooted trees and obtain an O(K4(K)n) time algorithm. Both of these are subquadratic for two similar trees within K = o(log(4) n) differences. We also show that the alignment problem for rooted and unordered trees of bounded degree can be solved in O(gamma(K)n) time for a constant gamma. Particularly gamma is at most 4.45 for unlabeled binary trees.", "paper_title": "Fast algorithms for comparison of similar unordered trees", "paper_id": "WOS:000238454100012"}