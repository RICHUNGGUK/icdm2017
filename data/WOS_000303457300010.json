{"auto_keywords": [{"score": 0.03822145076264533, "phrase": "complex_system"}, {"score": 0.03632066591054605, "phrase": "opm"}, {"score": 0.00481495049065317, "phrase": "object-process_diagrams"}, {"score": 0.004675930527604869, "phrase": "system's_conceptual_model"}, {"score": 0.00438399094249306, "phrase": "apparently_contradicting_requirements"}, {"score": 0.0039218440805789965, "phrase": "formal_modeling_languages"}, {"score": 0.003487721546598799, "phrase": "object-process_methodology"}, {"score": 0.003367077034382727, "phrase": "holistic_systems_modeling_methodology"}, {"score": 0.002924694271730544, "phrase": "refinement-abstraction_operations"}, {"score": 0.0027417911324611917, "phrase": "basic_syntax"}, {"score": 0.0026624684547385718, "phrase": "opm_model"}, {"score": 0.00249592321829865, "phrase": "incorrect_or_ambiguous_models"}, {"score": 0.002409503258044183, "phrase": "formal_definition"}, {"score": 0.002326068563512387, "phrase": "graph_grammar"}, {"score": 0.002258745901862197, "phrase": "opm_diagrams"}, {"score": 0.0021805201234139475, "phrase": "validation_methodology"}, {"score": 0.002142426911242168, "phrase": "semantic_and_syntactic_correctness"}, {"score": 0.0021049977753042253, "phrase": "single_object-process_diagram"}], "paper_keywords": ["Formal system model", " Object-process modeling", " Graph transformation", " Model verification"], "paper_abstract": "Two basic requirements from a system's conceptual model are correctness and comprehensibility. Most modeling methodologies satisfy only one of these apparently contradicting requirements, usually comprehensibility, leaving aside problems of correctness and ambiguousness that are associated with expressiveness. Some formal modeling languages do exist, but in these languages a complete model of a complex system is fairly complicated to understand. Object-process methodology (OPM) is a holistic systems modeling methodology that combines the two major aspects of a system-structure and behavior-in one model, providing mechanisms to manage the complexity of the model using refinement-abstraction operations, which divide a complex system into many interconnected diagrams. Although the basic syntax and semantics of an OPM model are defined, they are incomplete and leave room for incorrect or ambiguous models. This work advances the formal definition of OPM by providing a graph grammar for creating and checking OPM diagrams. The grammar provides a validation methodology of the semantic and syntactic correctness of a single object-process diagram.", "paper_title": "A graph grammar-based formal validation of object-process diagrams", "paper_id": "WOS:000303457300010"}