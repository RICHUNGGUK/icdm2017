{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "test_purpose_definition"}, {"score": 0.0038309141193444015, "phrase": "data_types"}, {"score": 0.0036660436272785476, "phrase": "data-based_messages"}, {"score": 0.0035082436540296406, "phrase": "state_variables"}, {"score": 0.0033868916699805224, "phrase": "symbolic_execution_techniques"}, {"score": 0.0032697235411641695, "phrase": "iosts_behaviours"}, {"score": 0.00304737045343781, "phrase": "test_purposes"}, {"score": 0.0028652153774536967, "phrase": "test_case_generation"}, {"score": 0.002693919110230191, "phrase": "already_existing_approaches"}, {"score": 0.0025328377393370642, "phrase": "symbolic_execution_paths"}, {"score": 0.002381365139274329, "phrase": "finite_symbolic_subtrees"}, {"score": 0.0022192891418394514, "phrase": "coverage_criteria"}, {"score": 0.0021049977753042253, "phrase": "running_example"}], "paper_keywords": ["conformance testing", " input/output symbolic transition systems", " test purposes", " symbolic execution", " coverage criteria"], "paper_abstract": "We propose an approach to test whether a system conforms to its specification given in terms of an Input/Output Symbolic Transition System (IOSTS). IOSTSs use data types to enrich transitions with data-based messages and guards depending on state variables. We use symbolic execution techniques both to extract IOSTS behaviours to be tested in the role of test purposes and to ground an algorithm of test case generation. Thus, contrarily to some already existing approaches, our test purposes are directly expressed as symbolic execution paths of the specification. They are finite symbolic subtrees of its symbolic execution. Finally, we give coverage criteria and demonstrate our approach on a running example.", "paper_title": "Symbolic execution techniques for test purpose definition", "paper_id": "WOS:000238107500001"}