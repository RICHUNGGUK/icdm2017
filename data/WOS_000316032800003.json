{"auto_keywords": [{"score": 0.03827193369444666, "phrase": "repeated_events"}, {"score": 0.011290580143833651, "phrase": "bdd"}, {"score": 0.008655428162017522, "phrase": "bdd-based_fault_tree_analysis"}, {"score": 0.0070982422084065735, "phrase": "dflm_heuristic"}, {"score": 0.005799998442820834, "phrase": "rft"}, {"score": 0.005514161840554152, "phrase": "different_specificities"}, {"score": 0.004851224203514754, "phrase": "dflm_orderings"}, {"score": 0.0047026237903774895, "phrase": "bdd_encoding_fault_trees"}, {"score": 0.004623990904432388, "phrase": "chosen_ordering"}, {"score": 0.004562027986828209, "phrase": "theoretical_point"}, {"score": 0.0044706300051082035, "phrase": "best_ordering"}, {"score": 0.004425616928975799, "phrase": "intractable_task"}, {"score": 0.004293267161763508, "phrase": "good_orderings"}, {"score": 0.00413684709497912, "phrase": "best_heuristics"}, {"score": 0.0035779805381654438, "phrase": "fault_tree"}, {"score": 0.00348263058839775, "phrase": "nrft"}, {"score": 0.003401278997237025, "phrase": "dflm_ordering"}, {"score": 0.0033330581836898032, "phrase": "smallest_bdd"}, {"score": 0.003255189076644247, "phrase": "total_number"}, {"score": 0.003168413874902081, "phrase": "randomized_algorithm"}, {"score": 0.003104849179057156, "phrase": "reliable_benchmarks"}, {"score": 0.0030839447259626215, "phrase": "large_number"}, {"score": 0.003063180586734181, "phrase": "random_fault_trees"}, {"score": 0.002815093247670994, "phrase": "small_number"}, {"score": 0.0024343522820859578, "phrase": "size_explosion_problem"}, {"score": 0.002385479082527538, "phrase": "repeated_event_distribution_patterns"}, {"score": 0.002353441996629643, "phrase": "significant_impact"}, {"score": 0.0021192805640815795, "phrase": "top_gate"}], "paper_keywords": ["Fault tree analysis", " benchmark", " event ordering", " binary decision diagram"], "paper_abstract": "In BDD-based fault tree analysis, the size of BDD encoding fault trees heavily depends on the chosen ordering. From a theoretical point of view, finding the best ordering is an intractable task. So, heuristics are used to get good orderings. The most simple, and often one of the best heuristics is depth first left most (DFLM) heuristic. Although having been used widely, the performance of DFLM heuristic is still only vaguely understood, and not much formal work has been done. This paper starts from two different research objects: fault tree without repeated events (NRFT) and fault tree with repeated events (RFT). For NRFT, the BDD generated according to DFLM ordering is proved to be the smallest BDD with the size equal to the total number a events. For RFT, a randomized algorithm is firstly proposed to create reliable benchmarks including large number of random fault trees with different specificities. Then, these benchmarks are used to perform two types of experiments to study the performance of DFLM heuristic. For RFT with small number of repeated events, it is found that the sizes of the BDD built over DFLM orderings are only slightly larger than the sizes of the RFT with different specificities. However, with the increase of the number of repeated events, we encounter the size explosion problem, and the change of repeated event distribution patterns will have a significant impact on the sizes of the BDD built over DFLM orderings. We also find that the number of repeated events is the more important measure than some other specificities (shape, logical type of top gate and OR/AND gate distribution) to estimate the level of the difficulty in BDD-based fault tree analysis.", "paper_title": "DEPTH-FIRST EVENT ORDERING IN BDD-BASED FAULT TREE ANALYSIS", "paper_id": "WOS:000316032800003"}