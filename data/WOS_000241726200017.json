{"auto_keywords": [{"score": 0.03796568354240065, "phrase": "xquery's_declarative_semantics"}, {"score": 0.00481495049065317, "phrase": "side_effects"}, {"score": 0.0046781613377273774, "phrase": "xml_applications"}, {"score": 0.00433200902751133, "phrase": "growing_interest"}, {"score": 0.0041287394089001405, "phrase": "side-effect_operations"}, {"score": 0.004050116768809519, "phrase": "notably_xml_updates"}, {"score": 0.0035060903664150115, "phrase": "evaluation_order"}, {"score": 0.002837188425640173, "phrase": "first-class_xml_updates"}, {"score": 0.0027830917623582903, "phrase": "user-level_control"}, {"score": 0.0022956075241520064, "phrase": "existing_xquery_processor"}, {"score": 0.002145942273032774, "phrase": "basic_database_optimizations"}], "paper_keywords": [""], "paper_abstract": "As XML applications become more complex, there is a growing interest in extending XQuery with side-effect operations, notably XML updates. However, the presence of side-effects is at odds with XQuery's declarative semantics in which evaluation order is unspecified. In this paper, we define \"XQuery!\", an extension of XQuery 1.0 that supports first-class XML updates and user-level control over update application, preserving the benefits of XQuery's declarative semantics when possible. Our extensions can be easily implemented within an existing XQuery processor and we show how to recover basic database optimizations for such a language.", "paper_title": "XQuery! An XML query language with side effects", "paper_id": "WOS:000241726200017"}