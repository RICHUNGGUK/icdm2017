{"auto_keywords": [{"score": 0.04791893615216392, "phrase": "data_stream"}, {"score": 0.04281420600218001, "phrase": "selection_predicates"}, {"score": 0.015206547470878315, "phrase": "incoming_tuples"}, {"score": 0.013258578209442115, "phrase": "continuous_queries"}, {"score": 0.004815035584036516, "phrase": "attribute"}, {"score": 0.00471503739362446, "phrase": "multiple_continuous_queries"}, {"score": 0.00426344619171077, "phrase": "strict_time_and_space_constraints"}, {"score": 0.0038066979615349822, "phrase": "new_scheme"}, {"score": 0.0035593936691826083, "phrase": "asc"}, {"score": 0.0033561632967173856, "phrase": "disjoint_regions"}, {"score": 0.003138030910104256, "phrase": "pre-computed_matching_results"}, {"score": 0.0028015105858516702, "phrase": "overall_evaluation_statistics"}, {"score": 0.0027203027216256013, "phrase": "dropping_ratio"}, {"score": 0.002511522462767081, "phrase": "processing_order"}, {"score": 0.002438699976481979, "phrase": "overall_performance"}, {"score": 0.0024081387633065206, "phrase": "multiple_query_evaluation"}, {"score": 0.0023779596230982234, "phrase": "evaluation_sequence"}, {"score": 0.002299313860419974, "phrase": "run-time_tuple_dropping_ratio"}, {"score": 0.0021953959824690316, "phrase": "proposed_method"}], "paper_keywords": ["data stream", " multiple continuous queries", " selection predicate", " ASC (attribute selection construct)", " MCS (minimal cover set)", " tuple dropping ratio", " conditional selectivity"], "paper_abstract": "The filtering of incoming tuples of a data stream should be completed quickly and continuously, which requires strict time and space constraints. In order to guarantee these constraints, the selection predicates of continuous queries are grouped or indexed in most data stream management systems (DSMS). This paper proposes a new scheme called attribute selection construct (ASC). Given a set of continuous queries, an ASC divides the domain of an attribute of a data stream into a set of disjoint regions based on the selection predicates that are imposed on the attribute. Each region maintains the pre-computed matching results of the selection predicates. Consequently, an ASC can collectively evaluate all of its selection predicates at the same time. Furthermore, it can also monitor the overall evaluation statistics, such as its selectivity and tuple dropping ratio, dynamically. For those attributes that are employed to express the selection predicates of the queries, the processing order of their ASCs can significantly influence the overall performance of a multiple query evaluation. The evaluation sequence can be optimized by periodically capturing the run-time tuple dropping ratio of its current evaluation sequence. The performance of the proposed method is analyzed by a series of experiments to identify its various characteristics. (c) 2008 Elsevier Inc. All rights reserved.", "paper_title": "Attribute-based evaluation of multiple continuous queries for filtering incoming tuples of a data stream", "paper_id": "WOS:000255323300005"}