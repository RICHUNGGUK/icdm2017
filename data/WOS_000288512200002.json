{"auto_keywords": [{"score": 0.01266263934707297, "phrase": "computing_resources"}, {"score": 0.011099507559515838, "phrase": "service_instances"}, {"score": 0.0099367969738952, "phrase": "conflicting_qos_objectives"}, {"score": 0.00481495049065317, "phrase": "service-oriented_clouds"}, {"score": 0.0046928556063004214, "phrase": "service_deployment_optimization"}, {"score": 0.004652845998457721, "phrase": "cloud_computing_environments"}, {"score": 0.00440093312826378, "phrase": "multiple_services"}, {"score": 0.004074397977869244, "phrase": "different_quality"}, {"score": 0.003137714272204095, "phrase": "np"}, {"score": 0.0029797347088361056, "phrase": "existing_optimization_methods"}, {"score": 0.002854645802851, "phrase": "multiobjective_genetic_algorithm"}, {"score": 0.0027821202902740846, "phrase": "pareto-optimal_deployment_configurations"}, {"score": 0.002608744950946475, "phrase": "queueing_theory"}, {"score": 0.0024461474613359994, "phrase": "probabilistic_manner"}, {"score": 0.0023434058350520763, "phrase": "qos_objectives"}, {"score": 0.002254624822004988, "phrase": "experimental_studies"}, {"score": 0.0021973099304606076, "phrase": "quality_deployment_configurations"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["search-based software engineering", " genetic algorithm", " queueing theory", " service level agreement", " service composition", " cloud computing"], "paper_abstract": "This paper focuses on service deployment optimization in cloud computing environments. In a cloud, an application is assumed to consist of multiple services. Each service in an application can be deployed as one or more service instances. Different service instances operate at different quality of service (QoS) levels depending on the amount of computing resources assigned to them. In order to satisfy given performance requirements, i.e. service level agreements (SLAs), each application is required to optimize its deployment configuration such as the number of service instances, the amount of computing resources to assign and the locations of service instances. Since this problem is NP-hard and often faces trade-offs among conflicting QoS objectives in SLAs, existing optimization methods often fail to solve it. E(3)-R is a multiobjective genetic algorithm that seeks a set of Pareto-optimal deployment configurations that satisfy SLAs and exhibit the trade-offs among conflicting QoS objectives. By leveraging queueing theory, E(3)-R estimates the performance of an application and aids defining SLAs in a probabilistic manner. Moreover, E(3)-R automatically reduces the number of QoS objectives and improves the quality of solutions further. Experimental studies demonstrate that E(3)-R efficiently obtains quality deployment configurations that satisfy given SLAs. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Evolutionary deployment optimization for service-oriented clouds", "paper_id": "WOS:000288512200002"}