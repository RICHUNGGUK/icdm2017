{"auto_keywords": [{"score": 0.037413203084667356, "phrase": "previous_version"}, {"score": 0.022848978164102016, "phrase": "gp"}, {"score": 0.02193925718122962, "phrase": "gp_equation"}, {"score": 0.01784492321253911, "phrase": "mb"}, {"score": 0.016989787050906657, "phrase": "new_version"}, {"score": 0.01146574982484527, "phrase": "running_times"}, {"score": 0.010591977900782423, "phrase": "fully_anisotropic_trap"}, {"score": 0.010244327754514592, "phrase": "split-step_crank-nicolson_method"}, {"score": 0.008646227010023818, "phrase": "distributed_program"}, {"score": 0.008629566129581273, "phrase": "test_data"}, {"score": 0.00830295315748578, "phrase": "supplied_input_files"}, {"score": 0.006430340771462126, "phrase": "ideal_speedup"}, {"score": 0.00481495049065317, "phrase": "time-dependent_gross-pitaevskii_equation"}, {"score": 0.004793245766661475, "phrase": "c_programming_language_versions"}, {"score": 0.004787062320362426, "phrase": "earlier_published_fortran_programs"}, {"score": 0.004780887049295476, "phrase": "muruganandam"}, {"score": 0.004774720888040423, "phrase": "adhikari"}, {"score": 0.0047134772925830175, "phrase": "bose-einstein_condensates"}, {"score": 0.004707396263523012, "phrase": "ultra-cold_temperatures"}, {"score": 0.0046740899110677935, "phrase": "fortran_ones"}, {"score": 0.004659028297202333, "phrase": "imaginary-time_propagation"}, {"score": 0.004635030130821457, "phrase": "one-space-variable_form"}, {"score": 0.00455788259881503, "phrase": "two-space-variable_form"}, {"score": 0.004537331396282156, "phrase": "two-dimensional_anisotropic"}, {"score": 0.004531476584805795, "phrase": "three-dimensional_axially-symmetric_traps"}, {"score": 0.00452270846552742, "phrase": "fully-anisotropic_three-dimensional_gp_equation"}, {"score": 0.004496505311754397, "phrase": "twelve_programs"}, {"score": 0.004487804554607934, "phrase": "six_algorithms"}, {"score": 0.00443595085937261, "phrase": "available_cpu_cores"}, {"score": 0.0043846936613643256, "phrase": "typical_results"}, {"score": 0.004373383493061361, "phrase": "threaded_codes"}, {"score": 0.004364919932563366, "phrase": "almost_linear_speedup"}, {"score": 0.004353660546882615, "phrase": "new_programs"}, {"score": 0.0043368256649209905, "phrase": "execution_times"}, {"score": 0.004317266871173371, "phrase": "modern_multi-core_computers"}, {"score": 0.004301375664844481, "phrase": "program"}, {"score": 0.004292248849416307, "phrase": "gp-scl"}, {"score": 0.003967021436047945, "phrase": "cpc_program_library"}, {"score": 0.003961899603431188, "phrase": "queen's_university_of_belfast"}, {"score": 0.003956784357357341, "phrase": "n._ireland"}, {"score": 0.003944025003183652, "phrase": "standard_cpc"}, {"score": 0.003813733060064685, "phrase": "c_language_compiler"}, {"score": 0.00379900663739039, "phrase": "linux"}, {"score": 0.0037892671873573777, "phrase": "mac"}, {"score": 0.003781926929796803, "phrase": "windows"}, {"score": 0.003626321392532069, "phrase": "gb"}, {"score": 0.0034614278018404816, "phrase": "time-dependent_gross-pitaevskii"}, {"score": 0.0033796335027364245, "phrase": "trapped_bose-einstein_condensate"}, {"score": 0.00336655228628723, "phrase": "time-dependent_gp_equation"}, {"score": 0.003336225354214798, "phrase": "discretized_equation"}, {"score": 0.003312588190823237, "phrase": "small_time_steps"}, {"score": 0.0032827457826027306, "phrase": "previous_fortran_programs"}, {"score": 0.003270038349496078, "phrase": "ultra-cold_atoms"}, {"score": 0.003207232877340997, "phrase": "c_programming_language"}, {"score": 0.0031886267639947533, "phrase": "wider_parts"}, {"score": 0.0031824486671094454, "phrase": "corresponding_communities"}, {"score": 0.003168079471049896, "phrase": "numerical_simulations"}, {"score": 0.003157855372575014, "phrase": "highly_experimentally_relevant_geometries"}, {"score": 0.003131426385309348, "phrase": "detailed_numerical_studies"}, {"score": 0.0030025526484574135, "phrase": "scalability_results"}, {"score": 0.0029967339940472934, "phrase": "openmp_versions"}, {"score": 0.0028789673880552547, "phrase": "maximal_speedup"}, {"score": 0.0028548658088017815, "phrase": "significant_improvement"}, {"score": 0.002836463128653146, "phrase": "fortran_programs"}, {"score": 0.0027801631944598206, "phrase": "comprehensive_input_files"}, {"score": 0.002739113645069349, "phrase": "tested_and_verified_settings"}, {"score": 0.002735572813553256, "phrase": "gnu's_gcc_compiler"}, {"score": 0.0027320475251801815, "phrase": "intel"}, {"score": 0.002723230942656202, "phrase": "ibm"}, {"score": 0.0027144236125617245, "phrase": "pgi"}, {"score": 0.0027039100392084936, "phrase": "oracle's_suncc"}, {"score": 0.0026993375709246895, "phrase": "sun"}, {"score": 0.0026060359255636444, "phrase": "openmp-parallelizing"}, {"score": 0.0025959411981464962, "phrase": "time_evolution"}, {"score": 0.0025642311494861797, "phrase": "physical_quantities"}, {"score": 0.0025460495941602387, "phrase": "dynamically_allocated_array_variables"}, {"score": 0.0025003474133736318, "phrase": "first_index"}, {"score": 0.002489050308646206, "phrase": "thread_number"}, {"score": 0.0024698021743833655, "phrase": "program_title"}, {"score": 0.002375766074743927, "phrase": "particular_purpose"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Bose-Einstein condensate", " Gross-Pitaevskii equation", " Split-step Crank-Nicolson scheme", " Real- and imaginary-time propagation", " C program", " OpenMP", " Partial differential equation"], "paper_abstract": "We present C programming language versions of earlier published Fortran programs (Muruganandam and Adhikari (2009)[1]) for calculating both stationary and non-stationary solutions of the time-dependent Gross-Pitaevskii (GP) equation. The GP equation describes the properties of dilute Bose-Einstein condensates at ultra-cold temperatures. C versions of programs use the same algorithms as the Fortran ones, involving real- and imaginary-time propagation based on a split-step Crank-Nicolson method. In a one-space-variable form of the GP equation, we consider the one-dimensional, two-dimensional, circularly-symmetric, and the three-dimensional spherically-symmetric harmonic-oscillator traps. In the two-space-variable form, we consider the GP equation in two-dimensional anisotropic and three-dimensional axially-symmetric traps. The fully-anisotropic three-dimensional GP equation is also considered. In addition to these twelve programs, for six algorithms that involve two and three space variables, we have also developed threaded (OpenMP parallelized) programs, which allow numerical simulations to use all available CPU cores on a computer. All 18 programs are optimized and accompanied by makefiles for several popular C compilers. We present typical results for scalability of threaded codes and demonstrate almost linear speedup obtained with the new programs, allowing a decrease in execution times by an order of magnitude on modern multi-core computers. New version program summary Program title: GP-SCL package, consisting of: (i) iniagtime1d, (ii) imagtime2d, (iii) imagtime2d-th, (iv) imagtimecir, (v) imagtime3d, (vi) imagtime3d-th, (vii) irnagtimeaxial, (viii) irnagtimeaxial-th, (ix) imagtimesph, (x) realtime1d, (xi) realtime2d, (xii) realtime2d-th, (xiii) realtimecir, (xiv) realtime3d, (xv) realtime3d-th, (xvi) realtimeaxial, (xvii) realtimeaxial-th, (xviii) realtimesph. Catalogue identifier: AEDU_v2_0. Program Summary URL: http://cpc.cs.qub.ac.uk/summaries/AEDU_v2_0.html. Program obtainable from: CPC Program Library, Queen's University of Belfast, N. Ireland. Licensing provisions: Standard CPC licence, http://cpc.cs.qub.ac.uk/licence/licence.html. No. of lines in distributed program, including test data, etc.: 180583. No. of bytes in distributed program, including test data, etc.: 1188688. Distribution format: tar.gz. Programming language: C and C/OpenMP. Computer: Any modern computer with C language compiler installed. Operating system: Linux, Unix, Mac OS, Windows. RAM: Memory used with the supplied input files: 2-4 MB (i, iv, ix, x, xiii, xvi, xvii, xviii), 8 MB (xi, xii), 32 MB (vii, viii), 80 MB (ii, iii), 700 MB (xiv, xv), 1.2 GB (v, vi). Number of processors used: For threaded (OpenMP parallelized) programs, all available CPU cores on the computer. Classification: 2.9, 4.3, 4.12. Catalogue identifier of previous version: AEDU_v1_0. Journal reference of previous version: Comput. Phys. Commun. 180 (2009) 1888. Does the new version supersede the previous version?: No. Nature of problem: These programs are designed to solve the time-dependent Gross-Pitaevskii (GP) nonlinear partial differential equation in one-, two- or three-space dimensions with a harmonic, circularly-symmetric, spherically-symmetric, axially-symmetric or fully anisotropic trap. The GP equation describes the properties of a dilute trapped Bose-Einstein condensate. Solution method: The time-dependent GP equation is solved by the split-step Crank-Nicolson method by discretizing in space and time. The discretized equation is then solved by propagation, in either imaginary or real time, over small time steps. The method yields solutions of stationary and/or non-stationary problems. Reasons for the new version: Previous Fortran programs Ill are used within the ultra-cold atoms [2-11] and nonlinear optics [12,13] communities, as well as in various other fields [14-16]. This new version represents translation of all programs to the C programming language, which will make it accessible to the wider parts of the corresponding communities. It is well known that numerical simulations of the GP equation in highly experimentally relevant geometries with two or three space variables are computationally very demanding, which presents an obstacle in detailed numerical studies of such systems. For this reason, we have developed threaded (OpenMP parallelized) versions of programs imagtime2d, imagtime3d, imagtimeaxial, realtime2d, realtime3d, realtimeaxial, which are named imagtime2d-th, imagtime3d-th, imagtimeaxial-th, realtime2d-th, realtime3d-th, realtimeaxial-th, respectively. Fig. 1 shows the scalability results obtained for OpenMP versions of programs realtime2d and realtime3d. As we can see, the speedup is almost linear, and on a computer with the total of 8 CPU cores we observe in Fig. 1(a) a maximal speedup of around 7, or roughly 90% of the ideal speedup, while on a computer with 12 CPU cores we find in Fig. 1(b) that the maximal speedup is around 9.6, or 80% of the ideal speedup. Such a speedup represents significant improvement in the performance. Summary of revisions: All Fortran programs from the previous version [1] are translated to C and named in the same way. The structure of all programs is identical. We have introduced the use of comprehensive input files, where all parameters are explained in detail and can be set by a user. We have also included makefiles with tested and verified settings for GNU's gcc compiler, Intel's icc compiler, IBM's xlc compiler, PGI's pgcc compiler, and Oracle's suncc (former Sun's) compiler. In addition to this, 6 new threaded (OpenMP parallelized) programs are supplied (imagtime2d-th, imagtime3d-th, imagtimeaxial-th, realtime2d-th, realtime3d-th, realtimeaxial-th) for algorithms involving two or three space variables. They are written by OpenMP-parallelizing the most computationally demanding loops in functions performing time evolution (calcnu, calclux, calcluy, calcluz), normalization (calcnorm), and calculation of physical quantities (calcmuen, calcrms). Since some of the dynamically allocated array variables are used within such loops, they had to be made private for each thread. This was done by allocating matrices instead of arrays, with the first index in all such matrices corresponding to a thread number. Additional comments: This package consists of 18 programs, see Program title above, out of which 12 programs (i, ii, iv, v, vii, ix, x, xi, xiii, xiv, xvi, xviii) are serial, while 6 programs (iii, vi, viii, xii, xv, xvii) are threaded (OpenMP parallelized). For the particular purpose of each program, please see descriptions below. Running time: All running times given in descriptions below refer to programs compiled with gcc on quad-core Intel Xeon X5460 at 3.16 GHz (CPU1), and programs compiled with icc on quad-core Intel Nehalem E5540 at 2.53 GHz (CPU2). With the supplied input files, running times on CPU1 are: 5 min (i, iv, ix, xii, xiii, xvii, xviii), 10 min (viii, xvi), 15 min (iii, x, xi), 30 min (ii, vi, vii), 2 h (v), 4 h (xv), 15 h (xiv). On CPU2, running times are: 5 min (i, iii, iv, viii, ix, xii, xiii, xvi, xvii, xviii), 10 min (vi, x, xi), 20 min (ii, vii), 1 h (v), 2 h (xv), 12 h (xiv). (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "C programs for solving the time-dependent Gross-Pitaevskii equation in a fully anisotropic trap", "paper_id": "WOS:000306824200024"}