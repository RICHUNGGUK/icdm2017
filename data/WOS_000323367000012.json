{"auto_keywords": [{"score": 0.05007796167411702, "phrase": "approximation_spaces"}, {"score": 0.042622393853769855, "phrase": "sfa"}, {"score": 0.00656395256967727, "phrase": "krylov_bases"}, {"score": 0.004779085953614184, "phrase": "reinforcement_learning"}, {"score": 0.0047457191456362095, "phrase": "linear"}, {"score": 0.004655640997424794, "phrase": "least-squares_temporal_difference"}, {"score": 0.004552360432689039, "phrase": "basis_functions"}, {"score": 0.004468037801239238, "phrase": "potential_value_functions"}, {"score": 0.004192803336288522, "phrase": "ideal_approximation_spaces"}, {"score": 0.004146015717402716, "phrase": "diffusion_distances"}, {"score": 0.0040997480534580065, "phrase": "slow_feature_analysis"}, {"score": 0.003919763262805793, "phrase": "theoretical_statements"}, {"score": 0.003876010646939676, "phrase": "lstd_value_approximation_error"}, {"score": 0.0035965032173588753, "phrase": "proto-value_functions"}, {"score": 0.0030388841099720843, "phrase": "whole_state_space"}, {"score": 0.002982511360424684, "phrase": "novel_importance_sampling_modification"}, {"score": 0.0028728753431854813, "phrase": "lstd"}, {"score": 0.0028301536956600137, "phrase": "policy_iteration"}, {"score": 0.002675589748654224, "phrase": "pca"}, {"score": 0.0026357223464279983, "phrase": "benchmark_tasks"}, {"score": 0.002606264765409507, "phrase": "visual_robot_navigation_experiment"}, {"score": 0.0025578967205807843, "phrase": "realistic_simulation"}, {"score": 0.002382124723569496, "phrase": "subspace-invariant_features"}, {"score": 0.0023466842270226888, "phrase": "self-adjoint_transition_operators"}, {"score": 0.002311769781106355, "phrase": "strong_guarantees"}, {"score": 0.0022859244876449396, "phrase": "approximation_error"}, {"score": 0.002235095576913575, "phrase": "modified_sfa_algorithm"}, {"score": 0.0021936009252585356, "phrase": "lspi"}, {"score": 0.00216907363015155, "phrase": "discrete_and_continuous_state_spaces"}, {"score": 0.0021208374456760447, "phrase": "encoding_diffusion_distances"}, {"score": 0.0021049977753042253, "phrase": "lspi_performance"}], "paper_keywords": ["reinforcement learning", " diffusion distance", " proto value functions", " slow feature analysis", " least-squares policy iteration", " visual robot navigation"], "paper_abstract": "Linear reinforcement learning (RL) algorithms like least-squares temporal difference learning (LSTD) require basis functions that span approximation spaces of potential value functions. This article investigates methods to construct these bases from samples. We hypothesize that an ideal approximation spaces should encode diffusion distances and that slow feature analysis (SFA) constructs such spaces. To validate our hypothesis we provide theoretical statements about the LSTD value approximation error and induced metric of approximation spaces constructed by SFA and the state-of-the-art methods Krylov bases and proto-value functions (PVF). In particular, we prove that SFA minimizes the average (over all tasks in the same environment) bound on the above approximation error. Compared to other methods, SFA is very sensitive to sampling and can sometimes fail to encode the whole state space. We derive a novel importance sampling modification to compensate for this effect. Finally, the LSTD and least squares policy iteration (LSPI) performance of approximation spaces constructed by Krylov bases, PVF, SFA and PCA is compared in benchmark tasks and a visual robot navigation experiment (both in a realistic simulation and with a robot). The results support our hypothesis and suggest that (i) SFA provides subspace-invariant features for MDPs with self-adjoint transition operators, which allows strong guarantees on the approximation error, (ii) the modified SFA algorithm is best suited for LSPI in both discrete and continuous state spaces and (iii) approximation spaces encoding diffusion distances facilitate LSPI performance.", "paper_title": "Construction of Approximation Spaces for Reinforcement Learning", "paper_id": "WOS:000323367000012"}