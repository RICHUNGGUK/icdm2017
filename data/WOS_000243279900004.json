{"auto_keywords": [{"score": 0.04974772154948057, "phrase": "pcp_theorem"}, {"score": 0.04563159615049868, "phrase": "assignment_tester"}, {"score": 0.00481495049065317, "phrase": "combinatorial_proof"}, {"score": 0.004565347942697837, "phrase": "new_proofs"}, {"score": 0.0042887254377523745, "phrase": "standard_pcp_veri"}, {"score": 0.004161553532799662, "phrase": "alleged_proof"}, {"score": 0.004104132253183181, "phrase": "pcp_veri"}, {"score": 0.0036893383303971614, "phrase": "related_notion"}, {"score": 0.003217896008931311, "phrase": "rather_weak_assignment_tester"}, {"score": 0.0031881995084729092, "phrase": "\"black_box"}, {"score": 0.0031151479942176795, "phrase": "full_pcp."}, {"score": 0.0030508294778893016, "phrase": "new_combinatorial_aggregation_technique"}, {"score": 0.0028326787876089697, "phrase": "black-box_tester"}, {"score": 0.0027935419380212758, "phrase": "algebraic_proof_techniques"}, {"score": 0.0027105854326185566, "phrase": "new_orleans"}, {"score": 0.0026983876523816556, "phrase": "la"}, {"score": 0.0026731675306592836, "phrase": "acm"}, {"score": 0.002660761148275445, "phrase": "new_york"}, {"score": 0.002453301956585805, "phrase": "\"standalone\"_combinatorial_construction"}, {"score": 0.002230712019979227, "phrase": "proof_locations"}, {"score": 0.002144437447202989, "phrase": "rather_surprising_manner"}, {"score": 0.0021049977753042253, "phrase": "crucial_point"}], "paper_keywords": ["PCP theorem", " assignment tester", " combinatorial proof"], "paper_abstract": "In this work we look back into the proof of the PCP (probabilistically checkable proofs) theorem, with the goal of finding new proofs that are \"more combinatorial\" and arguably simpler. For that we introduce the notion of an assignment tester, which is a strengthening of the standard PCP veri. er, in the following sense. Given a statement and an alleged proof for it, while the PCP veri. er checks correctness of the statement, the assignment tester checks correctness of the statement and the proof. This notion enables composition that is truly modular; i.e., one can compose two assignment testers without any assumptions on how they are constructed. A related notion called PCPs of proximity was independently introduced in [ E. Ben-Sasson et al., Proceedings of the 36th Annual ACM Symposium on Theory of Computing, Chicago, IL, 2004, ACM, New York, 2004, pp. 1 - 10]. We provide a toolkit of (nontrivial) generic transformations on assignment testers. These transformations may be interesting in their own right, and allow us to present the following two main results: 1. A new proof of the PCP theorem. This proof relies on a rather weak assignment tester given as a \"black box.\" From this, we construct combinatorially the full PCP. An important component of this proof is a new combinatorial aggregation technique (i.e., a new transformation that allows the veri. er to read fewer, though possibly longer, \"pieces\" of the proof). An implementation of the black-box tester can be obtained from the algebraic proof techniques that already appear in [ L. Babai et al., Proceedings of the 23rd ACM Symposium on Theory of Computing, New Orleans, LA, 1991, ACM, New York, 1991, pp. 21 - 31; U. Feige et al., J. ACM, 43 ( 1996), pp. 268 - 292]. 2. Our second construction is a \"standalone\" combinatorial construction showing NP. PCP[ polylog, 1]. This implies, for example, that approximating max-SAT is quasi-NP-hard. This construction relies on a transformation that makes an assignment tester \"oblivious,\" so that the proof locations read are independent of the statement that is being proven. This eliminates, in a rather surprising manner, the need for aggregation in a crucial point in the proof.", "paper_title": "Assignment testers: Towards a combinatorial proof of the PCP theorem", "paper_id": "WOS:000243279900004"}