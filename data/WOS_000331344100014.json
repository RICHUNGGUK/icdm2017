{"auto_keywords": [{"score": 0.03269788843226682, "phrase": "csb"}, {"score": 0.004656871909510407, "phrase": "multicore_cpu."}, {"score": 0.004579780586951551, "phrase": "sparse_matrix_operation"}, {"score": 0.00417793854311445, "phrase": "sparse_matrix"}, {"score": 0.0039737570920809215, "phrase": "dense_vectors"}, {"score": 0.0038431888954930083, "phrase": "widely_used_computing_pattern"}, {"score": 0.0037795163893761027, "phrase": "high_performance_computing"}, {"score": 0.0034476484413811987, "phrase": "efficient_solutions"}, {"score": 0.003197843245296877, "phrase": "efficient_sparse_matrix_format"}, {"score": 0.0031448288291084, "phrase": "compressed_sparse_blocks"}, {"score": 0.0028926147550022607, "phrase": "nearly_the_same_performance"}, {"score": 0.002660574167091781, "phrase": "multithreaded_implementation"}, {"score": 0.002594652434287807, "phrase": "csb_format"}, {"score": 0.0022696277881969896, "phrase": "poski"}, {"score": 0.0021049977753042253, "phrase": "benchmarking_matrices"}], "paper_keywords": ["sparse A(t)Ax", " compressed sparse block", " compressed sparse rows", " multicore"], "paper_abstract": "The sparse matrix operation, y <- y+A(t)Ax, where A is a sparse matrix and x and y are dense vectors, is a widely used computing pattern in High Performance Computing (HPC) applications. The pattern poses challenge to efficient solutions because both a matrix and its transposed version are involved. An efficient sparse matrix format, Compressed Sparse Blocks (CSB), has been proposed to provide nearly the same performance for both Ax and A(t)x. We develop a multithreaded implementation for the CSB format and apply it to solve y <- y+A(t)Ax. Experiments show that our technique outperforms the Compressed Sparse Row (CSR) based solution in POSKI by up to 2.5 fold on over 70% of benchmarking matrices.", "paper_title": "Performance Optimization for Sparse A(t)Ax in Parallel on Multicore CPU", "paper_id": "WOS:000331344100014"}