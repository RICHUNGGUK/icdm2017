{"auto_keywords": [{"score": 0.043437461378529205, "phrase": "throughput_maximization_problem"}, {"score": 0.0390172848863332, "phrase": "higher_throughput"}, {"score": 0.032300927701088396, "phrase": "existing_buffer-forwarding_architecture"}, {"score": 0.02845931641451537, "phrase": "hybrid-forwarding_architecture"}, {"score": 0.00481495049065317, "phrase": "distributed_throughput_maximization"}, {"score": 0.004388035083357706, "phrase": "different_video_quality"}, {"score": 0.004208427318712072, "phrase": "systematic_study"}, {"score": 0.004036141321779216, "phrase": "network_coding"}, {"score": 0.0039252049353279556, "phrase": "delivery_redundancy"}, {"score": 0.003817306032290766, "phrase": "distinct_packets"}, {"score": 0.003593555152077465, "phrase": "higher_quality"}, {"score": 0.003244275497488318, "phrase": "proposed_distributed_algorithm"}, {"score": 0.003140401552000472, "phrase": "proportional_allocation_scheme"}, {"score": 0.003096905353118796, "phrase": "equal_allocation_scheme"}, {"score": 0.0029838294169759663, "phrase": "total_upload_capacity"}, {"score": 0.002795762692061496, "phrase": "buffer-forwarding_approach"}, {"score": 0.0027570267191549774, "phrase": "storage-forwarding_approach"}, {"score": 0.002607362103727335, "phrase": "fully_distributed_algorithm"}, {"score": 0.0025355968118803956, "phrase": "proposed_hybrid-forwarding_architecture"}, {"score": 0.0023537101705489957, "phrase": "priority_weight"}, {"score": 0.0022571810910697013, "phrase": "differentiated_throughput"}, {"score": 0.002236272403824371, "phrase": "different_users"}, {"score": 0.0022052711621931144, "phrase": "video_session"}, {"score": 0.0021746987512551693, "phrase": "buffer-forwarding_architecture"}, {"score": 0.0021049977753042253, "phrase": "different_video_sessions"}], "paper_keywords": ["Convex optimization", " distributed algorithm", " hybrid-forwarding architecture", " peer-to-peer (P2P) video-on-demand (VoD)", " throughput maximization"], "paper_abstract": "In peer-to-peer (P2P) video-on-demand (VoD) systems, a scalable source coding is a promising solution to provide heterogeneous peers with different video quality. In this paper, we present a systematic study on the throughput maximization problem in P2P VoD applications. We apply network coding to scalable P2P systems to eliminate the delivery redundancy. Since each peer receives distinct packets, a peer with a higher throughput can reconstruct the video at a higher quality. We maximize the throughput in the existing buffer-forwarding P2P VoD systems using a fully distributed algorithm. We demonstrate in the simulations that the proposed distributed algorithm achieves a higher throughput compared to the proportional allocation scheme or the equal allocation scheme. The existing buffer-forwarding architecture has a limitation in total upload capacity. Therefore we propose a hybrid-forwarding P2P VoD architecture to improve the throughput by combining the buffer-forwarding approach with the storage-forwarding approach. The throughput maximization problem in the hybrid-forwarding architecture is also solved using a fully distributed algorithm. We demonstrate that the proposed hybrid-forwarding architecture greatly improves the throughput compared to the existing buffer-forwarding architecture. In addition, by adjusting the priority weight at each peer, we can implement the differentiated throughput among different users within a video session in the buffer-forwarding architecture, and the differentiated throughput among different video sessions in the hybrid-forwarding architecture.", "paper_title": "Distributed Throughput Maximization in P2P VoD Applications", "paper_id": "WOS:000264632300016"}