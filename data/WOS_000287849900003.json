{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "selinv-an_algorithm"}, {"score": 0.004735254735115024, "phrase": "selected_inversion"}, {"score": 0.004618166136069052, "phrase": "sparse_symmetric_matrix"}, {"score": 0.004429388453288922, "phrase": "efficient_implementation"}, {"score": 0.00421297029755273, "phrase": "selected_elements"}, {"score": 0.004108742905942481, "phrase": "general_sparse_symmetric_matrix_a"}, {"score": 0.0031186510842824626, "phrase": "efficient_supernodal"}, {"score": 0.003092690568543981, "phrase": "left-looking_ldlt_factorization"}, {"score": 0.002941389980674657, "phrase": "computational_efficiency"}, {"score": 0.002728166176898539, "phrase": "relative_index_array"}, {"score": 0.0024883835349005863, "phrase": "selinv"}, {"score": 0.0023864566654035924, "phrase": "sparse_matrices"}, {"score": 0.0023079225317714815, "phrase": "nonzero_structures"}, {"score": 0.0021049977753042253, "phrase": "electronic_structure_calculations"}], "paper_keywords": ["Design", " Performance", " Electronic structure calculation", " elimination tree", " selected inversion", " sparse LDL(T) factorization", " supernodes"], "paper_abstract": "We describe an efficient implementation of an algorithm for computing selected elements of a general sparse symmetric matrix A that can be decomposed as A = LDL(T), where L is lower triangular and D is diagonal. Our implementation, which is called SelInv, is built on top of an efficient supernodal left-looking LDLT factorization of A. We discuss how computational efficiency can be gained by making use of a relative index array to handle indirect addressing. We report the performance of SelInv on a collection of sparse matrices of various sizes and nonzero structures. We also demonstrate how SelInv can be used in electronic structure calculations.", "paper_title": "SelInv-An Algorithm for Selected Inversion of a Sparse Symmetric Matrix", "paper_id": "WOS:000287849900003"}