{"auto_keywords": [{"score": 0.04936106948081192, "phrase": "gpu."}, {"score": 0.00481495049065317, "phrase": "accelerated_finite_element_elastodynamic_simulations"}, {"score": 0.004578382275810468, "phrase": "explicit_time_domain_finite_element_simulations"}, {"score": 0.004442032546224076, "phrase": "graphical_processing_unit"}, {"score": 0.0043753813457279404, "phrase": "nvidia's_cuda."}, {"score": 0.004331501320993783, "phrase": "critical_importance"}, {"score": 0.0038573081851680656, "phrase": "independently_executed_blocks"}, {"score": 0.00376127170364341, "phrase": "initial_stage"}, {"score": 0.0037235274565193665, "phrase": "memory_arrangement"}, {"score": 0.003402700207896433, "phrase": "abaqus"}, {"score": 0.003073988343893906, "phrase": "non-destructive_testing"}, {"score": 0.002952356518921907, "phrase": "memory_bandwidth"}, {"score": 0.0028642924503126154, "phrase": "card's_maximum"}, {"score": 0.0028070431733705735, "phrase": "bandwidth-limited_nature"}, {"score": 0.0024742098091226203, "phrase": "speed_improvement"}, {"score": 0.0024643171593025275, "phrase": "pogo"}, {"score": 0.002388283252319309, "phrase": "software_package"}, {"score": 0.0022706700510423954, "phrase": "open_source"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Finite element", " Ultrasound", " Elastodynamic", " Graphical processing unit", " GPU"], "paper_abstract": "An approach is developed to perform explicit time domain finite element simulations of elastodynamic problems on the graphical processing unit, using Nvidia's CUDA. Of critical importance for this problem is the arrangement of nodes in memory, allowing data to be loaded efficiently and minimising communication between the independently executed blocks of threads. The initial stage of memory arrangement is partitioning the mesh; both a well established 'greedy' partitioner and a new, more efficient 'aligned' partitioner are investigated. A method is then developed to efficiently arrange the memory within each partition. The software is applied to three models from the fields of non-destructive testing, vibrations and geophysics, demonstrating a memory bandwidth of very close to the card's maximum, reflecting the bandwidth-limited nature of the algorithm. Comparison with Abaqus, a widely used commercial CPU equivalent, validated the accuracy of the results and demonstrated a speed improvement of around two orders of magnitude. A software package, Pogo, incorporating these developments, is released open source, downloadable from http://www.pogo-fea.com/ to benefit the community. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Accelerated finite element elastodynamic simulations using the GPU", "paper_id": "WOS:000327483200033"}