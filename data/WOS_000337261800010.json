{"auto_keywords": [{"score": 0.0369267499271085, "phrase": "feature_location_approach"}, {"score": 0.014372410216360878, "phrase": "text_data"}, {"score": 0.014212207572024026, "phrase": "software_repositories"}, {"score": 0.00481495049065317, "phrase": "time-aware_term-weighting"}, {"score": 0.004680624753255133, "phrase": "source_code_location"}, {"score": 0.0045888223900501695, "phrase": "software_feature"}, {"score": 0.004287467395064377, "phrase": "preprocessing_activities"}, {"score": 0.004263262404800517, "phrase": "text_retrieval"}, {"score": 0.004028572475177205, "phrase": "common_term-weighting_techniques"}, {"score": 0.003850121210842558, "phrase": "term-weighting_techniques"}, {"score": 0.003817548980308163, "phrase": "natural_language_context"}, {"score": 0.0034086028336466688, "phrase": "new_term-weighting_technique"}, {"score": 0.0031665087019813244, "phrase": "dataset_volume"}, {"score": 0.0031219560710193106, "phrase": "dimensionality_reduction"}, {"score": 0.003078028357912228, "phrase": "empirical_evaluation"}, {"score": 0.0028271058251633815, "phrase": "commonly-used_vector_space_model_approach"}, {"score": 0.0027794243746094905, "phrase": "proposed_term-weighting_technique"}, {"score": 0.0024814079299143536, "phrase": "proposed_approach"}, {"score": 0.002184076393632467, "phrase": "significant_improvements"}, {"score": 0.002141134176057931, "phrase": "textual_information"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Feature location", " Software change request", " Time-metadata", " Term-weighting", " Noun usage"], "paper_abstract": "Context: Feature location aims to identify the source code location corresponding to the implementation of a software feature. Many existing feature location methods apply text retrieval to determine the relevancy of the features to the text data extracted from the software repositories. One of the preprocessing activities in text retrieval is term-weighting, which is used to adjust the importance of a term within a document or corpus. Common term-weighting techniques may not be optimal to deal with text data from software repositories due to the origin of term-weighting techniques from a natural language context. Objective: This paper describes how the consideration of when the terms were used in the repositories, under the condition of weighting only the noun terms, can improve a feature location approach. Method: We propose a feature location approach using a new term-weighting technique that takes into account how recently a term has been used in the repositories. In this approach, only the noun terms are weighted to reduce the dataset volume and avoid dealing with dimensionality reduction. Results: An empirical evaluation of the approach on four open-source projects reveals improvements to the accuracy, effectiveness and performance up to 50%, 17%, and 13%, respectively, when compared to the commonly-used Vector Space Model approach. The comparison of the proposed term-weighting technique with the Term Frequency-Inverse Document Frequency technique shows accuracy, effectiveness, and performance improvements as much as 15%, 10%, and 40%, respectively. The investigation of using only noun terms, instead of using all terms, in the proposed approach also indicates improvements up to 28%, 21%, and 58% on accuracy, effectiveness, and performance, respectively. Conclusion: In general, the use of time in the weighting of terms, along with the use of only the noun terms, makes significant improvements to a feature location approach that relies on textual information. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A noun-based approach to feature location using time-aware term-weighting", "paper_id": "WOS:000337261800010"}