{"auto_keywords": [{"score": 0.0483208463128474, "phrase": "sos"}, {"score": 0.006493622252655659, "phrase": "requirements_engineering"}, {"score": 0.004452731043379068, "phrase": "independent_and_useful_systems"}, {"score": 0.004347972379250724, "phrase": "larger_system"}, {"score": 0.004303830426772906, "phrase": "unique_capabilities"}, {"score": 0.004216880725292, "phrase": "development_life_cycle"}, {"score": 0.004048194450210347, "phrase": "test_cases"}, {"score": 0.0038467574225322086, "phrase": "single_systems"}, {"score": 0.0034497831301482144, "phrase": "different_roles"}, {"score": 0.003426373820419672, "phrase": "different_perspectives"}, {"score": 0.0032117325375830407, "phrase": "system_development"}, {"score": 0.0031254169757175257, "phrase": "research_method"}, {"score": 0.0030831303297783877, "phrase": "case_study"}, {"score": 0.003062201383165999, "phrase": "ericsson_ab._results"}, {"score": 0.002850819170139645, "phrase": "related_factors"}, {"score": 0.002690406375639144, "phrase": "quality_related_reasons"}, {"score": 0.0026721361773711315, "phrase": "quality_related_hinders"}, {"score": 0.0026002844796442818, "phrase": "quality_assurance_responsibles"}, {"score": 0.002565084553019013, "phrase": "sos_view"}, {"score": 0.0025217522723800204, "phrase": "different_hinders"}, {"score": 0.0023879358679564527, "phrase": "sos_context"}, {"score": 0.00235560370536971, "phrase": "quality_awareness"}, {"score": 0.002163193271881447, "phrase": "sub_optimization"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["System of systems development", " Bottlenecks", " Case study"], "paper_abstract": "Context: System of systems (SOS) is a set or arrangement of systems that results when independent and useful systems are to be incorporated into a larger system that delivers unique capabilities. Our investigation showed that the development life cycle (i.e. the activities transforming requirements into design, code, test cases, and releases) in SoS is more prone to bottlenecks in comparison to single systems. Objective: The objective of the research is to identify reasons for bottlenecks in SoS, prioritize their significance according to their effect on bottlenecks, and compare them with respect to different roles and different perspectives, i.e. SoS view (concerned with integration of systems), and systems view (concerned with system development and delivery). Method: The research method used is a case study at Ericsson AB. Results: Results show that the most significant reasons for bottlenecks are related to requirements engineering. All the different roles agree on the significance of requirements related factors. However, there are also disagreements between the roles, in particular with respect to quality related reasons. Quality related hinders are primarily observed and highly prioritized by quality assurance responsibles. Furthermore, SoS view and system view perceive different hinders, and prioritize them differently. Conclusion: We conclude that solutions for requirements engineering in SoS context are needed, quality awareness in the organization has to be achieved end to end, and views between SoS and system view need to be aligned to avoid sub optimization in improvements. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Reasons for bottlenecks in very large-scale system of systems development", "paper_id": "WOS:000340850700015"}