{"auto_keywords": [{"score": 0.04339687839936191, "phrase": "mapping_techniques"}, {"score": 0.00481495049065317, "phrase": "dynamic_switching_of_multiple_data-parallel_applications"}, {"score": 0.004739773204474094, "phrase": "embedded_many-core_socs"}, {"score": 0.004450568197899267, "phrase": "multiple_applications"}, {"score": 0.0037133478610481994, "phrase": "design_time"}, {"score": 0.0032223742018434856, "phrase": "potential_parallelism"}, {"score": 0.00314708280192844, "phrase": "many-core_architecture"}, {"score": 0.0030254743224136273, "phrase": "proposed_static_mapping"}, {"score": 0.0029781530607129653, "phrase": "dynamic_application_switching"}, {"score": 0.0025038930574283174, "phrase": "static_mapping"}, {"score": 0.00238816839721704, "phrase": "integer_linear_programming"}, {"score": 0.002242127152093798, "phrase": "greedy_algorithm"}, {"score": 0.0022070310530794097, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_techniques"}], "paper_keywords": ["many-core SoCs", " application mapping", " system-level design", " embedded systems"], "paper_abstract": "This paper studies mapping techniques of multiple applications on embedded many-core SoCs. The mapping techniques proposed in this paper are static which means the mapping is decided at design time. The mapping techniques take into account both inter-application and intra-application parallelism in order to fully utilize the potential parallelism of the many-core architecture. Additionally, the proposed static mapping supports dynamic application switching, which means the applications mapped onto the same cores are switched to each other at runtime. Two approaches are proposed for static mapping: one approach is based on integer linear programming and the other is based on a greedy algorithm. Experimental results show the effectiveness of the proposed techniques.", "paper_title": "Static Mapping with Dynamic Switching of Multiple Data-Parallel Applications on Embedded Many-Core SoCs", "paper_id": "WOS:000348141300001"}