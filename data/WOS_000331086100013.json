{"auto_keywords": [{"score": 0.049124089120586564, "phrase": "quadratic_knapsack_problem"}, {"score": 0.00481495049065317, "phrase": "dynamic_programming_heuristic"}, {"score": 0.0043533862892678864, "phrase": "knapsack_problem"}, {"score": 0.00418134346679498, "phrase": "dynamic_programming"}, {"score": 0.0034189581525998964, "phrase": "np"}, {"score": 0.0033045378860812403, "phrase": "strong_sense"}, {"score": 0.0030482430937467013, "phrase": "pseudo-polynomial_time"}, {"score": 0.002869115451202179, "phrase": "dynamic_programming_approach"}, {"score": 0.002811770047652563, "phrase": "linear_knapsack_problem"}, {"score": 0.0026823700218343506, "phrase": "highly_effective_constructive_heuristic"}, {"score": 0.002628747284714371, "phrase": "quadratic_version"}, {"score": 0.002524688179363081, "phrase": "lower_bounds"}, {"score": 0.0021917966722180132, "phrase": "simple_local_search_step"}, {"score": 0.0021049977753042253, "phrase": "optimal_solution"}], "paper_keywords": ["knapsack problems", " integer programming", " dynamic programming"], "paper_abstract": "It is well known that the standard (linear) knapsack problem can be solved exactly by dynamic programming in O(nc) time, where n is the number of items and c is the capacity of the knapsack. The quadratic knapsack problem, on the other hand, is NP-hard in the strong sense, which makes it unlikely that it can be solved in pseudo-polynomial time. We show, however, that the dynamic programming approach to the linear knapsack problem can be modified to yield a highly effective constructive heuristic for the quadratic version. In our experiments, the lower bounds obtained by our heuristic were consistently within a fraction of a percent of optimal. Moreover, the addition of a simple local search step enabled us to obtain the optimal solution of all instances considered.", "paper_title": "A Dynamic Programming Heuristic for the Quadratic Knapsack Problem", "paper_id": "WOS:000331086100013"}