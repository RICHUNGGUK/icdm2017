{"auto_keywords": [{"score": 0.03332169746093553, "phrase": "unit-resolution_rule"}, {"score": 0.02568939321324681, "phrase": "width-k_resolution"}, {"score": 0.004310752197635499, "phrase": "practical_sat-solvers"}, {"score": 0.004118751115632515, "phrase": "unit-clause_propagation"}, {"score": 0.003735522846193052, "phrase": "concrete_algorithm"}, {"score": 0.0035458802311188497, "phrase": "practical_solvers"}, {"score": 0.0033439771810057717, "phrase": "new_decision"}, {"score": 0.0028412769256691, "phrase": "internal_randomness"}, {"score": 0.0027501697136375555, "phrase": "perhaps_surprising_fact"}, {"score": 0.0025102759256260703, "phrase": "high_probability"}], "paper_keywords": [""], "paper_abstract": "We off er a new understanding of some aspects of practical SAT-solvers that are based on DPLL with unit-clause propagation, clause-learning, and restarts. We do so by analyzing a concrete algorithm which we claim is faithful to what practical solvers do. In particular, before making any new decision or restart, the solver repeatedly applies the unit-resolution rule until saturation, and leaves no component to the mercy of non-determinism except for some internal randomness. We prove the perhaps surprising fact that, although the solver is not explicitly designed for it, with high probability it ends up behaving as width-k resolution after no more than O(n(2k+2)) conflicts and restarts, where n is the number of variables. In other words, width-k resolution can be thought of as O(n(2k+2)) restarts of the unit-resolution rule with learning.", "paper_title": "Clause-Learning Algorithms with Many Restarts and Bounded-Width Resolution", "paper_id": "WOS:000287372400004"}