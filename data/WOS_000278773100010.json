{"auto_keywords": [{"score": 0.004814983386469265, "phrase": "pen"}, {"score": 0.004706453355638515, "phrase": "evolutionary_computation"}, {"score": 0.004345544625998454, "phrase": "perl"}, {"score": 0.004223415145617665, "phrase": "open_source_license"}, {"score": 0.00401216440036853, "phrase": "evolutionary_algorithms"}, {"score": 0.003899385109646589, "phrase": "design_decisions"}, {"score": 0.0035390378585554547, "phrase": "design_patterns"}, {"score": 0.0032487508969192293, "phrase": "low_performance"}, {"score": 0.00308610073274614, "phrase": "state-of-the-art_library"}, {"score": 0.002982367856063627, "phrase": "java"}, {"score": 0.0022287497627555895, "phrase": "new_operators"}, {"score": 0.0021049977753042253, "phrase": "design_experience"}], "paper_keywords": ["Evolutionary algorithms", " Evolutionary computation", " Perl", " CPAN", " Frameworks", " Design patterns"], "paper_abstract": "This paper describes Algorithm::Evolutionary (A: : E), a Perl module released under an open source license and designed for the exploration and exploitation of evolutionary algorithms. We describe the design decisions taken to enhance flexibility, how performance was improved by using several implementation tweaks, and what kind of design patterns were applied for its development. This work also tries to dispel the myth of low performance of scripting languages by comparing it with a state-of-the-art library (ECJ) written in Java. Besides, we are interested in assessing its efficiency in several possible evolutionary settings, finding out what kind of behavior we can expect, and what can be done to improve it. Applications already written using A: :E are also described, along with how it can be used to create new operators. Finally, some conclusions are drawn from the design experience.", "paper_title": "Algorithm::Evolutionary, a flexible Pen l module for evolutionary computation", "paper_id": "WOS:000278773100010"}