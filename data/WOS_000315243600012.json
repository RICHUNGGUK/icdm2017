{"auto_keywords": [{"score": 0.04820929802388964, "phrase": "indirect_jumps"}, {"score": 0.010612387000973441, "phrase": "object-oriented_languages"}, {"score": 0.006223649849937302, "phrase": "virtual_function_calls"}, {"score": 0.0047815505245723455, "phrase": "jump_targets"}, {"score": 0.004415495322548657, "phrase": "execution_results"}, {"score": 0.004251500979153001, "phrase": "programming_productivity"}, {"score": 0.0034834098902271626, "phrase": "conditional_branches"}, {"score": 0.0031845067058084583, "phrase": "high_accuracy"}, {"score": 0.0026086775334428617, "phrase": "processor's_front-end"}, {"score": 0.002481747081849503, "phrase": "forwarded_execution_results"}, {"score": 0.002168975681697056, "phrase": "actual_execution_results"}, {"score": 0.0021049977753042253, "phrase": "ipc_improvement"}], "paper_keywords": ["processor architecture", " register indirect jump", " object-oriented programming"], "paper_abstract": "Object-oriented languages have recently become common, making register indirect jumps more important than ever. In object-oriented languages, virtual functions are heavily used because they improve programming productivity greatly. Virtual function calls usually consist of register indirect jumps, and consequently, programs written in object-oriented languages contain many register indirect jumps. The prediction of the targets of register indirect jumps is more difficult than the prediction of the direction of conditional branches. Many predictors have been proposed for register indirect jumps, but they cannot predict the jump targets with high accuracy or require very complex hardware. We propose a method that resolves jump targets by forwarding execution results. Our proposal dynamically finds the producers of register indirect jumps in virtual function calls. After the execution of the producers, the execution results are forwarded to the processor's front-end. The jump targets can be resolved by the forwarded execution results without requiring prediction. Our proposal improves the performance of programs that include unpredictable register indirect jumps, because it does not rely on prediction but instead uses actual execution results. Our evaluation shows that the IPC improvement using our proposal is as high as 5.4% on average and 9.8% at maximum.", "paper_title": "Register Indirect Jump Target Forwarding", "paper_id": "WOS:000315243600012"}