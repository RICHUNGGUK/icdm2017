{"auto_keywords": [{"score": 0.02569062334752993, "phrase": "significant_performance_gains"}, {"score": 0.00481495049065317, "phrase": "efficient_mus_extraction"}, {"score": 0.0047555023078686386, "phrase": "minimally_unsatisfiable_subformulas"}, {"score": 0.004581505405526037, "phrase": "wide_range"}, {"score": 0.0045249263666466005, "phrase": "practical_applications"}, {"score": 0.004441359373498799, "phrase": "product_configuration"}, {"score": 0.004386503433248535, "phrase": "knowledge-based_validation"}, {"score": 0.004122180753626982, "phrase": "muses"}, {"score": 0.003996027647611435, "phrase": "recent_maximum_satisfiability_algorithms"}, {"score": 0.0039221899471111, "phrase": "cnf_formula_redundancy_removal"}, {"score": 0.003849711329589429, "phrase": "direct_applications"}, {"score": 0.003802135020791801, "phrase": "propositional_logic"}, {"score": 0.0037087324991876727, "phrase": "mus_extraction"}, {"score": 0.003357435261066107, "phrase": "propositional_formulas"}, {"score": 0.0033159224502739247, "phrase": "conjunctive_normal_form"}, {"score": 0.0031944286166257466, "phrase": "first_algorithm"}, {"score": 0.0029830992938695007, "phrase": "smallest_number"}, {"score": 0.0028917056916949744, "phrase": "sat_solver"}, {"score": 0.0028382152567141784, "phrase": "second_algorithm"}, {"score": 0.002803104254950008, "phrase": "earlier_work"}, {"score": 0.0026835920552084514, "phrase": "new_techniques"}, {"score": 0.002474961375646351, "phrase": "recursive_model_rotation"}, {"score": 0.0023546984428119864, "phrase": "experimental_results"}, {"score": 0.0022967713922705, "phrase": "representative_practical_benchmarks"}, {"score": 0.002226357953581725, "phrase": "new_algorithms"}, {"score": 0.0021049977753042253, "phrase": "art_mus_extraction_algorithms"}], "paper_keywords": ["Boolean satisfiability", " minimally unsatisfiable subformula"], "paper_abstract": "Minimally Unsatisfiable Subformulas (MUS) find a wide range of practical applications, including product configuration, knowledge-based validation, and hardware and software design and verification. MUSes also find application in recent Maximum Satisfiability algorithms and in CNF formula redundancy removal. Besides direct applications in Propositional Logic, algorithms for MUS extraction have been applied to more expressive logics. This paper proposes two algorithms for computation of MUSes of propositional formulas in Conjunctive Normal Form (CNF). The first algorithm is optimal in its class, meaning that it requires the smallest number of calls to a SAT solver. The second algorithm extends earlier work, but implements a number of new techniques. Among these, this paper analyzes in detail the technique of recursive model rotation, which provides significant performance gains in practice. Experimental results, obtained on representative practical benchmarks, indicate that the new algorithms achieve significant performance gains with respect to state of the art MUS extraction algorithms.", "paper_title": "Towards efficient MUS extraction", "paper_id": "WOS:000306843300003"}