{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "error_handling"}, {"score": 0.0047555023078686386, "phrase": "openmp._openmp"}, {"score": 0.0045249263666466005, "phrase": "numerical_applications"}, {"score": 0.004096635798793164, "phrase": "web_servers"}, {"score": 0.0034634973175137486, "phrase": "recovery_mechanism"}, {"score": 0.0032953582866530966, "phrase": "novel_proposal"}, {"score": 0.003039350401123868, "phrase": "openmp"}, {"score": 0.0029097582786754444, "phrase": "current_openmp_specification"}, {"score": 0.002414082940963702, "phrase": "specific_errors"}, {"score": 0.0021049977753042253, "phrase": "openmp_applications"}], "paper_keywords": ["OpenMP", " error handling", " parallel programming", " parallel languages", " fault tolerance"], "paper_abstract": "OpenMP has been focused in performance applied to numerical applications, but when we try to move this focus to other kind of applications, like Web servers, we detect one important lack. In these applications, performance is important, but reliability is even more important, and OpenMP does not have any recovery mechanism. In this paper we present a novel proposal to address this lack. In order to add error handling to OpenMP we propose some extensions to the current OpenMP specification. A directive and a clause are proposed, defining a scope for the error handling (where the error can occur) and specifying a behaviour for handling the specific errors. Some examples of use are presented, and we present also an evaluation showing the impact of this proposal in OpenMP applications. We show that this impact is low enough to consider the proposal worthwhile for OpenMP.", "paper_title": "A proposal for error handling in OpenMP", "paper_id": "WOS:000248228500003"}