{"auto_keywords": [{"score": 0.004689321062844586, "phrase": "compiler_optimizations"}, {"score": 0.00462773520532301, "phrase": "bug_finding_tools"}, {"score": 0.004506968388996092, "phrase": "common_programming_language_features"}, {"score": 0.003922580121023413, "phrase": "pointer_analysis"}, {"score": 0.003845500924733243, "phrase": "program_execution"}, {"score": 0.0037203741725514126, "phrase": "dynamic_loading"}, {"score": 0.0028739078688746374, "phrase": "andersen's_pointer_analysis"}, {"score": 0.0028173769301594745, "phrase": "full_java_language"}, {"score": 0.0026194209399161184, "phrase": "full_implementation"}, {"score": 0.0025173564697303836, "phrase": "java_virtual_machine"}, {"score": 0.002451527111936163, "phrase": "performance_evaluation"}, {"score": 0.0021330830123432614, "phrase": "program_change"}], "paper_keywords": ["algorithms", " languages", " pointer analysis", " class loading", " reflection", " native interface"], "paper_abstract": "Pointer analysis benefits many useful clients, such as compiler optimizations and bug finding tools. Unfortunately, common programming language features such as dynamic loading, reflection, and foreign language interfaces, make pointer analysis difficult. This article describes how to deal with these features by performing pointer analysis online during program execution. For example, dynamic loading may load code that is not available for analysis before the program starts. Only an online analysis can analyze such code, and thus support clients that optimize or find bugs in it. This article identifies all problems in performing Andersen's pointer analysis for the full Java language, presents solutions to these problems, and uses a full implementation of the solutions in a Java virtual machine for validation and performance evaluation. Our analysis is fast: On average over our benchmark suite, if the analysis recomputes points-to results upon each program change, most analysis pauses take under 0.1 seconds, and add up to 64.5 seconds.", "paper_title": "Fast online pointer analysis", "paper_id": "WOS:000246013700005"}