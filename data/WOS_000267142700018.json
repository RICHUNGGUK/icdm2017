{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "universal_optimization"}, {"score": 0.004579780586951551, "phrase": "uniformly_distributed_integer"}, {"score": 0.004143196873246147, "phrase": "underlying_uniform_distribution"}, {"score": 0.002953711377604328, "phrase": "run-time_penalty"}, {"score": 0.002509284173541882, "phrase": "existing_software"}, {"score": 0.0023566987138026285, "phrase": "hardware_implementations"}, {"score": 0.0022696277881969896, "phrase": "additional_improvements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Random number generation", " Algorithms"], "paper_abstract": "We present a universal optimization for generating a uniformly distributed integer in an interval, based on the underlying uniform distribution. This optimization provides up to 25% run-time improvement, and what is sometimes more important. up to 25% reduction in usage of (pseudo-)random bits. The optimization entails no run-time penalty for all but the most primitive pseudo-random number generators, and can be easily employed by existing software and hardware. For hardware implementations we present additional improvements. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Optimized random number generation in an interval", "paper_id": "WOS:000267142700018"}