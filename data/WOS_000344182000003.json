{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hierarchical_concurrent_real-time_systems"}, {"score": 0.004649302313891199, "phrase": "complex_real-time_systems"}, {"score": 0.004426882270402403, "phrase": "notoriously_difficult_problems"}, {"score": 0.003206916619690171, "phrase": "correct_behavior"}, {"score": 0.003096417317829492, "phrase": "parametric_stateful_timed_communicating_sequential_processes"}, {"score": 0.0029069972482610403, "phrase": "parametric_hierarchical_real-time_systems"}, {"score": 0.0025087506382067536, "phrase": "efficient_parameter_synthesis"}, {"score": 0.0022580713471027996, "phrase": "real-time_model_checker"}, {"score": 0.002226592967032469, "phrase": "psyhcos"}, {"score": 0.0021049977753042253, "phrase": "case_studies"}], "paper_keywords": ["Real-time specification", " Parametric timed verification", " Model checking", " Robustness"], "paper_abstract": "Modeling and verifying complex real-time systems, involving timing delays, are notoriously difficult problems. Checking the correctness of a system for one particular value for each delay does not give any information for other values. It is thus interesting to reason parametrically, by considering that the delays are parameters (unknown constants) and synthesizing a constraint guaranteeing a correct behavior. We present here Parametric Stateful Timed Communicating Sequential Processes, a language capable of specifying and verifying parametric hierarchical real-time systems with complex data structures. Although we prove that the synthesis is undecidable in general, we present several semi-algorithms for efficient parameter synthesis, which behave well in practice. This work has been implemented in a real-time model checker, PSyHCoS, and validated on a set of case studies.", "paper_title": "Parameter synthesis for hierarchical concurrent real-time systems", "paper_id": "WOS:000344182000003"}