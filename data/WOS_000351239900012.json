{"auto_keywords": [{"score": 0.035192881131114524, "phrase": "probability_values"}, {"score": 0.03421376944965005, "phrase": "learning_mechanism"}, {"score": 0.00481495049065317, "phrase": "graph-theoretic_tools"}, {"score": 0.004704187604192605, "phrase": "carpooling_applications"}, {"score": 0.004622783000449884, "phrase": "automatic_service"}, {"score": 0.004542780650208743, "phrase": "commuting_trips"}, {"score": 0.004412494693940597, "phrase": "candidate_carpoolers"}, {"score": 0.004236321075918639, "phrase": "periodically_recurring_trips"}, {"score": 0.004162978902905443, "phrase": "global_carpooling_matching_service"}, {"score": 0.004090901264701185, "phrase": "registered_candidates"}, {"score": 0.003904713104101532, "phrase": "planned_periodic_trips"}, {"score": 0.0031476068430779367, "phrase": "registered_person"}, {"score": 0.002817639725689939, "phrase": "repetitive_execution"}, {"score": 0.002566685388128598, "phrase": "dynamically_changing_graph"}, {"score": 0.0024640253074497114, "phrase": "edge_weights"}, {"score": 0.0023654615987859402, "phrase": "matcher_performance"}, {"score": 0.0022974765563692776, "phrase": "real_world"}, {"score": 0.0021927323694667694, "phrase": "large_scale_agent"}], "paper_keywords": ["Graph theory", " Binary matching", " Agent-based modeling", " Scalability", " Dynamic networks", " Learning"], "paper_abstract": "An automatic service to match commuting trips has been designed. Candidate carpoolers register their personal profile and a set of periodically recurring trips. The Global CarPooling Matching Service shall advise registered candidates how to combine their commuting trips by carpooling. Planned periodic trips correspond to nodes in a graph; the edges are labeled with the probability for for success while negotiating to merge two planned trips by carpooling. The probability values are calculated by a learning mechanism using on one hand the registered person and trip characteristics and on the other hand the negotiation feedback. The probability values vary over time due to repetitive execution of the learning mechanism. As a consequence, the matcher needs to cope with a dynamically changing graph both with respect to topology and edge weights. In order to evaluate the matcher performance before deployment in the real world, it will be exercised using a large scale agent based model. This paper describes both the exercising model and the matcher.", "paper_title": "Exploiting graph-theoretic tools for matching in carpooling applications", "paper_id": "WOS:000351239900012"}