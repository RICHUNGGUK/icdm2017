{"auto_keywords": [{"score": 0.027106442117478768, "phrase": "sgi"}, {"score": 0.00481495049065317, "phrase": "competitive_analysis"}, {"score": 0.004762550320451225, "phrase": "reactive_spin-lock_algorithms"}, {"score": 0.004608730887154718, "phrase": "contention_variation"}, {"score": 0.004459857205489101, "phrase": "great_attention"}, {"score": 0.004339459955098738, "phrase": "multiprocessor_synchronization"}, {"score": 0.004176321608449849, "phrase": "good_performance"}, {"score": 0.004108288481894523, "phrase": "possible_contention_conditions"}, {"score": 0.0037226570791514184, "phrase": "fixed_experimentally_tuned_thresholds"}, {"score": 0.0035630518377071916, "phrase": "dynamic_environments"}, {"score": 0.003318108914777263, "phrase": "new_reactive_spin-lock_algorithm"}, {"score": 0.0030562674358159945, "phrase": "probability_distribution"}, {"score": 0.00294122712771669, "phrase": "new_spin-lock"}, {"score": 0.002861708609922034, "phrase": "synchronization_structures"}, {"score": 0.0027996401456881806, "phrase": "online_algorithmic_techniques"}, {"score": 0.0026213749921120623, "phrase": "application_benchmarks"}, {"score": 0.002564505790176378, "phrase": "multiprocessor_machine"}, {"score": 0.0024951467586005094, "phrase": "intel_xeon_workstation"}, {"score": 0.0022482261385133617, "phrase": "hand-tuned_spin-lock_representatives"}, {"score": 0.002175436093794315, "phrase": "contention_levels"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["reactive synchronization", " spin-locks", " shared memory multiprocessors", " concurrent", " performance", " online algorithms"], "paper_abstract": "Reactive spin-lock algorithms that can automatically adapt to contention variation on the lock have received great attention in the field of multiprocessor synchronization since they can help applications achieve good performance in all possible contention conditions. However, in existing reactive spin-locks the reaction relies on (i) some fixed experimentally tuned thresholds, which may get frequently outdated in dynamic environments like multiprogramming/multiprocessor systems, or (ii) known probability distributions of inputs. This paper presents a new reactive spin-lock algorithm that is completely self-tuning, which means no experimentally tuned parameter nor probability distribution of inputs are needed. The new spin-lock is built on both synchronization structures of applications and online algorithmic techniques. Our experiments, which use the Spark98 kernels and the SPLASH-2 applications as application benchmarks, on a multiprocessor machine SGI Origin2000 and an Intel Xeon workstation have showed that the new self-tuned spin-lock performs as well as the best of hand-tuned spin-lock representatives in a wide range of contention levels. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Efficient self-tuning spin-locks using competitive analysis", "paper_id": "WOS:000247453800015"}