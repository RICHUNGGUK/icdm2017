{"auto_keywords": [{"score": 0.04927872927155838, "phrase": "idf"}, {"score": 0.00481495049065317, "phrase": "scalable_image_retrieval"}, {"score": 0.004766487181100495, "phrase": "inverse_document_frequency"}, {"score": 0.004623990904432388, "phrase": "bag-of-words-based_image_retrieval_application"}, {"score": 0.004425616928975799, "phrase": "high_frequency"}, {"score": 0.004278807087784626, "phrase": "conventional_idf_routine"}, {"score": 0.004207230913063179, "phrase": "visual_word_frequency"}, {"score": 0.0038538167879752137, "phrase": "novel_idf_family"}, {"score": 0.003789322824699646, "phrase": "lp-norm_pooling_technique"}, {"score": 0.0037133478610481994, "phrase": "proposed_idf"}, {"score": 0.0036759314172445934, "phrase": "term_frequency"}, {"score": 0.0036511960413423542, "phrase": "document_frequency"}, {"score": 0.003518086415996508, "phrase": "codebook_information"}, {"score": 0.0034475308539463323, "phrase": "parameter_tuning_strategy"}, {"score": 0.003378385493203297, "phrase": "optimal_balancing"}, {"score": 0.003355645563101351, "phrase": "tf_and_pidf_weights"}, {"score": 0.0033106223384515546, "phrase": "so-called_lp-norm_idf"}, {"score": 0.0032115093493071366, "phrase": "conventional_idf"}, {"score": 0.0031791333962016507, "phrase": "special_case"}, {"score": 0.002805597755796506, "phrase": "proposed_pidf"}, {"score": 0.002758597251689795, "phrase": "visual_word"}, {"score": 0.0027492917990724467, "phrase": "burstiness_phenomenon"}, {"score": 0.002694112801983161, "phrase": "extensive_experiments"}, {"score": 0.0026579524771040736, "phrase": "oxford"}, {"score": 0.0026311801148573358, "phrase": "paris"}, {"score": 0.00257831812581194, "phrase": "ukbench"}, {"score": 0.0024842242921857705, "phrase": "large_scale_databases"}, {"score": 0.0024179512279236207, "phrase": "irrelevant_data"}, {"score": 0.0023774292521631093, "phrase": "mean_average_precision_improvement"}, {"score": 0.0023139986108451946, "phrase": "baseline_tf-idf_approach"}, {"score": 0.002222004614440872, "phrase": "wide_application_scope"}, {"score": 0.0021847592782091923, "phrase": "general_objects"}, {"score": 0.0021336600569395693, "phrase": "postprocessing_steps"}, {"score": 0.0021049977753042253, "phrase": "competitive_results"}], "paper_keywords": ["Image retrieval", " Lp-norm IDF", " burstiness", " visual word frequency"], "paper_abstract": "The inverse document frequency (IDF) is prevalently utilized in the bag-of-words-based image retrieval application. The basic idea is to assign less weight to terms with high frequency, and vice versa. However, in the conventional IDF routine, the estimation of visual word frequency is coarse and heuristic. Therefore, its effectiveness is largely compromised and far from optimal. To address this problem, this paper introduces a novel IDF family by the use of Lp-norm pooling technique. Carefully designed, the proposed IDF considers the term frequency, document frequency, the complexity of images, as well as the codebook information. We further propose a parameter tuning strategy, which helps to produce optimal balancing between TF and pIDF weights, yielding the so-called Lp-norm IDF (pIDF). We show that the conventional IDF is a special case of our generalized version, and two novel IDFs, i.e., the average IDF and the max IDF, can be defined from the concept of pIDF. Further, by counting for the term-frequency in each image, the proposed pIDF helps to alleviate the visual word burstiness phenomenon. Our method is evaluated through extensive experiments on four benchmark data sets (Oxford 5K, Paris 6K, Holidays, and Ukbench). We show that the pIDF works well on large scale databases and when the codebook is trained on irrelevant data. We report an mean average precision improvement of as large as +13.0% over the baseline TF-IDF approach on a 1M data set. In addition, the pIDF has a wide application scope varying from buildings to general objects and scenes. When combined with postprocessing steps, we achieve competitive results compared with the state-of-the-art methods. In addition, since the pIDF is computed offline, no extra computation or memory cost is introduced to the system at all.", "paper_title": "Lp-Norm IDF for Scalable Image Retrieval", "paper_id": "WOS:000340094000001"}