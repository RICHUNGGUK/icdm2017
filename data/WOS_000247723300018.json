{"auto_keywords": [{"score": 0.04931727328027492, "phrase": "multi-agent_systems"}, {"score": 0.00481495049065317, "phrase": "automated_implementation"}, {"score": 0.004776484866276242, "phrase": "communication_aspects"}, {"score": 0.004644247838681628, "phrase": "refcon"}, {"score": 0.004533806239310673, "phrase": "automated_development"}, {"score": 0.004497576466646301, "phrase": "agent_communication_contexts"}, {"score": 0.004217925382695912, "phrase": "interaction_requirements"}, {"score": 0.004167455622565281, "phrase": "mas."}, {"score": 0.004134137523409649, "phrase": "formal_specification_framework"}, {"score": 0.003987516853780387, "phrase": "acc"}, {"score": 0.003635790924434452, "phrase": "exchanging_agents"}, {"score": 0.003592258384936271, "phrase": "xml-based_specification_language"}, {"score": 0.003478694092089197, "phrase": "specification_formalism"}, {"score": 0.0033417571465258, "phrase": "object-oriented_software_architecture"}, {"score": 0.00328849874768242, "phrase": "acc-based_mas_development"}, {"score": 0.003236086384959101, "phrase": "refcon_key_characteristic"}, {"score": 0.0031590250068577867, "phrase": "seamless_integration"}, {"score": 0.0031337465656628132, "phrase": "acc_support"}, {"score": 0.0030591147406390986, "phrase": "existing_mas"}, {"score": 0.0029623549392492777, "phrase": "agent_platform"}, {"score": 0.0028229071631385634, "phrase": "layered_software_architecture"}, {"score": 0.0027890803075309926, "phrase": "computational_reflection"}, {"score": 0.002722634472231842, "phrase": "transparent_evolution"}, {"score": 0.0026792166577171476, "phrase": "existing_systems"}, {"score": 0.0026471070725516467, "phrase": "refcon_framework"}, {"score": 0.0025736694380861604, "phrase": "two-fold_sense"}, {"score": 0.0024922258873137093, "phrase": "new_rules"}, {"score": 0.0024623517958288228, "phrase": "multiple_contexts"}, {"score": 0.0023369711258107244, "phrase": "acc-based_design"}, {"score": 0.0022998594512338177, "phrase": "mas"}, {"score": 0.0022812715029149216, "phrase": "document_sharing"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["multi-agent systems", " software engineering", " computational reflection", " agent contexts", " agent communication languages"], "paper_abstract": "This paper presents REFCON, a framework for the automated development of Agent Communication Contexts (ACCs) in multi-agent systems (MASs). ACCs are intended to capture the interaction requirements of a MAS. A formal specification framework is first presented, aimed at modelling an ACC as a set of rules for filtering and filling messages, based on their contents, and the names and roles of the exchanging agents. A XML-based specification language is then introduced, which encodes the specification formalism for the sake of its computer processing. Finally, an object-oriented software architecture capable of supporting ACC-based MAS development is presented. REFCON key characteristic is that it allows a seamless integration of ACC support (even) into an existing MAS, at run-time, independently of the agent platform used for the implementation. This is made possible by a layered software architecture based on computational reflection, a technology that allows transparent evolution and adaptation of existing systems. The REFCON framework is also dynamic, in the two-fold sense that it is capable of both adding new rules and handling multiple contexts, which it can easily switch among, at run-time. The ACC-based design of an example MAS for document sharing is briefly discussed, as a demonstration of the principles put forward. (C) 2006 Published by Elsevier Ltd.", "paper_title": "A framework for the design and automated implementation of communication aspects in multi-agent systems", "paper_id": "WOS:000247723300018"}