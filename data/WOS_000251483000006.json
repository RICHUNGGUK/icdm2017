{"auto_keywords": [{"score": 0.049665702536301065, "phrase": "multipath_transferring_schemes"}, {"score": 0.042639161611403596, "phrase": "tcp"}, {"score": 0.00481495049065317, "phrase": "transport_protocols"}, {"score": 0.004592340708764929, "phrase": "different_paths"}, {"score": 0.004552981066668676, "phrase": "diverse_delays"}, {"score": 0.004106087647474519, "phrase": "udp"}, {"score": 0.003916098498242888, "phrase": "multiple_paths"}, {"score": 0.0036395944934310524, "phrase": "minimum_possible_delay"}, {"score": 0.003608370966473902, "phrase": "small_buffer_space"}, {"score": 0.0035620354052144656, "phrase": "receiver's_application"}, {"score": 0.003426556090707852, "phrase": "proposed_method"}, {"score": 0.0030109772626153797, "phrase": "tcp_connections"}, {"score": 0.0028591768694918, "phrase": "general_conditions"}, {"score": 0.0027503564589458837, "phrase": "multipath_schemes"}, {"score": 0.002622954968140525, "phrase": "tcp."}, {"score": 0.002555950807368337, "phrase": "analytical_model"}, {"score": 0.0023855210798264205, "phrase": "simulation_experiments"}, {"score": 0.0022651818270925704, "phrase": "optimal_one-path_transmissions"}, {"score": 0.002132420504803564, "phrase": "fast-retransmit_ratio_parameters"}], "paper_keywords": ["multipath transferring", " transport protocols", " reordering", " multimedia communication", " delay"], "paper_abstract": "One major drawback of multipath transferring schemes inspired by usage of different paths with diverse delays is the emergence of reordering among packets of the same flow. In this paper, we present two separate approaches to resolve this problem for UDP and TCP connections. By properly scheduling the packets among multiple paths, our UDP-based approach tries to deliver data to the receiver in-order. while imposing a minimum possible delay and small buffer space on the receiver's application. We theoretically prove the optimality of the proposed method and then present its analytical results. Unfortunately, in the case of TCP, the reordering intensifies the problem by bringing more timeouts and many unnecessary fast-retransmits which eventually degrades the throughput of TCP connections considerably. To address these issues, we first present the general conditions that should be held to avoid timeouts in multipath schemes. Then, we enhance our approach by preventing nonessential fast-retransmit/recovery events in TCP. Moreover, we introduce an analytical model to estimate the probability of triggering 3rd duplicate ACK in our method. Finally, through simulation experiments we show that the performance of our multipath methods is comparable with the optimal one-path transmissions (with aggregated bandwidth); especially, in terms of throughput and fast-retransmit ratio parameters. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Improving performance of transport protocols in multipath transferring schemes", "paper_id": "WOS:000251483000006"}