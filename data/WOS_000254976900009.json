{"auto_keywords": [{"score": 0.049239058804488534, "phrase": "large-scale_video"}, {"score": 0.04814050608144561, "phrase": "demand_system"}, {"score": 0.04575326850542082, "phrase": "file_assignment_problem"}, {"score": 0.00481495049065317, "phrase": "file_assignment"}, {"score": 0.004485735417293941, "phrase": "genetic_algorithm"}, {"score": 0.0040097139701644165, "phrase": "optimal_replication"}, {"score": 0.003916098498242888, "phrase": "movie_files"}, {"score": 0.003626626504149897, "phrase": "capacity_constraints"}, {"score": 0.0035210572541244664, "phrase": "divide-and-conquer_strategy"}, {"score": 0.0034388111429203222, "phrase": "entire_solution_space"}, {"score": 0.0033984088755183287, "phrase": "file_assignments"}, {"score": 0.0032033846797483475, "phrase": "exclusive_set"}, {"score": 0.0031100973266506163, "phrase": "common_file_replication_instance"}, {"score": 0.002966438503447793, "phrase": "greedy_file_allocation_method"}, {"score": 0.002897109710213723, "phrase": "good-quality_heuristic_solution"}, {"score": 0.002651213849567608, "phrase": "heuristic_solution"}, {"score": 0.0025436978068459565, "phrase": "multicopy_movies"}, {"score": 0.0024405312482831646, "phrase": "single-copy_movies"}, {"score": 0.0023003498123420237, "phrase": "ad_hoc_population_handling_methods"}, {"score": 0.002181069180139225, "phrase": "significantly_reduced_search_space"}, {"score": 0.002142696637011647, "phrase": "good-quality_file_assignments"}, {"score": 0.0021049977753042253, "phrase": "computationally_efficient_way"}], "paper_keywords": ["file assignment", " genetic algorithm", " video-on-demand"], "paper_abstract": "We present a genetic algorithm for tackling a file assignment problem for a large-scale video-on-demand system. The file assignment problem is to find the optimal replication and allocation of movie files to disks so that the request blocking probability is minimized subject to capacity constraints. We adopt a divide-and-conquer strategy, where the entire solution space of file assignments is divided into subspaces. Each subspace is an exclusive set of solutions sharing a common file replication instance. This allows us to utilize a greedy file allocation method for finding a good-quality heuristic solution within each subspace. We further design two performance indices to measure the quality of the heuristic solution on 1) its assignment of multicopy movies and 2) its assignment of single-copy movies. We demonstrate that these techniques, together with ad hoc population handling methods, enable genetic algorithms to operate in a significantly reduced search space and achieve good-quality file assignments in a computationally efficient way.", "paper_title": "Evolutionary optimization of file assignment for a large-scale video-on-demand system", "paper_id": "WOS:000254976900009"}