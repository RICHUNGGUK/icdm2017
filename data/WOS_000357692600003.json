{"auto_keywords": [{"score": 0.04556815853514561, "phrase": "foreign_keys"}, {"score": 0.00481495049065317, "phrase": "anonymizing_collections_of_tree-structured_data"}, {"score": 0.004697655699119423, "phrase": "real-world_data"}, {"score": 0.004611554879923759, "phrase": "implicit_or_explicit_structural_relations"}, {"score": 0.00428257928723, "phrase": "xml_documents"}, {"score": 0.004178198896815672, "phrase": "different_values"}, {"score": 0.004076352180903171, "phrase": "privacy_preservation"}, {"score": 0.003738973626996355, "phrase": "e.g._relational_tables"}, {"score": 0.003558830226733501, "phrase": "social_network_graphs"}, {"score": 0.0034506596895901003, "phrase": "intermediate_cases"}, {"score": 0.0030876784650745973, "phrase": "structured_data"}, {"score": 0.0027457584014804574, "phrase": "e.g._xml_documents"}, {"score": 0.0026953359825383624, "phrase": "characteristic_case"}, {"score": 0.002565345470805401, "phrase": "single_person"}, {"score": 0.0025027144548626975, "phrase": "different_tables"}, {"score": 0.002239225269052105, "phrase": "identity_disclosure"}, {"score": 0.0021845387990972543, "phrase": "greedy_anonymization_heuristic"}, {"score": 0.0021049977753042253, "phrase": "large_datasets"}], "paper_keywords": ["Privacy", " tree data", " anonymity", " structural knowledge", " generalization", " disassociation"], "paper_abstract": "Collections of real-world data usually have implicit or explicit structural relations. For example, databases link records through foreign keys, and XML documents express associations between different values through syntax. Privacy preservation, until now, has focused either on data with a very simple structure, e.g. relational tables, or on data with very complex structure e.g. social network graphs, but has ignored intermediate cases, which are the most frequent in practice. In this work, we focus on tree structured data. Such data stem from various applications, even when the structure is not directly reflected in the syntax, e.g. XML documents. A characteristic case is a database where information about a single person is scattered amongst different tables that are associated through foreign keys. The paper defines k((m,n))-anonymity, which provides protection against identity disclosure and proposes a greedy anonymization heuristic that is able to sanitize large datasets. The algorithm and the quality of the anonymization are evaluated experimentally.", "paper_title": "Anonymizing Collections of Tree-Structured Data", "paper_id": "WOS:000357692600003"}