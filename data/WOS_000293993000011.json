{"auto_keywords": [{"score": 0.04419846536070138, "phrase": ".net_framework"}, {"score": 0.005133146759251248, "phrase": "real_objects'_domain"}, {"score": 0.00481495049065317, "phrase": "aspect-oriented_persistence"}, {"score": 0.0047370749839861165, "phrase": "object-oriented_query_using"}, {"score": 0.004437910956996051, "phrase": "aspect_persistence"}, {"score": 0.004002242925856335, "phrase": "object-oriented_queries"}, {"score": 0.003958937342925219, "phrase": "aspect-oriented_persistence_layers"}, {"score": 0.0036288825833675127, "phrase": "first_part"}, {"score": 0.0034180189629740426, "phrase": "persistence_concepts"}, {"score": 0.003201890266327127, "phrase": "next_step"}, {"score": 0.0031500213134140953, "phrase": "object-oriented_querying"}, {"score": 0.003032228032253871, "phrase": "main_part"}, {"score": 0.002934764205541183, "phrase": "object-oriented_querying_ability"}, {"score": 0.0026898636962522505, "phrase": "relation_entities'_domain"}, {"score": 0.002646267286675984, "phrase": "language_integrated_query"}, {"score": 0.0024519545383399773, "phrase": "object-oriented_manner"}, {"score": 0.002284290601837099, "phrase": "storage-objects'_domain"}, {"score": 0.0021049977753042253, "phrase": "existing_linq_providers"}], "paper_keywords": ["Persistence layer", " aspect-orientation", " aspect persistence", " object-oriented query", " language integrated query"], "paper_abstract": "In this article, we discuss aspect persistence, how it can be implemented in the .NET framework, and how to use the .NET framework to provide object-oriented queries for aspect-oriented persistence layers. The manner which aspect-orientation can be available in the .NET framework is investigated in the first part of this article. Then the procedure through which adding persistence concepts to the .NET framework as aspects will be explained. In the next step, providing object-oriented querying is discussed, which is the main part of this article. Having object-oriented querying ability helps processes query in the same object-oriented domain in which objects are defined (not in the relation entities' domain). Language Integrated Query (LINQ) is used to provide the ability of querying in an object-oriented manner. Then, the translation of queries from the real objects' domain to the storage-objects' domain is explained. After such translation, the queries can be run by using the existing LINQ providers (for example LINQ to SQL). Finally, translating the result of queries back into the real objects' domain is discussed.", "paper_title": "DESIGNING AN ASPECT-ORIENTED PERSISTENCE LAYER SUPPORTING OBJECT-ORIENTED QUERY USING THE .NET FRAMEWORK 3.5", "paper_id": "WOS:000293993000011"}