{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "attribute_popularity_distribution_skew"}, {"score": 0.03308886440974064, "phrase": "subscription_storage"}, {"score": 0.0046192222897398685, "phrase": "inherent_phenomenon"}, {"score": 0.004498812433096501, "phrase": "attribute_popularity"}, {"score": 0.004171730509424374, "phrase": "effective_means"}, {"score": 0.0040323765107766335, "phrase": "workload_imbalance"}, {"score": 0.003971938976270902, "phrase": "excessive_total_computation_cost"}, {"score": 0.003942059405218598, "phrase": "inefficient_event_delivery"}, {"score": 0.0035331426502479687, "phrase": "subscription_installation_process"}, {"score": 0.003467040410632942, "phrase": "novel_subscription_installation_strategies"}, {"score": 0.0031665087019813244, "phrase": "peer_workload"}, {"score": 0.0029807267909921628, "phrase": "wide_spreading_of_subscription_storage_and_event_computation_workload"}, {"score": 0.0028271058251633815, "phrase": "architecture_design"}, {"score": 0.002795228413298423, "phrase": "subscription_storage_and_event_delivery_components"}, {"score": 0.0026511422582578027, "phrase": "event_delivery"}, {"score": 0.0025819015229390663, "phrase": "extensive_set"}, {"score": 0.0024395426929046415, "phrase": "significantly_less_total_computation_cost"}, {"score": 0.002340147988348115, "phrase": "event_matching"}, {"score": 0.002279011030331704, "phrase": "extremely_efficient_manner"}, {"score": 0.002120982646893519, "phrase": "schema_attributes"}, {"score": 0.0021049977753042253, "phrase": "network_peers"}], "paper_keywords": ["Publish/subscribe services", " Subscription", " Event", " Structured P2P networks", " Distributed hash table", " Rendezvous-based mapping function"], "paper_abstract": "An inherent phenomenon in real-world publish/subscribe services is the skew in attribute popularity, where some attributes are much more popular than others. None of the many publish/subscribe systems in the literature proposed effective means to address this phenomenon, which results in workload imbalance among peers, excessive total computation cost, inefficient event delivery or all of the above. To combat these problems, we propose two fundamental architectural designs for these systems. First, we propose to exploit the attribute popularity distribution skew in the subscription installation process. A number of novel subscription installation strategies are presented in this paper that exploits the popularity of attributes to spread the load across a multitude of peers so that the peer workload both in subscription storage and in event matching computation is much more balanced. However, wide spreading of subscription storage and event computation workload usually result in inefficient event delivery. As our second contribution, we propose an architecture design where the subscription storage and event delivery components are decoupled. However, the two components are also seamlessly integrated so that event delivery remains extremely efficient. Using an extensive set of experiments, our proposed approach is shown to require only a modest level of subscription replication, require significantly less total computation cost, achieve better load balance among peers in subscription storage and event matching, and deliver events in an extremely efficient manner. In addition, our approach is shown to be scalable in the number of events, subscriptions, schema attributes and network peers.", "paper_title": "EXPLOITING ATTRIBUTE POPULARITY DISTRIBUTION SKEW TO ENHANCE THE PERFORMANCE OF PEER TO PEER PUBLISH/SUBSCRIBE SYSTEMS", "paper_id": "WOS:000292626800033"}