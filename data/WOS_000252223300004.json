{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multi-faceted_security_protocol_analysis"}, {"score": 0.004659951478263083, "phrase": "security_protocol_analysis"}, {"score": 0.004603115982404017, "phrase": "particular_case"}, {"score": 0.004346874334971379, "phrase": "relevant_aspects"}, {"score": 0.004021689117050817, "phrase": "computational_counterpart"}, {"score": 0.003782174375003052, "phrase": "also_present_hidden_assumptions"}, {"score": 0.003372460634140967, "phrase": "verification_framework"}, {"score": 0.003158522476399068, "phrase": "asymmetric_cryptography"}, {"score": 0.0031327496009959464, "phrase": "multi-session_analysis"}, {"score": 0.0029581155916843663, "phrase": "initial_sharing"}, {"score": 0.002933973181012572, "phrase": "secret_keys"}, {"score": 0.0028510114763213596, "phrase": "clear_separation"}, {"score": 0.0027817658627604653, "phrase": "protocol_functioning"}, {"score": 0.0024398167078355224, "phrase": "formal_theory"}, {"score": 0.002294294558114909, "phrase": "fully_fledged_model"}, {"score": 0.00219311232069446, "phrase": "symbolic_level"}, {"score": 0.0021049977753042253, "phrase": "executable_verification_tools"}], "paper_keywords": ["formal verification", " security protocols", " symbolic model checking", " automated verification tools"], "paper_abstract": "Verification of software systems, and security protocol analysis as a particular case, requires frameworks that are expressive, so as to properly capture the relevant aspects of the system and its properties, formal, so as to be provably correct, and with a computational counterpart, so as to support the (semi-) automated certification of properties. Additionally, security protocols also present hidden assumptions about the context, specific subtleties due to the nature of the problem and sources of complexity that tend to make verification incomplete. We introduce a verification framework that is expressive enough to capture a few relevant aspects of the problem, like symmetric and asymmetric cryptography and multi-session analysis, and to make assumptions explicit, e.g., the hypotheses about the initial sharing of secret keys among honest (and malicious) participants. It features a clear separation between the modeling of the protocol functioning and the properties it is expected to enforce, the former in terms of a calculus, the latter in terms of a logic. This framework is grounded on a formal theory that allows us to prove the correctness of the verification carried out within the fully fledged model. It overcomes incompleteness by performing the analysis at a symbolic level of abstraction, which, moreover, transforms into executable verification tools.", "paper_title": "A symbolic framework for multi-faceted security protocol analysis", "paper_id": "WOS:000252223300004"}