{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "search_trees"}, {"score": 0.004427366754240748, "phrase": "non-decreasing_integer_values"}, {"score": 0.0043144799365586375, "phrase": "compressed_representation"}, {"score": 0.0041773934798743405, "phrase": "access_and_search"}, {"score": 0.003767203575060969, "phrase": "linear_list"}, {"score": 0.003623949225126944, "phrase": "consecutive_values"}, {"score": 0.0035087260813209593, "phrase": "small_numbers"}, {"score": 0.0033971539563683174, "phrase": "additional_information"}, {"score": 0.0032468685934998335, "phrase": "efficient_searching"}, {"score": 0.0031845067058084583, "phrase": "encoded_values"}, {"score": 0.0030832123624449028, "phrase": "completely_different_alternative"}, {"score": 0.0028901595183546576, "phrase": "search_tree"}, {"score": 0.0026916956768363158, "phrase": "posting_lists"}, {"score": 0.0026570998719084153, "phrase": "geographic_data"}, {"score": 0.002622947550220266, "phrase": "sparse_bitmaps"}, {"score": 0.0025725382476862305, "phrase": "compressed_suffix_arrays"}, {"score": 0.002319566486828135, "phrase": "experimental_evaluation"}, {"score": 0.0021883400011393564, "phrase": "existing_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Data structure", " Compression", " Integers", " Random access", " Search"], "paper_abstract": "Let X = x(1),x(2),...,x(n) be a sequence of non-decreasing integer values. Storing a compressed representation of X that supports access and search is a problem that occurs in many domains. The most common solution to this problem uses a linear list and encodes the differences between consecutive values with encodings that favor small numbers. This solution includes additional information (i.e. samples) to support efficient searching on the encoded values. We introduce a completely different alternative that achieves compression by encoding the differences in a search tree. Our proposal has many applications, such as the representation of posting lists, geographic data, sparse bitmaps, and compressed suffix arrays, to name just a few. The structure is practical and we provide an experimental evaluation to show that it is competitive with the existing techniques. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "On the compression of search trees", "paper_id": "WOS:000333492200002"}