{"auto_keywords": [{"score": 0.04881990207677595, "phrase": "static_analysis_techniques"}, {"score": 0.00481495049065317, "phrase": "verification_cost"}, {"score": 0.0047385702897315436, "phrase": "product_families"}, {"score": 0.004638602678192715, "phrase": "software_product_line_engineering"}, {"score": 0.004444921827311577, "phrase": "related_products"}, {"score": 0.00439777299939725, "phrase": "explicit_modeling"}, {"score": 0.00421410521089045, "phrase": "software_product_lines"}, {"score": 0.004038076978795421, "phrase": "long_period"}, {"score": 0.0035338315037521627, "phrase": "software_family"}, {"score": 0.0034407781868385423, "phrase": "entire_family"}, {"score": 0.0033680968918579717, "phrase": "considerable_effort"}, {"score": 0.0030923570058383355, "phrase": "verified_products"}, {"score": 0.0029630461161780203, "phrase": "model_checking_costs"}, {"score": 0.002931569771634119, "phrase": "product_line_evolution"}, {"score": 0.0026771333996253783, "phrase": "previous_verification_result"}, {"score": 0.0026345758986796703, "phrase": "proposed_techniques"}, {"score": 0.002578880352208335, "phrase": "static_analysis"}, {"score": 0.002537880772794665, "phrase": "product_family_model"}, {"score": 0.002220551141101661, "phrase": "case_studies"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software product lines", " Model checking", " Program slicing", " Static analysis", " Reduction techniques"], "paper_abstract": "Software product line engineering enables proactive reuse among a set of related products through explicit modeling of commonalities and differences among them. Software product lines are intended to be used in a long period of time. As a result, they evolve over time, due to the changes in the requirements. Having several individual products in a software family, verification of the entire family may take a considerable effort. In this paper we aim to decrease this cost by reducing the number of verified products using static analysis techniques. Furthermore, to reduce model checking costs after product line evolution, we restrict the number of products that should be re-verified by reusing the previous verification result. All proposed techniques are based on static analysis of the product family model with respect to the property and can be automated. To show the effectiveness of these techniques we apply them on a set of case studies and present the results. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Reducing the verification cost of evolving product families using static analysis techniques", "paper_id": "WOS:000333945900003"}