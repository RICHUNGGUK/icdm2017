{"auto_keywords": [{"score": 0.04407953898448545, "phrase": "ca"}, {"score": 0.00481495049065317, "phrase": "cellular_automata"}, {"score": 0.004730158389701481, "phrase": "image_processing"}, {"score": 0.004289686492089576, "phrase": "training_cellular_automata"}, {"score": 0.0036553070575015344, "phrase": "possible_rule_sets"}, {"score": 0.003374094774912924, "phrase": "training_process"}, {"score": 0.0032852337992126564, "phrase": "main_bottleneck"}, {"score": 0.002874726518572154, "phrase": "good_rule_sets"}, {"score": 0.002537880772794665, "phrase": "grayscale_images"}, {"score": 0.0024930878032164757, "phrase": "threshold_decomposition"}, {"score": 0.0023633857274905977, "phrase": "convex_hulls"}, {"score": 0.0021049977753042253, "phrase": "standard_ca_formulation"}], "paper_keywords": ["cellular automata", " image denoising", " image processing", " rule selection"], "paper_abstract": "Experiments were carried out to investigate the possibility of training cellular automata (CA) to perform several image processing tasks. Even if only binary images are considered, the space of all possible rule sets is still very large, and so the training process is the main bottleneck of such an approach. In this paper, the sequential floating forward search method for feature selection was used to select good rule sets for a range of tasks, namely noise filtering (also applied to grayscale images using threshold decomposition), thinning, and convex hulls. Various objective functions for driving the search were considered. Several modifications to the standard CA formulation were made (the B-rule and two-cycle CAs), which were found, in some cases, to improve performance.", "paper_title": "Training cellular automata for image processing", "paper_id": "WOS:000238714200031"}