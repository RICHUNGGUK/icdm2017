{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multiple_aggregations"}, {"score": 0.04584191492999346, "phrase": "network_monitoring"}, {"score": 0.0047113960612140335, "phrase": "data_streams"}, {"score": 0.004635187610736025, "phrase": "high_speed"}, {"score": 0.0045850648862091085, "phrase": "large_volume_input"}, {"score": 0.0045108906244892165, "phrase": "new_class"}, {"score": 0.004342430078306461, "phrase": "web_content_analysis"}, {"score": 0.004295459433506106, "phrase": "sensor_networks"}, {"score": 0.004002242925856335, "phrase": "large_internet_service_provider"}, {"score": 0.003728966994353039, "phrase": "traffic_analysis"}, {"score": 0.0036886073959526396, "phrase": "statistics_collection"}, {"score": 0.003589602322126282, "phrase": "primitive_operation"}, {"score": 0.0034742854447532678, "phrase": "related_aggregate_queries"}, {"score": 0.003201890266327127, "phrase": "high-speed_data_streams"}, {"score": 0.0031329184724341592, "phrase": "two-level_query_processing_architecture"}, {"score": 0.0028096544129939277, "phrase": "fine-granularity_aggregations"}, {"score": 0.0026607205525625995, "phrase": "shared_computation"}, {"score": 0.0025892330566358503, "phrase": "thorough_analysis"}, {"score": 0.0024788167298469455, "phrase": "best_set"}, {"score": 0.0021631447601689444, "phrase": "near-optimal_computation_costs"}, {"score": 0.0021049977753042253, "phrase": "best_adapted_algorithm"}], "paper_keywords": ["Data stream", " Aggregation", " Multiple-query optimization", " Phantom", " GS"], "paper_abstract": "Data streams characterize the high speed and large volume input of a new class of applications such as network monitoring, web content analysis and sensor networks. Among these applications, network monitoring may be the most compelling one-the backbone of a large internet service provider can generate 1 petabyte of data per day. For many network monitoring tasks such as traffic analysis and statistics collection, aggregation is a primitive operation. Various analytical and statistical needs naturally lead to related aggregate queries. In this article, we address the problem of efficiently computing multiple aggregations over high-speed data streams based on the two-level query processing architecture of GS, a real data stream management system deployed in AT & T. We discern that additionally computing and maintaining fine-granularity aggregations (called phantoms) has the benefit of supporting shared computation. Based on a thorough analysis, we propose algorithms to identify the best set of phantoms to maintain and determine allocation of resources (particularly, space) to compute the aggregations. Experiments show that our algorithm achieves near-optimal computation costs, which outperforms the best adapted algorithm by more than an order of magnitude.", "paper_title": "Streaming multiple aggregations using phantoms", "paper_id": "WOS:000280599600005"}