{"auto_keywords": [{"score": 0.03014720888291599, "phrase": "multi-paas_environment"}, {"score": 0.00481495049065317, "phrase": "multi-paas_environments"}, {"score": 0.004537739358948617, "phrase": "saas"}, {"score": 0.0043790755286923794, "phrase": "private_cloud_infrastructure"}, {"score": 0.004192653260742387, "phrase": "cloud_scalability"}, {"score": 0.0038737214010638745, "phrase": "saas_providers"}, {"score": 0.003738200814271716, "phrase": "paas_platform"}, {"score": 0.0036360703245710124, "phrase": "vendor_lock-in"}, {"score": 0.0034811680446852054, "phrase": "multiple_cloud_environments"}, {"score": 0.0033328427701162368, "phrase": "multiple_providers"}, {"score": 0.003306559295382181, "phrase": "different_technologies"}, {"score": 0.003241750934419473, "phrase": "added_benefit"}, {"score": 0.0031782087629067686, "phrase": "overall_availability"}, {"score": 0.0031035949505887083, "phrase": "current_support"}, {"score": 0.0030791137853734152, "phrase": "multi-cloud_applications"}, {"score": 0.0029830992938695007, "phrase": "paashopper"}, {"score": 0.0028786467218197245, "phrase": "multi-tenant_saas_applications"}, {"score": 0.002788865808981643, "phrase": "saas_provider"}, {"score": 0.0027559226203857316, "phrase": "fine-grained_control"}, {"score": 0.002648889316519512, "phrase": "application_data"}, {"score": 0.0024763626300729575, "phrase": "stakeholder-specific_policies"}, {"score": 0.002447101794397243, "phrase": "middleware_dynamically"}, {"score": 0.0023520340492933383, "phrase": "particular_part"}, {"score": 0.0021901023885734, "phrase": "multi-cloud_consisting"}, {"score": 0.002164216680934624, "phrase": "local_jboss_application_server_cluster"}, {"score": 0.00214722593049674, "phrase": "google"}, {"score": 0.0021049977753042253, "phrase": "red_hat_openshift"}], "paper_keywords": ["Multi-cloud", " PaaS", " Policy-driven adaptation", " Middleware", " Portability"], "paper_abstract": "Offering Software-as-a-Service (SaaS) applications on top of a Platform-as-a-Service (PaaS) platform is a promising strategy as the SaaS provider does not need to acquire and maintain private cloud infrastructure, and it enables him/her to enjoy the benefits of cloud scalability and flexiblity as well. However, as this entails losing some control over the application and its data, SaaS providers are in practice reluctant to migrate to a PaaS platform entirely. To alleviate such concerns of vendor lock-in, the concept of a multi-cloud involves integrating and combining multiple cloud environments, private as well as public, but also involving multiple providers and different technologies. This has the added benefit that it further improves overall availability, flexibility and scalability. Current support for multi-cloud applications however is limited. This paper presents PaaSHopper, a middleware platform for developing and operating multi-tenant SaaS applications in a multi-PaaS environment. It enables the SaaS provider to have fine-grained control over the execution of applications and the storage of application data, while offering the tenant some degrees of customization and self-service as well. Driven by stakeholder-specific policies, the middleware dynamically decides which requests and tasks are executed in a particular part of the multi-PaaS environment. We validated this work in the context of four realistic SaaS application cases on top of a multi-cloud consisting of a local JBoss Application Server cluster, Google App Engine, and Red Hat OpenShift.", "paper_title": "PaaSHopper: Policy-driven middleware for multi-PaaS environments", "paper_id": "WOS:000366760400001"}