{"auto_keywords": [{"score": 0.037638504309583376, "phrase": "random_strings"}, {"score": 0.02322730111336099, "phrase": "multi-string_model"}, {"score": 0.021640564504003076, "phrase": "trusted_party"}, {"score": 0.0047825434929393, "phrase": "common_random_string_model"}, {"score": 0.004729016783189566, "phrase": "micali"}, {"score": 0.004676079851998826, "phrase": "cryptographic_protocols"}, {"score": 0.0045822810796067965, "phrase": "standard_model"}, {"score": 0.004450090980540262, "phrase": "random_string"}, {"score": 0.004263689917673375, "phrase": "alarm_bells"}, {"score": 0.003940437538878082, "phrase": "private_information"}, {"score": 0.0038353245215098316, "phrase": "first_place"}, {"score": 0.0037668056706308874, "phrase": "wrong_people"}, {"score": 0.003520547096063646, "phrase": "single_authority"}, {"score": 0.0033805621566026967, "phrase": "different_subsets"}, {"score": 0.0033276340783642507, "phrase": "different_instances"}, {"score": 0.00323152065976341, "phrase": "particular_invocation"}, {"score": 0.0031880988305995157, "phrase": "security_model"}, {"score": 0.0027972156103877846, "phrase": "multi-string_non-interactive_zero-knowledge_proofs"}, {"score": 0.0026024097974558795, "phrase": "arbitrary_other_protocols"}, {"score": 0.0025443537823323674, "phrase": "efficient_simulation-sound_multi-string_nizk_proofs"}, {"score": 0.0024932087770559593, "phrase": "bilinear_map"}, {"score": 0.0024430893385147786, "phrase": "best_constructions"}, {"score": 0.0024266072139084113, "phrase": "single_common_random_string_model"}, {"score": 0.0023939750021324123, "phrase": "universally_composable_commitment_scheme"}, {"score": 0.0023405579554367567, "phrase": "uc_commitment"}, {"score": 0.0023090802271684, "phrase": "plain_model"}, {"score": 0.0022986817915502597, "phrase": "setup_assumptions"}, {"score": 0.002232221461131238, "phrase": "common_reference_string_model"}, {"score": 0.002217158779463804, "phrase": "registered_public_key_model"}, {"score": 0.0022021975140854486, "phrase": "uc_commitment_scheme"}, {"score": 0.0021725765174586496, "phrase": "simple_coin-flipping_protocol"}, {"score": 0.002153050385766306, "phrase": "uniform_random_string"}, {"score": 0.002119300088738801, "phrase": "secure_realization"}, {"score": 0.0021049977753042253, "phrase": "multi-party_computation_protocol"}], "paper_keywords": ["Common random string model", " Multi-string model", " Non-interactive zero-knowledge", " Universally composable commitment", " Multi-party computation"], "paper_abstract": "The common random string model introduced by Blum, Feldman, and Micali permits the construction of cryptographic protocols that are provably impossible to realize in the standard model. We can think of this model as a trusted party generating a random string and giving it to all parties in the protocol. However, the introduction of such a third party should set alarm bells going off: Who is this trusted party? Why should we trust that the string is random? Even if the string is uniformly random, how do we know it does not leak private information to the trusted party? The very point of doing cryptography in the first place is to prevent us from trusting the wrong people with our secrets. In this paper, we propose the more realistic multi-string model. Instead of having one trusted authority, we have several authorities that generate random strings. We do not trust any single authority; we only assume a majority of them generate random strings honestly. Our results also hold even if different subsets of these strings are used in different instances, as long as a majority of the strings used at any particular invocation is honestly generated. This security model is reasonable and at the same time very easy to implement. We could for instance imagine random strings being provided on the Internet, and any set of parties that want to execute a protocol just need to agree on which authorities' strings they want to use. We demonstrate the use of the multi-string model in several fundamental cryptographic tasks. We define multi-string non-interactive zero-knowledge proofs and prove that they exist under general cryptographic assumptions. Our multi-string NIZK proofs have very strong security properties such as simulation-extractability and extraction zero-knowledge, which makes it possible to compose them with arbitrary other protocols and to reuse the random strings. We also build efficient simulation-sound multi-string NIZK proofs for circuit satisfiability based on groups with a bilinear map. The sizes of these proofs match the best constructions in the single common random string model. We also suggest a universally composable commitment scheme in the multi-string model. It has been proven that UC commitment does not exist in the plain model without setup assumptions. Prior to this work, constructions were only known in the common reference string model and the registered public key model. The UC commitment scheme can be used in a simple coin-flipping protocol to create a uniform random string, which in turn enables the secure realization of any multi-party computation protocol.", "paper_title": "Cryptography in the Multi-string Model", "paper_id": "WOS:000336370500005"}