{"auto_keywords": [{"score": 0.05003965534696681, "phrase": "monadic_second-order_unification"}, {"score": 0.03005907338620277, "phrase": "np"}, {"score": 0.004506968388996092, "phrase": "second-order_unification"}, {"score": 0.00428892403807229, "phrase": "function_constants"}, {"score": 0.0030808211830129304, "phrase": "monadic_equations"}, {"score": 0.002286781334850213, "phrase": "singleton_context-free_grammars"}, {"score": 0.0021049977753042253, "phrase": "monadic_second-order_matching"}], "paper_keywords": ["second-order unification", " theorem proving", " lambda calculus", " context-free grammars", " rewriting systems"], "paper_abstract": "Monadic second-order unification is second-order unification where all function constants occurring in the equations are unary. Here we prove that the problem of deciding whether a set of monadic equations has a unifier is NP-complete, where we use the technique of compressing solutions using singleton context-free grammars. We prove that monadic second-order matching is also NP-complete.", "paper_title": "The complexity of monadic second-order unification", "paper_id": "WOS:000258895100016"}