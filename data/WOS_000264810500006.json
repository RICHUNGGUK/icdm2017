{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "formal_software_verification"}, {"score": 0.0029400959763737364, "phrase": "small_programs"}, {"score": 0.002579847272930948, "phrase": "hoare-style_verification"}, {"score": 0.0023644936731468252, "phrase": "dynamic_logic"}, {"score": 0.0021049977753042253, "phrase": "perfect_developer"}], "paper_keywords": ["Formal software verification", " Frege Program Prover", " Key system", " Perfect developer", " Prototype verification system"], "paper_abstract": "We compare four tools regarding their suitability for teaching formal software verification, namely the Frege Program Prover, the Key system, Perfect Developer, and the Prototype Verification System (PVS). We evaluate them on a suite of small programs, which are typical of courses dealing with Hoare-style verification, weakest preconditions, or dynamic logic. Finally we report our experiences with using Perfect Developer in class.", "paper_title": "A comparison of tools for teaching formal software verification", "paper_id": "WOS:000264810500006"}