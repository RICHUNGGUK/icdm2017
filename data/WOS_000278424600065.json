{"auto_keywords": [{"score": 0.03406317587446558, "phrase": "tminer"}, {"score": 0.00481495049065317, "phrase": "tminer_component-based_data_mining_framework"}, {"score": 0.004692227830462433, "phrase": "berzal"}, {"score": 0.004632040400271169, "phrase": "cubero"}, {"score": 0.0043705604923728195, "phrase": "component-based_data_mining_framework"}, {"score": 0.00415050117148714, "phrase": "whole_kdd_process"}, {"score": 0.003992729692096799, "phrase": "complex_data_mining_scenarios"}, {"score": 0.0038409323908446297, "phrase": "aspect-oriented_programming_techniques"}, {"score": 0.003694884775158077, "phrase": "conventional_object-oriented_programming"}, {"score": 0.00306334226516593, "phrase": "alternative_data_mining_techniques"}, {"score": 0.002927780883930371, "phrase": "source_code"}, {"score": 0.0027444334639134217, "phrase": "unintrusive_mechanism"}, {"score": 0.002639968630788011, "phrase": "performance_analysis"}, {"score": 0.00247460024299964, "phrase": "system_implementation"}, {"score": 0.002380381895973937, "phrase": "potential_bottlenecks"}, {"score": 0.0023346234464901978, "phrase": "redundant_computations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Data mining", " Component-based systems", " Aspect-oriented programming", " Crosscutting concerns", " Design patterns", " Performance monitoring"], "paper_abstract": "TMiner (Berzal, Cubero, & Jimenez, 2009) is a component-based data mining framework that has been designed to support the whole KDD process and facilitate the implementation of complex data mining scenarios. This paper shows how aspect-oriented programming techniques support some tasks whose implementation using conventional object-oriented programming would be extremely time-consuming and error-prone. In particular, we have successfully employed aspects in TMiner to evaluate and monitor the I/O performance of alternative data mining techniques. Without having to modify the source code of the system under analysis, aspects provide an unintrusive mechanism to perform this kind of performance analysis. In fact, aspects let us probe a system implementation so that we can identify potential bottlenecks, detect redundant computations, and characterize system behavior + lessons learned during the development of TMiner. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "TMiner aspects: Crosscutting concerns in the TMiner component-based data mining framework", "paper_id": "WOS:000278424600065"}