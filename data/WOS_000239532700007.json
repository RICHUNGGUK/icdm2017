{"auto_keywords": [{"score": 0.02916297463384723, "phrase": "switch_activities"}, {"score": 0.014178744721247041, "phrase": "compression_quality"}, {"score": 0.013542592252167876, "phrase": "proposed_architecture"}, {"score": 0.009480070910944481, "phrase": "edge_extraction"}, {"score": 0.0093354717076203, "phrase": "turn-off_mask"}, {"score": 0.00481495049065317, "phrase": "content-based_subsampling"}, {"score": 0.004704699244406775, "phrase": "novel_power-aware_motion_estimation_architecture"}, {"score": 0.004526503177267299, "phrase": "battery_status_changes"}, {"score": 0.004405779372462873, "phrase": "graceful_tradeoffs"}, {"score": 0.0043718794256931435, "phrase": "power_consumption"}, {"score": 0.004078232992955235, "phrase": "changing_conditions"}, {"score": 0.00393886140366453, "phrase": "available_energy"}, {"score": 0.0037749456215035856, "phrase": "content-based_subsample_algorithm"}, {"score": 0.0036318365746264127, "phrase": "available_energy_decreases"}, {"score": 0.003548579306515579, "phrase": "subsample_rate"}, {"score": 0.0034941337957136013, "phrase": "battery_lifetime"}, {"score": 0.003427246079774314, "phrase": "existing_subsample_algorithms"}, {"score": 0.0033877275374263314, "phrase": "content-based_algorithm"}, {"score": 0.0033486631403337555, "phrase": "edge_pixels"}, {"score": 0.003246672441842787, "phrase": "remaining_low-frequency_part"}, {"score": 0.003123527559542239, "phrase": "aliasing_problem"}, {"score": 0.0030401074516310184, "phrase": "quality_degradation"}, {"score": 0.003005039427642664, "phrase": "subsample_rate_increases"}, {"score": 0.0029589086332593674, "phrase": "power_consumption_mode"}, {"score": 0.002728059572916527, "phrase": "processing_elements"}, {"score": 0.002665465323614577, "phrase": "semi-systolic_array"}, {"score": 0.0025842289219860795, "phrase": "significant_power_consumption_savings"}, {"score": 0.0025347150832077175, "phrase": "high_degree"}, {"score": 0.0024957862318504753, "phrase": "qualified_power-awareness"}, {"score": 0.0024479627964740748, "phrase": "adaptive_control_mechanism"}, {"score": 0.002410363090950055, "phrase": "threshold_value"}, {"score": 0.002391779843744166, "phrase": "edge_determination"}, {"score": 0.0022744242010653997, "phrase": "experimental_results"}, {"score": 0.002205079358459154, "phrase": "different_power_consumption_modes"}, {"score": 0.0021544587602892466, "phrase": "remaining_capacity"}, {"score": 0.002129584983647679, "phrase": "battery_pack"}, {"score": 0.0021049977753042253, "phrase": "power_overhead"}], "paper_keywords": ["motion estimation", " image processing", " VLSI architecture", " video compression", " power-aware system"], "paper_abstract": "This paper presents a novel power-aware motion estimation architecture for battery-powered multimedia devices. As the battery status changes, the proposed architecture adaptively performs graceful tradeoffs between power consumption and compression quality. The tradeoffs are considered to be graceful in that the proposed architecture is scalable with changing conditions and the compression quality is slightly degraded as the available energy is depleted. The key to such tradeoffs lies in a content-based subsample algorithm, first proposed in this paper. As the available energy decreases, the algorithm raises the subsample rate for maximizing the battery lifetime. Differently from the existing subsample algorithms, the content-based algorithm first extracts edge pixels from a macro-block and then subsamples the remaining low-frequency part. By doing so, we can alleviate the aliasing problem and, thus, limit the quality degradation as the subsample rate increases. Given a power consumption mode, the proposed architecture first performs edge extraction to generate a turn-off mask and then uses the turn-off mask to reduce the switch activities of processing elements (PEs) in a semi-systolic array. The reduction of switch activities results in significant power consumption savings. To achieve a high degree of scalability and qualified power-awareness, we use an adaptive control mechanism to set the threshold value for edge determination and make the reduction of switch activities rather stationary. As shown by experimental results, the architecture can dynamically operate in different power consumption modes with little quality degradation according to the remaining capacity of the battery pack while the power overhead of edge extraction is kept under 0.8%.", "paper_title": "A power-aware motion estimation architecture using content-based subsampling", "paper_id": "WOS:000239532700007"}