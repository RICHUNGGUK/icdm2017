{"auto_keywords": [{"score": 0.037852845765124966, "phrase": "state_data"}, {"score": 0.037467139229645396, "phrase": "hardware_tasks"}, {"score": 0.030819141245046484, "phrase": "preemption_points"}, {"score": 0.00481495049065317, "phrase": "multitasking_environment"}, {"score": 0.004764220976404241, "phrase": "dynamically_reconfigurable_processors"}, {"score": 0.004714023408114857, "phrase": "task_preemption"}, {"score": 0.004639712384096822, "phrase": "critical_mechanism"}, {"score": 0.004542441734438654, "phrase": "effective_multi-tasking_environment"}, {"score": 0.0037139103792217143, "phrase": "development_tools"}, {"score": 0.0036359780843400625, "phrase": "great_amount"}, {"score": 0.0031845067058084583, "phrase": "general_method"}, {"score": 0.0030521898646210413, "phrase": "coarse-grained_drpas"}, {"score": 0.002988101395789399, "phrase": "resource_usage"}, {"score": 0.002863921785266393, "phrase": "preemption_states"}, {"score": 0.002818692837561076, "phrase": "user-specified_preemption_latency"}, {"score": 0.002658863179011018, "phrase": "proposed_steps"}, {"score": 0.0026168641536413978, "phrase": "system_design_flow"}, {"score": 0.0025348408238837655, "phrase": "performance_degradation"}, {"score": 0.0024947959375982614, "phrase": "additional_preemption_states"}, {"score": 0.002391067964886602, "phrase": "predefined_points"}, {"score": 0.002196342933346204, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "reasonable_hardware_overhead"}], "paper_keywords": ["dynamically reconfigurable processor", " preemption algorithm", " preemption latency", " hardware overhead"], "paper_abstract": "Task preemption is a critical mechanism for building an effective multi-tasking environment on dynamically reconfigurable processors. When a task is preempted. its necessary stale information must be correctly preserved in order for the task to be resumed later. Not only do coarse-grained Dynamically Reconfigurable Processing Array (DRPAs) devices have different architectures using a variety of development tools, but the great amount of state data of hardware tasks executing on such devices are usually distributed on many different storage elements. To address these difficulties. this paper aims at Studying a general method for capturing the state data of hardware tasks targeting coarse-grained DRPAs. Based on resource usage. algorithms for identifying preemption points and inserting preemption states subject to user-specified preemption latency are proposed. Moreover, a modification to automatically incorporate proposed steps into the system design flow is also discussed. The performance degradation caused by additional preemption states is minimized by allowing preemption only at predefined points where demanded resources are small. The evaluation result using a model based on NEC Electronics' DRP-1 shows that the proposed method can produce preemption points satisfying a given preemption latency with reasonable hardware overhead (from 6% to. 15%).", "paper_title": "A Preemption Algorithm for a Multitasking Environment on Dynamically Reconfigurable Processors", "paper_id": "WOS:000262010400005"}