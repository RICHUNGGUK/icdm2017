{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "architecture-based_context-aware_deployment"}, {"score": 0.004386887374401584, "phrase": "changing_environments"}, {"score": 0.0042610532651691305, "phrase": "main_adaptation_mechanisms"}, {"score": 0.004211731831120046, "phrase": "dynamic_recomposition"}, {"score": 0.004162978902905443, "phrase": "application_components"}, {"score": 0.004020066537823032, "phrase": "key_issues"}, {"score": 0.003927516959113487, "phrase": "context_knowledge"}, {"score": 0.0035989687070420977, "phrase": "new_environmental_conditions"}, {"score": 0.003129317057177867, "phrase": "essential_runtime_abstractions"}, {"score": 0.0030750809317435304, "phrase": "underlying_component_model"}, {"score": 0.002952146666681891, "phrase": "layered_modeling_approach"}, {"score": 0.00280126189041041, "phrase": "run-time_knowledge"}, {"score": 0.002752695791351096, "phrase": "component_composition_process"}, {"score": 0.002720785798036066, "phrase": "service_orientation"}, {"score": 0.0025967927629150715, "phrase": "adaptation_policy"}, {"score": 0.00249293148301837, "phrase": "significant_advantages"}, {"score": 0.0024640253074497114, "phrase": "traditional_approaches"}, {"score": 0.0023792975669318615, "phrase": "resource_usage"}, {"score": 0.0022184630090454132, "phrase": "osgi_middleware"}, {"score": 0.0021049977753042253, "phrase": "architecture-based_management_systems"}], "paper_keywords": ["Adaptive middleware", " Context-specific knowledge", " Run-time composition", " Service-oriented architecture"], "paper_abstract": "Software systems are increasingly expected to dynamically self-adapt to the changing environments. One of the main adaptation mechanisms is dynamic recomposition of application components. This paper addresses the key issues that arise when context knowledge is used to steer the run-time (re)composition process so as to match the new environmental conditions. In order to integrate such knowledge into this process, A Continuous Context-Aware Deployment and Adaptation (ACCADA) framework is proposed. To support run-time component composition, the essential runtime abstractions of the underlying component model are studied. By using a layered modeling approach, our framework gradually incorporates design-time as well as run-time knowledge into the component composition process. Service orientation is employed to facilitate the changes of adaptation policy. Results show that our framework has significant advantages over traditional approaches in light of flexibility, resource usage and lines of code. Although our experience was based on the OSGi middleware, we believe our findings to be general to architecture-based management systems using reflective component models. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Toward architecture-based context-aware deployment and adaptation", "paper_id": "WOS:000286849700002"}