{"auto_keywords": [{"score": 0.03426487420547398, "phrase": "fcm"}, {"score": 0.00481495049065317, "phrase": "embedded_distributed_systems"}, {"score": 0.004701985831087475, "phrase": "modern_embedded_systems_increases"}, {"score": 0.004613516457919661, "phrase": "new_concerns"}, {"score": 0.004441517985511521, "phrase": "new_features"}, {"score": 0.004215397034321004, "phrase": "software_development_life_cycle"}, {"score": 0.004175533280178052, "phrase": "model_driven_engineering"}, {"score": 0.004116440453049531, "phrase": "intensive_use"}, {"score": 0.003815064377019477, "phrase": "complex_systems"}, {"score": 0.0037610536973798113, "phrase": "embedded_ones"}, {"score": 0.003725470458263889, "phrase": "component-based_software_engineering"}, {"score": 0.0035525230119401153, "phrase": "embedded_world"}, {"score": 0.0032766780632972363, "phrase": "flex-eware_component_model"}, {"score": 0.003154360892955196, "phrase": "modern_embedded_systems"}, {"score": 0.0031096747349602344, "phrase": "fcm_unifies_model"}, {"score": 0.002881793492919646, "phrase": "different_requirements"}, {"score": 0.0027479040199262393, "phrase": "control_systems"}, {"score": 0.0027218799769229596, "phrase": "electrical_devices"}, {"score": 0.0026452734009203764, "phrase": "new_concept"}, {"score": 0.002522344964242888, "phrase": "development_process"}, {"score": 0.0023485549678832628, "phrase": "execution_platform"}, {"score": 0.0022500695985527668, "phrase": "flexibility_points"}, {"score": 0.0022076314894741394, "phrase": "model_libraries"}, {"score": 0.0021557052355026048, "phrase": "fcm._copyright"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["embedded system", " software component", " flexibility", " model driven engineering"], "paper_abstract": "The complexity of modern embedded systems increases as they incorporate new concerns such as distribution and mobility. These new features need to be considered as early as possible in the software development life cycle. Model driven engineering promotes an intensive use of models and is now widely seen as a solution to master the development of complex systems such as embedded ones. Component-based software engineering is another major trend that gains acceptance in the embedded world because of its properties such as reuse, modularity, and flexibility. This article proposes the Flex-eWare component model (FCM) for designing and implementing modern embedded systems. The FCM unifies model driven engineering and component-based software engineering and has been evaluated in several application domains with different requirements: wireless sensor networks, distributed client/server applications, and control systems for electrical devices. This approach highlights a new concept: flexibility points that arise at several stages of the development process, that is, in the model (design phase), in the execution platform, and during the execution itself. This flexibility points are captured with model libraries that can extend the FCM. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Flex-eWare: a flexible model driven solution for designing and implementing embedded distributed systems", "paper_id": "WOS:000311307500002"}