{"auto_keywords": [{"score": 0.036785661905051434, "phrase": "moser"}, {"score": 0.01579966830670831, "phrase": "tardos"}, {"score": 0.015502885262655591, "phrase": "lll"}, {"score": 0.007976847700627454, "phrase": "satisfying_assignment"}, {"score": 0.005692848349412961, "phrase": "k-cnf_formulas"}, {"score": 0.005317917530341728, "phrase": "randomized_algorithm"}, {"score": 0.004805305280527652, "phrase": "local_lemma."}, {"score": 0.00469105173766397, "phrase": "l._lovasz"}, {"score": 0.004570366909594095, "phrase": "infinite"}, {"score": 0.004511694233721072, "phrase": "lll."}, {"score": 0.004461634909525319, "phrase": "r._rado"}, {"score": 0.004434866515627038, "phrase": "v._t._sos"}, {"score": 0.004390608131972052, "phrase": "north-holland"}, {"score": 0.004373031098845257, "phrase": "amsterdam"}, {"score": 0.00426900754050533, "phrase": "powerful_result"}, {"score": 0.004251912075877877, "phrase": "probability_theory"}, {"score": 0.004231165081473583, "phrase": "general_framework"}, {"score": 0.004125850449844934, "phrase": "bad_events"}, {"score": 0.0038925903520043623, "phrase": "nonconstructive_existence_proofs"}, {"score": 0.003876996400581697, "phrase": "combinatorial_structures"}, {"score": 0.003853722074175192, "phrase": "prominent_application"}, {"score": 0.0034439443606864187, "phrase": "lovasz_local_lemma"}, {"score": 0.003423267410335745, "phrase": "stoc"}, {"score": 0.003361957593552137, "phrase": "acm"}, {"score": 0.0033484746065102675, "phrase": "new_york"}, {"score": 0.003140047208869709, "phrase": "general_algorithmic_framework"}, {"score": 0.003022465992278672, "phrase": "main_problem"}, {"score": 0.0029564097859974543, "phrase": "efficient_deterministic_algorithm"}, {"score": 0.0028059429045560872, "phrase": "minimal_loss"}, {"score": 0.0027723187662539693, "phrase": "special_case"}, {"score": 0.0027556576784848207, "phrase": "satisfying_assignments"}, {"score": 0.0025892330566358503, "phrase": "deterministic_algorithm"}, {"score": 0.0024772439208355524, "phrase": "deterministic_algorithms"}, {"score": 0.002295070987123633, "phrase": "previous_best_deterministic_algorithm"}, {"score": 0.0022858667031373865, "phrase": "beck"}, {"score": 0.0022630008787375435, "phrase": "polynomial_time"}, {"score": 0.0022135059842714132, "phrase": "first_deterministic_algorithm"}, {"score": 0.002147749117443578, "phrase": "parallel_nc_algorithm"}], "paper_keywords": ["probabilistic method", " derandomization", " satisfiability", " parallelization"], "paper_abstract": "The Lovasz local lemma (LLL) [P. Erdos and L. Lovasz, Problems and results on 3-chromatic hypergraphs and some related questions, in Infinite and Finite Sets, Vol. II, A. Hajnal, R. Rado, and V. T. Sos, eds., North-Holland, Amsterdam, 1975, pp. 609-627] is a powerful result in probability theory that informally states the following: the probability that none of a set of bad events happens is positive if the probability of each event is small compared to the number of events that depend on it. The LLL is often used for nonconstructive existence proofs of combinatorial structures. A prominent application is to k-CNF formulas, where the LLL implies that if every clause in a formula shares variables with at most d <= 2(k)/(sic) - 1 other clauses, then such a formula has a satisfying assignment. Recently, a randomized algorithm to efficiently construct a satisfying assignment in this setting was given by Moser [A constructive proof of the Lovasz local lemma, in STOC '09: Proceedings of the 41st Annual ACM Symposium on Theory of Computing, ACM, New York, 2009, pp. 343-350]. Subsequently Moser and Tardos [J. ACM, 57 (2010), pp. 11:1-11:15] gave a general algorithmic framework for the LLL and a randomized algorithm within this framework to construct the structures guaranteed by the LLL. The main problem left open by Moser and Tardos was to design an efficient deterministic algorithm for constructing structures guaranteed by the LLL. In this paper we provide such an algorithm. Our algorithm works in the general framework of Moser and Tardos with a minimal loss in parameters. For the special case of constructing satisfying assignments for k-CNF formulas with m clauses, where each clause shares variables with at most d <= 2(k/(1+c))/e - 1 other clauses, for any epsilon is an element of (0, 1), we give a deterministic algorithm that finds a satisfying assignment in time (O) over tilde (m(2(1+1/epsilon))). This improves upon the deterministic algorithms of Moser and of Moser and Tardos with running times m(Omega(k2)) and m(Omega(d log d)), respectively, which are superpolynomial for k = omega(1) and d = omega(1), and upon the previous best deterministic algorithm of Beck, which runs in polynomial time only for d <= 2(k/16)/4. Our algorithm is the first deterministic algorithm that works in the general framework of Moser and Tardos. We also give a parallel NC algorithm for the same setting, improving upon an algorithm of Alon [Random Structures Algorithms, 2 (1991), pp. 367-378].", "paper_title": "DETERMINISTIC ALGORITHMS FOR THE LOVASZ LOCAL LEMMA", "paper_id": "WOS:000328889400004"}