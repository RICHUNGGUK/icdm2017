{"auto_keywords": [{"score": 0.047942530352327324, "phrase": "code_scheduling"}, {"score": 0.00481495049065317, "phrase": "power-aware_code_scheduling"}, {"score": 0.004670724342864827, "phrase": "dvs."}, {"score": 0.004114641015648682, "phrase": "independent_instructions"}, {"score": 0.004011603024990615, "phrase": "instruction_level_parallelism"}, {"score": 0.0036988415150699945, "phrase": "power_dissipation"}, {"score": 0.003551694229680741, "phrase": "existing_low-power_techniques"}, {"score": 0.003393115177189967, "phrase": "poweraware_code"}, {"score": 0.003342213190334975, "phrase": "pacs"}, {"score": 0.0031926001871260524, "phrase": "power_gating"}, {"score": 0.0031125795874844438, "phrase": "dynamic_voltage_scaling"}, {"score": 0.003019189898170698, "phrase": "power_consumption"}, {"score": 0.0028263192354046245, "phrase": "compilation_optimization"}, {"score": 0.0027694919925512983, "phrase": "dvs"}, {"score": 0.0024023079401125492, "phrase": "hardware_power_gating"}, {"score": 0.0023659694724243764, "phrase": "proposed_pacs"}, {"score": 0.002226017732566121, "phrase": "dspstone"}, {"score": 0.0022035097331541587, "phrase": "mediabench"}, {"score": 0.002181227522730908, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["DVS", " Power gating", " Code scheduling", " Compiler"], "paper_abstract": "Traditionally, code scheduling is used to optimize the performance of an application, because it can rearrange the code to allow the execution of independent instructions in parallel based on instruction level parallelism (ILP). According to our observations, it can also be applied to reduce power dissipation by taking advantage of the properties of existing low-power techniques. In this paper, we present a poweraware code scheduling (PACS), which is a code scheduling integrated with power gating (PG) and dynamic voltage scaling (DVS) to reduce power consumption while executing an application. In other words, from the viewpoint of compilation optimization, PG and DVS can be applied simultaneously to a code and their impact can be enhanced by code scheduling to further save power. The result shows that when compared with hardware power gating, the proposed PACS can outperform by more than 33% and 41% in terms of energy delay product and energy delay(2) product for DSPStone and Mediabench. Crown Copyright (C) 2014 Published by Elsevier B.V. All rights reserved.", "paper_title": "Power-aware code scheduling assisted with power gating and DVS", "paper_id": "WOS:000333507300005"}