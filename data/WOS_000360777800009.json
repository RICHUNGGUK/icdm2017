{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_cooperative_computing"}, {"score": 0.004261885692956071, "phrase": "message-passing_processes"}, {"score": 0.004145287175409325, "phrase": "dynamic_crashes"}, {"score": 0.003490056936165004, "phrase": "todays_internet-based_computations"}, {"score": 0.0034134024569847264, "phrase": "grid_computing"}, {"score": 0.0033757067564871494, "phrase": "cloud_services"}, {"score": 0.003265090934183249, "phrase": "dynamically_and_different_tasks"}, {"score": 0.003175676186323053, "phrase": "different_processes"}, {"score": 0.002794802975530612, "phrase": "optimum_number"}, {"score": 0.0026881926384093088, "phrase": "best_off-line_algorithm"}, {"score": 0.002542890176213921, "phrase": "online_problem"}, {"score": 0.002486987042061596, "phrase": "competitive_analysis"}, {"score": 0.0023920904611571783, "phrase": "considered_problem"}, {"score": 0.0023656467839555458, "phrase": "different_information_models"}, {"score": 0.0023394947463129642, "phrase": "correctness_criteria"}, {"score": 0.0022007302738063566, "phrase": "best_possible_offline_solutions"}, {"score": 0.002140400526572388, "phrase": "negative_results"}, {"score": 0.0021049977753042253, "phrase": "interesting_research_directions"}], "paper_keywords": ["Task execution", " Dynamic task injection", " Processor crashes and restarts", " Competitive analysis", " Distributed algorithms"], "paper_abstract": "To identify the tradeoffs between efficiency and fault-tolerance in dynamic cooperative computing, we initiate the study of a task performing problem under dynamic processes' crashes/restarts and task injections. The system consists of n message-passing processes which, subject to dynamic crashes and restarts, cooperate in performing tasks that are continuously and dynamically injected to the system. Tasks are not known a priori to the processes. This problem abstracts todays Internet-based computations, such as Grid computing and cloud services, where tasks are generated dynamically and different tasks may become known to different processes. We measure performance in terms of the number of pending tasks, and as such it can be directly compared with the optimum number obtained under the same crash-restart-injection pattern by the best off-line algorithm. Hence, we view the problem as an online problem and we pursue competitive analysis. We propose several deterministic algorithmic solutions to the considered problem under different information models and correctness criteria, and we argue that their performance is close to the best possible offline solutions. We also prove negative results that open interesting research directions. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "On the competitiveness of scheduling dynamically injected tasks on processes prone to crashes and restarts", "paper_id": "WOS:000360777800009"}