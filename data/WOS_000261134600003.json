{"auto_keywords": [{"score": 0.0368372167659939, "phrase": "hpc"}, {"score": 0.00481495049065317, "phrase": "high-performance_application-runtime"}, {"score": 0.004774115617883476, "phrase": "high-performance_application_development"}, {"score": 0.004536244367689415, "phrase": "heterogeneous_grid_environment"}, {"score": 0.0044786435725543685, "phrase": "general_areas"}, {"score": 0.004402973626416765, "phrase": "virtual_environments"}, {"score": 0.004347297312322524, "phrase": "java"}, {"score": 0.004310442732504715, "phrase": "net"}, {"score": 0.0041657281535389615, "phrase": "application_development"}, {"score": 0.003991932110277654, "phrase": "single_environment"}, {"score": 0.003841699919521703, "phrase": "instruction_sets"}, {"score": 0.0037446875860947916, "phrase": "existing_runtime_environments"}, {"score": 0.003527712410706358, "phrase": "necessary_high-performance_computing"}, {"score": 0.0031440159350875057, "phrase": "new_approach"}, {"score": 0.0029998918671747168, "phrase": "motor_system"}, {"score": 0.002899229492461335, "phrase": "high-performance_communication_library"}, {"score": 0.002850168497994985, "phrase": "virtual_machine"}, {"score": 0.0028139168128067343, "phrase": "motor_message"}, {"score": 0.002801935384649699, "phrase": "passing_library"}, {"score": 0.002639440558428147, "phrase": "strong_message"}, {"score": 0.002539978170928796, "phrase": "application_developer"}, {"score": 0.0024863459251358217, "phrase": "common_environment"}, {"score": 0.002465210678474529, "phrase": "hpc_application_development"}, {"score": 0.0024028742248152425, "phrase": "procedural_languages"}, {"score": 0.002332133125576037, "phrase": "modern_object-oriented_languages"}, {"score": 0.0022442249871042026, "phrase": "unique_motor_architecture"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel programming", " virtual machine", " message passing"], "paper_abstract": "High-performance application development remains challenging, particularly tor scientists making the transition to a heterogeneous grid environment. In general areas of computing, virtual environments such as Java and Net have proved to he successful in fostering application development, allowing users to target and compile to a single environment, rather than a range of platforms, instruction sets and libraries. However, existing runtime environments are focused on business and desktop computing and they do not support the necessary high-performance computing (HPC) abstractions required by e-Scientists. Our work is focused on developing an application-runtime that can support these services natively. The result is a new approach to the development of an application-runtime for HPC: the Motor system has been developed by, integrating a high-performance communication library directly within a virtual machine. The Motor message passing library is integrated alongside and in cooperation with other runtime libraries and services while retaining a strong message passing performance. As a result, the application developer is provided with a common environment for HPC application development. This environment supports both procedural languages, such as C, and modern object-oriented languages, such as C#. This paper describes the unique Motor architecture, presents its implementation and demonstrates its performance and use. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Parallel Programming on a High-Performance Application-Runtime", "paper_id": "WOS:000261134600003"}