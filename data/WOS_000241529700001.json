{"auto_keywords": [{"score": 0.04889532068804289, "phrase": "heuristic_programming"}, {"score": 0.00481495049065317, "phrase": "early_artificial_intelligence"}, {"score": 0.004522796947899013, "phrase": "first_area"}, {"score": 0.0043560464825349275, "phrase": "ai_methods"}, {"score": 0.0040916230716372265, "phrase": "favourite_case-studies"}, {"score": 0.003990385737207714, "phrase": "fairly_simple_toy-problems"}, {"score": 0.003795335309109018, "phrase": "crypt_arithmetic"}, {"score": 0.003306559295382181, "phrase": "formal_problems"}, {"score": 0.002447101794397243, "phrase": "real-life_problems"}, {"score": 0.0021585277464070468, "phrase": "drosophila"}, {"score": 0.0021049977753042253, "phrase": "early_ai."}], "paper_keywords": [""], "paper_abstract": "Heuristic programming was the first area in which AI methods were tested. The favourite case-studies were fairly simple toy-problems, such as crypt arithmetic, games, such as checker or chess, and formal problems, such as logic or geometry theorem-proving. These problems are well-defined, roughly speaking, at least in comparison to real-life problems, and as such have played the role of Drosophila in early AI. In this chapter I will investigate the origins of heuristic programming and the shift to more knowledge-based and real-life problem solving.", "paper_title": "Searching in a maze, in search of knowledge: Issues in early artificial intelligence", "paper_id": "WOS:000241529700001"}