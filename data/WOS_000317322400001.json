{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "small_companies"}, {"score": 0.04837880845773563, "phrase": "process_knowledge"}, {"score": 0.03231550833923174, "phrase": "software_process_lines"}, {"score": 0.004765482708043842, "phrase": "software_organizations"}, {"score": 0.004410248125081398, "phrase": "different_projects"}, {"score": 0.004342430078306461, "phrase": "different_processes"}, {"score": 0.004253618550301311, "phrase": "separate_process"}, {"score": 0.004188198923320451, "phrase": "potential_project_context"}, {"score": 0.003855849747095327, "phrase": "consistent_manner"}, {"score": 0.0036616109902631293, "phrase": "possible_project_contexts"}, {"score": 0.003370907075333389, "phrase": "different_ways"}, {"score": 0.0030083825666563898, "phrase": "specific_type"}, {"score": 0.002977419551510206, "phrase": "software_product_lines"}, {"score": 0.0029164434911787187, "phrase": "software_process_domain"}, {"score": 0.002769395841379498, "phrase": "software_process_customization"}, {"score": 0.0025892330566358503, "phrase": "model-driven_approach"}, {"score": 0.0025625729433234623, "phrase": "software_process_lines_specification"}, {"score": 0.00226322835801988, "phrase": "new_projects"}, {"score": 0.0022053994402287925, "phrase": "custom_processes"}, {"score": 0.0021049977753042253, "phrase": "total_time"}], "paper_keywords": ["Software process lines", " Model-driven engineering", " Process asset reuse"], "paper_abstract": "Software organizations specify their software processes so that process knowledge can be systematically reused across projects. However, different projects may require different processes. Defining a separate process for each potential project context is expensive and error-prone, since these processes must simultaneously evolve in a consistent manner. Moreover, an organization cannot envision all possible project contexts in advance because several variables may be involved, and these may also be combined in different ways. This problem is even worse in small companies since they usually cannot afford to define more than one process. Software process lines are a specific type of software product lines, in the software process domain. A benefit of software process lines is that they allow software process customization with respect to a context. In this article we propose a model-driven approach for software process lines specification and configuration. The article also presents two industrial case studies carried out at two small Chilean software development companies. Both companies have benefited from applying our approach to their processes: new projects are now developed using custom processes, process knowledge is systematically reused, and the total time required to customize a process is much shorter than before. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "MDE software process lines in small companies", "paper_id": "WOS:000317322400001"}