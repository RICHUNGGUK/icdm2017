{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "constraint_handling_rules"}, {"score": 0.039591220782297654, "phrase": "logical_reading"}, {"score": 0.004446677711302801, "phrase": "fixpoint_semantics"}, {"score": 0.0041316803676012155, "phrase": "simplification_and_propagation_rules"}, {"score": 0.00405646687267772, "phrase": "sound_and_complete_way"}, {"score": 0.0035668128900149814, "phrase": "simplification_rules"}, {"score": 0.003438058620195309, "phrase": "least_fixpoint"}, {"score": 0.003375429082739004, "phrase": "transition_system"}, {"score": 0.003293688299319582, "phrase": "abstract_operational_semantics"}, {"score": 0.002949598537993663, "phrase": "propagation_rules"}, {"score": 0.0028430608076324727, "phrase": "greatest_fixpoint"}, {"score": 0.00257735013358606, "phrase": "fixpoint_characterization"}, {"score": 0.002499508839669243, "phrase": "new_operational_semantics"}, {"score": 0.002469032978674379, "phrase": "persistent_constraints"}, {"score": 0.002197379785587054, "phrase": "resulting_language"}, {"score": 0.002157302200451323, "phrase": "elegant_framework"}, {"score": 0.0021049977753042253, "phrase": "coinductive_reasoning"}], "paper_keywords": ["CHR", " coinduction", " fixpoint", " declarative semantics", " persistent constraints"], "paper_abstract": "In this paper, we address the problem of defining a fixpoint semantics for Constraint Handling Rules (CHR) that captures the behavior of both simplification and propagation rules in a sound and complete way with respect to their declarative semantics. Firstly, we show that the logical reading of states with respect to a set of simplification rules can be characterized by a least fixpoint over the transition system generated by the abstract operational semantics of CHR. Similarly, we demonstrate that the logical reading of states with respect to a set of propagation rules can be characterized by the greatest fixpoint. Then, in order to take advantage of both types of rules without losing fixpoint characterization, we present a new operational semantics with persistent constraints. We finally establish that this semantics can be characterized by two nested fixpoints, and we show that the resulting language is an elegant framework to program using coinductive reasoning.", "paper_title": "(Co-)Inductive semantics for Constraint Handling Rules", "paper_id": "WOS:000292701100011"}