{"auto_keywords": [{"score": 0.04622076352597457, "phrase": "monte_carlo"}, {"score": 0.00481495049065317, "phrase": "efficient_execution"}, {"score": 0.004757643419056999, "phrase": "monte_carlo_codes_on_grid_infrastructures."}, {"score": 0.004348936976349555, "phrase": "grid_production_infrastructures"}, {"score": 0.004096082254543022, "phrase": "grid_sites"}, {"score": 0.003999089046152065, "phrase": "simple_parameters"}, {"score": 0.0038119123317396954, "phrase": "new_performance_model"}, {"score": 0.0037664981403399064, "phrase": "grid_infrastructures"}, {"score": 0.002963390095037466, "phrase": "newly_developed_framework"}, {"score": 0.0029280552768499056, "phrase": "montera"}, {"score": 0.0027575842698911173, "phrase": "monte_carlo_codes"}, {"score": 0.002708399936381754, "phrase": "unattended_way"}, {"score": 0.00255068452076921, "phrase": "final_user"}, {"score": 0.002416589459425828, "phrase": "example_cases"}, {"score": 0.0023451553255837317, "phrase": "described_characterizations"}, {"score": 0.0023171750718791713, "phrase": "scheduling_algorithm"}, {"score": 0.0022758279600841014, "phrase": "performance_improvement"}, {"score": 0.0022218413146898887, "phrase": "current_best_results"}, {"score": 0.0021561514733516676, "phrase": "real_production_infrastructure"}, {"score": 0.0021049977753042253, "phrase": "enhanced_stability"}], "paper_keywords": ["Scheduling", " task grouping", " grid computing", " Monte Carlo", " performance"], "paper_abstract": "The objective of this work is to improve the performance of Monte Carlo codes on Grid production infrastructures. To do so, the codes and the grid sites are characterized with simple parameters to model their behaviors. Then, a new performance model for grid infrastructures is proposed, and an algorithm that employs this information is described. This algorithm dynamically calculates the number and size of tasks to execute on each site to maximize the performance and reduce makespan. Finally, a newly developed framework called Montera is presented. Montera deals with the execution of Monte Carlo codes in an unattended way, isolating the complexity of the problem from the final user. By employing two fusion Monte Carlo codes as example cases, along with the described characterizations and scheduling algorithm, a performance improvement up to 650 % over current best results is obtained on a real production infrastructure, together with enhanced stability and robustness.", "paper_title": "MONTERA: A FRAMEWORK FOR EFFICIENT EXECUTION OF MONTE CARLO CODES ON GRID INFRASTRUCTURES", "paper_id": "WOS:000317083900006"}