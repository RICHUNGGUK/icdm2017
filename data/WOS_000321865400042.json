{"auto_keywords": [{"score": 0.04670675420350503, "phrase": "probabilistic_programs"}, {"score": 0.00481495049065317, "phrase": "static_analysis_for_probabilistic_programs"}, {"score": 0.004745260932479212, "phrase": "whole_program_properties"}, {"score": 0.0046993598473345395, "phrase": "finitely_many_paths"}, {"score": 0.004520132822496416, "phrase": "static_analysis"}, {"score": 0.004263972370406983, "phrase": "uncertain_data"}, {"score": 0.004121275290411653, "phrase": "risk_analysis"}, {"score": 0.004081385289516914, "phrase": "medical_decision_making"}, {"score": 0.004041879818641576, "phrase": "cyber-physical_systems"}, {"score": 0.0037030390595465673, "phrase": "program_variables"}, {"score": 0.003614044704141927, "phrase": "static_analysis_approach"}, {"score": 0.0035616743422949766, "phrase": "guaranteed_interval_bounds"}, {"score": 0.0030778231027679464, "phrase": "entire_program"}, {"score": 0.0026337482179592422, "phrase": "symbolic_execution"}, {"score": 0.002608218347502229, "phrase": "probabilistic_volume-bound_computations"}, {"score": 0.002545468362709126, "phrase": "interval_bounds"}, {"score": 0.002199363362666037, "phrase": "promising_results"}, {"score": 0.0021049977753042253, "phrase": "robotic_manipulators"}], "paper_keywords": ["Probabilistic Programming", " Program Verification", " Volume Bounding", " Symbolic Execution", " Monte-Carlo Sampling"], "paper_abstract": "We propose an approach for the static analysis of probabilistic programs that sense, manipulate, and control based on uncertain data. Examples include programs used in risk analysis, medical decision making and cyber-physical systems. Correctness properties of such programs take the form of queries that seek the probabilities of assertions over program variables. We present a static analysis approach that provides guaranteed interval bounds on the values (assertion probabilities) of such queries. First, we observe that for probabilistic programs, it is possible to conclude facts about the behavior of the entire program by choosing a finite, adequate set of its paths. We provide strategies for choosing such a set of paths and verifying its adequacy. The queries are evaluated over each path by a combination of symbolic execution and probabilistic volume-bound computations. Each path yields interval bounds that can be summed up with a \"coverage\" bound to yield an interval that encloses the probability of assertion for the program as a whole. We demonstrate promising results on a suite of benchmarks from many different sources including robotic manipulators and medical decision making programs.", "paper_title": "Static Analysis for Probabilistic Programs: Inferring Whole Program Properties from Finitely Many Paths", "paper_id": "WOS:000321865400042"}