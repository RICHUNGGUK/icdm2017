{"auto_keywords": [{"score": 0.04840352423674947, "phrase": "existential_uncertainty"}, {"score": 0.007781823733649805, "phrase": "uncertain_sliding_windows"}, {"score": 0.007740489563401459, "phrase": "uncertain_data_streams"}, {"score": 0.007338960939043996, "phrase": "value_uncertainty"}, {"score": 0.004483909657713567, "phrase": "multiple_possible_values"}, {"score": 0.0040726680518382965, "phrase": "relational_operators"}, {"score": 0.003902165732101058, "phrase": "mining_data_streams"}, {"score": 0.0035822005511799036, "phrase": "window_processing"}, {"score": 0.0034690732089830045, "phrase": "uncertain_data"}, {"score": 0.0032418062548293745, "phrase": "count-based_sliding_windows"}, {"score": 0.0031845067058084613, "phrase": "basic_building_block"}, {"score": 0.003161870571621082, "phrase": "stream_processing_applications"}, {"score": 0.003029382820031577, "phrase": "novel_concept"}, {"score": 0.002965229277927781, "phrase": "exact_and_approximate_algorithms"}, {"score": 0.0025434384320561403, "phrase": "real_data"}, {"score": 0.00238516629826583, "phrase": "high-quality_approximation"}, {"score": 0.0022933216359142736, "phrase": "sort-based_similarity"}, {"score": 0.00223672097810462, "phrase": "index-based_techniques"}, {"score": 0.0021659920594094407, "phrase": "possible_values"}], "paper_keywords": ["Data stream processing", " Sliding windows", " Uncertainty management"], "paper_abstract": "Uncertain data streams can have tuples with both value and existential uncertainty. A tuple has value uncertainty when it can assume multiple possible values. A tuple is existentially uncertain when the sum of the probabilities of its possible values is 1. A situation where existential uncertainty can arise is when applying relational operators to streams with value uncertainty. Several prior works have focused on querying and mining data streams with both value and existential uncertainty. However, none of them have studied, in depth, the implications of existential uncertainty on sliding window processing, even though it naturally arises when processing uncertain data. In this work, we study the challenges arising from existential uncertainty, more specifically the management of count-based sliding windows, which are a basic building block of stream processing applications. We extend the semantics of sliding window to define the novel concept of uncertain sliding windows and provide both exact and approximate algorithms for managing windows under existential uncertainty. We also show how current state-of-the-art techniques for answering similarity join queries can be easily adapted to be used with uncertain sliding windows. We evaluate our proposed techniques under a variety of configurations using real data. The results show that the algorithms used to maintain uncertain sliding windows can efficiently operate while providing a high-quality approximation in query answering. In addition, we show that sort-based similarity join algorithms can perform better than index-based techniques (on 17 real datasets) when the number of possible values per tuple is low, as in many real-world applications.", "paper_title": "Sliding windows over uncertain data streams", "paper_id": "WOS:000361650600006"}