{"auto_keywords": [{"score": 0.0497377294589231, "phrase": "inversion-free_formulae"}, {"score": 0.04565922187614431, "phrase": "group_operations"}, {"score": 0.00926276062356467, "phrase": "type_d"}, {"score": 0.00481495049065317, "phrase": "hecc_coprocessors"}, {"score": 0.004530894050040479, "phrase": "open_literature"}, {"score": 0.004340488340181084, "phrase": "hecc"}, {"score": 0.004278807087784626, "phrase": "teh_implementations"}, {"score": 0.004040688646993609, "phrase": "hardware_devices"}, {"score": 0.003708033700676924, "phrase": "hecc."}, {"score": 0.0036684182697540382, "phrase": "inversion-free_group_operations"}, {"score": 0.0034394269654205094, "phrase": "characteristic-two_fields"}, {"score": 0.0033303306367699816, "phrase": "fair_comparison"}, {"score": 0.003306559295382181, "phrase": "hardware_architectures"}, {"score": 0.0032712190037495975, "phrase": "affine_case"}, {"score": 0.0031788080316930687, "phrase": "main_part"}, {"score": 0.003034158379493625, "phrase": "hecc_vlsi_coprocessor"}, {"score": 0.0030017207229983385, "phrase": "area_constraints"}, {"score": 0.0029484244900690485, "phrase": "scalar_multiplication"}, {"score": 0.002619571161767134, "phrase": "optimal_solution"}, {"score": 0.0024122616475793206, "phrase": "main_finding"}, {"score": 0.0023864566654035924, "phrase": "present_contribution"}, {"score": 0.002158505888557746, "phrase": "affine_hecc_group_operation"}, {"score": 0.0021049977753042253, "phrase": "inversion-free_case"}], "paper_keywords": ["hyperelliptic curve cryptosystem", " inversion-free formulae", " hardware architecture", " high performance explicit formulae", " VLSI coprocessor"], "paper_abstract": "The HyperElliptic Curve Cryptosystern (HECC) was quite extensively studied during the recent years. In the open literature one can find results on how to improve the group operations of HECC as well as teh implementations for various types of processors. There have also been some efforts to implement HECC on hardware devices, like for instance FPGAs. Only one of these works, however, deals with the inversion-free formulae to compute the group operations of HECC. We present inversion-free group operations for the HEC y(2) + xy x(5) + f(1)x + f(0) and we target characteristic-two fields. The reason is that of allowing a fair comparison with hardware architectures using the affine case presented in [BBWP04]. In the main part of the paper we use these results to investigate various hardware architectures for a HECC VLSI coprocessor. If area constraints are not considered, scalar multiplication can be performed in 19, 769 clock cycles using three field multipliers (of type D = 32), one field adder and one field squarer, where D indicates the digit-size of the multiplier. However, the optimal solution in terms of latency and area uses two multipliers (of type D = 4), one addition and one squaring. The main finding of the present contribution is that coprocessors based on the inversion-free formulae should be preferred compared to those using group operations containing inversion. This holds despite the fact that one field inversion in the affine HECC group operation is traded by up to 24 field multiplications in the inversion-free case.", "paper_title": "Performance of HECC coprocessors using inversion-free formulae", "paper_id": "WOS:000237648300105"}