{"auto_keywords": [{"score": 0.04481780851221896, "phrase": "resource_sharing"}, {"score": 0.03305218245774939, "phrase": "sw_components"}, {"score": 0.029420333683948783, "phrase": "error_propagation"}, {"score": 0.00481495049065317, "phrase": "dependable_embedded_systems"}, {"score": 0.004780183091824403, "phrase": "embedded_systems"}, {"score": 0.004728499903204582, "phrase": "complex_issues"}, {"score": 0.004462105963334103, "phrase": "sw_functional_components"}, {"score": 0.004397875849247165, "phrase": "finite_hw_resources"}, {"score": 0.004350308086118336, "phrase": "common_approach"}, {"score": 0.004180234323211199, "phrase": "diverse_sw_functionalities"}, {"score": 0.004002242925856335, "phrase": "meaningful_co-design_solution"}, {"score": 0.0038737214010638745, "phrase": "processing_capability"}, {"score": 0.003668591097652231, "phrase": "sw_functions"}, {"score": 0.003424225677958491, "phrase": "low-criticality_functions"}, {"score": 0.0033748847621075536, "phrase": "higher-criticality_functions"}, {"score": 0.003290237137651949, "phrase": "main_contribution"}, {"score": 0.003219368413618912, "phrase": "dependability-driven_framework"}, {"score": 0.003104619199351347, "phrase": "hw_resources"}, {"score": 0.0029830992938695033, "phrase": "diverse_criticality_components"}, {"score": 0.002876747208161839, "phrase": "clustering_strategy"}, {"score": 0.0028352726653271187, "phrase": "fault_containment_modules"}, {"score": 0.002542642270762272, "phrase": "resulting_fcms"}, {"score": 0.002515090164966655, "phrase": "existing_hw_resources"}, {"score": 0.002460876181416983, "phrase": "optimizing_particular_attributes"}, {"score": 0.002347378595930709, "phrase": "achieved_hw-sw_composition"}, {"score": 0.0023219374444738723, "phrase": "dependable_embedded_system"}, {"score": 0.002230984431056064, "phrase": "proposed_mappings"}, {"score": 0.002151388538895855, "phrase": "multi-criteria_decision_theoretic_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Embedded systems", " Dependability", " Software integration", " Assessment", " Decision theory"], "paper_abstract": "Embedded systems increasingly entail complex issues of hardware-software (HW-SW) co-design. As the number and range of SW functional components typically exceed the finite HW resources, a common approach is that of resource sharing (i.e., the deployment of diverse SW functionalities onto the same HW resources). Consequently, to result in a meaningful co-design solution, one needs to factor the issues of processing capability, power, communication bandwidth, precedence relations, real-time deadlines, space, and cost. As SW functions of diverse criticality (e.g. brake control and infotainment functions) get integrated, an explicit integration requirement need is to carefully plan resource sharing such that faults in low-criticality functions do not affect higher-criticality functions. On this background, the main contribution of this paper is a dependability-driven framework that helps to conduct the integration of SW components onto HW resources such that the maintenance of system dependability over integration of diverse criticality components is assured by design. We first develop a clustering strategy for SW components into Fault Containment Modules (FCMs) such that error propagation via interaction is minimized. Subsequently, the rules of composition for FCMs with respect to error propagation are developed. To allocate the resulting FCMs to the existing HW resources we provide several heuristics, each optimizing particular attributes thereof. Further, a framework for assessing the goodness of the achieved HW-SW composition as a dependable embedded system is presented. Two new techniques for quantifying the goodness of the proposed mappings are introduced by examples, both based on a multi-criteria decision theoretic approach. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A software integration approach for designing and assessing dependable embedded systems", "paper_id": "WOS:000282117900012"}