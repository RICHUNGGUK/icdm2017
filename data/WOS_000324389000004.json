{"auto_keywords": [{"score": 0.04807157020342475, "phrase": "crosscutting_concerns"}, {"score": 0.013211814345589785, "phrase": "primary_models"}, {"score": 0.009125203744032702, "phrase": "petri_nets"}, {"score": 0.004814954423896811, "phrase": "verifying"}, {"score": 0.0045348429403481464, "phrase": "critical_problem"}, {"score": 0.004496174406337201, "phrase": "software_development_processes"}, {"score": 0.004363401436068803, "phrase": "design_phases"}, {"score": 0.004270960586542813, "phrase": "aspect-oriented_modeling_and_integration_approach"}, {"score": 0.004234555570312249, "phrase": "uml"}, {"score": 0.004144810537437608, "phrase": "primary_concerns"}, {"score": 0.004074397977869244, "phrase": "uml_activity_diagrams"}, {"score": 0.003920295222165263, "phrase": "aspectual_extended_activity_diagrams"}, {"score": 0.003837205620832367, "phrase": "aspect_models"}, {"score": 0.003692040748097991, "phrase": "aom_approach"}, {"score": 0.003598317040926701, "phrase": "design_models"}, {"score": 0.003537155405923517, "phrase": "potential_faults"}, {"score": 0.0034919649825540396, "phrase": "desired_properties"}, {"score": 0.003447349911141396, "phrase": "software_system"}, {"score": 0.003316884515934182, "phrase": "integration_processes"}, {"score": 0.003274499008699115, "phrase": "verification_technique"}, {"score": 0.0030705342386533083, "phrase": "design_problems"}, {"score": 0.0029416448256236057, "phrase": "aspect-oriented_uml_activity_diagrams"}, {"score": 0.002904040426340639, "phrase": "petri_net_verification_techniques"}, {"score": 0.0028669153591624696, "phrase": "verification_purpose"}, {"score": 0.0028060889647071787, "phrase": "integrated_activity_diagrams"}, {"score": 0.0026199603775129516, "phrase": "system_requirements"}, {"score": 0.0025207284405252914, "phrase": "ctl_formulas"}, {"score": 0.002414861891567233, "phrase": "formalized_properties"}, {"score": 0.0023636038312749245, "phrase": "aspect-oriented_design_models"}, {"score": 0.002244969789802093, "phrase": "jasmine-aov"}, {"score": 0.0022067604433257814, "phrase": "verification_process"}, {"score": 0.00218789980093445, "phrase": "case_studies"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": ["Aspect-oriented modeling", " verification", " model checking", " activity diagram", " Petri net"], "paper_abstract": "Dealing with crosscutting concerns has been a critical problem in software development processes. To facilitate handling crosscutting concerns at design phases, we proposed an aspect-oriented modeling and integration approach with UML activity diagrams. The primary concerns are depicted with UML activity diagrams as primary models, whereas crosscutting concerns are described with aspectual extended activity diagrams as aspect models. Aspect models can be integrated into primary models automatically. The AOM approach can reduce the complexity of design models. However, potential faults that violate desired properties of the software system might still be introduced during the modeling or integration processes. The verification technique is well-known for its ability to assure the correctness of models and uncover design problems before implementation. We propose a framework to verify aspect-oriented UML activity diagrams based on Petri net verification techniques. For verification purpose, we transform the integrated activity diagrams into Petri nets and prove the consistency of the transformation. Then, crosscutting concerns in system requirements are refined to properties in the form of CTL formulas. Finally, the Petri nets are verified against the formalized properties to report whether the aspect-oriented design models satisfies the requirements. Furthermore, we implement a tool named Jasmine-AOV to support the verification process. Case studies are conducted to evaluate the effectiveness of the proposed approach.", "paper_title": "VERIFYING ASPECT-ORIENTED MODELS AGAINST CROSSCUTTING PROPERTIES", "paper_id": "WOS:000324389000004"}