{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_introspection"}, {"score": 0.0047026237903774895, "phrase": "powerful_feature"}, {"score": 0.00462919213721188, "phrase": "existing_modeling_frameworks"}, {"score": 0.004556901872357751, "phrase": "java_metadata_interface"}, {"score": 0.004485735417293941, "phrase": "eclipse_modeling_framework"}, {"score": 0.003772306776343196, "phrase": "model_transformation_engines"}, {"score": 0.0037133478610481994, "phrase": "generic_models"}, {"score": 0.003073545175760353, "phrase": "model_scripting"}, {"score": 0.00266693888510356, "phrase": "compact_and_high-level_notation"}, {"score": 0.002464709648714996, "phrase": "general_model"}, {"score": 0.002224510044064184, "phrase": "numerous_model"}, {"score": 0.0022070310530794097, "phrase": "driven_activities"}, {"score": 0.0021384748235753425, "phrase": "interactive_model_testing"}, {"score": 0.0021049977753042253, "phrase": "rapid_development"}], "paper_keywords": [""], "paper_abstract": "Model introspection is a powerful feature of existing modeling frameworks like Java Metadata Interface or Eclipse Modeling Framework. It allows a program to work with any model by querying its structure dynamically at runtime. Applications of model introspection are model transformation engines and generic models editor. We show that mechanisms for model introspection are complex to use. To address this problem, we propose the notion of model scripting which uses introspection to automatically and dynamically expose any kind of model to program control through a compact and high-level notation. In this paper, we present several principles for general model scripting. Scripting languages built with these principles can be used for numerous model driven activities, such as interactive model testing and rapid development of scripts to process models and metamodels.", "paper_title": "Dynamic and generic manipulation of models: From introspection to scripting", "paper_id": "WOS:000241450700028"}