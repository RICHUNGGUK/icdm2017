{"auto_keywords": [{"score": 0.0446305392042061, "phrase": "non-affine_functions"}, {"score": 0.00481495049065317, "phrase": "coarse_grain_reconfigurable_computation"}, {"score": 0.004644247838681628, "phrase": "hardware_based_solution"}, {"score": 0.00458869631642791, "phrase": "scalable_runtime_address_generation_scheme"}, {"score": 0.004552075906372535, "phrase": "dsp"}, {"score": 0.004461634909525319, "phrase": "parallel_distributed_coarse_grain_reconfigurable_computation"}, {"score": 0.004134137523409649, "phrase": "multiple_nested_loops"}, {"score": 0.004084662575167727, "phrase": "key_innovation"}, {"score": 0.004035777314816881, "phrase": "judicious_use"}, {"score": 0.003971502222405927, "phrase": "address_generation_resources"}, {"score": 0.003923965929636472, "phrase": "first_category"}, {"score": 0.003845994935767022, "phrase": "low_cost_agu"}, {"score": 0.003739421738326676, "phrase": "affine_functions"}, {"score": 0.0035350218469335573, "phrase": "distributed_memory_architecture"}, {"score": 0.0034926916198124484, "phrase": "second_category"}, {"score": 0.003146360480030653, "phrase": "address_bounds"}, {"score": 0.002915125480162171, "phrase": "affine_factor"}, {"score": 0.0027778947555117243, "phrase": "address_constraints_results"}, {"score": 0.0027556576784848207, "phrase": "negligibly_small_overhead"}, {"score": 0.0026471070725516467, "phrase": "substantial_reduction"}, {"score": 0.002625914195439153, "phrase": "program_storage"}, {"score": 0.002604890546456604, "phrase": "reconfiguration_agility"}, {"score": 0.00254282157860369, "phrase": "prevalent_pre-computation"}, {"score": 0.0024524733595572084, "phrase": "proposed_method"}, {"score": 0.0023940274498526213, "phrase": "prevalent_address_generation_schemes"}, {"score": 0.0023463854193479274, "phrase": "six_realistic_dsp_functions"}, {"score": 0.002299689297293321, "phrase": "pre-computation_method"}, {"score": 0.0022721178679337025, "phrase": "proposed_solution"}, {"score": 0.002209060366991921, "phrase": "centralized_runtime_address_generation_scheme"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Streaming address generation", " CGRA", " Parallel distributed DSP", " Code compaction"], "paper_abstract": "This paper presents a hardware based solution for a scalable runtime address generation scheme for DSP applications mapped to a parallel distributed coarse grain reconfigurable computation and storage fabric. The scheme can also deal with non-affine functions of multiple variables that typically correspond to multiple nested loops. The key innovation is the judicious use of two categories of address generation resources. The first category of resource is the low cost AGU that generates addresses for given address bounds for affine functions of up to two variables. Such low cost AGUs are distributed and associated with every read/write port in the distributed memory architecture. The second category of resource is relatively more complex but is also distributed but shared among a few storage units and is capable of handling more complex address generation requirements like dynamic computation of address bounds that are then used to configure the AGUs, transformation of non-affine functions to affine function by computing the affine factor outside the loop, etc. The runtime computation of the address constraints results in negligibly small overhead in latency, area and energy while it provides substantial reduction in program storage, reconfiguration agility and energy compared to the prevalent pre-computation of address constraints. The efficacy of the proposed method has been validated against the prevalent address generation schemes for a set of six realistic DSP functions. Compared to the pre-computation method, the proposed solution achieved 75% average code compaction and compared to the centralized runtime address generation scheme, the proposed solution achieved 32.7% average performance improvement. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Parallel distributed scalable runtime address generation scheme for a coarse grain reconfigurable computation and storage fabric", "paper_id": "WOS:000347755200006"}