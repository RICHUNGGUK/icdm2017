{"auto_keywords": [{"score": 0.03685586596340731, "phrase": "qgoa"}, {"score": 0.014843335069010085, "phrase": "selection_procedure"}, {"score": 0.0048219275162952905, "phrase": "quantum"}, {"score": 0.004445961412092278, "phrase": "genetic_algorithm"}, {"score": 0.004075469816959996, "phrase": "possible_fitness_functions"}, {"score": 0.004016782710006123, "phrase": "varying_fitness_functions"}, {"score": 0.0035507457285983268, "phrase": "quantum_genetic_optimization_algorithm"}, {"score": 0.003350480663660326, "phrase": "quantum_computation"}, {"score": 0.00320770578058916, "phrase": "genetic_procedures"}, {"score": 0.003070996252787868, "phrase": "classical_fitness_evaluation"}, {"score": 0.002897710777957041, "phrase": "single_quantum_procedure"}, {"score": 0.002814759530655965, "phrase": "quantum_and_classical_genetic_algorithms"}, {"score": 0.0025242409510332527, "phrase": "high-fitness_subpopulation"}, {"score": 0.002182881082103045, "phrase": "oracle_calls"}], "paper_keywords": ["evolutionary computing and genetic algorithms", " quantum computation"], "paper_abstract": "The complexity of the selection procedure of a genetic algorithm that requires reordering, if we restrict the class of the possible fitness functions to varying fitness functions, is O(N log N), where N is the size of the population. The quantum genetic optimization algorithm (QGOA) exploits the power of quantum computation in order to speed up genetic procedures. In QGOA, the classical fitness evaluation and selection procedures are replaced by a single quantum procedure. While the quantum and classical genetic algorithms use the same number of generations, the QGOA requires fewer operations to identify the high-fitness subpopulation at each generation. We show that the complexity of our QGOA is o(1) in terms of number of oracle calls in the selection procedure. Such theoretical results are confirmed by the simulations of the algorithm.", "paper_title": "Quantum genetic optimization", "paper_id": "WOS:000257241200008"}