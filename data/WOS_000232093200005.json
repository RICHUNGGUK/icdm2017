{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large_multidimensional_grids"}, {"score": 0.004598933498016774, "phrase": "penalized_generalized_linear_models"}, {"score": 0.004312622975366676, "phrase": "roughness_penalties"}, {"score": 0.004044064541716598, "phrase": "multidimensional_arrays"}, {"score": 0.0039341294012600085, "phrase": "straightforward_application"}, {"score": 0.0038271712887391015, "phrase": "penalized_fisher"}, {"score": 0.003555902292752528, "phrase": "computational_difficulties"}, {"score": 0.003459191419478298, "phrase": "novel_algorithm"}, {"score": 0.0033037970113095577, "phrase": "special_structure"}, {"score": 0.0030695103543472908, "phrase": "model_matrix"}, {"score": 0.002985988377995789, "phrase": "tenser_product"}, {"score": 0.00226583335721762, "phrase": "life_tables"}, {"score": 0.002224510044064184, "phrase": "image_data"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["B-splines", " difference penalty", " multidimensional array", " P-splines", " smoothing", " tensor product"], "paper_abstract": "A framework of penalized generalized linear models and tensor products of B-splines with roughness penalties allows effective smoothing of data in multidimensional arrays. A straightforward application of the penalized Fisher scoring algorithm quickly runs into storage and computational difficulties. A novel algorithm takes advantage of the special structure of both the data as an array and the model matrix as a tenser product; the algorithm is fast, uses only a moderate amount of memory and works for any number of dimensions. Examples are given of how the method is used to smooth life tables and image data. (c) 2004 Elsevier B.V. All rights reserved.", "paper_title": "Fast and compact smoothing on large multidimensional grids", "paper_id": "WOS:000232093200005"}