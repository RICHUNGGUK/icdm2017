{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "full-chip_synthesis_methodology"}, {"score": 0.004513255056769647, "phrase": "noc-based_systems"}, {"score": 0.004446349752828045, "phrase": "proposed_scheme"}, {"score": 0.004402295697276237, "phrase": "irregular_network_topologies"}, {"score": 0.004358676214574977, "phrase": "application-specific_designs"}, {"score": 0.004315487055548749, "phrase": "known_communication_demands"}, {"score": 0.004126349202545883, "phrase": "communication_architecture"}, {"score": 0.003984968827278219, "phrase": "floorplanning_process"}, {"score": 0.0036980501827538455, "phrase": "target_network"}, {"score": 0.0035712919163869176, "phrase": "communication_analysis"}, {"score": 0.0035358770665604657, "phrase": "processing_elements"}, {"score": 0.0028113140998735366, "phrase": "power_consumption"}, {"score": 0.0027284410545226306, "phrase": "final_network"}, {"score": 0.0025827837420330816, "phrase": "wirelength-aware_floor_planning"}, {"score": 0.0024941578231560055, "phrase": "circuit_size"}, {"score": 0.002420611343093316, "phrase": "experimental_results"}, {"score": 0.0023609780669713288, "phrase": "custom_nocs"}, {"score": 0.002337537183727731, "phrase": "better_performance"}, {"score": 0.0023143284925318916, "phrase": "previous_methods"}, {"score": 0.0022799458141165587, "phrase": "computation_time"}, {"score": 0.0021049977753042253, "phrase": "complicated_systems"}], "paper_keywords": ["Custom network-on-chips (NoCs)", " NoCs", " topology generation"], "paper_abstract": "We propose a full-chip synthesis methodology to construct custom network-on-chips (CusNoCs) for NoC-based systems. The proposed scheme generates irregular network topologies for application-specific designs with known communication demands. In this method, processors and the communication architecture can be synthesized simultaneously in the floorplanning process, and thus it is called CusNoC. CusNoC synthesizes CusNoC in two steps. The target network topology is first generated based on communication analysis. Processing elements are partitioned into groups such that the utility of routers will be maximized if a router is assigned to each group. In this way, the number of routers passed by a packet, or hops, is minimized, and so is the power consumption in the network. The final network topology is formed by properly connecting these groups. A wirelength-aware floor planning is then carried out to optimize circuit size as well as wirelength. Experimental results show that CusNoC produces custom NoCs with better performance than previous methods while the computation time is significantly shorter. This method is also more scalable, which makes it ideal for complicated systems.", "paper_title": "CusNoC: Fast Full-Chip Custom NoC Generation", "paper_id": "WOS:000316801700009"}