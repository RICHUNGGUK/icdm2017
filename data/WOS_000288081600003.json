{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "internal_parallelism"}, {"score": 0.004717723626157272, "phrase": "flash-based_ssds"}, {"score": 0.004437613070853689, "phrase": "major_driving_force"}, {"score": 0.004303830426772906, "phrase": "rapid_performance_improvement"}, {"score": 0.003966388754366831, "phrase": "parallel_bus_channels"}, {"score": 0.0038467574225322086, "phrase": "flash_controller"}, {"score": 0.003769006950727621, "phrase": "flash_memory_packages"}, {"score": 0.0036553070575015344, "phrase": "solid-state_drives"}, {"score": 0.0026630475331025955, "phrase": "request_rescheduling"}, {"score": 0.0026091594819333654, "phrase": "dynamic_write_request_mapping"}, {"score": 0.002479150189700726, "phrase": "real_workloads"}, {"score": 0.00235560370536971, "phrase": "suggested_schemes"}, {"score": 0.0021049977753042253, "phrase": "additional_hardware_support"}], "paper_keywords": ["Flash memory", " I/O scheduling", " parallelism", " Solid-State Drives (SSDs)"], "paper_abstract": "For the last few years, the major driving force behind the rapid performance improvement of SSDs has been the increment of parallel bus channels between a flash controller and flash memory packages inside the solid-state drives (SSDs). However, there are other internal parallelisms inside SSDs yet to be explored. In order to improve performance further by utilizing the parallelism, this paper suggests request rescheduling and dynamic write request mapping. Simulation results with real workloads have shown that the suggested schemes improve the performance of the SSDs by up to 15% without any additional hardware support.", "paper_title": "Exploiting Internal Parallelism of Flash-based SSDs", "paper_id": "WOS:000288081600003"}