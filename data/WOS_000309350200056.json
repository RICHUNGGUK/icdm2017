{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "openmp-style_parallelism"}, {"score": 0.00475924837336259, "phrase": "data-centered_multicore_computing"}, {"score": 0.0045959609346817535, "phrase": "domain_specific_language"}, {"score": 0.004490212943845175, "phrase": "data_analysis"}, {"score": 0.004412494693940597, "phrase": "statistics_community"}, {"score": 0.004138813595009761, "phrase": "social_sciences"}, {"score": 0.003996727479807572, "phrase": "r_programs"}, {"score": 0.003904713104101532, "phrase": "input_data"}, {"score": 0.003837089839193524, "phrase": "exponential_growth"}, {"score": 0.003792657064634775, "phrase": "available_data"}, {"score": 0.0037487368769596814, "phrase": "high-performance_computing"}, {"score": 0.003516079377293321, "phrase": "parallel_programs"}, {"score": 0.003435092524339692, "phrase": "code_transformation"}, {"score": 0.003375574760845742, "phrase": "sequential_program"}, {"score": 0.0033170847930578473, "phrase": "parallel_version"}, {"score": 0.003221837753001224, "phrase": "r_users"}, {"score": 0.003039445153076014, "phrase": "semiautomatic_parallelization"}, {"score": 0.0030042210975126616, "phrase": "r_codes"}, {"score": 0.0029694040368299624, "phrase": "user-added_openmp-style_pragmas"}, {"score": 0.002720785798036066, "phrase": "multiple_parallel_backends"}, {"score": 0.0026892447164623247, "phrase": "different_r_packages"}, {"score": 0.0024640253074497114, "phrase": "built-in_mapreduce"}, {"score": 0.002351705899181029, "phrase": "code_reusability"}, {"score": 0.002129701089817251, "phrase": "significant_applications"}, {"score": 0.0021049977753042253, "phrase": "data-centered_parallel_computing"}], "paper_keywords": ["Languages", " Performance", " Design", " parallelization", " domain specific language", " automatic code generation", " data-centered applications", " MapReduce"], "paper_abstract": "R-1 is a domain specific language widely used for data analysis by the statistics community as well as by researchers in finance, biology, social sciences, and many other disciplines. As R programs are linked to input data, the exponential growth of available data makes high-performance computing with R imperative. To ease the process of writing parallel programs in R, code transformation from a sequential program to a parallel version would bring much convenience to R users. In this paper, we present our work in semiautomatic parallelization of R codes with user-added OpenMP-style pragmas. While such pragmas are used at the frontend, we take advantage of multiple parallel backends with different R packages. We provide flexibility for importing parallelism with plug-in components, impose built-in MapReduce for data processing, and also maintain code reusability. We illustrate the advantage of the on-the-fly mechanisms which can lead to significant applications in data-centered parallel computing.", "paper_title": "OpenMP-style Parallelism in Data-Centered Multicore Computing with R", "paper_id": "WOS:000309350200056"}