{"auto_keywords": [{"score": 0.03871593224383841, "phrase": "flowdroid"}, {"score": 0.030617877028479457, "phrase": "droidbench"}, {"score": 0.012415551978131548, "phrase": "false_alarms"}, {"score": 0.00481495049065317, "phrase": "lifecycle-aware"}, {"score": 0.004797065642744871, "phrase": "taint_analysis_for_android_apps"}, {"score": 0.004761494044422926, "phrase": "today's_smartphones"}, {"score": 0.00470862827326028, "phrase": "ubiquitous_source"}, {"score": 0.004673709383305897, "phrase": "private_and_confidential_data"}, {"score": 0.004570491683870396, "phrase": "smartphone_users"}, {"score": 0.00443638953122199, "phrase": "leak_important_data"}, {"score": 0.004338390136272005, "phrase": "malicious_apps"}, {"score": 0.004179824713643492, "phrase": "existing_static_taint-analysis_approaches"}, {"score": 0.0039674831861175935, "phrase": "android_use"}, {"score": 0.0039088121438737924, "phrase": "coarse-grain_approximations"}, {"score": 0.0038510053729959074, "phrase": "high_numbers"}, {"score": 0.0038224221344037236, "phrase": "missed_leaks"}, {"score": 0.00353476609156032, "phrase": "android_applications"}, {"score": 0.0034954725617970294, "phrase": "precise_model"}, {"score": 0.0034695189961509625, "phrase": "android's_lifecycle"}, {"score": 0.0033301694494391643, "phrase": "android_framework"}, {"score": 0.0030001224724395354, "phrase": "high_efficiency"}, {"score": 0.0027535633837592597, "phrase": "taint-analysis_tools"}, {"score": 0.002722930209707764, "phrase": "android_apps"}, {"score": 0.002613487968156893, "phrase": "securibench_micro"}, {"score": 0.0025366596616434767, "phrase": "well-known_android_test_applications"}, {"score": 0.00247128526955136, "phrase": "data_leaks"}, {"score": 0.00241658945942583, "phrase": "false_positives"}, {"score": 0.002285075675790214, "phrase": "commercial_tools"}, {"score": 0.002276566401216226, "phrase": "ibm_appscan"}, {"score": 0.0022428442879034614, "phrase": "sca._flowdroid"}, {"score": 0.0021607035327962246, "phrase": "google_play"}, {"score": 0.0021049977753042253, "phrase": "virusshare_project"}], "paper_keywords": [""], "paper_abstract": "Today's smartphones are a ubiquitous source of private and confidential data. At the same time, smartphone users are plagued by carelessly programmed apps that leak important data by accident, and by malicious apps that exploit their given privileges to copy such data intentionally. While existing static taint-analysis approaches have the potential of detecting such data leaks ahead of time, all approaches for Android use a number of coarse-grain approximations that can yield high numbers of missed leaks and false alarms. In this work we thus present FLOWDROID, a novel and highly precise static taint analysis for Android applications. A precise model of Android's lifecycle allows the analysis to properly handle callbacks invoked by the Android framework, while context, flow, field and object-sensitivity allows the analysis to reduce the number of false alarms. Novel on-demand algorithms help FLOWDROID maintain high efficiency and precision at the same time. We also propose DROIDBENCH, an open test suite for evaluating the effectiveness and accuracy of taint-analysis tools specifically for Android apps. As we show through a set of experiments using SecuriBench Micro, DROIDBENCH, and a set of well-known Android test applications, FLOWDROID finds a very high fraction of data leaks while keeping the rate of false positives low. On DROIDBENCH, FLOWDROID achieves 93% recall and 86% precision, greatly outperforming the commercial tools IBM AppScan Source and Fortify SCA. FLOWDROID successfully finds leaks in a subset of 500 apps from Google Play and about 1,000 malware apps from the VirusShare project.", "paper_title": "FlowDroid: Precise Context, Flow, Field, Object-sensitive and Lifecycle-aware Taint Analysis for Android Apps", "paper_id": "WOS:000344455800029"}