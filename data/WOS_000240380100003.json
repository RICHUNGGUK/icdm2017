{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pointer_boundary_checking"}, {"score": 0.04955461236891121, "phrase": "buffer_overflow_attacks"}, {"score": 0.00471003041684707, "phrase": "malicious_intrusions"}, {"score": 0.0046073860169839305, "phrase": "serious_security_problems"}, {"score": 0.0045318666714939905, "phrase": "serious_threats"}, {"score": 0.00443308765153716, "phrase": "distributed_systems"}, {"score": 0.0039053194919285725, "phrase": "big_performance_overhead"}, {"score": 0.003820144626025562, "phrase": "boundary_checking"}, {"score": 0.0030808211830129304, "phrase": "r.w.m._jones"}, {"score": 0.0030470127429039497, "phrase": "p.h.j._kelly"}, {"score": 0.002851790448644913, "phrase": "c_programs"}, {"score": 0.002363806685815014, "phrase": "special_boundary_checking_instruction"}, {"score": 0.0023249757987087033, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["buffer overflow", " hardware/software optimization", " array & pointer boundary checking"], "paper_abstract": "Malicious intrusions by buffer overflow attacks cause serious security problems and pose serious threats for networks and distributed systems such as clusters, Grids and P2P systems. Array & pointer boundary checking is one of the most effective approaches for defending against buffer overflow attacks. However, a big performance overhead may occur after boundary checking is applied. Typically, it may cause 2-5 times slowdown [T.M. Austin, E.B. Scott, S.S. Gurindar, Efficient detection of all pointer and array access errors, in: Proceedings of the ACM SIGPLAN '94 Conference on Programming Language Design and Implementation, 1994, pp. 290-301; R.W.M. Jones, P.H.J. Kelly, Backwards-compatible bounds checking for arrays and pointers in c programs, in: The Third International Workshop on Automated and Algorithmic Debugging, 1997, pp. 13-26]. In this paper, we propose a hardware/software method to optimize the performance of array & pointer boundary checking by designing a special boundary checking instruction. The experimental results show that our method can effectively reduce the overhead of array & pointer boundary checking. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Hardware/software optimization for array & pointer boundary checking against buffer overflow attacks", "paper_id": "WOS:000240380100003"}