{"auto_keywords": [{"score": 0.049418985040378574, "phrase": "parallel_file_systems"}, {"score": 0.04046484502680129, "phrase": "finish_time"}, {"score": 0.029486804702814548, "phrase": "dta_algorithm"}, {"score": 0.003775803846431323, "phrase": "last_sub-request"}, {"score": 0.00367228341822469, "phrase": "application_multiplexing"}, {"score": 0.0035468808202909715, "phrase": "pfs"}, {"score": 0.0034978813769575233, "phrase": "data_servers"}, {"score": 0.003308649946463136, "phrase": "performance_penalty"}, {"score": 0.0031734538599865973, "phrase": "different_sub-requests"}, {"score": 0.002899125545529459, "phrase": "lagged_sub-requests"}, {"score": 0.002575756583567029, "phrase": "lagged-behind_sub-requests"}, {"score": 0.0025225467103906314, "phrase": "dual-queue_scheduling_scheme"}, {"score": 0.002487696238488403, "phrase": "dta"}, {"score": 0.0024026156525362684, "phrase": "system_throughput"}, {"score": 0.0023694065215394593, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "similar_latency_guarantees"}], "paper_keywords": ["Parallel file system", " I/O scheduling", " Workload imbalance", " Earliest deadline first", " Data layout"], "paper_abstract": "In Parallel File Systems (PFSs), a data file I/O request may be divided into multiple I/O sub-requests across the storage system. The latency of the original I/O request depends on the finish time of the last sub-request. Due to application multiplexing and various file data layouts employed in PFS, data servers may have very different workloads. Thus, the performance penalty caused by the finish time of different sub-requests can be significant. The Dispatch Time Aligning (DTA) I/O scheduling algorithm focuses on improving system throughput by prioritizing lagged sub-requests in PFS I/O requests. The DTA algorithm associates sub-requests from the same I/O request, detects and prioritizes the lagged-behind sub-requests. The dual-queue scheduling scheme in DTA provides I/O request latency control while improving system throughput. Simulation results show that the DTA algorithm can provide up to 83 % higher total system throughput than the Earliest Deadline First algorithm, while offering similar latency guarantees.", "paper_title": "The dispatch time aligning I/O scheduling for parallel file systems", "paper_id": "WOS:000361897200003"}