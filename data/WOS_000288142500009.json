{"auto_keywords": [{"score": 0.03111569769702789, "phrase": "interaction_behaviour"}, {"score": 0.030480360675143627, "phrase": "wsn_applications"}, {"score": 0.004587348052298537, "phrase": "wireless_nodes"}, {"score": 0.004559661374976129, "phrase": "wireless_sensor_networks"}, {"score": 0.00418907090251818, "phrase": "actuator_nodes"}, {"score": 0.004064117897000019, "phrase": "sensor_nodes"}, {"score": 0.004039576329942698, "phrase": "sensor_and_actuator_nodes"}, {"score": 0.003535489842686145, "phrase": "different_nodes"}, {"score": 0.0035141291835319682, "phrase": "common_goals"}, {"score": 0.0034300603122549714, "phrase": "wsn"}, {"score": 0.0033681627448832996, "phrase": "multiple_sense-and-react_applications"}, {"score": 0.0032380391206297317, "phrase": "different_requirements"}, {"score": 0.0031035049228517715, "phrase": "increasingly_complex_task"}, {"score": 0.003056819704624705, "phrase": "new_approaches"}, {"score": 0.00297454367746853, "phrase": "novel_middleware"}, {"score": 0.002816556934231128, "phrase": "basic_functionalities"}, {"score": 0.002540613621469429, "phrase": "policy_manager"}, {"score": 0.002466637889870327, "phrase": "extensions"}, {"score": 0.002391067964886602, "phrase": "subscription_information"}, {"score": 0.0023125950237602518, "phrase": "diffusion_protocols"}, {"score": 0.002298605785178457, "phrase": "data_communication_protocols"}, {"score": 0.002236691727668501, "phrase": "detailed_evaluation"}], "paper_keywords": ["Wireless Sensor Networks", " Sense-and-react applications", " Separation of concerns", " Publish/subscribe middleware", " Component-based software engineering", " Policy-based composition"], "paper_abstract": "With the inclusion of actuators on wireless nodes, Wireless Sensor Networks (WSNs) are starting to change from sense-and-report platforms to sense-and-react platforms. Applications for such platforms are characterised by actuator nodes that are able to react to data collected by sensor nodes. Sensor and actuator nodes use a variety of interactions, for example, intra-node, inter-node (1-hop to n-hop), and global (all nodes). As a result, the functionality that coordinates the activities of the different nodes towards common goals has to be efficiently distributed in the WSN itself. In addition, multiple sense-and-react applications are being deployed within the same WSN, with each application characterised by different requirements and constraints. The design and implementation of these applications is becoming an increasingly complex task that would benefit from new approaches. In this article, we describe a novel middleware that separates the interaction behaviour of sense-and-react WSN applications from the components that implement the basic functionalities (sensing, reacting, computation, storage). This is achieved using policies that govern the interaction behaviour of sense-and-react WSN applications. The middleware is composed of a Policy Manager, a Publish/Subscribe Broker, and a set of Extensions that reside on each node. The broker manages subscription information, while extensions provide mechanisms orthogonal to the publish/subscribe core including diffusion protocols, data communication protocols, and data encryption. We conduct a detailed evaluation of the performance of our framework and show that the framework is close to TinyOS in performance but leads to more explicit and flexible application designs. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A policy-based publish/subscribe middleware for sense-and-react applications", "paper_id": "WOS:000288142500009"}