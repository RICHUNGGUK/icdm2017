{"auto_keywords": [{"score": 0.04987484105205095, "phrase": "infinite_time_turing_machines"}, {"score": 0.021674490463625545, "phrase": "welch"}, {"score": 0.012766057463865516, "phrase": "koepke_machines"}, {"score": 0.010500363955829848, "phrase": "hamkins-kidder_machines"}, {"score": 0.009978739317602332, "phrase": "hamkins"}, {"score": 0.008102206521106587, "phrase": "schindler"}, {"score": 0.007538662911297123, "phrase": "np"}, {"score": 0.00717642417391973, "phrase": "finite_number"}, {"score": 0.00664665174321707, "phrase": "space_usage"}, {"score": 0.00481495049065317, "phrase": "infinitary_computation"}, {"score": 0.004594026340246432, "phrase": "usual_computability_theory"}, {"score": 0.004468253672953337, "phrase": "seabold"}, {"score": 0.003989998238512256, "phrase": "ordinary_turing_machines"}, {"score": 0.0038973170902076707, "phrase": "infinite_time_turing_machine"}, {"score": 0.0038067805455546705, "phrase": "halt_state"}, {"score": 0.003790545901613269, "phrase": "infinitely_many_steps"}, {"score": 0.0036241912752875307, "phrase": "corresponding_complexity_theory"}, {"score": 0.0036010277564418056, "phrase": "natural_time_complexity_classes"}, {"score": 0.0035248761834680196, "phrase": "deolalikar"}, {"score": 0.003479957715785264, "phrase": "descriptive_set_theory"}, {"score": 0.0034577128467657967, "phrase": "big_open_questions"}, {"score": 0.003377353894247596, "phrase": "negative_answers"}, {"score": 0.003284780681393018, "phrase": "ordinary_turing_machine"}, {"score": 0.003054450075234415, "phrase": "used_cells"}, {"score": 0.002989822394494826, "phrase": "halting_computation"}, {"score": 0.002958021635132416, "phrase": "finite_amount"}, {"score": 0.0028954283130662594, "phrase": "time_or_space_usage"}, {"score": 0.002834155734219445, "phrase": "order_type_omega"}, {"score": 0.002703869636849563, "phrase": "koepke"}, {"score": 0.002585081657512565, "phrase": "transfinite_ordinal_time"}, {"score": 0.0025521085778978042, "phrase": "ordinal-indexed_cells"}, {"score": 0.0024980830729856474, "phrase": "natural_notion"}, {"score": 0.0024399717841513354, "phrase": "classical_idea"}, {"score": 0.0024295519058330287, "phrase": "space_constraints"}, {"score": 0.0024191764176027942, "phrase": "turing_machines"}, {"score": 0.0023178219772486868, "phrase": "nondeterministic_space_classes"}, {"score": 0.0022302306304023602, "phrase": "nondeterministic_hamkins-kidder_computation"}, {"score": 0.00220177373403577, "phrase": "deterministic_hamkins-kidder_computation"}, {"score": 0.002173679145840769, "phrase": "hamkins-kidder_halting_problem"}], "paper_keywords": [""], "paper_abstract": "Infinite Time Turing Machines (or Hamkins-Kidder machines) have been introduced in [HaLe00] and their computability theory has been investigated in comparison to the usual computability theory in a sequence of papers by Hamkins, Lewis, Welch and Seabold: [HaLe00], [We00a], [We00b], [HaSe01, [HaLe02], [We04], [We05] (cf. also the survey papers [Ha02], [Ha04] and [Ha05]). Infinite Time Turing Machines have the same hardware as ordinary Turing Machines, and almost the same software. However, an Infinite Time Turing Machine can continue its computation if it still hasn't reached the HALT state after infinitely many steps (for details, see closed integral 1). In [Sc03], Schindler started the investigation of the corresponding complexity theory by defining natural time complexity classes for Infinite Time Turing Machines. Schindler, Welch, Hamkins and Deolalikar have proved with methods of descriptive set theory that the big open questions of standard complexity theory P = NP and P = NP boolean AND coNP have negative answers for Infinite Time Turing Machines [Sc03, DeHaSc05, HaWe03]. For an ordinary Turing machine that stops in a finite number t of steps, it is easy to define its space usage: during its computation, it has used at most t cells of the tape, possibly less. This finite number of used cells can serve as a measure of space usage. A halting computation will have used a finite amount of time and space; if, however, time or space usage are infinite, then this corresponds to usage of order type omega and automatically implies that the computation was non-halting. In this paper, we shall consider both Hamkins-Kidder machines and Koepke's Ordinal Machines as described in [Ko(0)05a] and [Ko(0)05b]. Koepke machines can not only extend their computation into transfinite ordinal time, but they also have ordinal-indexed cells on their tapes. Therefore, there is a natural notion of space usage for computations on Koepke machines that corresponds to the classical idea of space constraints on Turing Machines: just count the number (order type) of cells being used. Analogously, we can define nondeterministic space classes NPSPACE(f)(K) for Koepke machines. Harnkins and Welch have noticed [HaWe03, Theorem 1.7] that in general, nondeterministic Hamkins-Kidder computation can be more powerful than deterministic Hamkins-Kidder computation. Their proof shows that the Hamkins-Kidder halting problem is in NP omega 1HK. Combining this result with Propositions 6 and 11, we get that PSPACE(omega+1)(K) (subset of)(not equal) NPSPACE(omega+1)(K).", "paper_title": "Space bounds for infinitary computation", "paper_id": "WOS:000239424100034"}