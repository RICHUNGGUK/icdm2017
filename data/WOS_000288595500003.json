{"auto_keywords": [{"score": 0.04334107667940846, "phrase": "plan_recognition"}, {"score": 0.03347141447186585, "phrase": "agent_behavior"}, {"score": 0.030897721357009376, "phrase": "atomic_behaviors"}, {"score": 0.00481495049065317, "phrase": "chi-square_distribution_tests"}, {"score": 0.004749377457292245, "phrase": "good_decisions"}, {"score": 0.0047007816199415905, "phrase": "social_context"}, {"score": 0.004241235563017201, "phrase": "software_agents"}, {"score": 0.004098221047046135, "phrase": "agent_modeling"}, {"score": 0.003973619384183145, "phrase": "carefully_hand-crafted_plan_libraries"}, {"score": 0.003906034193833338, "phrase": "a-priori_known_behavioral_repertoire"}, {"score": 0.0037872535287644103, "phrase": "plan_recognition_algorithms_match"}, {"score": 0.0034402448248944434, "phrase": "e._g."}, {"score": 0.0027805362553564336, "phrase": "corresponding_behavior_model"}, {"score": 0.0027144744718498102, "phrase": "relevant_events"}, {"score": 0.002622806755354039, "phrase": "proposed_approach"}, {"score": 0.002569294946452846, "phrase": "statistical_test"}, {"score": 0.0025342267883803255, "phrase": "observed_behavior"}, {"score": 0.002440231768165477, "phrase": "behavior_classification"}, {"score": 0.002254785420533933, "phrase": "experiment_results"}, {"score": 0.002231657123365799, "phrase": "paper_show"}, {"score": 0.0021562588804528667, "phrase": "different_behaviors"}, {"score": 0.002141487053045766, "phrase": "different_domains"}, {"score": 0.0021050005967517766, "phrase": "robocup"}], "paper_keywords": ["Agent modeling", " plan recognition", " activity recognition", " user modeling"], "paper_abstract": "To make good decisions in a social context, humans often need to recognize the plan underlying the behavior of others, and make predictions based on this recognition. This process, when carried out by software agents or robots, is known as plan recognition, or agent modeling. Most existing techniques for plan recognition assume the availability of carefully hand-crafted plan libraries, which encode the a-priori known behavioral repertoire of the observed agents; during run-time, plan recognition algorithms match the observed behavior of the agents against the plan-libraries, and matches are reported as hypotheses. Unfortunately, techniques for automatically acquiring plan-libraries from observations, e. g., by learning or data-mining, are only beginning to emerge. We present an approach for automatically creating the model of an agent behavior based on the observation and analysis of its atomic behaviors. In this approach, observations of an agent behavior are transformed into a sequence of atomic behaviors (events). This stream is analyzed in order to get the corresponding behavior model, represented by a distribution of relevant events. Once the model has been created, the proposed approach presents a method using a statistical test for classifying an observed behavior. Therefore, in this research, the problem of behavior classification is examined as a problem of learning to characterize the behavior of an agent in terms of sequences of atomic behaviors. The experiment results of this paper show that a system based on our approach can efficiently recognize different behaviors in different domains, in particular UNIX command-line data, and RoboCup soccer simulation.", "paper_title": "A plan classifier based on Chi-square distribution tests", "paper_id": "WOS:000288595500003"}