{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automatic_detection"}, {"score": 0.0046176782475198085, "phrase": "wormhole_networks"}, {"score": 0.004202741104973709, "phrase": "duato's_necessary_and_sufficient_condition"}, {"score": 0.003554661425339528, "phrase": "environment_constraints"}, {"score": 0.0031678720736808574, "phrase": "original_algorithm"}, {"score": 0.0027356847952125433, "phrase": "prototype_tool"}, {"score": 0.0025960262223338293, "phrase": "automatic_deadlock_checking"}, {"score": 0.002542174767860791, "phrase": "large_scale_networks"}, {"score": 0.002289180040240783, "phrase": "comparative_results"}, {"score": 0.002241679436497569, "phrase": "standard_approach"}], "paper_keywords": ["algorithms", " verification", " Deadlock", " interconnection networks", " networks on chip", " worm-hole routing"], "paper_abstract": "We present an extension of Duato's necessary and sufficient condition a routing function must satisfy in order to be deadlock-free, to support environment constraints inducing extra-dependencies between messages. We also,present an original algorithm to automatically check the deadlock-freeness of a network with a given routing function. A prototype tool has been developed and automatic deadlock checking of large scale networks with various routing functions have been successfully achieved. We provide comparative results with standard approach, highlighting the benefits of our method.", "paper_title": "A tool for automatic detection of deadlock in wormhole networks on chip", "paper_id": "WOS:000252962500005"}