{"auto_keywords": [{"score": 0.02892278386101692, "phrase": "prescriptive_model"}, {"score": 0.02322730111336099, "phrase": "robot_swarms"}, {"score": 0.021778582624857015, "phrase": "property-driven_design"}, {"score": 0.00891775476978587, "phrase": "code-and-fix_approach"}, {"score": 0.005214950353693689, "phrase": "desired_robot_swarm"}, {"score": 0.004669845451682529, "phrase": "prescriptive_modeling_and_model_checking"}, {"score": 0.004260134699483774, "phrase": "prescriptive_modeling"}, {"score": 0.004223032986655664, "phrase": "model_checking"}, {"score": 0.00397217701571219, "phrase": "bottom-up_iterative_process"}, {"score": 0.0038355531523269217, "phrase": "individual_behaviors"}, {"score": 0.0037361664435836845, "phrase": "desired_collective_behavior"}, {"score": 0.0035141291835319682, "phrase": "obtained_swarm"}, {"score": 0.003247868216333148, "phrase": "property-driven_design_aims"}, {"score": 0.0030951536886513567, "phrase": "traditional_unstructured_approach"}, {"score": 0.002860546817196148, "phrase": "robot_swarm"}, {"score": 0.002552628669352939, "phrase": "desired_properties"}, {"score": 0.0023902621773166963, "phrase": "simulated_version"}, {"score": 0.0022777800735119405, "phrase": "previous_step"}, {"score": 0.0021610874773389096, "phrase": "previous_steps"}], "paper_keywords": ["Design", " Reliability", " Verification", " Swarm robotics", " top-down design", " prescriptive modeling", " model checking", " aggregation", " foraging"], "paper_abstract": "In this article, we present property-driven design, a novel top-down design method for robot swarms based on prescriptive modeling and model checking. Traditionally, robot swarms have been developed using a code-and-fix approach: in a bottom-up iterative process, the developer tests and improves the individual behaviors of the robots until the desired collective behavior is obtained. The code-and-fix approach is unstructured, and the quality of the obtained swarm depends completely on the expertise and ingenuity of the developer who has little scientific or technical support in his activity. Property-driven design aims at providing such scientific and technical support, with many advantages compared to the traditional unstructured approach. Property-driven design is composed of four phases: first, the developer formally specifies the requirements of the robot swarm by stating its desired properties; second, the developer creates a prescriptive model of the swarm and uses model checking to verify that this prescriptive model satisfies the desired properties; third, using the prescriptive model as a blueprint, the developer implements a simulated version of the desired robot swarm and validates the prescriptive model developed in the previous step; fourth, the developer implements the desired robot swarm and validates the previous steps. We demonstrate property-driven design using two case studies: aggregation and foraging.", "paper_title": "Property-Driven Design for Robot Swarms: A Design Method Based on Prescriptive Modeling and Model Checking", "paper_id": "WOS:000348362200001"}