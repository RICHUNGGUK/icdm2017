{"auto_keywords": [{"score": 0.040834622919398475, "phrase": "ld_algorithms"}, {"score": 0.03122236713759626, "phrase": "negotiation_session"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_distributed_systems"}, {"score": 0.004767546015485477, "phrase": "multiple_task_classes"}, {"score": 0.004697308822154191, "phrase": "load_distribution"}, {"score": 0.0045599093158915326, "phrase": "better_system_performance"}, {"score": 0.004448471107649881, "phrase": "workload_imbalance"}, {"score": 0.0043183186953102805, "phrase": "distributed_system"}, {"score": 0.004171259063201874, "phrase": "application_tasks"}, {"score": 0.004130165601475531, "phrase": "busy_nodes"}, {"score": 0.00393066798511457, "phrase": "previous_studies"}, {"score": 0.0037407704200033607, "phrase": "sender-receiver_negotiation_session"}, {"score": 0.003577691211998842, "phrase": "homogeneous_system"}, {"score": 0.0033879628186273625, "phrase": "heterogeneous_system"}, {"score": 0.0033050703534275717, "phrase": "drastically_different_processing_speeds"}, {"score": 0.0027650234530228897, "phrase": "sender-receiver_pair"}, {"score": 0.002670719148310961, "phrase": "suitable_batch_size"}, {"score": 0.0025668646315794947, "phrase": "processing_speeds"}, {"score": 0.0023828731731474306, "phrase": "maximal_benefit"}, {"score": 0.0023130151703068444, "phrase": "additional_advantage"}, {"score": 0.002234092591045251, "phrase": "task_batch"}, {"score": 0.002168586864007222, "phrase": "different_performance_objectives"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["dynamic load distribution algorithms", " heterogeneous distributed systems", " task assignment", " distributed algorithms"], "paper_abstract": "A load distribution (LD) algorithm achieves better system performance by smoothing out any workload imbalance that may exist in a distributed system. This is done by relocating application tasks from busy nodes to lightly loaded (or idle) nodes. Previous studies on LD algorithms allow only one single task to be transferred for each sender-receiver negotiation session. While this approach is effective for a homogeneous system, it is too conservative to be applied to a heterogeneous system where nodes may have drastically different processing speeds. In this paper, we propose a class of LD algorithms that allow a batch of tasks to be transferred during each negotiation session. The core of the algorithms is a protocol that ensures a sender-receiver pair to negotiate and arrive at a suitable batch size. The protocol takes into consideration the processing speeds of the sender and receiver, as well as their relative workload, thus ensuring the maximal benefit for each negotiation session. An additional advantage of the algorithms is that a task batch can be composed according to different performance objectives. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Adaptive load distribution algorithms for heterogeneous distributed systems with multiple task classes", "paper_id": "WOS:000235105300001"}