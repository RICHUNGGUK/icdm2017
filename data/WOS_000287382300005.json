{"auto_keywords": [{"score": 0.04746040725383538, "phrase": "propositional_proof_systems"}, {"score": 0.010303150300450247, "phrase": "j._symbolic_logic"}, {"score": 0.009521502826249589, "phrase": "cook"}, {"score": 0.009459021666021231, "phrase": "krajicek"}, {"score": 0.009092882405603984, "phrase": "proof_systems"}, {"score": 0.00481495049065317, "phrase": "starting_points"}, {"score": 0.004783232571029632, "phrase": "propositional_proof_complexity"}, {"score": 0.004736045157669388, "phrase": "seminal_paper"}, {"score": 0.004704844560325455, "phrase": "cook_and_reckhow"}, {"score": 0.0045218909699308385, "phrase": "poly-time_computable_functions"}, {"score": 0.004462494148878735, "phrase": "propositional_tautologies"}, {"score": 0.004374852170791322, "phrase": "provability_consequences"}, {"score": 0.004346020686558718, "phrase": "bounded_arithmetic"}, {"score": 0.004054479957160662, "phrase": "poly-time_functions"}, {"score": 0.0038838500580958744, "phrase": "new_model"}, {"score": 0.003732702104052828, "phrase": "polynomially_bounded_proof_system"}, {"score": 0.0036112323484812675, "phrase": "underlying_language_l"}, {"score": 0.0034706569037527774, "phrase": "proof_system"}, {"score": 0.0034250209479036392, "phrase": "different_characterizations"}, {"score": 0.0031845067058084583, "phrase": "small_nondeterministic_instance_complexity"}, {"score": 0.003153041030690117, "phrase": "second_question"}, {"score": 0.0031012854824177772, "phrase": "optimal_proof_systems"}, {"score": 0.0029805015010906013, "phrase": "surprising_positive_answer"}, {"score": 0.0024112587007106535, "phrase": "logarithmic_advice"}, {"score": 0.0023326907270271153, "phrase": "sparse_np-oracle"}, {"score": 0.0023019834179097607, "phrase": "recent_technique"}, {"score": 0.0022867843993701407, "phrase": "buhrman"}, {"score": 0.002264173904586012, "phrase": "ccc"}, {"score": 0.002147265537489893, "phrase": "proven_formula"}], "paper_keywords": ["Computational complexity", " Proof systems", " Advice", " Instance complexity", " Polynomially bounded proof systems", " Optimal proof systems"], "paper_abstract": "One of the starting points of propositional proof complexity is the seminal paper by Cook and Reckhow [J. Symbolic Logic, 1979], where they defined propositional proof systems as poly-time computable functions which have all propositional tautologies as their range. Motivated by provability consequences in bounded arithmetic, Cook and Krajicek [J. Symbolic Logic, 2007] have recently started the investigation of proof systems which are computed by poly-time functions using advice. In this paper we concentrate on three fundamental questions regarding this new model. First, we investigate whether a given language L admits a polynomially bounded proof system with advice. Depending on the complexity of the underlying language L and the amount and type of the advice used by the proof system, we obtain different characterizations for this problem. In particular, we show that this question is tightly linked with the question whether L has small nondeterministic instance complexity. The second question concerns the existence of optimal proof systems with advice. For propositional proof systems, Cook and Krajicek gave a surprising positive answer which we extend to all languages. These results show that providing proof systems with advice yields a more powerful model, but this model is also less directly applicable in practice. Our third question therefore asks whether the usage of advice in propositional proof systems can be simplified or even eliminated. While in principle, the advice can be very complex, we show that propositional proof systems with logarithmic advice are also computable in poly-time with access to a sparse NP-oracle. Employing a recent technique of Buhrman and Hitchcock [CCC, 2008] we also manage to transfer the advice from the proof to the proven formula, which leads to a more practical computational model. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Proof systems that take advice", "paper_id": "WOS:000287382300005"}