{"auto_keywords": [{"score": 0.034887398305923065, "phrase": "base_model"}, {"score": 0.00481495049065317, "phrase": "graph_transformation_systems"}, {"score": 0.004618166136069052, "phrase": "model_view_management"}, {"score": 0.004522796947899013, "phrase": "multi-view_visual_languages"}, {"score": 0.004301834610818624, "phrase": "diagram_types"}, {"score": 0.004057596233938867, "phrase": "different_aspects"}, {"score": 0.003875424718379985, "phrase": "different_system_views"}, {"score": 0.00347657813672945, "phrase": "derived_views"}, {"score": 0.003418958653159371, "phrase": "graph_query_patterns"}, {"score": 0.0031317126905234145, "phrase": "automatic_mechanisms"}, {"score": 0.003028727936200845, "phrase": "derived_view"}, {"score": 0.00290473242917264, "phrase": "mvvl_designer_result"}, {"score": 0.0028805474861014722, "phrase": "so-called_audience-oriented_views"}, {"score": 0.0026941587813581274, "phrase": "semantic_domain"}, {"score": 0.002551612225562499, "phrase": "mvvl"}, {"score": 0.002477998427152547, "phrase": "triple_graph_transformation_systems"}, {"score": 0.0023964590500856887, "phrase": "system_views"}, {"score": 0.0021049977753042253, "phrase": "web_systems"}], "paper_keywords": [""], "paper_abstract": "In this paper, we present our approach for model view management in the context of Multi-View Visual Languages (MVVLs). These are made of a number of diagram types (or viewpoints) that can be used for the specification of the different aspects of a system. Therefore, the user can build different system views conform to the viewpoints, which are merged in a repository in order to perform consistency checking. In addition, the user can define derived views by means of graph query patterns in order to extract information from a base model (a system view or the repository). We have provided automatic mechanisms to keep synchronized the base model and the derived view when the former changes. Predefined queries by the MVVL designer result in so-called audience-oriented views. Finally, semantic views are used for analysing the system by its translation into a semantic domain. Our approach is based on meta-modelling to describe the syntax of the MVVL and each viewpoint, and on triple graph transformation systems to synchronize and maintain correspondences between the system views and the repository, as well as between the derived, audience-oriented and semantic views and the base models. We illustrate these concepts by means of an example in the domain of security for web systems.", "paper_title": "Model view management with triple graph transformation systems", "paper_id": "WOS:000241436800025"}