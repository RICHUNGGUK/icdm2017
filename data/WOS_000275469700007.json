{"auto_keywords": [{"score": 0.0423184094258815, "phrase": "class_probability_estimation"}, {"score": 0.021948968338868897, "phrase": "classification_accuracy"}, {"score": 0.017537026920243583, "phrase": "naive_bayes_tree"}, {"score": 0.015065160452650194, "phrase": "lcl"}, {"score": 0.010158934509057038, "phrase": "accurate_class_probability_prediction"}, {"score": 0.008031093799770399, "phrase": "naive_bayes"}, {"score": 0.0077929832033295995, "phrase": "lcl."}, {"score": 0.00481495049065317, "phrase": "learning_decision"}, {"score": 0.004775466707014647, "phrase": "conditional_likelihood."}, {"score": 0.004749323365717064, "phrase": "machine_learning"}, {"score": 0.004723322467153553, "phrase": "data_mining"}, {"score": 0.004697463242638162, "phrase": "traditional_learning_models"}, {"score": 0.004658938373208752, "phrase": "high_classification_accuracy"}, {"score": 0.004470980717981239, "phrase": "medical_diagnosis"}, {"score": 0.0043858695571251174, "phrase": "decision_trees"}, {"score": 0.004314202267170469, "phrase": "class_probability_estimators"}, {"score": 0.004208881856146758, "phrase": "resulting_models"}, {"score": 0.004162898387323015, "phrase": "probability_estimation_trees"}, {"score": 0.003802135020791801, "phrase": "log_conditional_likelihood"}, {"score": 0.0035988294152570154, "phrase": "bayesian_network"}, {"score": 0.0035595614238441283, "phrase": "svm"}, {"score": 0.003350642235305096, "phrase": "precise_class_probability_prediction"}, {"score": 0.003215295260684715, "phrase": "lcl._second"}, {"score": 0.0031801323969554976, "phrase": "non_tree-based_models"}, {"score": 0.0030600539712413804, "phrase": "well-established_relevant_metric-auc"}, {"score": 0.003018273305489126, "phrase": "different_decision-tree_learning_models"}, {"score": 0.002977061391551628, "phrase": "different_objectives"}, {"score": 0.002703869368554536, "phrase": "greedy_and_recursive_learning_algorithm"}, {"score": 0.002616079852961742, "phrase": "scoring_function"}, {"score": 0.0025874530719850156, "phrase": "decision_tree"}, {"score": 0.0025103303020759956, "phrase": "class_probabilities"}, {"score": 0.002496556366049961, "phrase": "test_samples"}, {"score": 0.0024760366863460117, "phrase": "whole_tree"}, {"score": 0.0024556852466581527, "phrase": "posterior_class_probability"}, {"score": 0.0023051018745625053, "phrase": "new_model"}, {"score": 0.0022987679645976354, "phrase": "lcl_tree"}, {"score": 0.0022363763413452173, "phrase": "lclt"}, {"score": 0.0022179901564261975, "phrase": "state-of-the-art_learning_models"}, {"score": 0.0021049985067909042, "phrase": "auc."}], "paper_keywords": ["Classification", " log conditional likelihood", " probability estimation tree", " discriminative learning", " AUC"], "paper_abstract": "In machine learning and data mining, traditional learning models aim for high classification accuracy. However, accurate class probability prediction is more desirable than classification accuracy in many practical applications, such as medical diagnosis. Although it is known that decision trees can be adapted to be class probability estimators in a variety of approaches, and the resulting models are uniformly called Probability Estimation Trees (PETs), the performances of these PETs in class probability estimation, have not yet been investigated. We begin our research by empirically studying PETs in terms of class probability estimation, measured by Log Conditional Likelihood (LCL). We also compare a PET called C4.4 with other representative models, including Naive Bayes, Naive Bayes Tree, Bayesian Network, KNN and SVM, in LCL. From our experiments, we draw several valuable conclusions. First, among various tree-based models, C4.4 is the best in yielding precise class probability prediction measured by LCL. We provide an explanation for this and reveal the nature of LCL. Second, compared with non tree-based models, C4.4 also performs best. Finally, LCL does not dominate another well-established relevant metric-AUC, which suggests that different decision-tree learning models should be used for different objectives. Our experiments are conducted on the basis of 36 UCI sample sets. We run all the models within a machine learning platform-Weka. We also explore an approach to improve the class probability estimation of Naive Bayes Tree. We propose a greedy and recursive learning algorithm, where at each step, LCL is used as the scoring function to expand the decision tree. The algorithm uses Naive Bayes created at leaves to estimate class probabilities of test samples. The whole tree encodes the posterior class probability in its structure. One benefit of improving class probability estimation is that both classification accuracy and AUC can be possibly scaled up. We call the new model LCL Tree (LCLT). Our experiments on 33 UCI sample sets show that LCLT outperforms all state-of-the-art learning models, such as Naive Bayes Tree, significantly in accurate class probability prediction measured by LCL, as well as in classification accuracy and AUC.", "paper_title": "LEARNING DECISION TREES WITH LOG CONDITIONAL LIKELIHOOD", "paper_id": "WOS:000275469700007"}