{"auto_keywords": [{"score": 0.035738134354936495, "phrase": "index_graphs"}, {"score": 0.015719716506582538, "phrase": "partial_tree-pattern_queries"}, {"score": 0.01256820573598613, "phrase": "meaningful_answers"}, {"score": 0.004729926682040447, "phrase": "xml"}, {"score": 0.004646258518859209, "phrase": "data_models"}, {"score": 0.004577718478319983, "phrase": "tree-structured_data"}, {"score": 0.004483450050677258, "phrase": "tree-pattern_queries"}, {"score": 0.004365082149504191, "phrase": "tree-structured_data_sources"}, {"score": 0.004187109346012277, "phrase": "multiple_data_sources"}, {"score": 0.004162281538812753, "phrase": "different_tree_structures"}, {"score": 0.004040324509631854, "phrase": "complete_specification"}, {"score": 0.004004436217742343, "phrase": "tree_pattern"}, {"score": 0.0038069853794502353, "phrase": "challenging_issue"}, {"score": 0.003706410380455668, "phrase": "query_language"}, {"score": 0.0033497809969621267, "phrase": "structural_information"}, {"score": 0.003329901594166227, "phrase": "data_trees"}, {"score": 0.003165605014237376, "phrase": "equivalent_set"}, {"score": 0.0031468151597922214, "phrase": "''_complete_''_tpqs"}, {"score": 0.0031003255054939524, "phrase": "original_approach"}, {"score": 0.0030454408569868347, "phrase": "complete_tpqs"}, {"score": 0.002991524908432975, "phrase": "meaningful_semantics"}, {"score": 0.0029649248741435512, "phrase": "ptpq_language"}, {"score": 0.002921114512115261, "phrase": "previous_approaches"}, {"score": 0.002801849371896573, "phrase": "lowest_common_ancestors"}, {"score": 0.002719644855867468, "phrase": "meaningful_complete_tpqs"}, {"score": 0.0026477194580630963, "phrase": "dblp-based_data_sets"}, {"score": 0.002600826330254548, "phrase": "previous_ones"}, {"score": 0.0024431289979171505, "phrase": "similar_recall"}, {"score": 0.0024213933464338885, "phrase": "meaningless_answers"}, {"score": 0.0022745508619577927, "phrase": "structural_constraints"}, {"score": 0.002142970278347126, "phrase": "xquery_engine"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["XML", " partial tree-pattern query", " keyword query", " query language semantics", " meaningful answer", " structural summary of XML data"], "paper_abstract": "The wide adoption of XML has increased the interest on data models that are based on tree-structured data. Querying capabilities are provided through tree-pattern queries (TPQs). The need for querying tree-structured data sources when their structure is not fully known, and the need to integrate multiple data sources with different tree structures have driven, recently, the suggestion of query languages that relax the complete specification of a tree pattern. Assigning semantics to the queries of these languages so that they return meaningful answers is a challenging issue. In this paper, we introduce a query language which allows the specification of partial tree-pattern queries (PTPQs). The structure in a PTPQ can be flexibly specified fully, partially or not at all. We define index graphs which summarize the structural information of data trees. Using index graphs, we show that PTPQs can be evaluated through the generation of an equivalent set of '' complete '' TPQs. We suggest an original approach that exploits the set of complete TPQs of a PTPQ to assign meaningful semantics to the PTPQ language. In contrast to previous approaches that operate locally on the data to compute meaningful answers (usually by computing lowest common ancestors), our approach operates globally on index graphs to detect meaningful complete TPQs. We implemented and experimentally evaluated our approach on DBLP-based data sets with irregularities. Its comparison to previous ones shows that it succeeds in finding all the meaningful answers when the others fail (perfect recall). Further, it outperforms approaches with similar recall in excluding meaningless answers (better precision). Finally, it is superior to and scales better than the only previous approach that allows for structural constraints in the queries. Our approach generates TPQs and therefore, it can be easily implemented on top of an XQuery engine. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Assigning semantics to partial tree-pattern queries", "paper_id": "WOS:000251639400013"}