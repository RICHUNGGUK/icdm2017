{"auto_keywords": [{"score": 0.04930231023249969, "phrase": "finite_element_software"}, {"score": 0.014734137435760034, "phrase": "corba"}, {"score": 0.00481495049065317, "phrase": "corba_middleware"}, {"score": 0.004659951478263083, "phrase": "distributed_middleware_technologies"}, {"score": 0.003828912548622257, "phrase": "client_code"}, {"score": 0.00347054319869429, "phrase": "language_neutral_way"}, {"score": 0.003145609726536791, "phrase": "intermediate_input"}, {"score": 0.0030944828434567966, "phrase": "output_files"}, {"score": 0.0030193416820392554, "phrase": "corba_software_components"}, {"score": 0.0027141975147496264, "phrase": "sample_structural_mechanics_code"}, {"score": 0.0024398167078355224, "phrase": "future_directions"}, {"score": 0.002266246304762945, "phrase": "hpc_centres"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["CORBA", " finite element software", " C plus"], "paper_abstract": "Distributed middleware technologies, such as CORBA can enable finite element software to be used in a more flexible way. Adding functionality is possible without the need for recompiling client code. Applications and libraries can expose their functionality to other applications in a language neutral way, enabling a more direct and easy transfer of data, without the need for intermediate input and output files. The CORBA software components can be easily configured and distributed transparently over the network. A sample structural mechanics code, implemented in C++ is used to illustrate these concepts. Some future directions, such as placing CORBA enabled finite element software on HPC centres are also discussed. (c) 2003 Elsevier B.V. All Rights reserved.", "paper_title": "Using CORBA middleware in finite element software", "paper_id": "WOS:000234408800015"}