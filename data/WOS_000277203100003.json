{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "partially-ordered_trees"}, {"score": 0.004681971826924847, "phrase": "non-linear_data_structures"}, {"score": 0.004185632403886255, "phrase": "data_mining_problems"}, {"score": 0.0036382660173943393, "phrase": "efficient_mining_techniques"}, {"score": 0.003206916619690171, "phrase": "scalable_and_parallelizable_algorithm"}, {"score": 0.0028664985822266344, "phrase": "potminer"}, {"score": 0.0023223663501882917, "phrase": "special_cases"}, {"score": 0.0021049977753042253, "phrase": "completely_ordered_and_completely_unordered_trees"}], "paper_keywords": ["Data mining", " Frequent patterns", " Partially-ordered trees", " Induced and embedded subtrees"], "paper_abstract": "Non-linear data structures are becoming more and more common in data mining problems. Trees, in particular, are amenable to efficient mining techniques. In this paper, we introduce a scalable and parallelizable algorithm to mine partially-ordered trees. Our algorithm, POTMiner, is able to identify both induced and embedded subtrees in such trees. As special cases, it can also handle both completely ordered and completely unordered trees.", "paper_title": "POTMiner: mining ordered, unordered, and partially-ordered trees", "paper_id": "WOS:000277203100003"}