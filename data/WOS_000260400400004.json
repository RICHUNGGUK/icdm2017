{"auto_keywords": [{"score": 0.046736465664965955, "phrase": "frequent_itemsets"}, {"score": 0.03679658686220894, "phrase": "fci-stream"}, {"score": 0.00481495049065317, "phrase": "sliding_window"}, {"score": 0.004771672073078768, "phrase": "linear_time"}, {"score": 0.004439097815805505, "phrase": "large_transactional_databases"}, {"score": 0.004300951511110487, "phrase": "famous_apriori_algorithm"}, {"score": 0.003929391999210588, "phrase": "mining_closed_itemsets"}, {"score": 0.003841610436545169, "phrase": "data_mining_community"}, {"score": 0.003023129616910419, "phrase": "online_algorithms_work"}, {"score": 0.00298238929037041, "phrase": "window_environments"}, {"score": 0.0029289191071848403, "phrase": "performance_evaluation"}, {"score": 0.002699889709390707, "phrase": "improved_algorithm"}, {"score": 0.002603918128553617, "phrase": "computational_complexity"}, {"score": 0.0025113494092413604, "phrase": "linear_combination"}, {"score": 0.0024774888010414206, "phrase": "average_transaction_size"}, {"score": 0.0024220634963019114, "phrase": "itemset_size"}, {"score": 0.00233594452829104, "phrase": "essential_theorem"}, {"score": 0.002232579371411546, "phrase": "new_algorithm"}, {"score": 0.0021241414408077895, "phrase": "art_algorithm"}, {"score": 0.0021049977753042253, "phrase": "gc-tree"}], "paper_keywords": ["frequent itemsets", " closed itemsets", " online algorithm", " association rules", " data mining"], "paper_abstract": "One of the most well-studied problems in data mining is computing the collection of frequent itemsets in large transactional databases. Since the introduction of the Famous Apriori algorithm [14], many others have been proposed to find the frequent itemsets. Among Such algorithms, the approach of mining closed itemsets has raised much interest in data mining community. The algorithms taking this approach include TITANIC 181, CLOSET+ [6], DCI-Closed[4], FCI-Stream [3]. GC-Tree [15], TGC-Tree[16] etc. Among these algorithms, FCI-Stream, GC-Tree and TGC-Tree are online algorithms work under sliding window environments. By the performance evaluation in [16]. GC-Tree 1151 is the fastest one. In this paper, an improved algorithm based on GC-Tree is proposed. the computational complexity of which is proved to be a linear combination of the average transaction size and the average closed itemset size. The algorithm is based oil the essential theorem presented in Sect. 4.2. Empirically, the new algorithm is several orders of Magnitude faster than the state of art algorithm, GC-Tree.", "paper_title": "Finding, Frequent Closed Itemsets in Sliding Window in Linear Time", "paper_id": "WOS:000260400400004"}