{"auto_keywords": [{"score": 0.05006970196137611, "phrase": "uct"}, {"score": 0.030418959847803687, "phrase": "nmc"}, {"score": 0.026419155679563232, "phrase": "max"}, {"score": 0.004588389551682397, "phrase": "single-player_general_game_playing"}, {"score": 0.004525629293824217, "phrase": "monte_carlo"}, {"score": 0.0041666157975446564, "phrase": "game_playing"}, {"score": 0.0036062629740935214, "phrase": "games"}, {"score": 0.0035072146967082083, "phrase": "nested_monte_carlo"}, {"score": 0.00307657476125683, "phrase": "transposition_tables"}, {"score": 0.0027361626349903744, "phrase": "single-player_games"}, {"score": 0.002286781334850213, "phrase": "program_ary"}, {"score": 0.0021490449563443025, "phrase": "slight_improvements"}], "paper_keywords": ["General Game Playing (GPP)", " nested Monte-Carlo search", " single-player games", " upper confidence bounds for trees (UCT)"], "paper_abstract": "Monte Carlo tree search (MCTS) has been recently very successful for game playing, particularly for games where the evaluation of a state is difficult to compute, such as Go or General Games. We compare nested Monte Carlo (NMC) search, upper confidence bounds for trees (UCT-T), UCT with transposition tables (UCT+T), and a simple combination of NMC and UCT+T (MAX) on single-player games of the past General Game Playing (GGP) competitions. We show that transposition tables improve UCT and that MAX is the best of these four algorithms. Using UCT+T, the program Ary won the 2009 GGP competition. MAX and NMC are slight improvements over this 2009 version.", "paper_title": "Combining UCT and Nested Monte Carlo Search for Single-Player General Game Playing", "paper_id": "WOS:000295471700006"}