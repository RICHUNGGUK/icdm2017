{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "heterogeneous_computing_systems"}, {"score": 0.004771672073078768, "phrase": "multiple_priority_queues"}, {"score": 0.004665162327051461, "phrase": "distributed_heterogeneous_computing_systems"}, {"score": 0.004602395776895036, "phrase": "heuristic-based_task_scheduling_algorithm"}, {"score": 0.004300951511110487, "phrase": "heuristic_based_task_scheduling_algorithm"}, {"score": 0.00418595288276353, "phrase": "different_makespan"}, {"score": 0.004129607015893271, "phrase": "heterogeneous_computing_system"}, {"score": 0.0040373708328770306, "phrase": "good_scheduling_algorithm"}, {"score": 0.0035898158129721003, "phrase": "task_scheduling_scheme"}, {"score": 0.0035095935622207956, "phrase": "multiple_priority_queues_genetic_algorithm"}, {"score": 0.00338493754743055, "phrase": "basic_idea"}, {"score": 0.0031062822219953524, "phrase": "genetic_algorithm"}, {"score": 0.003078678857459423, "phrase": "ga"}, {"score": 0.0029025435402480326, "phrase": "heuristic-based_earliest_finish_time"}, {"score": 0.0027491902732542013, "phrase": "task-to-processor_mapping"}, {"score": 0.002712131567923321, "phrase": "mpqga"}, {"score": 0.0025456716198597627, "phrase": "directed_acyclic_graph"}, {"score": 0.002466303439899648, "phrase": "experimental_results"}, {"score": 0.0024440836179156593, "phrase": "large-sized_problems"}, {"score": 0.0024111277643627154, "phrase": "large_set"}, {"score": 0.002389403849342894, "phrase": "randomly_generated_graphs"}, {"score": 0.0023253967212081626, "phrase": "real-world_problems"}, {"score": 0.002252880693912436, "phrase": "proposed_mpqga_algorithm"}, {"score": 0.002202469129781332, "phrase": "random_search_method"}, {"score": 0.002162951519368368, "phrase": "schedule_quality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Directed acyclic graph", " Genetic algorithm", " Heuristic algorithm", " Makespan", " Multiple priority queue", " Task scheduling"], "paper_abstract": "On parallel and distributed heterogeneous computing systems, a heuristic-based task scheduling algorithm typically consists of two phases: task prioritization and processor selection. In a heuristic based task scheduling algorithm, different prioritization will produce different makespan on a heterogeneous computing system. Therefore, a good scheduling algorithm should be able to efficiently assign a priority to each subtask depending on the resources needed to minimize makespan. In this paper, a task scheduling scheme on heterogeneous computing systems using a multiple priority queues genetic algorithm (MPQGA) is proposed. The basic idea of our approach is to exploit the advantages of both evolutionary-based and heuristic-based algorithms while avoiding their drawbacks. The proposedalgorithm incorporates a genetic algorithm (GA) approach to assign a priority to each subtask while using a heuristic-based earliest finish time (EFT) approach to search for a solution for the task-to-processor mapping. The MPQGA method also designs crossover, mutation, and fitness function suitable for the scenario of directed acyclic graph (DAG) scheduling. The experimental results for large-sized problems from a large set of randomly generated graphs as well as graphs of real-world problems with various characteristics show that the proposed MPQGA algorithm outperforms two non-evolutionary heuristics and a random search method in terms of schedule quality. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A genetic algorithm for task scheduling on heterogeneous computing systems using multiple priority queues", "paper_id": "WOS:000335635600015"}