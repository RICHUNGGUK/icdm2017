{"auto_keywords": [{"score": 0.03843856552198325, "phrase": "pmht"}, {"score": 0.008613638841171842, "phrase": "performance_problems"}, {"score": 0.00481495049065317, "phrase": "moving_objects"}, {"score": 0.004743164872278112, "phrase": "relational_database"}, {"score": 0.004672444473700524, "phrase": "uncooperative_moving_objects"}, {"score": 0.004511485198940203, "phrase": "complex_task"}, {"score": 0.004399905285945236, "phrase": "association_problems"}, {"score": 0.0043560464825349275, "phrase": "multi-target_scenarios"}, {"score": 0.004164007198843467, "phrase": "probabilistic_multiple_hypothesis_tracking"}, {"score": 0.004000396172153709, "phrase": "classical_track_filtering"}, {"score": 0.003940706575253453, "phrase": "likelihood_ratio_test"}, {"score": 0.0037480753312398754, "phrase": "track_association"}, {"score": 0.0036188435232325337, "phrase": "similar_algorithms"}, {"score": 0.003459191419478298, "phrase": "efficient_implementation"}, {"score": 0.003424677513304057, "phrase": "real_world_applications"}, {"score": 0.003306559295382181, "phrase": "challenging_task"}, {"score": 0.003240895431893266, "phrase": "common_requirement"}, {"score": 0.0031448288291084, "phrase": "reliable_storage"}, {"score": 0.003113441660343867, "phrase": "track_data"}, {"score": 0.002976019715894587, "phrase": "tracker's_calculation"}, {"score": 0.002931569771634119, "phrase": "database_management_system"}, {"score": 0.0029023145692776637, "phrase": "dbms"}, {"score": 0.002858952758523772, "phrase": "sql_views"}, {"score": 0.0027881294891497115, "phrase": "naive_implementation"}, {"score": 0.002719055901632759, "phrase": "commercial_dbms"}, {"score": 0.0025730425700096365, "phrase": "high_frequency"}, {"score": 0.0025473475682739784, "phrase": "measurement_updates"}, {"score": 0.002447101794397243, "phrase": "possible_optimizations"}, {"score": 0.002327310963701377, "phrase": "dramatic_run-time_improvement"}, {"score": 0.0021802872319258977, "phrase": "database_context"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Moving objects", " Data streams", " Sensor data", " Incremental evaluation", " Update propagation"], "paper_abstract": "Tracking uncooperative moving objects by means of radar is a complex task due to clutter and association problems in multi-target scenarios. An approach to solve this problem is probabilistic multiple hypothesis tracking (PMHT). This method combines classical track filtering with a likelihood ratio test for the estimation of the plot-to-track association. The basics of PMHT and similar algorithms have gained much attention recently. However, the efficient implementation of real world applications of this technique still represents a challenging task. Since a common requirement in this context is the reliable storage of track data in a database, an implementation of the tracker's calculation inside a database management system (DBMS) using SQL views is desirable. A naive implementation of PMHT using a commercial DBMS, however, usually leads to performance problems because of the high frequency of measurement updates. In this paper, we propose possible optimizations for solving these performance problems. Their usage leads to a dramatic run-time improvement in our sample case and makes the implementation of PMHT in a database context feasible. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient tracking of moving objects using a relational database", "paper_id": "WOS:000326991300015"}