{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "service_level_agreements"}, {"score": 0.004306205029641728, "phrase": "service-based_applications"}, {"score": 0.003569176320452192, "phrase": "potential_penalties"}, {"score": 0.0034283967296365606, "phrase": "sba"}, {"score": 0.0032492519841546682, "phrase": "proactive_approach"}, {"score": 0.0032059442984238664, "phrase": "sla-aware_sbas"}, {"score": 0.0031350397225314262, "phrase": "test_requirements"}, {"score": 0.0028667159745494933, "phrase": "four-valued_logic"}, {"score": 0.002644865209801606, "phrase": "test_criterion"}, {"score": 0.00259793885118959, "phrase": "modified_condition_decision_coverage"}, {"score": 0.0024953686545818587, "phrase": "cost-effective_set"}, {"score": 0.0023968397661819504, "phrase": "sla."}, {"score": 0.002251227801482381, "phrase": "specific_rules"}, {"score": 0.002221192647477371, "phrase": "non-feasible_test_requirements"}, {"score": 0.0021049977753042253, "phrase": "ehealth_case_study"}], "paper_keywords": ["Software testing", " service based applications", " service level agreements", " coverage criterion", " MCDC"], "paper_abstract": "Service level agreements (SLAs) are typically used to specify rules regarding the consumption of services that are agreed between the providers of the service-based applications (SBAs) and their consumers. An SLA includes a list of terms that contain the guarantees that must be fulfilled during the provisioning and consumption of the services. Since the violation of such guarantees may lead to the application of potential penalties, it is important to assure that the SBA behaves as expected. In this paper, we propose a proactive approach to test SLA-aware SBAs by means of identifying test requirements, which represent situations that are relevant to be tested. To address this issue, we define a four-valued logic that allows evaluating both the individual guarantee terms and their logical relationships. Grounded in this logic, we devise a test criterion based on the modified condition decision coverage (MCDC) in order to obtain a cost-effective set of test requirements from the structure of the SLA. Furthermore by analyzing the syntax and semantics of the agreement, we define specific rules to avoid non-feasible test requirements. The whole approach has been automated and applied over an eHealth case study.", "paper_title": "Coverage-Based Testing for Service Level Agreements", "paper_id": "WOS:000352789300011"}