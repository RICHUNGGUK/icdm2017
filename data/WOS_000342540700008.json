{"auto_keywords": [{"score": 0.049840457874709615, "phrase": "random_forest"}, {"score": 0.00481495049065317, "phrase": "imbalanced_big_data"}, {"score": 0.0047197594186799054, "phrase": "big_data_applications"}, {"score": 0.004661218550675473, "phrase": "main_focus"}, {"score": 0.004591922752626493, "phrase": "enormous_increment"}, {"score": 0.004569052789469628, "phrase": "data_generation"}, {"score": 0.004390128427914669, "phrase": "huge_amounts"}, {"score": 0.004281861060680164, "phrase": "data_mining_techniques"}, {"score": 0.004218181063178522, "phrase": "new_space_and_time_requirements"}, {"score": 0.004176252534490617, "phrase": "real-world_data_applications"}, {"score": 0.004134739042953291, "phrase": "class_distribution"}, {"score": 0.00400263757329054, "phrase": "main_interest"}, {"score": 0.0038266401248363345, "phrase": "class_imbalance_problem"}, {"score": 0.0037885886880740993, "phrase": "learning_process"}, {"score": 0.003760297688599612, "phrase": "standard_learning_techniques"}, {"score": 0.0035591620927676463, "phrase": "imbalanced_datasets"}, {"score": 0.0035325782439205675, "phrase": "big_data_scenario"}, {"score": 0.0033687487142539164, "phrase": "big_data"}, {"score": 0.003352029994336385, "phrase": "mapreduce"}, {"score": 0.003220533467925735, "phrase": "necessary_support"}, {"score": 0.00318052861304437, "phrase": "underrepresented_class"}, {"score": 0.003133176133652981, "phrase": "solid_basis"}, {"score": 0.003032976309530277, "phrase": "experimental_study"}, {"score": 0.0029580789738223624, "phrase": "diverse_algorithms"}, {"score": 0.002856310789109184, "phrase": "imbalanced_big_data_classification"}, {"score": 0.0027033975844114743, "phrase": "best_performing_method"}, {"score": 0.0025079529641763095, "phrase": "running_times"}, {"score": 0.0023975191459662615, "phrase": "slight_drop"}, {"score": 0.00237959104058464, "phrase": "accuracy_performance"}, {"score": 0.0022976789847480167, "phrase": "density_problem"}, {"score": 0.00224089851484905, "phrase": "imbalanced_data_point"}, {"score": 0.0021637502817054115, "phrase": "imbalanced_scenario"}, {"score": 0.0021368444454600093, "phrase": "standard_learning"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Big data", " Map Reduce", " Imbalanced dataset", " Sampling", " Cost-sensitive learning", " Random Forest"], "paper_abstract": "In this age, big data applications are increasingly becoming the main focus of attention because of the enormous increment of data generation and storage that has taken place in the last years. This situation becomes a challenge when huge amounts of data are processed to extract knowledge because the data mining techniques are not adapted to the new space and time requirements. Furthermore, real-world data applications usually present a class distribution where the samples that belong to one class, which is precisely the main interest, are hugely outnumbered by the samples of the other classes. This circumstance, known as the class imbalance problem, complicates the learning process as the standard learning techniques do not correctly address this situation. In this work, we analyse the performance of several techniques used to deal with imbalanced datasets in the big data scenario using the Random Forest classifier. Specifically, oversampling, undersampling and cost-sensitive learning have been adapted to big data using MapReduce so that these techniques are able to manage datasets as large as needed providing the necessary support to correctly identify the underrepresented class. The Random Forest classifier provides a solid basis for the comparison because of its performance, robustness and versatility. An experimental study is carried out to evaluate the performance of the diverse algorithms considered. The results obtained show that there is not an approach to imbalanced big data classification that outperforms the others for all the data considered when using Random Forest. Moreover, even for the same type of problem, the best performing method is dependent on the number of mappers selected to run the experiments. In most of the cases, when the number of splits is increased, an improvement in the running times can be observed, however, this progress in times is obtained at the expense of a slight drop in the accuracy performance obtained. This decrement in the performance is related to the lack of density problem, which is evaluated in this work from the imbalanced data point of view, as this issue degrades the performance of classifiers in the imbalanced scenario more severely than in standard learning. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "On the use of MapReduce for imbalanced big data using Random Forest", "paper_id": "WOS:000342540700008"}