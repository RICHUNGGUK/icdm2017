{"auto_keywords": [{"score": 0.04843603269514023, "phrase": "acet"}, {"score": 0.022616357370038722, "phrase": "wcet"}, {"score": 0.007702006541318735, "phrase": "standard_optimization_levels"}, {"score": 0.00481495049065317, "phrase": "pareto_optimal_compiler_optimization_sequences"}, {"score": 0.004613825044585923, "phrase": "code_size"}, {"score": 0.004542780650208743, "phrase": "growing_complexity"}, {"score": 0.004507667881645218, "phrase": "embedded_systems_software"}, {"score": 0.00447282529270722, "phrase": "high_code_quality"}, {"score": 0.004319322238010043, "phrase": "sophisticated_compilers"}, {"score": 0.004269329235934791, "phrase": "vast_spectrum"}, {"score": 0.003800026771283179, "phrase": "complex_interactions"}, {"score": 0.0036695284042874395, "phrase": "promising_sequence"}, {"score": 0.0036411406244705557, "phrase": "code_transformations"}, {"score": 0.0035711248264686415, "phrase": "compiler_developers"}, {"score": 0.0033559647822437298, "phrase": "previous_studies"}, {"score": 0.0032914145394036657, "phrase": "standard_levels"}, {"score": 0.003253279945540651, "phrase": "optimization_potential"}, {"score": 0.003178326919668771, "phrase": "performance_degradation"}, {"score": 0.003069112841132911, "phrase": "first_adaptive_worst-case_execution_time"}, {"score": 0.0029867619862229853, "phrase": "automatic_search"}, {"score": 0.002963640433319524, "phrase": "compiler_optimization_sequences"}, {"score": 0.0029292922955739963, "phrase": "highly_optimized_code"}, {"score": 0.002884111441153185, "phrase": "objective_functions"}, {"score": 0.002742017872865778, "phrase": "crucial_parameter"}, {"score": 0.002720785798036066, "phrase": "real-time_systems"}, {"score": 0.0026788122684116224, "phrase": "suitable_trade-offs"}, {"score": 0.0026272523687965615, "phrase": "stochastic_evolutionary_multi-objective_algorithms"}, {"score": 0.0026069394779927335, "phrase": "pareto"}, {"score": 0.0023746766301040974, "phrase": "statistical_performance_assessments"}, {"score": 0.0022227806435520764, "phrase": "real-life_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["real-time", " WCET", " compiler", " optimization", " multi-objective", " Pareto optimal"], "paper_abstract": "With the growing complexity of embedded systems software, high code quality can only be achieved using a compiler. Sophisticated compilers provide a vast spectrum of various optimizations to improve code aggressively w.r.t. different objective functions, e. g. average-case execution time (ACET) or code size. Owing to the complex interactions between the optimizations, the choice for a promising sequence of code transformations is not trivial. Compiler developers address this problem by proposing standard optimization levels, e. g. O3 or Os. However, previous studies have shown that these standard levels often miss optimization potential or might even result in performance degradation. In this paper, we propose the first adaptive worst-case execution time (WCET)-aware compiler framework for an automatic search of compiler optimization sequences that yield highly optimized code. Besides the objective functions ACET and code size, we consider the WCET which is a crucial parameter for real-time systems. To find suitable trade-offs between these objectives, stochastic evolutionary multi-objective algorithms identifying Pareto optimal solutions for the objectives < WCET, ACET > and < WCET, code size > are exploited. A comparison based on statistical performance assessments is performed that helps to determine the most suitable multi-objective optimizer. The effectiveness of our approach is demonstrated on real-life benchmarks showing that standard optimization levels can be significantly outperformed. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "Approximating Pareto optimal compiler optimization sequences-a trade-off between WCET, ACET and code size", "paper_id": "WOS:000296606500004"}