{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "domain-specific_language_development"}, {"score": 0.004605434064238641, "phrase": "grammar_induction"}, {"score": 0.004489810932879285, "phrase": "extensive_application"}, {"score": 0.004294381488413906, "phrase": "computational_biology"}, {"score": 0.004213240903095234, "phrase": "speech_recognition"}, {"score": 0.004055511503825102, "phrase": "programming_language"}, {"score": 0.0040042529959108605, "phrase": "software_engineering_domains"}, {"score": 0.00378145978325955, "phrase": "new_application_area"}, {"score": 0.0037336520904376687, "phrase": "grammar_inference"}, {"score": 0.0034154440860550564, "phrase": "programming_language_design"}, {"score": 0.0033084729942065142, "phrase": "second_application"}, {"score": 0.0032253056091816465, "phrase": "renovation_tools"}, {"score": 0.0031845067058084583, "phrase": "legacy_software_systems"}, {"score": 0.0030071857666598193, "phrase": "context-free_grammars"}, {"score": 0.002912963877144772, "phrase": "domain-specific_languages"}, {"score": 0.0028216858159564808, "phrase": "genetic-programming_based_cfg_inference_system"}, {"score": 0.0026986685585382347, "phrase": "inference_capabilities"}, {"score": 0.002664513608074113, "phrase": "geninc"}, {"score": 0.0021319959284827896, "phrase": "comprehensive_suite"}, {"score": 0.0021049977753042253, "phrase": "grammar_metrics"}], "paper_keywords": [""], "paper_abstract": "While grammar inference (or grammar induction) has found extensive application in the areas of robotics, computational biology, and speech recognition, its application to problems in programming language and software engineering domains has been limited. We have found a new application area for grammar inference which intends to make domain-specific language development easier for domain experts not well versed in programming language design, and finds a second application in construction of renovation tools for legacy software systems. As a continuation of our previous efforts to infer context-free grammars (CFGs) for domain-specific languages which previously involved a genetic-programming based CFG inference system, we discuss extensions to the inference capabilities of GenInc, an incremental learning algorithm for inferring CFGs. We show that these extensions enable GenInc to infer more comprehensive grammars, discuss the results of applying GenInc to various domain-specific languages and evaluate the results using a comprehensive suite of grammar metrics.", "paper_title": "An unsupervised incremental learning algorithm for domain-specific language development", "paper_id": "WOS:000258905000004"}