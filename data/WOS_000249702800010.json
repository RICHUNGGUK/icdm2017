{"auto_keywords": [{"score": 0.030156442529772363, "phrase": "theory"}, {"score": 0.00481495049065317, "phrase": "ic-scheduling_theory"}, {"score": 0.00476527679607755, "phrase": "expansive_and_reductive_dags"}, {"score": 0.004651346011959237, "phrase": "earlier_work"}, {"score": 0.004540126719762935, "phrase": "ic-_scheduling_theory"}, {"score": 0.004340553321613485, "phrase": "directed_acyclic_graphs"}, {"score": 0.00425141240073214, "phrase": "internet-_based_computing"}, {"score": 0.004008624230034271, "phrase": "maximum_possible_rate"}, {"score": 0.003953534569134559, "phrase": "dual_aim"}, {"score": 0.0038857317730249114, "phrase": "remote_clients'_computational_resources"}, {"score": 0.0037535816047183845, "phrase": "available_client"}, {"score": 0.0036384794303356413, "phrase": "computation's_stalling"}, {"score": 0.0035884582625234297, "phrase": "eligible_tasks"}, {"score": 0.0033484464719654105, "phrase": "bipartite_building_block_dags"}, {"score": 0.003290986600659723, "phrase": "dag_decomposition"}, {"score": 0.0032569835069392924, "phrase": "basic_tool"}, {"score": 0.0030390745780621503, "phrase": "complex_dag's_building_blocks"}, {"score": 0.0027296938800704484, "phrase": "algorithmic_process"}, {"score": 0.002692132776447632, "phrase": "optimal_schedules"}, {"score": 0.0026643006135750025, "phrase": "expanded_repertoire"}, {"score": 0.0022404996930993413, "phrase": "algorithmic_shortcuts"}, {"score": 0.0021716944668428865, "phrase": "optimal_schedule"}, {"score": 0.0021143214682264274, "phrase": "dag"}], "paper_keywords": ["IC-Scheduling Theory", " Internet-based computing", " grid computing", " global computing", " scheduling DAGs", " theory"], "paper_abstract": "Earlier work has developed the underpinnings of the IC- Scheduling Theory, a framework for scheduling computations having intertask dependencies - modeled via directed acyclic graphs ( DAGs) - for Internet- based computing. The goal of the schedules produced is to render tasks eligible for execution at the maximum possible rate, with the dual aim of 1) utilizing remote clients' computational resources well by always having work to allocate to an available client and 2) lessening the likelihood of a computation's stalling for lack of eligible tasks. The DAGs handled by the theory thus far are those that can be decomposed into a given collection of bipartite building block DAGs via the operation of DAG decomposition. A basic tool in constructing schedules is a relation., which allows one to '' prioritize '' the scheduling of a complex DAG's building blocks. The current paper extends the IC- Scheduling Theory in two ways: by expanding significantly the repertoire of DAGs that the Theory can schedule optimally and by allowing one sometimes to shortcut the algorithmic process required to find optimal schedules. The expanded repertoire now allows the theory to schedule optimally, among other DAGs, a large range of DAGs that are either '' expansive,'' in the sense that they grow outward from their sources, or \" reductive,\" in the sense that they grow inward toward their sinks. The algorithmic shortcuts allow one to '' read off '' an optimal schedule for a DAG from a given optimal schedule for the DAG's dual, which is obtained by reversing all arcs ( thereby exchanging the roles of sources and sinks).", "paper_title": "Advances in IC-Scheduling Theory: Scheduling expansive and reductive DAGs and scheduling DAGs via duality", "paper_id": "WOS:000249702800010"}