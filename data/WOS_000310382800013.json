{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_applications"}, {"score": 0.0385002243860364, "phrase": "network_stress"}, {"score": 0.03496401466222773, "phrase": "distributed_monitors"}, {"score": 0.025884265837179357, "phrase": "smon"}, {"score": 0.004673290248999786, "phrase": "service_quality"}, {"score": 0.004604023526673226, "phrase": "networked_application"}, {"score": 0.004490842671590769, "phrase": "streaming_session"}, {"score": 0.004424268136268051, "phrase": "distributed_monitoring_servers"}, {"score": 0.004315487055548749, "phrase": "application-specific_performance_metrics"}, {"score": 0.0041469500929423595, "phrase": "previous_work"}, {"score": 0.0040048667115255, "phrase": "distributed_aggregation_tree"}, {"score": 0.0036980501827538455, "phrase": "high_monitoring_delay"}, {"score": 0.003500812175550438, "phrase": "highly_scalable_monitoring_network"}, {"score": 0.003281186608301359, "phrase": "application_performance"}, {"score": 0.0031845067058084583, "phrase": "client_applications"}, {"score": 0.0030296432347510687, "phrase": "client_overlay"}, {"score": 0.0028253682745674608, "phrase": "proxy_overlay"}, {"score": 0.0026745503978347143, "phrase": "monitoring_delay"}, {"score": 0.002570981461388505, "phrase": "np"}, {"score": 0.0023727863021828547, "phrase": "network_diameter"}, {"score": 0.002349228457383314, "phrase": "real_time"}, {"score": 0.0023143284925318916, "phrase": "distributed_manner"}, {"score": 0.0022573076362326135, "phrase": "actual_experimental_measurements"}, {"score": 0.002158179521369965, "phrase": "low_monitoring_delay"}, {"score": 0.0021049977753042253, "phrase": "protocol_overhead"}], "paper_keywords": ["Distributed protocol", " real-time network monitoring", " peer-to-peer network", " proxies"], "paper_abstract": "In order to assess service quality of a networked application (such as a streaming session), distributed monitoring servers need to continuously collect application-specific performance metrics in real time. Much of the previous work to address this is to use distributed aggregation tree (DAT) rooted at each monitor. However, this approach often leads to high monitoring delay and network stress. In this paper, we study a highly scalable monitoring network for distributed applications. In the network, there are distributed monitors collecting application performance in two steps: first, client applications report their performance to some proxies by means of a client overlay, and then the proxies report the performance to the distributed monitors using another proxy overlay. We first formulate the problem to construct overlays minimizing monitoring delay. The problem is shown to be NP-hard. Then, we present a simple, efficient, and scalable monitoring algorithm called SMon, which continuously reduces network diameter in real time in a distributed manner. Through simulations and actual experimental measurements with implementation, we show that SMon achieves low monitoring delay, network stress, and protocol overhead for distributed applications.", "paper_title": "Scalable Real-Time Monitoring for Distributed Applications", "paper_id": "WOS:000310382800013"}