{"auto_keywords": [{"score": 0.049435104149514145, "phrase": "bloom_filter"}, {"score": 0.00481495049065317, "phrase": "false_negative_problem_of"}, {"score": 0.004793262672207352, "phrase": "counting_bloom_filter"}, {"score": 0.004581660953729745, "phrase": "data_set"}, {"score": 0.0045200127552893704, "phrase": "approximate_membership_queries"}, {"score": 0.003983016985197904, "phrase": "well-behaved_operations"}, {"score": 0.00389404213807752, "phrase": "mainstream_variants"}, {"score": 0.0037052054802048707, "phrase": "false_negatives"}, {"score": 0.0035095935622207956, "phrase": "undetectable_incorrect_deletion"}, {"score": 0.0034780071331554003, "phrase": "false_positive_items"}, {"score": 0.0034467039994594065, "phrase": "detectable_incorrect_deletion"}, {"score": 0.003415681637907093, "phrase": "multiaddress_items"}, {"score": 0.0029959082125682918, "phrase": "potential_false_negatives"}, {"score": 0.0028634235895823594, "phrase": "novel_bloom_filter_scheme"}, {"score": 0.0025572160146590623, "phrase": "mathematical_analysis"}, {"score": 0.0025341792091114184, "phrase": "comprehensive_experiments"}, {"score": 0.0024220634963019114, "phrase": "exposed_false_negatives"}, {"score": 0.00233594452829104, "phrase": "false_positives"}, {"score": 0.00222249726328354, "phrase": "first_work"}, {"score": 0.002172769701516276, "phrase": "bloom"}, {"score": 0.0021241414408077895, "phrase": "standard_usages"}, {"score": 0.0021049977753042253, "phrase": "item_insertion"}], "paper_keywords": ["Bloom filter", " false negative", " multichoice counting Bloom filter"], "paper_abstract": "Bloom filter is effective, space-efficient data structure for concisely representing a data set and supporting approximate membership queries. Traditionally, researchers often believe that it is possible that a Bloom filter returns a false positive, but it will never return a false negative under well-behaved operations. By investigating the mainstream variants, however, we observe that a Bloom filter does return false negatives in many scenarios. In this work, we show that the undetectable incorrect deletion of false positive items and detectable incorrect deletion of multiaddress items are two general causes of false negative in a Bloom filter. We then measure the potential and exposed false negatives theoretically and practically. Inspired by the fact that the potential false negatives are usually not fully exposed, we propose a novel Bloom filter scheme, which increases the ratio of bits set to a value larger than one without decreasing the ratio of bits set to zero. Mathematical analysis and comprehensive experiments show that this design can reduce the number of exposed false negatives as well as decrease the likelihood of false positives. To the best of our knowledge, this is the first work dealing with both the false positive and false negative problems of Bloom filter systematically when supporting standard usages of item insertion, query, and deletion operations.", "paper_title": "False Negative Problem of Counting Bloom Filter", "paper_id": "WOS:000275652400004"}