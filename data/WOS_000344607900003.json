{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "task_group"}, {"score": 0.04476477802864247, "phrase": "batch_deployment"}, {"score": 0.039541503396406254, "phrase": "economic_grid"}, {"score": 0.0047325299988677134, "phrase": "grid"}, {"score": 0.004621447740470602, "phrase": "performance_data"}, {"score": 0.004487989502479992, "phrase": "fine-grain_tasks"}, {"score": 0.0039218440805789965, "phrase": "designated_resource"}, {"score": 0.0038309141193444015, "phrase": "interconnecting_network"}, {"score": 0.0032315723330399375, "phrase": "task_success_rate"}, {"score": 0.0029075757820516634, "phrase": "task-resource_mapping"}, {"score": 0.0028736379396305596, "phrase": "advance_qos_planning"}, {"score": 0.0027741761880779535, "phrase": "qos_requirement"}, {"score": 0.002693919110230191, "phrase": "historical_performance_data"}, {"score": 0.002646880721119838, "phrase": "application_tasks"}, {"score": 0.002600661525224505, "phrase": "genetic_algorithm"}, {"score": 0.0024236964502593254, "phrase": "task_groups"}, {"score": 0.0023953929817357882, "phrase": "practical_experiments"}, {"score": 0.0023124457559811087, "phrase": "proposed_method"}, {"score": 0.0021805201234139475, "phrase": "cloud_environment"}, {"score": 0.0021049977753042253, "phrase": "real-time_tasks"}], "paper_keywords": ["Grid computing", " Task group deployment", " Performance data", " Advance QoS planning", " Task-resource mapping"], "paper_abstract": "Overhead of executing fine-grain tasks on computational grids led to task group or batch deployment in which a batch is resized according to the characteristics of the tasks, designated resource, and the interconnecting network. An economic grid demands an application to be processed within the given budget and deadline, referred to as the quality of service (QoS) requirements. In this paper, we increase the task success rate in an economic grid by optimally mapping the tasks to the resources prior to the batch deployment. The task-resource mapping (Advance QoS Planning) is decided based on QoS requirement and by mining the historical performance data of the application tasks using a genetic algorithm. The mapping is then used to assist in creating the task groups. Practical experiments are conducted to validate the proposed method and suggestions are given to implement our method in a cloud environment as well as to process real-time tasks.", "paper_title": "QoS-based Task Group Deployment on Grid by Learning the Performance Data", "paper_id": "WOS:000344607900003"}