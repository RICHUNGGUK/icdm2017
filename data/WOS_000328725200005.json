{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "gpu"}, {"score": 0.00475307771901738, "phrase": "gibbs"}, {"score": 0.00471193241675062, "phrase": "monte_carlo"}, {"score": 0.004651178322557479, "phrase": "lennard-jonesium"}, {"score": 0.004492950096237056, "phrase": "canonical_and_gibbs_ensemble_monte_carlo_simulations"}, {"score": 0.004302680891412643, "phrase": "pair-wise_energy_calculations"}, {"score": 0.00415625929636759, "phrase": "computational_effort"}, {"score": 0.004049709080817396, "phrase": "energetic_decomposition_algorithm"}, {"score": 0.003997458586709491, "phrase": "energetic_decomposition"}, {"score": 0.003911862375084159, "phrase": "traditional_cpu-bound_codes"}, {"score": 0.003713821097731715, "phrase": "cpu."}, {"score": 0.003634262647873338, "phrase": "cpu_and_cpu_codes"}, {"score": 0.0034953361767153285, "phrase": "gpu_combinations"}, {"score": 0.0032331613500559764, "phrase": "gibbs_ensemble_codes"}, {"score": 0.0029776614744264724, "phrase": "optimized_serial_cpu-bound_code"}, {"score": 0.0029012378668247397, "phrase": "memory_transfers"}, {"score": 0.0028762004595878714, "phrase": "system_ram"}, {"score": 0.002802373595203129, "phrase": "cpu_code"}, {"score": 0.0027304365438083874, "phrase": "gpu_code"}, {"score": 0.0026488343783448273, "phrase": "critical_temperature_t-c"}, {"score": 0.0024393978073660757, "phrase": "lennard-jones_potential"}, {"score": 0.0023257824499250653, "phrase": "exact_agreement"}, {"score": 0.0023056996845692355, "phrase": "prior_mixed_field_finite-size_scaling_calculations"}, {"score": 0.0022857899334246946, "phrase": "j.j._potoff"}, {"score": 0.002266051712795851, "phrase": "a.z._panagiotopoulos"}, {"score": 0.0022464835515931592, "phrase": "j._chem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Monte Carlo", " Canonical ensemble", " Gibbs ensemble", " GPU", " CUDA"], "paper_abstract": "This work describes an implementation of canonical and Gibbs ensemble Monte Carlo simulations on graphics processing units (GPUs). The pair-wise energy calculations, which consume the majority of the computational effort, are parallelized using the energetic decomposition algorithm. While energetic decomposition is relatively inefficient for traditional CPU-bound codes, the algorithm is ideally suited to the architecture of the CPU. The performance of the CPU and CPU codes are assessed for a variety of CPU and GPU combinations for systems containing between 512 and 131,072 particles. For a system of 131,072 particles, the CPU-enabled canonical and Gibbs ensemble codes were 10.3 and 29.1 times faster (GTX 480 GPU vs. i5-2500K CPU), respectively, than an optimized serial CPU-bound code. Due to overhead from memory transfers from system RAM to the GPU, the CPU code was slightly faster than the GPU code for simulations containing less than 600 particles. The critical temperature T-c* = 1.312(2) and density rho(c)* = 0.316(3) were determined for the tail corrected Lennard-Jones potential from simulations of 10,000 particle systems, and found to be in exact agreement with prior mixed field finite-size scaling calculations [J.J. Potoff, A.Z. Panagiotopoulos, J. Chem. Phys. 109 (1998) 10914]. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "GPU-accelerated Gibbs ensemble Monte Carlo simulations of Lennard-Jonesium", "paper_id": "WOS:000328725200005"}