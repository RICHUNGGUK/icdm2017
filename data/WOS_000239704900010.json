{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "biologically_inspired_computing"}, {"score": 0.004202741104973709, "phrase": "natural_processes"}, {"score": 0.004072851768196397, "phrase": "useful_results"}, {"score": 0.00386519448487341, "phrase": "neural_networks"}, {"score": 0.0035920758080335655, "phrase": "mammalian_brains"}, {"score": 0.003480993634130542, "phrase": "complex_patterns"}, {"score": 0.0034088473318056537, "phrase": "simulated_annealing"}, {"score": 0.0032012284065895537, "phrase": "low-energy_crystalline_states"}, {"score": 0.003102195256794215, "phrase": "difficult_minimization_problems"}, {"score": 0.0030062165552187086, "phrase": "genetic_algorithms"}, {"score": 0.00256895975568914, "phrase": "large_search_spaces"}, {"score": 0.002362320344521919, "phrase": "computing_mainstream"}, {"score": 0.0021496083700137305, "phrase": "wide_range"}, {"score": 0.0021049977753042253, "phrase": "real-world_problems"}], "paper_keywords": [""], "paper_abstract": "Biologically inspired computing arose around 20 years ago with the development of algorithms that simulate various aspects of natural processes to calculate useful results. For instance, neural networks imitate some aspects of learning in mammalian brains to learn complex patterns; simulated annealing simulates how metals cool into low-energy crystalline states to solve difficult minimization problems; and genetic algorithms use abstractions of mechanisms from evolution (selection, crossover, mutation) to traverse large search spaces. All have found their way into the computing mainstream, and all are regularly used in a wide range of real-world problems.", "paper_title": "Ant colony algorithms - Solving optimization problems", "paper_id": "WOS:000239704900010"}