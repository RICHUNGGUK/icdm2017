{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "mptp"}, {"score": 0.007149144456700323, "phrase": "tptp_syntax"}, {"score": 0.00570347124287921, "phrase": "mizar"}, {"score": 0.005655010619140343, "phrase": "mizar-to-tptp_exporter"}, {"score": 0.0046632033374901715, "phrase": "second_version"}, {"score": 0.0044873778175404475, "phrase": "mptp_project"}, {"score": 0.004439719483780046, "phrase": "large_formal_mizar_mathematical_library"}, {"score": 0.004383194196518521, "phrase": "current_first-order_automated_theorem_provers"}, {"score": 0.0041287394089001405, "phrase": "atp_methods"}, {"score": 0.004050116768809519, "phrase": "generic_extended_tptp_syntax"}, {"score": 0.004024242000713225, "phrase": "term-dependent_sorts"}, {"score": 0.0038230844545071303, "phrase": "standard_tptp_syntax"}, {"score": 0.0037582832419296762, "phrase": "abstract_terms"}, {"score": 0.003742254645795432, "phrase": "full_mizar_proofs"}, {"score": 0.003670964617279373, "phrase": "extended_tptp_syntax"}, {"score": 0.0036241912752875307, "phrase": "atp_experiments"}, {"score": 0.0035627492415494216, "phrase": "consistent_handling"}, {"score": 0.0035475516032940626, "phrase": "proof-local_constants"}, {"score": 0.0035324185638637685, "phrase": "proof-local_lemmas"}, {"score": 0.003479957715785264, "phrase": "mizar_proof"}, {"score": 0.003450329424861292, "phrase": "tptp_formalism"}, {"score": 0.003413647327963707, "phrase": "second-order_mizar_schemes"}, {"score": 0.003263779352704953, "phrase": "proof_context"}, {"score": 0.003087284296403192, "phrase": "problem-creating_tools"}, {"score": 0.0030219639975956553, "phrase": "natively_a_detailed_xml_format"}, {"score": 0.002926558126513965, "phrase": "xml_tree"}, {"score": 0.0028892420835187156, "phrase": "problem_creation"}, {"score": 0.0028341696521761712, "phrase": "prolog"}, {"score": 0.00273294530632092, "phrase": "largest_remaining_issue"}, {"score": 0.002698091306945448, "phrase": "mizar_arithmetical_evaluations"}, {"score": 0.0026240876477260093, "phrase": "hard_mml_problems"}, {"score": 0.0025961668369038054, "phrase": "machine_learning"}, {"score": 0.0025521085778978042, "phrase": "nonarithmetical_problems"}, {"score": 0.0024874156497091994, "phrase": "atp_systems"}, {"score": 0.0024609454677737338, "phrase": "'mizar_deconstruction"}, {"score": 0.002373031020610161, "phrase": "fully_autonomous_mode"}, {"score": 0.0023227875748290257, "phrase": "machine-learning_system"}, {"score": 0.0023079225317714815, "phrase": "previous_proofs"}, {"score": 0.0022638944685958386, "phrase": "newly_discovered_proofs"}, {"score": 0.0022397975776684183, "phrase": "mml_originals"}, {"score": 0.0021970662671331547, "phrase": "mml_refactoring"}, {"score": 0.0021690316155452503, "phrase": "even_a_simple_inductive_or_deductive_system"}, {"score": 0.002123098193619352, "phrase": "mml_authors"}, {"score": 0.0021049977753042253, "phrase": "general_discovery"}], "paper_keywords": ["MPTP", " Mizar", " MML", " ATP", " MPA", " re-proving", " proof discovery"], "paper_abstract": "This paper describes the second version of the Mizar Problems for Theorem Proving (MPTP) system and first experimental results obtained with it. The goal of the MPTP project is to make the large formal Mizar Mathematical Library (MML) available to current first-order automated theorem provers (ATPs) (and vice versa) and to boost the development of domain-based, knowledge-based, and generally AI-based ATP methods. This version of MPTP switches to a generic extended TPTP syntax that adds term-dependent sorts and abstract (Fraenkel) terms to the TPTP syntax. We describe these extensions and explain how they are transformed by MPTP to standard TPTP syntax using relativization of sorts and deanonymization of abstract terms. Full Mizar proofs are now exported and also encoded in the extended TPTP syntax, allowing a number of ATP experiments. This covers, for example, consistent handling of proof-local constants and proof-local lemmas and translating of a number of Mizar proof constructs into the TPTP formalism. The proofs using second-order Mizar schemes are now handled by the system, too, by remembering (and, if necessary, abstracting from the proof context) the first-order instances that were actually used. These features necessitated changes in Mizar, in the Mizar-to-TPTP exporter, and in the problem-creating tools. Mizar has been reimplemented to produce and use natively a detailed XML format, suitable for communication with other tools. The Mizar-to-TPTP exporter is now just a XSLT stylesheet translating the XML tree to the TPTP syntax. The problem creation and other MPTP processing tasks are now implemented in about 1,300 lines of Prolog. All these changes have made MPTP more generic, more complete, and more correct. The largest remaining issue is the handling of the Mizar arithmetical evaluations. We describe several initial ATP experiments, both on the easy and on the hard MML problems, sometimes assisted by machine learning. It is shown that on the nonarithmetical problems, countersatisfiability (completions) is no longer detected by the ATP systems, suggesting that the 'Mizar deconstruction' done by MPTP is in this case already complete. About every fifth nonarithmetical theorem is proved in a fully autonomous mode, in which the premises are selected by a machine-learning system trained on previous proofs. In 329 of these cases, the newly discovered proofs are shorter than the MML originals and therefore are likely to be used for MML refactoring. This situation suggests that even a simple inductive or deductive system trained on formal mathematics can be sometimes smarter than MML authors and usable for general discovery in mathematics.", "paper_title": "MPTP 0.2: Design, implementation, and initial experiments", "paper_id": "WOS:000243607600003"}