{"auto_keywords": [{"score": 0.04955461236891121, "phrase": "design_patterns"}, {"score": 0.047510470298773616, "phrase": "design_motifs"}, {"score": 0.0392651775812754, "phrase": "source_code"}, {"score": 0.03022084635258387, "phrase": "abstract_model"}, {"score": 0.00481495049065317, "phrase": "design_pattern_identification"}, {"score": 0.004658426838467567, "phrase": "object-oriented_programming"}, {"score": 0.004506968388996092, "phrase": "elegant_solutions"}, {"score": 0.004457579615095599, "phrase": "recurrent_design_problems"}, {"score": 0.00428892403807229, "phrase": "software_systems"}, {"score": 0.004172360444377281, "phrase": "system_maintenance"}, {"score": 0.003309877074892399, "phrase": "similar_to_design_motifs"}, {"score": 0.0030135741897058844, "phrase": "demima"}, {"score": 0.002758907973783665, "phrase": "binary_class_relationships"}, {"score": 0.002511803988580901, "phrase": "five_open-source_systems"}, {"score": 0.0022741894748181243, "phrase": "explanation-based_constraint_programming"}, {"score": 0.0021879624017959493, "phrase": "five_systems"}], "paper_keywords": ["maintenance traceability", " design patterns", " interclass relationships"], "paper_abstract": "Design patterns are important in object-oriented programming because they offer design motifs, elegant solutions to recurrent design problems, which improve the quality of software systems. Design motifs facilitate system maintenance by helping maintainers to understand design and implementation. However, after implementation, design motifs are spread throughout the source code and are thus not directly available to maintainers. We present DeMIMA, an approach to semiautomatically identify microarchitectures that are similar to design motifs in source code and to ensure the traceability of these microarchitectures between implementation and design. DeMIMA consists of three layers: two layers to recover an abstract model of the source code, including binary class relationships, and a third layer to identify design patterns in the abstract model. We apply DeMIMA to five open-source systems and, on average, we observe 34 percent precision for the 12 design motifs considered. Through the use of explanation-based constraint programming, DeMIMA ensures 100 percent recall on the five systems. We also apply DeMIMA on 33 industrial components.", "paper_title": "DeMIMA: A multilayered approach for design pattern identification", "paper_id": "WOS:000259456600007"}