{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hubbard_model"}, {"score": 0.004714023408114857, "phrase": "graphics_processing_units"}, {"score": 0.004330941610682453, "phrase": "exact_diagonalization_method"}, {"score": 0.004195418010131832, "phrase": "graphics_processing_unit"}, {"score": 0.003773449694108617, "phrase": "sequential_cpu_code"}, {"score": 0.0036167509502276294, "phrase": "lanczos_algorithm"}, {"score": 0.003466536738232506, "phrase": "ground_state_energy"}, {"score": 0.002833689453299307, "phrase": "one-dimensional_case"}, {"score": 0.002603012037901889, "phrase": "single_and_double_precision_arithmetic"}, {"score": 0.0024423826953133844, "phrase": "two-dimensional_case"}, {"score": 0.002365815362517737, "phrase": "corresponding_speedups"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Hubbard model", " Exact diagonalization", " GPU", " CUDA"], "paper_abstract": "We solve the Hubbard model with the exact diagonalization method on a graphics processing unit (CPU). We benchmark our CPU program against a sequential CPU code by using the Lanczos algorithm to solve the ground state energy in two cases: a one-dimensional ring and a two-dimensional square lattice. In the one-dimensional case, we obtain speedups of over 100 and 60 in single and double precision arithmetic, respectively. In the two-dimensional case, the corresponding speedups are over 110 and 70. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Exact diagonalization of the Hubbard model on graphics processing units", "paper_id": "WOS:000306824200006"}