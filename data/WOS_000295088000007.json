{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_selection"}, {"score": 0.028653751718436548, "phrase": "least_squares"}, {"score": 0.004769182299692333, "phrase": "primal_svm."}, {"score": 0.004634459424542272, "phrase": "nonsmooth_optimization_methods"}, {"score": 0.004568525347438891, "phrase": "model_hyperparameters"}, {"score": 0.004525088883501587, "phrase": "primal_svm_models"}, {"score": 0.004397230847865867, "phrase": "common_grid_search"}, {"score": 0.004034841146538891, "phrase": "data_points"}, {"score": 0.003939565240409143, "phrase": "linear-time_primal_svm_algorithms"}, {"score": 0.003702206069379459, "phrase": "primal_variables"}, {"score": 0.003632080001489739, "phrase": "dual_variables"}, {"score": 0.0033969001271637964, "phrase": "existing_svm_solvers"}, {"score": 0.003348513474852869, "phrase": "prior_methods"}, {"score": 0.0033166379485150507, "phrase": "gradient_descent"}, {"score": 0.0032850648549389025, "phrase": "hyperparameters_space"}, {"score": 0.003161740194257218, "phrase": "primal_space"}, {"score": 0.003072285184441679, "phrase": "kernel_matrix"}, {"score": 0.0029996699429582835, "phrase": "proposed_explicit"}, {"score": 0.0029711052657054463, "phrase": "bilevel_programming"}, {"score": 0.002778604641920052, "phrase": "original_cross-validation_problem"}, {"score": 0.002648768009464535, "phrase": "simple_constraints"}, {"score": 0.002598543802992702, "phrase": "parameter_space"}, {"score": 0.0025737890313763407, "phrase": "computational_results"}, {"score": 0.002537097217899195, "phrase": "support_vector_regression_problems"}, {"score": 0.0023613185213421173, "phrase": "computational_time"}, {"score": 0.0022509365210787993, "phrase": "differentiable_loss_functions"}, {"score": 0.0022294857939412073, "phrase": "regularization_functions"}, {"score": 0.002187194307878705, "phrase": "implicit_and_explicit_algorithms"}, {"score": 0.0021560018573288666, "phrase": "powerful_new_approaches"}, {"score": 0.0021252533072727707, "phrase": "large_bilevel_programs"}, {"score": 0.0021049977753042253, "phrase": "nonsmooth_loss_functions"}], "paper_keywords": ["Model selection", " Cross-validation", " Nonconvex optimization", " Bilevel programming", " Support vector machines"], "paper_abstract": "This paper introduces two types of nonsmooth optimization methods for selecting model hyperparameters in primal SVM models based on cross-validation. Unlike common grid search approaches for model selection, these approaches are scalable both in the number of hyperparameters and number of data points. Taking inspiration from linear-time primal SVM algorithms, scalability in model selection is achieved by directly working with the primal variables without introducing any dual variables. The proposed implicit primal gradient descent (ImpGrad) method can utilize existing SVM solvers. Unlike prior methods for gradient descent in hyperparameters space, all work is done in the primal space so no inversion of the kernel matrix is required. The proposed explicit penalized bilevel programming (PBP) approach optimizes both the hyperparameters and parameters simultaneously. It solves the original cross-validation problem by solving a series of least squares regression problems with simple constraints in both the hyperparameter and parameter space. Computational results on least squares support vector regression problems with multiple hyperparameters establish that both the implicit and explicit methods perform quite well in terms of generalization and computational time. These methods are directly applicable to other learning tasks with differentiable loss functions and regularization functions. Both the implicit and explicit algorithms investigated represent powerful new approaches to solving large bilevel programs involving nonsmooth loss functions.", "paper_title": "Model selection for primal SVM", "paper_id": "WOS:000295088000007"}