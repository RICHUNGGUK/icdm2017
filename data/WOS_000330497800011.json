{"auto_keywords": [{"score": 0.0490692031182167, "phrase": "heterogeneous_systems"}, {"score": 0.00481495049065317, "phrase": "scheduling_tasks"}, {"score": 0.004763895422211728, "phrase": "availability_constraint"}, {"score": 0.004638602678192715, "phrase": "efficient_resource_management_mechanism"}, {"score": 0.00451659023910662, "phrase": "heterogeneous_distributed_system"}, {"score": 0.004444921827311577, "phrase": "available_resources"}, {"score": 0.004327981760540394, "phrase": "appropriate_subset"}, {"score": 0.004038076978795421, "phrase": "selected_resources"}, {"score": 0.003973971215091989, "phrase": "key_component"}, {"score": 0.0038079800344575578, "phrase": "makespan"}, {"score": 0.0037474693720823643, "phrase": "principal_concern"}, {"score": 0.0034407781868385423, "phrase": "cloud_computing"}, {"score": 0.00335016692413066, "phrase": "service_provider"}, {"score": 0.0030758904011907533, "phrase": "hybrid_heuristic-ant_colony_optimization"}, {"score": 0.0029630461161780203, "phrase": "good_trade-off"}, {"score": 0.002869613770219469, "phrase": "heterogeneous_distributed_systems"}, {"score": 0.0028391271282216758, "phrase": "multiclass_applications"}, {"score": 0.0026205405415623525, "phrase": "initial_scheduling_decisions"}, {"score": 0.002431699464104896, "phrase": "initial_schedules"}, {"score": 0.0023802825369325354, "phrase": "first_component"}, {"score": 0.0023424328921363585, "phrase": "experiment_results"}, {"score": 0.0021049977753042253, "phrase": "multiclass_tasks"}], "paper_keywords": ["Heterogeneous systems", " Task scheduling", " QoS scheduling", " Availability", " Optimization"], "paper_abstract": "An efficient resource management mechanism is important in a heterogeneous distributed system to discover available resources, to allocate an appropriate subset of resources to applications, and to map data or tasks onto selected resources. The key component, task scheduling, draws our attention. Makespan is the principal concern of many existing researches. But, other QoS requirements are also important in more and more realistic applications. For example, Cloud Computing is expected that the service provider is reliable, robust, or highly available. In this study, we develop Hybrid Heuristic-Ant Colony Optimization (H2ACO) which makes a good trade-off between availability and makespans for heterogeneous distributed systems running multiclass applications. H2ACO comprises two key components: (1) an ant optimization algorithm which makes initial scheduling decisions; and (2) an availability-aware scheduling mechanism which optimizes initial schedules offered by the first component. The experiment results indicate that compared with two existing solutions (PSO and SSAC), H2ACO significantly improves the availability and performance of multiclass tasks running in heterogeneous systems.", "paper_title": "H2ACO: An Optimization Approach to Scheduling Tasks with Availability Constraint in Heterogeneous Systems", "paper_id": "WOS:000330497800011"}