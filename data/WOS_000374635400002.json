{"auto_keywords": [{"score": 0.031383332366980904, "phrase": "nescond"}, {"score": 0.010346714928755775, "phrase": "normal_conditional_logics"}, {"score": 0.00930094197224287, "phrase": "nested_sequent_calculi"}, {"score": 0.00481495049065317, "phrase": "sequent_calculi"}, {"score": 0.00457553517865013, "phrase": "nescond."}, {"score": 0.0044150318724093226, "phrase": "proof_methods"}, {"score": 0.00411064950774695, "phrase": "theorem_prover"}, {"score": 0.003807684498435389, "phrase": "basic_conditional_logic"}, {"score": 0.0036740168936985314, "phrase": "axioms_id"}, {"score": 0.0035997459419352213, "phrase": "cem."}, {"score": 0.0034556603183020407, "phrase": "flat_fragment"}, {"score": 0.003403122817578447, "phrase": "conditional_logic"}, {"score": 0.0033004371008404187, "phrase": "kraus"}, {"score": 0.003266889970397024, "phrase": "lehmann"}, {"score": 0.0032336801561165113, "phrase": "magidor's_cumulative_logic"}, {"score": 0.002718045523483502, "phrase": "experimental_comparison"}, {"score": 0.0025694584194998356, "phrase": "conditional_logics"}, {"score": 0.0022844491478992827, "phrase": "cem"}], "paper_keywords": ["Conditional logics", " nonmonotonic reasoning", " theorem proving", " nested sequent calculi", " proof theory"], "paper_abstract": "In this paper we focus on proof methods and theorem proving for normal conditional logics, by describing nested sequent calculi as well as a theorem prover for them. We first present some nested sequent calculi, recently introduced, for the basic conditional logic CK and some of its significant extensions with axioms ID, MP and CEM. We also describe a calculus for the flat fragment of the conditional logic CK+CSO+ID, which corresponds to Kraus, Lehmann and Magidor's cumulative logic C. The calculi are internal, cut-free and analytic. Next, we describe NESCOND, a Prolog implementation of these calculi in the style of leanT(A)P. We finally present an experimental comparison between our theorem prover NESCOND and other known theorem provers for conditional logics. Our tests show that the performances of NESCOND are promising and in all cases better, with the only exception of systems including CEM, than those ones of the other provers. The program NESCOND, as well as all the Prolog source files, are available at http://www.di.unito.it/similar to pozzato/nescond/.", "paper_title": "Nested sequent calculi and theorem proving for normal conditional logics: The theorem prover NESCOND", "paper_id": "WOS:000374635400002"}