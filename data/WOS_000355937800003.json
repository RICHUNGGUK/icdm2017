{"auto_keywords": [{"score": 0.039501390753465516, "phrase": "hardware-oblivious_algorithms"}, {"score": 0.03817717905827684, "phrase": "underlying_hardware"}, {"score": 0.00481495049065317, "phrase": "modern_processor_architectures"}, {"score": 0.004764220976404241, "phrase": "main-memory_hash"}, {"score": 0.004582722012454012, "phrase": "hardware-oblivious_hash"}, {"score": 0.004470823343432748, "phrase": "hardware-specific_parameters"}, {"score": 0.004377077848734575, "phrase": "qualitative_characteristics"}, {"score": 0.004346266306175988, "phrase": "modern_hardware"}, {"score": 0.004255121395629569, "phrase": "good_performance"}, {"score": 0.0042102651938187114, "phrase": "technologically_similar_platform"}, {"score": 0.003936910716320182, "phrase": "automatic_hardware_prefetching"}, {"score": 0.00385431710959668, "phrase": "order_execution"}, {"score": 0.003813669883040509, "phrase": "simultaneous_multi-threading"}, {"score": 0.003603989174919527, "phrase": "hardware-conscious_implementations"}, {"score": 0.0033698643928647726, "phrase": "algorithm_parameters"}, {"score": 0.003241312187060814, "phrase": "particular_features"}, {"score": 0.0029357204796552653, "phrase": "wide_range"}, {"score": 0.0028037753646260937, "phrase": "sorted_data"}, {"score": 0.002603066281023047, "phrase": "smt"}, {"score": 0.0025846704839204587, "phrase": "simd"}, {"score": 0.0024772013657695896, "phrase": "hardware-conscious_algorithms"}, {"score": 0.0024510413243251906, "phrase": "hardware-oblivious_ones"}, {"score": 0.002408052242408488, "phrase": "specific_workloads"}, {"score": 0.002391067964886602, "phrase": "special_architectures"}, {"score": 0.0023742031943872464, "phrase": "aggressive_simultaneous_multi-threading"}, {"score": 0.002316105585203396, "phrase": "main_conclusion"}, {"score": 0.00225144317399471, "phrase": "existing_multi-core_architectures"}, {"score": 0.002127472359795555, "phrase": "necessary_performance"}, {"score": 0.0021049977753042253, "phrase": "processor_developments"}], "paper_keywords": ["Databases", " query processing", " modern hardware", " multi-core", " parallelism"], "paper_abstract": "Existing main-memory hash join algorithms for multi-core can be classified into two camps. Hardware-oblivious hash join variants do not depend on hardware-specific parameters. Rather, they consider qualitative characteristics of modern hardware and are expected to achieve good performance on any technologically similar platform. The assumption behind these algorithms is that hardware is now good enough at hiding its own limitations-through automatic hardware prefetching, out-of-order execution, or simultaneous multi-threading (SMT)-to make hardware-oblivious algorithms competitive without the overhead of carefully tuning to the underlying hardware. Hardware-conscious implementations, such as (parallel) radix join, aim to maximally exploit a given architecture by tuning the algorithm parameters (e. g., hash table sizes) to the particular features of the architecture. The assumption here is that explicit parameter tuning yields enough performance advantages to warrant the effort required. This paper compares the two approaches under a wide range of workloads (relative table sizes, tuple sizes, effects of sorted data, etc.) and configuration parameters (VM page sizes, number of threads, number of cores, SMT, SIMD, prefetching, etc.). The results show that hardware-conscious algorithms generally outperform hardware-oblivious ones. However, on specific workloads and special architectures with aggressive simultaneous multi-threading, hardware-oblivious algorithms are competitive. The main conclusion of the paper is that, in existing multi-core architectures, it is still important to carefully tailor algorithms to the underlying hardware to get the necessary performance. But processor developments may require to revisit this conclusion in the future.", "paper_title": "Main-Memory Hash Joins on Modern Processor Architectures", "paper_id": "WOS:000355937800003"}