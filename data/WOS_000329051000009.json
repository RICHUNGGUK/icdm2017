{"auto_keywords": [{"score": 0.04969089536874819, "phrase": "inconsistent_examples"}, {"score": 0.015719716506582538, "phrase": "conditional_preference_networks"}, {"score": 0.011383516860786693, "phrase": "consistent_cp-nets"}, {"score": 0.00976116907972796, "phrase": "preference_graphs"}, {"score": 0.0046243296077572655, "phrase": "cp"}, {"score": 0.004420472010542188, "phrase": "great_attention"}, {"score": 0.004226856126282259, "phrase": "users'_behaviors"}, {"score": 0.004175533280178052, "phrase": "observation_errors"}, {"score": 0.003740679163860117, "phrase": "existing_cp-nets"}, {"score": 0.0031139032290048788, "phrase": "preference_graph"}, {"score": 0.0030386598795433474, "phrase": "dominance_testing"}, {"score": 0.002677837900473396, "phrase": "-bound_search"}, {"score": 0.002623783458189614, "phrase": "obtained_preference_graph"}, {"score": 0.002438043578514396, "phrase": "maximal_sum"}, {"score": 0.0022378620428620782, "phrase": "proposed_method"}, {"score": 0.0021926693625590006, "phrase": "simulated_data"}, {"score": 0.0021748483128942687, "phrase": "real_data"}, {"score": 0.0021049977753042253, "phrase": "existing_methods"}], "paper_keywords": ["Preference learning", " preference elicitation", " conditional preference networks", " preference graph", " branch-and-bound"], "paper_abstract": "The problem of learning conditional preference networks (CP-nets) from a set of examples has received great attention recently. However, because of the randomicity of the users' behaviors and the observation errors, there is always some noise making the examples inconsistent, namely, there exists at least one outcome preferred over itself (by transferring) in examples. Existing CP-nets learning methods cannot handle inconsistent examples. In this work, we introduce the model of learning consistent CP-nets from inconsistent examples and present a method to solve this model. We do not learn the CP-nets directly. Instead, we first learn a preference graph from the inconsistent examples, because dominance testing and consistency testing in preference graphs are easier than those in CP-nets. The problem of learning preference graphs is translated into a 0-1 programming and is solved by the branch-and-bound search. Then, the obtained preference graph is transformed into a CP-net equivalently, which can entail a subset of examples with maximal sum of weight. Examples are given to show that our method can obtain consistent CP-nets over both binary and multivalued variables from inconsistent examples. The proposed method is verified on both simulated data and real data, and it is also compared with existing methods.", "paper_title": "Learning Conditional Preference Networks from Inconsistent Examples", "paper_id": "WOS:000329051000009"}