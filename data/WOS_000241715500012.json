{"auto_keywords": [{"score": 0.031206211457634407, "phrase": "kutten_et_al"}, {"score": 0.013465079110660007, "phrase": "routing_information"}, {"score": 0.013209849215977237, "phrase": "harchol-balter_et_al"}, {"score": 0.009927310153918798, "phrase": "deterministic_algorithm"}, {"score": 0.007717090301211469, "phrase": "synchronous_systems"}, {"score": 0.00481495049065317, "phrase": "peer-to-peer_networks"}, {"score": 0.004474366340935036, "phrase": "general_purpose_network"}, {"score": 0.004181934438617324, "phrase": "critical_task"}, {"score": 0.003954109842050071, "phrase": "logical_networks"}, {"score": 0.003908540309317741, "phrase": "akamai"}, {"score": 0.003709864243214192, "phrase": "logical_directed_edge"}, {"score": 0.0036038701178581403, "phrase": "ip_address"}, {"score": 0.003514452622395695, "phrase": "connected_components"}, {"score": 0.0034941337957136013, "phrase": "underlying_graph"}, {"score": 0.0034471772915081137, "phrase": "undirected_graph"}, {"score": 0.0032718761046588835, "phrase": "synchronous_network"}, {"score": 0.003252955157193771, "phrase": "weakly_connected_directed_graph"}, {"score": 0.0031599739264865554, "phrase": "node_every_time_unit"}, {"score": 0.003117494037134566, "phrase": "message_delivery"}, {"score": 0.002999234092728817, "phrase": "synchronous_networks"}, {"score": 0.0029876569458714497, "phrase": "improved_complexity"}, {"score": 0.002930436134213291, "phrase": "current_paper"}, {"score": 0.0028687545730861665, "phrase": "asynchronous_networks"}, {"score": 0.002846647336160784, "phrase": "clock_pulses"}, {"score": 0.0028138046006772593, "phrase": "message_delivery_time"}, {"score": 0.0027175263159330523, "phrase": "synchronous_algorithm"}, {"score": 0.002675797331220082, "phrase": "asynchronous_model"}, {"score": 0.0025792344336708936, "phrase": "main_technical_difficulty"}, {"score": 0.0023779362667537274, "phrase": "timeout_mechanism"}, {"score": 0.0022612583366919694, "phrase": "asynchronous_algorithm"}, {"score": 0.002235154293623177, "phrase": "directed_edge"}, {"score": 0.00218807532188779, "phrase": "bidirectional_graph"}, {"score": 0.0021419858439828193, "phrase": "actual_setting"}, {"score": 0.002129584983647679, "phrase": "realistic_manner"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["peer-to-peer", " topology changes", " topology knowledge loss", " distributed algorithms", " asynchronous networks"], "paper_abstract": "The resource discovery problem arises in the context of peer to peer (P2P) networks, where at any point of time a peer may be placed at or removed from any location over a general purpose network (e.g., an Internet site). A node (peer) can communicate with another node directly if and only if it knows a certain routing information to that other node. Hence, a critical task is for the peers to convey this routing information to each other. The problem was formalized by Harchol-Balter et al. and the specific P2P application they had in mind was the logical networks Go of servers placed by Akamai at various Internet sites. The routing information needed for a node to reach another peer is that peer's identifier (e.g., IP address). A logical directed edge represents the fact that the peer at the tail of the edge knows the IP address of the one at its head. The problem is to compute the connected components in the underlying graph of Go (namely, the undirected graph obtained from Go by removing edge directionality). A number of algorithms were developed in Harchol-Balter et al. for this problem in the model of a synchronous network over a weakly connected directed graph. That is, the assumption was that some clock delivers pulses to every node every time unit at the same time, and a message delivery takes one time unit. The best of these algorithms was randomized. Subsequently, a deterministic algorithm for the problem on synchronous networks with improved complexity was presented in a paper by Kutten et al. The current paper extends the deterministic algorithm of Kutten et al. to the environment of asynchronous networks, where no clock pulses are assumed, and the message delivery time may vary and is not known. We managed to maintain complexities similar to those of the synchronous algorithm of Kutten et al. (translated to the asynchronous model). These are lower than the complexities that would be needed to synchronize the system. The main technical difficulty in a directed, weakly connected system is to ensure that nodes take steps that are consistent with each other, even if their knowledge about each other is not symmetric. Here, this task is further complicated by the fact that there is no timeout mechanism (which does exist in synchronous systems) to assist in ensuring consistency. In particular, as opposed to the case in synchronous systems, an asynchronous algorithm cannot first transform every directed edge to be bidirectional and second, apply an algorithm for bidirectional graph. Thus, our result takes another step towards representing the actual setting in a realistic manner. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Asynchronous resource discovery in peer-to-peer networks", "paper_id": "WOS:000241715500012"}