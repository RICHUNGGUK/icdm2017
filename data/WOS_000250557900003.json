{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "abductive_explanations"}, {"score": 0.01557711205583577, "phrase": "propositional_horn_theory"}, {"score": 0.011953166864023248, "phrase": "abductive_query"}, {"score": 0.011143293849999032, "phrase": "polynomial_subset"}, {"score": 0.009922492299531079, "phrase": "horn_theory"}, {"score": 0.004698086429418318, "phrase": "fundamental_mode"}, {"score": 0.004584113814991667, "phrase": "ai"}, {"score": 0.004555968736680118, "phrase": "computer_science"}, {"score": 0.004445362365289235, "phrase": "important_computational_problem"}, {"score": 0.0043374295116776675, "phrase": "early_systems"}, {"score": 0.004284449077262611, "phrase": "atms"}, {"score": 0.004258195773502909, "phrase": "clause_management_systems"}, {"score": 0.004180403355909392, "phrase": "prime_implicate_generation"}, {"score": 0.004154788336557036, "phrase": "propositional_logic"}, {"score": 0.004041441391385147, "phrase": "abductive_explanation"}, {"score": 0.0037540161914797698, "phrase": "multiple_explanations"}, {"score": 0.003340011311961488, "phrase": "particular_attention"}, {"score": 0.0031992346303888397, "phrase": "compound_formula"}, {"score": 0.0030927866759789045, "phrase": "abducible_literals"}, {"score": 0.0029806849142611984, "phrase": "horn_conjunctive_normal_form"}, {"score": 0.0027770234187618815, "phrase": "polynomial_total-time_algorithms"}, {"score": 0.0025872414078452273, "phrase": "quasi-polynomial_time"}, {"score": 0.0025555820461269, "phrase": "polynomial-time_equivalence"}, {"score": 0.0025011051765984906, "phrase": "monotone_cnf_expression"}, {"score": 0.0024704972295365164, "phrase": "previous_results"}, {"score": 0.0024103977660677677, "phrase": "longstanding_conjecture"}, {"score": 0.002395603621680727, "phrase": "selman"}, {"score": 0.002380898466473078, "phrase": "levesque"}, {"score": 0.0022804533290324944, "phrase": "related_problems"}, {"score": 0.0022387107945750044, "phrase": "restricted_prime_implicates"}, {"score": 0.0021842376228111537, "phrase": "tractable_cases"}, {"score": 0.0021049977753042253, "phrase": "polynomial_time"}], "paper_keywords": ["algorithms", " theory", " abduction", " propositional logic", " Horn theories", " polynomial totaltime", " computation", " enumeration algorithms", " dualization problem", " model-based reasoning", " characteristic set", " prime implicates", " tractability", " NP-hardness"], "paper_abstract": "Abduction is a fundamental mode of reasoning with applications in many areas of AI and Computer Science. The computation of abductive explanations is an important computational problem, which is at the core of early systems such as the ATMS and Clause Management Systems and is intimately related to prime implicate generation in propositional logic. Many algorithms have been devised for computing some abductive explanation, and the complexity of the problem has been well studied. However, little attention has been paid to the problem of computing multiple explanations, and in particular all explanations for an abductive query. We fill this gap and consider the computation of all explanations of an abductive query from a propositional Horn theory, or of a polynomial subset of them. Our study pays particular attention to the form of the query, ranging from a literal to a compound formula, to whether explanations are based on a set of abducible literals and to the representation of the Horn theory, either by a Horn conjunctive normal form (CNF) or model-based in terms of its characteristic models. For these combinations, we present either tractability results in terms of polynomial total-time algorithms, intractability results in terms of nonexistence of such algorithms (unless P = NP), or semi-tractability results in terms of solvability in quasi-polynomial time, established by polynomial-time equivalence to the problem of dualizing a monotone CNF expression. Our results complement previous results in the literature, and refute a longstanding conjecture by Selman and Levesque. They elucidate the complexity of generating all abductive explanations and shed light on related problems such as generating sets of restricted prime implicates of a Horn theory. The algorithms for tractable cases can be readily applied for generating a polynomial subset of explanations in polynomial time.", "paper_title": "On computing all abductive explanations from a propositional horn theory", "paper_id": "WOS:000250557900003"}