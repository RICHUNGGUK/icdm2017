{"auto_keywords": [{"score": 0.02991048950725451, "phrase": "ann_ensembles"}, {"score": 0.015074435841361757, "phrase": "complex_problem"}, {"score": 0.010635099271600357, "phrase": "evolutionary_computation"}, {"score": 0.00481495049065317, "phrase": "artificial_neural_network_ensembles"}, {"score": 0.004734038956773703, "phrase": "coordinated_group"}, {"score": 0.004694092086199672, "phrase": "simple_solvers"}, {"score": 0.004537631845923196, "phrase": "entirely_new_idea"}, {"score": 0.0043863636475983845, "phrase": "ancient_chinese"}, {"score": 0.004330941610682453, "phrase": "team_approach"}, {"score": 0.004204320052179726, "phrase": "long_time"}, {"score": 0.004098725744818192, "phrase": "divide-and-conquer_strategy"}, {"score": 0.003978866233891427, "phrase": "simpler_sub-problems"}, {"score": 0.0037336520904376687, "phrase": "best_way"}, {"score": 0.003639835714755229, "phrase": "simpler_ones"}, {"score": 0.0035634522350563107, "phrase": "available_domain_knowledge"}, {"score": 0.0034738975998176323, "phrase": "manual_process"}, {"score": 0.0034299649219748513, "phrase": "experienced_engineer"}, {"score": 0.0031777570808834213, "phrase": "interesting_avenues"}, {"score": 0.002870006736445581, "phrase": "deep_underlying_connection"}, {"score": 0.0026701760128830573, "phrase": "effective_algorithms"}, {"score": 0.002311192286067765, "phrase": "in-depth_study"}, {"score": 0.0021229583685841405, "phrase": "recent_work"}, {"score": 0.0021049977753042253, "phrase": "evolutionary_approaches"}], "paper_keywords": [""], "paper_abstract": "Using a coordinated group of simple solvers to tackle a complex problem is not an entirely new idea. Its root could be traced back hundreds of years ago when ancient Chinese suggested a team approach to problem solving. For a long time, engineers have used the divide-and-conquer strategy to decompose a complex problem into simpler sub-problems and then solve them by a group of solvers. However, knowing the best way to divide a complex problem into simpler ones relies heavily on the available domain knowledge. It is often a manual process by an experienced engineer. There have been few automatic divide-and-conquer methods reported in the literature. Fortunately, evolutionary computation provides some of the interesting avenues to automatic divide-and-conquer methods [15]. An in-depth study of such methods reveals that there is a deep underlying connection between evolutionary computation and ANN ensembles.. Ideas in one area can be usefully transferred into another in producing effective algorithms. For example, using speciation to create and maintain diversity [15] had inspired the development of negative correlation learning for ANN ensembles [33], [34] and an in-depth study of diversity in ensembles [12], [51]. This paper will review some of the recent work in evolutionary approaches to designing ANN ensembles.", "paper_title": "Evolving artificial neural network ensembles", "paper_id": "WOS:000252611500006"}