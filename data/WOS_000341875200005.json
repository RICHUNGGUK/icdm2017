{"auto_keywords": [{"score": 0.0496533317597282, "phrase": "cooperatively_shared_computing_platforms"}, {"score": 0.03064008178649113, "phrase": "service_capacity"}, {"score": 0.00481495049065317, "phrase": "autonomically_scalable_services"}, {"score": 0.004645959941491617, "phrase": "system_architecture"}, {"score": 0.004543352284098364, "phrase": "autonomically_scalable_and_resilient_services"}, {"score": 0.004344855841195913, "phrase": "computing_platforms"}, {"score": 0.004063186599879217, "phrase": "competing_users"}, {"score": 0.004027031316965272, "phrase": "fair-share_basis"}, {"score": 0.003955679223407243, "phrase": "reserved_resource_capacities"}, {"score": 0.0038167308978417306, "phrase": "platform-wide_resource_manager"}, {"score": 0.0036991458715587163, "phrase": "different_nodes"}, {"score": 0.003278447235176858, "phrase": "scalable_services"}, {"score": 0.003220315882881027, "phrase": "unique_challenges"}, {"score": 0.003177392642813126, "phrase": "node-level_fluctuations"}, {"score": 0.0031350397225314262, "phrase": "available_resource_capacities"}, {"score": 0.003107117564014497, "phrase": "node_crashes"}, {"score": 0.0030656984915295275, "phrase": "service_load"}, {"score": 0.002997886346903894, "phrase": "short_time"}, {"score": 0.002918483026678636, "phrase": "autonomic_scaling"}, {"score": 0.002841176824012961, "phrase": "dynamic_control"}, {"score": 0.002778317177178732, "phrase": "service_replication"}, {"score": 0.002729029534060092, "phrase": "estimated_service_capacity"}, {"score": 0.00269263690712392, "phrase": "observed_load"}, {"score": 0.0025178072071268534, "phrase": "operating_conditions"}, {"score": 0.002451088210833819, "phrase": "adaptive_and_agile_load_distribution_mechanisms"}, {"score": 0.002241177667712288, "phrase": "planetlab"}, {"score": 0.0021915573326125428, "phrase": "platform_level_characteristics"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["distributed systems", " replication management", " autonomic systems", " resilient services", " load balancing"], "paper_abstract": "We present here a system architecture and its underlying mechanisms for building autonomically scalable and resilient services on cooperatively shared computing platforms. Specifically, our focus is on utilizing computing platforms exhibiting the following characteristics. The resources at a node in such platforms are allocated to competing users on fair-share basis, without any reserved resource capacities for any user. There is no platform-wide resource manager for the placement of users on different nodes. The users independently select nodes for their applications. Moreover, a node can become unavailable at any time due to crashes or shutdowns. Building scalable services in such environments poses unique challenges due to node-level fluctuations in the available resource capacities and node crashes. The service load may surge in a short time due to flash crowds. Autonomic scaling of service capacity is performed by dynamic control of the degree of service replication based on the estimated service capacity and the observed load. We present here models for estimating the service capacity at a node under fluctuating operating conditions. Furthermore, we develop adaptive and agile load distribution mechanisms for distributing load among replicas based on their time-varying service capacities. We present the results of our evaluations of these mechanisms on PlanetLab, which exemplifies the platform level characteristics considered here.Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Mechanisms for building autonomically scalable services on cooperatively shared computing platforms", "paper_id": "WOS:000341875200005"}