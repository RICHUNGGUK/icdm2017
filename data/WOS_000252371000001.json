{"auto_keywords": [{"score": 0.048636009815037934, "phrase": "ad_hoc_networks"}, {"score": 0.03138333236698092, "phrase": "approximation_algorithm"}, {"score": 0.004815538159518264, "phrase": "benefit"}, {"score": 0.004437613070853689, "phrase": "information_access"}, {"score": 0.00437021209960886, "phrase": "wireless_ad_hoc_network"}, {"score": 0.0042819270655224916, "phrase": "access_latency"}, {"score": 0.004238452771031322, "phrase": "bandwidth_usage"}, {"score": 0.0041316803676012155, "phrase": "efficient_distributed_caching_algorithms"}, {"score": 0.004089725258435817, "phrase": "nontrivial_when_network_nodes_have_limited_memory"}, {"score": 0.003906116922372891, "phrase": "cache_placement_problem"}, {"score": 0.0038467574225322086, "phrase": "total_data"}, {"score": 0.0038271712887391015, "phrase": "access_cost"}, {"score": 0.0037498152007206815, "phrase": "multiple_data_items"}, {"score": 0.0036740168936985314, "phrase": "limited_memory_capacity"}, {"score": 0.0035284070091886953, "phrase": "np"}, {"score": 0.003351381374975648, "phrase": "total_access_cost"}, {"score": 0.0032668821950788533, "phrase": "polynomial-time_centralized_approximation_algorithm"}, {"score": 0.0030726480920918097, "phrase": "uniform-size_data_items"}, {"score": 0.003010496595090984, "phrase": "optimal_benefit"}, {"score": 0.00290473242917264, "phrase": "localized_distributed_implementation"}, {"score": 0.002622528664187849, "phrase": "mobile_nodes"}, {"score": 0.002530359917257626, "phrase": "network_simulator"}, {"score": 0.002392008392892289, "phrase": "existing_caching_technique"}, {"score": 0.002355622644397066, "phrase": "yin"}, {"score": 0.002331665130863556, "phrase": "cao"}, {"score": 0.002249672943553135, "phrase": "important_performance_metrics"}, {"score": 0.0022154296909169826, "phrase": "performance_differential"}, {"score": 0.002126635713519053, "phrase": "higher_access_frequency"}, {"score": 0.0021049977753042253, "phrase": "smaller_memory"}], "paper_keywords": ["caching placement policy", " ad hoc networks", " algorithm/protocol design and analysis", " simulations"], "paper_abstract": "Data caching can significantly improve the efficiency of information access in a wireless ad hoc network by reducing the access latency and bandwidth usage. However, designing efficient distributed caching algorithms is nontrivial when network nodes have limited memory. In this article, we consider the cache placement problem of minimizing total data access cost in ad hoc networks with multiple data items and nodes with limited memory capacity. The above optimization problem is known to be NP-hard. Defining benefit as the reduction in total access cost, we present a polynomial-time centralized approximation algorithm that provably delivers a solution whose benefit is at least 1/4 (1/2 for uniform-size data items) of the optimal benefit. The approximation algorithm is amenable to localized distributed implementation, which is shown via simulations to perform close to the approximation algorithm. Our distributed algorithm naturally extends to networks with mobile nodes. We simulate our distributed algorithm using a network simulator (ns2) and demonstrate that it significantly outperforms another existing caching technique (by Yin and Cao [ 33]) in all important performance metrics. The performance differential is particularly large in more challenging scenarios such as higher access frequency and smaller memory.", "paper_title": "Benefit-based data caching in ad hoc networks", "paper_id": "WOS:000252371000001"}