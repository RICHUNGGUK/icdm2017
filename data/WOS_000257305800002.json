{"auto_keywords": [{"score": 0.04313814531283802, "phrase": "core_solver"}, {"score": 0.00481495049065317, "phrase": "out-of-core_active_memory"}, {"score": 0.00469159356595623, "phrase": "sparse_direct_solvers"}, {"score": 0.004551647527068771, "phrase": "large_sparse_systems"}, {"score": 0.0045124316982387315, "phrase": "linear_equations"}, {"score": 0.0043213410601860985, "phrase": "large_problems"}, {"score": 0.003962998498942108, "phrase": "large_real-life_problems"}, {"score": 0.003697760799674494, "phrase": "core_memory_usage"}, {"score": 0.0035410467987580484, "phrase": "time_performance"}, {"score": 0.003450213580299164, "phrase": "parallel_in-core_solver"}, {"score": 0.003069362581661702, "phrase": "consistently_good_performance_results"}, {"score": 0.0029647862293448895, "phrase": "memory_reduction"}, {"score": 0.0028513785049061767, "phrase": "intermediate_working_memory"}, {"score": 0.0027422968723193057, "phrase": "algorithmic_models"}, {"score": 0.0025920406425973368, "phrase": "memory_requirements"}, {"score": 0.0023056996845692373, "phrase": "algorithmic_modelling"}, {"score": 0.002227083991228041, "phrase": "new_version"}, {"score": 0.0021233361369222344, "phrase": "useful_reference"}], "paper_keywords": ["sparse direct solvers", " parallel multifrontal method", " out-of-core"], "paper_abstract": "The memory usage of sparse direct solvers can be the bottleneck to solve large sparse systems of linear equations of the form Ax = b. In order to solve large problems, we have designed a robust out-of-core solver, in which computed factors are stored on disk. We use large real-life problems (up to several million equations and several hundred million nonzeros) to show that we can significantly reduce the core memory usage in parallel (on up to 128 processors), with a time performance comparable to that of a parallel in-core solver. A careful study shows how the low-level I/O mechanisms impact the performance. We describe a low-level I/O layer that avoids the perturbations introduced by system buffers and allows consistently good performance results. To go significantly further in the memory reduction, it is interesting to also store the intermediate working memory on disk. In this paper we describe algorithmic models to address this issue, and study their potential in terms of both memory requirements and I/O volume. The out-of-core solver discussed in this paper is publicly available and already used by several academic and industrial groups. The results of the algorithmic modelling will be the basis to design a new version of this solver; this work may also be a useful reference for other developers of sparse out-of-core solvers. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "A parallel out-of-core multifrontal method: Storage of factors on disk and analysis of models for an out-of-core active memory", "paper_id": "WOS:000257305800002"}