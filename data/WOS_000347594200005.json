{"auto_keywords": [{"score": 0.04638610970349902, "phrase": "mcc"}, {"score": 0.01428139503575509, "phrase": "computational_offloading"}, {"score": 0.005722346557807324, "phrase": "technical_issues"}, {"score": 0.005603111501832792, "phrase": "distributed_application_processing_platforms"}, {"score": 0.004754447398742591, "phrase": "substantial_technological_advancements"}, {"score": 0.004674952036988355, "phrase": "smart_mobile_devices"}, {"score": 0.0045581828632009795, "phrase": "low-potential_computing_devices"}, {"score": 0.004481954307639453, "phrase": "mobile_cloud_computing"}, {"score": 0.004260800171269249, "phrase": "contemporary_computational_offloading_frameworks"}, {"score": 0.004171891198117434, "phrase": "resource-intensive_procedures"}, {"score": 0.003982741546775355, "phrase": "application_binary_code"}, {"score": 0.003932654396285872, "phrase": "distributed_platforms"}, {"score": 0.0037861265016041813, "phrase": "energy_consumption_costs"}, {"score": 0.0037543106253910313, "phrase": "turnaround_time"}, {"score": 0.0037070855410818986, "phrase": "mobile_applications"}, {"score": 0.0036296886647898094, "phrase": "data_transmission"}, {"score": 0.0035091888798162176, "phrase": "resource_-limited_nature"}, {"score": 0.0034504423179340738, "phrase": "lightweight_techniques"}, {"score": 0.0033926758710459866, "phrase": "application_processing_services"}, {"score": 0.0033641551050434663, "phrase": "computational_clouds"}, {"score": 0.003266201217790818, "phrase": "resource-intensive_nature"}, {"score": 0.0032250961348210473, "phrase": "latest_existing_computational_offloading_techniques"}, {"score": 0.003027178161479457, "phrase": "prototype_application"}, {"score": 0.0029764767329116875, "phrase": "different_computation_intensities"}, {"score": 0.002939007076062123, "phrase": "real_mcc_environment"}, {"score": 0.002853396755102163, "phrase": "additional_computing_resources"}, {"score": 0.0026782279715171866, "phrase": "additional_energy"}, {"score": 0.0024926348205500715, "phrase": "different_computational_intensive_components"}, {"score": 0.002461241017147324, "phrase": "prototype_mobile_application"}, {"score": 0.0023694065215394593, "phrase": "existing_computational_offloading_techniques"}, {"score": 0.0022906498741695094, "phrase": "future_research_possibilities"}, {"score": 0.0021866066626507028, "phrase": "lightweight_procedures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Mobile Cloud Computing", " Distributed Systems", " Computational offloading", " Resource-Intensive", " Lightweight"], "paper_abstract": "Despite substantial technological advancements in recent years, Smart Mobile Devices (SMDs) are still low-potential computing devices. Therefore, Mobile Cloud Computing (MCC) can deploy computational offloading for augmenting SMDs. The contemporary Computational Offloading Frameworks (COFs) implement resource-intensive procedures for computational offloading, which involve the overhead of transmitting application binary code and deploying distributed platforms at runtime. As a result, the energy consumption costs and turnaround time for the mobile applications and the overhead of data transmission can be increased. Nevertheless, the resource -limited nature of SMDs requires lightweight techniques for leveraging the application processing services of computational clouds. This paper critically analyzes the resource-intensive nature of the latest existing computational offloading techniques for MCC and highlights technical issues in the establishment of distributed application processing platforms at runtime. A prototype application is evaluated with different computation intensities in a real MCC environment Analysis of the results shows that additional computing resources are utilized in the deployment of distributed application processing platforms at runtimes. For example, 31.6% additional energy is consumed, 39% additional time is required and 13241.2 KB of data are transmitted for offloading different computational intensive components of the prototype mobile application. Finally, we highlight technical issues in the existing computational offloading techniques for MCC, which draw attention to future research possibilities for computational offloading for MCC and which may assist in developing lightweight procedures for computational offloading in MCC (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "A Study on the Critical Analysis of Computational Offloading Frameworks for Mobile Cloud Computing", "paper_id": "WOS:000347594200005"}