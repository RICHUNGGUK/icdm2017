{"auto_keywords": [{"score": 0.04539932504094413, "phrase": "keyword_queries"}, {"score": 0.015349069531425953, "phrase": "tree-structured_data"}, {"score": 0.011113300332017366, "phrase": "data_tree"}, {"score": 0.009946531145436392, "phrase": "query_matches"}, {"score": 0.00481495049065317, "phrase": "xml_keyword_queries"}, {"score": 0.004786002454145624, "phrase": "keyword_search"}, {"score": 0.004742904841489477, "phrase": "popular_technique"}, {"score": 0.004533142516832776, "phrase": "complex_query_language"}, {"score": 0.004451846834142146, "phrase": "data_sources"}, {"score": 0.004103611985528699, "phrase": "multiple_previous_approaches"}, {"score": 0.003969640975997097, "phrase": "structural_properties"}, {"score": 0.003933865582543784, "phrase": "tree_data"}, {"score": 0.003863275399791591, "phrase": "irrelevant_results"}, {"score": 0.0037939470786850457, "phrase": "easy_task"}, {"score": 0.0037258582339644514, "phrase": "general_case"}, {"score": 0.0034759420565135253, "phrase": "structural_relationships"}, {"score": 0.0031845067058084583, "phrase": "meaningful_semantics"}, {"score": 0.003117890043128058, "phrase": "original_approach"}, {"score": 0.00306189690236109, "phrase": "structural_patterns"}, {"score": 0.002952900365829518, "phrase": "meaningful_results"}, {"score": 0.0028050788526778957, "phrase": "different_types"}, {"score": 0.002616762777413686, "phrase": "global_reasoning"}, {"score": 0.002561992219031343, "phrase": "efficient_stack-based_algorithm"}, {"score": 0.0024632912250657636, "phrase": "heuristic_extension"}, {"score": 0.002404447017429959, "phrase": "comprehensive_experiments"}, {"score": 0.002389956401870098, "phrase": "different_datasets"}, {"score": 0.0022633993976138387, "phrase": "experimental_results"}, {"score": 0.0022160085332710265, "phrase": "higher_quality"}, {"score": 0.0021960024679620886, "phrase": "previous_ones"}, {"score": 0.0021049977753042253, "phrase": "output_size"}], "paper_keywords": ["XML keyword search", " Keyword query semantics", " Patterns", " Ranking"], "paper_abstract": "Keyword search is a popular technique for searching tree-structured data on the Web because it frees the user from knowing a complex query language and the structure of the data sources. However, the imprecision of the keyword queries usually results in a very large number of results of which only a few are relevant to the query. Multiple previous approaches have tried to address this problem. They exploit the structural properties of the tree data in order to filter out irrelevant results. This is not an easy task though, and in the general case, these approaches show low precision and/or recall and low quality of result ranking. In this paper, we argue that exploiting the structural relationships of the query matches locally in the data tree is not sufficient and a global analysis of the keyword matches in the data tree is necessary in order to assign meaningful semantics to keyword queries. We present an original approach for answering keyword queries which extracts structural patterns of the query matches and reasons with them in order to return meaningful results ranked with respect to their relevance to the query. Comparisons between patterns are realized based on different types of homomorphisms between patterns. As the number of patterns is typically much smaller than that of the of query matches, this global reasoning is feasible. We design an efficient stack-based algorithm for evaluating keyword queries on tree-structured data, and we also devise a heuristic extension which further improves its performance. We run comprehensive experiments on different datasets to evaluate the efficiency of the algorithms and the effectiveness of our ranking and filtering semantics. The experimental results show that our approach produces results of higher quality compared to previous ones and our algorithms are fast and scale well with respect to the input and output size.", "paper_title": "Reasoning with patterns to effectively answer XML keyword queries", "paper_id": "WOS:000354298200006"}