{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "declarative_networking"}, {"score": 0.0047292449487169345, "phrase": "programming_methodology"}, {"score": 0.004535124351828787, "phrase": "network_protocols"}, {"score": 0.004271490815763164, "phrase": "dataflow_framework"}, {"score": 0.003975200317233532, "phrase": "basic_issues"}, {"score": 0.003857871979942733, "phrase": "language_design"}, {"score": 0.00374399358035391, "phrase": "dataflow_execution"}, {"score": 0.0035901685646972585, "phrase": "declarative_programming"}, {"score": 0.0034426560716275803, "phrase": "datalog"}, {"score": 0.003361069456060196, "phrase": "networked_environments"}, {"score": 0.0032423089921154503, "phrase": "long-running_queries"}, {"score": 0.0030171910207671205, "phrase": "network_datalog"}, {"score": 0.002910545717767559, "phrase": "execution_strategies"}, {"score": 0.0028586409810976367, "phrase": "crisp_eventual_consistency_semantics"}, {"score": 0.002644179117033107, "phrase": "overlog"}, {"score": 0.0025354258731826148, "phrase": "expressive_richness"}, {"score": 0.0025051811853674215, "phrase": "semantic_guarantees"}, {"score": 0.00240213106042981, "phrase": "declarative_network_protocols"}, {"score": 0.0022758279600841014, "phrase": "overlay_networks"}, {"score": 0.0021953290937408807, "phrase": "related_work"}, {"score": 0.0021304214257321, "phrase": "new_declarative_approaches"}, {"score": 0.0021049977753042253, "phrase": "related_problems"}], "paper_keywords": [""], "paper_abstract": "Declarative Networking is a programming methodology that enables developers to concisely specify network protocols and services, which are directly compiled to a dataflow framework that executes the specifications. This paper provides an introduction to basic issues in declarative networking, including language design, optimization, and dataflow execution. We present the intuition behind declarative programming of networks, including roots in Datalog, extensions for networked environments, and the semantics of long-running queries over network state. We focus on a sublanguage we call Network Datalog (NDlog), including execution strategies that provide crisp eventual consistency semantics with significant flexibility in execution. We also describe a more general language called Overlog, which makes some compromises between expressive richness and semantic guarantees. We provide an overview of declarative network protocols, with a focus on routing protocols and overlay networks. Finally, we highlight related work in declarative networking, and new declarative approaches to related problems.", "paper_title": "Declarative Networking", "paper_id": "WOS:000271215300031"}