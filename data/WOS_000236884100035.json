{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "petri_nets"}, {"score": 0.04302051049727595, "phrase": "van_der_aalst"}, {"score": 0.004656871909510407, "phrase": "workflow_design"}, {"score": 0.004579879915806952, "phrase": "inheritance"}, {"score": 0.00417793854311445, "phrase": "workflow_systems"}, {"score": 0.003306559295382181, "phrase": "business_process_redesign"}, {"score": 0.0031186510842824626, "phrase": "state_class-level_constraints"}, {"score": 0.0027741761880779535, "phrase": "class_semantics"}, {"score": 0.0027054473441439422, "phrase": "explicit_representation"}, {"score": 0.00246765655376112, "phrase": "original_workflow"}, {"score": 0.002327310963701377, "phrase": "proposed_approach"}, {"score": 0.00223196703759329, "phrase": "basten's_four_inheritance_types"}], "paper_keywords": [""], "paper_abstract": "Inheritance has been suggested as a tool for managing changes in workflow systems. Van der Aalst and Basten [1] have identified four types of inheritance for workflows using a representation based on Petri nets. While they capture intuitions important for business process redesign, they suffer from their inability to state class-level constraints. This paper illustrates this limitation and proposes an extension that accommodates the class semantics and enables explicit representation of constraints on what variations in workflow are consistent with the original workflow. It also shows that the proposed approach subsumes the Van der Aalst and Basten's four inheritance types under a single framework and overcomes their limitation.", "paper_title": "Applying specialization to Petri nets: Implications for workflow design", "paper_id": "WOS:000236884100035"}