{"auto_keywords": [{"score": 0.004814973612537241, "phrase": "greedy"}, {"score": 0.004728780808284175, "phrase": "multi-commodity_flows"}, {"score": 0.004665162327051461, "phrase": "multi-commodity_flow_problem"}, {"score": 0.004602395776895036, "phrase": "classical_combinatorial_optimization_problem"}, {"score": 0.00447937340641839, "phrase": "practically_important_issues"}, {"score": 0.00439918275666155, "phrase": "bandwidth_management"}, {"score": 0.004359625030298944, "phrase": "connection-oriented_network_architectures"}, {"score": 0.004243064277617193, "phrase": "distributed_multi-commodity_flow_problems"}, {"score": 0.004129607015893271, "phrase": "multiple_agents"}, {"score": 0.004055652445791872, "phrase": "cooperative_but_uncoordinated_manner"}, {"score": 0.003965061486705487, "phrase": "first_stateless_greedy_distributed_algorithm"}, {"score": 0.00391167729353583, "phrase": "concurrent_multi-commodity_flow_problem"}, {"score": 0.003309278541665552, "phrase": "allowed_flow-path"}, {"score": 0.00326469463991041, "phrase": "prior_results"}, {"score": 0.003148709618042979, "phrase": "reasonable_alternative"}, {"score": 0.0031203609829058587, "phrase": "existing_polynomial_sequential_approximation_algorithms"}, {"score": 0.0030094882299407256, "phrase": "palo_alto"}, {"score": 0.002982656982468757, "phrase": "ca"}, {"score": 0.002955583182591578, "phrase": "usa"}, {"score": 0.002522738549524317, "phrase": "flow_rate"}, {"score": 0.0023253967212081626, "phrase": "existing_flow-control_heuristics"}, {"score": 0.00228370324896405, "phrase": "tcp"}, {"score": 0.002232579371411544, "phrase": "conservative_cap"}, {"score": 0.0021049977753042253, "phrase": "rather_liberal_cap"}], "paper_keywords": ["Multi-commodity flows", " Distributed algorithms", " Statelessness", " Self-stabilization"], "paper_abstract": "The multi-commodity flow problem is a classical combinatorial optimization problem that addresses a number of practically important issues of congestion and bandwidth management in connection-oriented network architectures. We consider solutions for distributed multi-commodity flow problems, which are solved by multiple agents operating in a cooperative but uncoordinated manner. We provide the first stateless greedy distributed algorithm for the concurrent multi-commodity flow problem with poly-logarithmic convergence. More precisely, our algorithm achieves 1 + epsilon approximation, with running time O(H center dot log(O(1)) m center dot (1/epsilon)(O(1))) where H is the number of edges on any allowed flow-path. No prior results exist for our model. Our algorithm is a reasonable alternative to existing polynomial sequential approximation algorithms, such as Garg-Konemann (Proceedings of the 39th Annual Symposium on Foundations of Computer Science, Palo Alto, CA, USA, pp. 300-309, 1998). The algorithm is simple and can be easily implemented or taught in a classroom. Remarkably, our algorithm requires that the increase in the flow rate on a link is more aggressive than the decrease in the rate. Essentially all of the existing flow-control heuristics are variations of TCP, which uses a conservative cap on the increase (e. g., additive), and a rather liberal cap on the decrease (e. g., multiplicative). In contrast, our algorithm requires the increase to be multiplicative, and that this increase is dramatically more aggressive than the decrease.", "paper_title": "Greedy distributed optimization of multi-commodity flows", "paper_id": "WOS:000263361200002"}