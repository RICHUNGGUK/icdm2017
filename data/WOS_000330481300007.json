{"auto_keywords": [{"score": 0.03638875977369809, "phrase": "isolation_levels"}, {"score": 0.00481495049065317, "phrase": "multi-tier_architectures"}, {"score": 0.004683540676363745, "phrase": "modern_transaction_systems"}, {"score": 0.00459186790405058, "phrase": "application_server_tier"}, {"score": 0.00453772385360173, "phrase": "database_tier"}, {"score": 0.004143196873246147, "phrase": "qualitatively_the_anomalies"}, {"score": 0.003664963414801933, "phrase": "new_approach"}, {"score": 0.0035931556794840027, "phrase": "consistency_anomalies"}, {"score": 0.003054825135908205, "phrase": "detected_anomaly"}, {"score": 0.0030068193773923387, "phrase": "exactly_the_transactions"}, {"score": 0.0029830992938695007, "phrase": "data_items"}, {"score": 0.00289007009553812, "phrase": "detected_anomalies"}, {"score": 0.0028334016912935165, "phrase": "business_methods"}, {"score": 0.002607246047604476, "phrase": "isolation_level"}, {"score": 0.0024960634897058394, "phrase": "transaction_design"}, {"score": 0.0021049977753042253, "phrase": "wide_range"}], "paper_keywords": ["Consistency", " Serializability", " Transactions"], "paper_abstract": "Modern transaction systems, consisting of an application server tier and a database tier, offer several levels of isolation providing a trade-off between performance and consistency. While it is fairly well known how to identify qualitatively the anomalies that are possible under a certain isolation level, it is much more difficult to detect and quantify such anomalies during run-time of a given application. In this paper, we present a new approach to detect and quantify consistency anomalies for arbitrary multi-tier application running under any isolation levels ensuring at least read committed. In fact, the application can run even under a mixture of isolation levels. Our detection approach can be online or off-line and for each detected anomaly, we identify exactly the transactions and data items involved. Furthermore, we classify the detected anomalies into patterns showing the business methods involved as well as analyzing the types of cycles that occur. Our approach can help designers to either choose an isolation level where the anomalies do not occur or to change the transaction design to avoid the anomalies. Furthermore, we provide an option in which the occurrence of anomalies can be automatically reduced during run-time. To test the effectiveness and efficiency of our approach, we have conducted a set of experiments using a wide range of benchmarks.", "paper_title": "Consistency anomalies in multi-tier architectures: automatic detection and prevention", "paper_id": "WOS:000330481300007"}