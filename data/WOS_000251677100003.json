{"auto_keywords": [{"score": 0.04956801403590678, "phrase": "software_development_efficiency"}, {"score": 0.03346417924469897, "phrase": "aop"}, {"score": 0.02274306270505872, "phrase": "design_quality"}, {"score": 0.010612376554274197, "phrase": "aspect-oriented_programming"}, {"score": 0.004301834610818624, "phrase": "system's_features"}, {"score": 0.0040334640350288, "phrase": "better_modularisation"}, {"score": 0.003990385737207714, "phrase": "crosscutting_concerns"}, {"score": 0.003926626018798576, "phrase": "developed_system_implementation"}, {"score": 0.0033243718810317254, "phrase": "empirical_study"}, {"score": 0.0032712190037495975, "phrase": "web-based_system_development"}, {"score": 0.0031335830806256777, "phrase": "oop_approach"}, {"score": 0.0029221312451219203, "phrase": "aop_approach"}, {"score": 0.0028446460307503343, "phrase": "fullfledged_alternative"}, {"score": 0.0027991418754844347, "phrase": "pure_oop_approach"}, {"score": 0.0024868972942701582, "phrase": "design_quality_metrics"}, {"score": 0.0023440591342244886, "phrase": "oop."}, {"score": 0.0021507795710951384, "phrase": "present_study"}, {"score": 0.0021049977753042253, "phrase": "larger_number"}], "paper_keywords": [""], "paper_abstract": "The aspect-oriented programming (AOP) approach is supposed to enhance a system's features such as modularity, readability and simplicity. Owing to a better modularisation of crosscutting concerns, the developed system implementation would be less complex, and more readable. Thus, software development efficiency would increase, so the system would be created faster than its object-oriented programming (OOP) equivalent. An empirical study of a web-based system development is carried out to examine AOP against OOP approach with regard to software development efficiency and design quality. The study reveals that the AOP approach appears to be a fullfledged alternative to the pure OOP approach. Nevertheless, the impact of AOP on software development efficiency and design quality was not confirmed. In particular, it appeared that design quality metrics were not significantly associated with using AOP, instead of OOP. It is possible that the benefits of AOP will exceed the results obtained in the present study for experiments with larger number of subjects.", "paper_title": "Impact of aspect-oriented programming on software development efficiency and design quality: an empirical study", "paper_id": "WOS:000251677100003"}