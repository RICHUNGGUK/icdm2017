{"auto_keywords": [{"score": 0.049536625181462055, "phrase": "source_code"}, {"score": 0.04158910772275424, "phrase": "dejavu"}, {"score": 0.00481495049065317, "phrase": "buggy_inconsistencies"}, {"score": 0.004706453355638515, "phrase": "software_developers"}, {"score": 0.004296264970612285, "phrase": "software_project"}, {"score": 0.0037682108720193956, "phrase": "general_syntactic_inconsistency_bugs"}, {"score": 0.0035796471115594553, "phrase": "target_code_base"}, {"score": 0.0035189057079817285, "phrase": "parallel_inconsistent_clone_analysis"}, {"score": 0.0034004869983267085, "phrase": "source_code_fragments"}, {"score": 0.003193606324727067, "phrase": "extensible_buggy"}, {"score": 0.0031573626285069157, "phrase": "analysis_framework"}, {"score": 0.002999274091205852, "phrase": "inconsistent_fragments"}, {"score": 0.0029483516334882862, "phrase": "fine-grained_set"}, {"score": 0.0024700776739384977, "phrase": "sizable_random_sample"}, {"score": 0.0024281181691350085, "phrase": "high_likelihood"}, {"score": 0.0022287497627555895, "phrase": "diverse_class"}, {"score": 0.0022034318550547866, "phrase": "software_defects"}, {"score": 0.0021049977753042253, "phrase": "syntactic_inconsistencies"}], "paper_keywords": ["Languages", " Reliability", " Algorithms", " Experimentation"], "paper_abstract": "Software developers often duplicate source code to replicate functionality. This practice can hinder the maintenance of a software project: bugs may arise when two identical code segments are edited inconsistently. This paper presents DejaVu, a highly scalable system for detecting these general syntactic inconsistency bugs. DejaVu operates in two phases. Given a target code base, a parallel inconsistent clone analysis first enumerates all groups of source code fragments that are similar but not identical. Next, an extensible buggy change analysis framework refines these results, separating each group of inconsistent fragments into a fine-grained set of inconsistent changes and classifying each as benign or buggy. On a 75+ million line pre-production commercial code base, DejaVu executed in under five hours and produced a report of over 8,000 potential bugs. Our analysis of a sizable random sample suggests with high likelihood that at this report contains at least 2,000 true bugs and 1,000 code smells. These bugs draw from a diverse class of software defects and are often simple to correct: syntactic inconsistencies both indicate problems and suggest solutions.", "paper_title": "Scalable and Systematic Detection of Buggy Inconsistencies in Source Code", "paper_id": "WOS:000286595800012"}