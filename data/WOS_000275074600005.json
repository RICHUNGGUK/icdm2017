{"auto_keywords": [{"score": 0.04773500917567816, "phrase": "software_development_performance"}, {"score": 0.013022719545518932, "phrase": "agile_development"}, {"score": 0.012786243081750305, "phrase": "software_development_agility"}, {"score": 0.009067483574194833, "phrase": "response_extensiveness"}, {"score": 0.008226924113413974, "phrase": "positive_effect"}, {"score": 0.00481495049065317, "phrase": "business_and_technology_environments"}, {"score": 0.004764382201533623, "phrase": "unprecedented_rate"}, {"score": 0.004652527803482161, "phrase": "user_requirements"}, {"score": 0.004555298069759361, "phrase": "agile_software_development_approaches"}, {"score": 0.004413233203505802, "phrase": "-functional_teams"}, {"score": 0.004286885806274423, "phrase": "increasing_number"}, {"score": 0.004175153021444913, "phrase": "agile_development_literature"}, {"score": 0.004087858617494781, "phrase": "empirical_evidence"}, {"score": 0.004066320531231836, "phrase": "theoretical_foundation"}, {"score": 0.0036009785776379287, "phrase": "agile_development_approach"}, {"score": 0.0035631141969666782, "phrase": "integrated_research_approach"}, {"score": 0.003534976495993737, "phrase": "quantitative_and_qualitative_data_analyses"}, {"score": 0.0034793636230383367, "phrase": "black_box"}, {"score": 0.0030566420737720367, "phrase": "on-budget_completion"}, {"score": 0.003032491780979615, "phrase": "software_functionality"}, {"score": 0.0027790719502132815, "phrase": "tradeoff_relationship"}, {"score": 0.002713700006599453, "phrase": "impact_software_development_performance"}, {"score": 0.0026498617171585343, "phrase": "on-time_completion"}, {"score": 0.002526643766431107, "phrase": "team_autonomy"}, {"score": 0.002493442431605113, "phrase": "response_efficiency"}, {"score": 0.002473730894309209, "phrase": "negative_effect"}, {"score": 0.002428339701880082, "phrase": "team_diversity"}, {"score": 0.002219414100246277, "phrase": "qualitative_analysis"}, {"score": 0.0021844525153939406, "phrase": "supported_and_unsupported_hypotheses"}, {"score": 0.002155738023005989, "phrase": "qualitative_analysis_results"}, {"score": 0.002127400176088142, "phrase": "theoretical_and_practical_implications"}, {"score": 0.0021049977753042253, "phrase": "agile_development_approaches"}], "paper_keywords": ["Software development agility", " agile software development", " team autonomy", " team diversity", " software development performance", " requirement change", " partial least square", " case study"], "paper_abstract": "As business and technology environments change at an unprecedented rate, software development agility to respond to changing user requirements has become increasingly critical for software development performance. Agile software development approaches, which emphasize sense-and-respond, self-organization, cross-functional teams, and continuous adaptation, have been adopted by an increasing number of organizations to improve their software development agility. However, the agile development literature is largely anecdotal and prescriptive, lacking empirical evidence and theoretical foundation to support the principles and practices of agile development. Little research has empirically examined the software development agility construct in terms of its dimensions, determinants, and effects on software development performance. As a result, there is a lack of understanding about how organizations can effectively implement an agile development approach. Using an integrated research approach that combines quantitative and qualitative data analyses, this research opens the black box of agile development by empirically examining the relationships among two dimensions of software development agility (software team response extensiveness and software team response efficiency), two antecedents that can be con trolled (team autonomy and team diversity), and three aspects of software development performance (on-time completion, on-budget completion, and software functionality). Our PLS results of survey, responses of 399 software project managers suggest that the relationships among these variables are more complex than what has been perceived by the literature. The results suggest a tradeoff relationship between response extensiveness and response efficiency. These two agility dimensions impact software development performance differently: response efficiency positively affects all of on-time completion, on-budget completion, and software functionality, whereas response extensiveness positively affects only software functionality. The results also suggest that team autonomy has a positive effect on response efficiency and a negative effect on response extensiveness, and that team diversity has a positive effect on response extensiveness, We conducted 10 post hoc case studies to qualitatively cross-validate our PLS results and provide rich, additional insights regarding the complex, dynamic interplays between autonomy, diversity, agility, and performance. The qualitative analysis also provides explanations for both supported and unsupported hypotheses. We discuss these qualitative analysis results and conclude with the theoretical and practical implications of our research findings for agile development approaches.", "paper_title": "TOWARD AGILE: AN INTEGRATED ANALYSIS OF QUANTITATIVE AND QUALITATIVE FIELD DATA ON SOFTWARE DEVELOPMENT AGILITY", "paper_id": "WOS:000275074600005"}