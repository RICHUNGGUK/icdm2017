{"auto_keywords": [{"score": 0.03741817279607134, "phrase": "linearized_dynamics"}, {"score": 0.03062023849585726, "phrase": "fixed_and_slow_points"}, {"score": 0.004669085371587273, "phrase": "high-dimensional_recurrent"}, {"score": 0.0045877173513910055, "phrase": "recurrent_neural_networks"}, {"score": 0.004487989502479992, "phrase": "useful_tools"}, {"score": 0.004429191773525288, "phrase": "nonlinear_relationships"}, {"score": 0.00439041997682389, "phrase": "time-varying_inputs"}, {"score": 0.00431388720289049, "phrase": "complex_temporal_dependencies"}, {"score": 0.00427612041204006, "phrase": "recently_developed_algorithms"}, {"score": 0.004183137595671171, "phrase": "training_rnns"}, {"score": 0.0041102032028337366, "phrase": "wide_variety"}, {"score": 0.004003169429008801, "phrase": "resulting_networks"}, {"score": 0.003916098498242888, "phrase": "black_boxes"}, {"score": 0.00346223706087128, "phrase": "crucial_aspects"}, {"score": 0.003198554193075258, "phrase": "phase_space"}, {"score": 0.003142732162296465, "phrase": "true_fixed_points"}, {"score": 0.003007389443770562, "phrase": "simple_optimization_technique"}, {"score": 0.002941913249957503, "phrase": "trained_rnns"}, {"score": 0.002790511479398411, "phrase": "slow_regions"}, {"score": 0.00260066500930677, "phrase": "rnn."}, {"score": 0.002499590390751339, "phrase": "simple_examples"}, {"score": 0.0021049977753042253, "phrase": "trained_networks"}], "paper_keywords": [""], "paper_abstract": "Recurrent neural networks (RNNs) are useful tools for learning nonlinear relationships between time-varying inputs and outputs with complex temporal dependencies. Recently developed algorithms have been successful at training RNNs to perform a wide variety of tasks, but the resulting networks have been treated as black boxes: their mechanism of operation remains unknown. Here we explore the hypothesis that fixed points, both stable and unstable, and the linearized dynamics around them, can reveal crucial aspects of how RNNs implement their computations. Further, we explore the utility of linearization in areas of phase space that are not true fixed points but merely points of very slow movement. We present a simple optimization technique that is applied to trained RNNs to find the fixed and slow points of their dynamics. Linearization around these slow regions can be used to explore, or reverse-engineer, the behavior of the RNN. We describe the technique, illustrate it using simple examples, and finally showcase it on three high-dimensional RNN examples: a 3-bit flip-flop device, an input-dependent sine wave generator, and a two-point moving average. In all cases, the mechanisms of trained networks could be inferred from the sets of fixed and slow points and the linearized dynamics around them.", "paper_title": "Opening the Black Box: Low-Dimensional Dynamics in High-Dimensional Recurrent Neural Networks", "paper_id": "WOS:000314562800002"}