{"auto_keywords": [{"score": 0.033198904611918524, "phrase": "generic_constructs"}, {"score": 0.025676572385205914, "phrase": "system_performance"}, {"score": 0.015140272215742627, "phrase": "standard_benchmarks"}, {"score": 0.007626137999024874, "phrase": "problem_domain"}, {"score": 0.005550956584434889, "phrase": "workload_requirements"}, {"score": 0.00503492787395544, "phrase": "test_database"}, {"score": 0.00481495049065317, "phrase": "based_workload_model"}, {"score": 0.004797573487354669, "phrase": "web_search"}, {"score": 0.004763006494220568, "phrase": "vital_tools"}, {"score": 0.004737244013968897, "phrase": "performance_measurement"}, {"score": 0.004677669617756483, "phrase": "computer_hardware"}, {"score": 0.004602170294384951, "phrase": "trec"}, {"score": 0.004585608414141776, "phrase": "tpc"}, {"score": 0.004569013221395709, "phrase": "spec"}, {"score": 0.004552515848830232, "phrase": "sap"}, {"score": 0.004541944737398524, "phrase": "page_model"}, {"score": 0.0045361535713267466, "phrase": "oracle"}, {"score": 0.0045197130482172955, "phrase": "microsoft"}, {"score": 0.004517372524080831, "phrase": "query_model"}, {"score": 0.0045034025797914025, "phrase": "ibm"}, {"score": 0.0044871277075645985, "phrase": "wisconsin"}, {"score": 0.00448481530876411, "phrase": "control_model"}, {"score": 0.004250157769463012, "phrase": "typical_applications"}, {"score": 0.004196683019035164, "phrase": "test_results"}, {"score": 0.004143878278731018, "phrase": "possible_system_performance"}, {"score": 0.004062233106688484, "phrase": "standard_problem_domain"}, {"score": 0.004032942843634343, "phrase": "application_workload"}, {"score": 0.003996625636680538, "phrase": "standard_workload"}, {"score": 0.003946328141611921, "phrase": "accurate_way"}, {"score": 0.003896661163574723, "phrase": "user_problem_domain"}, {"score": 0.0038615664337196248, "phrase": "actual_problem_domain"}, {"score": 0.003677425184073007, "phrase": "benchmark_workload_model"}, {"score": 0.003664138358315629, "phrase": "web_search_technology"}, {"score": 0.0036442977483035766, "phrase": "current_performance_measurement"}, {"score": 0.003631130178349649, "phrase": "evaluation_method"}, {"score": 0.0036049370818564998, "phrase": "rough_estimate"}, {"score": 0.003439211347666774, "phrase": "real_users'_environment"}, {"score": 0.0033592180717173657, "phrase": "domain_boundness"}, {"score": 0.00334707709086422, "phrase": "workload_boundness"}, {"score": 0.0032633060372844616, "phrase": "ir-reproducible_performance_results"}, {"score": 0.003210560117215916, "phrase": "domain-independent_and_workload-independent_workload_model_benchmark_method"}, {"score": 0.0031132366528161923, "phrase": "user-driven_workload_model"}, {"score": 0.0030133922752997545, "phrase": "common_carrier"}, {"score": 0.002927325220172706, "phrase": "actual_user_domain"}, {"score": 0.002895685794368677, "phrase": "workload_model_benchmark_method"}, {"score": 0.0028592038424522744, "phrase": "high-level_workload_specification_scheme"}, {"score": 0.0027624752770260812, "phrase": "test_suite"}, {"score": 0.0027128834133129153, "phrase": "specification_scheme"}, {"score": 0.0025833757888316733, "phrase": "test_workload"}, {"score": 0.0025369909336376037, "phrase": "search_methods"}, {"score": 0.002460035348760942, "phrase": "workload_model_development"}, {"score": 0.0024334342083133604, "phrase": "web_page_structure"}, {"score": 0.002363892360454188, "phrase": "control_variables"}, {"score": 0.002304671672071007, "phrase": "ten_baseline_research_experiments"}, {"score": 0.002267385236183537, "phrase": "benchmark_method"}, {"score": 0.0022550906594801332, "phrase": "experimental_prototype"}, {"score": 0.0022226293375665544, "phrase": "experimental_results"}, {"score": 0.0021669399108808296, "phrase": "user_requirements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Web search", " Information retrieval", " Generic construct", " Benchmark method", " Workload model", " Performance measurement", " Evaluation", " Comparison"], "paper_abstract": "Benchmarks are vital tools in the performance measurement, evaluation, and comparison of computer hardware and software systems. Standard benchmarks such as the TREC, TPC, SPEC, SAP, Oracle, Microsoft, IBM, Wisconsin, WAR 001, 007, X007 benchmarks have been used to assess the system performance. These benchmarks are domain-specific and domain-dependent in that they model typical applications and tie to a problem domain. Test results from these benchmarks are estimates of possible system performance for certain pre-determined problem types. When the user domain differs from the standard problem domain or when the application workload is divergent from the standard workload, they do not provide an accurate way to measure the system performance of the user problem domain. System performance of the actual problem domain in terms of data and transactions may vary significantly from the standard benchmarks. In this research, we address the issue of generalization and precision of benchmark workload model for web search technology. The current performance measurement and evaluation method suffers from the rough estimate of system performance which varies widely when the problem domain changes. The performance results provided by the vendors cannot be reproduced nor reused in the real users' environment. Hence, in this research, we tackle the issue of domain boundness and workload boundness which represents the root of the problem of imprecise, ir-representative, and ir-reproducible performance results. We address the issue by presenting a domain-independent and workload-independent workload model benchmark method which is developed from the perspective of the user requirements and generic constructs. We present a user-driven workload model to develop a benchmark in a process of workload requirements representation, transformation, and generation via the common carrier of generic constructs. We aim to create a more generalized and precise evaluation method which derives test suites from the actual user domain and application setting. The workload model benchmark method comprises three main components. They are a high-level workload specification scheme, a translator of the scheme, and a set of generators to generate the test database and the test suite. They are based on the generic constructs. The specification scheme is used to formalize the workload requirements. The translator is used to transform the specification. The generator is used to produce the test database and the test workload. We determine the generic constructs via the analysis of search methods. The generic constructs form a page model, a query model, and a control model in the workload model development. The page model describes the web page structure. The query model defines the logics to query the web. The control model defines the control variables to set up the experiments. In this study, we have conducted ten baseline research experiments to validate the feasibility and validity of the benchmark method. An experimental prototype is built to execute these experiments. Experimental results demonstrate that the method based on generic constructs and driven by the perspective of user requirements is capable of modeling the standard benchmarks as well as more general benchmark requirements. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A generic construct based workload model for web search", "paper_id": "WOS:000268793100003"}