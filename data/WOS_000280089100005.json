{"auto_keywords": [{"score": 0.04789568572973002, "phrase": "preference_function"}, {"score": 0.01531071318933702, "phrase": "first_stage"}, {"score": 0.013506698294379768, "phrase": "binary_classification"}, {"score": 0.012643139128275738, "phrase": "binary_classifier"}, {"score": 0.009510670276450313, "phrase": "deterministic_algorithm"}, {"score": 0.00481495049065317, "phrase": "efficient_preference-based_ranking_algorithm"}, {"score": 0.004474645041899596, "phrase": "standard_binary_classification_problem"}, {"score": 0.004415395176043526, "phrase": "second_stage"}, {"score": 0.004256455007398593, "phrase": "accurate_ranking"}, {"score": 0.004186105377259855, "phrase": "learning_problem"}, {"score": 0.004021954624114115, "phrase": "familiar_quicksort"}, {"score": 0.003968675046544738, "phrase": "expected_pairwise_misranking_loss"}, {"score": 0.003737485125097945, "phrase": "important_special_case"}, {"score": 0.003712640297460159, "phrase": "bipartite_ranking"}, {"score": 0.003543273649210823, "phrase": "improved_bound"}, {"score": 0.0032706520949775065, "phrase": "lower_bound"}, {"score": 0.003238078694483823, "phrase": "deterministic_reduction"}, {"score": 0.0030189426536422577, "phrase": "balcan_et_al"}, {"score": 0.0028715299874549245, "phrase": "bipartite_case"}, {"score": 0.0028052155436760528, "phrase": "low_regret"}, {"score": 0.002704079288159013, "phrase": "improved_running_time_guarantee"}, {"score": 0.002381872778203302, "phrase": "top_k"}, {"score": 0.0023268399760599336, "phrase": "ka_parts"}, {"score": 0.0022579435307530944, "phrase": "information_extraction"}, {"score": 0.002242911772136627, "phrase": "search_engine_design"}, {"score": 0.002220551141101661, "phrase": "time_complexity"}, {"score": 0.0021049977753042253, "phrase": "realistic_applications"}], "paper_keywords": ["Learning to rank", " Machine learning reductions", " ROC"], "paper_abstract": "This paper presents an efficient preference-based ranking algorithm running in two stages. In the first stage, the algorithm learns a preference function defined over pairs, as in a standard binary classification problem. In the second stage, it makes use of that preference function to produce an accurate ranking, thereby reducing the learning problem of ranking to binary classification. This reduction is based on the familiar QuickSort and guarantees an expected pairwise misranking loss of at most twice that of the binary classifier derived in the first stage. Furthermore, in the important special case of bipartite ranking, the factor of two in loss is reduced to one. This improved bound also applies to the regret achieved by our ranking and that of the binary classifier obtained. Our algorithm is randomized, but we prove a lower bound for any deterministic reduction of ranking to binary classification showing that randomization is necessary to achieve our guarantees. This, and a recent result by Balcan et al., who show a regret bound of two for a deterministic algorithm in the bipartite case, suggest a trade-off between achieving low regret and determinism in this context. Our reduction also admits an improved running time guarantee with respect to that deterministic algorithm. In particular, the number of calls to the preference function in the reduction is improved from Omega(n (2)) to O(nlog n). In addition, when the top k ranked elements only are required (ka parts per thousand(a)n), as in many applications in information extraction or search engine design, the time complexity of our algorithm can be further reduced to O(klog k+n). Our algorithm is thus practical for realistic applications where the number of points to rank exceeds several thousand.", "paper_title": "Preference-based learning to rank", "paper_id": "WOS:000280089100005"}