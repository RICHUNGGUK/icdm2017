{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sparse_hypermatrix_cholesky"}, {"score": 0.00475924837336259, "phrase": "fixed-sized_blocking"}, {"score": 0.004361428012479218, "phrase": "sparse_cholesky_factorization"}, {"score": 0.0042610532651691305, "phrase": "hypermatrix_data_structure"}, {"score": 0.004187284711626886, "phrase": "data_structure"}, {"score": 0.004114787982556699, "phrase": "storage_scheme"}, {"score": 0.003950453462399077, "phrase": "sparse_matrix"}, {"score": 0.003770633265791941, "phrase": "large_sparse_matrices"}, {"score": 0.0036411406244705557, "phrase": "dense_matrices"}, {"score": 0.0033170847930578473, "phrase": "sparse_matrices"}, {"score": 0.0031660031870090434, "phrase": "dense_blocks"}, {"score": 0.0026119782818898193, "phrase": "different_areas"}, {"score": 0.0025816953009851072, "phrase": "interior_point_methods"}, {"score": 0.002551762519273805, "phrase": "linear_programming"}, {"score": 0.0021799789348982516, "phrase": "simple_fixed-size_partitioning"}, {"score": 0.0021049977753042253, "phrase": "competitive_performance"}], "paper_keywords": ["sparse Cholesky", " hypermatrix structure", " 2D partitioning", " windows in submatrices", " small Matrix Library"], "paper_abstract": "We present the way in which we have constructed an implementation of a sparse Cholesky factorization based on a hypermatrix data structure. This data structure is a storage scheme which produces a recursive 2D partitioning of a sparse matrix. It can be useful on some large sparse matrices. Subblocks are stored as dense matrices. Thus, efficient BLAS3 routines can be used. However, since we are dealing with sparse matrices some zeros may be stored in those dense blocks. The overhead introduced by the operations on zeros can become large and considerably degrade performance. We present the ways in which we deal with this overhead. Using matrices from different areas (Interior Point Methods of linear programming and Finite Element Methods), we evaluate our sequential in-core hypermatrix sparse Cholesky implementation. We compare its performance with several other codes and analyze the results. In spite of using a simple fixed-size partitioning of the matrix our code obtains competitive performance.", "paper_title": "Analysis of a sparse hypermatrix Cholesky with fixed-sized blocking", "paper_id": "WOS:000247066600006"}