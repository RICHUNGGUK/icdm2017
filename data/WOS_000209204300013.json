{"auto_keywords": [{"score": 0.03069155049113217, "phrase": "convex_map"}, {"score": 0.00481495049065317, "phrase": "auto-adaptive_convex_map"}, {"score": 0.00477190623242136, "phrase": "path-finding_algorithm"}, {"score": 0.004521566043596533, "phrase": "robot_control"}, {"score": 0.004481132747216135, "phrase": "global_positioning_system"}, {"score": 0.0041891398413899435, "phrase": "large_maps"}, {"score": 0.004133055661437163, "phrase": "abstraction_methods"}, {"score": 0.0037948184359488284, "phrase": "original_maps"}, {"score": 0.003611751858608048, "phrase": "obstacle_distributions"}, {"score": 0.0035156341294017685, "phrase": "unnecessary_storage"}, {"score": 0.0034841647157189985, "phrase": "non-optimal_paths"}, {"score": 0.0033459905006404207, "phrase": "new_abstract_graph-based_path-finding_method"}, {"score": 0.003198860258228543, "phrase": "important_convex_map_concept"}, {"score": 0.003099723664407622, "phrase": "original_map"}, {"score": 0.0029767499830258754, "phrase": "path_length"}, {"score": 0.0027452053065200152, "phrase": "fitness_function"}, {"score": 0.0026481480455339055, "phrase": "key_nodes"}, {"score": 0.0026126405272417783, "phrase": "genetic_algorithm"}, {"score": 0.0024864612830452254, "phrase": "on-line_refinement"}, {"score": 0.0024421008630165046, "phrase": "convex_a"}, {"score": 0.0023770362063833903, "phrase": "fast_alternative"}, {"score": 0.0023241387549221408, "phrase": "convex_maps"}, {"score": 0.0023033100935570755, "phrase": "experimental_results"}, {"score": 0.002262209824105154, "phrase": "proposed_abstraction"}, {"score": 0.0022318655527987846, "phrase": "genetic_convex_a"}, {"score": 0.0021049977753042253, "phrase": "on-line_processing"}], "paper_keywords": ["Path-finding", " Convex map", " Abstract graph", " Genetic algorithm", " G-CA*"], "paper_abstract": "Path-finding is a fundamental problem in many applications, such as robot control, global positioning system and computer games. Since A* is time-consuming when applied to large maps, some abstraction methods have been proposed. Abstractions can greatly speedup online path-finding by combing the abstract and the original maps. However, most of these methods do not consider obstacle distributions, which may result in unnecessary storage and non-optimal paths in certain open areas. In this paper, a new abstract graph-based path-finding method named Genetic Convex A* is proposed. An important convex map concept which guides the partition of the original map is defined. It is proven that the path length between any two nodes within a convex map is equal to their Manhattan distance. Based on the convex map, a fitness function is defined to improve the extraction of key nodes; and genetic algorithm is employed to optimize the abstraction. Finally, the on-line refinement is accelerated by Convex A*, which is a fast alternative to A* on convex maps. Experimental results demonstrated that the proposed abstraction generated by Genetic Convex A* guarantees the optimality of the path whilst searches less nodes during the on-line processing.", "paper_title": "An auto-adaptive convex map generating path-finding algorithm: Genetic Convex A*", "paper_id": "WOS:000209204300013"}