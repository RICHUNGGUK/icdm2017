{"auto_keywords": [{"score": 0.03252338917009679, "phrase": "maude"}, {"score": 0.015505264184983531, "phrase": "case_study"}, {"score": 0.010727503172931793, "phrase": "hpobsam"}, {"score": 0.0046993598473345395, "phrase": "next_generation"}, {"score": 0.00466684417181804, "phrase": "software_systems"}, {"score": 0.004570634647887452, "phrase": "large_number"}, {"score": 0.0040899006497687115, "phrase": "novel_models"}, {"score": 0.003922907208353323, "phrase": "long-term_evolution"}, {"score": 0.0033549790559972053, "phrase": "smart_airport"}, {"score": 0.003129623571496151, "phrase": "executable_formal_specification"}, {"score": 0.0030331993611107328, "phrase": "ltl_model_checking"}, {"score": 0.0027903819980394386, "phrase": "java"}, {"score": 0.0026118503041971976, "phrase": "design_time"}, {"score": 0.0025490131630603757, "phrase": "new_approach"}, {"score": 0.0025313382638451776, "phrase": "run-time_verification"}, {"score": 0.002479043701859468, "phrase": "different_types"}, {"score": 0.0024026156525362684, "phrase": "model_checking"}, {"score": 0.0023611760395203106, "phrase": "dynamic_policies"}, {"score": 0.00221781065048839, "phrase": "suitable_capability"}, {"score": 0.0021795515361987144, "phrase": "property_violation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Self-adaptive systems", " Large-scale software systems", " Formal modeling", " Verification", " Self-organizing systems"], "paper_abstract": "The next generation of software systems includes systems composed of a large number of distributed, decentralized, autonomous, interacting, cooperating, organically grown, heterogeneous, and continually evolving subsystems, which we call IT Ecosystems. Clearly, we need novel models and approaches to design and develop such systems which can tackle the long-term evolution and complexity problems. In this paper, our framework to model IT Ecosystems is a combination of centralized control (top-down) and self-organizing (bottom-up) approach. We use a flexible formal model, HPobSAM, that supports both behavioral and structural adaptation/evolution. We use a detailed, close to real-life, case study of a smart airport to show how we can use HPobSAM in modeling, analyzing and developing an IT Ecosystem. We provide an executable formal specification of the model in Maude, and use LTL model checking and bounded state space search provided by Maude to analyze the model. We develop a prototype of our case study designed by HPobSAM using Java and Ponder2. Due to the complexity of the model, we cannot check all properties at design time using Maude. We propose a new approach for run-time verification of our case study, and check different types of properties which we could not verify using model checking. As our model uses dynamic policies to control the behavior of systems which can be modified at runtime, it provides us a suitable capability to react to the property violation by modification of policies. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "HPobSAM for modeling and analyzing IT Ecosystems - Through a case study", "paper_id": "WOS:000310669500008"}