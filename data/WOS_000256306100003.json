{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "web_services"}, {"score": 0.0046781613377273774, "phrase": "composition_scenarios"}, {"score": 0.0038230844545071303, "phrase": "different_natures"}, {"score": 0.003750260412839128, "phrase": "separate_components"}, {"score": 0.0034725269588525534, "phrase": "better_coordination"}, {"score": 0.003123808471618783, "phrase": "paper_interactions"}, {"score": 0.0029203055813347874, "phrase": "business_logic"}, {"score": 0.0027830917623582903, "phrase": "business-logic_layer"}, {"score": 0.002432152706473349, "phrase": "support_layer"}, {"score": 0.0021049977753042253, "phrase": "proposed_layers"}], "paper_keywords": ["web service", " composition", " context", " interaction", " policies"], "paper_abstract": "This paper discusses how interactions between Web services engaged in composition scenarios are analyzed, modeled, and finally managed. Interactions are primarily considered as a means for conveying messages of different natures between separate components, for instance, Web services. To achieve better coordination and hence, avoid conflicts between Web services, in this paper interactions are handled by two layers known as business logic and support. The business-logic layer is the host of two flows known as control and transactional, whereas the support layer is the host of two additional flows namely exception and message. On top of the proposed layers and flows, context and policies are used to oversee the progress of interactions between Web services and to constrain the behavior of these Web services, respectively.", "paper_title": "Web services interactions: Analysis, modeling, and management", "paper_id": "WOS:000256306100003"}