{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "distributed_systems"}, {"score": 0.04053713504171759, "phrase": "distributed_applications"}, {"score": 0.012899161806559116, "phrase": "individual_component"}, {"score": 0.004781915513030716, "phrase": "software's_reliability"}, {"score": 0.004668059458774745, "phrase": "major_concern"}, {"score": 0.004620093797504386, "phrase": "stake_holders"}, {"score": 0.0045726187330434025, "phrase": "application's_vendors"}, {"score": 0.004357410458790669, "phrase": "large_scale_distributed_applications"}, {"score": 0.004268293864953256, "phrase": "multimedia_services"}, {"score": 0.004224418476742716, "phrase": "end-to-end_automotive_solutions"}, {"score": 0.004053362743156545, "phrase": "distributed_system's_reliability"}, {"score": 0.0037704502704526996, "phrase": "whole_system"}, {"score": 0.0037188360359702182, "phrase": "transparent_fault_detection"}, {"score": 0.00369329349984294, "phrase": "fault_recovery_scheme"}, {"score": 0.0036553070575015344, "phrase": "seamless_interaction"}, {"score": 0.0034951469511975346, "phrase": "existing_reliability_methodologies"}, {"score": 0.0033190180867511605, "phrase": "comprehensive_reliability_model"}, {"score": 0.0032622968443364888, "phrase": "distributed_system"}, {"score": 0.003173545808843704, "phrase": "detailed_technical_overview"}, {"score": 0.003044912038752554, "phrase": "large_scale"}, {"score": 0.0029518598926717332, "phrase": "pragmatic_requirements"}, {"score": 0.002931569771634119, "phrase": "highly_reliable_systems"}, {"score": 0.002841971477743441, "phrase": "different_computing_environment"}, {"score": 0.0028127163745564777, "phrase": "cloud_computing"}, {"score": 0.002793380001054064, "phrase": "grid_computing"}, {"score": 0.00276462370914216, "phrase": "service_oriented_architecture"}, {"score": 0.0026525207297080937, "phrase": "highly_reliable_distributed_systems"}, {"score": 0.0026252106881752067, "phrase": "fault_detection"}, {"score": 0.0024842242921857705, "phrase": "significant_solutions"}, {"score": 0.0024586427394152196, "phrase": "possible_factors"}, {"score": 0.0023670716500937667, "phrase": "software_applications"}, {"score": 0.00227890329511847, "phrase": "existing_models"}, {"score": 0.002255431275670053, "phrase": "future_work"}, {"score": 0.0021864526544323184, "phrase": "real_environment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Keyword", " Reliability prediction", " Assessment", " Fault tolerant"], "paper_abstract": "Software's reliability in distributed systems has always been a major concern for all stake holders especially for application's vendors and its users. Various models have been produced to assess or predict reliability of large scale distributed applications including e-government, e-commerce, multimedia services, and end-to-end automotive solutions, but reliability issues with these systems still exists. Ensuring distributed system's reliability in turns requires examining reliability of each individual component or factors involved in enterprise distributed applications before predicting or assessing reliability of whole system, and Implementing transparent fault detection and fault recovery scheme to provide seamless interaction to end users. For this reason we have analyzed in detail existing reliability methodologies from viewpoint of examining reliability of individual component and explained why we still need a comprehensive reliability model for applications running in distributed system. In this paper we have described detailed technical overview of research done in recent years in analyzing and predicting reliability of large scale distributed applications in four parts. We first described some pragmatic requirements for highly reliable systems and highlighted significance and various issues of reliability in different computing environment such as Cloud Computing, Grid Computing, and Service Oriented Architecture. Then we elucidated certain possible factors and various challenges that are nontrivial for highly reliable distributed systems, including fault detection, recovery and removal through testing or various replication techniques. Later we scrutinize various research models which synthesize significant solutions to tackle possible factors and various challenges in predicting as well as measuring reliability of software applications in distributed systems. At the end of this paper we have discussed limitations of existing models and proposed future work for predicting and analyzing reliability of distributed applications in real environment in the light of our analysis. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "A survey on reliability in distributed systems", "paper_id": "WOS:000322557300005"}