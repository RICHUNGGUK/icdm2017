{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "job_processing_time_compatibility"}, {"score": 0.041947888026124834, "phrase": "processing_time_intervals"}, {"score": 0.0047113960612140335, "phrase": "scheduling_problems"}, {"score": 0.0045850648862091085, "phrase": "single_unbounded_batch_machine"}, {"score": 0.0045108906244892165, "phrase": "job's_processing_time"}, {"score": 0.003811010743703935, "phrase": "nonempty_intersection"}, {"score": 0.0037493114715625784, "phrase": "processing_time"}, {"score": 0.003589602322126282, "phrase": "left_endpoint"}, {"score": 0.003290237137651949, "phrase": "makespan_minimization_problem"}, {"score": 0.003115908199991072, "phrase": "pseudo-polynomial_dynamic_programming_algorithm"}, {"score": 0.0029830992938695033, "phrase": "distinct_release_dates"}, {"score": 0.0028249975318149468, "phrase": "online_algorithms"}, {"score": 0.0027641218567092665, "phrase": "approximation_scheme"}, {"score": 0.0024923577071656014, "phrase": "weighted_number"}, {"score": 0.0024653491388223546, "phrase": "tardy_jobs"}, {"score": 0.0024253827365474734, "phrase": "common_due_date"}, {"score": 0.0022472527731744974, "phrase": "polynomial-time_algorithm"}, {"score": 0.00217496508306238, "phrase": "common_weight"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Batch machine", " Compatibility", " Release date", " Approximation algorithm"], "paper_abstract": "We consider scheduling problems with job processing time compatibility on a single unbounded batch machine. Each job's processing time is characterized by an interval. Any number of jobs can be processed in a batch under the condition that the processing time intervals of the jobs in the same batch have a nonempty intersection. The processing time of a batch is given by the left endpoint of the intersection of the processing time intervals of the jobs in the batch. For the makespan minimization problem with individual job release dates, we design a pseudo-polynomial dynamic programming algorithm for the case where the number of distinct release dates is fixed. We also present a class of online algorithms that are 2-competitive and a polynomial-time approximation scheme for the case where the number of release dates is arbitrary. For the problem to minimize the weighted number of tardy jobs under a common due date, we show that it is binary NP-hard and provide a polynomial-time algorithm when the jobs have a common weight. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Single-machine batch scheduling with job processing time compatibility", "paper_id": "WOS:000355038600005"}