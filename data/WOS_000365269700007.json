{"auto_keywords": [{"score": 0.03433617150737088, "phrase": "state_detection"}, {"score": 0.00481495049065317, "phrase": "real-time_object_tracking"}, {"score": 0.004669180816745142, "phrase": "real-time_object"}, {"score": 0.004597951649247307, "phrase": "good_results"}, {"score": 0.0041446453895708, "phrase": "monte_carlo_particle_filtering"}, {"score": 0.003290403747743492, "phrase": "real_world"}, {"score": 0.0031298260299218684, "phrase": "qualitative_states"}, {"score": 0.002842655426951218, "phrase": "currently_tracked_pose"}, {"score": 0.002542298702137655, "phrase": "model_completeness_scheme"}, {"score": 0.0022648637058989463, "phrase": "first_tracking_system"}, {"score": 0.0021876814398268775, "phrase": "tracking_state"}, {"score": 0.0021049977753042253, "phrase": "easy-access_interface"}], "paper_keywords": ["Tracking", " Detection", " Modelling", " Pose estimation", " Robotic perception"], "paper_abstract": "The huge amount of literature on real-time object tracking continuously reports good results with respect to accuracy and robustness. However, when it comes to the applicability of these approaches to real-world problems, often no clear statements about the tracking situation can be made. This paper addresses this issue and relies on three novel extensions to Monte Carlo particle filtering. The first, confidence dependent variation, together with the second, iterative particle filtering, leads to faster convergence and a more accurate pose estimation. The third, fixed particle poses removes jitter and ensures convergence. These extensions significantly increase robustness and accuracy, and further provide a basis for an algorithm we found to be essential for tracking systems performing in the real world: tracking state detection. Relying on the extensions above, it reports qualitative states of tracking as follows. Convergence indicates if the pose has already been found. Quality gives a statement about the confidence of the currently tracked pose. Loss detects when the algorithm fails. Occlusion determines the degree of occlusion if only parts of the object are visible. Building on tracking state detection, a model completeness scheme is proposed as a measure of which views of the object have already been learned and which areas require further inspection. To the best of our knowledge, this is the first tracking system that explicitly addresses the issue of estimating the tracking state. Our open-source framework is available online, serving as an easy-access interface for usage in practice.", "paper_title": "Advances in real-time object tracking", "paper_id": "WOS:000365269700007"}