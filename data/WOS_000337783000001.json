{"auto_keywords": [{"score": 0.042370651748549246, "phrase": "moving_windows"}, {"score": 0.040881132238613255, "phrase": "training_data"}, {"score": 0.0045734359584500206, "phrase": "training_and_testing_sets"}, {"score": 0.004534372661692015, "phrase": "chronological_split"}, {"score": 0.004444511815446334, "phrase": "starting_and_completion_dates"}, {"score": 0.00430687080979172, "phrase": "new_project"}, {"score": 0.004245717817867575, "phrase": "training_data_projects"}, {"score": 0.004161553532799662, "phrase": "'s_start"}, {"score": 0.0040790508299443804, "phrase": "chronological_splits"}, {"score": 0.003863235056582662, "phrase": "first_three_studies"}, {"score": 0.003690344014465526, "phrase": "window_sizes"}, {"score": 0.0036483395389139556, "phrase": "recent_projects"}, {"score": 0.003515087275495129, "phrase": "elapsed_time"}, {"score": 0.0033005406650551236, "phrase": "fourth_study"}, {"score": 0.0031437375178303625, "phrase": "estimation_accuracy"}, {"score": 0.003028859354852274, "phrase": "additional_dataset"}, {"score": 0.0028195727965553367, "phrase": "prediction_models"}, {"score": 0.0027874519404992673, "phrase": "available_training_data"}, {"score": 0.0026549598458192633, "phrase": "absolute_residuals"}, {"score": 0.0026172005824080954, "phrase": "wilcoxon_test"}, {"score": 0.002579976948095233, "phrase": "statistical_significances"}, {"score": 0.0024785363812738384, "phrase": "fixed_numbers"}, {"score": 0.0024085241033716736, "phrase": "fixed_duration_windows"}, {"score": 0.002394760204469008, "phrase": "superior_estimation_accuracy"}, {"score": 0.0023742613449123217, "phrase": "new_data"}, {"score": 0.0022484395042896284, "phrase": "old_data"}, {"score": 0.002216448989443201, "phrase": "new_projects"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Chronological splitting", " Effort estimation", " Regression-based estimation models", " Moving window"], "paper_abstract": "Context: Most research in software effort estimation has not considered chronology when selecting projects for training and testing sets. A chronological split represents the use of a projects starting and completion dates, such that any model that estimates effort for a new project p only uses as training data projects that were completed prior to p's start. Four recent studies investigated the use of chronological splits, using moving windows wherein only the most recent projects completed prior to a projects starting date were used as training data. The first three studies (S1-S3) found some evidence in favor of using windows; they all defined window sizes as being fixed numbers of recent projects. In practice, we suggest that estimators think in terms of elapsed time rather than the size of the data set, when deciding which projects to include in a training set. In the fourth study (S4) we showed that the use of windows based on duration can also improve estimation accuracy. Objective: This papers contribution is to extend S4 using an additional dataset, and to also investigate the effect on accuracy when using moving windows of various durations. Method: Stepwise multivariate regression was used to build prediction models, using all available training data, and also using windows of various durations to select training data. Accuracy was compared based on absolute residuals and MREs; the Wilcoxon test was used to check statistical significances between results. Accuracy was also compared against estimates derived from windows containing fixed numbers of projects. Results: Neither fixed size nor fixed duration windows provided superior estimation accuracy in the new data set. Conclusions: Contrary to intuition, our results suggest that it is not always beneficial to exclude old data when estimating effort for new projects. When windows are helpful, windows based on duration are effective. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Investigating the use of duration-based moving windows to improve software effort prediction: A replicated study", "paper_id": "WOS:000337783000001"}