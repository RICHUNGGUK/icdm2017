{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "rebeca"}, {"score": 0.00466085208934021, "phrase": "actor-based_language"}, {"score": 0.004395742407834023, "phrase": "concurrent_and_distributed_systems"}, {"score": 0.004172722575842674, "phrase": "partial_order"}, {"score": 0.003859146369720225, "phrase": "dynamic_rebeca_models"}, {"score": 0.003639471039860495, "phrase": "rebeca_models"}, {"score": 0.003236802914194731, "phrase": "specific_data_structures"}, {"score": 0.0031741489723036255, "phrase": "internal_symmetry"}, {"score": 0.0031127040190005216, "phrase": "internal_structure"}, {"score": 0.0029933487820771217, "phrase": "former_approach"}, {"score": 0.002644678812707061, "phrase": "dynamic_changes"}, {"score": 0.0024616504443079512, "phrase": "wide_range"}, {"score": 0.0024297565926197505, "phrase": "modeling_languages"}, {"score": 0.0023982749733789882, "phrase": "distributed_and_reactive_systems"}, {"score": 0.0022912596877648723, "phrase": "model_checking_tool"}, {"score": 0.0022033327475266496, "phrase": "above-mentioned_techniques"}, {"score": 0.002160640052461594, "phrase": "evaluation_results"}, {"score": 0.002132637840285576, "phrase": "significant_improvements"}, {"score": 0.0021049977753042253, "phrase": "model_size"}], "paper_keywords": [""], "paper_abstract": "Rebeca is an actor-based language with formal semantics which is suitable for modeling concurrent and distributed systems and protocols. Due to its object model, partial order and symmetry detection and reduction techniques can be efficiently applied to dynamic Rebeca models. We present two approaches for detecting symmetry in Rebeca models: One that detects symmetry in the topology of inter-connections among objects and another one which exploits specific data structures to reflect internal symmetry in the internal structure of an object. The former approach is novel in that it does not require any input from the modeler and can deal with the dynamic changes of topology. This approach is potentially applicable to a wide range of modeling languages for distributed and reactive systems. We have also developed a model checking tool that implements all of the above-mentioned techniques. The evaluation results show significant improvements in model size and model-checking time.", "paper_title": "Symmetry and partial order reduction techniques in model checking Rebeca", "paper_id": "WOS:000273586100002"}