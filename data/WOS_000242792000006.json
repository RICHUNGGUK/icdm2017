{"auto_keywords": [{"score": 0.0348500503107606, "phrase": "range_box"}, {"score": 0.015719716506582538, "phrase": "mobile_applications"}, {"score": 0.003964007795174772, "phrase": "real-time_map_labelling_methods"}, {"score": 0.0037988336463795963, "phrase": "mobile_devices"}, {"score": 0.0037301606780397456, "phrase": "slider_method"}, {"score": 0.0036627245728600073, "phrase": "continuous_search_space"}, {"score": 0.0034676182423067307, "phrase": "point_features"}, {"score": 0.0032629585038738856, "phrase": "possible_locations"}, {"score": 0.0028715299874549245, "phrase": "cartographic_objects"}, {"score": 0.0026209522797963447, "phrase": "best_possible_position"}, {"score": 0.0025735173163957993, "phrase": "reduced_range_box"}, {"score": 0.002526938673434697, "phrase": "normal_cartographic_preferences"}, {"score": 0.002406799309495983, "phrase": "cartographic_object"}, {"score": 0.0022923586577645143, "phrase": "java_environment"}, {"score": 0.0022508572821818124, "phrase": "open_source_library"}, {"score": 0.0022371907579775796, "phrase": "jts_topology_suite"}, {"score": 0.0021966859554037174, "phrase": "case_study"}, {"score": 0.0021700901058417602, "phrase": "sound_cartographic_results"}, {"score": 0.0021049977753042253, "phrase": "acceptable_computational_efficiency"}], "paper_keywords": ["label placement", " map labelling", " real-time map", " geo-information service"], "paper_abstract": "It is essential to label roads, landmarks, and other important features on maps for mobile applications to help users to understand their location and the environment. This paper aims to examine real-time map labelling methods suitable for the small screen on mobile devices. A slider method with a continuous search space was proposed to sequentially label both line and point features. The method starts with defining a range box for possible locations of the label. Then a search is performed, and the range box is reduced, if there are any cartographic objects that overlap the range box. Finally, the label is placed, at the best possible position in the reduced range box according to normal cartographic preferences, where it does not obscure any cartographic object. We implemented this method in a Java environment using the open source library JTS Topology Suite. A case study showed sound cartographic results of the labelling and acceptable computational efficiency. (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "Real-time map labelling for mobile applications", "paper_id": "WOS:000242792000006"}