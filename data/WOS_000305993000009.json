{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "implicit_object_space_partitioning"}, {"score": 0.004578382275810468, "phrase": "new_data_structure"}, {"score": 0.0044870272550540415, "phrase": "object_space"}, {"score": 0.0038186039088445524, "phrase": "tree_structure"}, {"score": 0.003558294449586273, "phrase": "scene_objects"}, {"score": 0.0033156708990372077, "phrase": "presorting_procedure"}, {"score": 0.002878785759716458, "phrase": "bounding_planes"}, {"score": 0.0025761937402886954, "phrase": "implicit_bounding_plane_representation"}, {"score": 0.0024247382451294255, "phrase": "classic_bounding_volume_hierarchy"}, {"score": 0.0021479597698614373, "phrase": "interactive_frame_rates"}, {"score": 0.0021049977753042253, "phrase": "commodity_hardware"}], "paper_keywords": [""], "paper_abstract": "We present a new data structure for object space partitioning that can be represented completely implicitly. The bounds of each node in the tree structure are recreated at run-time from the scene objects contained therein. By applying a presorting procedure to the geometry, only a known fraction of the geometry is needed to locate the bounding planes of any node. We evaluate the impact of the implicit bounding plane representation and compare our algorithm to a classic bounding volume hierarchy. Though the representation is completely implicit, we still achieve interactive frame rates on commodity hardware.", "paper_title": "Geometry Presorting for Implicit Object Space Partitioning", "paper_id": "WOS:000305993000009"}