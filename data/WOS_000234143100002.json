{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "online_problem"}, {"score": 0.004545240514015278, "phrase": "idle_threads"}, {"score": 0.004416079619543104, "phrase": "application_server"}, {"score": 0.004089239912167375, "phrase": "new_requests"}, {"score": 0.0034392837410790293, "phrase": "future_requests"}, {"score": 0.0033737457695128233, "phrase": "completion_times"}, {"score": 0.003154012038613403, "phrase": "practical_scheme"}, {"score": 0.003093893243443715, "phrase": "barely_random_discrete_algorithms"}, {"score": 0.0026523079380037706, "phrase": "euler's_number"}, {"score": 0.0025767987652419054, "phrase": "competitive_ratio"}, {"score": 0.002251813863195168, "phrase": "well-known_result"}, {"score": 0.0021049977753042253, "phrase": "buy_problem"}], "paper_keywords": ["multithreading", " spin-block problem", " online algorithms", " randomization", " implementation issues"], "paper_abstract": "We study the online problem of holding a number of idle threads on an application server, which we have ready for processing new requests. The problem stems from the fact that both creating/deleting and holding threads is costly, but future requests and completion times are unpredictable. We propose a practical scheme of barely random discrete algorithms with competitive ratio arbitrarily close to e/(e-1), where e approximate to 2.718 is Euler's number. The competitive ratio is sharply concentrated for any input. The results are generalizations of the well-known result for the rent-to-buy problem.", "paper_title": "Multiple spin-block decisions", "paper_id": "WOS:000234143100002"}