{"auto_keywords": [{"score": 0.04492795963065823, "phrase": "recovery_mechanism"}, {"score": 0.040918691207282594, "phrase": "predicted_instruction"}, {"score": 0.03096908870370557, "phrase": "delayed_issue_policy"}, {"score": 0.03012558390911256, "phrase": "non-delayed_issue_policy"}, {"score": 0.0153463762989802, "phrase": "value_speculation"}, {"score": 0.010227381606766955, "phrase": "value-predicted_instruction"}, {"score": 0.004642604455537883, "phrase": "speculative_technique"}, {"score": 0.004549524321051407, "phrase": "execution_time"}, {"score": 0.004061584718427419, "phrase": "speculatively_its_dependent_instructions"}, {"score": 0.0037150687722055727, "phrase": "program_correctness"}, {"score": 0.003685067218455088, "phrase": "previous_works"}, {"score": 0.003210446135114967, "phrase": "issue_time"}, {"score": 0.0029602552900111407, "phrase": "potential_performance_benefits"}, {"score": 0.0025892330566358503, "phrase": "issue_policies"}, {"score": 0.002537216271965659, "phrase": "load-value_prediction"}, {"score": 0.0024963543716522087, "phrase": "address_prediction"}, {"score": 0.002246292543825748, "phrase": "delayed_policy"}, {"score": 0.0022190974300886467, "phrase": "cost-effective_alternative"}, {"score": 0.0021922308351126746, "phrase": "non-delayed_policy"}, {"score": 0.0021569129153653777, "phrase": "realistic_issue-queue_sizes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["speculative execution", " value speculation", " recovery mechanism", " address prediction"], "paper_abstract": "Value speculation is a speculative technique proposed to reduce the execution time of programs. It relies on a predictor, a checker and a recovery mechanism. The predictor predicts the result of an instruction in order to issue speculatively its dependent instructions, the checker checks the prediction after issuing the predicted instruction, and the recovery mechanism deals with mispredictions in order to maintain program correctness. Previous works on value speculation have considered that the instructions dependent on a predicted instruction can be issued before issuing the predicted instruction (non-delayed issue policy). In this work we propose delaying the issue time of the instructions dependent on a value-predicted instruction until issuing the value-predicted instruction (delayed issue policy). Although the potential performance benefits of the delayed issue policy are smaller than that of the non-delayed issue policy, the recovery mechanism required by the delayed issue policy is simpler than the recovery mechanism required by the non-delayed issue policy. We have evaluated both issue policies in the context of load-value prediction by means of address prediction in order to determine in which scenarios the performance of the delayed issue policy is competitive with that of the non-delayed issue policy. Our results show that the delayed policy is a cost-effective alternative to the non-delayed policy, especially for realistic issue-queue sizes. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "A comparison of two policies for issuing instructions speculatively", "paper_id": "WOS:000245331200002"}