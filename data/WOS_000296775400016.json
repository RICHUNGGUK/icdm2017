{"auto_keywords": [{"score": 0.049390246951185, "phrase": "reeb_graph"}, {"score": 0.011187926385670066, "phrase": "critical_points"}, {"score": 0.008713768692145006, "phrase": "reeb_graphs"}, {"score": 0.004677372885331908, "phrase": "scalar_function"}, {"score": 0.0043713857434347254, "phrase": "near-optimal_output-sensitive_algorithm"}, {"score": 0.004287689084613574, "phrase": "reeb"}, {"score": 0.004225950334493496, "phrase": "scalar_functions"}, {"score": 0.0038179283509963695, "phrase": "alternate_definition"}, {"score": 0.0037087324991876727, "phrase": "equivalence_classes"}, {"score": 0.0036730297909962142, "phrase": "level_sets"}, {"score": 0.0036201167891046046, "phrase": "individual_level_sets"}, {"score": 0.00346589179059467, "phrase": "first_step"}, {"score": 0.0030414140732789186, "phrase": "second_step"}, {"score": 0.002997572637726648, "phrase": "simple_search_procedure"}, {"score": 0.002925899335792914, "phrase": "small_subset"}, {"score": 0.0026687841359431105, "phrase": "controlled_simplification"}, {"score": 0.00249386680748172, "phrase": "effective_presentation"}, {"score": 0.002446024708601971, "phrase": "visual_analysis"}, {"score": 0.0024224481033945943, "phrase": "scalar_fields"}, {"score": 0.0021670777282518424, "phrase": "interval_volumes"}, {"score": 0.0021049977753042253, "phrase": "time-varying_data"}], "paper_keywords": ["Computational topology", " scalar functions", " Reeb graphs", " level set topology", " simplification", " graph layout"], "paper_abstract": "The Reeb graph of a scalar function represents the evolution of the topology of its level sets. This paper describes a near-optimal output-sensitive algorithm for computing the Reeb graph of scalar functions defined over manifolds or non-manifolds in any dimension. Key to the simplicity and efficiency of the algorithm is an alternate definition of the Reeb graph that considers equivalence classes of level sets instead of individual level sets. The algorithm works in two steps. The first step locates all critical points of the function in the domain. Critical points correspond to nodes in the Reeb graph. Arcs connecting the nodes are computed in the second step by a simple search procedure that works on a small subset of the domain that corresponds to a pair of critical points. The paper also describes a scheme for controlled simplification of the Reeb graph and two different graph layout schemes that help in the effective presentation of Reeb graphs for visual analysis of scalar fields. Finally, the Reeb graph is employed in four different applications-surface segmentation, spatially-aware transfer function design, visualization of interval volumes, and interactive exploration of time-varying data.", "paper_title": "Output-Sensitive Construction of Reeb Graphs", "paper_id": "WOS:000296775400016"}