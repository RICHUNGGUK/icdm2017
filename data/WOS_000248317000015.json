{"auto_keywords": [{"score": 0.036760020611178404, "phrase": "memory_unit"}, {"score": 0.00481495049065317, "phrase": "galois_fields"}, {"score": 0.0046741260449047976, "phrase": "scalability_features"}, {"score": 0.004628101576367193, "phrase": "modular_inversion"}, {"score": 0.0045599093158915326, "phrase": "fundamental_process"}, {"score": 0.004254671386496732, "phrase": "hardware_computation"}, {"score": 0.003911253966141701, "phrase": "old_scalable_inversion_hardware_architecture"}, {"score": 0.003815607281455725, "phrase": "finite_field"}, {"score": 0.003371220210416809, "phrase": "computing_unit"}, {"score": 0.0032241994368246065, "phrase": "word_bases"}, {"score": 0.00308357048262018, "phrase": "main_objective"}, {"score": 0.0026839922027139967, "phrase": "scalable_computing_unit"}, {"score": 0.0025924443774713473, "phrase": "entire_hardware_architecture"}, {"score": 0.002516457934208144, "phrase": "scalable_computing_part"}, {"score": 0.002442693254693416, "phrase": "non-scalable_memory_unit"}, {"score": 0.0023130151703068444, "phrase": "complete_inversion_process"}, {"score": 0.002278856202878812, "phrase": "area_increase"}, {"score": 0.002234092591045251, "phrase": "new_memory"}, {"score": 0.0021049977753042253, "phrase": "complete_picture"}], "paper_keywords": [""], "paper_abstract": "Modular inversion is a fundamental process in several cryptographic systems. It can be computed in software or hardware, but hardware computation has been proven to be faster and more secure. This research focused on improving an old scalable inversion hardware architecture proposed in 2004 for finite field GF(p). The architecture comprises two parts, a computing unit and a memory unit. The memory unit holds all the data bits of computation whereas the computing unit performs all the arithmetic operations in word (digit) by word bases such that the design is scalable. The main objective of this paper is to show the cost and benefit of modifying the memory unit to include shifting, which was previously one of the tasks of the scalable computing unit. The study included remodeling the entire hardware architecture removing the shifter from the scalable computing part and embedding it in the non-scalable memory unit instead. This modification resulted in a speedup to the complete inversion process with an area increase due to the new memory shifting unit. Several design schemes have been compared giving the user the complete picture to choose from depending on the application need.", "paper_title": "High speed hardware architecture to compute galois fields GF(p) montgomery inversion with scalability features", "paper_id": "WOS:000248317000015"}