{"auto_keywords": [{"score": 0.03317679677856879, "phrase": "laga"}, {"score": 0.015719716506582538, "phrase": "workflow_applications"}, {"score": 0.015406467438744015, "phrase": "look-ahead_genetic_algorithm"}, {"score": 0.010082508864514924, "phrase": "rd_reputation"}, {"score": 0.007499885434049038, "phrase": "better_solutions"}, {"score": 0.00462291551375938, "phrase": "large-scale_distributed_systems"}, {"score": 0.004456611869693865, "phrase": "reliable_scheduling"}, {"score": 0.004226856126282259, "phrase": "reliability_evaluation"}, {"score": 0.004175533280178052, "phrase": "critical_influence"}, {"score": 0.004141663280057689, "phrase": "task_runtime"}, {"score": 0.004025258572860201, "phrase": "list_heuristics"}, {"score": 0.003848886045448135, "phrase": "genetic_algorithms"}, {"score": 0.0032434583977423996, "phrase": "widely_distributed_systems"}, {"score": 0.0029652292779277782, "phrase": "workflow_application"}, {"score": 0.0028935680100446583, "phrase": "novel_evolution"}, {"score": 0.002870066750788841, "phrase": "evaluation_mechanism"}, {"score": 0.0028006988338192375, "phrase": "evolution_operators"}, {"score": 0.0027666443986705453, "phrase": "task-resource_mapping"}, {"score": 0.0027330029055210926, "phrase": "scheduling_solution"}, {"score": 0.00266693888510356, "phrase": "evaluation_step"}, {"score": 0.002634506575564286, "phrase": "task_order"}, {"score": 0.002529213370528279, "phrase": "first_two-phase_strategy"}, {"score": 0.002265422518417868, "phrase": "existing_list_heuristics"}, {"score": 0.0021659920594094407, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Reliability", " Reputation", " Workflow scheduling", " Genetic algorithm", " Heuristic"], "paper_abstract": "For applications in large-scale distributed systems, it is becoming increasingly important to provide reliable scheduling by evaluating the reliability of resources. However, most existing reputation models used for reliability evaluation ignore the critical influence of task runtime. In addition, most previous work uses list heuristics to optimize the makespan and reliability of workflow applications instead of genetic algorithms (GAs), which can give several satisfying solutions for choice. Hence, in this paper, we first propose the reliability-driven (RD) reputation, which is time dependent, and can be used to effectively evaluate the reliability of a resource in widely distributed systems. We then propose a look-ahead genetic algorithm (LAGA) which utilizes the RD reputation to optimize both the makespan and the reliability of a workflow application. The LAGA uses a novel evolution and evaluation mechanism: (i) the evolution operators evolve the task-resource mapping of a scheduling solution and (ii) the evaluation step determines the task order of solutions by using our proposed max-min strategy, which is the first two-phase strategy that can work with GAs. Our experiments show that the RD reputation improves the reliability of an application with more accurate reputations, while the LAGA provides better solutions than existing list heuristics and evolves to better solutions more quickly than a traditional GA. Crown Copyright (C) 2011 Published by Elsevier B.V. All rights reserved.", "paper_title": "Optimizing the makespan and reliability for workflow applications with reputation and a look-ahead genetic algorithm", "paper_id": "WOS:000294521200013"}