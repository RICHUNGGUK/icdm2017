{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large_scale_infrastructures"}, {"score": 0.004625881588444304, "phrase": "high_speed"}, {"score": 0.004444203710097837, "phrase": "information_services"}, {"score": 0.004248294537944227, "phrase": "data-intensive_computing_gain"}, {"score": 0.004101886428528311, "phrase": "highly_scalable_infrastructures"}, {"score": 0.004020492138367616, "phrase": "cloud_computing"}, {"score": 0.00396050388346298, "phrase": "petascale_computing"}, {"score": 0.0038624981944755813, "phrase": "additional_issues"}, {"score": 0.0038048583022763796, "phrase": "scalable_data_management"}, {"score": 0.0037480753312398754, "phrase": "immediate_need"}, {"score": 0.003441891354624516, "phrase": "highly_scalable_distributed_storage_systems"}, {"score": 0.003356675879109443, "phrase": "heavy_data_access_concurrency"}, {"score": 0.0032246835734680377, "phrase": "potentially_large_benefits"}, {"score": 0.0029169007179202164, "phrase": "versioning_algorithms"}, {"score": 0.0027602925235474317, "phrase": "high_throughput"}, {"score": 0.0025730425700096365, "phrase": "blobseer_prototype"}, {"score": 0.0024842242921857705, "phrase": "storage_backend"}, {"score": 0.002447101794397243, "phrase": "hadoop_mapreduce_framework"}, {"score": 0.002398464540102246, "phrase": "extensive_microbenchmarks"}, {"score": 0.002327310963701377, "phrase": "real_mapreduce_applications"}, {"score": 0.0021912600076114033, "phrase": "substantial_benefits"}, {"score": 0.0021693692831601745, "phrase": "data_intensive_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Data intensive applications", " Data management", " High throughput", " Versioning", " Concurrency", " Decentralized metadata management", " BlobSeer", " MapReduce"], "paper_abstract": "As data volumes increase at a high speed in more and more application fields of science, engineering, information services, etc., the challenges posed by data-intensive computing gain increasing importance. The emergence of highly scalable infrastructures, e.g. for cloud computing and for petascale computing and beyond, introduces additional issues for which scalable data management becomes an immediate need. This paper makes several contributions. First, it proposes a set of principles for designing highly scalable distributed storage systems that are optimized for heavy data access concurrency. In particular, we highlight the potentially large benefits of using versioning in this context. Second, based on these principles, we propose a set of versioning algorithms, both for data and metadata, that enable a high throughput under concurrency. Finally, we implement and evaluate these algorithms in the BlobSeer prototype, that we integrate as a storage backend in the Hadoop MapReduce framework. We perform extensive microbenchmarks as well as experiments with real MapReduce applications: they demonstrate that applying the principles defended in our approach brings substantial benefits to data intensive applications. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "BlobSeer: Next-generation data management for large scale infrastructures", "paper_id": "WOS:000286363900004"}