{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "poem."}, {"score": 0.004506968388996092, "phrase": "trace_theory"}, {"score": 0.004360412703519539, "phrase": "new_model"}, {"score": 0.004265354774450696, "phrase": "tool_framework"}, {"score": 0.003948613642680196, "phrase": "strong_emphasis"}, {"score": 0.0038624981944755813, "phrase": "partial_order_methods"}, {"score": 0.00373682045166829, "phrase": "tree_structure"}, {"score": 0.003536346954940087, "phrase": "trace_systems"}, {"score": 0.0033465923623290034, "phrase": "common_prefixes"}, {"score": 0.003132236287543072, "phrase": "memory_cost"}, {"score": 0.00280496585980086, "phrase": "additional_features"}, {"score": 0.0024569466759289055, "phrase": "new_adequate_order"}, {"score": 0.00240328454980006, "phrase": "local_first_search"}, {"score": 0.0022492129111567824, "phrase": "event_zone"}, {"score": 0.0021049977753042253, "phrase": "timed_automata"}], "paper_keywords": [""], "paper_abstract": "We present the implementation of trace theory in a new model checking tool framework, POEM, that has a strong emphasis on Partial Order Methods. A tree structure is used to store trace systems, which allows sharing common prefixes among traces and therefore reduces memory cost. This structure is easy to extend to incorporate additional features. Two applications are shown in the paper: An extended structure to support a new adequate order for Local First Search, and an acceleration of event zone based state space search for timed automata.", "paper_title": "The implementation of Mazurkiewicz traces in POEM", "paper_id": "WOS:000241648200037"}