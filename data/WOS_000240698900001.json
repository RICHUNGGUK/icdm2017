{"auto_keywords": [{"score": 0.00481565684792831, "phrase": "bandwidth"}, {"score": 0.004738325072560588, "phrase": "string_reconciliation"}, {"score": 0.00455202992136173, "phrase": "considerable_interest"}, {"score": 0.004234884779773412, "phrase": "correlated_data"}, {"score": 0.004167451906343558, "phrase": "minimum_communication"}, {"score": 0.0037847308929559163, "phrase": "different_hosts"}, {"score": 0.003301733505307784, "phrase": "known_multiset_reconciliation_algorithms"}, {"score": 0.003071429173571846, "phrase": "remote_host"}, {"score": 0.002974281028713475, "phrase": "graph_theory"}, {"score": 0.0026577673946415583, "phrase": "communication_complexity"}, {"score": 0.0025736694380861604, "phrase": "high-entropy_data"}, {"score": 0.0024922258873137093, "phrase": "existing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "computation_complexity"}], "paper_keywords": ["efficient file synchronization", " string reconstruction", " rsync"], "paper_abstract": "Of considerable interest in recent years has been the problem of exchanging correlated data with minimum communication. We thus consider the problem of exchanging two similar strings held by different hosts. Our approach involves transforming a string into a multiset of substrings that are reconciled efficiently using known multiset reconciliation algorithms, and then put back together on a remote host using tools from graph theory. We present analyses, experiments, and results to show that the communication complexity of our approach for high-entropy data compares favorably to existing algorithms including rsync, a widely-used string reconciliation engine. We also quantify the trade-off between communication and the computation complexity of our approach.", "paper_title": "Bandwidth efficient string reconciliation using puzzles", "paper_id": "WOS:000240698900001"}