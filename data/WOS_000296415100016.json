{"auto_keywords": [{"score": 0.04269803168773222, "phrase": "instantiation_process"}, {"score": 0.03326618079296328, "phrase": "reusetool"}, {"score": 0.00481495049065317, "phrase": "reuse_tool-an"}, {"score": 0.00478740563679966, "phrase": "extensible_tool_support"}, {"score": 0.004732785510739708, "phrase": "object-oriented_framework_reuse"}, {"score": 0.004678785623021003, "phrase": "object-oriented_frameworks"}, {"score": 0.0045726187330434025, "phrase": "popular_paradigm"}, {"score": 0.004443276312972159, "phrase": "software_development_lifecycle"}, {"score": 0.004243862930012258, "phrase": "semi-complete_architecture"}, {"score": 0.003916098498242888, "phrase": "new_software_application"}, {"score": 0.0038713805573219297, "phrase": "instantiation_processes"}, {"score": 0.0037402558657576124, "phrase": "ad-hoc_manner"}, {"score": 0.003613556291453534, "phrase": "tedious_and_error-prone_procedures"}, {"score": 0.0034118249820597256, "phrase": "rdl"}, {"score": 0.003058944053868522, "phrase": "extensible_tool"}, {"score": 0.003006654007926993, "phrase": "rdl_programs"}, {"score": 0.0029552551661591988, "phrase": "framework_reuse"}, {"score": 0.00290473242917264, "phrase": "uml_diagrams"}, {"score": 0.002806256131739047, "phrase": "rdl_compiler"}, {"score": 0.002574387911697005, "phrase": "framework_design"}, {"score": 0.002487083025913648, "phrase": "application-specific_needs"}, {"score": 0.002294686545883412, "phrase": "new_reuse_activities"}, {"score": 0.0021789194955896124, "phrase": "exploratory_case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["UML", " Object-oriented framework", " Software process", " Software reuse"], "paper_abstract": "Object-oriented frameworks have become a popular paradigm used to improve the software development lifecycle. They promote reuse by providing a semi-complete architecture that can be extended through an instantiation process to integrate the needs of the new software application. Instantiation processes are typically enacted in an ad-hoc manner, which may lead to tedious and error-prone procedures. This work leverages our previous work on the definition of RDL, a language to facilitate the description of instantiation process, and describe the ReuseTool, which is an extensible tool to execute RDL programs and assist framework reuse by manipulating UML Diagrams. The ReuseTool integrates a RDL Compiler and a Workflow Engine to control most of the activities required to extend a framework design and, therefore, incorporates application-specific needs. This work also describes how the tool can be extended to incorporate new reuse activities and provides information of its use based on an exploratory Case Study. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Reuse Tool-An extensible tool support for object-oriented framework reuse", "paper_id": "WOS:000296415100016"}