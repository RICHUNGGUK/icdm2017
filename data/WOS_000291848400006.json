{"auto_keywords": [{"score": 0.031885643417955634, "phrase": "miod"}, {"score": 0.0048189250904820645, "phrase": "interface"}, {"score": 0.004598933498016774, "phrase": "compositional_approach"}, {"score": 0.004536029676655286, "phrase": "concurrent_behavior"}, {"score": 0.004453488286477661, "phrase": "data_states"}, {"score": 0.004352411290383643, "phrase": "interface_theories"}, {"score": 0.0042928648367867835, "phrase": "dynamic_aspects"}, {"score": 0.0041001740903338834, "phrase": "changing_data_states"}, {"score": 0.003757480190200645, "phrase": "data_constraints"}, {"score": 0.003555902292752528, "phrase": "behavioral_compatibility"}, {"score": 0.0033037970113095577, "phrase": "compositional_w.r.t"}, {"score": 0.0031991799574455555, "phrase": "basic_requirements"}, {"score": 0.0031553611552558986, "phrase": "interface_theory"}, {"score": 0.003083655376444887, "phrase": "semantic_foundation"}, {"score": 0.0030554300179552415, "phrase": "interface_specifications"}, {"score": 0.002945081009084692, "phrase": "model-theoretic_semantics"}, {"score": 0.002723607240517261, "phrase": "correctness_notion"}, {"score": 0.0026616868981501006, "phrase": "simulation_relation"}, {"score": 0.0025892330566358503, "phrase": "implementation_model"}, {"score": 0.002276283303864666, "phrase": "implementation_models"}, {"score": 0.002255431275670053, "phrase": "compatible_miods"}, {"score": 0.002163930783583212, "phrase": "independent_implementability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Component-based design", " Interface theory", " Modal input/output automata", " Pre- and postcondition", " Compositionality", " Refinement", " Compatibility"], "paper_abstract": "We present a compositional approach for specifying concurrent behavior of components with data states on the basis of interface theories. The dynamic aspects of a system are specified by modal input/output automata, whereas changing data states are specified by pre- and postconditions. The combination of the two formalisms leads to our notion of modal input/output automata with data constraints (MIODs). In this setting we study refinement and behavioral compatibility of MIODs. We show that compatibility is preserved by refinement and that refinement is compositional w.r.t. synchronous composition, thus satisfying basic requirements of an interface theory. We propose a semantic foundation of interface specifications where any MIOD is equipped with a model-theoretic semantics describing the class of its correct implementation models. Implementation models are formalized in terms of guarded input/output transition systems and the correctness notion is based on a simulation relation between an MIOD and an implementation model which relates not only abstract and concrete control states but also (abstract) data constraints and concrete data states. We show that our approach is compositional in the sense that locally correct implementation models of compatible MIODs compose to globally correct implementations, thus ensuring independent implementability. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Interface theories for concurrency and data", "paper_id": "WOS:000291848400006"}