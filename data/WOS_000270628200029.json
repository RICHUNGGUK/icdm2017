{"auto_keywords": [{"score": 0.04539121663975295, "phrase": "neural_networks"}, {"score": 0.04023566986468642, "phrase": "distributed_program"}, {"score": 0.03990535235564148, "phrase": "test_data"}, {"score": 0.035945225830176515, "phrase": "windows"}, {"score": 0.027389496620203027, "phrase": "exponential_neurons"}, {"score": 0.00481495049065317, "phrase": "sparse_multidimensional_data"}, {"score": 0.004787595063253874, "phrase": "low-dimensional_terms"}, {"score": 0.004693063440166313, "phrase": "continuous_function"}, {"score": 0.004653120760786245, "phrase": "multidimensional_data"}, {"score": 0.0044967055264893184, "phrase": "lower-dimensional_component_functions"}, {"score": 0.004420472010542188, "phrase": "automated_way"}, {"score": 0.0043703658695579085, "phrase": "dimensionality_reduction"}, {"score": 0.004271843728776305, "phrase": "component_functions"}, {"score": 0.0042257830411538905, "phrase": "program"}, {"score": 0.004187452827599427, "phrase": "rs_hdmr_nn_catalogue"}, {"score": 0.004046627438964482, "phrase": "cpc_program_library"}, {"score": 0.004023619476547389, "phrase": "queen's_university"}, {"score": 0.004000742399970269, "phrase": "belfast"}, {"score": 0.003977993693395208, "phrase": "n._ireland"}, {"score": 0.003932883240257402, "phrase": "standard_cpc"}, {"score": 0.003439687347025891, "phrase": "matlab"}, {"score": 0.0034297140422566577, "phrase": "operating_system"}, {"score": 0.0033428510508648817, "phrase": "linux"}, {"score": 0.0033048857936294543, "phrase": "external"}, {"score": 0.0032766780632972363, "phrase": "neural_network_toolbox_version"}, {"score": 0.0028735797685358, "phrase": "solution_method"}, {"score": 0.0028490783932465288, "phrase": "multivariate_function"}, {"score": 0.002784755056588371, "phrase": "small_number"}, {"score": 0.0027218799769229596, "phrase": "low-dimensional_function"}, {"score": 0.002675654549462983, "phrase": "optimal_coordinates"}, {"score": 0.002527150892127982, "phrase": "general_and_robust_method"}, {"score": 0.002505595895866397, "phrase": "functional_form"}, {"score": 0.002286781334850213, "phrase": "approximating_function"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Neural networks", " High-dimensional model representation", " Functional approximation", " Fitting and interpolation"], "paper_abstract": "An algorithm that fits a continuous function to sparse multidimensional data is presented. The algorithm uses a representation in terms of lower-dimensional component functions of coordinates defined in an automated way and also permits dimensionality reduction. Neural networks are used to construct the component functions. Program summary Program title: RS_HDMR_NN Catalogue identifier. AEEI_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEEI_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: Standard CPC licence. http://cpc.cs.qub.ac.uk/licence/licence.html No. of lines in distributed program, including test data, etc.: 19 566 No. of bytes in distributed program, including test data, etc.: 327 856 Distribution format. tar.gz Programming language: MatLab R2007b Computer: any computer running MatLab Operating system: Windows XR Windows Vista, UNIX, Linux Classification: 4.9 External routines: Neural Network Toolbox Version 5.1 (R2007b) Nature of problem: Fitting a smooth, easily integratable and differentiatable, function to a very sparse (similar to 2-3 points per dimension) multidimensional (D >= 6) large (similar to 10(4)-10(5) data) dataset. Solution method: A multivariate function is represented as a sum of a small number of terms each of which is a low-dimensional function of optimised coordinates. The optimal coordinates reduce both the dimensionality and the number of the terms. Neural networks (including exponential neurons) are used to obtain a general and robust method and a functional form which is easily differentiated and integrated (in the case of exponential neurons). Running time: Depends strongly on the dataset to be modelled and the chosen structure of the approximating function, ranges from about a minute for similar to 10(3) data in 3-D to about a day for similar to 10(5) data in 15-D. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Fitting sparse multidimensional data with low-dimensional terms", "paper_id": "WOS:000270628200029"}