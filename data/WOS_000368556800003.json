{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "elsevier"}, {"score": 0.00481495049065317, "phrase": "space_usage"}, {"score": 0.004721162131188487, "phrase": "interpretation_analysis"}, {"score": 0.004674952036988355, "phrase": "interpretation_methods"}, {"score": 0.00462919213721188, "phrase": "important_tools"}, {"score": 0.004583878086896926, "phrase": "implicit_computational_complexity"}, {"score": 0.003802135020791801, "phrase": "finite_data"}, {"score": 0.003479692058963528, "phrase": "lazy_first-order_functional_programs"}, {"score": 0.003312486229143855, "phrase": "interpretation_criteria"}, {"score": 0.0032160319265621285, "phrase": "stream_properties"}, {"score": 0.003016544840824688, "phrase": "global_and_local_upper_bounds"}, {"score": 0.002928682556953258, "phrase": "output_stream_element"}, {"score": 0.002843372121209168, "phrase": "maximal_size"}, {"score": 0.0028016507334576216, "phrase": "input_stream_elements"}, {"score": 0.0025892330566358503, "phrase": "input_stream"}, {"score": 0.0024768883044869023, "phrase": "output_stream"}, {"score": 0.0023694065215394593, "phrase": "first_step"}, {"score": 0.002255431275670053, "phrase": "interpretation_properties"}, {"score": 0.0022223176391038785, "phrase": "space_safety_properties"}], "paper_keywords": ["Stream programs", " Interpretations", " Program space usage", " Lazy languages", " Implicit computational complexity"], "paper_abstract": "Interpretation methods are important tools in implicit computational complexity. They have been proved particularly useful to statically analyze and to limit the complexity of programs. However, most of these studies have been so far applied in the context of term rewriting systems over finite data. In this paper, we show how interpretations can also be used to study properties of lazy first-order functional programs over streams. In particular, we provide some interpretation criteria useful to ensure two kinds of stream properties: space upper bounds and input/output upper bounds. Our space upper bounds criteria ensure global and local upper bounds on the size of each output stream element expressed in terms of the maximal size of the input stream elements. The input/output upper bounds criteria consider instead the relations between the number of elements read from the input stream and the number of elements produced on the output stream. This contribution can be seen as a first step in the development of a methodology aiming at using interpretation properties to ensure space safety properties of programs working on streams. (C) 2015 Elsevier BM. All rights reserved.", "paper_title": "On bounding space usage of streams using interpretation analysis", "paper_id": "WOS:000368556800003"}