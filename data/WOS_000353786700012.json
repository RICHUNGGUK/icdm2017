{"auto_keywords": [{"score": 0.039710685336977386, "phrase": "compute_nodes"}, {"score": 0.032113041836864406, "phrase": "intra-node_mapping"}, {"score": 0.00481495049065317, "phrase": "parallel_applications"}, {"score": 0.004376131419366239, "phrase": "interconnect_network"}, {"score": 0.004327196832280818, "phrase": "topology-aware_task_mapping"}, {"score": 0.004067635935640407, "phrase": "communication_cost"}, {"score": 0.003932654396285872, "phrase": "previous_works"}, {"score": 0.003823584649521733, "phrase": "task_mapping"}, {"score": 0.003140004304719746, "phrase": "hierarchical_task_mapping_strategy"}, {"score": 0.00293487292076612, "phrase": "popular_fat-tree"}, {"score": 0.0029020077365708966, "phrase": "torus_network_topologies"}, {"score": 0.0025928815987676535, "phrase": "inter-node_mapping"}, {"score": 0.0023035922232490106, "phrase": "hierarchical_task_mapping_library"}, {"score": 0.0022522565004588113, "phrase": "experimental_results"}, {"score": 0.0022020622730208514, "phrase": "proposed_approach"}, {"score": 0.0021529842700733974, "phrase": "communication_performance"}, {"score": 0.0021049977753042253, "phrase": "low_runtime_overhead"}], "paper_keywords": ["Topology-aware task mapping", " Hierarchical task mapping", " Parallel applications", " Communication optimization", " Fat-tree network", " Torus network"], "paper_abstract": "As the scale of supercomputers grows, so does the size of the interconnect network. Topology-aware task mapping, which maps parallel application processes onto processors to reduce communication cost, becomes increasingly important. Previous works mainly focus on the task mapping between compute nodes (i.e., inter-node mapping), while ignoring the mapping within a node (i.e., intra-node mapping). In this paper, we propose a hierarchical task mapping strategy, which performs both inter-node and intra-node mapping. We consider supercomputers with popular fat-tree and torus network topologies, and introduce two mapping algorithms: (1) a generic recursive tree mapping algorithm, which can handle both inter-node mapping and intra-node mapping; (2) a recursive bipartitioning mapping algorithm for torus topology, which efficiently partitions the compute nodes according to their coordinates. Moreover, a hierarchical task mapping library is developed. Experimental results show that the proposed approach significantly improves the communication performance by up to 77 % with low runtime overhead.", "paper_title": "Hierarchical task mapping for parallel applications on supercomputers", "paper_id": "WOS:000353786700012"}