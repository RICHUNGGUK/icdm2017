{"auto_keywords": [{"score": 0.0413551327245117, "phrase": "roi_segmentation"}, {"score": 0.015719716506582538, "phrase": "system_level_design"}, {"score": 0.004307286039184164, "phrase": "important_applications"}, {"score": 0.004267468074128779, "phrase": "content-based_processing"}, {"score": 0.004054931951058077, "phrase": "relatively_little_work"}, {"score": 0.003888905257972882, "phrase": "implementation_consideration"}, {"score": 0.003747020072136732, "phrase": "edge-based_roi_segmentation"}, {"score": 0.0036271080216837286, "phrase": "overall_system_performance"}, {"score": 0.003543804852018315, "phrase": "computationally_efficient_algorithm"}, {"score": 0.003367188029221534, "phrase": "algorithm_level_development"}, {"score": 0.00321425262806329, "phrase": "single_board_platform_system"}, {"score": 0.003096905353118796, "phrase": "hybrid_architecture"}, {"score": 0.0030398432591176357, "phrase": "associating_synchronous_modules"}, {"score": 0.0030117065110966414, "phrase": "asynchronous_modules"}, {"score": 0.0029838294169759663, "phrase": "detailed_task_partitions"}, {"score": 0.0028350413546400703, "phrase": "visualization_modules"}, {"score": 0.0028087949095629955, "phrase": "video_stream_input"}, {"score": 0.002744234034162797, "phrase": "transition_module"}, {"score": 0.0027188259793109264, "phrase": "video_format_transformation"}, {"score": 0.0026687115458522326, "phrase": "dsp_processing_module"}, {"score": 0.0025474193855847074, "phrase": "optimization_techniques"}, {"score": 0.002523828967909659, "phrase": "fixed-point_arithmetic"}, {"score": 0.0024543571925896073, "phrase": "parallel_processing"}, {"score": 0.002375714262344562, "phrase": "dynamic_natural_environment"}, {"score": 0.0023427844897844093, "phrase": "proposed_system"}, {"score": 0.002310322483427744, "phrase": "roi"}, {"score": 0.002267708463966758, "phrase": "run-time_results"}, {"score": 0.002195033004022173, "phrase": "qcif_format"}, {"score": 0.0021049977753042253, "phrase": "content-based_applications"}], "paper_keywords": ["Region-of-interest", " Edge detection", " Motion detection", " DSP", " System level design", " Real-time"], "paper_abstract": "Region-of-interested (ROI) segmentation is one of the important applications in content-based processing. Although much work has been done in this area, relatively little work has been reported to the ROI segmentation with an implementation consideration. This paper presents a system level design with edge-based ROI segmentation. In order to improve the overall system performance, we propose a computationally efficient algorithm to reduce the complexity in segmentation. Based on the algorithm level development, we put more efforts on the realization with a single board platform system. The system is based on the hybrid architecture, including the associating synchronous modules and asynchronous modules. Detailed task partitions are well scheduled. The system integrates the acquisition and visualization modules for video stream input and output, the transition module for video format transformation, and the DSP processing module for ROI segmentation. We also present a number of optimization techniques in fixed-point arithmetic, memory usage, data transfer and parallel processing. Experiments are performed in the dynamic natural environment. The proposed system can segment ROI well. The run-time results achieve 66 images per second on QCIF format and validate the perspective of using ROI segmentation in content-based applications.", "paper_title": "System Level Design and Implementation for Region-of-Interest Segmentation", "paper_id": "WOS:000287669200008"}