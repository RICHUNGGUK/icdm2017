{"auto_keywords": [{"score": 0.04811643643051334, "phrase": "cia"}, {"score": 0.0065031666867181375, "phrase": "cia_techniques"}, {"score": 0.00481495049065317, "phrase": "code-based_change"}, {"score": 0.004690694501758065, "phrase": "software_change"}, {"score": 0.004666228956744244, "phrase": "impact_analysis"}, {"score": 0.0038049789989278463, "phrase": "code-based_cia_techniques"}, {"score": 0.003355717283753749, "phrase": "empirical_evaluation"}, {"score": 0.0030538300202383106, "phrase": "comparative_framework"}, {"score": 0.0030220049006970317, "phrase": "seven_properties"}, {"score": 0.0028828348726682965, "phrase": "key_applications"}, {"score": 0.002823050755743821, "phrase": "software_maintenance"}, {"score": 0.0025824576209656676, "phrase": "existing_cia_techniques"}, {"score": 0.002542174767860791, "phrase": "new_cia_techniques"}, {"score": 0.0025025186963415, "phrase": "proposed_framework"}, {"score": 0.002387214876538434, "phrase": "current_cia_techniques"}, {"score": 0.0023499703712897293, "phrase": "unified_metrics"}, {"score": 0.0023254633298356894, "phrase": "common_benchmarks"}, {"score": 0.002183684303511462, "phrase": "software_maintenance_phase"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["change impact analysis", " survey", " source code", " application"], "paper_abstract": "Software change impact analysis (CIA) is a technique for identifying the effects of a change, or estimating what needs to be modified to accomplish a change. Since the 1980s, there have been many investigations on CIA, especially for code-based CIA techniques. However, there have been very few surveys on this topic. This article tries to fill this gap. And 30 papers that provide empirical evaluation on 23 code-based CIA techniques are identified. Then, data was synthesized against four research questions. The study presents a comparative framework including seven properties, which characterize the CIA techniques, and identifies key applications of CIA techniques in software maintenance. In addition, the need for further research is also presented in the following areas: evaluating existing CIA techniques and proposing new CIA techniques under the proposed framework, developing more mature tools to support CIA, comparing current CIA techniques empirically with unified metrics and common benchmarks, and applying the CIA more extensively and effectively in the software maintenance phase. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "A survey of code-based change impact analysis techniques", "paper_id": "WOS:000326968900003"}