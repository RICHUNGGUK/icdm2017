{"auto_keywords": [{"score": 0.04313883532031361, "phrase": "sos"}, {"score": 0.008713706657495771, "phrase": "wireless_sensor_networks"}, {"score": 0.008576888676930286, "phrase": "unique_characteristics"}, {"score": 0.005163725574418709, "phrase": "erase_counters"}, {"score": 0.005050174465830791, "phrase": "flash_memory"}, {"score": 0.004664352260912174, "phrase": "sensor_network"}, {"score": 0.004461359547152617, "phrase": "power_source"}, {"score": 0.004321772629297024, "phrase": "sos_kernel"}, {"score": 0.004146791234307539, "phrase": "hot-swapping_capability"}, {"score": 0.003916098498242888, "phrase": "hot-swapping_procedure"}, {"score": 0.0038789122930433305, "phrase": "online_process"}, {"score": 0.0038420778359143917, "phrase": "execution_state"}, {"score": 0.003805591825381666, "phrase": "old_module"}, {"score": 0.0037217945534790903, "phrase": "new_module"}, {"score": 0.003663067281537946, "phrase": "interface_changes"}, {"score": 0.0035146616294377386, "phrase": "kernel_modules"}, {"score": 0.0032253056091816495, "phrase": "reprogramming_cost"}, {"score": 0.003204841443605308, "phrase": "sensor_nodes"}, {"score": 0.0030847461428168614, "phrase": "system_call_performance"}, {"score": 0.003026391655379905, "phrase": "access_results"}, {"score": 0.002997628439369723, "phrase": "system_call_jump_table"}, {"score": 0.002931569771634119, "phrase": "first-fit_flash_memory_allocation_scheme"}, {"score": 0.0028127163745564777, "phrase": "memory_traffic"}, {"score": 0.0023683286031958538, "phrase": "application_modules"}, {"score": 0.002338344706059989, "phrase": "negligible_overhead"}, {"score": 0.0022940774859444724, "phrase": "application_module"}, {"score": 0.0021593396036472777, "phrase": "system_call_invocation_overhead"}], "paper_keywords": ["hot-swapping", " reprogramming", " dynamic software update", " linking", " SOS", " operating systems", " wireless sensor networks"], "paper_abstract": "Wireless sensor networks enjoy some unique characteristics. For example, sensor network are often autonomous, long-lived and rely on battery as the power source. In this paper, we thus improve the SOS kernel to address these unique characteristics. Firstly, we design and implement the hot-swapping capability in SOS that allows a module to be upgraded on the fly. In our system, the hot-swapping procedure is an online process and the execution state of the old module can be properly transferred to the new module. We also allow interface changes during hot-swapping. Moreover, we enable hot-swapping of not only application modules but also kernel modules. Finally, our hot-swapping procedure is lightweight in that, during hot-swapping, the job of module-linking is offloaded to the server to reduce the reprogramming cost in sensor nodes. In addition to supporting hot-swapping, we also enhance the system call performance in SOS by caching the access results of the system call jump table. Furthermore, we replace the first-fit flash memory allocation scheme in SOS by a technique that relies on erase counters to evenly distribute memory traffic around the flash memory. Moreover, the maintenance of erase counters of each block is also offloaded to the server. We have implemented our system on the Mica2 mote. Evaluations reveal that our kernel can effectively improve the performance of SOS by the above three mechanisms. For example, we support hot-swapping of both kernel and application modules while incurring a negligible overhead. Hot-swapping an application module with a size of 2.5 Kbytes can be done within 160 processor cycles. In addition, we also reduce the system call invocation overhead in SOS by about 15%. Finally, our new flash allocation scheme allows flash blocks to be erased more evenly to prolong the lifetime of flash memory.", "paper_title": "An Online Reprogrammable Operating System for Wireless Sensor Networks", "paper_id": "WOS:000286692500018"}