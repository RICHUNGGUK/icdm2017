{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "breakpoint_phylogeny"}, {"score": 0.004770211811866158, "phrase": "maximum_parsimony_phylogenetic_tree_reconstruction"}, {"score": 0.004638462976078815, "phrase": "breakpoint_median"}, {"score": 0.00436530211426514, "phrase": "bounded_edge-weight_graph_model"}, {"score": 0.004264558080356621, "phrase": "breakpoint_median_problem"}, {"score": 0.004166129325245761, "phrase": "multiple_instances"}, {"score": 0.004108161406159407, "phrase": "traveling_salesman_problem"}, {"score": 0.003957477564354679, "phrase": "classical_np-complete_problem"}, {"score": 0.0038661089070527424, "phrase": "exponential_time_algorithms"}, {"score": 0.003812299519486331, "phrase": "efficient_runtime_heuristics"}, {"score": 0.003570889780957037, "phrase": "search_space"}, {"score": 0.0034884297748615616, "phrase": "tsp."}, {"score": 0.003329117824699891, "phrase": "performance_evaluation"}, {"score": 0.003237112959941731, "phrase": "tsp"}, {"score": 0.0031919592786945126, "phrase": "bounded_edge-weight_model"}, {"score": 0.002989714021608139, "phrase": "fine-grain_parallelism"}, {"score": 0.002948066398723126, "phrase": "multiple_processing_elements"}, {"score": 0.0028664985822266344, "phrase": "efficient_noc_architecture"}, {"score": 0.002839812512030847, "phrase": "inter-pe_communication"}, {"score": 0.002684819249720834, "phrase": "particular_lower_bound_calculation_operation"}, {"score": 0.002598333022293788, "phrase": "serial_bottleneck"}, {"score": 0.002538263784314365, "phrase": "tsp_solution"}, {"score": 0.0022793032191981404, "phrase": "application_domain"}, {"score": 0.0022580713471027996, "phrase": "experimental_results"}, {"score": 0.0022161977759646693, "phrase": "new_implementation"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_multithreaded_software_implementations"}], "paper_keywords": ["Phylogenetics", " breakpoint-median problem", " maximum parsimony", " traveling salesman problem"], "paper_abstract": "Maximum Parsimony phylogenetic tree reconstruction is based on finding the breakpoint median, given a set of species, and is represented by a bounded edge-weight graph model. This reduces the breakpoint median problem to one of solving multiple instances of the Traveling Salesman Problem (TSP), which is a classical NP-complete problem in graph theory. Exponential time algorithms that apply efficient runtime heuristics, such as branch-and-bound, to dynamically prune the search space are used to solve TSP. In this paper, we present the design and performance evaluation of a network-on-chip (NoC)-based implementation for solving TSP under the bounded edge-weight model, as used in the computation of breakpoint phylogeny. Our approach takes advantage of fine-grain parallelism from the multiple processing elements (PEs) and uses efficient NoC architecture for inter-PE communication. To accelerate the application on hardware, our PE design optimizes a particular lower bound calculation operation which typically tends to be the serial bottleneck in computation of a TSP solution. We also explore two representative NoC architectures-mesh and quad-tree-and show that the latter is more energy-efficient for this application domain. Experimental results show that this new implementation is able to achieve speedups of up to three orders of magnitude over state-of-the-art multithreaded software implementations.", "paper_title": "NoC-Based Hardware Accelerator for Breakpoint Phylogeny", "paper_id": "WOS:000303165900009"}