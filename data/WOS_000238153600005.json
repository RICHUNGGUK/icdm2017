{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sequence_alignment"}, {"score": 0.038817146215250085, "phrase": "fm_algorithms"}, {"score": 0.027566499737058017, "phrase": "parallel_fastlsa"}, {"score": 0.0047113960612140335, "phrase": "fundamental_operation"}, {"score": 0.004670597652149685, "phrase": "homology_search"}, {"score": 0.004530552828603269, "phrase": "protein_sequences"}, {"score": 0.004491313367627919, "phrase": "length_m"}, {"score": 0.004356620736507642, "phrase": "dynamic_programming_alignment_algorithms"}, {"score": 0.004300133642951283, "phrase": "needleman-wunsch"}, {"score": 0.004262881947420435, "phrase": "smith-waterman"}, {"score": 0.004010960493946656, "phrase": "hirschberg's_algorithm"}, {"score": 0.003958937342925219, "phrase": "space_requirements"}, {"score": 0.0037903327482565097, "phrase": "approximately_twice_the_number"}, {"score": 0.003459191419478298, "phrase": "trading_space"}, {"score": 0.003399466007862412, "phrase": "fastlsa"}, {"score": 0.00326881479036966, "phrase": "quadratic_space"}, {"score": 0.0031984060035955292, "phrase": "specific_machine"}, {"score": 0.003048782877550259, "phrase": "memory_caching_effects"}, {"score": 0.0029061405237517882, "phrase": "hirschberg"}, {"score": 0.002686935113435742, "phrase": "simple_but_effective_form"}, {"score": 0.0025723630851105304, "phrase": "good_speedups"}, {"score": 0.002516917671182532, "phrase": "eight_processors"}, {"score": 0.00226693109377084, "phrase": "parallel_and_sequential_fastlsa"}, {"score": 0.0021892345747666977, "phrase": "high_performance"}, {"score": 0.0021049977753042253, "phrase": "parallel_processors"}], "paper_keywords": ["sequence alignment", " homology search", " bioinformatics", " linear space", " computational biology", " parallel and sequential algorithms"], "paper_abstract": "Sequence alignment is a fundamental operation for homology search in bioinformatics. For two DNA or protein sequences of length m and n, full-matrix (FM), dynamic programming alignment algorithms such as Needleman-Wunsch and Smith-Waterman take O(m x n) time and use a possibly prohibitive O(m x n) space. Hirschberg's algorithm reduces the space requirements to O(min(m, n)), but requires approximately twice the number of operations required by the FM algorithms. The Fast Linear-Space Alignment (FastLSA) algorithm adapts to the amount of space available by trading space for operations. FastLSA can effectively adapt to use either linear or quadratic space, depending on the specific machine. Our experiments show that, in practice, due to memory caching effects, FastLSA is always as fast or faster than the Hirschberg and FM algorithms. To improve the performance of FastLSA further, we have parallelized it using a simple but effective form of wavefront parallelism. Our experimental results show that Parallel FastLSA exhibits good speedups, almost linear for eight processors or less, and also that the efficiency of Parallel FastLSA increases with the size of the sequences that are aligned. Consequently, parallel and sequential FastLSA can be flexibly and effectively used with high performance in situations where space and the number of parallel processors can vary greatly.", "paper_title": "FastLSA: A fast, linear-space, parallel and sequential algorithm for sequence alignment", "paper_id": "WOS:000238153600005"}