{"auto_keywords": [{"score": 0.03702857894174594, "phrase": "simd"}, {"score": 0.00481495049065317, "phrase": "particle-in-cell_simulation"}, {"score": 0.004677372885331908, "phrase": "peak_performance"}, {"score": 0.004632388761885302, "phrase": "simulation_codes"}, {"score": 0.004587835274176236, "phrase": "irregular_computation"}, {"score": 0.004413846562278824, "phrase": "post-peta_and_exascale_era"}, {"score": 0.004308455856718928, "phrase": "manycore_processors"}, {"score": 0.004125027493339274, "phrase": "intel_xeon_phi"}, {"score": 0.0040656296649390486, "phrase": "tflops-class_computational_power"}, {"score": 0.003949377440799037, "phrase": "exascale_computing"}, {"score": 0.003911367220315185, "phrase": "full_exploitation"}, {"score": 0.0037811784409635023, "phrase": "easy_job"}, {"score": 0.0036908381347418805, "phrase": "high_performance"}, {"score": 0.0033830587647810132, "phrase": "three-tier_parallelism"}, {"score": 0.00317681090697906, "phrase": "hpc_programming"}, {"score": 0.002968695624366393, "phrase": "particle-in-cell_plasma_simulation_code"}, {"score": 0.002869793011316547, "phrase": "simple_porting"}, {"score": 0.0028284184438992282, "phrase": "existing_code"}, {"score": 0.002801166393333128, "phrase": "xeon_phi"}, {"score": 0.0026175952455594277, "phrase": "significant_change"}, {"score": 0.002579847272930948, "phrase": "code_structure"}, {"score": 0.0023530698447434308, "phrase": "recoding_effort"}, {"score": 0.002285674008055581, "phrase": "good_single-node_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Manycore processors", " SIMD-vectorization", " Multithreading", " Particle-in-cell simulation", " High-performance computing"], "paper_abstract": "This paper discusses the challenge in post-Peta and Exascale era especially that brought by manycore processors of ordinary (i.e., non-GPU type) CPU cores. Though such a processor like Intel Xeon Phi gives us TFlops-class computational power and may lead us to Exascale computing, full exploitation of its potential is far from an easy job due to its source of high performance, namely a large scale multithreading and a wide SIMD mechanism. In fact, in the three-tier parallelism namely inter-node, intra-node and intra-core ones, we found their order does not represent the toughness in HPC programming but the order should be reversed to do that. Our case study with a particle-in-cell plasma simulation code supports our observation revealing that a simple porting of an existing code to Xeon Phi is infeasible from the viewpoint of performance and we have to make a significant change of the code structure so that it conforms with the features of the processor. However the study also confirms that the recoding effort is well rewarded achieving a good single-node performance higher than that obtained from an execution on four dual-socket nodes of Cray XE6. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Manycore challenge in particle-in-cell simulation: How to exploit 1 TFlops peak performance for simulation codes with irregular computation", "paper_id": "WOS:000367122800008"}