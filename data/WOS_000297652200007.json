{"auto_keywords": [{"score": 0.02768202518154859, "phrase": "mpi"}, {"score": 0.00481495049065317, "phrase": "trace-based_performance_analysis"}, {"score": 0.004722613498487908, "phrase": "petascale_simulation_code"}, {"score": 0.004692227830462433, "phrase": "flash._performance_analysis"}, {"score": 0.0045726187330434025, "phrase": "modern_high-end_petascale_systems"}, {"score": 0.0043705604923728195, "phrase": "rising_complexity"}, {"score": 0.004231699728933577, "phrase": "computing_units"}, {"score": 0.0040708542958968605, "phrase": "performance-analysis_study"}, {"score": 0.003992729692096799, "phrase": "vampir_performance-analysis_tool_suite"}, {"score": 0.003742941972172613, "phrase": "fundamental_system_properties"}, {"score": 0.003531474887552889, "phrase": "jaguar_system"}, {"score": 0.003486123304074186, "phrase": "oak_ridge_national_laboratory"}, {"score": 0.0032259472087775138, "phrase": "flash_simulation_code"}, {"score": 0.0030239842475439814, "phrase": "cpu_cores"}, {"score": 0.0029089095588612007, "phrase": "existing_performance-analysis_tools"}, {"score": 0.002726740692380339, "phrase": "performance_problems"}, {"score": 0.0022457226013538343, "phrase": "event_tracing_tools"}, {"score": 0.0021049977753042253, "phrase": "higher_degrees"}], "paper_keywords": ["collective I/O", " collective MPI operations", " event tracing", " libNBC", " Vampir"], "paper_abstract": "Performance analysis of applications on modern high-end petascale systems is increasingly challenging due to the rising complexity and quantity of the computing units. This paper presents a performance-analysis study using the Vampir performance-analysis tool suite, which examines application behavior as well as the fundamental system properties. This study was carried out on the Jaguar system at Oak Ridge National Laboratory, the fastest computer on the November 2009 Top500 list. We analyzed the FLASH simulation code that is designed to be scaled with tens of thousands of CPU cores, which means that using existing performance-analysis tools is very complex. The study reveals two classes of performance problems that are relevant for very high CPU counts: MPI communication and scalable I/O. For both, solutions are presented and verified. Finally, the paper proposes improvements and extensions for event tracing tools in order to allow scalability of the tools towards higher degrees of parallelism.", "paper_title": "Trace-based performance analysis for the petascale simulation code FLASH", "paper_id": "WOS:000297652200007"}