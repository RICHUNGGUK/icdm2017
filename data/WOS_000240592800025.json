{"auto_keywords": [{"score": 0.03720561877948967, "phrase": "snooze"}, {"score": 0.00481495049065317, "phrase": "stateful_network_protocol_fuzzer"}, {"score": 0.004681525814235883, "phrase": "well-known_black-box_approach"}, {"score": 0.00413684709497912, "phrase": "current_fuzzing_tools"}, {"score": 0.0036966717141736355, "phrase": "stateful_protocols"}, {"score": 0.003140004304719746, "phrase": "security_flaws"}, {"score": 0.003104849179057156, "phrase": "network_protocol_implementations"}, {"score": 0.002951444412262927, "phrase": "stateful_operation"}, {"score": 0.0026222551419772867, "phrase": "attack-specific_fuzzing_primitives"}, {"score": 0.002506715532901322, "phrase": "specific_vulnerability_classes"}, {"score": 0.0024370965602952496, "phrase": "initial_prototype"}, {"score": 0.0023962545023307937, "phrase": "snooze_tool"}, {"score": 0.0023035922232490106, "phrase": "sip_protocol"}, {"score": 0.002264982416465872, "phrase": "promising_results"}, {"score": 0.0021773853011112882, "phrase": "sophisticated_fuzzing_scenarios"}, {"score": 0.0021049977753042253, "phrase": "realworld_bugs"}], "paper_keywords": ["stateful fuzzing", " network protocols", " security testing"], "paper_abstract": "Fuzzing is a well-known black-box approach to the security testing of applications. Fuzzing has many advantages in terms of simplicity and effectiveness over more complex, expensive testing approaches. Unfortunately, current fuzzing tools suffer from a number of limitations, and, in particular, they provide little support for the fuzzing of stateful protocols. In this paper, we present SNOOZE, a tool for building flexible, security-oriented, network protocol fuzzers. SNOOZE implements a stateful fuzzing approach that can be used to effectively identify security flaws in network protocol implementations. SNOOZE allows a tester to describe the stateful operation of a protocol and the messages that need to be generated in each state. In addition, SNOOZE provides attack-specific fuzzing primitives that allow a tester to focus on specific vulnerability classes. We used an initial prototype of the SNOOZE tool to test programs that implement the SIP protocol, with promising results. SNOOZE supported the creation of sophisticated fuzzing scenarios that were able to expose realworld bugs in the programs analyzed.", "paper_title": "SNOOZE: Toward a stateful NetwOrk prOtocol fuzZEr", "paper_id": "WOS:000240592800025"}