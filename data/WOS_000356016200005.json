{"auto_keywords": [{"score": 0.0449112334954101, "phrase": "parallel_maxsat_solvers"}, {"score": 0.03355826819588318, "phrase": "deterministic_solver"}, {"score": 0.029325853570600465, "phrase": "learned_clauses"}, {"score": 0.00481495049065317, "phrase": "multicore_processors"}, {"score": 0.004720606036240263, "phrase": "dominant_platform"}, {"score": 0.0046741260449047976, "phrase": "modern_days"}, {"score": 0.004382913938427474, "phrase": "new_architecture"}, {"score": 0.0042336638794732255, "phrase": "non-deterministic_behavior"}, {"score": 0.004009288598277725, "phrase": "different_solutions"}, {"score": 0.003911253966141701, "phrase": "clear_downside"}, {"score": 0.0036133077234252633, "phrase": "first_deterministic_parallel_maxsat_solver"}, {"score": 0.0034901729647741353, "phrase": "experimental_results"}, {"score": 0.003371220210416809, "phrase": "new_deterministic_solver"}, {"score": 0.0032887360307856635, "phrase": "corresponding_non-deterministic_version"}, {"score": 0.0029784342137867776, "phrase": "different_techniques"}, {"score": 0.002737745536992088, "phrase": "parallel_maxsat"}, {"score": 0.002618278365749875, "phrase": "search_space"}, {"score": 0.0025289662786567896, "phrase": "parallel_solver"}, {"score": 0.0022901862321082407, "phrase": "different_threads"}, {"score": 0.0021049977753042253, "phrase": "overall_performance"}], "paper_keywords": ["Deterministic parallel search", " maximum satisfiability", " clause sharing"], "paper_abstract": "Multicore processors are becoming the dominant platform in modern days. As a result, parallel Maximum Satisfiability (MaxSAT) solvers have been developed to exploit this new architecture. However, parallel MaxSAT solvers suffer from non-deterministic behavior, i.e. several runs of the same solver can lead to different solutions. This is a clear downside for applications that require solving the same problem instance more than once. This paper presents the first deterministic parallel MaxSAT solver that ensures reproducibility of results. Experimental results show that the performance of the new deterministic solver is comparable to the corresponding non-deterministic version. Another advantage of using a deterministic solver is the fact that one can easily observe the gains coming from different techniques, since the non-determinism is removed from the solver. For example, sharing learned clauses in parallel MaxSAT is expected to help to further prune the search space and boost the performance of a parallel solver. Yet, so far it has not been made clear which learned clauses should be shared among the different threads. By using the deterministic solver, we present a comparison showing that sharing learned clauses improves the overall performance of parallel MaxSAT solvers.", "paper_title": "Deterministic Parallel MaxSAT Solving", "paper_id": "WOS:000356016200005"}