{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "temporal_predicate_logic_specifications"}, {"score": 0.004195418010131832, "phrase": "main_role"}, {"score": 0.0036218682585355895, "phrase": "executable_modelling_language_format"}, {"score": 0.00327356326590461, "phrase": "future_implications"}, {"score": 0.003097865379563127, "phrase": "detailed_transformation_procedure"}, {"score": 0.002931569771634119, "phrase": "temporal_predicate_logic_specification"}, {"score": 0.002748775748298028, "phrase": "past-implies-future_normal_format"}, {"score": 0.0026011706232569316, "phrase": "temporal_specifications"}, {"score": 0.0024389277933858054, "phrase": "time_ordering_relations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Temporal specification", " Predicate logic", " Past-future separation", " Normal form", " Executable temporal logic"], "paper_abstract": "Temporal specifications are often used when phenomena are modelled where dynamics play a main role. If simulation is one of the aims of modelling, usually a restricted. executable modelling language format is used, based on some form of past to future implications. In this paper a detailed transformation procedure is described that takes any temporal predicate logic specification and generates a specification in a past-implies-future normal format. The procedure works for temporal specifications in which the atoms either express time ordering relations or are state-related, i.e., include only one time variable. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Past-future separation and normal forms in temporal predicate logic specifications", "paper_id": "WOS:000266416200005"}