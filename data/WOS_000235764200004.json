{"auto_keywords": [{"score": 0.04805541544871024, "phrase": "data_warehouses"}, {"score": 0.00481495049065317, "phrase": "node_partitioned_data_warehouses"}, {"score": 0.004471530397729526, "phrase": "large_quantities"}, {"score": 0.004362564831572539, "phrase": "major_performance"}, {"score": 0.00430907756010007, "phrase": "scalability_challenges"}, {"score": 0.004101579688745222, "phrase": "major_performance_improvement"}, {"score": 0.0039281997063335735, "phrase": "costly_specialized_parallel_hardware"}, {"score": 0.0037621210719690594, "phrase": "low-cost_standard_computing_nodes"}, {"score": 0.0036477941360224435, "phrase": "non-dedicated_local_network"}, {"score": 0.003515162360861593, "phrase": "special_care"}, {"score": 0.003284361433827464, "phrase": "experimental_evidence"}, {"score": 0.003145417398038261, "phrase": "basic_horizontal_partitioning_strategy"}, {"score": 0.0029027394930867902, "phrase": "efficient_placement"}, {"score": 0.002849442549612025, "phrase": "lowcost_node_partitioned_data_warehouse"}, {"score": 0.0027457584014804574, "phrase": "extra_overheads"}, {"score": 0.002678734566245688, "phrase": "large_replicated_relations"}, {"score": 0.0025338369486914364, "phrase": "speedup_performance"}, {"score": 0.0022117133940361025, "phrase": "important_insight"}, {"score": 0.002157697367447098, "phrase": "processing_issues"}, {"score": 0.0021049977753042253, "phrase": "shared-nothing_environments"}], "paper_keywords": ["data warehousing", " distributed databases", " parallel processing", " partitioning", " performance", " query processing"], "paper_abstract": "Data Warehouses (DWs) with large quantities of data present major performance and scalability challenges, and parallelism can be used for major performance improvement in such context. However instead of costly specialized parallel hardware and interconnections, we focus on low-cost standard computing nodes, possibly in a non-dedicated local network. In this environment, special care must be taken with partitioning and processing. We use experimental evidence to analyze the shortcomings of a basic horizontal partitioning strategy designed for that environment, then propose and test improvements to allow efficient placement for the lowcost Node Partitioned Data Warehouse. We show experimenially that extra overheads related to processing large replicated relations and repartitioning requirements between nodes can significantly degrade speedup performance for many query, patterns. We analyze a simple, easy to-apply partitioning and placement decision that achieves good performance improvement results. Our experiments and discussion provide important insight into partitioning and processing issues for data warehouses in shared-nothing environments.", "paper_title": "Node Partitioned Data Warehouses: Experimental evidence and improvements", "paper_id": "WOS:000235764200004"}