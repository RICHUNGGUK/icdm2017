{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multiprecision_programs"}, {"score": 0.004536862734384202, "phrase": "multiprecision_floating-point_arithmetic"}, {"score": 0.0037450707321601963, "phrase": "input_source_code"}, {"score": 0.0035993041437026225, "phrase": "output_source_code"}, {"score": 0.0035285548582081627, "phrase": "input_source"}, {"score": 0.0033245147666408157, "phrase": "output_code"}, {"score": 0.003153041030690117, "phrase": "new_types"}, {"score": 0.003050376875258722, "phrase": "type_conversion"}, {"score": 0.002951045605925464, "phrase": "simple_xml_configuration_file"}, {"score": 0.002798780784517325, "phrase": "multiprecision_library"}, {"score": 0.0025340874787959195, "phrase": "data_types"}, {"score": 0.00250073564820402, "phrase": "additional_features"}, {"score": 0.0023249757987087033, "phrase": "source_code"}, {"score": 0.002175913488493802, "phrase": "successful_conversion"}, {"score": 0.002147265537489893, "phrase": "large_subsets"}, {"score": 0.0021049977753042253, "phrase": "gnu_scientific_library"}], "paper_keywords": ["algorithms", " design", " languages", " conversion", " precompiler", " multiprecision", " floating-point"], "paper_abstract": "In the past decade a number of libraries for multiprecision floating-point arithmetic have been developed. We describe an easy to use, generic C/C++ transcription program or precompiler for the conversion of C or C++ source code into new code that uses a C++ multiprecision library of choice. The precompiler can convert any type in the input source code to another type in the output source code. The input source can be either C or C++, while the output code generated by the precompiler and using the new types, is C++. The type conversion is based on a simple XML configuration file which is provided by either the developer of the multiprecision library or by the user of the precompiler. The precompiler can also convert to data types with additional features, which are not supported in the types of the source code. Applicability of the precompiler is shown with the successful conversion of large subsets of the GNU Scientific Library and Numerical Recipes.", "paper_title": "Algorithm 871: A C/C++ precompiler for autogeneration of multiprecision programs", "paper_id": "WOS:000253829900005"}