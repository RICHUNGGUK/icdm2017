{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "kdd_cup"}, {"score": 0.0044289730051264116, "phrase": "data_set"}, {"score": 0.004347473906950474, "phrase": "microsoft_academic_search"}, {"score": 0.003852939975815287, "phrase": "different_sources"}, {"score": 0.00357689487273538, "phrase": "national_taiwan_university"}, {"score": 0.003446353878654566, "phrase": "first_prize"}, {"score": 0.003199345207727474, "phrase": "effective_name"}, {"score": 0.0029699874949715367, "phrase": "important_strategy"}, {"score": 0.0028087949095629955, "phrase": "chinese_and_non-chinese_names"}, {"score": 0.0023103100997344072, "phrase": "fl-score"}, {"score": 0.0022258906408344973, "phrase": "private_leader_board"}, {"score": 0.0021049977753042253, "phrase": "public_leader_board"}], "paper_keywords": ["deduplication", " author disambiguation", " name matching"], "paper_abstract": "Track 2 of KDD Cup 2013 aims at determining duplicated authors in a data set from Microsoft Academic Search. This type of problems appears in many large-scale applications that compile information from different sources. This paper describes our solution developed at National Taiwan University to win the first prize of the competition. We propose an effective name matching framework and realize two implementations. An important strategy in our approach is to consider Chinese and non-Chinese names separately because of their different naming conventions. Post-processing including merging results of two predictions further boosts the performance. Our approach achieves Fl-score 0.99202 on the private leader board, while 0.99195 on the public leader board.", "paper_title": "Effective String Processing and Matching for Author Disambiguation", "paper_id": "WOS:000344638800007"}