{"auto_keywords": [{"score": 0.04891849113301896, "phrase": "expert_system"}, {"score": 0.01047793190972098, "phrase": "existing_tools"}, {"score": 0.00481495049065317, "phrase": "prototype_implementation"}, {"score": 0.004293840838533456, "phrase": "parallelization_process"}, {"score": 0.004021689117050817, "phrase": "automatic_parallelization"}, {"score": 0.003956379470617348, "phrase": "performance_analysis"}, {"score": 0.003828912548622257, "phrase": "static_program_structure_information"}, {"score": 0.0037667216301666196, "phrase": "dynamic_performance_analysis"}, {"score": 0.002994701080666466, "phrase": "poor_performance"}, {"score": 0.0022111720236287547, "phrase": "case_study"}, {"score": 0.0021398115287338693, "phrase": "successful_use"}, {"score": 0.0021049977753042253, "phrase": "full_scale_scientific_applications"}], "paper_keywords": [""], "paper_abstract": "The prototype implementation of an expert system was developed to assist the user in the computer aided parallelization process. The system interfaces to tools for automatic parallelization and performance analysis. By fusing static program structure information and dynamic performance analysis data the expert system can help the user to filter, correlate, and interpret the data gathered by the existing tools. Sections of the code that show poor performance and require further attention are rapidly identified and suggestions for improvements are presented to the user. In this paper we describe the components of the expert system and discuss its interface to the existing tools. We present a case study to demonstrate the successful use in full scale scientific applications.", "paper_title": "An expert assistant for computer aided parallelization", "paper_id": "WOS:000237003200080"}