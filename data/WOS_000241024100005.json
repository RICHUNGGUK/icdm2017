{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "term_algebras"}, {"score": 0.010504656147754778, "phrase": "integer_constraints"}, {"score": 0.009931196613566493, "phrase": "programming_languages"}, {"score": 0.008054052704169087, "phrase": "data_structures"}, {"score": 0.004645057834614705, "phrase": "recursive_data_structures"}, {"score": 0.0040438338011467845, "phrase": "multiple_data_domains"}, {"score": 0.003982011128052839, "phrase": "program_verification_decision_procedures"}, {"score": 0.003921129887153952, "phrase": "single_theory"}, {"score": 0.003782655283668953, "phrase": "important_class"}, {"score": 0.00374399358035391, "phrase": "mixed_constraints"}, {"score": 0.0034308688638878286, "phrase": "memory_safety_properties"}, {"score": 0.003343841875107018, "phrase": "memory_overflow"}, {"score": 0.0033096502887394233, "phrase": "out-of-bound_array_access"}, {"score": 0.003209152260950748, "phrase": "program_correctness"}, {"score": 0.0030017207229983385, "phrase": "length_function"}, {"score": 0.002836679611901583, "phrase": "combined_theory"}, {"score": 0.002778936649500157, "phrase": "presburger"}, {"score": 0.0027223626424366207, "phrase": "arithmetic_extension"}, {"score": 0.0026806884201358537, "phrase": "natural_but_tight_coupling"}, {"score": 0.0025726416100664853, "phrase": "general_purpose_combination_methods"}, {"score": 0.002546315584783112, "phrase": "nelson-oppen"}, {"score": 0.002443671484766342, "phrase": "decision_procedures"}, {"score": 0.0024186620196958867, "phrase": "quantifier-free_theories"}, {"score": 0.002357249810661667, "phrase": "infinite_constant_domain"}, {"score": 0.002309242063033298, "phrase": "finite_constant_domain"}, {"score": 0.0022390533383717715, "phrase": "quantifier_elimination_procedure"}, {"score": 0.0022047613106966745, "phrase": "extended_first-order_theory"}, {"score": 0.0021267708018655493, "phrase": "existential_quantifiers"}], "paper_keywords": ["decision-procedures", " recursive data structures", " term algebras", " Presburger arithmetic", " quantifier elimination", " combination of satisfiability procedures"], "paper_abstract": "Term algebras can model recursive data structures which are widely used in programming languages. To verify programs we must be able to reason about these structures. However, as programming languages often involve multiple data domains, in program verification decision procedures for a single theory are usually not applicable. An important class of mixed constraints consists of combinations of data structures with integer constraints on the size of data structures. Such constraints can express memory safety properties such as absence of memory overflow and out-of-bound array access, which are crucial for program correctness. In this paper we extend the theory of term algebras with the length function which maps a term to its size, resulting in a combined theory of term algebras and Presburger arithmetic. This arithmetic extension provides a natural but tight coupling between the two theories, and hence the general purpose combination methods like Nelson-Oppen combination are not applicable. We present decision procedures for quantifier-free theories in structures with an infinite constant domain and with a finite constant domain. We also present a quantifier elimination procedure for the extended first-order theory that can remove a block of existential quantifiers in one step. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Decision procedures for term algebras with integer constraints", "paper_id": "WOS:000241024100005"}