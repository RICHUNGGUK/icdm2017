{"auto_keywords": [{"score": 0.04950097558699653, "phrase": "rateless_codes"}, {"score": 0.046345717877726705, "phrase": "uep_rateless_codes"}, {"score": 0.030364287442202893, "phrase": "different_layers"}, {"score": 0.027726555417672317, "phrase": "proposed_uep_codes"}, {"score": 0.00481495049065317, "phrase": "unequal_error_protection_for_streaming_media"}, {"score": 0.004642604455537883, "phrase": "unequal_error_protection"}, {"score": 0.004512814529823301, "phrase": "previous_researches"}, {"score": 0.00436890075128947, "phrase": "low-complexity_solution"}, {"score": 0.0043161190928529755, "phrase": "scalable_information"}, {"score": 0.004229556887896042, "phrase": "randomized_generator"}, {"score": 0.004012500850311087, "phrase": "input_data"}, {"score": 0.00374531366198605, "phrase": "novel_uep_method"}, {"score": 0.0036257863613963245, "phrase": "proposed_method"}, {"score": 0.0035386420095120706, "phrase": "hierarchical_coding_graph"}, {"score": 0.0034817084307034955, "phrase": "low-complexity_encoding"}, {"score": 0.003289534854212415, "phrase": "decoding_probability"}, {"score": 0.0031845067058084583, "phrase": "proposed_hierarchical_coding_graph"}, {"score": 0.0031459887611258765, "phrase": "high-priority_input_data"}, {"score": 0.0030953529970646626, "phrase": "low-priority_ones"}, {"score": 0.003057910095857785, "phrase": "important_information"}, {"score": 0.002831037222426215, "phrase": "proposed_uep"}, {"score": 0.0026423134393535265, "phrase": "heterogeneous_clients"}, {"score": 0.002526938673434697, "phrase": "different_amount"}, {"score": 0.002466139325703204, "phrase": "network_condition"}, {"score": 0.0024461989110005447, "phrase": "computation_ability"}, {"score": 0.00233936726307301, "phrase": "rateless_version"}, {"score": 0.002255431275670053, "phrase": "previous_finite-length"}, {"score": 0.0022371907579775796, "phrase": "rateless_uep_codes"}, {"score": 0.002165688807780663, "phrase": "serious_packet_loss_rate"}, {"score": 0.0021049977753042253, "phrase": "decoding_order"}], "paper_keywords": ["Data communications", " error control codes", " network communications", " redundant design"], "paper_abstract": "This paper presents an Unequal Error Protection (UEP) method for streaming media. Previous researches have shown that UEP rateless codes can provide a low-complexity solution for downloading scalable information. However, the randomized generator of rateless codes leads to uncertainty of decoding probability and decoding priority of input data, and thus it is not suitable for streaming applications. In this paper, a novel UEP method is presented for streaming media. The proposed method, which consists of a hierarchical coding graph as well as low-complexity encoding and decoding operations, preserves the advantage of the UEP rateless codes and characterizes the decoding probability and decoding priority by formulas. The proposed hierarchical coding graph guarantees that high-priority input data are recovered before low-priority ones, so important information can be recovered with low latency, low computation, and high probability. In addition, data in different layers of the proposed UEP are dependently encoded, so that data in different layers can help decode each other. For heterogeneous clients, the proposed UEP codes can help a decoder with recovery of different amount of information according to the network condition and computation ability. Besides, we also extend the proposed UEP codes to a rateless version for downloading of media. Compared with the previous finite-length and rateless UEP codes, our method can recover more high-priority data even in serious packet loss rate (PLR), and the decoding order of data can be assigned by the server.", "paper_title": "Unequal Error Protection for Streaming Media Based on Rateless Codes", "paper_id": "WOS:000301800000006"}