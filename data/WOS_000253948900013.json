{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "data_structures"}, {"score": 0.004360412703519539, "phrase": "approximate_automata"}, {"score": 0.004149429072483132, "phrase": "approximate_automaton"}, {"score": 0.003948613642680196, "phrase": "regular_language_l"}, {"score": 0.0031845067058084583, "phrase": "practical_applications"}, {"score": 0.003030247482854539, "phrase": "network_security_pattern_matching"}, {"score": 0.0026107601878587816, "phrase": "construction_algorithm"}, {"score": 0.0021049977753042253, "phrase": "exact_automata"}], "paper_keywords": ["automaton construction", " approximate automata", " memory efficiency", " hash functions"], "paper_abstract": "In this paper, we present data structures and algorithms for efficiently constructing approximate automata. An approximate automaton for a regular language L is one which accepts at least L. Such automata can be used in a variety of practical applications, including network security pattern matching, in which false-matches are only a performance nuisance. The construction algorithm is particularly efficient, and is tunable to yield more or less exact automata.", "paper_title": "Efficient automata constructions and approximate automata", "paper_id": "WOS:000253948900013"}