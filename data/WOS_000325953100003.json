{"auto_keywords": [{"score": 0.04427272492942207, "phrase": "temporal_locality"}, {"score": 0.00481495049065317, "phrase": "request_streams"}, {"score": 0.00477513738640734, "phrase": "big_data"}, {"score": 0.004735651915966323, "phrase": "clustered_renewal_processes"}, {"score": 0.004677032188041644, "phrase": "performance_evaluation"}, {"score": 0.004638354165775803, "phrase": "large_file_systems"}, {"score": 0.004524220016675624, "phrase": "media_streaming"}, {"score": 0.00446820572467064, "phrase": "scalable_generation"}, {"score": 0.004431246962597134, "phrase": "representative_traces"}, {"score": 0.0040949726088047225, "phrase": "system-wide_distribution_obscures"}, {"score": 0.003928321515373316, "phrase": "system_evaluation"}, {"score": 0.003799878496075633, "phrase": "delayed_renewal_processes"}, {"score": 0.003721735062704032, "phrase": "interarrival_times"}, {"score": 0.0034967818541774844, "phrase": "lightweight_version"}, {"score": 0.0033824008297657494, "phrase": "statistical_clustering"}, {"score": 0.0031647054743284947, "phrase": "emerging_workloads"}, {"score": 0.003010651173285521, "phrase": "synthetic_trace_generator"}, {"score": 0.002793504274967716, "phrase": "yahoo"}, {"score": 0.0026796495639791426, "phrase": "feature_animation_company"}, {"score": 0.0025070703395635133, "phrase": "distributed_storage_systems"}, {"score": 0.0024554476124885806, "phrase": "application-level_results"}, {"score": 0.0024149139610228887, "phrase": "real_workload"}, {"score": 0.0023849523850778807, "phrase": "trace_generator"}, {"score": 0.002249961956629804, "phrase": "existing_models"}, {"score": 0.002158233639156017, "phrase": "real_trace"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Big Data", " Workload generation", " HDFS", " Popularity", " Temporal locality", " Storage"], "paper_abstract": "The performance evaluation of large file systems, such as storage and media streaming, motivates scalable generation of representative traces. We focus on two key characteristics of traces, popularity and temporal locality. The common practice of using a system-wide distribution obscures per-object behavior, which is important for system evaluation. We propose a model based on delayed renewal processes which, by sampling interarrival times for each object, accurately reproduces popularity and temporal locality for the trace. A lightweight version reduces the dimension of the model with statistical clustering. It is workload-agnostic and object type-aware, suitable for testing emerging workloads and 'what-if' scenarios. We implemented a synthetic trace generator and validated it using: (1) a Big Data storage (HDFS) workload from Yahoo!, (2) a trace from a feature animation company, and (3) a streaming media workload. Two case studies in caching and replicated distributed storage systems show that our traces produce application-level results similar to the real workload. The trace generator is fast and readily scales to a system of 4.3 million Files. It outperforms existing models in terms of accurately reproducing the characteristics of the real trace. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Generating request streams on Big Data using clustered renewal processes", "paper_id": "WOS:000325953100003"}