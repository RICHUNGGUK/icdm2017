{"auto_keywords": [{"score": 0.04224478442118721, "phrase": "dica"}, {"score": 0.00481495049065317, "phrase": "software_repositories"}, {"score": 0.004741845603430361, "phrase": "defect-insertion_circumstance_analysis"}, {"score": 0.00458488025289647, "phrase": "data-driven_technique"}, {"score": 0.004542976479682312, "phrase": "software_process_improvements"}, {"score": 0.004515252649226697, "phrase": "mature_software_organizations"}, {"score": 0.004446677711302801, "phrase": "individual_process"}, {"score": 0.004406031457123015, "phrase": "high_defect_densities"}, {"score": 0.004339108074589307, "phrase": "defect_insertion_circumstance_analysis"}, {"score": 0.004068907083697369, "phrase": "general_defect_root_cause_analysis"}, {"score": 0.003982617095636925, "phrase": "existing_repositories"}, {"score": 0.003958299299658418, "phrase": "version_archive"}, {"score": 0.0035997452281985465, "phrase": "higher-than-normal_defect_insertion_frequencies"}, {"score": 0.0035233696341819437, "phrase": "industrial_use"}, {"score": 0.0030695103543472908, "phrase": "six_plausible_reasons"}, {"score": 0.0029586543333524904, "phrase": "repository_data"}, {"score": 0.002931569771634119, "phrase": "small_but_mature_software_company"}, {"score": 0.002878140062594849, "phrase": "high-end_content_management_system_domain"}, {"score": 0.002731971103291716, "phrase": "non-negligible_effort"}, {"score": 0.0026011706232569316, "phrase": "insufficient_reliability"}, {"score": 0.0023507916951658455, "phrase": "successful_dica."}, {"score": 0.0023435920614377306, "phrase": "gradual_improvements"}, {"score": 0.0023008538881524425, "phrase": "different_principles"}, {"score": 0.002210903392596343, "phrase": "input_data_quality"}, {"score": 0.0021772489804440646, "phrase": "good_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Mining software repositories", " Version archive", " Bug tracker", " Root cause analysis", " Bug", " Bugfix"], "paper_abstract": "Context: Root-cause analysis is a data-driven technique for developing software process improvements in mature software organizations. The search for individual process correlates of high defect densities, which we call defect insertion circumstance analysis (DICA), is potentially both effective and cost-efficient as one approach to be used when attempting a general defect root cause analysis. In DICA, data from existing repositories (version archive, bug tracker) is evaluated largely automatically in order to determine conditions (such as the people, roles, components, or time-periods involved) that correlate with higher-than-normal defect insertion frequencies. Nevertheless, no reports of industrial use of DICA have been published. Objective: Determine the reasons why DICA is not used more often by practitioners. Method: We use a single-case, typical-case, revelatory-type case study to evaluate in parallel the importance of six plausible reasons (R1-R6). The case is based on 11 years of repository data from a small but mature software company building a product in the high-end content management system domain and describes a four person-months effort to make use of these data. Results: While DICA required non-negligible effort (R3) and some degree of inventiveness (R2), the most relevant roadblock was insufficient reliability of the results (R6) combined with the difficulty of assessing this reliability (R5). We identify three difficulties that led to this outcome. Conclusion: Current repository mining methods are too immature for successful DICA. Gradual improvements are unlikely to help; different principles of operation will be required. Even with such different techniques, issues with input data quality may continue to make good results difficult-to-have. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Why software repositories are not used for defect-insertion circumstance analysis more often: A case study", "paper_id": "WOS:000340850700013"}