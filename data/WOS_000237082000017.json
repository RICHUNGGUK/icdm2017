{"auto_keywords": [{"score": 0.024973734692230173, "phrase": "csp"}, {"score": 0.013254775412033182, "phrase": "ccs"}, {"score": 0.00481495049065317, "phrase": "algebraic_process_calculi"}, {"score": 0.004645057834614705, "phrase": "reversible_computation"}, {"score": 0.004401342842183475, "phrase": "growing_number"}, {"score": 0.0042459818200777846, "phrase": "promising_application_areas"}, {"score": 0.00384478047708155, "phrase": "acp"}, {"score": 0.0038119123317396954, "phrase": "biochemical_systems"}, {"score": 0.003677280504320636, "phrase": "program_debugging"}, {"score": 0.003361069456060196, "phrase": "even_programming_languages"}, {"score": 0.0032423089921154503, "phrase": "quantum_computing"}, {"score": 0.002708399936381754, "phrase": "standard_algebraic_process"}, {"score": 0.002262209824105154, "phrase": "reversible_operators"}], "paper_keywords": [""], "paper_abstract": "Reversible computation has a growing number of promising application areas such as the modelling of biochemical systems, program debugging and testing, and even programming languages for quantum computing. We formulate a procedure for converting operators of standard algebraic process calculi such as CCS, ACP and CSP into reversible operators, while preserving their operational semantics.", "paper_title": "Reversing algebraic process calculi", "paper_id": "WOS:000237082000017"}