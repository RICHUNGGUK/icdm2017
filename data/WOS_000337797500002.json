{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "team_tasks"}, {"score": 0.004697308822154191, "phrase": "fixed_work_shifts"}, {"score": 0.004605258779434384, "phrase": "service_industry"}, {"score": 0.004537401559396022, "phrase": "multi-activity_and_task_assignment_problem"}, {"score": 0.004212759658511567, "phrase": "time-dependent_continuous_demand"}, {"score": 0.003507504253087326, "phrase": "specific_duration"}, {"score": 0.0033879628186273625, "phrase": "single_employee"}, {"score": 0.0028484940955893134, "phrase": "different_ways"}, {"score": 0.002737745536992088, "phrase": "mixed_integer_programming_formulation"}, {"score": 0.0026973310437053573, "phrase": "two-module_approach"}, {"score": 0.002467038647952607, "phrase": "mixed_integer_programming_solver"}, {"score": 0.0024306105794630246, "phrase": "second_module"}, {"score": 0.0023828731731474306, "phrase": "column_generation_model"}, {"score": 0.0023130151703068444, "phrase": "task_reassignments"}, {"score": 0.0021902063413831545, "phrase": "variable_neighborhood_descent_heuristic"}, {"score": 0.0021365562685368767, "phrase": "extensive_computational_experiments"}], "paper_keywords": ["Work shifts", " activity assignment", " team tasks", " precedence relationships", " column generation"], "paper_abstract": "In the service industry, the multi-activity and task assignment problem consists of assigning various activities and tasks to given work shifts. An activity has a time-dependent continuous demand (number of employees required to service the customers) and is interruptible, i.e., an employee assigned to it can be relieved at any time. At the opposite, a task has a specific duration, is performed once by a single employee, and is uninterruptible. In this paper, we consider an extension of this problem, called the multi-activity and team task assignment problem where the tasks can be undertaken in different ways by several employees simultaneously. We propose a mixed integer programming formulation and a two-module approach to find solutions to this problem. In the first module, an approximation model for assigning tasks without activities is solved by a mixed integer programming solver. The second module consists of a column generation model for assigning activities by allowing task reassignments during the process. These modules are used within a variable neighborhood descent heuristic. We have performed extensive computational experiments to validate our approach.", "paper_title": "Assigning Team Tasks and Multiple Activities to Fixed Work Shifts", "paper_id": "WOS:000337797500002"}