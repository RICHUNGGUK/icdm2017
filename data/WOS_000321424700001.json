{"auto_keywords": [{"score": 0.037085211414711, "phrase": "constraint_language"}, {"score": 0.03295386299565605, "phrase": "lifted_inference"}, {"score": 0.004739056045644449, "phrase": "probabilistic_inference_algorithms_exploit_regularities"}, {"score": 0.004615202066192795, "phrase": "graphical_models"}, {"score": 0.004285289574869884, "phrase": "interchangeable_variables"}, {"score": 0.0034299649219748513, "phrase": "exact_lifted_inference_use"}, {"score": 0.0029098743621130004, "phrase": "relational_algebra_operators"}, {"score": 0.0027889366191837504, "phrase": "semantic_level"}, {"score": 0.0026307897899760383, "phrase": "syntactic_level"}, {"score": 0.002231607958228148, "phrase": "inference_efficiency"}, {"score": 0.0021501863832966966, "phrase": "exact_inference"}], "paper_keywords": [""], "paper_abstract": "Lifted probabilistic inference algorithms exploit regularities in the structure of graphical models to perform inference more efficiently. More specifically, they identify groups of interchangeable variables and perform inference once per group, as opposed to once per variable. The groups are defined by means of constraints, so the flexibility of the grouping is determined by the expressivity of the constraint language. Existing approaches for exact lifted inference use specific languages for (in) equality constraints, which often have limited expressivity. In this article, we decouple lifted inference from the constraint language. We define operators for lifted inference in terms of relational algebra operators, so that they operate on the semantic level (the constraints' extension) rather than on the syntactic level, making them language-independent. As a result, lifted inference can be performed using more powerful constraint languages, which provide more opportunities for lifting. We empirically demonstrate that this can improve inference efficiency by orders of magnitude, allowing exact inference where until now only approximate inference was feasible.", "paper_title": "Lifted Variable Elimination: Decoupling the Operators from the Constraint Language", "paper_id": "WOS:000321424700001"}