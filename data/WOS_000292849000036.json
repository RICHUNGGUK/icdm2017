{"auto_keywords": [{"score": 0.04558099031824589, "phrase": "ptsvm"}, {"score": 0.00481495049065317, "phrase": "twin_support_vector_machine"}, {"score": 0.004752221133109136, "phrase": "within-class_variance_minimization"}, {"score": 0.004539005582217309, "phrase": "novel_binary_classifier_coined_projection"}, {"score": 0.0038271712887391015, "phrase": "projected_samples"}, {"score": 0.003312486229143855, "phrase": "recursive_algorithm"}, {"score": 0.0030017207229983385, "phrase": "singularity_problem"}, {"score": 0.0028858714271716647, "phrase": "pca"}, {"score": 0.00270221723573854, "phrase": "original_space"}, {"score": 0.002649472341607234, "phrase": "low-dimensional_subspace"}, {"score": 0.0025977542995083624, "phrase": "optimization_problem"}, {"score": 0.0024007585788965655, "phrase": "experimental_results"}, {"score": 0.0023384639826941373, "phrase": "usps"}, {"score": 0.0021896891011033105, "phrase": "proposed_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Multiple-surface classifier", " Twin support vector machine", " Quadratic programming"], "paper_abstract": "In this paper, a novel binary classifier coined projection twin support vector machine (PTSVM) is proposed. The idea is to seek two projection directions, one for each class, such that the projected samples of one class are well separated from those of the other class in its respective subspace. In order to further boost performance, a recursive algorithm for PTSVM is proposed to generate more than one projection axis for each class. To overcome the singularity problem, principal component analysis (PCA) is utilized to transform the data in the original space into a low-dimensional subspace wherein the optimization problem of PTSVM is convex and can be solved efficiently. The experimental results on several UCI benchmark data sets and USPS digit database show the feasibility and effectiveness of the proposed method. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Recursive projection twin support vector machine via within-class variance minimization", "paper_id": "WOS:000292849000036"}