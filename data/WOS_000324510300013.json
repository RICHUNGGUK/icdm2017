{"auto_keywords": [{"score": 0.0453665111651286, "phrase": "block_scheduling_problem"}, {"score": 0.00481495049065317, "phrase": "scalable_video"}, {"score": 0.004590820632326585, "phrase": "rapid_advancement"}, {"score": 0.004412000844879264, "phrase": "important_issue"}, {"score": 0.004173244935967375, "phrase": "media_data_blocks"}, {"score": 0.0038696708318671446, "phrase": "different_peers"}, {"score": 0.003823791479971016, "phrase": "different_streaming_quality"}, {"score": 0.003531474887552889, "phrase": "network_environment"}, {"score": 0.0034073030552032304, "phrase": "novel_block_scheduling_scheme"}, {"score": 0.0032355864829403413, "phrase": "soft_priority_function"}, {"score": 0.0030602966787192745, "phrase": "block's_significance"}, {"score": 0.003036040409062437, "phrase": "video_playback"}, {"score": 0.0030000149283621286, "phrase": "priority_function"}, {"score": 0.002917604283241353, "phrase": "good_balance"}, {"score": 0.0028944757265206332, "phrase": "different_factors"}, {"score": 0.0027594936602962075, "phrase": "relative_importance"}, {"score": 0.002694375425481759, "phrase": "wide_variation"}, {"score": 0.00267301171407926, "phrase": "block_size"}, {"score": 0.0026518169452004465, "phrase": "different_layers"}, {"score": 0.002558495760339272, "phrase": "optimization_problem"}, {"score": 0.0025180781216911246, "phrase": "priority_sum"}, {"score": 0.002488183412451029, "phrase": "delivered_video_blocks"}, {"score": 0.0022614266476954467, "phrase": "simulation_results"}, {"score": 0.002225691463551672, "phrase": "proposed_algorithm"}, {"score": 0.0021731423856364003, "phrase": "bandwidth_utilization"}, {"score": 0.0021559025985688255, "phrase": "video_quality"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["P2P streaming", " Scalable video coding", " Block scheduling algorithm"], "paper_abstract": "During recent years, the Internet has witnessed rapid advancement in peer-to-peer (P2P) media streaming. In these applications, an important issue has been the block scheduling problem, which deals with how each node requests the media data blocks from its neighbors. In most streaming systems, peers are likely to have heterogeneous upload/download bandwidths, leading to the fact that different peers probably perceive different streaming quality. Layered (or scalable) streaming in P2P networks has recently been proposed to address the heterogeneity of the network environment. In this paper, we propose a novel block scheduling scheme that is aimed to address the P2P layered video streaming. We define a soft priority function for each block to be requested by a node in accordance with the block's significance for video playback. The priority function is unique in that it strikes good balance between different factors, which makes the priority of a block well represent the relative importance of the block over a wide variation of block size between different layers. The block scheduling problem is then transformed to an optimization problem that maximizes the priority sum of the delivered video blocks. We develop both centralized and distributed scheduling algorithms for the problem. Simulation of two popular scalability types has been conducted to evaluate the performance of the algorithms. The simulation results show that the proposed algorithm is effective in terms of bandwidth utilization and video quality. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "An efficient scheduling algorithm for scalable video streaming over P2P networks", "paper_id": "WOS:000324510300013"}