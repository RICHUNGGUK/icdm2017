{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "embedded_software"}, {"score": 0.04904947763914552, "phrase": "operating_systems"}, {"score": 0.00456020621016909, "phrase": "hybrid_scheduling_model"}, {"score": 0.004462105963334103, "phrase": "implementation_synthesis"}, {"score": 0.004272164161788242, "phrase": "great_influence"}, {"score": 0.004135010810625326, "phrase": "embedded_software's_non-functional_requirements"}, {"score": 0.0037903327482565097, "phrase": "memory_consumption"}, {"score": 0.003668591097652231, "phrase": "low_power"}, {"score": 0.003219368413618912, "phrase": "implementation_synthesis_problem"}, {"score": 0.002918826667294298, "phrase": "hybrid-scheduling_model"}, {"score": 0.0027641218567092665, "phrase": "task_sets"}, {"score": 0.002704554429386671, "phrase": "preemptable_tasks"}, {"score": 0.002646267286675984, "phrase": "non-preemptable_tasks"}, {"score": 0.0025059724686541263, "phrase": "time_analysis_technology"}, {"score": 0.0024253827365474734, "phrase": "implementation_synthesis_method"}, {"score": 0.0022967713922705, "phrase": "design_space_exploration"}, {"score": 0.0021987994275190314, "phrase": "experimental_evaluation"}, {"score": 0.0021049977753042253, "phrase": "real-time_embedded_software"}], "paper_keywords": [""], "paper_abstract": "Implementation synthesis of embedded software has great influence on implementing embedded software's non-functional requirements, such as real-time, memory consumption, and low power, etc. In this paper, we focus on the implementation synthesis problem under a class of operating systems that supports the hybrid-scheduling model, that is, task sets have preemptable tasks and non-preemptable tasks. We propose a time analysis technology and an implementation synthesis method with the ability of design space exploration and optimization. Experimental evaluation shows our implementation synthesis method yields real-time embedded software with lower system overheads.", "paper_title": "Implementation synthesis of embedded software under operating systems supporting the hybrid scheduling model", "paper_id": "WOS:000239570300043"}