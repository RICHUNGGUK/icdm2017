{"auto_keywords": [{"score": 0.031850282346511063, "phrase": "pals"}, {"score": 0.030806827922882606, "phrase": "synchronous_design"}, {"score": 0.00481495049065317, "phrase": "pals_architectural_pattern"}, {"score": 0.004768104290288521, "phrase": "distributed_real-time_systems"}, {"score": 0.004452641437293878, "phrase": "integrated_modular_avionics_systems"}, {"score": 0.004387793971765289, "phrase": "control_systems"}, {"score": 0.004345085569121329, "phrase": "motor_vehicles"}, {"score": 0.003863758357292741, "phrase": "environment_inputs"}, {"score": 0.0038261310307416475, "phrase": "hard_real-time_bounds"}, {"score": 0.0031612033120065747, "phrase": "virtual_synchrony"}, {"score": 0.003115105266246263, "phrase": "drts."}, {"score": 0.0030397596289795143, "phrase": "formal_specification"}, {"score": 0.002966230968271199, "phrase": "formal_model_transformation"}, {"score": 0.0028106505443369545, "phrase": "performance_bounds"}, {"score": 0.002769650208851401, "phrase": "underlying_infrastructure"}, {"score": 0.0027159094186967247, "phrase": "formal_drts_specification"}, {"score": 0.0025860636370864084, "phrase": "semantic_equivalence"}, {"score": 0.002498873893632726, "phrase": "formal_verification"}, {"score": 0.002474505516708906, "phrase": "temporal_logic_properties"}, {"score": 0.002276717177453959, "phrase": "avionics_system_case_study"}, {"score": 0.0021678232353129472, "phrase": "formal_verification_purposes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed real-time systems", " Model checking", " Synchronizers", " Formally verified architectural patterns", " Rewriting logic"], "paper_abstract": "Many Distributed Real-Time Systems (DRTSs), such as integrated modular avionics systems and distributed control systems in motor vehicles, are made up of a collection of components communicating asynchronously among themselves and with their environment that must change their state and respond to environment inputs within hard real-time bounds. Such systems are often safety-critical and need to be certified; but their certification is currently hard due to their distributed nature. The Physically Asynchronous Logically Synchronous (PALS) architectural pattern can greatly reduce the design and verification complexities of achieving virtual synchrony in a DRTS. This work presents a formal specification of PALS as a formal model transformation that maps a synchronous design, together with a set of performance bounds of the underlying infrastructure, to a formal DRTS specification that is semantically equivalent to the synchronous design. This semantic equivalence is proved, showing that the formal verification of temporal logic properties of the DRTS in CTL* can be reduced to their verification on the much simpler synchronous design. An avionics system case study is used to illustrate the usefulness of PALS for formal verification purposes. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Formalization and correctness of the PALS architectural pattern for distributed real-time systems", "paper_id": "WOS:000307620200001"}