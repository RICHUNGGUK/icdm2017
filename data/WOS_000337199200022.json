{"auto_keywords": [{"score": 0.032539471083621686, "phrase": "pm_scheme"}, {"score": 0.015719716506582538, "phrase": "client-server_model"}, {"score": 0.010909877079222424, "phrase": "client-server_models"}, {"score": 0.00471465954562773, "phrase": "private_matching"}, {"score": 0.004520272777451894, "phrase": "dataset_x"}, {"score": 0.004288472456976113, "phrase": "dataset_y"}, {"score": 0.004243552607799184, "phrase": "n_elements"}, {"score": 0.004177049813981273, "phrase": "client_c"}, {"score": 0.004089991141220082, "phrase": "set_intersection_x_boolean_and_y"}, {"score": 0.00392125815948488, "phrase": "s._previously"}, {"score": 0.003278167066287366, "phrase": "server's_dataset_y"}, {"score": 0.002326938965568362, "phrase": "universal_hash_function"}, {"score": 0.0022783523466965187, "phrase": "mismatch_issue"}, {"score": 0.0021049977753042253, "phrase": "server's_information"}], "paper_keywords": ["Private matching", " Oblivious transfer", " Universal hash function", " Private information retrieval", " Communication complexity"], "paper_abstract": "In a Private Matching (PM) scheme, the client C has a dataset X of m elements, and the server S has a dataset Y of n elements. The client C can learn the set intersection X boolean AND Y without leaking any information to the server S. Previously, the most efficient PM scheme requires communication of complexity (O) over tilde (m + n), which increases linearly with n. This may not be efficient enough in Client-Server models because the server's dataset Y is usually large. In this paper, we propose a PM scheme based on Oblivious Transfer (OT) and universal hash function. Our scheme requires communication of complexity (O) over tilde (m . log(2)n). Thus, our scheme is especially suitable for Client-Server models. We show that our scheme becomes more efficient when log(2)(mn)(1+Delta) = (O) over tilde (n/m) for security parameter Delta > 0. However, utilizing the universal hash function would cause a mismatch issue which affects the accuracy of the PM scheme. In addition, it leaks the server's information. Therefore, we define approximate PM by relaxing the definition of PM; it is proved to be almost as secure as a PM scheme in a Client-Server model with proper configurations. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "A communication-efficient private matching scheme in Client-Server model", "paper_id": "WOS:000337199200022"}