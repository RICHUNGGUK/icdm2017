{"auto_keywords": [{"score": 0.030468642146266864, "phrase": "learning_improvement"}, {"score": 0.00481495049065317, "phrase": "effective_use"}, {"score": 0.004776669953449352, "phrase": "educational_program_animations"}, {"score": 0.004682288586254123, "phrase": "student's_engagement"}, {"score": 0.004463278123628969, "phrase": "computer_science_degrees"}, {"score": 0.0044277810648955624, "phrase": "program_visualization"}, {"score": 0.004271490815763164, "phrase": "programming_concepts"}, {"score": 0.00407161650109722, "phrase": "educational_impact"}, {"score": 0.004023120753104693, "phrase": "active_and_highly_engaging_approach"}, {"score": 0.003927848423072668, "phrase": "program_animations"}, {"score": 0.003640730820018083, "phrase": "traditional_instruction"}, {"score": 0.003611751858608048, "phrase": "systematic_use"}, {"score": 0.0035403060198952244, "phrase": "general_conclusion"}, {"score": 0.00334766260508788, "phrase": "educational_aspects"}, {"score": 0.0031152526492532785, "phrase": "shortterm_improvements"}, {"score": 0.003065830998810144, "phrase": "complexity_level"}, {"score": 0.002933915104498416, "phrase": "simple_topics"}, {"score": 0.0028529310661977577, "phrase": "complex_topics"}, {"score": 0.0026975894491357176, "phrase": "highly_complex_topics"}, {"score": 0.0026654155072292707, "phrase": "viewing_approach"}, {"score": 0.0026022112631368223, "phrase": "drop-out_rates"}, {"score": 0.0024117603727471654, "phrase": "students'_passing-rate"}, {"score": 0.0022712795176156536, "phrase": "long_term"}, {"score": 0.0022262909736042212, "phrase": "construction_tasks"}, {"score": 0.0022085455097790537, "phrase": "higher_grades"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Evaluation of CAL systems", " Interactive learning environments", " Multimedia/hypermedia systems", " Programming and programming languages", " Simulations"], "paper_abstract": "Programming is one of the most complex subjects in computer science degrees. Program visualization is one of the approaches adopted to make programming concepts more accessible to students. In this work we study the educational impact of an active and highly engaging approach, namely the construction of program animations by students. We systematically compared this approach with two instructional scenarios, based on viewing animations and on the traditional instruction without systematic use of animations. A general conclusion of this work is that animations actually improve learning in terms of some educational aspects: short-term and long-term knowledge acquisition, and drop-out rates. Shortterm improvements depend on the complexity level of the topic: while there is no impact for simple topics, there is a learning improvement in complex topics using the viewing and constructing approaches, and there is a learning improvement for highly complex topics using the viewing approach. In the long-term, drop-out rates were significantly decreased for students involved in the two most engaging approaches. In addition, both animation viewing and animation construction improved students' passing-rate in the term exam. Nevertheless, we were unable to prove in the long term that students involved in construction tasks yielded higher grades than those involved in viewing tasks. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Toward the effective use of educational program animations: The roles of student's engagement and topic complexity", "paper_id": "WOS:000320430500016"}