{"auto_keywords": [{"score": 0.04515697567790779, "phrase": "agent_behavior"}, {"score": 0.00481495049065317, "phrase": "organic_grid"}, {"score": 0.004722898398399427, "phrase": "biologically_inspired_and_fully_decentralized_approach"}, {"score": 0.004526503177267299, "phrase": "autonomous_scheduling"}, {"score": 0.004491678520807451, "phrase": "strongly_mobile_agents"}, {"score": 0.004439941010250576, "phrase": "peer-to-peer_network"}, {"score": 0.004271729935895193, "phrase": "emerging_organization"}, {"score": 0.004141742095830515, "phrase": "different_classes"}, {"score": 0.0039085400187964196, "phrase": "general_framework"}, {"score": 0.0036885393756834863, "phrase": "blast"}, {"score": 0.0036318365746264127, "phrase": "sequence_alignment"}, {"score": 0.0035761373846447393, "phrase": "cannon"}, {"score": 0.0035212516951180946, "phrase": "matrix_multiplication"}, {"score": 0.0034140224493254935, "phrase": "independent_task_application"}, {"score": 0.0032972747743006603, "phrase": "grid_scheduling_research"}, {"score": 0.0032092293346843224, "phrase": "intra-node_communication"}, {"score": 0.0031356295480964927, "phrase": "popular_block_algorithm"}, {"score": 0.003111472132927442, "phrase": "parallel_matrix_multiplication"}, {"score": 0.003051887221639784, "phrase": "challenging_application"}, {"score": 0.0030283730114326014, "phrase": "grid_platforms"}, {"score": 0.002913483929932102, "phrase": "way_computation"}, {"score": 0.0027599042621376624, "phrase": "distributed_computing_spectrum"}, {"score": 0.0026965813247045427, "phrase": "communication_topology"}, {"score": 0.002675797331220082, "phrase": "resource_use"}, {"score": 0.0024957862318504753, "phrase": "different_requirements"}, {"score": 0.002429090371567499, "phrase": "application_code"}, {"score": 0.002382541887825168, "phrase": "mobile_agents"}, {"score": 0.002292097733181405, "phrase": "underlying_grid_infrastructure"}, {"score": 0.0022568866348667547, "phrase": "resulting_system"}, {"score": 0.0021049977753042253, "phrase": "available_resources"}], "paper_keywords": ["self-organizing computation", " mobile agents", " grid scheduling", " BLAST", " emergence"], "paper_abstract": "The Organic Grid is a biologically inspired and fully decentralized approach to the organization of computation that is based on the autonomous scheduling of strongly mobile agents on a peer-to-peer network. Through the careful design of agent behavior, the emerging organization of the computation can be customized for different classes of applications. In this paper, we report on our experience in adapting the general framework to run two representative applications on our Organic Grid prototype: the National Center for Biotechnology Information (NCBI) basic local alignment search tool (BLAST) code for sequence alignment, and the Cannon's algorithm for matrix multiplication. The first is an example of independent task application, a type of application commonly used for grid scheduling research because of its easily decomposable nature and absence of intra-node communication. The second is a popular block algorithm for parallel matrix multiplication, and represents a challenging application for grid platforms because of its highly structured and synchronous communication pattern. Agent behavior completely determines the way computation is organized on the Organic Grid. We intentionally chose two applications at opposite ends of the distributed computing spectrum having very different requirements in terms of communication topology, resource use, and response to faults. We detail the design of the agent behavior and show how the different requirements can be satisfied. By encapsulating application code and scheduling functionality into mobile agents, we decouple both computation and scheduling from the underlying grid infrastructure. In the resulting system, every node can inject a computation onto the grid; the computation naturally organizes itself around available resources.", "paper_title": "Self-organizing scheduling on the organic grid", "paper_id": "WOS:000235685200010"}