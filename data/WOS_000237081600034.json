{"auto_keywords": [{"score": 0.048374618081049085, "phrase": "update_operations"}, {"score": 0.014527250034664412, "phrase": "xml_data"}, {"score": 0.00481495049065317, "phrase": "growing_interest"}, {"score": 0.00428768430604925, "phrase": "xquery"}, {"score": 0.004225950334493496, "phrase": "xj."}, {"score": 0.004075469816959996, "phrase": "efficient_and_declarative_specification"}, {"score": 0.0036553070575015344, "phrase": "data_dependencies"}, {"score": 0.0034995881411519925, "phrase": "xml_documents"}, {"score": 0.002655894070657161, "phrase": "conflict_detection"}, {"score": 0.0026178621327331572, "phrase": "np"}, {"score": 0.0024519545383399773, "phrase": "xpath_expressions"}, {"score": 0.0022967713922705, "phrase": "descendant_axis"}, {"score": 0.002263639474937039, "phrase": "wildcard_symbols"}, {"score": 0.002135812692862058, "phrase": "efficient_polynomial_algorithms"}, {"score": 0.0021049977753042253, "phrase": "update_conflict_detection"}], "paper_keywords": [""], "paper_abstract": "There has been growing interest in the addition of update operations to languages that operate on XML data, for example, XQuery and XJ. These update operations support efficient and declarative specification of transformations of XML data. The presence of update operations raises the question of detecting data dependencies between reads and updates of XML documents. The ability to optimize the execution of update operations depends on the ability to detect such conflicts. In this paper, we formalize the notions of updates on XML data and conflicts between update operations. We show that conflict detection is NP-complete when the update operations are specified using XPath expressions that support the use of the child and descendant axis, wildcard symbols, and branching. We also provide efficient polynomial algorithms for update conflict detection when the patterns do not use branching.", "paper_title": "Conflicting XML updates", "paper_id": "WOS:000237081600034"}