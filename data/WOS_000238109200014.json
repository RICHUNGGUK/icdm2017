{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "equality_constraint_languages"}, {"score": 0.004656505061514261, "phrase": "boolean"}, {"score": 0.00450456611645112, "phrase": "algebraic_approach"}, {"score": 0.004386063799793622, "phrase": "infinite-valued_constraint_satisfaction"}, {"score": 0.004158290806404304, "phrase": "computational_complexity"}, {"score": 0.003995226376780718, "phrase": "constraint_satisfaction_problems"}, {"score": 0.003687960013746783, "phrase": "highly_transitive_automorphism_group"}, {"score": 0.003543273649210823, "phrase": "relational_structure"}, {"score": 0.0029789104204803137, "phrase": "equality_relation"}, {"score": 0.0027495914857929584, "phrase": "corresponding_constraint_languages_equality_constraint_languages"}, {"score": 0.002537880772794665, "phrase": "equality_constraint_language"}, {"score": 0.0023113506171584157, "phrase": "constant_unary"}, {"score": 0.002220551141101661, "phrase": "injective_binary_polymorphism"}], "paper_keywords": ["constraint satisfaction", " logic in computer science", " computational complexity", " clones on infinite domains"], "paper_abstract": "We apply the algebraic approach to infinite-valued constraint satisfaction to classify the computational complexity of all constraint satisfaction problems with templates that have a highly transitive automorphism group. A relational structure has such an automorphism group if and only if all the constraint types are Boolean combinations of the equality relation, and we call the corresponding constraint languages equality constraint languages. We show that an equality constraint language is tractable if it admits a constant unary or an injective binary polymorphism, and is NP-complete otherwise.", "paper_title": "The complexity of equality constraint languages", "paper_id": "WOS:000238109200014"}