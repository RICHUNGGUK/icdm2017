{"auto_keywords": [{"score": 0.04941061878695795, "phrase": "wireless_networks"}, {"score": 0.0156107766127449, "phrase": "delayed_ack"}, {"score": 0.013965532750166433, "phrase": "tcp_throughput"}, {"score": 0.010977824488541742, "phrase": "packet_losses"}, {"score": 0.0048150284339538735, "phrase": "tcp"}, {"score": 0.004648609688625397, "phrase": "tcp_performance"}, {"score": 0.0045355866228818514, "phrase": "ad_hoe"}, {"score": 0.004394281902031765, "phrase": "underlying_medium_access_control"}, {"score": 0.004168448339217754, "phrase": "unrestricted_delay_policy"}, {"score": 0.0040385352882334235, "phrase": "flow_pattern"}, {"score": 0.003968112038249246, "phrase": "optimal_delay_window_size"}, {"score": 0.003885216927966404, "phrase": "best_tcp_throughput"}, {"score": 0.003672500644750565, "phrase": "channel_contention"}, {"score": 0.003483631502938922, "phrase": "bursty_transmission"}, {"score": 0.003410822685334396, "phrase": "large_cumulative_acks"}, {"score": 0.0031455000569352454, "phrase": "tcp_path"}, {"score": 0.003079736435077217, "phrase": "longer_path"}, {"score": 0.002941913249957503, "phrase": "path_length"}, {"score": 0.0029109914689364465, "phrase": "important_factor"}, {"score": 0.0028601736602156033, "phrase": "appropriate_delay_window_sizes"}, {"score": 0.002761176640988626, "phrase": "adaptive_delayed_ack_mechanism"}, {"score": 0.0027129670661026964, "phrase": "ad_hoe_networks"}, {"score": 0.0026375718041787, "phrase": "ad_hoc_and_hybrid_networks"}, {"score": 0.002501793273494325, "phrase": "static_networks"}, {"score": 0.002449454693767392, "phrase": "mobile_networks"}, {"score": 0.0024236964502593254, "phrase": "proposed_schemes"}, {"score": 0.0023480317852018133, "phrase": "real_testbed_experiments"}, {"score": 0.002258745901862197, "phrase": "simple_and_effective_receiver-side_probe"}, {"score": 0.0021805201234139475, "phrase": "standard_tcp"}, {"score": 0.0021499920551456956, "phrase": "adaptive_delayed_ack"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["TCP", " Congestion control", " Adaptive delayed ack", " Wireless medium access/contention", " Friendliness"], "paper_abstract": "This paper studies the TCP performance with delayed ack in wireless networks (including ad hoe and WLANs) which use IEEE 802.11 MAC protocol as the underlying medium access control. Our analysis and simulations show that TCP throughput does not always benefit from an unrestricted delay policy. In fact, for a given topology and flow pattern, there exists an optimal delay window size at the receiver that produces best TCP throughput. If the window is set too small, the receiver generates too many acks and causes channel contention; on the other hand, if the window is set too high, the bursty transmission at the sender triggered by large cumulative acks will induce interference and packet losses, thus degrading the throughout. In wireless networks, packet losses are also related to the length of TCP path; when traveling through a longer path, a packet is more likely to suffer interference. Therefore, path length is an important factor to consider when choosing appropriate delay window sizes. In this paper, we first propose an adaptive delayed ack mechanism which is suitable for ad hoe networks, then we propose a more general adaptive delayed ack scheme for ad hoc and hybrid networks. The simulation results show that our schemes call effectively improve TCP throughput by up to 25% in static networks, and provide more significant gain in mobile networks. The proposed schemes are simple and easy to deploy. The real testbed experiments are also presented to verify our approaches. Furthermore, a simple and effective receiver-side probe and detection is proposed to improve friendliness between the standard TCP and our proposed TCP with adaptive delayed ack. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "TCP with delayed ack for wireless networks", "paper_id": "WOS:000263411100006"}