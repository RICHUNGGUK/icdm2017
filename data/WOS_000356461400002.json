{"auto_keywords": [{"score": 0.039975677710510096, "phrase": "input_strings"}, {"score": 0.0218243421556553, "phrase": "srcs"}, {"score": 0.008310686971728256, "phrase": "scs"}, {"score": 0.007694650743585224, "phrase": "rcs"}, {"score": 0.00481495049065317, "phrase": "multivariate_algorithmic_perspective"}, {"score": 0.004660088610495924, "phrase": "ai_planning"}, {"score": 0.004618720776729413, "phrase": "shortest_common_superstring_problem"}, {"score": 0.004456872931482395, "phrase": "string_comparison"}, {"score": 0.004275173711009189, "phrase": "restricted_common_superstring"}, {"score": 0.0033999985007372216, "phrase": "adjacent_symbols"}, {"score": 0.0031939996970411027, "phrase": "multivariate_algorithmic_analysis"}, {"score": 0.0030819219279832224, "phrase": "different_parameters"}, {"score": 0.0029826318985134944, "phrase": "interesting_parameters"}, {"score": 0.0028438761181085077, "phrase": "computed_superstring"}, {"score": 0.002810204880249441, "phrase": "maximum_length"}, {"score": 0.002509510672395393, "phrase": "rcs_problem"}, {"score": 0.002308686629036013, "phrase": "polynomial_kernel"}, {"score": 0.0021049977753042253, "phrase": "binary_alphabet"}], "paper_keywords": ["Shortest common superstring", " String comparison", " Parameterized complexity", " Algorithms", " APX-hardness"], "paper_abstract": "In several areas, for example in bioinformatics and in AI planning, the Shortest Common Superstring problem (SCS) and variants thereof have been successfully applied for string comparison. In this paper we consider two variants of SCS recently introduced, namely Restricted Common Superstring (RCS) and Swapped Common Superstring (SRCS). In RCS we are given a set of strings and a multiset of symbols, and we look for an ordering of such that the number of input strings which are substrings of is maximized. In SRCS we are given a set of strings and a text , and we look for a swap ordering of (an ordering of obtained by swapping only some pairs of adjacent symbols) such that the number of input strings which are substrings of is maximized. In this paper we propose a multivariate algorithmic analysis of the complexity of the two problems, aiming at determining how different parameters influence the complexity of the two problems. We consider as interesting parameters the size of the solutions (that is the number of input strings contained in the computed superstring), the maximum length of the given input strings, the size of the alphabet over which the input strings range. First, we give two fixed-parameter algorithms, where the parameter is the size of the solution, for SRCS and lRCS (the RCS problem restricted to strings of length bounded by a parameter ). Furthermore, we complement these results by showing that SRCS and lRCS do not admit a polynomial kernel unless . Then, we show that SRCS is APX-hard even when the input strings have length bounded by a constant (equal to ) or are over a binary alphabet.", "paper_title": "Restricted and Swap Common Superstring: A Multivariate Algorithmic Perspective", "paper_id": "WOS:000356461400002"}