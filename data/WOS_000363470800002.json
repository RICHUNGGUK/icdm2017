{"auto_keywords": [{"score": 0.030687715934367116, "phrase": "starpu"}, {"score": 0.00481495049065317, "phrase": "dynamic_task-based_runtime_system"}, {"score": 0.004777214679969785, "phrase": "heterogeneous_multi-core_architectures"}, {"score": 0.004739773204474094, "phrase": "multi-core_architectures"}, {"score": 0.004503422625191897, "phrase": "high-performance_computing"}, {"score": 0.004398331355940011, "phrase": "maximum_performance"}, {"score": 0.004228577663320847, "phrase": "off-load_computations"}, {"score": 0.004178935413340453, "phrase": "data_movements"}, {"score": 0.004129873531628877, "phrase": "different_processing_units"}, {"score": 0.004001828274595483, "phrase": "task-based_runtimes"}, {"score": 0.003877737556673229, "phrase": "opportunistic_scheduling_algorithms"}, {"score": 0.003684213587410217, "phrase": "task_granularity"}, {"score": 0.0036553070575015344, "phrase": "task_graph_structure"}, {"score": 0.003584025547693836, "phrase": "scheduling_strategies"}, {"score": 0.003541923233726252, "phrase": "different_combinations"}, {"score": 0.003500313767208306, "phrase": "different_alternatives"}, {"score": 0.0033917213078141373, "phrase": "accurate_measurements"}, {"score": 0.003338690782620756, "phrase": "target_system"}, {"score": 0.003299460925313939, "phrase": "whole_duration"}, {"score": 0.0028293966058473476, "phrase": "hybrid_architectures"}, {"score": 0.0027307746993761035, "phrase": "distributed_systems"}, {"score": 0.0026564452263551407, "phrase": "performance_predictions"}, {"score": 0.0026355812883224203, "phrase": "classical_dense_linear_algebra_kernels"}, {"score": 0.002494039334114861, "phrase": "runtime_and_application_designers"}, {"score": 0.0023600807990911145, "phrase": "higher-end_graphics_processing_units"}, {"score": 0.0022688141624966967, "phrase": "robust_and_extensive_scheduling_studies"}, {"score": 0.002181069180139225, "phrase": "real_platforms"}, {"score": 0.002155412043665635, "phrase": "reproducible_behavior"}], "paper_keywords": ["HPC", " runtimes", " simulations"], "paper_abstract": "Multi-core architectures comprising several graphics processing units (GPUs) have become mainstream in the field of high-performance computing. However, obtaining the maximum performance of such heterogeneous machines is challenging as it requires to carefully off-load computations and manage data movements between the different processing units. The most promising and successful approaches so far build on task-based runtimes that abstract the machine and rely on opportunistic scheduling algorithms. As a consequence, the problem gets shifted to choosing the task granularity, task graph structure, and optimizing the scheduling strategies. Trying different combinations of these different alternatives is also itself a challenge. Indeed, obtaining accurate measurements requires reserving the target system for the whole duration of experiments. Furthermore, observations are limited to the few available systems at hand and may be difficult to generalize. In this article, we show how we crafted a coarse-grain hybrid simulation/emulation of StarPU, a dynamic runtime for hybrid architectures, over SimGrid, a versatile simulator of distributed systems. This approach allows to obtain performance predictions of classical dense linear algebra kernels accurate within a few percents and in a matter of seconds, which allows both runtime and application designers to quickly decide which optimization to enable or whether it is worth investing in higher-end graphics processing units or not. Additionally, it allows to conduct robust and extensive scheduling studies in a controlled environment whose characteristics are very close to real platforms while having reproducible behavior. Copyright (c) 2015John Wiley & Sons, Ltd.", "paper_title": "Faithful performance prediction of a dynamic task-based runtime system for heterogeneous multi-core architectures", "paper_id": "WOS:000363470800002"}