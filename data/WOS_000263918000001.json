{"auto_keywords": [{"score": 0.03806155594747826, "phrase": "situation_calculus"}, {"score": 0.015719716506582538, "phrase": "active_databases"}, {"score": 0.009769468330292857, "phrase": "active_relational_theories"}, {"score": 0.004766090327062509, "phrase": "non-markovian_theories"}, {"score": 0.004598933498016774, "phrase": "database_management_systems"}, {"score": 0.004347972379250724, "phrase": "rule-based_programming"}, {"score": 0.0042819270655224916, "phrase": "active_dbmss"}, {"score": 0.004174064076143015, "phrase": "greatest_challenges"}, {"score": 0.003946195919158241, "phrase": "active_behavior"}, {"score": 0.0038862297330905836, "phrase": "uniform_formalism"}, {"score": 0.0037307208089736835, "phrase": "active_relational_databases"}, {"score": 0.0034556603183020407, "phrase": "non-markovian_control"}, {"score": 0.003088384809415812, "phrase": "transaction_processing_and_rule_execution"}, {"score": 0.003010496595090984, "phrase": "theorem_proving_task"}, {"score": 0.002949598537993663, "phrase": "background_axioms"}, {"score": 0.002860546817196148, "phrase": "major_components"}, {"score": 0.0026091594819333654, "phrase": "clear_semantics"}, {"score": 0.0023798115577749225, "phrase": "suitable_version"}, {"score": 0.0023197517832705297, "phrase": "language_congolog"}, {"score": 0.002249672943553135, "phrase": "existing_situation_calculus"}, {"score": 0.0021928902836049384, "phrase": "advanced_transaction_models"}, {"score": 0.002126635713519053, "phrase": "execution_models"}, {"score": 0.0021049977753042253, "phrase": "active_behaviors"}], "paper_keywords": ["Knowledge representation", " Situation calculus", " Semantic of active databases", " Logical foundations", " Action theories", " non-Markovian control"], "paper_abstract": "Over the last 15 years, database management systems (DBMSs) have been enhanced by the addition of rule-based programming to obtain active DBMSs. One of the greatest challenges in this area is to formally account for all the aspects of active behavior using a uniform formalism. In this paper, we formalize active relational databases within the framework of the situation calculus by uniformly accounting for them using theories embodying non-Markovian control in the situation calculus. We call these theories active relational theories and use them to capture the dynamics of active databases. Transaction processing and rule execution is modelled as a theorem proving task using active relational theories as background axioms. We show that the major components of an ADBMS, namely the rule sets and the execution models, may be given a clear semantics using active relational theories. More precisely: we represent the rule set as a program written in a suitable version of the situation calculus based language ConGolog; then we extend an existing situation calculus based framework for modelling advanced transaction models to one for modelling the execution models of active behaviors.", "paper_title": "Specifying active databases as non-Markovian theories of actions", "paper_id": "WOS:000263918000001"}