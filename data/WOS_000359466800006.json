{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "process_technologies"}, {"score": 0.0047292449487169345, "phrase": "timing-error_correction_techniques"}, {"score": 0.004508048086020253, "phrase": "suspicious_timing-error_prediction"}, {"score": 0.004195418010131832, "phrase": "timing_errors"}, {"score": 0.004120694410890683, "phrase": "themiddle_points"}, {"score": 0.00374399358035391, "phrase": "step_circuits"}, {"score": 0.003611751858608048, "phrase": "middle_points"}, {"score": 0.003526186748088922, "phrase": "primary_inputs"}, {"score": 0.0034841647157189985, "phrase": "primary_outputs"}, {"score": 0.0031845067058084583, "phrase": "check_points"}, {"score": 0.002963390095037466, "phrase": "effective_stepc_insertion_algorithm"}, {"score": 0.0028245516301681713, "phrase": "stepc_insertion_positions"}, {"score": 0.0027741761880779535, "phrase": "inserted_stepc_counts"}, {"score": 0.0026600905156986317, "phrase": "min-cut_approach"}, {"score": 0.002597012212823168, "phrase": "optimal_positions"}, {"score": 0.0025660347613972573, "phrase": "inserted_stepcs"}, {"score": 0.0025051811853674215, "phrase": "required_number"}, {"score": 0.002262209824105154, "phrase": "naive_algorithm"}, {"score": 0.0021049977753042253, "phrase": "stepcs"}], "paper_keywords": ["timing-error prediction", " robust design", " delay variation", " overclocking"], "paper_abstract": "As process technologies advance, timing-error correction techniques have become important as well. A suspicious timing-error prediction (STEP) technique has been proposed recently, which predicts timing errors by monitoring themiddle points, or check points of several speed-paths in a circuit. However, if we insert STEP circuits (STEPCs) in the middle points of all the paths from primary inputs to primary outputs, we need many STEPCs and thus require too much area overhead. How to determine these check points is very important. In this paper, we propose an effective STEPC insertion algorithm minimizing area overhead. Our proposed algorithm moves the STEPC insertion positions to minimize inserted STEPC counts. We apply a max-flow and min-cut approach to determine the optimal positions of inserted STEPCs and reduce the required number of STEPCs to 1/10-1/80 and their area to 1/5-1/8 compared with a naive algorithm. Furthermore, our algorithm realizes 1.12X-1.5X overclocking compared with just inserting STEPCs into several speed-paths.", "paper_title": "An Effective Suspicious Timing-Error Prediction Circuit Insertion Algorithm Minimizing Area Overhead", "paper_id": "WOS:000359466800006"}