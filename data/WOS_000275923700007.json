{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_node_popularity"}, {"score": 0.003950453462399077, "phrase": "search_performance"}, {"score": 0.003435092524339692, "phrase": "unused_space"}, {"score": 0.0033170847930578473, "phrase": "internal_nodes"}, {"score": 0.003093054709625219, "phrase": "frequently_queried_leaf_node_addresses"}, {"score": 0.002952146666681891, "phrase": "node_accesses"}, {"score": 0.0028506823968539206, "phrase": "experimental_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Databases", " Data structures"], "paper_abstract": "We propose the Cache Coherent B+-tree (CCB+-tree), an indexing structure that can improve search performance compared to the traditional B+-tree. The CCB+-tree makes use of the unused space in the internal nodes of a B+-tree to cache frequently queried leaf node addresses, thus saving node accesses. An experimental study shows that the CCB+-tree Call Outperform the traditional B+-tree on workloads where certain queries are Much ;more Popular than the others. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Enhancing the B+-tree by dynamic node popularity caching", "paper_id": "WOS:000275923700007"}