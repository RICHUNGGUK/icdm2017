{"auto_keywords": [{"score": 0.0241246862320491, "phrase": "glb"}, {"score": 0.00481495049065317, "phrase": "polynomial_time_reduction"}, {"score": 0.0047113960612140335, "phrase": "vector_scheduling_problem"}, {"score": 0.0045108906244892165, "phrase": "generalized_load_balancing_problem"}, {"score": 0.004225950334493496, "phrase": "first_non-trivial_online_algorithm"}, {"score": 0.003987755561492638, "phrase": "online_fashion"}, {"score": 0.0039019217388438134, "phrase": "online_algorithm"}, {"score": 0.003424225677958491, "phrase": "resulting_load"}, {"score": 0.00241658945942583, "phrase": "existing_polynomial_time_algorithm"}, {"score": 0.0021987994275190314, "phrase": "constant_approximation_algorithms"}, {"score": 0.002135812692862058, "phrase": "polynomial_time"}], "paper_keywords": ["Online algorithm", " Vector scheduling", " Load balancing", " Approximation algorithm"], "paper_abstract": "We give a polynomial time reduction from the vector scheduling problem (VS) to the generalized load balancing problem (GLB). This reduction gives the first non-trivial online algorithm for VS where vectors come in an online fashion. The online algorithm is very simple in that each vector only needs to minimize the L-ln(md) norm of the resulting load when it comes, where m is the number of partitions and d is the dimension of vectors. It has an approximation bound of e log(md), which is in O(ln(md)), so it also improves the O(ln(2) d) bound of the existing polynomial time algorithm for VS. Additionally, the reduction shows that GLB does not have constant approximation algorithms that run in polynomial time unless P = NP. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Online vector scheduling and generalized load balancing", "paper_id": "WOS:000334822000006"}