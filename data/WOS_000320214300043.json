{"auto_keywords": [{"score": 0.0043793594257092805, "phrase": "automotive_operating_system"}, {"score": 0.004204904449336037, "phrase": "typical_safety-critical_software"}, {"score": 0.003983016985197904, "phrase": "extensive_analysis"}, {"score": 0.003772793879444995, "phrase": "system_safety"}, {"score": 0.00338493754743055, "phrase": "systematic_model_checking_approach"}, {"score": 0.0032061793819537633, "phrase": "safety_properties"}, {"score": 0.002799388549023265, "phrase": "embeddedc_constructs"}, {"score": 0.002724428781940696, "phrase": "efficient_verification"}, {"score": 0.0026157259734105, "phrase": "trampoline_model"}, {"score": 0.0024774888010414206, "phrase": "earlier_work"}, {"score": 0.0021049977753042253, "phrase": "verification_costs"}], "paper_keywords": ["OSEK/VDX", " Trampoline", " model checking", " safety analysis"], "paper_abstract": "An automotive operating system is a typical safety-critical software and therefore requires extensive analysis w.r.t its effect on system safety. Our earlier work [1] reported a systematic model checking approach for checking the safety properties of the OSEK/VDX-based operating system Trampoline. This article reports further performance improvement using embeddedC constructs for efficient verification of the Trampoline model developed in the earlier work. Experiments show that the use of embeddedC constructs greatly reduces verification costs.", "paper_title": "Model Checking an OSEK/VDX-Based Operating System for Automobile Safety Analysis", "paper_id": "WOS:000320214300043"}