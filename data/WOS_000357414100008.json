{"auto_keywords": [{"score": 0.04845849110410781, "phrase": "physical_network"}, {"score": 0.01018334109506658, "phrase": "general_problem"}, {"score": 0.00481495049065317, "phrase": "basic_resource_allocation_problem"}, {"score": 0.004721162131188487, "phrase": "cloud_computing_environments"}, {"score": 0.004278807087784626, "phrase": "communication_links"}, {"score": 0.004073359218158693, "phrase": "processing_requirements"}, {"score": 0.0040334640350288, "phrase": "mutual_communication_requirements"}, {"score": 0.003802135020791801, "phrase": "resource_allocator"}, {"score": 0.003247868216333148, "phrase": "single_workload"}, {"score": 0.003200230621987751, "phrase": "physical_graph"}, {"score": 0.003016544840824688, "phrase": "alpha-approximation_algorithm"}, {"score": 0.002986969236641105, "phrase": "singlemap"}, {"score": 0.002899965889623787, "phrase": "competitive_algorithm"}, {"score": 0.0026148807877309417, "phrase": "minimum_workload_duration_ratio"}, {"score": 0.002538687900036229, "phrase": "singlemap_problem"}, {"score": 0.002464709648714996, "phrase": "namely_depth-d_trees"}, {"score": 0.0024405312482831646, "phrase": "complete-graph_workloads"}, {"score": 0.002404706573379854, "phrase": "depth-d_trees"}, {"score": 0.002255431275670053, "phrase": "strong_lp_relaxation"}, {"score": 0.0022113879114507577, "phrase": "sherali-adams_hierarchy"}, {"score": 0.0021789194955896124, "phrase": "complete_graphs"}, {"score": 0.002125859121671525, "phrase": "polylogarithmic_approximation_algorithm"}, {"score": 0.0021049977753042253, "phrase": "racke_decompositions"}], "paper_keywords": ["graph mapping", " cloud computing", " congestion minimization", " approximation algorithms"], "paper_abstract": "We study a basic resource allocation problem that arises in cloud computing environments. The physical network of the cloud is represented as a graph with vertices representing servers and edges corresponding to communication links. A workload is a set of processes with processing requirements and mutual communication requirements. The workloads arrive and depart over time, and the resource allocator must map each workload upon arrival to the physical network. We consider the objective of minimizing the congestion. We show that solving a subproblem (SingleMap) about mapping a single workload to the physical graph essentially suffices for solving the general problem. In particular, an alpha-approximation algorithm for SingleMap gives an O(alpha log nD) competitive algorithm for the general problem, where n is the number of nodes in the physical network and D is the maximum to minimum workload duration ratio. We then consider the SingleMap problem for two natural classes of workloads, namely depth-d trees and complete-graph workloads. For depth-d trees, we give an n(O(d)) time O(d(2) log(nd))-approximation algorithm based on a strong LP relaxation inspired by the Sherali-Adams hierarchy. For complete graphs, we give a polylogarithmic approximation algorithm using Racke decompositions.", "paper_title": "MINIMUM CONGESTION MAPPING IN A CLOUD", "paper_id": "WOS:000357414100008"}