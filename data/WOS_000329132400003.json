{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "deep_meta-modelling"}, {"score": 0.0047709540557306284, "phrase": "practical_model-driven_engineering"}, {"score": 0.004536029676655286, "phrase": "model-driven_engineering"}, {"score": 0.004332471656145115, "phrase": "language_engineering"}, {"score": 0.004176194589991187, "phrase": "current_trend"}, {"score": 0.004081385289516914, "phrase": "two-level_meta-modelling_frameworks"}, {"score": 0.0037747835341722636, "phrase": "meta-modelling_approach"}, {"score": 0.0037231102027070724, "phrase": "arbitrary_number"}, {"score": 0.0033190180867511605, "phrase": "model_manipulation_languages"}, {"score": 0.0032436052954996097, "phrase": "different_possibilities"}, {"score": 0.0031121406603482112, "phrase": "multi-level_languages"}, {"score": 0.0030695103543472908, "phrase": "flexible_way"}, {"score": 0.0026373136897864763, "phrase": "practical_mde."}, {"score": 0.0025071862539276283, "phrase": "code_generation"}, {"score": 0.0024842242921857705, "phrase": "deep_languages"}, {"score": 0.0023079225317714815, "phrase": "fine-grain_control"}, {"score": 0.0021539955106204337, "phrase": "impedance_mismatch"}, {"score": 0.0021049977753042253, "phrase": "different_meta-levels"}], "paper_keywords": ["model-driven engineering", " deep meta-modelling", " multi-level meta-modelling", " deep characterization", " potency", " code generation"], "paper_abstract": "Meta-modelling is one of the pillars of model-driven engineering (MDE), where it is used for language engineering and domain modelling. Even though the current trend is the use of two-level meta-modelling frameworks, several researchers have pointed out limitations of this scheme for some scenarios and suggested a meta-modelling approach with an arbitrary number of meta-levels in order to obtain more flexible and simpler system descriptions. Unfortunately, such multi-level meta-modelling systems are still in their infancy, lacking, for example, integration with model manipulation languages, a characterization of different possibilities for instantiation and inheritance and primitives for interconnecting multi-level languages in a flexible way. In the paper, we propose a number of extensions to multi-level (also called deep) meta-modelling, on the basis of the needs raised by its use for practical MDE. In particular, we discuss on the issues related to code generation from deep languages, the benefits of allowing inheritance at every meta-level and patterns and techniques for a fine-grain control of the meta-level of elements. Finally, we provide primitives to control the impedance mismatch when connecting models at different meta-levels.", "paper_title": "Extending Deep Meta-Modelling for Practical Model-Driven Engineering", "paper_id": "WOS:000329132400003"}