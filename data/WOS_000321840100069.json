{"auto_keywords": [{"score": 0.043290286050755515, "phrase": "gpu"}, {"score": 0.010505618473239239, "phrase": "shared_memory"}, {"score": 0.00481495049065317, "phrase": "asynchronous_adaptive_anti-aliasing"}, {"score": 0.004485085675709643, "phrase": "real-time_graphics"}, {"score": 0.004263336444795021, "phrase": "novel_algorithm"}, {"score": 0.0038325685550319863, "phrase": "edge_aliasing_problem"}, {"score": 0.003291336101694653, "phrase": "sparse_set"}, {"score": 0.003258090521354736, "phrase": "important_pixels"}, {"score": 0.00309681702203087, "phrase": "geometric_silhouette_edges"}, {"score": 0.003019189898170698, "phrase": "frame_buffer"}, {"score": 0.002943502888225748, "phrase": "user-guided_artistic_control"}, {"score": 0.002797757576619329, "phrase": "fragment_shader"}, {"score": 0.0026457367614424756, "phrase": "shared_resources"}, {"score": 0.002414544068560716, "phrase": "shadow_mapping"}, {"score": 0.0023066199295447686, "phrase": "important_pixel"}, {"score": 0.0021923400552366756, "phrase": "multi-sampling_anti-aliasing"}, {"score": 0.0021049977753042253, "phrase": "extensive_code_base"}], "paper_keywords": ["visibility", " anti-aliasing", " shading", " rasterization"], "paper_abstract": "Edge aliasing continues to be one of the most prominent problems in real-time graphics, e.g., in games. We present a novel algorithm that uses shared memory between the GPU and the CPU so that these two units can work in concert to solve the edge aliasing problem rapidly. Our system renders the scene as usual on the GPU with one sample per pixel. At the same time, our novel edge aliasing algorithm is executed asynchronously on the CPU. First, a sparse set of important pixels is created. This set may include pixels with geometric silhouette edges, discontinuities in the frame buffer, and pixels/polygons under user-guided artistic control. After that, the CPU runs our sparse rasterizer and fragment shader, which is parallel and SIMD:ified, and directly accesses shared resources (e.g., render targets created by the GPU). Our system can render a scene with shadow mapping with adaptive anti-aliasing with 1 6 samples per important pixel faster than the GPU with 8 samples per pixel using multi-sampling anti-aliasing. Since our system consists of an extensive code base, it will be released to the public for exploration and usage.", "paper_title": "A(4): Asynchronous Adaptive Anti-Aliasing using Shared Memory", "paper_id": "WOS:000321840100069"}