{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "general_disjunctions"}, {"score": 0.00445293569103488, "phrase": "mixed-integer_linear_programs"}, {"score": 0.004306205029641728, "phrase": "branch-and-cut_algorithm"}, {"score": 0.004072275820209647, "phrase": "new_strategy"}, {"score": 0.00389427992231721, "phrase": "computational_experiments"}, {"score": 0.003293142761521422, "phrase": "traditional_branching"}, {"score": 0.0028795712616923462, "phrase": "continuous_variables"}, {"score": 0.0026626797255348287, "phrase": "enumeration_tree"}, {"score": 0.0024075916292945715, "phrase": "computing_time"}], "paper_keywords": ["Integer programming", " Branch and bound", " Split disjunctions"], "paper_abstract": "Within the context of solving Mixed-Integer Linear Programs by a Branch-and-Cut algorithm, we propose a new strategy for branching. Computational experiments show that, on the majority of our test instances, this approach enumerates fewer nodes than traditional branching. On average, on instances that contain both integer and continuous variables the number of nodes in the enumeration tree is reduced by more than a factor of two, and computing time is comparable. On a few instances, the improvements are of several orders of magnitude in both number of nodes and computing time.", "paper_title": "Improved strategies for branching on general disjunctions", "paper_id": "WOS:000297130400001"}