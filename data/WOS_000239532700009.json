{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "large_polygonal_mesh_simplification"}, {"score": 0.04515697567790779, "phrase": "main_memory_cost"}, {"score": 0.034275203764893944, "phrase": "new_approach"}, {"score": 0.004388796812234033, "phrase": "enormous_amounts"}, {"score": 0.004222515162635615, "phrase": "large_meshes"}, {"score": 0.003878451139312637, "phrase": "core_algorithms"}, {"score": 0.003702702337768558, "phrase": "-sampling_scheme"}, {"score": 0.0036178264212372497, "phrase": "low_quality_output"}, {"score": 0.003374655868348244, "phrase": "novel_cache-based_approach"}, {"score": 0.0030994630902300133, "phrase": "cache_layer"}, {"score": 0.0030283730114326014, "phrase": "external_memory_accesses"}, {"score": 0.002675797331220082, "phrase": "heap_size"}, {"score": 0.0025151755329660837, "phrase": "constant_sized_heap"}, {"score": 0.0024010535322709033, "phrase": "large_greedy_heap"}], "paper_keywords": ["cache-based polygonal mesh simplification", " large mesh", " iterative half-edge collapse", " quadric error metrics", " independent queuing"], "paper_abstract": "Traditional iterative contraction based polygonal mesh simplification (PMS) algorithms usually require enormous amounts of main memory cost in processing large meshes. On the other hand, fast out-of-core algorithms based on the grid re-sampling scheme usually produce low quality output. In this paper, we propose a novel cache-based approach to large polygonal mesh simplification. The new approach introduces the use of a cache layer to accelerate external memory accesses and to reduce the main memory cost to constant. Through the analysis on the impact of heap size to the locality of references, a constant sized heap is suggested instead of a large greedy heap. From our experimental results, we find that the new approach is able to generate very good quality approximations efficiently with very low main memory cost.", "paper_title": "A novel cache-based approach to large polygonal mesh simplification", "paper_id": "WOS:000239532700009"}