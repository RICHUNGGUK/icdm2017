{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "weighted_graphs"}, {"score": 0.0047563776685277314, "phrase": "mobile_ad_hoc_networks"}, {"score": 0.004641351004344458, "phrase": "grid_platforms"}, {"score": 0.004339108074589304, "phrase": "communication_costs"}, {"score": 0.0036329805216306576, "phrase": "disjoint_sets"}, {"score": 0.003293688299319582, "phrase": "designated_node"}, {"score": 0.003116913644889395, "phrase": "self-stabilizing_asynchronous_distributed_algorithm"}, {"score": 0.002949598537993663, "phrase": "connected_network"}, {"score": 0.002878140062594849, "phrase": "unique_ids"}, {"score": 0.0028430608076324727, "phrase": "weighted_edges"}, {"score": 0.002224510044064184, "phrase": "first_solution"}, {"score": 0.002183938718432764, "phrase": "k-clustering_problem"}], "paper_keywords": ["k-clustering", " Self-stabilization", " Weighted graph"], "paper_abstract": "Mobile ad hoc networks as well as grid platforms are distributed, changing, and error prone environments. Communication costs within such infrastructure can be improved, or at least bounded, by using k-clustering. A k-clustering of a graph, is a partition of the nodes into disjoint sets, called clusters, in which every node is distance at most k from a designated node in its cluster, called the clusterhead. A self-stabilizing asynchronous distributed algorithm is given for constructing a k-clustering of a connected network of processes with unique IDs and weighted edges. The algorithm is comparison based, takes O(nk) time, and uses O(log n + log k) space per process, where n is the size of the network. To the best of our knowledge, this is the first solution to the k-clustering problem on weighted graphs. (c) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A self-stabilizing k-clustering algorithm for weighted graphs", "paper_id": "WOS:000282191700007"}