{"auto_keywords": [{"score": 0.034182875683624124, "phrase": "bandwidth-adaptive_mechanism"}, {"score": 0.031618278413001126, "phrase": "base_adaptive_protocol"}, {"score": 0.00481495049065317, "phrase": "adaptive_cache_coherence_mechanisms"}, {"score": 0.004769702911065878, "phrase": "producer-consumer_sharing_optimization_for_chip_multiprocessors"}, {"score": 0.0047026237903774895, "phrase": "chip_multiprocessors"}, {"score": 0.004571269461883144, "phrase": "cache_coherence"}, {"score": 0.004464602028530629, "phrase": "major_performance_overhead"}, {"score": 0.004422632150619634, "phrase": "write-invalidate_protocols"}, {"score": 0.004159241394996858, "phrase": "producer-consumer_sharing_patterns"}, {"score": 0.003784209997115174, "phrase": "write-invalidate-based_protocols"}, {"score": 0.0036958398682001015, "phrase": "dynamic_write-update_mechanism"}, {"score": 0.0035925056609681194, "phrase": "write-invalidate_protocol"}, {"score": 0.0033943947596098583, "phrase": "producer-consumer_sharing_pattern"}, {"score": 0.0032838979278935814, "phrase": "adaptive_protocol"}, {"score": 0.0031920445513574907, "phrase": "performance_degradation"}, {"score": 0.003132236287543072, "phrase": "limited_bandwidth"}, {"score": 0.0030735451757603555, "phrase": "proximity-aware_mechanism"}, {"score": 0.0029594318330247614, "phrase": "latency-based_optimizations"}, {"score": 0.002822712709335093, "phrase": "scientific_applications"}, {"score": 0.0027437235598539904, "phrase": "parallel_benchmark_suites"}, {"score": 0.0027050595279115015, "phrase": "proposed_mechanisms"}, {"score": 0.002641823250595624, "phrase": "coherence_misses"}, {"score": 0.002580061425699194, "phrase": "return_speed"}, {"score": 0.002555761854502478, "phrase": "application_performance"}, {"score": 0.00240328454980006, "phrase": "varying_levels"}, {"score": 0.0023806459272452353, "phrase": "available_bandwidth"}, {"score": 0.0021656385587456952, "phrase": "analytical_model"}, {"score": 0.002145233716114996, "phrase": "good_estimates"}, {"score": 0.002125020720324262, "phrase": "performance_gains"}], "paper_keywords": ["Cache coherence", " producer/consumer", " chip multiprocessors (CMPs)", " adaptable architectures"], "paper_abstract": "In chip multiprocessors (CMPs), maintaining cache coherence can account for a major performance overhead. Write-invalidate protocols adapted by most CMPs generate high cache-to-cache misses under producer-consumer sharing patterns. Accordingly, this paper presents three cache coherence mechanisms optimized for CMPs. First, to reduce coherence misses observed in write-invalidate-based protocols, we propose a dynamic write-update mechanism augmented on top of a write-invalidate protocol. This mechanism is specifically triggered at the detection of a producer-consumer sharing pattern. Second, we extend this adaptive protocol with a bandwidth-adaptive mechanism to eliminate performance degradation from write-updates under limited bandwidth. Finally, proximity-aware mechanism is proposed to extend the base adaptive protocol with latency-based optimizations. Experimental analysis is conducted on a set of scientific applications from the SPLASH-2 and NAS parallel benchmark suites. The proposed mechanisms were shown to reduce coherence misses by up to 48% and in return speed up application performance up to 30%. Bandwidth-adaptive mechanism is proven to perform well under varying levels of available bandwidth. Results from our proposed proximity-aware extension demonstrated up to 6% performance gain over the base adaptive protocol for 64-core tiled CMP runs. In addition, the analytical model provided good estimates for performance gains from our adaptive protocols.", "paper_title": "Adaptive Cache Coherence Mechanisms with Producer-Consumer Sharing Optimization for Chip Multiprocessors", "paper_id": "WOS:000348053400002"}