{"auto_keywords": [{"score": 0.049445419527232116, "phrase": "network-based_file_systems"}, {"score": 0.030129419500953686, "phrase": "hccache"}, {"score": 0.025605087398271532, "phrase": "access_latency"}, {"score": 0.00481495049065317, "phrase": "hybrid_client-side_cache_management"}, {"score": 0.004688321299229397, "phrase": "client-side_caching"}, {"score": 0.004595529592539951, "phrase": "effective_technique"}, {"score": 0.00450456611645112, "phrase": "network_latency"}, {"score": 0.004186105377259855, "phrase": "block-indexed_caching_structures"}, {"score": 0.004075946554498088, "phrase": "cache_inefficiency_problems"}, {"score": 0.004021954624114115, "phrase": "high_concurrency_environment"}, {"score": 0.00378767277402891, "phrase": "hybrid_client-side_caching_scheme"}, {"score": 0.0036390887584943723, "phrase": "performance_degradation"}, {"score": 0.003543273649210823, "phrase": "block_interleaving_problem"}, {"score": 0.003449972561293443, "phrase": "cache_space_efficiency"}, {"score": 0.003381607100127276, "phrase": "content_addressable_levels"}, {"score": 0.0032925489316383955, "phrase": "different_sizes"}, {"score": 0.0031006232333900055, "phrase": "cache_efficiency"}, {"score": 0.0029789104204803137, "phrase": "hit_rate"}, {"score": 0.0029394074636168435, "phrase": "extensive_simulations"}, {"score": 0.002641621667026613, "phrase": "read_requests"}, {"score": 0.0025042115651986332, "phrase": "write_requests"}, {"score": 0.002235433376874495, "phrase": "lookup_times"}, {"score": 0.0021910825909008946, "phrase": "addressable_data_blocks"}, {"score": 0.0021049977753042253, "phrase": "small_files"}], "paper_keywords": ["client-side caching", " small files", " network-based file system"], "paper_abstract": "Client-side caching is an effective technique to hide network latency and improve I/O performance in network-based file systems. Current methods mainly adopt block-indexed caching structures, which suffer cache inefficiency problems in high concurrency environment. In this paper, we present a hybrid client-side caching scheme (HCCache) to avoid performance degradation caused by the block interleaving problem and increase the cache space efficiency by customizing content addressable levels for files with different sizes. Two new metrics are also proposed to accurately evaluate cache efficiency compared with the metrics of hit rate. Extensive simulations show the I/O performance with HCCache can be improved by 34.2 percent and 6.1 percent in average for read requests and 37.8 percent and 27.8 percent in average for write requests in terms of I/O bandwidth and access latency, respectively. Meanwhile, HCCache can significantly reduce the lookup times of content addressable data blocks and improve the access latency for small files.", "paper_title": "Towards hybrid client-side cache management in network-based file systems", "paper_id": "WOS:000331779200019"}