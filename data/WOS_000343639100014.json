{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "propositional_projection_temporal_logic"}, {"score": 0.049465088868450476, "phrase": "infinite_models"}, {"score": 0.0045726187330434025, "phrase": "practical_decision_procedure"}, {"score": 0.003310447652300423, "phrase": "accepting_state"}, {"score": 0.0031233388358844188, "phrase": "generalized_buchi_accepting_condition"}, {"score": 0.0026060359255636444, "phrase": "implementation_details"}, {"score": 0.002555950807368337, "phrase": "decision_procedure"}, {"score": 0.0025230952890994236, "phrase": "relevant_algorithms"}, {"score": 0.0024586427394152196, "phrase": "lnfg"}, {"score": 0.002411383506019635, "phrase": "finding_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Decision procedure", " Propositional Projection Temporal Logic", " Buchi accepting condition", " Automata", " Algorithm"], "paper_abstract": "This paper presents a practical decision procedure for Propositional Projection Temporal Logic with infinite models. First, a set Prop(i) of labels l(i), 0 <= i <= n is an element of N-0, is used to mark nodes of an LNFG of a formula, and a node with l(i) is treated as an accepting state as in an automaton. Further, the generalized Buchi accepting condition for automata is employed to identify a path (resulting a word) in an LNFG as a model of the formula. In addition, the implementation details of the decision procedure and relevant algorithms including preprocessing, LNFG, circle finding algorithms are presented; as a matter of fact, all algorithms are implemented by C++ programs. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A practical decision procedure for Propositional Projection Temporal Logic with infinite models", "paper_id": "WOS:000343639100014"}