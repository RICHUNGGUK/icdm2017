{"auto_keywords": [{"score": 0.043040455119669634, "phrase": "n_keys"}, {"score": 0.004659538620628888, "phrase": "fascinating_scientists"}, {"score": 0.004590557276496284, "phrase": "computer_science"}, {"score": 0.004247910389657671, "phrase": "underlying_total_order_relation"}, {"score": 0.004210050422187886, "phrase": "sorted_organization"}, {"score": 0.003977952748523497, "phrase": "worst_case"}, {"score": 0.003860961077439364, "phrase": "single_comparison"}, {"score": 0.0036155050447342226, "phrase": "general_case"}, {"score": 0.0035513038412674763, "phrase": "multidimensional_keys"}, {"score": 0.0033354158080573697, "phrase": "\"suitable\"_disorder"}, {"score": 0.0032372597425374366, "phrase": "natural_lexicographic_order"}, {"score": 0.003189266816073668, "phrase": "previous_work"}, {"score": 0.003160812175253167, "phrase": "andersson_et_al"}, {"score": 0.0030404045763332437, "phrase": "k_log_log"}, {"score": 0.0029333222445143705, "phrase": "tight_complexity"}, {"score": 0.002898470427651181, "phrase": "plain_sorted_array"}, {"score": 0.002804742334917208, "phrase": "lexicographic_order"}, {"score": 0.0027631437773897967, "phrase": "novel_permutation"}, {"score": 0.002689810805544938, "phrase": "sorted_order"}, {"score": 0.0024226175164573406, "phrase": "possible_permutations"}, {"score": 0.00238667288163314, "phrase": "constant_factor"}, {"score": 0.0021049977753042253, "phrase": "bit-probe_model"}], "paper_keywords": ["Implicit data structures", " in-place algorithms", " searching", " sorting"], "paper_abstract": "Questions about order versus disorder in systems and models have been fascinating scientists over the years. In computer science, order is intimately related to sorting, commonly meant as the task of arranging keys in increasing or decreasing order with respect to an underlying total order relation. The sorted organization is amenable for searching a set of n keys, since each search requires (log n) comparisons in the worst case, which is optimal if the cost of a single comparison can be considered a constant. Nevertheless, we prove that disorder implicitly provides more information than order does. For the general case of searching an array of multidimensional keys whose comparison cost is proportional to their length (and hence which cannot be considered a constant), we demonstrate that \"suitable\" disorder gives better bounds than those derivable by using the natural lexicographic order. We start from previous work done by Andersson et al. [ 2001], who proved that Theta(k log log n/log log(4 + k log log n/log n) + k + log n) character comparisons (or probes) comprise the tight complexity for searching a plain sorted array of n keys, each of length k, arranged in lexicographic order. We describe a novel permutation of the n keys that is different from the sorted order. When keys are kept \"unsorted\" in the array according to this permutation, the complexity of searching drops to Theta(k + log n) character comparisons (or probes) in the worst case, which is optimal among all possible permutations, up to a constant factor. Consequently, disorder carries more information than does order; this fact was not observable before, since the latter two bounds are Theta(log n) when k = O(1). More implications are discussed in the article, including searching in the bit-probe model.", "paper_title": "No Sorting? Better Searching!", "paper_id": "WOS:000265816600002"}