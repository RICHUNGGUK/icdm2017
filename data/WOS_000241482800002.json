{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cluster_editing_problem"}, {"score": 0.0043367547691560175, "phrase": "first_practical_implementation"}, {"score": 0.004202741104973709, "phrase": "fpt_based_method"}, {"score": 0.004115697805448384, "phrase": "cluster_editing"}, {"score": 0.0035176353680157367, "phrase": "straightforward_greedy_method"}, {"score": 0.003303412571939192, "phrase": "linear_programming"}, {"score": 0.0030062165552187086, "phrase": "best_results"}, {"score": 0.002823050755743821, "phrase": "refined_branching_method"}, {"score": 0.002387214876538434, "phrase": "interesting_lack"}, {"score": 0.0022653055209664284, "phrase": "running_times"}, {"score": 0.0021049977753042253, "phrase": "increasing_values"}], "paper_keywords": [""], "paper_abstract": "In this paper, we study the cluster editing problem which is fixed parameter tractable. We present the first practical implementation of a FPT based method for cluster editing, using the approach in [6,7], and compare our implementation with the straightforward greedy method and a solution based on linear programming [3]. Our experiments show that the best results are obtained by using the refined branching method in [7] together with interleaving (rekemelization). We also observe an interesting lack of monotonicity in the running times for \"yes\" instances with increasing values of k.", "paper_title": "The cluster editing problem: Implementations and experiments", "paper_id": "WOS:000241482800002"}