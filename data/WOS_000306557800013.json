{"auto_keywords": [{"score": 0.04942792624432652, "phrase": "simrank_computation"}, {"score": 0.04711071076300998, "phrase": "graph-based_analysis"}, {"score": 0.04354035476465974, "phrase": "simrank"}, {"score": 0.032538476298695544, "phrase": "large_graphs"}, {"score": 0.027477279717305847, "phrase": "dynamic_graphs"}, {"score": 0.00481495049065317, "phrase": "graphics_processors"}, {"score": 0.004771196027464407, "phrase": "high_performance"}, {"score": 0.004103817210338686, "phrase": "simple_and_influential_measure"}, {"score": 0.003956558420993431, "phrase": "solid_graph_theoretical_model"}, {"score": 0.0038849148160362257, "phrase": "existing_methods"}, {"score": 0.003711409222544974, "phrase": "computing_cost"}, {"score": 0.003433987036569199, "phrase": "static_graphs"}, {"score": 0.0032955848190195343, "phrase": "inherent_parallelism"}, {"score": 0.003265591844292821, "phrase": "high_memory_bandwidth"}, {"score": 0.0032358709481309913, "phrase": "graphics_processing_units"}, {"score": 0.0032066638578943127, "phrase": "gpu"}, {"score": 0.0028995712226514746, "phrase": "first-order_markov_chain"}, {"score": 0.0028082176224611542, "phrase": "iterative_aggregation_techniques"}, {"score": 0.002769950045729965, "phrase": "markov_chains"}, {"score": 0.0027322025124213566, "phrase": "simrank_scores"}, {"score": 0.0026461080202599694, "phrase": "iterative_aggregation_method"}, {"score": 0.0024593458703463474, "phrase": "node-updating_problem"}, {"score": 0.002403724423251419, "phrase": "corresponding_theoretical_justification"}, {"score": 0.0022962183207691188, "phrase": "computation_efficiency"}, {"score": 0.002244277924422011, "phrase": "proposed_algorithm"}, {"score": 0.002203570941628287, "phrase": "extensive_experiments"}, {"score": 0.0021049977753042253, "phrase": "proposed_methods"}], "paper_keywords": ["GPU", " parallel", " SimRank", " graph", " iterative aggregation"], "paper_abstract": "Recently there has been a lot of interest in graph-based analysis. One of the most important aspects of graph-based analysis is to measure similarity between nodes in a graph. SimRank is a simple and influential measure of this kind, based on a solid graph theoretical model. However, existing methods on SimRank computation suffer from two limitations: 1) the computing cost can be very high in practice; and 2) they can only be applied on static graphs. In this paper, we exploit the inherent parallelism and high memory bandwidth of graphics processing units (GPU) to accelerate the computation of SimRank on large graphs. Furthermore, based on the observation that SimRank is essentially a first-order Markov Chain, we propose to utilize the iterative aggregation techniques for uncoupling Markov chains to compute SimRank scores in parallel for large graphs. The iterative aggregation method can be applied on dynamic graphs. Moreover, it can handle not only the link-updating problem but also the node-updating problem. We give the corresponding theoretical justification and analysis, propose three optimization strategies to further improve the computation efficiency, and extend the proposed algorithm to dynamic graphs. Extensive experiments on synthetic and real data sets verify that the proposed methods are efficient and effective.", "paper_title": "Using Graphics Processors for High Performance SimRank Computation", "paper_id": "WOS:000306557800013"}