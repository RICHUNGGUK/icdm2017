{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "continuous_intersection"}, {"score": 0.04139562118340973, "phrase": "real-time_performance"}, {"score": 0.03761319459534229, "phrase": "mtb-join_algorithm"}, {"score": 0.004764004403553372, "phrase": "large_sets"}, {"score": 0.004680283709974884, "phrase": "graphic_processing_units"}, {"score": 0.004438097475732829, "phrase": "ci"}, {"score": 0.0041485458333515, "phrase": "real-time_application_performance_requirements"}, {"score": 0.003905689096176873, "phrase": "ci-join_query"}, {"score": 0.00376950244909, "phrase": "computational_power"}, {"score": 0.0037428381813152532, "phrase": "commodity_graphics_processing_units"}, {"score": 0.0036123093557208492, "phrase": "main_characteristics"}, {"score": 0.00346164863873186, "phrase": "key_challenges"}, {"score": 0.003424972304865554, "phrase": "efficient_gpu-based_algorithms"}, {"score": 0.0032704647689720326, "phrase": "multi-layered_grid_join"}, {"score": 0.003089807081149139, "phrase": "locality_friendly_indexing"}, {"score": 0.0027577972695911825, "phrase": "full_potential"}, {"score": 0.002728557856380231, "phrase": "memory_bandwidth"}, {"score": 0.0027092368768921542, "phrase": "parallel_processing"}, {"score": 0.002623967178291655, "phrase": "theoretical_analysis"}, {"score": 0.00257775722777195, "phrase": "pruning_power"}, {"score": 0.0025504217985882725, "phrase": "mlg-join_algorithm"}, {"score": 0.002435270624076196, "phrase": "optimal_parameter_values"}, {"score": 0.0024094425220967273, "phrase": "extensive_experimental_results"}, {"score": 0.002333586381274878, "phrase": "mlg-join_algorithm's_sensitivity"}, {"score": 0.0022843440226146005, "phrase": "proposed_mlg-join_algorithm"}, {"score": 0.0022283732760863756, "phrase": "gpu"}, {"score": 0.0021049977753042253, "phrase": "ci-join_queries"}], "paper_keywords": ["Spatial databases", " Moving Objects", " Continuous Intersection Join"], "paper_abstract": "The Multiple Time Bucket Join (MTB-join) algorithm is the state of the art for processing the continuous intersection join (CI-join) query over moving objects. It considerably outperforms alternatives, but still falls short of real-time application performance requirements for large sets of moving objects. In this paper, we achieve real-time performance for the CI-join query over large sets of moving objects by exploiting the computational power of commodity graphics processing units (GPUs). We first analyze how the main characteristics of the MTB-join algorithm make it ill suited to GPUs and identify key challenges in designing efficient GPU-based algorithms for the query. We then address these challenges by developing the multi-layered grid join (MLG-join) algorithm which has the following key features: (i) memory locality friendly indexing, (ii) no dynamic memory allocation, (iii) in-place object updates, (iv) lock-free concurrent updates, and (v) massive parallelism. These features unleash the full potential of the memory bandwidth and parallel processing of GPUs. Furthermore, we conduct a theoretical analysis which can predict the pruning power of the MLG-join algorithm given certain parameter values used in the algorithm. This allows us to select optimal parameter values. Through extensive experimental results, we show that our analysis accurately models the MLG-join algorithm's sensitivity to parameter values. The proposed MLG-join algorithm outperforms the MTB-join algorithm, and a GPU-based nested-loops join algorithm, by up to two orders of magnitude, and achieves real-time performance for CI-join queries on large sets of moving objects.", "paper_title": "Real-time continuous intersection joins over large sets of moving objects using graphic processing units", "paper_id": "WOS:000345093300007"}