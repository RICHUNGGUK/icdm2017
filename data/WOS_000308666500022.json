{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "two-agent_single-machine_problem"}, {"score": 0.003694884775158077, "phrase": "single-machine_problem"}, {"score": 0.003577414339646767, "phrase": "different_release_times"}, {"score": 0.0033971539563683174, "phrase": "total_tardiness"}, {"score": 0.003289117944111902, "phrase": "first_agent"}, {"score": 0.0032051601987130207, "phrase": "maximum_tardiness"}, {"score": 0.0031032109441552287, "phrase": "second_agent"}, {"score": 0.003004494701922268, "phrase": "upper_bound"}, {"score": 0.0028530201960995896, "phrase": "near-optimal_solutions"}, {"score": 0.0026743419827100225, "phrase": "-bound_algorithm"}, {"score": 0.0024906610581090223, "phrase": "reasonable_amount"}, {"score": 0.0022749744354271816, "phrase": "combined_genetic_algorithm"}, {"score": 0.002202547013259953, "phrase": "mean_error_percentages"}], "paper_keywords": ["Scheduling", " Total tardiness", " Two-agent", " Single-machine", " Release time", " Maximum tardiness"], "paper_abstract": "Scheduling with two competing agents has drawn a lot of attention lately. However, it is assumed that all the jobs are available in the beginning in most of the research. In this paper, we study a single-machine problem in which jobs have different release times. The objective is to minimize the total tardiness of jobs from the first agent given that the maximum tardiness of jobs from the second agent does not exceed an upper bound. Three genetic algorithms are proposed to obtain the near-optimal solutions. Computational results show that the branch-and-bound algorithm could solve most of the problems with 16 jobs within a reasonable amount of time. In addition, it shows that the performance of the combined genetic algorithm is very good with mean error percentages of less than 0.2% for all the cases. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Genetic algorithms for a two-agent single-machine problem with release time", "paper_id": "WOS:000308666500022"}