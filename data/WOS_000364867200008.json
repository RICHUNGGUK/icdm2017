{"auto_keywords": [{"score": 0.0436624912906422, "phrase": "scan_tree"}, {"score": 0.009943753381169578, "phrase": "full_scan_chain"}, {"score": 0.006806779701229929, "phrase": "inverse_compatibility"}, {"score": 0.00481495049065317, "phrase": "optimal_scan_tree"}, {"score": 0.004756233569671719, "phrase": "compact_test_patterns"}, {"score": 0.004717485406306594, "phrase": "test_time_reduction"}, {"score": 0.00467905143301368, "phrase": "scan_tree_architecture"}, {"score": 0.004546970518808189, "phrase": "test_application_time"}, {"score": 0.0044549056501745074, "phrase": "multiple_scan_cells"}, {"score": 0.0040713749949601915, "phrase": "inefficient_scan_tree"}, {"score": 0.004038183610525504, "phrase": "highly_compact_test_sets"}, {"score": 0.0037207397635410327, "phrase": "approximate_compatibility_relation"}, {"score": 0.0036903962975894634, "phrase": "completely_specified_test_data"}, {"score": 0.0035423376631308567, "phrase": "vertex_coloring_problem"}, {"score": 0.0034990853199511982, "phrase": "upper_bound"}, {"score": 0.003304097742490624, "phrase": "prime_factor"}, {"score": 0.003223883109446599, "phrase": "scan_tree_construction"}, {"score": 0.0031714880645482496, "phrase": "compatible_and_approximately_compatible_test_data"}, {"score": 0.003056682083784002, "phrase": "aggressive_approximate_compatibility"}, {"score": 0.002898127432512101, "phrase": "vertex_coloring"}, {"score": 0.0028627183712016894, "phrase": "q'-sd_connection"}, {"score": 0.0027141975147496264, "phrase": "timing_impact"}, {"score": 0.002659142621852998, "phrase": "fault_coverage"}, {"score": 0.002626645763725465, "phrase": "missing_faults"}, {"score": 0.0025945450101602825, "phrase": "tree_scan_mode"}, {"score": 0.0024903420152789135, "phrase": "linear_scan_mode"}, {"score": 0.0024700078414481297, "phrase": "negligible_hardware_overhead"}, {"score": 0.00241989408309933, "phrase": "experimental_results"}, {"score": 0.0022849068677290836, "phrase": "test_time"}, {"score": 0.002148604369150115, "phrase": "approximate_compatibility_method"}], "paper_keywords": ["Design-for-Testability", " scan tree", " test application time", " compatibility"], "paper_abstract": "Scan tree architecture has been proposed to reduce the test application time of full scan chain by placing multiple scan cells in parallel. Most existing techniques rely on non-compact test pattern sets to construct the scan tree. However, they produce inefficient scan tree when highly compact test sets with few don't cares are used. In this paper, the depth of the scan tree based on approximate compatibility relation for completely specified test data set is analyzed probabilistically by modeling its construction as a vertex coloring problem. The upper bound of edges-per-vertex is computed and demonstrated to be a prime factor that limits the efficiency of scan tree construction based on both compatible and approximately compatible test data between two flip-flops. Inverse compatibility and aggressive approximate compatibility are then proposed to increase the edges-per-vertex for vertex coloring. The Q'-SD connection between two adjacent scan cells is exploited to implement the inverse compatibility with no cost or timing impact. To maintain the fault coverage, the missing faults under the tree scan mode can be detected by switching the same base architecture into the linear scan mode with negligible hardware overhead as shown by the experimental results on ISCAS89, ISCAS99 and LGSynth93 benchmark circuits. On average, the scan tree generated by our method reduces the test time of the full scan chain by 56.65 percent, and that of the scan tree designed by the approximate compatibility method by 39.18 percent under the same compact test sets.", "paper_title": "Design of Optimal Scan Tree Based on Compact Test Patterns for Test Time Reduction", "paper_id": "WOS:000364867200008"}