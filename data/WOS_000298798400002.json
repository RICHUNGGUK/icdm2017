{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "agent_programming_languages"}, {"score": 0.0046046429665581555, "phrase": "verification_system"}, {"score": 0.004553510708976456, "phrase": "multi-agent_programs"}, {"score": 0.004428139418750855, "phrase": "first_comprehensive_approach"}, {"score": 0.00423465514675998, "phrase": "programming_languages"}, {"score": 0.0038510053729959074, "phrase": "specific_layer"}, {"score": 0.003703282519292336, "phrase": "underlying_verification_system"}, {"score": 0.003641713874009232, "phrase": "agent_programming_language"}, {"score": 0.003501991125315889, "phrase": "agent_programs"}, {"score": 0.0034437574674180365, "phrase": "relevant_model-checking_framework"}, {"score": 0.003348838095597268, "phrase": "abstraction_layer"}, {"score": 0.0031140747752837826, "phrase": "different_agent_programming_languages"}, {"score": 0.0029945352738604742, "phrase": "even_heterogeneous_multi-agent_programs"}, {"score": 0.002603758927691463, "phrase": "underlying_model-checker"}, {"score": 0.002531933388815139, "phrase": "agent_properties"}, {"score": 0.002263861731320045, "phrase": "first_system"}], "paper_keywords": ["Multi-agent systems", " Agent programming languages", " BDI formal verification", " Model checking", " Java PathFinder"], "paper_abstract": "In this paper we describe a verification system for multi-agent programs. This is the first comprehensive approach to the verification of programs developed using programming languages based on the BDI (belief-desire-intention) model of agency. In particular, we have developed a specific layer of abstraction, sitting between the underlying verification system and the agent programming language, that maps the semantics of agent programs into the relevant model-checking framework. Crucially, this abstraction layer is both flexible and extensible; not only can a variety of different agent programming languages be implemented and verified, but even heterogeneous multi-agent programs can be captured semantically. In addition to describing this layer, and the semantic mapping inherent within it, we describe how the underlying model-checker is driven and how agent properties are checked. We also present several examples showing how the system can be used. As this is the first system of its kind, it is relatively slow, so we also indicate further work that needs to be tackled to improve performance.", "paper_title": "Model checking agent programming languages", "paper_id": "WOS:000298798400002"}