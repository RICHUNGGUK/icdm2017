{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "aspect-oriented_software_design"}, {"score": 0.004736045157669388, "phrase": "aspect-oriented_programming"}, {"score": 0.0045318666714939905, "phrase": "independent_description"}, {"score": 0.004482206282876944, "phrase": "aspect_designs"}, {"score": 0.004384504920139083, "phrase": "incremental_design"}, {"score": 0.004172360444377281, "phrase": "conceptual_framework"}, {"score": 0.003778253716938922, "phrase": "existing_design"}, {"score": 0.003716273882758735, "phrase": "new_one"}, {"score": 0.003516898780234098, "phrase": "concern_architecture_model"}, {"score": 0.003421245054271364, "phrase": "group_designs"}, {"score": 0.0032916702592724217, "phrase": "explicit_their_dependencies"}, {"score": 0.00325555555110395, "phrase": "potential_interferences"}, {"score": 0.0031150035760241705, "phrase": "multiple_aspects"}, {"score": 0.002947790697936243, "phrase": "design_element"}, {"score": 0.00280496585980086, "phrase": "required_elements"}, {"score": 0.0027741761880779535, "phrase": "formal_parameters"}, {"score": 0.002669042572650594, "phrase": "existing_design_shows"}, {"score": 0.0025820967615278073, "phrase": "provided_parts"}, {"score": 0.0024434201175883674, "phrase": "partial_order"}, {"score": 0.0023249757987087033, "phrase": "concern_architecture_diagram"}, {"score": 0.0022122603123901114, "phrase": "uml_profile"}, {"score": 0.0021049977753042253, "phrase": "digital_sound_recorder"}], "paper_keywords": ["aspect orientation", " design concepts", " UML"], "paper_abstract": "Although aspect-oriented programming is becoming popular, support for the independent description of aspect designs and for the incremental design of aspects themselves has been neglected. A conceptual framework for the design of aspects is presented, where aspects are viewed as augmentations that map an existing design into a new one with changes or additions. The principles of a Concern Architecture model are defined both to group designs of aspects, and to make explicit their dependencies and potential interferences in the design of a system with multiple aspects. The aspects are described generically, where any design element can be either required or provided. The required elements resemble formal parameters, and their binding to an existing design shows the context in which the provided parts are to modify that design. Overlap and a partial order among aspects and concerns are visualized in a Concern Architecture Diagram. An instantiation of the ideas as a UML profile is outlined, and the design of a digital sound recorder is used to demonstrate the utility of the approach.", "paper_title": "A concern architecture view for aspect-oriented software design", "paper_id": "WOS:000254667900003"}