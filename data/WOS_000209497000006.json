{"auto_keywords": [{"score": 0.04932930879059259, "phrase": "case_study"}, {"score": 0.032373429275013854, "phrase": "frequent_patterns"}, {"score": 0.00481495049065317, "phrase": "mining_stars_with_fp-growth"}, {"score": 0.004568108391981922, "phrase": "single_table"}, {"score": 0.004496542293425754, "phrase": "multi-relational_data_mining"}, {"score": 0.00433386573276633, "phrase": "multiple_tables"}, {"score": 0.004068510313497539, "phrase": "multi-relational_context"}, {"score": 0.0037793152987497286, "phrase": "multi-dimensional_model"}, {"score": 0.0035853745478488254, "phrase": "central_huge_fact_table"}, {"score": 0.003492155652400838, "phrase": "small_dimension_tables"}, {"score": 0.003312901888725435, "phrase": "feasible_solution"}, {"score": 0.0032437952431945724, "phrase": "usual_massive_number"}, {"score": 0.0029814443878969973, "phrase": "star_schema"}, {"score": 0.0027547408718334603, "phrase": "algorithm_fp-growth"}, {"score": 0.00268306050344573, "phrase": "fp-tree"}, {"score": 0.0025052769325080255, "phrase": "fact_table"}, {"score": 0.0024529757621396717, "phrase": "super_fp-tree"}, {"score": 0.002207363758847308, "phrase": "bibliographic_data"}, {"score": 0.002104998402294156, "phrase": "fp-growth"}], "paper_keywords": ["Pattern mining", " multi-relational data mining", " star schema", " FP-growth"], "paper_abstract": "Traditional data mining approaches look for patterns in a single table, while multi-relational data mining aims for identifying patterns that involve multiple tables. In recent years, the most common mining techniques have been extended to the multi-relational context, but there are few dedicated to deal with data stored following the multi-dimensional model, in particular the star schema. These schemas are composed of a central huge fact table linking a set of small dimension tables. Joining all the tables before mining may not be a feasible solution due to the usual massive number of records. This work proposes a method for mining frequent patterns on data following a star schema that does not materialize the join between the tables. As it extends the algorithm FP-Growth, it constructs an FP-Tree for each dimension and then combines them through the records in the fact table to form a super FP-Tree. This tree is then mined with FP-growth to find all frequent patterns. The paper presents a case study on bibliographic data, comparing efficiency and scalability of our algorithm against FP-Growth.", "paper_title": "MINING STARS WITH FP-GROWTH: A CASE STUDY ON BIBLIOGRAPHIC DATA", "paper_id": "WOS:000209497000006"}