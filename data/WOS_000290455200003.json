{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multiprocessor_scheduling"}, {"score": 0.004632039024076267, "phrase": "composite_algorithm"}, {"score": 0.004342430078306461, "phrase": "classical_problem"}, {"score": 0.0041773934798743405, "phrase": "independent_jobs"}, {"score": 0.0040708542958968605, "phrase": "identical_parallel_machines"}, {"score": 0.003267925215811654, "phrase": "initial_partial_solutions"}, {"score": 0.0031032109441552287, "phrase": "partial_solutions"}, {"score": 0.002985130390111069, "phrase": "feasible_solution"}, {"score": 0.0027982016314450717, "phrase": "local_search_procedures"}, {"score": 0.0022749744354271816, "phrase": "extensive_computational_comparisons"}, {"score": 0.0022168460543913787, "phrase": "recent_improvement_heuristics"}, {"score": 0.0021601997088758957, "phrase": "different_classes"}, {"score": 0.0021049977753042253, "phrase": "benchmark_instances"}], "paper_keywords": ["Scheduling", " Identical parallel machines", " Approximation algorithms"], "paper_abstract": "A composite algorithm is developed for the classical problem of scheduling independent jobs on identical parallel machines with the objective of minimizing the makespan. The algorithm at first obtains a family of initial partial solutions and combines these partial solutions until a feasible solution is generated. Then local search procedures are used for improving the solution. The effectiveness of this approach is evaluated through extensive computational comparisons with recent improvement heuristics for different classes of benchmark instances.", "paper_title": "A composite algorithm for multiprocessor scheduling", "paper_id": "WOS:000290455200003"}