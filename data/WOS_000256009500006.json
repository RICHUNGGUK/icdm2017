{"auto_keywords": [{"score": 0.03703953629110322, "phrase": "t."}, {"score": 0.00481495049065317, "phrase": "ziv-lempel_dictionary"}, {"score": 0.004740009255053372, "phrase": "compressed_full-text_self-index"}, {"score": 0.004569630374630379, "phrase": "size_u"}, {"score": 0.004475022550508119, "phrase": "data_structure"}, {"score": 0.0042692243768616455, "phrase": "size_m"}, {"score": 0.004115697805448384, "phrase": "reduced_space"}, {"score": 0.003946960862020283, "phrase": "empirical_entropy"}, {"score": 0.0033910448175165004, "phrase": "new_compressed_self-index"}, {"score": 0.002974886152979993, "phrase": "fundamental_improvement"}, {"score": 0.0028527866590859967, "phrase": "search_time_dependency"}, {"score": 0.0025824576209656676, "phrase": "main_obstacle"}, {"score": 0.002374735066990346, "phrase": "recurrent_structure"}], "paper_keywords": ["pattern matching", " text indexing", " data compression", " compressed index"], "paper_abstract": "A compressed full-text self-index for a text T, of size u, is a data structure used to search for patterns P, of size m, in T, that requires reduced space, i.e. space that depends on the empirical entropy (H(k) or H(0)) of T, and is, furthermore, able to reproduce any substring of T. In this paper we present a new compressed self-index able to locate the occurrences of P in O((m + occ)log u) time, where occ is the number of occurrences. The fundamental improvement over previous LZ78 based indexes is the reduction of the search time dependency on m from O(m(2)) to O(m). To achieve this result we point out the main obstacle to linear time algorithms based on LZ78 data compression and expose and explore the nature of a recurrent structure in LZ-indexes, the T(78) suffix tree. We show that our method is very competitive in practice by comparing it against other state of the art compressed indexes.", "paper_title": "A compressed self-index using a Ziv-Lempel dictionary", "paper_id": "WOS:000256009500006"}