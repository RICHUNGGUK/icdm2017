{"auto_keywords": [{"score": 0.04930986456658361, "phrase": "parallel_computers"}, {"score": 0.00481495049065317, "phrase": "automated_model"}, {"score": 0.004611369021812453, "phrase": "computing_power"}, {"score": 0.004512814529823301, "phrase": "biologically_accurate_neuronal_network_models"}, {"score": 0.004094639048362357, "phrase": "cpu._automatic"}, {"score": 0.004007083686875716, "phrase": "large_models"}, {"score": 0.0036950408193035284, "phrase": "intrinsic_asymmetries"}, {"score": 0.0035771121569391916, "phrase": "dynamical_behavior"}, {"score": 0.00342568771304873, "phrase": "procedural_nature"}, {"score": 0.0033888405252810927, "phrase": "current_modeling_languages"}, {"score": 0.003074495313651187, "phrase": "neurospaces_modeling_system"}, {"score": 0.0029602552900111407, "phrase": "large_and_complicated_neuronal_models"}, {"score": 0.0028502479839354637, "phrase": "software_system"}, {"score": 0.0024495111090152857, "phrase": "large_model"}, {"score": 0.0021745003291048356, "phrase": "large_network_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["simulation", " middleware", " parallelization", " modeling"], "paper_abstract": "Parallel computers have the computing power needed to simulate biologically accurate neuronal network models. Partitioning is the process of cutting a model in pieces and assigning each piece to a CPU. Automatic partitioning algorithms for large models are difficult to design for two fundamental reasons. First, the algorithms must track the intrinsic asymmetries in the models and the dynamical behavior of the simulation. Second, the procedural nature of current modeling languages makes it difficult to extract the information needed by the algorithms. From the start, the Neurospaces modeling system has been designed to deal with large and complicated neuronal models. The declarative nature of the software system allows to extract any kind of information from the model. In this work, we first show how to extract the information needed to partition a large model for simulation on parallel computers. Next, we use this information to compute a possible partitioning for a small and a large network model. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Neuro spaces: Towards automated model partitioning for parallel computers", "paper_id": "WOS:000247215300099"}