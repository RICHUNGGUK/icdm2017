{"auto_keywords": [{"score": 0.04161385901257015, "phrase": "scp"}, {"score": 0.015719628183056274, "phrase": "checkpoint_problem"}, {"score": 0.012382291774670456, "phrase": "mcp"}, {"score": 0.004748318286361316, "phrase": "undirected_graph"}, {"score": 0.004691935905355025, "phrase": "source-destination_pairs"}, {"score": 0.004281242731987055, "phrase": "feasible_solution"}, {"score": 0.004255737171653516, "phrase": "multicut_e"}, {"score": 0.004155219098477439, "phrase": "source-destination_pair"}, {"score": 0.003984968827278219, "phrase": "sum_checkpoint"}, {"score": 0.0037988893085286403, "phrase": "maximum_checkpoint"}, {"score": 0.0036070601923916196, "phrase": "urban_transportation"}, {"score": 0.003592710247532986, "phrase": "network_security"}, {"score": 0.003528836202016651, "phrase": "multicut_problem"}, {"score": 0.0035077973223514467, "phrase": "minimum_membership"}, {"score": 0.0034938408896424103, "phrase": "cover_problem"}, {"score": 0.0034660938095219846, "phrase": "sum_objective"}, {"score": 0.0033639840192975835, "phrase": "undirected_multicut"}, {"score": 0.0032975819773787985, "phrase": "general_graphs"}, {"score": 0.003264872488939969, "phrase": "max_objective"}, {"score": 0.003245402232273393, "phrase": "wide_gap"}, {"score": 0.0032132086583499296, "phrase": "approximation_factor"}, {"score": 0.0030876166546179263, "phrase": "np."}, {"score": 0.0030266237956240835, "phrase": "open_problem"}, {"score": 0.0030146026981753686, "phrase": "nelson"}, {"score": 0.00289092521987827, "phrase": "asymptotic_approximation_factor"}, {"score": 0.0028057119690121403, "phrase": "ancestor-descendant_relation"}, {"score": 0.002777867856473355, "phrase": "combinatorial_exact_algorithm"}, {"score": 0.0026959780873377667, "phrase": "lp_algorithm"}, {"score": 0.0026745503978347143, "phrase": "total_unimodularity"}, {"score": 0.002642726922072074, "phrase": "strong_hardness"}, {"score": 0.0026269570881543307, "phrase": "well-known_problem"}, {"score": 0.002595698433525986, "phrase": "minimum_forbidden_pairs"}, {"score": 0.002312020305642701, "phrase": "strongest_type"}, {"score": 0.002270863487266352, "phrase": "directed_acyclic_graphs"}, {"score": 0.002252806984976934, "phrase": "huge_improvement"}, {"score": 0.002239358679763716, "phrase": "plain_np-hardness"}, {"score": 0.002230439666005797, "phrase": "gabow"}, {"score": 0.0022215521264424944, "phrase": "h.n._gabow"}, {"score": 0.0021907299375981356, "phrase": "superpolylogarithmic_length"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cuts", " Checkpoint", " Algorithms", " Approximation"], "paper_abstract": "In this paper, we consider the checkpoint problem. The input consists of an undirected graph G, a set of source-destination pairs {(s(1), t(1)), (s(2,) t(2)), ... , (s(k), t(k))}, and a collection P of paths connecting the (s(1), t(1)) pairs. A feasible solution is a multicut E', namely, a set of edges whose removal disconnects every source-destination pair. For each p is an element of P we define cp(E')(p) = |p boolean AND E'|. In the sum checkpoint (SCP) problem the goal is to minimize Sigma(p is an element of), p cp(E')(p), while in the maximum checkpoint (MCP) problem the goal is to minimize max(p is an element of),p cp(E')(p). These problems have several natural applications, e.g., in urban transportation and network security. In a sense, they combine the multicut problem and the minimum membership set cover problem. For the sum objective we show that weighted SCP is equivalent, with respect to approximability, to undirected multicut. Thus there exists an 0(log n) approximation for SCP in general graphs. Our current approximability results for the max objective have a wide gap: we provide an approximation factor of 0(root n log n/opt) for MCP and a hardness of 2 under the assumption P not equal NP. The hardness holds for trees. This solves an open problem of Nelson (2009) [25]. We complement the lower bound by an almost matching upper bound with an asymptotic approximation factor of 2. On trees with all s(i), t(i) having an ancestor-descendant relation, we give a combinatorial exact algorithm. Besides the algorithm being combinatorial, its running time improves by many orders of magnitude the LP algorithm that follows from total unimodularity. Finally, we show strong hardness for the well-known problem of finding a path with minimum forbidden pairs, which in a sense can be considered the dual to the checkpoint problem. Despite various works on this problem, hardness of approximation was not known prior to this work. We show that the problem cannot be approximated within c n for some constant c > 0, unless P = NP. This is the strongest type of hardness possible. It carries over to directed acyclic graphs and is a huge improvement over the plain NP-hardness of Gabow [H.N. Gabow, Finding paths and cycles of superpolylogarithmic length, SIAM J. Comput. 36 (6) (2007) 1648-1671]. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "The checkpoint problem", "paper_id": "WOS:000307492900008"}