{"auto_keywords": [{"score": 0.02422011106817354, "phrase": "rap"}, {"score": 0.00481495049065317, "phrase": "interactive_web_gis_applications"}, {"score": 0.004741845603430361, "phrase": "major_task"}, {"score": 0.004506048850130758, "phrase": "client_applications"}, {"score": 0.004195418010131832, "phrase": "inefficient_process"}, {"score": 0.003906116922372891, "phrase": "client_side"}, {"score": 0.0034733518170738517, "phrase": "next_possible_requests"}, {"score": 0.0032008144731234265, "phrase": "remarkable_performance_improvement"}, {"score": 0.003025915966640355, "phrase": "caching_mechanisms"}, {"score": 0.002875200380397413, "phrase": "efficient_prefetching_algorithm"}, {"score": 0.0028459677232555176, "phrase": "retrospective_adaptive_prefetch"}, {"score": 0.0027041907335656782, "phrase": "heuristic_method"}, {"score": 0.0026494723416072316, "phrase": "former_actions"}, {"score": 0.002530359917257626, "phrase": "user-perceived_response_time"}, {"score": 0.0024918548761791435, "phrase": "user_navigation_efficiency"}, {"score": 0.00240426758768164, "phrase": "cache_size"}, {"score": 0.002331641523873951, "phrase": "memory_size"}, {"score": 0.0022961534630650347, "phrase": "client's_machine"}, {"score": 0.002137537770621167, "phrase": "better_performance_enhancements"}], "paper_keywords": ["WEB GIS", " Cache", " Prefetching", " Performance"], "paper_abstract": "A major task of a Web GIS (Geographic Information Systems) system is to transfer map data to client applications over the Internet, which may be too costly. To improve this inefficient process, various solutions are available. Caching the responses of the requests on the client side is the most commonly implemented solution. However, this method may not be adequate by itself. Besides caching the responses, predicting the next possible requests from a client and updating the cache with responses for those requests together provide a remarkable performance improvement. This procedure is called \"prefetching\" and makes caching mechanisms more effective and efficient. This paper proposes an efficient prefetching algorithm called Retrospective Adaptive Prefetch (RAP), which is constructed over a heuristic method that considers the former actions of a given user. The algorithm reduces the user-perceived response time and improves user navigation efficiency. Additionally, it adjusts the cache size automatically, based on the memory size of the client's machine. RAP is compared with four other prefetching algorithms. The experiments show that RAP provides better performance enhancements than the other methods.", "paper_title": "Retrospective adaptive prefetching for interactive Web GIS applications", "paper_id": "WOS:000300159500002"}