{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "psi-calculi"}, {"score": 0.0456669610007572, "phrase": "data_structures"}, {"score": 0.0047057084749407485, "phrase": "mobile_processes"}, {"score": 0.004412780054037622, "phrase": "nominal_datatypes"}, {"score": 0.004312622975366676, "phrase": "logical_assertions"}, {"score": 0.0039522429946090174, "phrase": "standard_pi-calculus"}, {"score": 0.0036553070575015344, "phrase": "applied_pi-calculus"}, {"score": 0.003349670229755675, "phrase": "polyadic_communication_channels"}, {"score": 0.0033190180867511605, "phrase": "pattern_matching"}, {"score": 0.003126481516783286, "phrase": "structured_channels"}, {"score": 0.003097865379563127, "phrase": "higher-order_formalisms"}, {"score": 0.0030414140732789186, "phrase": "lambda_calculus"}, {"score": 0.002878140062594849, "phrase": "ample_comparisons"}, {"score": 0.002851790448644913, "phrase": "related_calculi"}, {"score": 0.0026494723416072316, "phrase": "structural_congruence"}, {"score": 0.0026011706232569316, "phrase": "minimal_requirements"}, {"score": 0.0025655216052760093, "phrase": "nominal_data"}, {"score": 0.0024842242921857705, "phrase": "general_algebraic_properties"}, {"score": 0.0023507916951658455, "phrase": "interactive_theorem"}, {"score": 0.0021049977753042253, "phrase": "original_pi-calculus"}], "paper_keywords": ["pi-calculus", " nominal sets", " bisimulation", " operational semantics", " theorem prover"], "paper_abstract": "The framework of psi-calculi extends the pi-calculus with nominal datatypes for data structures and for logical assertions and conditions. These can be transmitted between processes and their names can be statically scoped as in the standard pi-calculus. Psi-calculi can capture the same phenomena as other proposed extensions of the pi-calculus such as the applied pi-calculus, the spi-calculus, the fusion calculus, the concurrent constraint pi-calculus, and calculi with polyadic communication channels or pattern matching. Psi-calculi can be even more general, for example by allowing structured channels, higher-order formalisms such as the lambda calculus for data structures, and predicate logic for assertions. We provide ample comparisons to related calculi and discuss a few significant applications. Our labelled operational semantics and definition of bisimulation is straightforward, without a structural congruence. We establish minimal requirements on the nominal data and logic in order to prove general algebraic properties of psi-calculi, all of which have been checked in the interactive theorem prover Isabelle. Expressiveness of psi-calculi significantly exceeds that of other formalisms, while the purity of the semantics is on par with the original pi-calculus.", "paper_title": "PSI-CALCULI: A FRAMEWORK FOR MOBILE PROCESSES WITH NOMINAL DATA AND LOGIC", "paper_id": "WOS:000290278900011"}