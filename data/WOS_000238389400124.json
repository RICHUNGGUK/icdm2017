{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallelism_exploitation"}, {"score": 0.004552648949390462, "phrase": "structured_parallel_programming"}, {"score": 0.00379452936798156, "phrase": "parallel_applications"}, {"score": 0.0030319482153908037, "phrase": "arbitrary_parallelism_exploitation_patterns"}, {"score": 0.0027100527874262446, "phrase": "data_flow_implementation_methodology"}, {"score": 0.0025264171945423254, "phrase": "parallel_programming_environments"}, {"score": 0.0021049977753042253, "phrase": "structured_parallel_programming_models"}], "paper_keywords": [""], "paper_abstract": "Structured parallel programming promises to raise the level of abstraction perceived by programmers when implementing parallel applications. In the meanwhile, however, it restricts the freedom of programmers to implement arbitrary parallelism exploitation patterns. In this work we discuss a data flow implementation methodology for skeleton based structured parallel programming environments that easily integrates arbitrary, user-defined parallelism exploitation patterns while preserving most of the benefits typical of structured parallel programming models.", "paper_title": "Joint structured/unstructured parallelism exploitation in muskel", "paper_id": "WOS:000238389400124"}