{"auto_keywords": [{"score": 0.04099618964063814, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "gate_sizing"}, {"score": 0.004735254735115024, "phrase": "graphics_processing_units"}, {"score": 0.004392565073466714, "phrase": "gate_sizing_problem"}, {"score": 0.0039737570920809215, "phrase": "graphics_processing_unit"}, {"score": 0.0036248955128033084, "phrase": "randomized_cutting_plane-based_convex_optimization_technique"}, {"score": 0.003334309053314909, "phrase": "single_instruction_multiple_data_structure"}, {"score": 0.0029169007179202164, "phrase": "gpu-oriented_implementation_guidelines"}, {"score": 0.0028209599545587745, "phrase": "specific_structure"}, {"score": 0.0027741761880779535, "phrase": "convex_gate_sizing_formulations"}, {"score": 0.0026164433143193015, "phrase": "nvidia_tesla"}, {"score": 0.002426717832834137, "phrase": "mosek_optimization_tool"}, {"score": 0.0023665766694993535, "phrase": "conventional_cpu."}, {"score": 0.002104998088779251, "phrase": "mosek"}], "paper_keywords": ["Cutting plane method", " gate sizing", " GPU", " parallel"], "paper_abstract": "In this paper, we investigate the gate sizing problem and develop techniques for improving the runtime by effectively exploiting the graphics processing unit (GPU) resources. Theoretically, we investigate a randomized cutting plane-based convex optimization technique which is highly parallelizable and can effectively exploit the single instruction multiple data structure imposed by GPUs. In order to further improve the runtime, we also develop GPU-oriented implementation guidelines that exploit the specific structure that convex gate sizing formulations impose. We implemented our method on NVIDIA Tesla 10 GPU and obtain 21x to 400x speedup compared to the MOSEK optimization tool implemented on conventional CPU. The quality of solution of our method is very close to that achieved by MOSEK, since both are optimal.", "paper_title": "Accelerating Gate Sizing Using Graphics Processing Units", "paper_id": "WOS:000298327500015"}