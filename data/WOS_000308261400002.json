{"auto_keywords": [{"score": 0.037423767602129, "phrase": "vms"}, {"score": 0.00481495049065317, "phrase": "dynamic_allocation_of_spm"}, {"score": 0.004755353864362941, "phrase": "time-slotted_cache_conflict_graph_for_system_optimization"}, {"score": 0.004638354165775803, "phrase": "novel_dynamic_scratch-pad_memory_allocation_strategy"}, {"score": 0.004486800020569973, "phrase": "memory_sub-system"}, {"score": 0.004394592555435104, "phrase": "whole_program_execution_process"}, {"score": 0.004270191672151762, "phrase": "spm."}, {"score": 0.004250969091124481, "phrase": "temporal_dimension"}, {"score": 0.004163587877500036, "phrase": "time-slotted_cache_conflict_graph"}, {"score": 0.004129138311177554, "phrase": "tsccg"}, {"score": 0.003847546889061499, "phrase": "integer_nonlinear_programming"}, {"score": 0.003690927840780375, "phrase": "time-consuming_linearization_process"}, {"score": 0.003585089792133518, "phrase": "virtual_memory_system"}, {"score": 0.00345344412693677, "phrase": "data_pages"}, {"score": 0.0033824008297657494, "phrase": "severe_cache_conflicts"}, {"score": 0.003340475943517995, "phrase": "time_slot"}, {"score": 0.0032177835714470027, "phrase": "swapping_overhead"}, {"score": 0.003191134522157061, "phrase": "dynamic_spm_allocation"}, {"score": 0.003151572886432253, "phrase": "novel_spm_controller"}, {"score": 0.0031125001790084936, "phrase": "tightly_coupled_dma"}, {"score": 0.0030357976028714557, "phrase": "swapping_operations"}, {"score": 0.003010651173285521, "phrase": "cpu's_intervention"}, {"score": 0.00284034646798833, "phrase": "system_energy_profit"}, {"score": 0.002805121439110729, "phrase": "different_mmu_page_size"}, {"score": 0.002657445352746803, "phrase": "proposed_method"}, {"score": 0.002591927716261631, "phrase": "data_segments"}, {"score": 0.002559775585192185, "phrase": "global_data"}, {"score": 0.002517524071220657, "phrase": "stack_data"}, {"score": 0.0024452510143564057, "phrase": "total_energy_consumption"}, {"score": 0.002335838283092986, "phrase": "marginal_performance_promotion"}, {"score": 0.0022782315534795516, "phrase": "conventional_static_ccg"}, {"score": 0.0021049977753042253, "phrase": "sight_boost"}], "paper_keywords": ["time-slotted cache conflict graph", " SPM controller", " energy optimization", " dynamic SPM allocation strategy"], "paper_abstract": "This paper proposes a novel dynamic Scratch-pad Memory allocation strategy to optimize the energy consumption of the memory sub-system. Firstly, the whole program execution process is sliced into several time slots according to the temporal dimension; thereafter, a Time-Slotted Cache Conflict Graph (TSCCG) is introduced to model the behavior of Data Cache (D-Cache) conflicts within each time slot. Then, Integer Nonlinear Programming (INP) is implemented, which can avoid time-consuming linearization process, to select the most profitable data pages. Virtual Memory System (VMS) is adopted to remap those data pages, which will cause severe Cache conflicts within a time slot, to SPM. In order to minimize the swapping overhead of dynamic SPM allocation, a novel SPM controller with a tightly coupled DMA is introduced to issue the swapping operations without CPU's intervention. Last but not the least, this paper discusses the fluctuation of system energy profit based on different MMU page size as well as the Time Slot duration quantitatively. According to our design space exploration, the proposed method can optimize all of the data segments, including global data, heap and stack data in general, and reduce the total energy consumption by 27.28% on average, up to 55.22% with a marginal performance promotion. And comparing to the conventional static CCG (Cache Conflicts Graph), our approach can obtain 24.7% energy profit on average, up to 30.5% with a sight boost in performance.", "paper_title": "Dynamic Allocation of SPM Based on Time-Slotted Cache Conflict Graph for System Optimization", "paper_id": "WOS:000308261400002"}