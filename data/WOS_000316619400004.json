{"auto_keywords": [{"score": 0.04287601807254023, "phrase": "clone_evolution"}, {"score": 0.005467550178057079, "phrase": "review_results"}, {"score": 0.00481495049065317, "phrase": "code_clones"}, {"score": 0.004799675451046427, "phrase": "similar_or_identical_source_code_fragments"}, {"score": 0.00464977694417864, "phrase": "software_evolution"}, {"score": 0.004576253356889219, "phrase": "clone_detection_results"}, {"score": 0.0045328270272981825, "phrase": "single_source_code_version"}, {"score": 0.004419018661564621, "phrase": "discrete_state"}, {"score": 0.00433553336181385, "phrase": "software_system"}, {"score": 0.004240116703465252, "phrase": "multiple_source_code_versions"}, {"score": 0.004199866682506738, "phrase": "clone_analysis"}, {"score": 0.004146791234307539, "phrase": "temporal_dimension"}, {"score": 0.003459191419478298, "phrase": "key_role"}, {"score": 0.0032666255024083983, "phrase": "systematic_review"}, {"score": 0.0031342307827666675, "phrase": "detailed_analysis"}, {"score": 0.0025974916908139472, "phrase": "inconsistent_change_undergone"}, {"score": 0.0023986960505076784, "phrase": "reported_findings"}, {"score": 0.0023458049872325214, "phrase": "clone_lineages"}, {"score": 0.0022434880661725493, "phrase": "human-based_empirical_studies"}, {"score": 0.002215081186105616, "phrase": "clone_evolution_patterns"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["code clones", " clone evolution", " systematic literature review"], "paper_abstract": "Detection of code clones similar or identical source code fragments is of concern both to researchers and to practitioners. An analysis of the clone detection results for a single source code version provides a developer with information about a discrete state in the evolution of the software system. However, tracing clones across multiple source code versions permits a clone analysis to consider a temporal dimension. Such an analysis of clone evolution can be used to uncover the patterns and characteristics exhibited by clones as they evolve within a system. Developers can use the results of this analysis to understand the clones more completely, which may help them to manage the clones more effectively. Thus, studies of clone evolution serve a key role in understanding and addressing issues of cloning in software. In this paper, we present a systematic review of the literature on clone evolution. In particular, we present a detailed analysis of 30 relevant papers that we identified in accordance with our review protocol. The review results were organized to address three research questions. Through our answers to these questions, we present the methods that researchers have used to study clone evolution, the patterns that researchers have found evolving clones to exhibit, and the evidence that researchers have established regarding the extent of inconsistent change undergone by clones during software evolution. Overall, the review results indicate that whereas researchers have conducted several empirical studies of clone evolution, there are contradictions among the reported findings, particularly regarding the lifetimes of clone lineages and the consistency with which clones are changed during software evolution. We identify human-based empirical studies and classification of clone evolution patterns as two areas that are in particular need of further work. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "Clone evolution: a systematic review", "paper_id": "WOS:000316619400004"}