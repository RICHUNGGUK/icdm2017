{"auto_keywords": [{"score": 0.038542532736589245, "phrase": "dito"}, {"score": 0.008758772935585623, "phrase": "challenging_problem"}, {"score": 0.007106629626840832, "phrase": "skyline_objects"}, {"score": 0.004815072276927216, "phrase": "distributed"}, {"score": 0.004656082803151484, "phrase": "skyline_summaries"}, {"score": 0.00444612502361583, "phrase": "rank-aware_query_operators"}, {"score": 0.004020185355794902, "phrase": "multiple_servers"}, {"score": 0.003903789851015775, "phrase": "rank-aware_queries"}, {"score": 0.003712011863784581, "phrase": "novel_approach"}, {"score": 0.003619672388007568, "phrase": "efficient_top-k_processing"}, {"score": 0.0035148319209810128, "phrase": "server_stores"}, {"score": 0.00330025288273863, "phrase": "inherent_relationship"}, {"score": 0.003072807453368781, "phrase": "data_summarization_mechanism"}, {"score": 0.002971249577042111, "phrase": "top-k_results"}, {"score": 0.002909482525367989, "phrase": "thresholding_scheme"}, {"score": 0.00284899583294417, "phrase": "top-k_result"}, {"score": 0.0027548146060608902, "phrase": "queried_servers"}, {"score": 0.0027317585060414253, "phrase": "transferred_data"}, {"score": 0.0026083473154448326, "phrase": "data_summarizations"}, {"score": 0.002586513876943306, "phrase": "bounded_size"}, {"score": 0.002511522462767081, "phrase": "summary_distribution"}, {"score": 0.0023284972218506157, "phrase": "skyline_set"}, {"score": 0.002309000874224222, "phrase": "fixed_size"}, {"score": 0.002131720106846481, "phrase": "viable_solution"}, {"score": 0.0021049977753042253, "phrase": "high_degree"}], "paper_keywords": ["Top-k queries", " Skyline operator", " Distributed databases"], "paper_abstract": "Recently, a trend has been observed towards supporting rank-aware query operators, such as top-k, that enable users to retrieve only a limited set of the most interesting data objects. As data nowadays is commonly stored distributed over multiple servers, a challenging problem is to support rank-aware queries in distributed environments. In this paper, we propose a novel approach, called DiTo, for efficient top-k processing over multiple servers, where each server stores autonomously a fraction of the data. Towards this goal, we exploit the inherent relationship of top-k and skyline objects, and we employ the skyline objects of servers as a data summarization mechanism for efficiently identifying the servers that store top-k results. Relying on a thresholding scheme, DiTo retrieves the top-k result set progressively, while the number of queried servers and transferred data is minimized. Furthermore, we extend DiTo to support data summarizations of bounded size, thus restricting the cost of summary distribution and maintenance. To this end, we study the challenging problem of finding an abstraction of the skyline set of fixed size that influences the performance of DiTo only slightly. Our experimental evaluation shows that DiTo performs efficiently and provides a viable solution when a high degree of distribution is required.", "paper_title": "Distributed top-k query processing by exploiting skyline summaries", "paper_id": "WOS:000305520200004"}