{"auto_keywords": [{"score": 0.042986545468841064, "phrase": "rap"}, {"score": 0.009115041624250758, "phrase": "range-adaptive_profiling"}, {"score": 0.00481495049065317, "phrase": "adaptive_ranges"}, {"score": 0.004691273968935458, "phrase": "memory_locations"}, {"score": 0.0045559136361908795, "phrase": "serious_challenge"}, {"score": 0.004338898899247236, "phrase": "important_trends"}, {"score": 0.004052263422466088, "phrase": "new_and_general-purpose_profiling_method"}, {"score": 0.0037844916274672544, "phrase": "input_stream"}, {"score": 0.0037233796053514918, "phrase": "increasingly_precise_categories"}, {"score": 0.003398883295962739, "phrase": "dynamic_nature"}, {"score": 0.0033222630615013763, "phrase": "tight_theoretic_bounds"}, {"score": 0.0032899551003641152, "phrase": "worst-case_error"}, {"score": 0.003226275635740122, "phrase": "required_memory"}, {"score": 0.0031025790996685497, "phrase": "memory_bounds"}, {"score": 0.0030425153622841822, "phrase": "stream_size"}, {"score": 0.002878556952876824, "phrase": "critical_constants"}, {"score": 0.0028228178454284825, "phrase": "careful_engineering"}, {"score": 0.002804478352027886, "phrase": "algorithm_redesign"}, {"score": 0.0027057145726287427, "phrase": "high-performance_profile_system"}, {"score": 0.0025515282069418286, "phrase": "load_values"}, {"score": 0.0025266963982350523, "phrase": "memory_addresses"}, {"score": 0.0024858445890050614, "phrase": "broad_range"}, {"score": 0.0024456516553345966, "phrase": "hot-region_profiling"}, {"score": 0.0024061070225431525, "phrase": "value_locality"}, {"score": 0.0022763657774198184, "phrase": "specialized_hardware"}, {"score": 0.00214659338413584, "phrase": "range_profiles"}, {"score": 0.0021049977753042253, "phrase": "average_accuracy"}], "paper_keywords": ["algorithms", " design", " measurement", " performance", " profiling hardware", " range adaptive", " value locality"], "paper_abstract": "they are executed instructions, accessed memory locations, or forwarded packets. This presents a serious challenge to those who seek to quantify, analyze, or optimize such systems, because important trends and behaviors may easily be lost in a sea of data. We present range-adaptive profiling (RAP) as a new and general-purpose profiling method capable of hierarchically efficiently classifying streams of data in hardware. Through the use of RAP, events in an input stream are dynamically classified into increasingly precise categories, based on the frequency with which they occur. The more important a class, or range of events, the more precisely it is quantified. Despite the dynamic nature of our technique, we build upon tight theoretic bounds covering both worst-case error, as well as the required memory. In the limit, it is known that error and the memory bounds can be independent of the stream size and grow only linearly with the level of precision desired. Significantly, we expose the critical constants in these algorithms and through careful engineering, algorithm redesign, and use of heuristics, we show how a high-performance profile system can be implemented for range-adaptive profiling. RAP can be used on various profiles, such as PCs, load values, and memory addresses, and has a broad range of uses, from hot-region profiling to quantifying cache miss value locality. We propose two methods of implementation of RAP, one in software and the other with specialized hardware, for which we also describe our prototype FPGA implementation. We show that with just 8KB of memory, range profiles can be gathered with an average accuracy of 98%.", "paper_title": "Formulating and implementing profiling over adaptive ranges", "paper_id": "WOS:000256753500002"}