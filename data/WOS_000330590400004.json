{"auto_keywords": [{"score": 0.04578530577397598, "phrase": "optimization_speed"}, {"score": 0.015719716506582538, "phrase": "search_algorithms"}, {"score": 0.013620276808944402, "phrase": "cost_functions"}, {"score": 0.003958049372486465, "phrase": "algorithms'_optimization_speed"}, {"score": 0.003309124298009635, "phrase": "search_algorithm"}, {"score": 0.0031440159350875057, "phrase": "np-complete_problem"}, {"score": 0.0029617414861784525, "phrase": "explicit_formula"}, {"score": 0.0028623555849897632, "phrase": "best_achievable_optimization_speed"}, {"score": 0.0023926387830753033, "phrase": "optimization_techniques"}, {"score": 0.002253826965566618, "phrase": "best_theoretical_value"}, {"score": 0.0021049977753042253, "phrase": "optimization_benchmarks"}], "paper_keywords": ["Optimization problems", " Search algorithms", " Optimization speed"], "paper_abstract": "Search algorithms are often compared by the optimization speed achieved on some sets of cost functions. Here some properties of algorithms' optimization speed are introduced and discussed. In particular, we show that determining whether a set of cost functions F admits a search algorithm having given optimization speed is an NP-complete problem. Further, we derive an explicit formula to calculate the best achievable optimization speed when F is closed under permutation. Finally, we show that the optimization speed achieved by some well-know optimization techniques can be much worse than the best theoretical value, at least on some sets of optimization benchmarks.", "paper_title": "A study of search algorithms' optimization speed", "paper_id": "WOS:000330590400004"}