{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "binary_numbers"}, {"score": 0.004725787037228084, "phrase": "decimal_floating-point"}, {"score": 0.004352710820497943, "phrase": "ieee"}, {"score": 0.004287961675700099, "phrase": "binary_encoding"}, {"score": 0.004256005669252138, "phrase": "decimal_significands"}, {"score": 0.004146015717402716, "phrase": "dfp_numbers"}, {"score": 0.004084440052083978, "phrase": "unsigned_binary_integers"}, {"score": 0.003890540531028228, "phrase": "binary_integer_decimal"}, {"score": 0.003719705944877787, "phrase": "binary_number"}, {"score": 0.00366443843576107, "phrase": "operand_alignment"}, {"score": 0.003609989117581185, "phrase": "overflow_avoidance"}, {"score": 0.003569681826459428, "phrase": "quantize_operations"}, {"score": 0.0034643747383816164, "phrase": "unsigned_binary_integer"}, {"score": 0.0031904741237384106, "phrase": "decimal_left_shifters"}, {"score": 0.0030617295196636173, "phrase": "optimized_constant_multiplications"}, {"score": 0.0030388841099720843, "phrase": "selected_powers"}, {"score": 0.002949189427671915, "phrase": "different_combinational_and_sequential_decimal"}, {"score": 0.0027057544777834086, "phrase": "synthesis_results"}, {"score": 0.002510424048850241, "phrase": "carry-save_format"}, {"score": 0.002427177130359851, "phrase": "lookup_table"}, {"score": 0.002391067964886602, "phrase": "binary_multiplier"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Decimal arithmetic", " Computer arithmetic", " Decimal shifter", " Barrel shifter", " Hardware designs", " Binary integer decimal"], "paper_abstract": "The importance of decimal floating-point (DFP) arithmetic has been growing in the last years, and specifications for it are included in the revised IEEE 754 Standard for Floating-Point Arithmetic (IEEE 754-2008). IEEE 754-2008 specifies a binary encoding for decimal significands, in which the significands of DFP numbers are represented as unsigned binary integers. For this representation, which is commonly referred to as the binary integer decimal (BID) encoding, fast decimal left shifting of a binary number is useful for operand alignment, normalization, overflow avoidance, and quantize operations. A decimal left shift of an unsigned binary integer. I, by S digit positions corresponds to multiplying I by 10(s). This paper presents the theory and design of decimal left shifters for binary numbers. The designs perform decimal left shifting using optimized constant multiplications by selected powers of ten. We propose and analyze different combinational and sequential decimal left shifter architectures for binary numbers. The designs are compared to one another in terms of area and delay using both theoretical estimates and synthesis results for 16-digit (54-bit) binary inputs and 4-bit shift amounts. The results indicate that an optimized radix-2 decimal shifter implementing partial shifters, in carry-save format has 80% less area and 68% less delay than a lookup table followed by a binary multiplier to compute I x 10s, when both designs are optimized for delay. When both designs are optimized for area, the radix-2 decimal shifter has 89% less area and 31% less delay. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "A study of decimal left shifters for binary numbers", "paper_id": "WOS:000305319200006"}