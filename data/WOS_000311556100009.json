{"auto_keywords": [{"score": 0.028930494932271376, "phrase": "solo_methods"}, {"score": 0.00481495049065317, "phrase": "ensemble_effort_estimation"}, {"score": 0.004487541157100498, "phrase": "software_effort_estimation_methods"}, {"score": 0.004342430078306461, "phrase": "prior_work"}, {"score": 0.004201991568145053, "phrase": "estimation_methods"}, {"score": 0.004143196873246147, "phrase": "single_method"}, {"score": 0.0037188360359702182, "phrase": "multiple_estimation_methods"}, {"score": 0.003649585593445665, "phrase": "nine_learners"}, {"score": 0.003369322866499541, "phrase": "seven_error_measures"}, {"score": 0.003291051334991867, "phrase": "best_n"}, {"score": 0.003125175084962886, "phrase": "stable_performance"}, {"score": 0.003095923814666088, "phrase": "multiple_datasets"}, {"score": 0.003066945490483524, "phrase": "error_measures"}, {"score": 0.002470237978694949, "phrase": "error_rates"}, {"score": 0.002280333649167796, "phrase": "best_multimethod"}, {"score": 0.0021652891317252994, "phrase": "best_single_effort_estimation_method"}, {"score": 0.0021249064184347658, "phrase": "best_combinations"}], "paper_keywords": ["Software cost estimation", " ensemble", " machine learning", " regression trees", " support vector machines", " neural nets", " analogy", " k-NN"], "paper_abstract": "Background: Despite decades of research, there is no consensus on which software effort estimation methods produce the most accurate models. Aim: Prior work has reported that, given M estimation methods, no single method consistently outperforms all others. Perhaps rather than recommending one estimation method as best, it is wiser to generate estimates from ensembles of multiple estimation methods. Method: Nine learners were combined with 10 preprocessing options to generate 9 x 10 90 solo methods. These were applied to 20 datasets and evaluated using seven error measures. This identified the best n (in our case n 13) solo methods that showed stable performance across multiple datasets and error measures. The top 2, 4, 8, and 13 solo methods were then combined to generate 12 multimethods, which were then compared to the solo methods. Results: 1) The top 10 (out of 12) multimethods significantly outperformed all 90 solo methods. 2) The error rates of the multimethods were significantly less than the solo methods. 3) The ranking of the best multimethod was remarkably stable. Conclusion: While there is no best single effort estimation method, there exist best combinations of such effort estimation methods.", "paper_title": "On the Value of Ensemble Effort Estimation", "paper_id": "WOS:000311556100009"}