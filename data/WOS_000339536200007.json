{"auto_keywords": [{"score": 0.029420333683948755, "phrase": "pspace"}, {"score": 0.002796782643988021, "phrase": "decision_problem"}, {"score": 0.002707444334463544, "phrase": "bipartite_planar_graphs"}, {"score": 0.002506507889886399, "phrase": "linear_time"}, {"score": 0.0024862418814045723, "phrase": "general_graphs"}, {"score": 0.0023016843709107297, "phrase": "sufficient_condition"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithm", " L(2,1)-labeling", " PSPACE-complete", " Reachability on solution space"], "paper_abstract": "For an integer k >= 0, suppose that each vertex v of a graph G has a set C(v) subset of {0, 1,..., k} of labels, called a list of v. A list L(2, 1)-labeling of G is an assignment of a label in C(v) to each vertex v of G such that every two adjacent vertices receive labels which differ by at least 2 and every two vertices of distance two receive labels which differ by at least 1. In this paper, we study the problem of reconfiguring one list L(2, 1)-labeling of a graph into another list L(2, 1)-labeling of the same graph by changing only one label assignment at a time, while at all times maintaining a list L(2, 1)-labeling. First we show that this decision problem is PSPACE-complete, even for bipartite planar graphs and k >= 6. In contrast, we then show that the problem can be solved in linear time for general graphs if k <= 4. We finally consider the problem restricted to trees, and give a sufficient condition for which any two list L(2, 1)-labelings of a tree can be transformed into each other. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Reconfiguration of list L(2,1)-labelings in a graph", "paper_id": "WOS:000339536200007"}