{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "suboptimal_greedy_iterative_biclustering_heuristics"}, {"score": 0.0047192824773697, "phrase": "biclustering_gene_expression_data"}, {"score": 0.004533585346030341, "phrase": "significant_correlation"}, {"score": 0.004413846562278824, "phrase": "data_matrix"}, {"score": 0.004384407114103125, "phrase": "expression_values"}, {"score": 0.004355163162038354, "phrase": "even_the_simplest_versions"}, {"score": 0.004197758831410097, "phrase": "proposed_solutions"}, {"score": 0.004155822339559211, "phrase": "greedy_iterative_heuristics"}, {"score": 0.004086853315059217, "phrase": "suitably_assigned_scoring_function"}, {"score": 0.003992207640169795, "phrase": "fast_and_simple_pre-processing_algorithm"}, {"score": 0.0038478705530517296, "phrase": "input_data_matrix"}, {"score": 0.0037713445867641393, "phrase": "correlated_entries"}, {"score": 0.0037461743696712833, "phrase": "small_local_neighborhoods"}, {"score": 0.003671663469605366, "phrase": "proposed_localization_algorithm"}, {"score": 0.003622811707147052, "phrase": "effective_use"}, {"score": 0.003598629227969919, "phrase": "graph-theoretical_methods"}, {"score": 0.0035270425911920595, "phrase": "similar_structure"}, {"score": 0.003365477675675987, "phrase": "localization_pre-processing_algorithm"}, {"score": 0.003168543855125077, "phrase": "representative_algorithm"}, {"score": 0.003136857047565403, "phrase": "biclustering_performance"}, {"score": 0.00306414423737093, "phrase": "simple_biclustering_algorithm"}, {"score": 0.003043679504527297, "phrase": "random_extraction_after_localization"}, {"score": 0.0028463798740405665, "phrase": "low_similarity_scores"}, {"score": 0.002780381587615479, "phrase": "correlated_structures"}, {"score": 0.0026977641744883826, "phrase": "proposed_localization_pre-processing"}, {"score": 0.0026707727531746447, "phrase": "pre-processing_alternative"}, {"score": 0.0025568881277209725, "phrase": "similar_or_even_better_results"}, {"score": 0.0025313026089662165, "phrase": "computationally_heavy_matrix_factorization_pre-processing"}, {"score": 0.0024975854002361794, "phrase": "h-value_tests"}, {"score": 0.002391067964886602, "phrase": "localization_pre-processing"}, {"score": 0.0023277839538663834, "phrase": "functional_enrichment"}, {"score": 0.0023122257999320527, "phrase": "ppi_verification"}, {"score": 0.0022890828779208016, "phrase": "main_performance_criteria"}, {"score": 0.0022434880661725493, "phrase": "random_extraction_method"}, {"score": 0.0022136366116687818, "phrase": "real"}, {"score": 0.0021767893059191795, "phrase": "representative_greedy_heuristic_methods"}, {"score": 0.0021049977753042253, "phrase": "suggested_pre-processing_method"}], "paper_keywords": [""], "paper_abstract": "Motivation: Biclustering gene expression data is the problem of extracting submatrices of genes and conditions exhibiting significant correlation across both the rows and the columns of a data matrix of expression values. Even the simplest versions of the problem are computationally hard. Most of the proposed solutions therefore employ greedy iterative heuristics that locally optimize a suitably assigned scoring function. Methods: We provide a fast and simple pre-processing algorithm called localization that reorders the rows and columns of the input data matrix in such a way as to group correlated entries in small local neighborhoods within the matrix. The proposed localization algorithm takes its roots from effective use of graph-theoretical methods applied to problems exhibiting a similar structure to that of biclustering. In order to evaluate the effectivenesss of the localization pre-processing algorithm, we focus on three representative greedy iterative heuristic methods. We show how the localization pre-processing can be incorporated into each representative algorithm to improve biclustering performance. Furthermore, we propose a simple biclustering algorithm, Random Extraction After Localization (REAL) that randomly extracts submatrices from the localization pre-processed data matrix, eliminates those with low similarity scores, and provides the rest as correlated structures representing biclusters. Results: We compare the proposed localization pre-processing with another pre-processing alternative, non-negative matrix factorization. We show that our fast and simple localization procedure provides similar or even better results than the computationally heavy matrix factorization pre-processing with regards to H-value tests. We next demonstrate that the performances of the three representative greedy iterative heuristic methods improve with localization pre-processing when biological correlations in the form of functional enrichment and PPI verification constitute the main performance criteria. The fact that the random extraction method based on localization REAL performs better than the representative greedy heuristic methods under same criteria also confirms the effectiveness of the suggested pre-processing method.", "paper_title": "Improving performances of suboptimal greedy iterative biclustering heuristics via localization", "paper_id": "WOS:000282749700013"}