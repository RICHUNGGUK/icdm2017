{"auto_keywords": [{"score": 0.03135828820327062, "phrase": "clock_divergence"}, {"score": 0.02296535722797376, "phrase": "ccts"}, {"score": 0.00898286935093655, "phrase": "different_ips"}, {"score": 0.00481495049065317, "phrase": "chip-level_clock_tree_synthesis"}, {"score": 0.004650896226390719, "phrase": "key_problem"}, {"score": 0.004544629724830453, "phrase": "complex_system"}, {"score": 0.004314285113050873, "phrase": "key_requirement"}, {"score": 0.003978866233891427, "phrase": "entire_tree"}, {"score": 0.003910441483033426, "phrase": "small_skew"}, {"score": 0.0038431888954930083, "phrase": "process_corners"}, {"score": 0.0036694287631595995, "phrase": "clock_trees"}, {"score": 0.0033644530302903513, "phrase": "chip-level_clock_tree"}, {"score": 0.0031753062090452864, "phrase": "good_skews"}, {"score": 0.002877769867854964, "phrase": "critical_timing_paths"}, {"score": 0.00265373679629359, "phrase": "critical_paths"}, {"score": 0.0024756080101497086, "phrase": "effective_ccts_algorithms"}, {"score": 0.002418923027024191, "phrase": "multicorner_skew"}, {"score": 0.002363532907211947, "phrase": "experimental_results"}, {"score": 0.0022048406330100697, "phrase": "significantly_improved_multicorner_skew_variance"}, {"score": 0.0021049977753042253, "phrase": "buffer_area"}], "paper_keywords": ["Chip-level clock tree synthesis (CCTS)", " multicorner CTS", " robust clock tree synthesis"], "paper_abstract": "Chip-level clock tree synthesis (CCTS) is a key problem that arises in complex system-on-a-chip designs. A key requirement of CCTS is to balance the clock-trees belonging to different IPs such that the entire tree has a small skew across all process corners. Achieving this is difficult because the clock trees in different IPs might be vastly different in terms of their clock structures and cell/interconnect delays. The chip-level clock tree is expected to compensate for these differences and achieve good skews across all corners. Also, CCTS is expected to reduce clock divergence between IPs that have critical timing paths between them. Reducing clock divergence reduces the maximum possible clock skew in the critical paths between the IPs and thus improves yield. This paper proposes effective CCTS algorithms to simultaneously reduce multicorner skew and clock divergence. Experimental results on several test-cases indicate that our methods achieve 30% reduction in the clock divergence with significantly improved multicorner skew variance, at the cost of 2% increase in buffer area and 1% increase in wirelength.", "paper_title": "Robust Chip-Level Clock Tree Synthesis", "paper_id": "WOS:000290734500008"}