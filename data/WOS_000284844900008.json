{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model-based_formal_specifications"}, {"score": 0.004551199992546761, "phrase": "users'_requirements"}, {"score": 0.004410938507689426, "phrase": "solid_foundation"}, {"score": 0.004195418010131832, "phrase": "software_development"}, {"score": 0.003940706575253453, "phrase": "large-scale_systems"}, {"score": 0.003795335309109018, "phrase": "specification_errors"}, {"score": 0.003265365666305185, "phrase": "good_use"}, {"score": 0.00320453237792, "phrase": "well-defined_consistency_properties"}, {"score": 0.0030862341714020694, "phrase": "precise_rules"}, {"score": 0.002953711377604328, "phrase": "inspection_process"}, {"score": 0.0028091907694771613, "phrase": "human_inspectors'_judgments"}, {"score": 0.002671722386856879, "phrase": "case_study"}, {"score": 0.0024014759148123736, "phrase": "method's_feasibility"}, {"score": 0.002341958851390876, "phrase": "potential_challenges"}, {"score": 0.0022133711375320244, "phrase": "prototype_software_tool"}, {"score": 0.002158505888557746, "phrase": "distinct_features"}, {"score": 0.0021049977753042253, "phrase": "tool_supportability"}], "paper_keywords": ["Formal analysis", " formal specification", " rigorous inspection", " verification"], "paper_abstract": "Writing formal specifications can help developers understand users' requirements, and build a solid foundation for implementation. But like other activities in software development, it is error-prone, especially for large-scale systems. In practice, effective detection of specification errors still remains a challenge. In this paper, we put forward a rigorous, systematic method for the inspection of model-based formal specifications. The method makes good use of the well-defined consistency properties of a specification to provide precise rules and guidelines for inspection. The inspection process utilizes both well-defined expressions derived from the specification and human inspectors' judgments to find errors. We present a case study of the method by describing how it is applied to inspect an Automated Teller Machine (ATM) software specification to investigate the method's feasibility, and explore potential challenges in using it. We also describe a prototype software tool including its functions and distinct features to demonstrate the tool supportability of the method.", "paper_title": "A Rigorous Method for Inspection of Model-Based Formal Specifications", "paper_id": "WOS:000284844900008"}