{"auto_keywords": [{"score": 0.04126411258721218, "phrase": "small_flows"}, {"score": 0.034728935302943305, "phrase": "ffs"}, {"score": 0.01514628400842514, "phrase": "heavy_hitters"}, {"score": 0.012516393628510421, "phrase": "anomaly_detection"}, {"score": 0.00481495049065317, "phrase": "network_backbone"}, {"score": 0.004769958800452922, "phrase": "uniform_packet_sampling"}, {"score": 0.004594137808658537, "phrase": "estimate_flow_level_statistics"}, {"score": 0.004424768776701965, "phrase": "ddos_attacks"}, {"score": 0.004383406949799696, "phrase": "worm_scans"}, {"score": 0.004342430078306461, "phrase": "previous_work"}, {"score": 0.004182301599359094, "phrase": "flow_bias"}, {"score": 0.004085221464783815, "phrase": "inaccurate_flow_statistics"}, {"score": 0.003861288537079326, "phrase": "large_false_positives"}, {"score": 0.003666776809252461, "phrase": "new_sampling_design"}, {"score": 0.0034332736827447654, "phrase": "independent_low-complexity_filter"}, {"score": 0.003353521531649663, "phrase": "sampling_scheme"}, {"score": 0.003110515172439764, "phrase": "acceptable_identification"}, {"score": 0.0029816229984366374, "phrase": "filter_design"}, {"score": 0.0027395968397212053, "phrase": "medium_and_large_flows"}, {"score": 0.0025290375256888883, "phrase": "existing_sampling_mechanisms"}, {"score": 0.002493592357827492, "phrase": "additional_changes"}, {"score": 0.0024128022009415476, "phrase": "lightweight_online_implementation"}, {"score": 0.0023678143146455017, "phrase": "dependent\"_sampling_method"}, {"score": 0.0023346234464901978, "phrase": "extensive_evaluation"}, {"score": 0.0023127544795063263, "phrase": "traffic_traces"}, {"score": 0.0021857667493036786, "phrase": "portscan_detection"}, {"score": 0.0021652891317252994, "phrase": "traffic_estimation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Sampling", " Anomaly detection"], "paper_abstract": "Traffic sampled from the network backbone using uniform packet sampling is commonly utilized to detect heavy hitters, estimate flow level statistics, as well as identify anomalies like DDoS attacks and worm scans. Previous work has shown however that this technique introduces flow bias and truncation which yields inaccurate flow statistics and \"drowns out\" information from small flows, leading to large false positives in anomaly detection. In this paper, we present a new sampling design: Fast Filtered Sampling (FFS), which is comprised of an independent low-complexity filter, concatenated with any sampling scheme at choice. FFS ensures the integrity of small flows for anomaly detection, while still providing acceptable identification of heavy hitters. This is achieved through a filter design which suppresses packets from flows as a function of their size, \"boosting\" small flows relative to medium and large flows. FFS design requires only one update operation per packet, has two simple control parameters and can work in conjunction with existing sampling mechanisms without any additional changes. Therefore, it accomplishes a lightweight online implementation of the \"flow-size dependent\" sampling method. Through extensive evaluation on traffic traces, we show the efficacy of FFS for applications such as portscan detection and traffic estimation. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Fast Filtered Sampling", "paper_id": "WOS:000280258300012"}