{"auto_keywords": [{"score": 0.049782445699425054, "phrase": "network_design_problems"}, {"score": 0.011447883055675743, "phrase": "first_constant_factor"}, {"score": 0.00481495049065317, "phrase": "hardness_results"}, {"score": 0.004726052718910578, "phrase": "order_constraints"}, {"score": 0.004682218325765133, "phrase": "first_problem"}, {"score": 0.004610058444728656, "phrase": "survivable_network_design_problem"}, {"score": 0.004427581692544645, "phrase": "minimum_cost_subgraph"}, {"score": 0.004386503433248535, "phrase": "connectivity_requirements"}, {"score": 0.004305481798183612, "phrase": "upper_bounds_b-upsilon"}, {"score": 0.004199766284749713, "phrase": "well-studied_minimum_bounded_degree_spanning_tree_problem"}, {"score": 0.003946650265907885, "phrase": "edge-connectivity_survivable_network_design_problem"}, {"score": 0.003825849505589868, "phrase": "returned_solution"}, {"score": 0.0037087324991876727, "phrase": "degree_bounds"}, {"score": 0.0036288825833675127, "phrase": "vertex_v"}, {"score": 0.003388909415044492, "phrase": "minimum_bounded_degree_steiner_forest_problem"}, {"score": 0.0033159224502739247, "phrase": "directed_graphs"}, {"score": 0.003234425353582135, "phrase": "minimum_bounded_degree_arborescence_problem"}, {"score": 0.0032043813415886585, "phrase": "minimum_bounded_degree_strongly_k-edge-connected_subgraph_problem"}, {"score": 0.003115908199991072, "phrase": "vertex-connectivity_survivable_network_design_problem"}, {"score": 0.0029279232349513724, "phrase": "striking_aspect"}, {"score": 0.0028293966058473476, "phrase": "iterative_relaxation_method"}, {"score": 0.0027684263985790526, "phrase": "jain's_iterative_rounding_method"}, {"score": 0.0027256800996910864, "phrase": "elegant_and_unifying_algorithmic_framework"}, {"score": 0.0025932659540059875, "phrase": "minimum_cost_lambda-edge-connected_subgraph"}, {"score": 0.002436735294813786, "phrase": "well-studied_classical_problems"}, {"score": 0.0023694065215394593, "phrase": "lambda-edge-connected_subgraph_problems"}, {"score": 0.0022194361800930516, "phrase": "densest_k-subgraph_problem"}, {"score": 0.0021049977753042253, "phrase": "arbitrary_lambda"}], "paper_keywords": ["approximation algorithms", " survivable network design", " degree bounded", " lambda-edge-connected", " k-subgraph"], "paper_abstract": "We present algorithmic and hardness results for network design problems with degree or order constraints. The first problem we consider is the Survivable Network Design problem with degree constraints on vertices. The objective is to find a minimum cost subgraph which satisfies connectivity requirements between vertices and also degree upper bounds B-upsilon on the vertices. This includes the well-studied Minimum Bounded Degree Spanning Tree problem as a special case. Our main result is a (2, 2B(upsilon) + 3)-approximation algorithm for the edge-connectivity Survivable Network Design problem with degree constraints, where the cost of the returned solution is at most twice the cost of an optimum solution (satisfying the degree bounds) and the degree of each vertex v is at most 2B(upsilon) + 3. This implies the first constant factor (bicriteria) approximation algorithms for many degree constrained network design problems, including the MINIMUM BOUNDED DEGREE STEINER FOREST problem. Our results also extend to directed graphs and provide the first constant factor (bicriteria) approximation algorithms for the MINIMUM BOUNDED DEGREE ARBORESCENCE problem and the MINIMUM BOUNDED DEGREE STRONGLY k-EDGE-CONNECTED SUBGRAPH problem. In contrast, we show that the vertex-connectivity Survivable Network Design problem with degree constraints is hard to approximate, even when the cost of every edge is zero. A striking aspect of our algorithmic result is its simplicity. It is based on the iterative relaxation method, which is an extension of Jain's iterative rounding method. This provides an elegant and unifying algorithmic framework for a broad range of network design problems. We also study the problem of finding a minimum cost lambda-edge-connected subgraph with at least k vertices, which we call the (k, lambda)-subgraph problem. This generalizes some well-studied classical problems such as the k-MST and the minimum cost lambda-edge-connected subgraph problems. We give a polylogarithmic approximation for the (k, 2)-subgraph problem. However, by relating it to the DENSEST k-SUBGRAPH problem, we provide evidence that the (k, lambda)-subgraph problem might be hard to approximate for arbitrary lambda.", "paper_title": "SURVIVABLE NETWORK DESIGN WITH DEGREE OR ORDER CONSTRAINTS", "paper_id": "WOS:000270193400012"}