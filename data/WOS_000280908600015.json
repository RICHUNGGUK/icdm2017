{"auto_keywords": [{"score": 0.03409469691643026, "phrase": "indexed_triangle_data"}, {"score": 0.00481495049065317, "phrase": "cad_data"}, {"score": 0.004683292152590589, "phrase": "compact_array-based_triangle_data_structure"}, {"score": 0.004191540451296395, "phrase": "previously_devised_sequential_triangulation_method"}, {"score": 0.004122351497440992, "phrase": "indexed_array_triangle_representation"}, {"score": 0.0038782499819752423, "phrase": "searching_algorithm"}, {"score": 0.0038354405231002323, "phrase": "array-based_data_structure"}, {"score": 0.0036892809673917592, "phrase": "sequential_triangulation_method"}, {"score": 0.003628352506247126, "phrase": "optimized_kd-tree"}, {"score": 0.003588291565092195, "phrase": "permutation_vector_form"}, {"score": 0.0034707339811048403, "phrase": "surface_points"}, {"score": 0.0034134024569847264, "phrase": "permutation_vector"}, {"score": 0.003265090934183249, "phrase": "vertex_array_elements"}, {"score": 0.003158088307044493, "phrase": "space_partition_information"}, {"score": 0.0030208364972341096, "phrase": "vertex_sequence"}, {"score": 0.0029544572689681934, "phrase": "proposed_triangulation_method"}, {"score": 0.0028895324165046166, "phrase": "mobile_devices"}, {"score": 0.002857605453835429, "phrase": "inadequate_memory_size"}, {"score": 0.002763919794139171, "phrase": "desktop_computers"}, {"score": 0.0026000466400112974, "phrase": "topological_operators"}, {"score": 0.002445865715873089, "phrase": "experimental_results"}, {"score": 0.0023788319661581696, "phrase": "triangulation_method"}, {"score": 0.0023136311468961125, "phrase": "time_complexity"}, {"score": 0.0021763973978248005, "phrase": "worst-case_data"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Mobile device", " Triangulation", " Visualization", " Mobile 3-D", " Indexed triangles"], "paper_abstract": "We present a triangulation method for visualization of computer-aided design (CAD) model data. The proposed method has been enhanced from a previously devised sequential triangulation method that used indexed array triangle representation. The improvement is achieved by an enhancement of the searching algorithm for array-based data structure. The proposed triangulation is a sequential triangulation method with an optimized kd-tree in permutation vector form to accelerate the insertion of surface points. The permutation vector is formed by rearranging the sequence of vertex array elements comprising indexed triangle data, and the space partition information of the kd-tree is represented as a vertex sequence only. The proposed triangulation method was designed for mobile devices with inadequate memory size and CPU speed compared to desktop computers. We considered both efficiency and compactness in our implementation. Topological operators are defined for querying and searching information within indexed triangle data. Experimental results empirically show that the triangulation method is of O(n) time complexity, and is bounded by O(n log n) for worst-case data. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Triangulation of CAD data for visualization using a compact array-based triangle data structure", "paper_id": "WOS:000280908600015"}