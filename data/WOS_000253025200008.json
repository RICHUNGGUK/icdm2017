{"auto_keywords": [{"score": 0.03607022877434213, "phrase": "different_implementation_relations"}, {"score": 0.00481495049065317, "phrase": "timed_finite_state_machines"}, {"score": 0.004613940521007727, "phrase": "formal_methodology"}, {"score": 0.004259293347851015, "phrase": "classical_finite_state_machines_model"}, {"score": 0.004147216579100177, "phrase": "timed_systems"}, {"score": 0.003973971215091993, "phrase": "timing_requirements"}, {"score": 0.00378767277402891, "phrase": "time_requirements"}, {"score": 0.003629392214109574, "phrase": "fix_time_values"}, {"score": 0.0035527409334589317, "phrase": "random_variables"}, {"score": 0.003459191419478298, "phrase": "time_intervals"}, {"score": 0.003010893527930816, "phrase": "test_cases"}, {"score": 0.002884979280317279, "phrase": "test_derivation_algorithms"}, {"score": 0.0028089634624677957, "phrase": "complete_test_suites"}, {"score": 0.0026345758986796703, "phrase": "test_suites"}, {"score": 0.002578880352208335, "phrase": "different_notions"}, {"score": 0.00232995025271599, "phrase": "appropriate_implementation"}, {"score": 0.0021390191069313945, "phrase": "derived_test_suite"}], "paper_keywords": ["conformance testing", " formal methods", " timed systems"], "paper_abstract": "In this paper we present a formal methodology to test both the functional and temporal behaviors in systems where temporal aspects are critical. We extend the classical finite state machines model with features to represent timed systems. Our formalism allows three different ways to express the timing requirements of systems. Specifically, we consider that time requirements can be expressed either by means of fix time values, by using random variables, or by considering time intervals. Different implementation relations, depending on both the interpretation of time and on the non-determinism appearing in systems, are presented and related. We also study how test cases are defined and applied to implementations. Test derivation algorithms, producing sound and complete test suites, are also presented. That is, by deriving these test suites we relate the different notions of passing tests and the different implementation relations. In other words, for a given correctness criterion, a system represents an appropriate implementation of a given model if and only if the system successfully passes all the test belonging to the derived test suite. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Formal testing from timed finite state machines", "paper_id": "WOS:000253025200008"}