{"auto_keywords": [{"score": 0.046400324443240264, "phrase": "voronoi_diagram"}, {"score": 0.00481495049065317, "phrase": "euclidean_voronoi_diagram"}, {"score": 0.004548253531664032, "phrase": "sweepline_algorithm"}, {"score": 0.004247560712327667, "phrase": "two-dimensional_euclidean_space"}, {"score": 0.0035390378585554547, "phrase": "proposed_algorithm"}, {"score": 0.0034789831290103967, "phrase": "correct_voronoi_diagram"}, {"score": 0.0028167336373711494, "phrase": "worst-case_time_complexity"}, {"score": 0.0025416235470290286, "phrase": "input_circles"}, {"score": 0.0024281181691350085, "phrase": "intersection_points"}, {"score": 0.002254357921422124, "phrase": "presented_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Euclidean Voronoi diagram", " circle", " sweepline", " event", " beach line"], "paper_abstract": "Presented in this paper is a sweepline algorithm to compute the Voronoi diagram of a set of circles in a two-dimensional Euclidean space. The radii of the circles are non-negative and not necessarily equal. It is allowed that circles intersect each other, and a circle contains others. The proposed algorithm constructs the correct Voronoi diagram as a sweepline moves on the plane from top to bottom. While moving on the plane, the sweepline stops only at certain event points where the topology changes occur for the Voronoi diagram being constructed. The worst-case time complexity of the proposed algorithm is O((n + m)log n), where it is the number of input circles, and in is the number of intersection points among circles. As in can be O(n(2)), the presented algorithm is optimal with O(n(2) log n) worst-case time complexity. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "A sweepline algorithm for Euclidean Voronoi diagram of circles", "paper_id": "WOS:000235442100007"}