{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "chordal_graphs"}, {"score": 0.010344812018826264, "phrase": "chordal_graph"}, {"score": 0.008395487238083582, "phrase": "labeled_chordal_graphs"}, {"score": 0.0045543011700929096, "phrase": "chordless_cycle"}, {"score": 0.00445783412174435, "phrase": "induced_subgraph"}, {"score": 0.004234532601573088, "phrase": "interval_graphs"}, {"score": 0.0040223714916651845, "phrase": "perfect_graphs"}, {"score": 0.003374250301861101, "phrase": "complete_graph"}, {"score": 0.0030969799559421806, "phrase": "n-vertices_complete_graph"}, {"score": 0.0029416448256236057, "phrase": "small_changes"}, {"score": 0.0027347937102326285, "phrase": "arbitrary_graph"}, {"score": 0.002665305036900055, "phrase": "reverse_search_method"}, {"score": 0.0026312238938540787, "phrase": "time_complexities"}, {"score": 0.0023233800372985686, "phrase": "constant_time"}, {"score": 0.002254624822004988, "phrase": "combinatorial_gray_code"}, {"score": 0.0022067604433257814, "phrase": "graph_structures"}, {"score": 0.0021049977753042253, "phrase": "constant_size"}], "paper_keywords": ["chordal graph", " enumeration", " constant time"], "paper_abstract": "A chordal graph is a graph which contains no chordless cycle of at least four edges as an induced subgraph. The class of chordal graphs contains many famous graph classes such as trees, interval graphs, and split graphs, and is also a subclass of perfect graphs. In this paper, we address the problem of enumerating all labeled chordal graphs included in a given graph. We think of some variations of this problem. First we introduce an algorithm to enumerate all connected labeled chordal graphs in a complete graph of n vertices. Next, we extend the algorithm to an algorithm to enumerate all labeled chordal graphs in a n-vertices complete graph. Then, we show that we can use, with small changes, these algorithms to generate all (connected or not necessarily connected) labeled chordal graphs in arbitrary graph. All our algorithms are based on reverse search method, and time complexities to generate a chordal graph are O(l), and also O(l) delay. Additionally, we present an algorithm to generate every clique of a given chordal graph in constant time. Using these algorithms we obtain combinatorial Gray code like sequences for these graph structures in which the differences between two consecutive graphs are bounded by a constant size.", "paper_title": "Generating chordal graphs included in given graphs", "paper_id": "WOS:000235508800045"}