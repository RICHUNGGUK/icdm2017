{"auto_keywords": [{"score": 0.012195871316790945, "phrase": "dynamic_membership_multicast"}, {"score": 0.00481495049065317, "phrase": "proactive_rearrangement"}, {"score": 0.004619027561771169, "phrase": "proactive_rearrangement_heuristic_algorithm"}, {"score": 0.004555499634179394, "phrase": "multicast_tree"}, {"score": 0.004410629943506433, "phrase": "average_tree_cost"}, {"score": 0.004211594861013822, "phrase": "existing_algorithms"}, {"score": 0.003947884118204803, "phrase": "significant_rearrangement_delay"}, {"score": 0.0038756055612167942, "phrase": "uncontrolled_disruptions"}, {"score": 0.0036665842836420223, "phrase": "low_average_tree_cost"}, {"score": 0.0035498822293046884, "phrase": "intensive_simulation_studies"}, {"score": 0.0034368818187904744, "phrase": "existing_effective_reactive_algorithm"}, {"score": 0.003312121699003206, "phrase": "lower_average_tree_cost"}, {"score": 0.002950608985750058, "phrase": "maximum_disruptions"}, {"score": 0.0028042741141125712, "phrase": "new_performance_index"}, {"score": 0.0025447065763362984, "phrase": "existing_literature"}, {"score": 0.002418453525649304, "phrase": "existing_algorithm"}, {"score": 0.0023522423291484212, "phrase": "optimal_algorithm"}, {"score": 0.00229844995872581, "phrase": "new_index"}, {"score": 0.0021843879253500894, "phrase": "higher_resource_utilization"}], "paper_keywords": ["dynamic membership multicast", " rearrangement", " delay-constraint", " member disruptions", " multicast tree cost"], "paper_abstract": "We propose a proactive rearrangement heuristic algorithm to rearrange multicast tree proactively within a very short time interval such that average tree cost and disruptions produced in dynamic membership multicast can be reduced. Existing algorithms are reactive and do not consider disruptions control explicitly. This leads to significant rearrangement delay as well as uncontrolled disruptions produced. Our proposed algorithm is proactive and explicitly controls disruptions to obtain low average tree cost as well. We carry out intensive simulation studies for our proposed algorithm and compare with an existing effective reactive algorithm. The results show that our proposed algorithm achieves lower average tree cost and performs rearrangements faster. Our proposed algorithm also exhibits the flexibility for disruptions QoS by offering the capability to tune the rearrangements according to the maximum disruptions allowed per update. In addition, we introduce a new performance index to better gauge a given algorithm's performance in dynamic membership multicast by considering both disruptions and cost together instead of individually as employed in existing literature. The results show that our proposed algorithm performs better than the existing algorithm and is close to the optimal algorithm in terms of the new index. We further improve our proposed algorithm and show that such improvement achieves higher resource utilization and efficiency without compromising performance. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Proactive rearrangement in delay constrained dynamic membership multicast", "paper_id": "WOS:000258035900067"}