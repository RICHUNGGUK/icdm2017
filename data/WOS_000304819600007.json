{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "many-core_platform_mapping_problem"}, {"score": 0.004692699265201631, "phrase": "large_numbers"}, {"score": 0.004662622277282557, "phrase": "parallel_execution_resources"}, {"score": 0.00454422099327167, "phrase": "increasing_computation_needs"}, {"score": 0.004515091332353969, "phrase": "embedded_applications"}, {"score": 0.00447174501210281, "phrase": "major_challenge"}, {"score": 0.004372207937638619, "phrase": "efficient_mapping"}, {"score": 0.004316323233538682, "phrase": "parallel_resources"}, {"score": 0.004247466494836417, "phrase": "nontrivial_problem"}, {"score": 0.004047390637093383, "phrase": "underlying_platform_architectures"}, {"score": 0.003931879808909078, "phrase": "multi-objective_evolutionary_algorithm"}, {"score": 0.003315280396086864, "phrase": "small_number"}, {"score": 0.003283414652626541, "phrase": "application_and_architecture_constraints"}, {"score": 0.0031896375499832694, "phrase": "new_framework"}, {"score": 0.003019726786531033, "phrase": "jmetal_framework"}, {"score": 0.0029714924513911897, "phrase": "extensible_environment"}, {"score": 0.0028041227333229883, "phrase": "new_objective_function"}, {"score": 0.0026122745966589795, "phrase": "application_constraints"}, {"score": 0.0024413739512778136, "phrase": "noc-based_many-core_platform"}, {"score": 0.002371589020876307, "phrase": "classical_multi-objective_metaheuristics"}, {"score": 0.0022742871983734737, "phrase": "parallel_multi-objective_evolutionary_algorithm"}, {"score": 0.002195072749159075, "phrase": "explored_space"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["many cores", " MPSoC", " mapping", " evolutionary algorithm"], "paper_abstract": "Many-core platforms, providing large numbers of parallel execution resources, emerge as a response to the increasing computation needs of embedded applications. A major challenge raised by this trend is the efficient mapping of applications on parallel resources. This is a nontrivial problem because of the number of parameters to be considered for characterizing both the applications and the underlying platform architectures. Recently, several authors have proposed to use multi-objective evolutionary algorithm to solve this problem within the context of mapping applications on network-on-chips. However, these proposals have several limitations: (1) only few metaheuristics are explored (mainly Nondominated Sorting Genetic Algorithm?II and Strength Pareto Evolutionary Algorithm?2), (2) only few objective functions are provided, and (3) they only deal with a small number of the application and architecture constraints. In this paper, we propose a new framework that avoids all of the problems cited previously. Our framework is implemented on top of the jMetal framework, which offers an extensible environment. Our framework allows designers to (1) explore several new metaheuristics, (2) easily add a new objective function (or to use an existing one), and (3) take into account any number of architecture and application constraints. The paper also presents experiments illustrating how our framework is applied to the problem of mapping streaming applications on an NoC-based many-core platform. Our results show that several new metaheuristics outperform the classical multi-objective metaheuristics such as Nondominated Sorting Genetic Algorithm?II and Strength Pareto Evolutionary Algorithm?2. Moreover, a parallel multi-objective evolutionary algorithm is implemented in our framework in order to increase the explored space of solutions by simultaneously running several metaheuristics. Copyright (C) 2011 John Wiley & Sons, Ltd.", "paper_title": "MpAssign: a framework for solving the many-core platform mapping problem", "paper_id": "WOS:000304819600007"}