{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "-middle_attack"}, {"score": 0.004652016085325825, "phrase": "new_type"}, {"score": 0.004138010495069077, "phrase": "execution_flow"}, {"score": 0.003757480190200645, "phrase": "smaller_input_sizes"}, {"score": 0.0036553070575015344, "phrase": "lower_attack_complexities"}, {"score": 0.0026616868981501006, "phrase": "secret_key"}, {"score": 0.0025361866386341796, "phrase": "exhaustive_search"}, {"score": 0.00241658945942583, "phrase": "lightweight_block_cipher"}, {"score": 0.0024002044593727082, "phrase": "klein"}, {"score": 0.0021490449563443025, "phrase": "known-plaintext_attack_model"}], "paper_keywords": ["Meet-in-the-middle attack", " Cryptanalysis", " Parallel-cut", " Block cipher", " Hash function", " Klein"], "paper_abstract": "We propose a new type of meet-in-the-middle attack that splits a cryptographic primitive in parallel to the execution flow of the operations. The result of the division are two primitives that have smaller input sizes and thus require lower attack complexities. The sub-primitives are not completely independent, but mutually depend on a certain number of bits. When the number of such bits is relatively small, we show a technique based on three classical meet-in-the-middle attacks that can recover the secret key of the cipher faster than an exhaustive search. We apply our findings to the lightweight block cipher Klein and show attacks on 10/11/13 rounds of Klein-64/-80/-96. We note that our approach works in the known-plaintext attack model and requires only one or two pairs of known plaintexts.", "paper_title": "The parallel-cut meet-in-the-middle attack", "paper_id": "WOS:000358873600004"}