{"auto_keywords": [{"score": 0.03511913456910414, "phrase": "worst_case"}, {"score": 0.00481495049065317, "phrase": "optimal_dynamic_sequence"}, {"score": 0.004653339900995785, "phrase": "data_structure"}, {"score": 0.004405919996432158, "phrase": "select_queries"}, {"score": 0.0042579795015449005, "phrase": "symbol_insertions"}, {"score": 0.003516417950483685, "phrase": "binary_sequences"}, {"score": 0.0034215569542785907, "phrase": "amortized_sense"}, {"score": 0.0022083264126633085, "phrase": "zero-order_entropy"}], "paper_keywords": ["succinet data structures", " strings", " rank and select"], "paper_abstract": "We describe a data structure that supports access, rank, and select queries, as well as symbol insertions and deletions, on a string S[1, n] over alphabet [1..sigma] in time O(log n/log log n), which is optimal even on binary sequences and in the amortized sense. Our time is worst case for the queries and amortized for the updates. This complexity is better than the best previous ones by a Theta(1 + logs/log log n) factor. We also design a variant where times are worst case, yet rank and updates take O(log n) time. Our structure uses nH(0)(S) + o(n log sigma) + O(sigma log n) bits, where H-0(S) is the zero-order entropy of S. Finally, we pursue various extensions and applications of the result.", "paper_title": "OPTIMAL DYNAMIC SEQUENCE REPRESENTATIONS", "paper_id": "WOS:000344753500010"}