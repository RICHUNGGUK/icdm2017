{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "data_stream_tuples"}, {"score": 0.045889715318462816, "phrase": "multiprocessing_environment"}, {"score": 0.03157244457765463, "phrase": "tuple_latency"}, {"score": 0.024469941458671537, "phrase": "proposed_dtr_method"}, {"score": 0.0047732596509542135, "phrase": "parallel_query_plan"}, {"score": 0.0047113960612140335, "phrase": "multi-core_processors"}, {"score": 0.00457013354092966, "phrase": "fast_processing"}, {"score": 0.004491313367627919, "phrase": "parallel_execution"}, {"score": 0.0044524122425287005, "phrase": "continuous_queries"}, {"score": 0.004244375827831527, "phrase": "query_plan"}, {"score": 0.004135010810625326, "phrase": "processing_units"}, {"score": 0.004010960493946656, "phrase": "continuous_routing"}, {"score": 0.003976203286249396, "phrase": "input_data"}, {"score": 0.003660614912817745, "phrase": "input_tuple"}, {"score": 0.0035199624440843892, "phrase": "processing_unit"}, {"score": 0.00326881479036966, "phrase": "proper_next_processor"}, {"score": 0.0031845067058084613, "phrase": "destination_processor"}, {"score": 0.0031431690368229443, "phrase": "minimum_tuple_latency"}, {"score": 0.0031023662967184216, "phrase": "corresponding_tuple"}, {"score": 0.0030223381739019894, "phrase": "alternative_processors"}, {"score": 0.002806595775343074, "phrase": "different_practical_parallel_systems"}, {"score": 0.0027822459052173113, "phrase": "parallel_system_architectures"}, {"score": 0.0026986685585382347, "phrase": "desired_multiprocessing_environment"}, {"score": 0.0025279105573394727, "phrase": "practical_challenges"}, {"score": 0.002473420909291381, "phrase": "proper_parallel_underlying_system"}, {"score": 0.0023990982005125763, "phrase": "desired_parallel_system"}, {"score": 0.0023782753249846794, "phrase": "multi-core_systems"}, {"score": 0.0022768346311104735, "phrase": "evaluation_results"}, {"score": 0.0022180544041790697, "phrase": "similar_method"}, {"score": 0.0021049977753042253, "phrase": "tuple_loss"}], "paper_keywords": ["Data stream", " Parallel processing", " Query plan", " Multi-core systems", " Multistage Interconnection network"], "paper_abstract": "In this paper, a method for fast processing of data stream tuples in parallel execution of continuous queries over a multiprocessing environment is proposed. A copy of the query plan is assigned to each of processing units in the multiprocessing environment. Dynamic and continuous routing of input data stream tuples among the graph constructed by these copies (called the Query Mega Graph) for each input tuple determines that, after getting processed by each processing unit (e.g., processor), to which next processor it should be forwarded. Selection of the proper next processor is performed such that the destination processor imposes the minimum tuple latency to the corresponding tuple, among all of the alternative processors. The tuple latency is derived from processing, buffering and communication time delay which varies in different practical parallel systems. Parallel system architectures that would be suitable as the desired multiprocessing environment for employing the proposed Dynamic Tuple Routing (DTR) method are considered and analyzed. Also, practical challenges and issues for the proper parallel underlying system are discussed. Implementation of the desired parallel system on multi-core systems is provided and used for evaluating the proposed DTR method. Evaluation results show that the proposed DTR method outperforms similar method such as the Eddies in terms of tuple latency, throughput and tuple loss.", "paper_title": "Dynamic routing of data stream tuples among parallel query plan running on multi-core processors", "paper_id": "WOS:000302641800003"}