{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "service_oriented_computing"}, {"score": 0.004674952036988355, "phrase": "tutorial_paper"}, {"score": 0.004321118442104989, "phrase": "distributed_computing"}, {"score": 0.004195418010131832, "phrase": "synchronised_hyperedge_replacement"}, {"score": 0.003378385493203297, "phrase": "neighbour_components"}, {"score": 0.0031223774204093713, "phrase": "shr_framework"}, {"score": 0.0028857130140890787, "phrase": "complex_synchronisation_mechanisms"}, {"score": 0.0027200305495826797, "phrase": "heterogeneous_synchronisations"}, {"score": 0.00266693888510356, "phrase": "non-functional_aspects"}, {"score": 0.002538687900036229, "phrase": "service_oriented"}, {"score": 0.002323142666222693, "phrase": "shr_family"}, {"score": 0.002255431275670053, "phrase": "suitable_model"}, {"score": 0.0021049977753042253, "phrase": "soc_systems"}], "paper_keywords": [""], "paper_abstract": "This tutorial paper describes a framework for modelling several aspects of distributed computing based on Synchronised Hyperedge Replacement (SHR), a graph rewriting formalism. Components are represented as edges and they rewrite themselves by synchronising with neighbour components the productions that specify their behaviour. The SHR framework has been equipped with many formal devices for representing complex synchronisation mechanisms which can tackle mobility, heterogeneous synchronisations and non-functional aspects, key factors of Service Oriented Computing (SOC). We revise the SHR family as a suitable model for contributing to the formalisation of SOC systems.", "paper_title": "Synchronised Hyperedge Replacement as a model for Service Oriented Computing", "paper_id": "WOS:000240360000002"}