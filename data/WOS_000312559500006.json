{"auto_keywords": [{"score": 0.03011524684413456, "phrase": "pstlb"}, {"score": 0.00481495049065317, "phrase": "second_level_translation-lookaside_buffers"}, {"score": 0.004701015188740582, "phrase": "chip_multiprocessors"}, {"score": 0.004589763483242731, "phrase": "traversing_page_table"}, {"score": 0.004375061788023814, "phrase": "physical_address"}, {"score": 0.004220624516321415, "phrase": "significant_pipeline_stalls"}, {"score": 0.003927848423072668, "phrase": "translation-lookaside_buffer"}, {"score": 0.003053598205821532, "phrase": "efficient_tlb_entry_placement"}, {"score": 0.002945669860541221, "phrase": "proposed_partial_sharing"}, {"score": 0.0027410925365342034, "phrase": "tlb"}, {"score": 0.0023171750718791713, "phrase": "traditional_private_tlbs"}, {"score": 0.0021049977753042253, "phrase": "art_scalable_tlb_proposal"}], "paper_keywords": ["TLBs", " Partial Sharing", " CMPs"], "paper_abstract": "Traversing page table during virtual to physical address translation causes significant pipeline stalls when misses occur in the translation-lookaside buffer (TLB). To mitigate this penalty, we propose a fast, scalable, multi-level TLB organization that leverages page sharing behaviors and performs efficient TLB entry placement. Our proposed partial sharing TLB (PSTLB) reduces TLB misses by around 60%. PSTLB also improves TLB performance by nearly 40% compared to traditional private TLBs and 17% over the state of the art scalable TLB proposal.", "paper_title": "Leveraging Sharing in Second Level Translation-Lookaside Buffers for Chip Multiprocessors", "paper_id": "WOS:000312559500006"}