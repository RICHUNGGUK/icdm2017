{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "new_composite_approach"}, {"score": 0.02267656366484908, "phrase": "reachability_testing"}, {"score": 0.009723095560277038, "phrase": "concurrent_applications"}, {"score": 0.008567346342701438, "phrase": "large_number"}, {"score": 0.0076965457641091665, "phrase": "testing_cost"}, {"score": 0.0047448515702010734, "phrase": "coverage_criteria"}, {"score": 0.004652963867892925, "phrase": "concurrent_programs"}, {"score": 0.004540591176992658, "phrase": "key_activity"}, {"score": 0.004240116703465252, "phrase": "different_mechanisms"}, {"score": 0.0041174821422410544, "phrase": "concurrent_software"}, {"score": 0.004017989546119125, "phrase": "persistent_problem"}, {"score": 0.003959447096055027, "phrase": "high_testing_cost"}, {"score": 0.0038448988429199086, "phrase": "different_synchronization_sequences"}, {"score": 0.003715425273229361, "phrase": "structural_testing_criteria"}, {"score": 0.0035902958977673313, "phrase": "infeasible_synchronization_sequences"}, {"score": 0.003303617297414837, "phrase": "infeasible_combination"}, {"score": 0.0029807934480637855, "phrase": "exponential_behavior"}, {"score": 0.0027561164046279413, "phrase": "synchronization_sequences_tests"}, {"score": 0.0027026375053777543, "phrase": "specific_structural_testing_criterion"}, {"score": 0.0025608471909800076, "phrase": "message-passing_concurrent_programs"}, {"score": 0.0025234857700352216, "phrase": "mpi."}, {"score": 0.002498873893632726, "phrase": "experimental_study"}, {"score": 0.0024264776194357993, "phrase": "proposed_composite_approach"}, {"score": 0.002379379676378223, "phrase": "traditional_reachability_testing"}, {"score": 0.002356173823922118, "phrase": "structural_testing"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["structural testing", " reachability testing", " concurrent programs", " experimental study"], "paper_abstract": "Testing is a key activity to assure the quality of concurrent applications. In recent years, a variety of different mechanisms have been proposed to test concurrent software. However, a persistent problem is the high testing cost because of the large number of different synchronization sequences that must be tested. When structural testing criteria are adopted, a large number of infeasible synchronization sequences is generated, increasing the testing cost. Although the use of reachability testing reduces the number of infeasible combination (because only feasible synchronization sequences are generated), many synchronization combinations are also generated, and this again results in a testing cost with exponential behavior. This paper presents a new composite approach that uses reachability testing to guide the selection of the synchronization sequences tests according to a specific structural testing criterion. This new composite approach is empirically evaluated in the context of message-passing concurrent programs developed with MPI. The experimental study evaluates both the cost and effectiveness of proposed composite approach in comparison with traditional reachability testing and structural testing. The results confirm that the use of the new composite approach has advantages for testing of concurrent applications. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Empirical evaluation of a new composite approach to the coverage criteria and reachability testing of concurrent programs", "paper_id": "WOS:000353031800006"}