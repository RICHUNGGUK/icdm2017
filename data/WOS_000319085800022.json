{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "common_graphical_descriptor"}, {"score": 0.0038127186374325582, "phrase": "time_complexity"}, {"score": 0.0037392451233558234, "phrase": "histogram_construction"}, {"score": 0.00323134923196813, "phrase": "column_histograms"}, {"score": 0.003018468582368033, "phrase": "local_histogram"}, {"score": 0.0029602552900111407, "phrase": "constant_time"}, {"score": 0.0026337482179592422, "phrase": "linked-list_histogram"}, {"score": 0.0025331002386232014, "phrase": "empty_bins"}, {"score": 0.002436289099444074, "phrase": "hash_tables"}, {"score": 0.002389276641014013, "phrase": "bin_entries"}, {"score": 0.0022756672722130424, "phrase": "experimental_results"}, {"score": 0.0021464286727045623, "phrase": "proposed_method"}], "paper_keywords": ["image histogram", " linked list", " hash-based"], "paper_abstract": "A histogram is a common graphical descriptor to represent features of distribution of pixels in an image. However, for most of the applications that apply histograms, the time complexity of histogram construction is much higher than that of the other parts of the applications. Hence, column histograms had been presented to construct the local histogram in constant time. In order to increase its performance, this letter proposes a linked-list histogram to avoid generating empty bins, further using hash tables with bin entries to map pixels. Experimental results demonstrate the effectiveness of the proposed method and its superiority to the state-of-the-art method.", "paper_title": "Hash-Based Linked-List Histogram Construction", "paper_id": "WOS:000319085800022"}