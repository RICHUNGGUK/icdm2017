{"auto_keywords": [{"score": 0.0047113960612140335, "phrase": "on-board_equipment"}, {"score": 0.004610058444728656, "phrase": "metrei_rio_automatic_train_protection_system"}, {"score": 0.004225950334493496, "phrase": "formal_weaknesses"}, {"score": 0.004165105357908494, "phrase": "certification_issues"}, {"score": 0.004075469816959996, "phrase": "adopted_tool-suite"}, {"score": 0.003958937342925219, "phrase": "development_side"}, {"score": 0.003681923235979914, "phrase": "design_practices"}, {"score": 0.0034742854447532678, "phrase": "formal_model"}, {"score": 0.0033021988455635403, "phrase": "verification_side"}, {"score": 0.0032310733124059536, "phrase": "two-phase_approach"}, {"score": 0.0031614748814351823, "phrase": "model-based_testing"}, {"score": 0.0029615198132465236, "phrase": "functional_correctness"}, {"score": 0.002918826667294298, "phrase": "runtime_error_freedom"}, {"score": 0.002876747208161839, "phrase": "formal_verification"}, {"score": 0.002754103864198219, "phrase": "side_activity"}, {"score": 0.002655894070657161, "phrase": "quantitative_results"}, {"score": 0.002542642270762272, "phrase": "overall_strategy"}, {"score": 0.00241658945942583, "phrase": "design_activities"}, {"score": 0.0022801453935251503, "phrase": "verification_tasks"}, {"score": 0.002230984431056064, "phrase": "model-based_development"}, {"score": 0.0021987994275190314, "phrase": "automatic_code_generation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Formal methods", " Model-based development", " Code generation", " Railway"], "paper_abstract": "This paper reports on the Simulink/Stateflow based development of the on-board equipment of the Metrei Rio Automatic Train Protection system. Particular focus is given to the strategies followed to address formal weaknesses and certification issues of the adopted tool-suite. On the development side, constraints on the Simulink/Stateflow semantics have been introduced and design practices have been adopted to gradually achieve a formal model of the system. On the verification side, a two-phase approach based on model-based testing and abstract interpretation has been followed to enforce functional correctness and runtime error freedom. Formal verification has been experimented as a side activity of the project. Quantitative results are presented to assess the overall strategy: the effort required by the design activities is balanced by the effectiveness of the verification tasks enabled by model-based development and automatic code generation. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "The Metro Rio case study", "paper_id": "WOS:000320421700005"}