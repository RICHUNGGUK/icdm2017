{"auto_keywords": [{"score": 0.0481969296144749, "phrase": "small_flows"}, {"score": 0.006720930957615774, "phrase": "completion_times"}, {"score": 0.006486105548921921, "phrase": "large_flows"}, {"score": 0.00481495049065317, "phrase": "spike-detecting_aqm"}, {"score": 0.004646407412283884, "phrase": "small_sizes"}, {"score": 0.004473760920761995, "phrase": "common_approach"}, {"score": 0.004307501690657806, "phrase": "packet-scheduling_phase"}, {"score": 0.004138164176041099, "phrase": "negligible_affects"}, {"score": 0.004055998173160551, "phrase": "flip_side"}, {"score": 0.004037098677605424, "phrase": "size-based_flow-scheduler"}, {"score": 0.003993216345115755, "phrase": "increasing_traffic"}, {"score": 0.003905203437405085, "phrase": "ongoing_sizes"}, {"score": 0.0038878341066983504, "phrase": "active_flows"}, {"score": 0.0037928590810170446, "phrase": "spike-detecting_aqm_policies"}, {"score": 0.003718317938585126, "phrase": "active_queue_management"}, {"score": 0.0037017786634473203, "phrase": "aqm"}, {"score": 0.003596031576986474, "phrase": "core_idea"}, {"score": 0.0035561665763186143, "phrase": "tcp_property"}, {"score": 0.0035324592671459303, "phrase": "large_'spikes"}, {"score": 0.003296518894660701, "phrase": "multi-queueing_systems"}, {"score": 0.0032745368475726585, "phrase": "size-based_schedulers"}, {"score": 0.003216629722491926, "phrase": "aqm_policies"}, {"score": 0.0030286255681983712, "phrase": "simple_markov_chain_model"}, {"score": 0.00299503182777783, "phrase": "new_policies"}, {"score": 0.0029750541742077936, "phrase": "well-known_red"}, {"score": 0.002942052898148946, "phrase": "loss_behavior"}, {"score": 0.0027948866819021644, "phrase": "new_aqms"}, {"score": 0.002757718038675917, "phrase": "traditional_drop-tail_buffer"}, {"score": 0.0026609940110902666, "phrase": "better_performance"}, {"score": 0.002608081391206139, "phrase": "response_times"}, {"score": 0.0024283050673989436, "phrase": "different_buffer_sizes"}, {"score": 0.0024067203053452103, "phrase": "large_buffer_size"}, {"score": 0.0023694065215394593, "phrase": "small_size"}, {"score": 0.0023274684039577853, "phrase": "third_scenario"}, {"score": 0.0022258348049775, "phrase": "improved_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["AQM", " QoS", " Elephants", " Flows", " Markov"], "paper_abstract": "The current TCP/IP architecture is known to be biased against flows of small sizes-small flows (or mice)-in the network, thereby affecting the completion times of small flows. A common approach taken to solve this problem is to prioritize small flows over large flows (elephants) during the packet-scheduling phase in the router. Past studies have shown that such 'size-based' priority schedulers improve the completion times of small flows with negligible affects on the completion times of large flows. On the flip side, most approaches are not scalable with increasing traffic, as they need to trace flows and estimate ongoing sizes of active flows in the router. In this context, this work attempts to improve the performance of small flows using an active queue management (AQM) system, without needing to track sizes of flows. The core idea is to exploit a TCP property in detecting large 'spikes' and hence large flows, from which packets are dropped, and importantly, only at times of congestion. In this way, we use only a single queue, diverting from the multi-queueing systems used in size-based schedulers. We propose two spike-detecting AQM policies: (i) SDS-AQM that drops packets deterministically, and (ii) SDI-AQM that drops packets randomly. Using a simple Markov Chain model, we compare these new policies with the well-known RED AQM, highlighting the loss behavior. We also perform simulations, and using a number of metrics, compare the performance of (mostly) small flows obtained under the new AQMs against that obtained under the traditional drop-tail buffer, RED as well as a size-based flow-scheduler PS + PS. Surprisingly, RED is seen to give better performance than the size-based flow-scheduler developed specifically for improving the response times of small flows. Further, we find that the spike-detecting AQM policies give better performance to small flows than any other policy (including RED). Of the three scenarios we consider, two experiment with different buffer sizes-one with large buffer size (BDP) and another with small size (fraction of BDP). The third scenario considers the case where slow and fast flows compete. The results show that the spike-detecting AQM policies, unlike other policies, consistently give improved performance to small flows in all three scenarios. Of the two, the SDI-AQM performs better with respect to some metrics. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A spike-detecting AQM to deal with elephants", "paper_id": "WOS:000307924300008"}