{"auto_keywords": [{"score": 0.04164228196739027, "phrase": "data_owners"}, {"score": 0.00481495049065317, "phrase": "query_processing"}, {"score": 0.004760765880314089, "phrase": "multi-party_computation"}, {"score": 0.004550029253278477, "phrase": "privacy-preserving_query_processing"}, {"score": 0.004373267443572639, "phrase": "partitioned_databases"}, {"score": 0.004299621153829837, "phrase": "relational_queries"}, {"score": 0.004156012879026324, "phrase": "horizontal_data_partitions"}, {"score": 0.004086010164600727, "phrase": "different_data_owners"}, {"score": 0.003927203683176278, "phrase": "secure_multi-party_computation"}, {"score": 0.003883560010145702, "phrase": "smc"}, {"score": 0.0037959868107895053, "phrase": "privacy-preserving_queries"}, {"score": 0.003467040410632942, "phrase": "sql_query_language"}, {"score": 0.0031845067058084583, "phrase": "large_size_data"}, {"score": 0.0030955250132409964, "phrase": "computation_and_communication_costs"}, {"score": 0.0029920129598858545, "phrase": "novel_bucketization_technique"}, {"score": 0.0029083942467546305, "phrase": "classical_notion"}, {"score": 0.0028756028995504035, "phrase": "query_privacy"}, {"score": 0.002763709443278514, "phrase": "query_results"}, {"score": 0.002495521662819317, "phrase": "computational_sense"}, {"score": 0.002318127769195112, "phrase": "trusted_party"}, {"score": 0.0022405528759521856, "phrase": "experimental_results"}], "paper_keywords": ["privacy-preserving query processing", " selection query", " equi-join query", " secure multi-party computation"], "paper_abstract": "In this paper, we investigate privacy-preserving query processing (P-3 Q) techniques on partitioned databases, where relational queries have to be executed on horizontal data partitions held by different data owners. In our scenario, data owners use Secure Multi-party Computation (SMC) to compute privacy-preserving queries on entire relation(s) without sharing their private partitions. Our solution is applicable to a subset of SQL query language called SQL(--) including selection and equi-join queries. To nicely scale up with large size data, we show that computation and communication costs can be reduced via a novel bucketization technique. We consider the classical notion of query privacy, where the querier only learns query results (and what can be inferred from it), and data owners learn as little as possible (in a computational sense) about the query. To ensure such privacy, our technique involves a trusted party only at the beginning of the protocol execution. Experimental results on horizontally partitioned, distributed data show the effectiveness of our approach.", "paper_title": "Privacy-Preserving Query Processing by Multi-Party Computation", "paper_id": "WOS:000362959000002"}