{"auto_keywords": [{"score": 0.04866694555848204, "phrase": "ram"}, {"score": 0.00481495049065317, "phrase": "high-dimensional_data"}, {"score": 0.004757643419056999, "phrase": "main-memory_similarity_search"}, {"score": 0.004508048086020253, "phrase": "in-memory_processing"}, {"score": 0.00414545383888272, "phrase": "novel_index_structure"}, {"score": 0.003975200317233532, "phrase": "efficient_high-dimensional_similarity_search"}, {"score": 0.0038119123317396954, "phrase": "quantized_bounding_spheres"}, {"score": 0.0034220655476652683, "phrase": "respective_pros"}, {"score": 0.0032618078775887077, "phrase": "previously_proposed_quantized_bounding_rectangles"}, {"score": 0.002790867657645595, "phrase": "novel_distance_computation_scheme"}, {"score": 0.0025660347613972573, "phrase": "significant_cost_savings"}, {"score": 0.0024901940672239784, "phrase": "extensive_experimental_evaluation"}], "paper_keywords": ["High-dimensional data", " Indexing", " Similarity search", " Cache-conscious"], "paper_abstract": "As RAM gets cheaper and larger, in-memory processing of data becomes increasingly affordable. In this paper, we propose a novel index structure, the CSR+-tree, to support efficient high-dimensional similarity search in main memory. We introduce quantized bounding spheres (QBSs) that approximate bounding spheres (BSs) or data points. We analyze the respective pros and cons of both QBSs and the previously proposed quantized bounding rectangles (QBRs), and take the best of both worlds by carefully incorporating both of them into the CSR+-tree. We further propose a novel distance computation scheme that eliminates the need for decompressing QBSs or QBRs, which results in significant cost savings. We present an extensive experimental evaluation and analysis of the CSR+-tree, and compare its performance against that of other representative indexes in the literature. Our results show that the CSR+-tree consistently outperforms other index structures. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Indexing high-dimensional data for main-memory similarity search", "paper_id": "WOS:000279971800007"}