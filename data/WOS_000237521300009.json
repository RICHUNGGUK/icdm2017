{"auto_keywords": [{"score": 0.03473691234113984, "phrase": "two-valued_logic"}, {"score": 0.00481495049065317, "phrase": "interpretable_logic_models"}, {"score": 0.004663912432020466, "phrase": "fuzzy_logic_networks"}, {"score": 0.004641098123285973, "phrase": "logic-based_data_analysis"}, {"score": 0.004517590712437511, "phrase": "homogeneous_architectures"}, {"score": 0.004440765635695313, "phrase": "hirota"}, {"score": 0.004418978949798404, "phrase": "pedrycz"}, {"score": 0.004354428071330043, "phrase": "generic_processing_units"}, {"score": 0.004311917869277053, "phrase": "neurofuzzy_constructs"}, {"score": 0.004280306616415286, "phrase": "well-defined_logic_characteristics"}, {"score": 0.004217774712938244, "phrase": "high_level"}, {"score": 0.0041971335590067676, "phrase": "parametric_flexibility"}, {"score": 0.0041561525381071185, "phrase": "significant_interpretation_abilities"}, {"score": 0.004125678490281056, "phrase": "composite_logic_nature"}, {"score": 0.004095426967595521, "phrase": "logic_neurons"}, {"score": 0.004035585063207576, "phrase": "broad_spectrum"}, {"score": 0.003899319124792991, "phrase": "plain_and_and_or_logic_descriptors"}, {"score": 0.0038329147510261473, "phrase": "functional_standpoint"}, {"score": 0.0038048017158420658, "phrase": "developed_network"}, {"score": 0.0037768940977549238, "phrase": "logic_approximation"}, {"score": 0.0037584024036355877, "phrase": "multidimensional_mappings"}, {"score": 0.0037400009050652765, "phrase": "unit_hypercubes"}, {"score": 0.003406941144661418, "phrase": "general_concept"}, {"score": 0.0033488936470967485, "phrase": "boolean_functions"}, {"score": 0.003211992170696907, "phrase": "input_variables"}, {"score": 0.003149512473322035, "phrase": "new_composite_variable"}, {"score": 0.003080669874839271, "phrase": "consecutive_module"}, {"score": 0.0030356102878825357, "phrase": "intermediate_synthetic_variables"}, {"score": 0.0029912077899498578, "phrase": "successive_problem"}, {"score": 0.0028901040599624995, "phrase": "genetic_optimization"}, {"score": 0.002854827460528088, "phrase": "important_issues"}, {"score": 0.0028408373362772566, "phrase": "structural_optimization"}, {"score": 0.0026847819858648006, "phrase": "global_minimum"}, {"score": 0.0026520048812910054, "phrase": "extensive_parametric_optimization"}, {"score": 0.002556048933789233, "phrase": "comprehensive_and_user-interactive_design_procedure"}, {"score": 0.002433473462558075, "phrase": "experimental_studies"}, {"score": 0.002345405915633612, "phrase": "boolean_data"}, {"score": 0.0023110757763310733, "phrase": "useful_comparative_observations"}, {"score": 0.002282850612899642, "phrase": "optimization_tools"}, {"score": 0.002211064407881086, "phrase": "synthetic_multivalued_data"}, {"score": 0.002178696355804523, "phrase": "approximation_abilities"}, {"score": 0.0021049977753042253, "phrase": "selected_data_sets"}], "paper_keywords": ["AND logic operations", " function decomposition", " fuzzy logic network", " fuzzy neurons", " genetic algorithms", " interactive network design", " interpretation", " OR", " OR/AND fuzzy neuron", " pruning"], "paper_abstract": "In this paper, we are concerned with the concept of fuzzy logic networks and logic-based data analysis realized within this framework. The networks under discussion are homogeneous architectures comprising of OR/AND neurons originally introduced by Hirota and Pedrycz. Being treated here as generic processing units, OR/AND neurons are neurofuzzy constructs that exhibit well-defined logic characteristics and are endowed with a high level of parametric flexibility and come with significant interpretation abilities. The composite logic nature of the logic neurons becomes instrumental in covering a broad spectrum of logic dependencies whose character spread in-between between those being captured by plain and and or logic descriptors (connectives). From the functional standpoint, the developed network realizes a logic approximation of multidimensional mappings between unit hypercubes, that is transformations from [0, 1](n) to [0, 1](m). The way in which the structure of the network has been formed is highly modular and becomes reflective of a general concept of decomposition of logic expressions and Boolean functions (as being commonly encountered in two-valued logic). In essence, given a collection of input variables, selected is their subset and transformed into new composite variable, which in turn is used in the consecutive module of the network. These intermediate synthetic variables are the result of the successive problem (mapping) decomposition. The development of the network is realized through genetic optimization. This helps address important issues of structural optimization (where we are concerned with a selection of a subset of variables and their allocation within the network) and reaching a global minimum when carrying out an extensive parametric optimization (adjustments of the connections of the neurons). The paper offers a comprehensive and user-interactive design procedure including a simple pruning mechanism whose intention is to enhance the interpretability of the network while reducing its size. The experimental studies comprise of three parts. First, we demonstrate the performance of the network on Boolean data (that leads to some useful comparative observations considering a wealth of optimization tools available in two-valued logic and digital systems). Second, we discuss synthetic multivalued data that helps focus on the approximation abilities of the network. Finally, show the generation of logic expressions describing selected data sets coming from the machine learning repository.", "paper_title": "OR/AND neurons and the development of interpretable logic models", "paper_id": "WOS:000237521300009"}