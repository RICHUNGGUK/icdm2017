{"auto_keywords": [{"score": 0.030953917782008816, "phrase": "context-dependent_behaviour"}, {"score": 0.00481495049065317, "phrase": "context-dependent_component_connectors"}, {"score": 0.0046986841646790315, "phrase": "component-based_software_engineering_employ"}, {"score": 0.004540591176992658, "phrase": "software_systems"}, {"score": 0.004474468584252318, "phrase": "maximum_flexibility"}, {"score": 0.004219427915728972, "phrase": "expressive_calculus"}, {"score": 0.0041174821422410544, "phrase": "complex_combinations"}, {"score": 0.003978866233891427, "phrase": "non-deterministic_choice"}, {"score": 0.003940122359770492, "phrase": "state-dependent_behaviour"}, {"score": 0.0035902958977673313, "phrase": "context_dependency"}, {"score": 0.0032714270066711835, "phrase": "changing_context"}, {"score": 0.0028106505443369545, "phrase": "connector_change"}, {"score": 0.002498873893632724, "phrase": "context_information"}, {"score": 0.002379379676378223, "phrase": "intuitive_automata-based_formal_model"}, {"score": 0.0022216045996270974, "phrase": "previous_attempts"}, {"score": 0.0021678232353129472, "phrase": "coordination_language_reo"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Coordination", " Context dependency", " Component connector", " Reo"], "paper_abstract": "Recent approaches to component-based software engineering employ coordinating connectors to compose components into software systems. For maximum flexibility and reuse such connectors can themselves be composed, resulting in an expressive calculus of connectors whose semantics encompasses complex combinations of synchronisation, mutual exclusion, non-deterministic choice and state-dependent behaviour. To increase the expressiveness of connectors, notions of context-dependent behaviour have been proposed. Context dependency can be used can express the priority of one behaviour over another and the inhibition of actions due to changing context. The notion of context we consider in this paper is given by the pending activities on the ports of a connector. Context-dependent behaviour occurs whenever the choices available to a connector change non-monotonically as its context changes. Capturing context-dependent behaviour in formal models is non-trivial, as it is unclear how to propagate context information through composition. In this paper we present an intuitive automata-based formal model of context-dependent connectors, and argue that it is superior to previous attempts at such a model for the coordination language Reo. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "A model of context-dependent component connectors", "paper_id": "WOS:000303186500003"}