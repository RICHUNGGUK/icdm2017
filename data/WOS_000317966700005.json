{"auto_keywords": [{"score": 0.033550893132319834, "phrase": "conflict_graph"}, {"score": 0.010241121504656727, "phrase": "interval_graph"}, {"score": 0.00481495049065317, "phrase": "generic_branch-and-price_algorithm"}, {"score": 0.004737579882204798, "phrase": "bin_packing_problem"}, {"score": 0.004512814529823301, "phrase": "minimum_number"}, {"score": 0.00441635700580562, "phrase": "limited_capacity"}, {"score": 0.004345363360869553, "phrase": "joint_assignments"}, {"score": 0.003985487777785535, "phrase": "branch-and-price_algorithm"}, {"score": 0.0034817084307034955, "phrase": "bapcod"}, {"score": 0.0032629585038738856, "phrase": "dynamic_programming_algorithm"}, {"score": 0.0027741761880779535, "phrase": "special_structure"}, {"score": 0.0027295084882654917, "phrase": "exact_method"}, {"score": 0.0024761702541879213, "phrase": "harder_instances"}, {"score": 0.0023970487263732737, "phrase": "arbitrary_conflict_graph"}, {"score": 0.0023712394008737958, "phrase": "larger_number"}, {"score": 0.002270745003370529, "phrase": "new_benchmark_results"}, {"score": 0.0021863046959469863, "phrase": "open_instances"}, {"score": 0.0021049977753042253, "phrase": "cpu_time"}], "paper_keywords": ["branch and price", " bin packing", " knapsack", " conflict graphs", " interval graphs"], "paper_abstract": "The bin packing problem with conflicts consists of packing items in a minimum number of bins of limited capacity while avoiding joint assignments of items that are in conflict. Our study demonstrates that a generic implementation of a branch-and-price algorithm using specific pricing oracle yields comparatively good performance for this problem. We use our black-box branch-and-price solver BaPCod, relying on its generic branching scheme and primal heuristics. We developed a dynamic programming algorithm for pricing when the conflict graph is an interval graph, and a depth-first-search branch-and-bound approach for pricing when the conflict graph has no special structure. The exact method is tested on instances from the literature where the conflict graph is an interval graph, as well as harder instances that we generated with an arbitrary conflict graph and larger number of items per bin. Our computational experiment report sets new benchmark results for this problem, closing all open instances of the literature in one hour of CPU time.", "paper_title": "Bin Packing with Conflicts: A Generic Branch-and-Price Algorithm", "paper_id": "WOS:000317966700005"}