{"auto_keywords": [{"score": 0.03684411833285443, "phrase": "satisfied_constraints"}, {"score": 0.00481495049065317, "phrase": "bound_algorithm"}, {"score": 0.004755054742217193, "phrase": "numerical_max-csp."}, {"score": 0.004494570360108983, "phrase": "declarative_way"}, {"score": 0.004328856052035968, "phrase": "solving_process"}, {"score": 0.0036324746826127997, "phrase": "constraint_problem"}, {"score": 0.003306559295382181, "phrase": "numerical_csps"}, {"score": 0.0031845067058084583, "phrase": "real_variables"}, {"score": 0.003125175084962886, "phrase": "floating_point_intervals"}, {"score": 0.003028727936200845, "phrase": "numerical_relations"}, {"score": 0.002541606552489763, "phrase": "branch"}, {"score": 0.002510600765305481, "phrase": "bound"}, {"score": 0.0021049977753042253, "phrase": "promising_results"}], "paper_keywords": ["Numerical Max-CSP", " Constraint programming", " Numerical constraints"], "paper_abstract": "The Constraint Satisfaction Problem (CSP) framework allows users to define problems in a declarative way, quite independently from the solving process. However, when the problem is over-constrained, the answer \"no solution\" is generally unsatisfactory. A Max-CSP P(m) = < V, D, C > is a triple defining a constraint problem whose solutions maximize the number of satisfied constraints. In this paper, we focus on numerical CSPs, which are defined on real variables represented as floating point intervals and which constraints are numerical relations defined in intension. Solving such a problem (i.e., exactly characterizing its solution set) is generally undecidable and thus consists in providing approximations. We propose a Branch and Bound algorithm that provides under and over approximations of a solution set that maximize the maximum number m(P) of satisfied constraints. The technique is applied on three numeric applications and provides promising results.", "paper_title": "A branch and bound algorithm for numerical Max-CSP", "paper_id": "WOS:000275546300004"}