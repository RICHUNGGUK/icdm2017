{"auto_keywords": [{"score": 0.03286550094955042, "phrase": "synchronization_sequences"}, {"score": 0.015719716506582538, "phrase": "concurrent_programs"}, {"score": 0.01062342049553076, "phrase": "reachability_testing"}, {"score": 0.008832086966901758, "phrase": "t-way_reachability_testing"}, {"score": 0.004454377387615279, "phrase": "test_sequences"}, {"score": 0.0041703614123283165, "phrase": "static_model"}, {"score": 0.004120694410890683, "phrase": "existing_reachability_testing_algorithms"}, {"score": 0.003857871979942733, "phrase": "possible_synchronization_sequences"}, {"score": 0.003789137457228946, "phrase": "concurrent_program"}, {"score": 0.003526186748088922, "phrase": "new_testing_strategy"}, {"score": 0.0032814236411444022, "phrase": "dynamic_framework"}, {"score": 0.002910545717767559, "phrase": "combinatorial_testing_strategy"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["combinatorial testing", " concurrency testing", " t-way testing", " software testing"], "paper_abstract": "One approach to testing concurrent programs is called reachability testing, which derives test sequences automatically and on-the-fly, without constructing a static model. Existing reachability testing algorithms are exhaustive in that they are intended to exercise all possible synchronization sequences of a concurrent program with a given input. In this paper, we present a new testing strategy, called t-way reachability testing, that adopts the dynamic framework of reachability testing but selectively exercises a subset of synchronization sequences. The selection of the synchronization sequences is based on a combinatorial testing strategy called t-way testing. We present an algorithm that implements t-way reachability testing, and report the results of several case studies that were conducted to evaluate its effectiveness. The results indicate that t-way reachability testing can substantially reduce the number of synchronization sequences exercised during reachability testing while still effectively detecting faults. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "A combinatorial testing strategy for concurrent programs", "paper_id": "WOS:000251581200002"}