{"auto_keywords": [{"score": 0.04964635174824772, "phrase": "gradual_granular_data_aggregation"}, {"score": 0.03689565391010681, "phrase": "effective_solution"}, {"score": 0.00481495049065317, "phrase": "time_granularity_table"}, {"score": 0.004664352260912174, "phrase": "today's_systems"}, {"score": 0.00460125407969429, "phrase": "sophisticated_data_management"}, {"score": 0.004417012437860011, "phrase": "large_amounts"}, {"score": 0.004051828608343507, "phrase": "\"old\"_data"}, {"score": 0.00385431710959668, "phrase": "query_performance"}, {"score": 0.0037848978618663684, "phrase": "resource-constrained_systems"}, {"score": 0.0036998728605395384, "phrase": "query_processing_capabilities"}, {"score": 0.0036167509502276294, "phrase": "data_reduction_solutions"}, {"score": 0.0034403745992576808, "phrase": "gradual_data_reduction"}, {"score": 0.003287482882222731, "phrase": "data_reduction"}, {"score": 0.0031845067058084583, "phrase": "gradual_granular_data_aggregation_mechanism"}, {"score": 0.0030017207229983385, "phrase": "newest_data"}, {"score": 0.0025833500717948343, "phrase": "proposed_solution"}, {"score": 0.002548331088496964, "phrase": "time_granularity_based_data_structure"}, {"score": 0.0024349853033241663, "phrase": "long_term_storage"}, {"score": 0.0024129269611844794, "phrase": "old_data"}, {"score": 0.0023586493263143553, "phrase": "different_levels"}, {"score": 0.002316105585203396, "phrase": "effective_query_processing"}, {"score": 0.0022537212268979507, "phrase": "data_volume"}, {"score": 0.0021632743048552536, "phrase": "implementation_strategy"}, {"score": 0.002124247104243502, "phrase": "farming_case_study"}, {"score": 0.0021049977753042253, "phrase": "standard_database_technologies"}], "paper_keywords": ["Data aggregation", " multi-dimensional data aggregation", " gradual granular data aggregation", " multi-granular data", " time granularity"], "paper_abstract": "The majority of today's systems increasingly require sophisticated data management as they need to store and to query large amounts of data for analysis and reporting purposes. In order to keep more \"detailed\" data available for longer periods, \"old\" data has to be reduced gradually to save space and improve query performance, especially on resource-constrained systems with limited storage and query processing capabilities. A number of data reduction solutions have been developed, however an effective solution particularly based on gradual data reduction is missing. This paper presents an effective solution for data reduction based on gradual granular data aggregation. With the gradual granular data aggregation mechanism, older data can be made coarse-grained while keeping the newest data fine-grained. For instance, when data is 3 months old aggregate to 1 minute level from 1 second level, when data is 6 months old aggregate to 2 minutes level from 1 minute level and so on. The proposed solution introduces a time granularity based data structure, namely a relational time granularity table that enables long term storage of old data by maintaining it at different levels of granularity and effective query processing due to a reduction in data volume. In addition, the paper describes the implementation strategy derived from a farming case study using standard database technologies.", "paper_title": "Using a Time Granularity Table for Gradual Granular Data Aggregation", "paper_id": "WOS:000336408000002"}