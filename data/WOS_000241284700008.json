{"auto_keywords": [{"score": 0.03592799868466427, "phrase": "ipss"}, {"score": 0.03125412096041159, "phrase": "multiple_agents"}, {"score": 0.00481495049065317, "phrase": "artificial_intelligence"}, {"score": 0.0046859752697029355, "phrase": "big_push"}, {"score": 0.004560438999891081, "phrase": "complex_problems"}, {"score": 0.004106810349956121, "phrase": "temporal_constraints"}, {"score": 0.0035297609635321203, "phrase": "constraint-based_techniques"}, {"score": 0.0032031180198375283, "phrase": "allen_primitives"}, {"score": 0.002917931350071647, "phrase": "multiple_resources"}, {"score": 0.002817639725689939, "phrase": "temporal_restrictions"}, {"score": 0.0025967927629150715, "phrase": "integrated_reasoning_approach"}, {"score": 0.0025766822940260963, "phrase": "plan_parallelism"}, {"score": 0.0025468074858862964, "phrase": "better_makespans"}, {"score": 0.0024025371556472557, "phrase": "additional_fluents"}, {"score": 0.0023746766301040974, "phrase": "problem_operators"}, {"score": 0.00227525089435209, "phrase": "real_domains"}, {"score": 0.002163089417146551, "phrase": "temporal_windows"}, {"score": 0.0021049977753042253, "phrase": "maximum_makespan"}], "paper_keywords": ["planning", " scheduling", " temporal reasoning", " constraint satisfaction problem"], "paper_abstract": "Recently, the areas of planning and scheduling in Artificial Intelligence (AI) have witnessed a big push toward their integration in order to solve complex problems. These problems require both reasoning on which actions are to be performed as well as their precedence constraints (planning) and the reasoning with respect to temporal constraints (e.g., duration, precedence, and deadline); those actions should satisfy the resources they use (scheduling). This paper describes IPSS (Integrated Planning and Scheduling System), a domain independent solver that integrates an AI planner that synthesizes courses of actions with constraint-based techniques that reason based upon time and resources. IPSS is able to manage not only simple precedence constraints, but also more complex temporal requirements (as the Allen primitives) and multicapacity resource usage/consumption. The solver is evaluated against a set of problems characterized by the use of multiple agents (or multiple resources) that have to perform tasks with some temporal restrictions in the order of the tasks or some constraints in the availability of the resources. Experiments show how the integrated reasoning approach improves plan parallelism and gains better makespans than some state-of-the-art planners where multiple agents are represented as additional fluents in the problem operators. It also shows that IPSS is suitable for solving real domains (i.e., workflow problems) because it is able to impose temporal windows on the goals or set a maximum makespan, features that most of the planners do not yet incorporate.", "paper_title": "IPSS: A hybrid approach to planning and scheduling integration", "paper_id": "WOS:000241284700008"}