{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "simple_input-port"}, {"score": 0.004363846362238565, "phrase": "different_packets"}, {"score": 0.004133940019630129, "phrase": "rotating_flit-by-flit_arbitration"}, {"score": 0.003709693561373117, "phrase": "id_tag"}, {"score": 0.0035141291835319682, "phrase": "downstream_routers"}, {"score": 0.003200230621987751, "phrase": "single_memory_buffer"}, {"score": 0.003168859801438632, "phrase": "different_specific_area"}, {"score": 0.0030614565460256897, "phrase": "control_part"}, {"score": 0.0030314419455512013, "phrase": "single_memory"}, {"score": 0.0029722900280316216, "phrase": "adaptive_property"}, {"score": 0.0027878797103973313, "phrase": "channel's_buffer"}, {"score": 0.0026933542552712033, "phrase": "static_nature"}, {"score": 0.0026020254041372723, "phrase": "adaptive_nature"}, {"score": 0.0025137856138000014, "phrase": "different_size"}, {"score": 0.0024525907271610104, "phrase": "traffic_demand"}, {"score": 0.0023694174575912873, "phrase": "noc"}, {"score": 0.0022665781920241245, "phrase": "buffer_utilization"}, {"score": 0.0022223176391038785, "phrase": "efficient_hardware_overhead"}, {"score": 0.0021682027434117095, "phrase": "conventional_static_vc_mechanism"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Network on chip", " Virtual channel", " First-in first-out buffer", " Static random access memory"], "paper_abstract": "In this paper, we present the architecture of a simple input-port that utilizes a static but adaptive Virtual Channel (VC) mechanism. In our approach, the flits of one packet can interleave with the other flits of different packets in a channel and a single buffer by using a rotating flit-by-flit arbitration. The routing path of each flit can be guaranteed because the flits belonging to a packet are attached with an ID tag at each router. Then these flits become differentiable at downstream routers. These tagged interleaved flit-by-flit flow of packet can be controlled and stored in a single memory buffer at different specific area called VC. We further develop the control part of single memory to give an adaptive property to the VCs of a channel. Our approach prevents the monopoly of channel's buffer by a VC because of the static nature of VCs. Moreover, the adaptive nature of our approach lets the VCs allocate different size of buffers according to traffic demand. Overall, our Statically Adaptive Multi FIFO (SAMF) approach improves the NoC performance metrics such as throughput, latency and buffer utilization by employing an efficient hardware overhead as compared to a conventional static VC mechanism. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Statically adaptive multi FIFO buffer architecture for network on chip", "paper_id": "WOS:000348557400002"}