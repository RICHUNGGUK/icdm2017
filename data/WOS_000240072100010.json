{"auto_keywords": [{"score": 0.03809336769485716, "phrase": "knuth-bendix"}, {"score": 0.00481495049065317, "phrase": "rewriting_systems"}, {"score": 0.004638462976078815, "phrase": "modeling_language"}, {"score": 0.004447600571127578, "phrase": "based_models"}, {"score": 0.004406260054779782, "phrase": "reachability_analysis"}, {"score": 0.004108161406159407, "phrase": "input_terms"}, {"score": 0.004032118497047498, "phrase": "efficient_verification_technique"}, {"score": 0.003407839062159497, "phrase": "tree_automaton_completion_technique"}, {"score": 0.0032827577713351336, "phrase": "non_reachability"}, {"score": 0.0032370412139943808, "phrase": "term_t"}, {"score": 0.0030604342671868836, "phrase": "reachable_terms"}, {"score": 0.002456486927713543, "phrase": "rewriting_path"}, {"score": 0.002422249273477746, "phrase": "reachable_term"}, {"score": 0.002333258365963463, "phrase": "counter_example"}, {"score": 0.002237036807966899, "phrase": "timbuk_tool"}], "paper_keywords": [""], "paper_abstract": "Term Rewriting Systems are now commonly used a's a modeling language for programs or systems. On those rewriting based models, reachability analysis, i.e. proving or disproving that a given term is reachable from a set of input terms, provides an efficient verification technique. For disproving reachability (i.e. proving non reachability of a term) on non terminating and non confluent rewriting models, Knuth-Bendix completion and other usual rewriting techniques do not apply. Using the tree automaton completion technique, it has been shown that the non reachability of a term t can be shown by computing an over-approximation of the set of reachable terms and prove that t is not in the approximation. However, when the term t is in the approximation, nothing can be said. In this paper, we refine this approach and propose a method taking advantage of the approximation to compute a rewriting path to the reachable term when it exists, i.e. produce a counter example. The algorithm has been prototyped in the Timbuk tool. We present some experiments with this prototype showing the interest of such an approach w.r.t. verification of rewriting models.", "paper_title": "Feasible trace reconstruction for rewriting approximations", "paper_id": "WOS:000240072100010"}