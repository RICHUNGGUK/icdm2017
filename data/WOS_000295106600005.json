{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "max-min_fair_networks"}, {"score": 0.004750178261675602, "phrase": "per-flow_state"}, {"score": 0.0042912493195237725, "phrase": "source_computer"}, {"score": 0.004204904449336037, "phrase": "destination_computer"}, {"score": 0.003956113993518042, "phrase": "fair_allocation"}, {"score": 0.0037473054818679763, "phrase": "computer_network"}, {"score": 0.0036224139706218916, "phrase": "max-min_fairness"}, {"score": 0.0034311578789991363, "phrase": "largest_possible_bandwidth"}, {"score": 0.0030992666061123533, "phrase": "constant_amount"}, {"score": 0.002598034157587518, "phrase": "proposed_differentiated_services_internet_architecture"}, {"score": 0.0024440836179156593, "phrase": "high_degree"}, {"score": 0.002148315508445588, "phrase": "normal_operating_state"}, {"score": 0.0021049977753042253, "phrase": "finite_sequence"}], "paper_keywords": ["Stabilization", " max-min fairness", " Quality of service", " Computer networks"], "paper_abstract": "Let a flow be a sequence of packets that are sent from a source computer to a destination computer. In this paper, we consider the fair allocation of bandwidth to each flow in a computer network. We focus on max-min fairness, which assigns to each flow the largest possible bandwidth that avoids affecting other flows. What distinguishes our approach is that routers only maintain a constant amount of state, i.e., no per-flow state is maintained. This is consistent with trends in the Internet (such as the proposed Differentiated Services Internet architecture). In addition, to provide a high degree of fault-tolerance, we ensure our approach is self-stabilizing, that is, it returns to a normal operating state after a finite sequence of faults. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Stabilization of max-min fair networks without per-flow state", "paper_id": "WOS:000295106600005"}