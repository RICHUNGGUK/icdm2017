{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "orbital"}, {"score": 0.004686688155058031, "phrase": "orbital_branching"}, {"score": 0.004512814529823301, "phrase": "integer_programs"}, {"score": 0.004440277230269978, "phrase": "great_deal"}, {"score": 0.004229556887896042, "phrase": "computing_groups"}, {"score": 0.003675120438902734, "phrase": "root_node"}, {"score": 0.0035771121569391916, "phrase": "equivalent_variables"}, {"score": 0.0033888405252810927, "phrase": "valid_partitioning"}, {"score": 0.003334309053314909, "phrase": "feasible_region"}, {"score": 0.003124790943886441, "phrase": "flexible_branching_rule"}, {"score": 0.0028195727965553367, "phrase": "branch-and-bound_tree"}, {"score": 0.002685558057339722, "phrase": "standard_integer_programming_software"}, {"score": 0.0026280534600940137, "phrase": "empirical_study"}, {"score": 0.0025857324180891526, "phrase": "test_suite"}, {"score": 0.0025578967205807843, "phrase": "symmetric_integer_programs"}, {"score": 0.0023841092222805253, "phrase": "branching_decision"}, {"score": 0.002320449502337321, "phrase": "resulting_method"}, {"score": 0.0022101055924375725, "phrase": "similar_method"}, {"score": 0.0021745003291048356, "phrase": "isomorphism_pruning"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_commercial_solver"}], "paper_keywords": ["Integer programming", " Symmetry", " Branch-and-bound algorithms"], "paper_abstract": "We introduce orbital branching, an effective branching method for integer programs containing a great deal of symmetry. The method is based on computing groups of variables that are equivalent with respect to the symmetry remaining in the problem after branching, including symmetry that is not present at the root node. These groups of equivalent variables, called orbits, are used to create a valid partitioning of the feasible region that significantly reduces the effects of symmetry while still allowing a flexible branching rule. We also show how to exploit the symmetries present in the problem to fix variables throughout the branch-and-bound tree. Orbital branching can easily be incorporated into standard integer programming software. Through an empirical study on a test suite of symmetric integer programs, the question as to the most effective orbit on which to base the branching decision is investigated. The resulting method is shown to be quite competitive with a similar method known as isomorphism pruning and significantly better than a state-of-the-art commercial solver on symmetric integer programs.", "paper_title": "Orbital branching", "paper_id": "WOS:000286218900006"}