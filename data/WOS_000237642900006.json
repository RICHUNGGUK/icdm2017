{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "computational_geometry"}, {"score": 0.014898527239408984, "phrase": "floating-point_arithmetic"}, {"score": 0.004389451298343287, "phrase": "stated_purpose"}, {"score": 0.003975936061382971, "phrase": "accompanying_remarks"}, {"score": 0.0038633204164544802, "phrase": "numerical_analysis"}, {"score": 0.00381429438125808, "phrase": "simple_approaches"}, {"score": 0.0037180939187449937, "phrase": "finite-precision_arithmetic"}, {"score": 0.0036127549845584, "phrase": "general_statement"}, {"score": 0.0033891942983439146, "phrase": "now-classical_backward_error_analysis"}, {"score": 0.0031998046354547705, "phrase": "uncertain_data"}, {"score": 0.0031290354217563938, "phrase": "practical_context"}, {"score": 0.0031091037560494806, "phrase": "computational-geometry_algorithms"}, {"score": 0.0030209660697925285, "phrase": "convex_hulls"}, {"score": 0.0029259540174253426, "phrase": "backward_error_analysis"}, {"score": 0.0028429935010577975, "phrase": "finite_precision"}, {"score": 0.0027360168758119277, "phrase": "fairly_routine_way"}, {"score": 0.0024542249391904256, "phrase": "principal_reference"}, {"score": 0.0024307967304431806, "phrase": "often_the_situation"}, {"score": 0.002339293926434437, "phrase": "numerical_solution"}, {"score": 0.002324381111188894, "phrase": "linear_equations"}, {"score": 0.0022948394240866555, "phrase": "algebraic_eigenvalue_problem"}, {"score": 0.002180371753380285, "phrase": "unstable_algorithm"}, {"score": 0.0021049977753042253, "phrase": "provably_stable_algorithms"}], "paper_keywords": [""], "paper_abstract": "A recent paper, published in Algorithms-ESA2004, presented examples designed to illustrate that using floating-point arithmetic in algorithms for computational geometry may cause implementations to fail. The stated purpose was to demonstrate, to students and implementors, the inadequacy of floating-point arithmetic for geometric computations. The examples presented were both useful and insightful, but certain of the accompanying remarks were misleading. One such remark is that researchers in numerical analysis may believe that simple approaches are available to overcome the problems of finite-precision arithmetic. Another is the reference, as a general statement, to the inadequacy of floating-point arithmetic for geometric computations. In this paper it will be shown how the now-classical backward error analysis can be applied in the area of computational geometry. This analysis is relevant in the context of uncertain data, which may well be the practical context for computational-geometry algorithms such as, say, those for computing convex hulls. The exposition will illustrate the fact that the backward error analysis does not pretend to overcome the problem of finite precision: it merely provides a tool to distinguish, in a fairly routine way, those algorithms that overcome the problem to whatever extent it is possible to do so. It will also be shown, by using one of the examples of failure presented in the principal reference, that often the situation in computational geometry is exactly parallel to other areas, such as the numerical solution of linear equations, or the algebraic eigenvalue problem. Indeed, the example mentioned can be viewed simply as an example of an unstable algorithm, for a problem for which computational geometry has already discovered provably stable algorithms.", "paper_title": "Backward error analysis in computational geometry", "paper_id": "WOS:000237642900006"}