{"auto_keywords": [{"score": 0.04601284855430019, "phrase": "average_complexity"}, {"score": 0.030570347867177793, "phrase": "deterministic_tree_walking_automata"}, {"score": 0.00481495049065317, "phrase": "deterministic_tree_automata"}, {"score": 0.004721162131188487, "phrase": "uniform_random_generators"}, {"score": 0.004583878086896926, "phrase": "simple_empirical_means"}, {"score": 0.004073359218158693, "phrase": "general_rejection_algorithm"}, {"score": 0.003954837422946628, "phrase": "sequential_letter-to-letter_transducers"}, {"score": 0.0036194914688460656, "phrase": "original_parametric_random_generation_algorithm"}, {"score": 0.0032160319265621285, "phrase": "fixed_number"}, {"score": 0.0030017207229983385, "phrase": "general_scheme"}, {"score": 0.0028293966058473476, "phrase": "deterministic_top-down_tree_automata"}, {"score": 0.002346160830406661, "phrase": "nondeterministic_top-down_tree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Random generation", " Average complexity", " Tree automaton"], "paper_abstract": "Uniform random generators deliver a simple empirical means to estimate the average complexity of an algorithm. We present a general rejection algorithm that generates sequential letter-to-letter transducers up to isomorphism. We also propose an original parametric random generation algorithm to produce sequential letter-to-letter transducers with a fixed number of transitions. We tailor this general scheme to randomly generate deterministic tree walking automata and deterministic top-down tree automata. We apply our implementation of the generator to the estimation of the average complexity of a deterministic tree walking automata to nondeterministic top-down tree automata construction we also implemented. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Parametric random generation of deterministic tree automata", "paper_id": "WOS:000282151100008"}