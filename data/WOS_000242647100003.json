{"auto_keywords": [{"score": 0.04763239742783828, "phrase": "distributed_computing"}, {"score": 0.02459538366258584, "phrase": "k-dominating_sets"}, {"score": 0.024219279364939547, "phrase": "preliminary_version"}, {"score": 0.023645357864017436, "phrase": "ottawa"}, {"score": 0.02356520746698614, "phrase": "canada"}, {"score": 0.010794801079770893, "phrase": "j._algorithms"}, {"score": 0.007945946258388058, "phrase": "running_time"}, {"score": 0.007660626431968808, "phrase": "d._peleg"}, {"score": 0.00481495049065317, "phrase": "minimum_spanning_tree"}, {"score": 0.0047315800762415886, "phrase": "minim_tan-weight"}, {"score": 0.004665919428735841, "phrase": "distributed_network"}, {"score": 0.004529386520601479, "phrase": "long_line"}, {"score": 0.0045135875758567515, "phrase": "gradually_improving_protocols"}, {"score": 0.004275603876706693, "phrase": "kutten"}, {"score": 0.004260689686037246, "phrase": "peleg"}, {"score": 0.0042458205144592955, "phrase": "s._kutten"}, {"score": 0.0038837142642113103, "phrase": "g._peleg"}, {"score": 0.0038364757406535253, "phrase": "v._rubinovich"}, {"score": 0.00376998334358103, "phrase": "time_complexity"}, {"score": 0.0037568232750278016, "phrase": "distributed_mst_construction"}, {"score": 0.003672391341008416, "phrase": "computer_science"}, {"score": 0.003503041985521356, "phrase": "mst"}, {"score": 0.0034725269588525534, "phrase": "small_diameter"}, {"score": 0.0024046313925655555, "phrase": "twice_the_running_time"}, {"score": 0.0021309622180999987, "phrase": "drastically_improved_running_time"}, {"score": 0.0021197956953669314, "phrase": "latter_result"}, {"score": 0.0021049977753042253, "phrase": "independent_interest"}], "paper_keywords": ["minimum spanning tree", " distributed computing"], "paper_abstract": "This paper studies the problem of constructing a minim tan-weight spanning tree (MST) in a distributed network. This is one of the most important problems in the area of distributed computing. There is a long line of gradually improving protocols for this problem, and the state of the art today is a protocol with running time O(Lambda(G) + root(n) over bar center dot log* n) due to Kutten and Peleg [S. Kutten, D. Peleg, Fast distributed construction of k-dominating sets and applications, J. Algorithms 28 (1998) 40-66; preliminary version appeared in: Proc. of 14th ACM Symp. on Principles of Distributed Computing, Ottawa, Canada, August 1995, pp. 20-27], where Lambda (G) denotes the diameter of the graph G. Peleg and Rubinovich [D. Peleg, V. Rubinovich, A near-tight lower bound on the time complexity of distributed MST construction, in: Proc. 40th IEEE Symp. on Foundations of Computer Science, 1999, pp. 253-261] have shown that (Omega) over tilde(root(n) over bar) time is required for constructing MST even on graphs of small diameter, and claimed that their result \"establishes the asymptotic near-optimality\" of the protocol of [S. Kutten, D. Peleg, Fast distributed construction of k-dominating sets and applications, J. Algorithms 28 (1998) 40-66; preliminary version appeared in: Proc. of 14th ACM Symp. on Principles of Distributed Computing, Ottawa, Canada, August 1995, pp. 20-27]. In this paper we refine this claim, and devise a protocol that constructs the MST in (Omega) over tilde (mu(G, omega) + root(n) over bar) rounds, where mu(G, omega) is the MST-radius of the graph. The ratio between the diameter and the MST-radius may be as large as Theta(n), and, consequently, on some inputs our protocol is faster than the protocol of [S. Kuiten, D. Peleg, Fast distributed construction of k-dominating sets and applications, J. Algorithms 28 (1998) 40-66; preliminary version appeared in: Proc. of 14th ACM Symp. on Principles of Distributed Computing, Ottawa, Canada, August 1995, pp. 20-27] by a factor of (Omega) over tilde (root(n) over bar). Also, on every input, the running time of our protocol is never greater than twice the running time of the protocol of [S. Kutten, D. Peleg, Fast distributed construction of k-dominating sets and applications, J. Algorithms 28 (1998) 40-66; preliminary version appeared in: Proc. of 14th ACM Symp. on Principles of Distributed Computing, Ottawa, Canada, August 1995, pp. 20-27]. As part of our protocol for constructing an MST, we develop a protocol for constructing neighborhood covers with a drastically improved running time. The latter result may be of independent interest. (C) 2006 Inc Elsevier Inc. All rights reserved.", "paper_title": "A faster distributed protocol for constructing a minimum spanning tree", "paper_id": "WOS:000242647100003"}