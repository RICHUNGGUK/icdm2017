{"auto_keywords": [{"score": 0.04363204768535525, "phrase": "off-chip_memory_accesses"}, {"score": 0.04227421115664317, "phrase": "llc"}, {"score": 0.036357110893990255, "phrase": "cache_line_data"}, {"score": 0.03303958864223531, "phrase": "base_pattern"}, {"score": 0.031241406452259948, "phrase": "gpu_simulator"}, {"score": 0.030378191787016447, "phrase": "proposed_coding"}, {"score": 0.0240633531085682, "phrase": "ipc"}, {"score": 0.00481495049065317, "phrase": "last_level_cache_data_compression"}, {"score": 0.00471700544744796, "phrase": "continuous_improvement"}, {"score": 0.004678384952779725, "phrase": "computational_power"}, {"score": 0.004583205112737672, "phrase": "memory_access_performance"}, {"score": 0.004344662696228875, "phrase": "overall_performance"}, {"score": 0.00430907756010007, "phrase": "recent_processors"}, {"score": 0.004135458387200662, "phrase": "low-delay_data_compression"}, {"score": 0.0039040344230094164, "phrase": "processor_performance"}, {"score": 0.003808845109556467, "phrase": "effective_size"}, {"score": 0.0035661605757956096, "phrase": "novel_data_compression_method"}, {"score": 0.0035224030823976186, "phrase": "high-speed_parallel_decoding"}, {"score": 0.0034791811448023134, "phrase": "llc."}, {"score": 0.0031910685060552485, "phrase": "information_word"}, {"score": 0.0030876784650745973, "phrase": "differential_pattern"}, {"score": 0.0030497740719977835, "phrase": "original_word"}, {"score": 0.0029027394930867902, "phrase": "compression_ratio"}, {"score": 0.0028202559386070873, "phrase": "lzss_coding"}, {"score": 0.002607965563121546, "phrase": "experimental_decoder"}, {"score": 0.002575964441858182, "phrase": "asic"}, {"score": 0.0025338369486914364, "phrase": "synthesized_result"}, {"score": 0.0021576973674470997, "phrase": "conventional_b_delta"}, {"score": 0.0021049977753042253, "phrase": "maximum_improvement"}], "paper_keywords": ["cache memory compression", " parallel decoding", " GPGPU", " de-compression delay"], "paper_abstract": "In spite of continuous improvement of computational power of multi/many-core processors, the memory access performance of the processors has not been improved sufficiently, and thus the overall performance of recent processors is often restricted by the delay of off-chip memory accesses. Low-delay data compression for last level cache (LLC) would be effective to improve the processor performance because the compression increases the effective size of LLC, and thus reduces the number of off-chip memory accesses. This paper proposes a novel data compression method suitable for high-speed parallel decoding in the LLC. Since cache line data often have periodicity of certain lengths, such as 32- or 64-bit instructions, 32-bit integers, and 64-bit floating point numbers, an information word is encoded as a base pattern and a differential pattern between the original word and the base pattern. Evaluation using a GPU simulator shows that the compression ratio of the proposed coding is comparable to LZSS coding and X-Match Pro and superior to other conventional compression algorithms for cache memories. Also this paper presents an experimental decoder designed for ASIC, and the synthesized result shows that the decoder can decompress cache line data of length 32 bytes in four clock cycles. Evaluation of the IPC on the GPU simulator shows that, for several benchmark programs, the IPC achieved by the proposed coding is higher than that by the conventional B Delta I coding, where the maximum improvement of the IPC is 20%.", "paper_title": "Periodic Pattern Coding for Last Level Cache Data Compression", "paper_id": "WOS:000329006900005"}