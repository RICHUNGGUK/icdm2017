{"auto_keywords": [{"score": 0.03854928587050201, "phrase": "hardware_implementation"}, {"score": 0.00481495049065317, "phrase": "high_performance_montgomery_modular_multiplier_with"}, {"score": 0.004772137871562584, "phrase": "new_recoding_method._modular_calculations"}, {"score": 0.00458412183693466, "phrase": "public_key_cryptography"}, {"score": 0.0040996651541091575, "phrase": "montgomery_modular_multiplication"}, {"score": 0.003902992784453769, "phrase": "modular_multiplication"}, {"score": 0.003868257410961701, "phrase": "modular_exponentiation"}, {"score": 0.0036173729405604674, "phrase": "multi-operand_adders"}, {"score": 0.003474694300991964, "phrase": "carry-save-adder"}, {"score": 0.0034437820519793647, "phrase": "csa"}, {"score": 0.003382704886584695, "phrase": "best_performance"}, {"score": 0.003220315882881027, "phrase": "new_recoding_method"}, {"score": 0.003177392642813126, "phrase": "montgomery_modular_multiplier"}, {"score": 0.00303839203670705, "phrase": "csa_blocks"}, {"score": 0.0030113280682863234, "phrase": "new_blocks"}, {"score": 0.002971182100871581, "phrase": "better_performances"}, {"score": 0.002918483026678636, "phrase": "multi-addition_calculations"}, {"score": 0.0024953686545818587, "phrase": "bitwise_subtraction_operator"}, {"score": 0.002451088210833819, "phrase": "carry_propagation"}, {"score": 0.0023968383387667404, "phrase": "recoding_method"}, {"score": 0.002291905937251069, "phrase": "computer_arithmetic"}, {"score": 0.002251227801482381, "phrase": "computational_hardware"}], "paper_keywords": ["Montgomery modular multiplication", " multi-addition", " bitwise subtraction", " carry save adder", " recoding"], "paper_abstract": "Modular calculations are widely used in many applications, especially in public key cryptography. Such operations are very time consuming, due to their long operands. To improve the performance of these calculations, many methods have been introduced. Montgomery modular multiplication is an example of such a solution to enhance the performance of modular multiplication and modular exponentiation. The radix-2 version of this method is simple and fast for hardware implementation, where multi-operand adders are required for its implementation. So far, Carry-Save-Adder (CSA) gives the best performance for multi-addition. In this paper, we propose a new recoding method for the Montgomery modular multiplier to enhance its performance. This is done through replacing CSA blocks with new blocks that have better performances than CSA in multi-addition calculations. With this replacement, we can theoretically have up to 40% reduction in area gates. In our experiments, we obtained 5.8% area reduction and 3% speed improvement in a hardware implementation. The idea behind our proposed method is the use of bitwise subtraction operator, where no carry propagation is needed. This recoding method of operands can also be used in many aspects of computer arithmetic, algorithms and computational hardware, such as multiplication, exponentiation and etc., in order to enhance their performances.", "paper_title": "HIGH PERFORMANCE MONTGOMERY MODULAR MULTIPLIER WITH A NEW RECODING METHOD", "paper_id": "WOS:000289476400012"}