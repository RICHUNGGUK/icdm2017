{"auto_keywords": [{"score": 0.046577269805750374, "phrase": "composite_performance"}, {"score": 0.00481495049065317, "phrase": "hot_page_migration"}, {"score": 0.004742511243894382, "phrase": "static_cache"}, {"score": 0.004600870784042767, "phrase": "inter-application_cache_interference"}, {"score": 0.004363058588000252, "phrase": "cache-polluted_application"}, {"score": 0.004264923517966271, "phrase": "cache-sensitive_application"}, {"score": 0.003983512316698646, "phrase": "last_level_cache"}, {"score": 0.0037774893672602506, "phrase": "virtualized_system"}, {"score": 0.0036924762294207633, "phrase": "different_applications"}, {"score": 0.0035820833812158035, "phrase": "different_virtual_machines"}, {"score": 0.003448705829033573, "phrase": "different_time"}, {"score": 0.0030311679447397725, "phrase": "dynamic_cache"}, {"score": 0.002874257080906824, "phrase": "hot_page_detection"}, {"score": 0.0028309318332306703, "phrase": "page_migration"}, {"score": 0.0025453546203590364, "phrase": "prior_knowledge"}, {"score": 0.0025069746344846375, "phrase": "cache-sensitive_applications"}, {"score": 0.0021049977753042253, "phrase": "free_composition"}], "paper_keywords": ["cache partitioning", " hot page migration", " dynamic cache partitioning", " virtualization", " virtual machine monitor"], "paper_abstract": "Static cache partitioning can reduce inter-application cache interference and improve the composite performance of a cache-polluted application and a cache-sensitive application when they run on cores that share the last level cache in the same multi-core processor. In a virtualized system, since different applications might run on different virtual machines (VMs) in different time, it is inapplicable to partition the cache statically in advance. This paper proposes a dynamic cache partitioning scheme that makes use of hot page detection and page migration to improve the composite performance of co-hosted virtual machines dynamically according to prior knowledge of cache-sensitive applications. Experimental results show that the overhead of our page migration scheme is low, while in most cases, the composite performance is an improvement over free composition.", "paper_title": "Dynamic cache partitioning based on hot page migration", "paper_id": "WOS:000307266300003"}