{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "model_checking"}, {"score": 0.004688321299229397, "phrase": "smt_solvers"}, {"score": 0.004158290806404304, "phrase": "successful_approach"}, {"score": 0.004103212598803194, "phrase": "automatic_software_analysis"}, {"score": 0.004021954624114115, "phrase": "key_idea"}, {"score": 0.003813017794036879, "phrase": "propositional_formula"}, {"score": 0.003712640297460159, "phrase": "program_traces"}, {"score": 0.0036390887584943723, "phrase": "bounded_length"}, {"score": 0.003381607100127276, "phrase": "state-of-the-art_sat_solvers"}, {"score": 0.0029988599391845517, "phrase": "cbmc_approach"}, {"score": 0.0026593184154220123, "phrase": "considerably_more_compact_formulae"}, {"score": 0.0024875444192203485, "phrase": "prototype_implementation"}, {"score": 0.0022806798371116698, "phrase": "computer_experiments"}, {"score": 0.0021333110194180997, "phrase": "significant_problems"}, {"score": 0.0021049977753042253, "phrase": "cbmc."}], "paper_keywords": [""], "paper_abstract": "C Bounded Model Checking (CBMC) has proven to be a successful approach to automatic software analysis. The key idea is to (i) build a propositional formula whose models correspond to program traces (of bounded length) that violate some given property and (ii) use state-of-the-art SAT solvers to check the resulting formulae for satisfiability. In this paper we propose a generalisation of the CBMC approach based on an encoding into richer (but still decidable) theories than propositional logic. We show that our approach may lead to considerably more compact formulae than those obtained with CBMC. We have built a prototype implementation of our technique that uses a Satisfiability Modulo Theories (SMT) solver to solve the resulting formulae. Computer experiments indicate that our approach compares favourably with and on some significant problems outperforms CBMC.", "paper_title": "Bounded model checking of software using SMT solvers instead of SAT solvers", "paper_id": "WOS:000236941300009"}