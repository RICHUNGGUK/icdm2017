{"auto_keywords": [{"score": 0.025464240109464246, "phrase": "matita"}, {"score": 0.00481495049065317, "phrase": "reverse_complexity"}, {"score": 0.004718897469501381, "phrase": "long_term_research_program"}, {"score": 0.004125513927068713, "phrase": "final_goal"}, {"score": 0.0038573081851680656, "phrase": "complexity_theory"}, {"score": 0.0034638476252104706, "phrase": "complexity_classes"}, {"score": 0.002664375650349975, "phrase": "well_known_hierarchy_theorems"}, {"score": 0.0024742098091226203, "phrase": "interactive_theorem_prover"}, {"score": 0.002251637552201872, "phrase": "formal_correctness"}, {"score": 0.0021479597698614373, "phrase": "important_driver"}, {"score": 0.0021049977753042253, "phrase": "actual_research"}], "paper_keywords": ["Machine-independent complexity", " Reverse complexity", " Interactive theorem proving", " Hierarchy theorems"], "paper_abstract": "Reverse Complexity is a long term research program aiming at discovering the abstract, logical principles underlying Complexity Theory, by means of a formal, reverse analysis of its proofs. The final goal is to get a cleaner, machine independent presentation of the foundation of Complexity Theory and a better, synergic integration with logic; in particular, we aim to provide abstract, axiomatic characterizations of Complexity Classes with the purpose to better grasp their essence, identify their distinctive properties, suggest new, possibly non-standard computational models and finally provide new tools for separating them. In this article, we introduce the program and illustrate its methodology through an investigation of the well known Hierarchy Theorems. The analysis is conducted with the assistance of an interactive theorem prover (in our case, Matita), not only used to check the formal correctness of proofs, but as an important driver of the actual research.", "paper_title": "Reverse Complexity", "paper_id": "WOS:000365178000002"}