{"auto_keywords": [{"score": 0.035535052228912525, "phrase": "intermediate_solutions"}, {"score": 0.00481495049065317, "phrase": "cascade_search_algorithm"}, {"score": 0.0044524122425287005, "phrase": "asynchronous_approach"}, {"score": 0.004300133642951283, "phrase": "cascade_optimisation_algorithm"}, {"score": 0.004046020290832207, "phrase": "asynchronous_markov_processes"}, {"score": 0.003907586297783078, "phrase": "search_process"}, {"score": 0.0037411604449359794, "phrase": "distributed_computing_infrastructures"}, {"score": 0.003311799410921826, "phrase": "corresponding_objectives"}, {"score": 0.0032546105164772995, "phrase": "population_inflections"}, {"score": 0.003062091606343783, "phrase": "markov_processes"}, {"score": 0.002855934865505357, "phrase": "arbitrary_use"}, {"score": 0.0027104531025934865, "phrase": "complex_optimisation_problems"}, {"score": 0.002594880866651459, "phrase": "commonly_used_tabu_search"}, {"score": 0.0025279105573394727, "phrase": "asynchronous_cascade_algorithm"}, {"score": 0.002462664392109308, "phrase": "significant_potential"}, {"score": 0.0024201029474586007, "phrase": "distributed_operations"}, {"score": 0.0023782753249846794, "phrase": "favourable_comparisons"}, {"score": 0.0022768346311104735, "phrase": "quasi-asynchronous_versions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Markov processes", " Asynchronous optimisation", " Parallel and distributed computing"], "paper_abstract": "This paper introduces the development of an asynchronous approach coupled with a cascade optimisation algorithm. The approach incorporates concepts of asynchronous Markov processes and introduces a search process that is benefiting from distributed computing infrastructures. The algorithm uses concepts of partitions and pools to store intermediate solutions and corresponding objectives. Population inflections are performed periodically to ensure that Markov processes, still independent and asynchronous, make arbitrary use of intermediate solutions. Tested against complex optimisation problems and in comparison with commonly used Tabu Search, the asynchronous cascade algorithm demonstrates a significant potential in distributed operations with favourable comparisons drawn against synchronous and quasi-asynchronous versions of conventional algorithms. (c) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Asynchronous optimisation with the use of a cascade search algorithm", "paper_id": "WOS:000336373400024"}