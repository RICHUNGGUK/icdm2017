{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "design_optimization_of_mixed-criticality"}, {"score": 0.004794489789859812, "phrase": "real-time_embedded_systems"}, {"score": 0.004575053987970206, "phrase": "mixed-criticality_real-time_embedded_applications"}, {"score": 0.0043842558719324526, "phrase": "different_criticality_levels"}, {"score": 0.004148014765950199, "phrase": "static-cyclic_scheduling"}, {"score": 0.0040779081518317415, "phrase": "certification_standards"}, {"score": 0.004043298628655316, "phrase": "mixed-criticality_tasks"}, {"score": 0.003557924423642353, "phrase": "separate_partitions"}, {"score": 0.0033517342967390065, "phrase": "different_sils"}, {"score": 0.00317095235382607, "phrase": "highest_sil"}, {"score": 0.0030776686414001964, "phrase": "increased_development_costs"}, {"score": 0.0029871209444889716, "phrase": "sil._tasks"}, {"score": 0.0029617414861784525, "phrase": "higher_sils"}, {"score": 0.0028992294924613327, "phrase": "redundant_structures"}, {"score": 0.0028745946327439656, "phrase": "lower_sil_tasks"}, {"score": 0.002561752783323717, "phrase": "redundant_lower_sil_tasks"}, {"score": 0.002444254652283002, "phrase": "partition_time_slots"}, {"score": 0.0022926465161639633, "phrase": "development_costs"}, {"score": 0.002215663255682209, "phrase": "tabu_search-based_approach"}, {"score": 0.002178144355363467, "phrase": "optimization_problem"}, {"score": 0.0021504218042734677, "phrase": "proposed_algorithm"}], "paper_keywords": ["Embedded systems", " Real-time systems", " Mixed-criticality", " Metaheuristic", " IMA", " Design optimization"], "paper_abstract": "In this article, we are interested in implementing mixed-criticality real-time embedded applications on a given heterogeneous distributed architecture. Applications have different criticality levels, captured by their Safety-Integrity Level (SIL), and are scheduled using static-cyclic scheduling. According to certification standards, mixed-criticality tasks can be integrated onto the same architecture only if there is enough spatial and temporal separation among them. We consider that the separation is provided by partitioning, such that applications run in separate partitions, and each partition is allocated several time slots on a processor. Tasks of different SILs can share a partition only if they are all elevated to the highest SIL among them. Such elevation leads to increased development costs, which increase dramatically with each SIL. Tasks of higher SILs can be decomposed into redundant structures of lower SIL tasks. We are interested to determine (i) the mapping of tasks to processors, (ii) the assignment of tasks to partitions, (iii) the decomposition of tasks into redundant lower SIL tasks, (iv) the sequence and size of the partition time slots on each processor, and (v) the schedule tables, such that all the applications are schedulable and the development costs are minimized. We have proposed a Tabu Search-based approach to solve this optimization problem. The proposed algorithm has been evaluated using several synthetic and real-life benchmarks.", "paper_title": "Design Optimization of Mixed-Criticality Real-Time Embedded Systems", "paper_id": "WOS:000355679800012"}