{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "peer-based_volunteer_computing_systems"}, {"score": 0.03992659287798476, "phrase": "distributed_parallel_queues"}, {"score": 0.037074354377624366, "phrase": "proposed_resource_discovery_algorithm"}, {"score": 0.035620716932052585, "phrase": "first_phase"}, {"score": 0.004674952036988355, "phrase": "main_challenges"}, {"score": 0.00443308765153716, "phrase": "efficient_resource_discovery_algorithm"}, {"score": 0.004228577663320847, "phrase": "resource_discovery_algorithm"}, {"score": 0.004081385289516914, "phrase": "overall_response_time"}, {"score": 0.00387011040370557, "phrase": "analytical_model"}, {"score": 0.0037133478610481994, "phrase": "average_response_time"}, {"score": 0.003584025547693836, "phrase": "distributed_manner"}, {"score": 0.0032414759269196493, "phrase": "load-balanced_manner"}, {"score": 0.0031845067058084613, "phrase": "qos_constraints"}, {"score": 0.003073545175760353, "phrase": "second_phase"}, {"score": 0.0030195184114140063, "phrase": "proximity-aware_feature"}, {"score": 0.0028800314406625996, "phrase": "minimum_communication_overhead"}, {"score": 0.002846175473457555, "phrase": "selected_peers"}, {"score": 0.0026827569390113822, "phrase": "load_balancing"}, {"score": 0.0026355812883224203, "phrase": "stochastic_analysis"}, {"score": 0.0024842242921857705, "phrase": "probabilistic_and_deterministic_sequences"}, {"score": 0.0023976048394496446, "phrase": "capable_peers"}, {"score": 0.0023277282036119106, "phrase": "simulation_results"}, {"score": 0.002233301265743633, "phrase": "response_time"}, {"score": 0.0022070310530794097, "phrase": "user's_requests"}, {"score": 0.0021049977753042253, "phrase": "moderate_load"}], "paper_keywords": ["Peer-to-peer computing", " Volunteer computing", " Resource discovery", " Load balancing", " Distributed parallel queue", " Proximity-aware scheduling"], "paper_abstract": "One of the main challenges in peer-to-peer-based volunteer computing systems is an efficient resource discovery algorithm. Load balancing is a part of resource discovery algorithm and aims to minimize the overall response time of the system. This paper introduces an analytical model based on distributed parallel queues to optimize the average response time of the system in a distributed manner. The proposed resource discovery algorithm consists of two phases. In the first phase, it selects peers in a load-balanced manner based on QoS constraints of request. In the second phase, a proximity-aware feature is applied to select the peer with minimum communication overhead among selected peers in the first phase. Two dispatching strategies are proposed for the load balancing based on stochastic analysis of routing in the distributed parallel queues. These policies adopt probabilistic and deterministic sequences to redirect requests to the capable peers in the system. Simulation results show that the proposed resource discovery algorithm improves the response time of user's requests by a factor of 1.8 under a moderate load.", "paper_title": "A proximity-aware load balancing in peer-to-peer-based volunteer computing systems", "paper_id": "WOS:000321290800021"}