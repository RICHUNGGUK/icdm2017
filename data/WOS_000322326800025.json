{"auto_keywords": [{"score": 0.03050048474548113, "phrase": "new_clusters"}, {"score": 0.00481495049065317, "phrase": "intercluster_routing"}, {"score": 0.004678384952779725, "phrase": "distributed_systems"}, {"score": 0.004416713079266374, "phrase": "distributed_and_networking_research_community"}, {"score": 0.003985166330358716, "phrase": "connected_subsystems"}, {"score": 0.0037776319581225046, "phrase": "parameter_k"}, {"score": 0.0035369291417564606, "phrase": "k._we"}, {"score": 0.0034364867143322274, "phrase": "binary_hierarchy"}, {"score": 0.0034083145672246067, "phrase": "nested_disjoint_clusters"}, {"score": 0.0031649018957020337, "phrase": "maximal_size"}, {"score": 0.0027176309244222, "phrase": "token_browsing_scheme"}, {"score": 0.002673223453963085, "phrase": "random_walk"}, {"score": 0.002607965563121546, "phrase": "local_load_balancing"}, {"score": 0.0025027144548626975, "phrase": "spanning_tree"}, {"score": 0.002276439636865258, "phrase": "naming_process"}], "paper_keywords": ["Distributed clustering", " Bounded-size clustering", " Distributed algorithms", " Random walks"], "paper_abstract": "Very large scale networks have become common in distributed systems. To efficiently manage these networks, various techniques are being developed in the distributed and networking research community. In this paper, we focus on one of those techniques, network clustering, i.e., the partitioning of a system into connected subsystems. The clustering we compute is size-oriented: given a parameter K of the algorithm, we compute, as far as possible, clusters of size K. We present an algorithm to compute a binary hierarchy of nested disjoint clusters. A token browses the network and recruits nodes to its cluster. When a cluster reaches a maximal size defined by a parameter of the algorithm, it is divided when possible, and tokens are created in both of the new clusters. The new clusters are then built and divided in the same fashion. The token browsing scheme chosen is a random walk, in order to ensure local load balancing. To allow the division of clusters, a spanning tree is built for each cluster. At each division, information on how to route messages between the clusters is stored. The naming process used for the clusters, along with the information stored during each division, allows routing between any two clusters.", "paper_title": "Nested clusters with intercluster routing", "paper_id": "WOS:000322326800025"}