{"auto_keywords": [{"score": 0.04443809788762847, "phrase": "reaction-diffusion_models"}, {"score": 0.00481495049065317, "phrase": "reaction-diffusion_model_monte_carlo_simulations"}, {"score": 0.004729896475777009, "phrase": "gpu."}, {"score": 0.004618720776729413, "phrase": "efficient_algorithm"}, {"score": 0.0045370785151713396, "phrase": "graphics_processing_units"}, {"score": 0.004378078970574258, "phrase": "monte_carlo_simulations"}, {"score": 0.003910278811774747, "phrase": "seemingly_simplistic_set"}, {"score": 0.003795677450778112, "phrase": "one-dimensional_lattice"}, {"score": 0.003450966222451678, "phrase": "non-equilibrium_phase_transitions"}, {"score": 0.003290494847464381, "phrase": "fast_algorithm"}, {"score": 0.003009390313137981, "phrase": "gpu_programming"}, {"score": 0.002903771635043968, "phrase": "multispin_coding"}, {"score": 0.002801849371896573, "phrase": "fastest_algorithms"}, {"score": 0.0025776913268808124, "phrase": "pair_contact_process"}, {"score": 0.002428617044669043, "phrase": "simple_algorithm"}, {"score": 0.0022476051902301187, "phrase": "gpu_algorithm"}, {"score": 0.002142970278347126, "phrase": "optimized_version"}], "paper_keywords": ["GPU", " PCPD", " Monte Carlo simulations", " Reaction-diffusion models"], "paper_abstract": "We created an efficient algorithm suitable for graphics processing units (GPUs) to perform Monte Carlo simulations on a subset of reaction-diffusion models. The set of reaction-diffusion models that the algorithm is applied to represents a seemingly simplistic set of problems on a one-dimensional lattice, where each site contains either a particle or is empty. However, these systems exhibit non-equilibrium phase transitions, with very large finite-time corrections, which mandates a fast algorithm to simulate them. The algorithm presented here uses techniques that are specific to GPU programming, and combines these with multispin coding to create one of the fastest algorithms for reaction-diffusion models. As an example, the algorithm is applied to the pair contact process with diffusion (PCPD). Compared to a simple algorithm on the CPU, our GPU algorithm is approximately 4000 times faster. The GPU algorithm is roughly 55 times faster than an optimized version for the CPU. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Reaction-diffusion model Monte Carlo simulations on the GPU", "paper_id": "WOS:000317186100006"}