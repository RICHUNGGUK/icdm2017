{"auto_keywords": [{"score": 0.029918210649248395, "phrase": "cassandra"}, {"score": 0.00481495049065317, "phrase": "peer-to-peer_networks"}, {"score": 0.004305203085016233, "phrase": "high_throughput_computing_system"}, {"score": 0.0035620354052144656, "phrase": "expected_characteristics"}, {"score": 0.003471135453226184, "phrase": "htc_system"}, {"score": 0.003267925215811654, "phrase": "permanent_connection"}, {"score": 0.0031032109441552287, "phrase": "scheduling_policies"}, {"score": 0.0030239842475439814, "phrase": "running_jobs"}, {"score": 0.002566997205079849, "phrase": "basic_aspects"}, {"score": 0.0025014259919355453, "phrase": "system_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Peer-to-peer networks", " High throughput computing", " Distributed hash tables"], "paper_abstract": "In this work, we present a proposal to build a high throughput computing system totally based upon the Peer-to-Peer (P2P) paradigm. We discuss the general characteristics of P2P systems, with focus on P2P storage, and the expected characteristics of the HTC system: totally decentralized, not requiring permanent connection, and able to implement scheduling policies such as running jobs in a (non-strict) FCFS order. We have selected Cassandra as the supporting P2P storage system for our purposes. We discuss the basic aspects of the system implementation, and carry out some experiments designed to verify that it works as expected. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "High throughput computing over peer-to-peer networks", "paper_id": "WOS:000311771700031"}