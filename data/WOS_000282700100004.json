{"auto_keywords": [{"score": 0.032861788473988254, "phrase": "epsilon-approximate_distance_queries"}, {"score": 0.00481495049065317, "phrase": "approximate_shortest_path_queries"}, {"score": 0.004776484866276242, "phrase": "weighted_polyhedral_surfaces"}, {"score": 0.004681653551412616, "phrase": "well-known_geometric_problem"}, {"score": 0.0044795698035664695, "phrase": "polyhedral_surface_p"}, {"score": 0.00437302709192313, "phrase": "triangular_faces"}, {"score": 0.004338076511024884, "phrase": "positive_weights"}, {"score": 0.004052007312730483, "phrase": "weighted_sum"}, {"score": 0.00401961206251868, "phrase": "euclidean_lengths"}, {"score": 0.0037847308929559163, "phrase": "approximate_distances"}, {"score": 0.003739421738326676, "phrase": "shortest_paths"}, {"score": 0.0037095162593960727, "phrase": "p._our"}, {"score": 0.003592258384936271, "phrase": "approximation_parameter_epsilon"}, {"score": 0.0034232607917050392, "phrase": "query_time_parameter_q"}, {"score": 0.003301733505307784, "phrase": "data_structure"}, {"score": 0.003010347277067459, "phrase": "building_block"}, {"score": 0.0028342734482926677, "phrase": "single-source_query_data_structure"}, {"score": 0.002625914195439153, "phrase": "query_point"}, {"score": 0.0025840347813610815, "phrase": "logarithmic_time"}, {"score": 0.00254282157860369, "phrase": "shortest_path_queries"}, {"score": 0.0025224615049571427, "phrase": "weighted_surfaces"}, {"score": 0.002472269923319476, "phrase": "important_extension"}, {"score": 0.002384422461262006, "phrase": "extensively_studied_euclidean_distance_case"}, {"score": 0.002308953751676031, "phrase": "previously_known_query_algorithms"}, {"score": 0.002191366809047192, "phrase": "novel_graph_separator_algorithm"}, {"score": 0.0021049977753042253, "phrase": "previously_known_separator_algorithms"}], "paper_keywords": ["Shortest path", " Query algorithm", " Separator", " Weighted polyhedral surface"], "paper_abstract": "We consider the well-known geometric problem of determining shortest paths between pairs of points on a polyhedral surface P, where P consists of triangular faces with positive weights assigned to them. The cost of a path in P is defined to be the weighted sum of Euclidean lengths of the sub-paths within each face of P. We present query algorithms that compute approximate distances and/or approximate shortest paths on P. Our all-pairs query algorithms take as input an approximation parameter epsilon is an element of (0, 1) and a query time parameter q, in a certain range, and build a data structure APQ( P, epsilon; q), which is then used for answering epsilon-approximate distance queries in O(q) time. As a building block of the APQ( P, epsilon; q) data structure, we develop a single-source query data structure SSQ( a; P, epsilon) that can answer epsilon-approximate distance queries from a fixed point a to any query point on P in logarithmic time. Our algorithms answer shortest path queries in weighted surfaces, which is an important extension, both theoretically and practically, to the extensively studied Euclidean distance case. In addition, our algorithms improve upon previously known query algorithms for shortest paths on surfaces. The algorithms are based on a novel graph separator algorithm introduced and analyzed here, which extends and generalizes previously known separator algorithms.", "paper_title": "Algorithms for Approximate Shortest Path Queries on Weighted Polyhedral Surfaces", "paper_id": "WOS:000282700100004"}