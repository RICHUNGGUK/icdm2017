{"auto_keywords": [{"score": 0.03868136961145479, "phrase": "composition_phase"}, {"score": 0.00481495049065317, "phrase": "automated_composition"}, {"score": 0.004768104290288521, "phrase": "semantic_web_services"}, {"score": 0.0046986841646790315, "phrase": "event_calculus"}, {"score": 0.004540591176992658, "phrase": "web_service_composition"}, {"score": 0.004496402246090618, "phrase": "execution_framework"}, {"score": 0.004409304640026443, "phrase": "semantically_-annotated_web_services"}, {"score": 0.004345085569121329, "phrase": "monolithic_approach"}, {"score": 0.004302791070310513, "phrase": "automated_web_service_composition"}, {"score": 0.003920891569777894, "phrase": "ai_planning_method"}, {"score": 0.003863758357292741, "phrase": "logical_formalism"}, {"score": 0.0038074544783102226, "phrase": "abductive_event"}, {"score": 0.0034524248924699985, "phrase": "temporal_orderings"}, {"score": 0.0034187896011435245, "phrase": "abductive_planning_techniques"}, {"score": 0.003319830633865628, "phrase": "functional_properties"}, {"score": 0.003054681986032532, "phrase": "non-functional_properties"}, {"score": 0.0028244513779243107, "phrase": "owl-s_semantic_web_services"}, {"score": 0.0027561164046279413, "phrase": "event_calculus_axioms"}, {"score": 0.0027159094186967247, "phrase": "resulting_plans"}, {"score": 0.002663208600887875, "phrase": "abductive_event_calculus_planner"}, {"score": 0.0024383967028975616, "phrase": "defined_quality"}, {"score": 0.002414616656410503, "phrase": "service_parameters"}, {"score": 0.002379379676378223, "phrase": "atomic_services"}, {"score": 0.002299142268368128, "phrase": "optimal_solution"}, {"score": 0.002265586601922693, "phrase": "selected_graph"}, {"score": 0.0022107428653358715, "phrase": "owl-s_file"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Automatic web service composition", " Semantic web services", " Event Calculus", " Execution of composite web services", " OWL-S"], "paper_abstract": "In this paper, a web service composition and execution framework is presented for semantically -annotated web services. A monolithic approach to automated web service composition and execution problem is chosen, which provides some benefits by separating composition and execution phases. An AI planning method using a logical formalism, namely Abductive Event Calculus, is chosen for the composition phase. This formalism allows one to generate a narrative of actions and temporal orderings using abductive planning techniques given a goal. The functional properties of services, namely input/output/precondition/effects (IOPE) are taken into consideration in the composition phase and non-functional properties, namely Quality of Service (QoS) parameters are used in selecting the most appropriate solution to be executed. The repository of OWL-S semantic web services are translated to the Event Calculus axioms and the resulting plans found by the Abductive Event Calculus Planner are converted to graphs. These graphs can be sorted according to a score calculated using the defined quality of service parameters of the atomic services in the composition to determine the optimal solution. The selected graph is converted to an OWL-S file which is executed consequently. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "A monolithic approach to automated composition of semantic web services with the Event Calculus", "paper_id": "WOS:000278881300009"}