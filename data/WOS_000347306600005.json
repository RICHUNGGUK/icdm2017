{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ubiquitous_analytics"}, {"score": 0.0485718029388882, "phrase": "munin"}, {"score": 0.004763895422211728, "phrase": "visualization_spaces"}, {"score": 0.004492573860101133, "phrase": "ubiquitous_analytics_environments"}, {"score": 0.004421284843189731, "phrase": "multiple_input"}, {"score": 0.004374385639298755, "phrase": "output_surfaces"}, {"score": 0.0042820680211904235, "phrase": "tabletop_displays"}, {"score": 0.004236639288852276, "phrase": "wall-mounted_displays"}, {"score": 0.004169394481182493, "phrase": "mobile_devices"}, {"score": 0.004059673618719782, "phrase": "service-based_model"}, {"score": 0.003727527379253624, "phrase": "peer-to-peer_model"}, {"score": 0.0036100762867678415, "phrase": "ip_multicast"}, {"score": 0.0035338315037521627, "phrase": "shared_state"}, {"score": 0.003443514819742734, "phrase": "input"}, {"score": 0.00335016692413066, "phrase": "shared_event_channel"}, {"score": 0.0032969458013463807, "phrase": "input_and_output_devices"}, {"score": 0.0031422859551159506, "phrase": "data-driven_scene_graph"}, {"score": 0.0028543298631502107, "phrase": "munin's_general_design"}, {"score": 0.0025514745448798363, "phrase": "case_study"}, {"score": 0.002497531381123025, "phrase": "munin_assembly"}, {"score": 0.002470987929071079, "phrase": "multidimensional_visualization"}, {"score": 0.0021390191069313945, "phrase": "event_handling"}, {"score": 0.0021049977753042253, "phrase": "design_and_execution_of_high_performance_distributed_visualizations"}], "paper_keywords": ["Ubiquitous analytics", " high-resolution displays", " multi-display environments", " distributed visualization", " framework"], "paper_abstract": "We present Munin, a software framework for building ubiquitous analytics environments consisting of multiple input and output surfaces, such as tabletop displays, wall-mounted displays, and mobile devices. Munin utilizes a service-based model where each device provides one or more dynamically loaded services for input, display, or computation. Using a peer-to-peer model for communication, it leverages IP multicast to replicate the shared state among the peers. Input is handled through a shared event channel that lets input and output devices be fully decoupled. It also provides a data-driven scene graph to delegate rendering to peers, thus creating a robust, fault-tolerant, decentralized system. In this paper, we describe Munin's general design and architecture, provide several examples of how we are using the framework for ubiquitous analytics and visualization, and present a case study on building a Munin assembly for multidimensional visualization. We also present performance results and anecdotal user feedback for the framework that suggests that combining a service-oriented, data-driven model with middleware support for data sharing and event handling eases the design and execution of high performance distributed visualizations.", "paper_title": "Munin: A Peer-to-Peer Middleware for Ubiquitous Analytics and Visualization Spaces", "paper_id": "WOS:000347306600005"}