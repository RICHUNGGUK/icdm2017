{"auto_keywords": [{"score": 0.0309632740533183, "phrase": "ppp"}, {"score": 0.00481495049065317, "phrase": "piggybacked_push_protocol"}, {"score": 0.00465964893087681, "phrase": "cache_sharing"}, {"score": 0.004539005582217309, "phrase": "popular_technique"}, {"score": 0.00433531459712787, "phrase": "mobile_network_environments"}, {"score": 0.0040334640350288, "phrase": "efficient_sharing"}, {"score": 0.003980875186335867, "phrase": "cache_contents"}, {"score": 0.003928969293303814, "phrase": "neighboring_nodes"}, {"score": 0.003852371777780562, "phrase": "excessive_amount"}, {"score": 0.003802135020791801, "phrase": "communication_overhead"}, {"score": 0.003584025547693836, "phrase": "cache-sharing_protocol"}, {"score": 0.003445591238183763, "phrase": "piggybacked_push"}, {"score": 0.003269266730193333, "phrase": "data_request_broadcasts"}, {"score": 0.002962543869356265, "phrase": "push-and_pull-based_approaches"}, {"score": 0.0025807396931129926, "phrase": "good_performance"}, {"score": 0.002547043222086858, "phrase": "diverse_operating_environments"}, {"score": 0.0024485643104830814, "phrase": "lower_communication_overhead"}, {"score": 0.0024007585788965655, "phrase": "previous_methods"}, {"score": 0.0022628564592874147, "phrase": "different_data_access_patterns"}, {"score": 0.0021753413850499467, "phrase": "better_scalability"}, {"score": 0.0021049977753042253, "phrase": "proposed_protocol"}], "paper_keywords": ["cache sharing", " data access", " data pull", " index push", " MANET"], "paper_abstract": "Cache sharing has been a popular technique used to facilitate data access in mobile network environments. The key to this technique is to allow an efficient sharing of cache contents between neighboring nodes without introducing excessive amount of communication overhead. In this paper, we propose a cache-sharing protocol, called 'Pull with Piggybacked Push (PPP)', which exploits data request broadcasts by performing data pull and index push operations together. Taking advantage of both push-and pull-based approaches, PPP gains benefits from both ends: performance and communication overhead. PPP is unique in that it yields good performance over diverse operating environments, while accomplishing it with lower communication overhead than the previous methods. In addition, it adapts well to different data access patterns. As a result, better scalability is achieved by the proposed protocol.", "paper_title": "Hybrid Pull-Based with Piggybacked Push Protocol for Cache Sharing", "paper_id": "WOS:000298386300008"}