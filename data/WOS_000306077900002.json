{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "salesman_problem"}, {"score": 0.004743806810821005, "phrase": "multiple_stacks"}, {"score": 0.004536592536813498, "phrase": "single_vehicle_pickup"}, {"score": 0.0044695432851061525, "phrase": "delivery_problem"}, {"score": 0.004403480614319231, "phrase": "loading_constraints"}, {"score": 0.0034954725617970294, "phrase": "last-in-first-out_constraint"}, {"score": 0.0031257046538823354, "phrase": "unloaded_item"}, {"score": 0.0029228387900175554, "phrase": "large_neighborhood_search"}, {"score": 0.0027535633837592597, "phrase": "computational_results"}, {"score": 0.0026726283357752585, "phrase": "different_types"}, {"score": 0.0026330549554033876, "phrase": "randomly_generated_instances"}, {"score": 0.002499094513009327, "phrase": "benchmark_instances"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["Vehicle routing", " pickup", " delivery", " loading", " multiple stacks", " large neighborhood search"], "paper_abstract": "This article studies a single vehicle pickup and delivery problem with loading constraints. In this problem, the vehicle contains a number of (horizontal) stacks of finite capacity for loading items from the rear of the vehicle. Each stack must satisfy a last-in-first-out constraint where any new item must be loaded on top of a stack and any unloaded item must be on top of its stack. A large neighborhood search is proposed for solving this problem. Computational results are reported on different types of randomly generated instances. Results are also reported on benchmark instances for two special cases of our problem and a comparison is provided with state-of-the-art methods. (c) 2012 Wiley Periodicals, Inc. NETWORKS, 2012", "paper_title": "Large neighborhood search for the pickup and delivery traveling salesman problem with multiple stacks", "paper_id": "WOS:000306077900002"}