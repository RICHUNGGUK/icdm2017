{"auto_keywords": [{"score": 0.0500784160271924, "phrase": "point-shaped_obstacles"}, {"score": 0.004690127385148497, "phrase": "efficient_algorithms"}, {"score": 0.00459039896577789, "phrase": "n_points"}, {"score": 0.004525088883501587, "phrase": "random_obstacle"}, {"score": 0.004252602474733162, "phrase": "new_labeling"}, {"score": 0.003300813776412652, "phrase": "random_locations"}, {"score": 0.003021272984126523, "phrase": "similar_label"}, {"score": 0.0028527002687205347, "phrase": "first_setting"}, {"score": 0.0026298214688533386, "phrase": "updated_labeling"}, {"score": 0.0025923329357122296, "phrase": "obstacle_position"}, {"score": 0.002512926336312949, "phrase": "minimum_number"}, {"score": 0.0024711787041199057, "phrase": "second_and_third_problems"}, {"score": 0.0022617389804167943, "phrase": "k_label"}, {"score": 0.00220823903315848, "phrase": "new_obstacle"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["computational geometry", " map labeling", " label updating"], "paper_abstract": "In this paper, we present efficient algorithms for updating the labeling of a set of n points after the presence of a random obstacle that appears on the map repeatedly. We update the labeling so that the given obstacle does not appear in any of the labels, the new labeling is valid, and the labels are as large as possible (called the optimal labeling). Each point is assumed to have an axis-parallel, square-shaped label of unit size, attached exclusively to that point in the middle of one of its edges. We consider two models: (1) the 2PM model, where each label is attached to its feature only on the middle of one of its horizontal edges, and (2) the r4PM model, where each label is attached to its feature on the middle of either one of its horizontal or vertical edges (known in advance). We assume that a sequence of point-shaped obstacles appear on the map on random locations. Three settings are considered for the behavior of the obstacle: (1) the obstacle is removed afterwards, (2) it remains on the map, and (3) it receives a similar label and remains on the map. Only two operations are permitted on the labels: flipping one or more labels, and/or resizing all labels. In the first setting, we suggest a data structure of O(n) space and O(n lg n) time in the 2PM model, and of O(n(2)) time in the r4PM model, so that the updated labeling can be constructed for any obstacle position in O(lg n + k) time, where k is the minimum number of operations needed. For the second and third problems, we suggest an O(n) space and O(n lg n) time data structure that can place each obstacle (possibly with a label) on the map in O(lg n + k) time, if k label flips are sufficient to make room to place the new obstacle. Otherwise, two O(n) time algorithms are suggested when a relabeling of all points is required. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Label updating to avoid point-shaped obstacles in fixed model", "paper_id": "WOS:000242765000012"}