{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "data_locality"}, {"score": 0.0044237033788643715, "phrase": "locality_optimizations"}, {"score": 0.003503497128638099, "phrase": "runtime_reuse_paths"}, {"score": 0.0032184697893776052, "phrase": "root_causes"}, {"score": 0.0030847461428168614, "phrase": "poor_data_locality"}, {"score": 0.0023408288327263316, "phrase": "slo_analyzer"}, {"score": 0.002196342933346204, "phrase": "average_execution_speed"}], "paper_keywords": [""], "paper_abstract": "Suggestions for locality optimizations (SLO), a cache profiling tool, analyzes runtime reuse paths to find the root causes of poor data locality, and suggests the most promising code optimizations. Refactoring using the hints of the SLO analyzer doubles the average execution speed of several SPEC2000 benchmark programs.", "paper_title": "Refactoring for Data Locality", "paper_id": "WOS:000263113600017"}