{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multiprocessor_soc_design"}, {"score": 0.004539005582217309, "phrase": "complex_platforms"}, {"score": 0.004466519142879166, "phrase": "single_chip"}, {"score": 0.004165497627464024, "phrase": "modern_socs"}, {"score": 0.003990385737207714, "phrase": "sophisticated_interconnect"}, {"score": 0.0039055990919333082, "phrase": "specific_hardware_subsystems"}, {"score": 0.003802135020791801, "phrase": "software_systems"}, {"score": 0.0037615180375561805, "phrase": "new_methodologies"}, {"score": 0.0036422425344358037, "phrase": "old_tools"}, {"score": 0.003584025547693836, "phrase": "design_tools"}, {"score": 0.0027991418754844347, "phrase": "high_level"}, {"score": 0.002724909017963099, "phrase": "major_impact"}, {"score": 0.002681315076008658, "phrase": "global_design_flow"}, {"score": 0.0025822818714499795, "phrase": "different_trade-offs"}, {"score": 0.0025273383208209922, "phrase": "lower_level_refinements"}, {"score": 0.002473560912156024, "phrase": "good_potential"}, {"score": 0.0023189818169615135, "phrase": "static_scheduling_framework"}, {"score": 0.0022941723937662927, "phrase": "mpsoc_design"}, {"score": 0.002127765807039172, "phrase": "different_scheduling_techniques"}], "paper_keywords": [""], "paper_abstract": "The evolution of technologies is enabling the integration of complex platforms in a single chip, called a System-on-Chip (SoC). Modern SoCs may include several CPU subsystems to execute software and sophisticated interconnect in addition to specific hardware subsystems. Designing such mixed hardware and software systems requires new methodologies and tools or to enhance old tools. These design tools must be able to satisfy many relative trade-offs (real-time, performance, low power consumption, time to market, re-usability, cost, area, etc). It is recognized that the decisions taken for scheduling and mapping at a high level of abstraction have a major impact on the global design flow. They can help in satisfying different trade-offs before proceeding to lower level refinements. To provide good potential to scheduling and mapping decisions we propose in this paper a static scheduling framework for MpSoC design. We will show why it is necessary to and how to integrate different scheduling techniques in such a framework in order to compare and to combine them. This framework is integrated in a model driven approach in order to keep it open and extensible.", "paper_title": "Model driven scheduling framework for multiprocessor SoC design", "paper_id": "WOS:000238107100107"}