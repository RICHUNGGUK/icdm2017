{"auto_keywords": [{"score": 0.0363505910819361, "phrase": "cooperative_incoming_traffic_engineering"}, {"score": 0.009852973155356713, "phrase": "incoming_traffic_engineering_performance"}, {"score": 0.00481495049065317, "phrase": "multi-as"}, {"score": 0.004667541072056214, "phrase": "transit-edge_separate_internet"}, {"score": 0.004544770921520536, "phrase": "independent_autonomous_systems"}, {"score": 0.004308791766002289, "phrase": "current_inter-domain_routing_system"}, {"score": 0.004195418010131832, "phrase": "incoming_traffic"}, {"score": 0.00408501512749186, "phrase": "outgoing_traffic"}, {"score": 0.003804550737731054, "phrase": "leading_new_routing_architecture_proposals"}, {"score": 0.003737485125097945, "phrase": "transit_edge_separation_protocols"}, {"score": 0.0036715973701254823, "phrase": "scalability_challenges"}, {"score": 0.0035432778646686557, "phrase": "lisp"}, {"score": 0.003404244237372396, "phrase": "selfish_multi-as_context"}, {"score": 0.0032706520949775065, "phrase": "conflicted_egress_tunnel_routers"}, {"score": 0.0031845067058084583, "phrase": "edge_ases"}, {"score": 0.0027865506182608263, "phrase": "limited_delay_performance"}, {"score": 0.002629889135655667, "phrase": "delay_variations"}, {"score": 0.00260657976055413, "phrase": "different_rlocs"}, {"score": 0.002560581004528979, "phrase": "planetlab"}, {"score": 0.0024490834773668153, "phrase": "etr_selections"}, {"score": 0.002427372728532664, "phrase": "delay_performance"}, {"score": 0.0023113506171584157, "phrase": "proposed_method"}, {"score": 0.002290858045013009, "phrase": "pareto_optimality"}, {"score": 0.0021910853643264134, "phrase": "ases"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Incoming traffic engineering", " Edge ASes", " Cooperative game", " LISP"], "paper_abstract": "Internet is composed of independent autonomous systems (ASes) which are selfish by nature. In the current inter-domain routing system, for an AS, incoming traffic is harder to control than outgoing traffic because its incoming traffic routing is ultimately determined by other ASes. This problem stays the same in the leading new routing architecture proposals (such as transit edge separation protocols) when addressing scalability challenges. In this paper, we use LISP as an example to study cooperative incoming traffic engineering in a selfish multi-AS context in such proposals. First, we analyze conflicted egress tunnel routers (ETRs) selections of edge ASes, which choose ETRs that are best for their individual delay performance, but neglect incoming traffic engineering performance of other edge ASes. Then, we propose the cooperative incoming traffic engineering, where edge ASes sacrifice limited delay performance for optimizing incoming traffic engineering performance between each other. Furthermore, we measure the delay variations between different RLOCs with experiments on PlanetLab to verify the rationality of considering the impact of ETR selections on delay performance. Finally we evaluate the performance of cooperative incoming traffic engineering. The proposed method achieves Pareto optimality and can greatly improve the robustness and resiliency of ASes based on simulations. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Multi-AS cooperative incoming traffic engineering in a transit-edge separate internet", "paper_id": "WOS:000343841800009"}