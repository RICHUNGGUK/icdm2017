{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "prolog"}, {"score": 0.004454691230204595, "phrase": "determinacy_inference"}, {"score": 0.0038499929374478125, "phrase": "new_semantics"}, {"score": 0.003392507399258166, "phrase": "backward_analysis"}, {"score": 0.002659527314613792, "phrase": "existing_techniques"}, {"score": 0.0025331002386232014, "phrase": "latter's_handling"}, {"score": 0.002436289099444074, "phrase": "formal_arguments"}, {"score": 0.0023431692392929353, "phrase": "experimental_work"}, {"score": 0.0021049977753042253, "phrase": "method's_generality"}], "paper_keywords": ["abstract interpretation", " backwards analysis", " Boolean formulae", " constraints", " cut", " determinacy inference", " Prolog"], "paper_abstract": "This paper revisits the problem of determinacy inference addressing the problem of how to uniformly handle cut. To this end a new semantics is introduced for cut, which is abstracted to systematically derive a backward analysis that derives conditions sufficient for a goal to succeed at most once. The method is conceptionally simpler and easier to implement than the existing techniques, while improving the latter's handling of cut. Formal arguments substantiate correctness and experimental work, and a tool called 'RedAlert' demonstrates the method's generality and applicability.", "paper_title": "RedAlert: Determinacy inference for Prolog", "paper_id": "WOS:000292701100008"}