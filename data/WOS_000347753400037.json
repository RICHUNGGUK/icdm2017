{"auto_keywords": [{"score": 0.038914305609447065, "phrase": "real_values"}, {"score": 0.03855696617345378, "phrase": "binary_codes"}, {"score": 0.03482869509872458, "phrase": "dbq"}, {"score": 0.00481495049065317, "phrase": "hashing_methods"}, {"score": 0.0047013405841819025, "phrase": "similarity-preserving_approximate_nearest_search_problem"}, {"score": 0.004503525064934708, "phrase": "content-based_image_retrieval"}, {"score": 0.004232331639807526, "phrase": "effective_hash_codes"}, {"score": 0.00409310463335204, "phrase": "large-scale_database"}, {"score": 0.003996458454723708, "phrase": "np-hard_problem"}, {"score": 0.003902085339580381, "phrase": "fatal_problem"}, {"score": 0.003828187766572941, "phrase": "existing_hashing_methods"}, {"score": 0.003632080001489739, "phrase": "single-bit_quantization"}, {"score": 0.003529364798514874, "phrase": "highest_point_density"}, {"score": 0.003429544382524185, "phrase": "data_structure"}, {"score": 0.003332537728389913, "phrase": "double-bit_quantization"}, {"score": 0.003161740194257218, "phrase": "sbq"}, {"score": 0.0029569247903654477, "phrase": "impressive_results"}, {"score": 0.0027129118211250336, "phrase": "different_data_dimensions"}, {"score": 0.002598543802992702, "phrase": "multi-bit_quantization_method"}, {"score": 0.002500927169609655, "phrase": "projected_dimension"}, {"score": 0.0024771000236931836, "phrase": "variable_bit_numbers"}, {"score": 0.002406968743305622, "phrase": "existing_methods"}, {"score": 0.002316532084420729, "phrase": "incomplete_coding_manner"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Image retrieval", " Multi-bit quantization", " Bit allocation", " Incomplete coding", " K-means clustering"], "paper_abstract": "Recently, hashing methods which try to solve similarity-preserving approximate nearest search problem have obtained widely applications in various fields such as content-based image retrieval, object recognition and pose estimation. However, how to learn effective hash codes to describe the similarities in the large-scale database still remains as a NP-hard problem. Besides, a fatal problem lying in the existing hashing methods is that they usually threshold the real values to binary codes using single-bit quantization (SBQ) at the highest point density, which may destroy the data structure seriously. Due to this problem, double-bit quantization (DBQ) is proposed to solve the problem of SBQ by adaptively learning thresholds to quantize the real values to two bits, and achieves impressive results. However, one problem in DBQ is that it neglects the amount of the information contained in different data dimensions. In this paper, we propose a multi-bit quantization method based on bit allocation to quantize each projected dimension with variable bit numbers. Besides, different from existing methods of choosing threshold, we propose an incomplete coding manner by clustering to generate binary codes. Experiments on two large datasets demonstrate the feasibility of our method. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Adaptive multi-bit quantization for hashing", "paper_id": "WOS:000347753400037"}