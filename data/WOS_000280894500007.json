{"auto_keywords": [{"score": 0.04636785862116073, "phrase": "running_applications"}, {"score": 0.04257133096705247, "phrase": "hdc_systems"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_distributed_computing_systems"}, {"score": 0.004774324145784758, "phrase": "heterogeneous_computing_systems"}, {"score": 0.004714023408114857, "phrase": "computing_platforms"}, {"score": 0.0046544807197808095, "phrase": "single_parallel_architecture_based_systems"}, {"score": 0.004499334809770281, "phrase": "available_parallelism"}, {"score": 0.004186534737631288, "phrase": "lower_cost"}, {"score": 0.004151188559520802, "phrase": "single-machine_supersystems"}, {"score": 0.003578600071301459, "phrase": "reliable_scheduling_algorithm"}, {"score": 0.0033579708256295847, "phrase": "reliability_requirements"}, {"score": 0.0033295966773779174, "phrase": "inter-dependent_tasks"}, {"score": 0.003204841443605308, "phrase": "reliability-driven_scheduling_architecture"}, {"score": 0.0031375577552605533, "phrase": "system_reliability"}, {"score": 0.003071682293903262, "phrase": "optimal_reliability_communication_path_search_algorithm"}, {"score": 0.002994449398035894, "phrase": "reliability_priority_rank"}, {"score": 0.0029067881142952664, "phrase": "task's_priority"}, {"score": 0.002870006736445581, "phrase": "reliability_overheads"}, {"score": 0.0027978304423349246, "phrase": "directed_acyclic_graph"}, {"score": 0.0027159094186967247, "phrase": "reliability-aware_scheduling_algorithm"}, {"score": 0.0026140878612307536, "phrase": "high_quality"}, {"score": 0.0025375331660958665, "phrase": "comparison_studies"}, {"score": 0.0024842242921857705, "phrase": "randomly_generated_graphs"}, {"score": 0.002421726275597666, "phrase": "real_applications"}, {"score": 0.0023507916951658455, "phrase": "existing_scheduling_algorithms"}, {"score": 0.002281930100792185, "phrase": "length_ratio"}, {"score": 0.0021229583685841405, "phrase": "data_communication"}, {"score": 0.0021049977753042253, "phrase": "tasks_increases"}], "paper_keywords": ["Heterogeneous distributed systems", " Scheduling algorithm", " Reliability", " Duplication", " Precedence constrained tasks"], "paper_abstract": "Heterogeneous computing systems are promising computing platforms, since single parallel architecture based systems may not be sufficient to exploit the available parallelism with the running applications. In some cases, heterogeneous distributed computing (HDC) systems can achieve higher performance with lower cost than single-machine supersystems. However, in HDC systems, processors and networks are not failure free and any kind of failure may be critical to the running applications. One way of dealing with such failures is to employ a reliable scheduling algorithm. Unfortunately, most existing scheduling algorithms for precedence constrained tasks in HDC systems do not adequately consider reliability requirements of inter-dependent tasks. In this paper, we design a reliability-driven scheduling architecture that can effectively measure system reliability, based on an optimal reliability communication path search algorithm, and then we introduce reliability priority rank (RRank) to estimate the task's priority by considering reliability overheads. Furthermore, based on directed acyclic graph (DAG) we propose a reliability-aware scheduling algorithm for precedence constrained tasks, which can achieve high quality of reliability for applications. The comparison studies, based on both randomly generated graphs and the graphs of some real applications, show that our scheduling algorithm outperforms the existing scheduling algorithms in terms of makespan, scheduling length ratio, and reliability. At the same time, the improvement gained by our algorithm increases as the data communication among tasks increases. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Reliability-aware scheduling strategy for heterogeneous distributed computing systems", "paper_id": "WOS:000280894500007"}