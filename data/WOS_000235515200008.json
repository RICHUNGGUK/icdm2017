{"auto_keywords": [{"score": 0.04955228514169987, "phrase": "time-bound_hierarchical_key_assignment_scheme"}, {"score": 0.02800805728330308, "phrase": "akl-taylor's_scheme"}, {"score": 0.004539005582217309, "phrase": "practical_situation"}, {"score": 0.003802135020791801, "phrase": "communication_load"}, {"score": 0.003774164192882704, "phrase": "key_redistributions"}, {"score": 0.0035184576341236317, "phrase": "tzeng's_scheme"}, {"score": 0.0034160263294684785, "phrase": "collusion_attack"}, {"score": 0.003304339421246321, "phrase": "efficient_time-bound_scheme"}, {"score": 0.003126224853287378, "phrase": "primitive_keys"}, {"score": 0.0029796206196589115, "phrase": "source_coding"}, {"score": 0.002860938351029155, "phrase": "multiple_keys"}, {"score": 0.0028293966058473476, "phrase": "aggregate_key"}, {"score": 0.0027878797103973313, "phrase": "communication_and_storage_requirements"}, {"score": 0.0026570998719084153, "phrase": "alternative_implementation"}, {"score": 0.0025324393547676623, "phrase": "systematic_approach"}, {"score": 0.0022749744354271816, "phrase": "conventional_key_assignment_schemes"}, {"score": 0.0022005118194652704, "phrase": "better_performance"}, {"score": 0.0021049977753042253, "phrase": "new_secure_hierarchical_key_assignment_schemes"}], "paper_keywords": [""], "paper_abstract": "Conventional hierarchical key assignment schemes have not been concerned with a practical situation: Users might be assigned to a class for only a period of time. When a user leaves a class, the keys of that class and all the descendent classes must be renewed. For applications where the privileges of users change frequently or where there are many users, the communication load for key redistributions is very large. Recently, Tzeng [ 9] proposed a time-bound hierarchical key assignment scheme to address this issue. However, Tzeng's scheme was very complex and suffered from a collusion attack. In this paper, we propose an efficient time-bound scheme based on a technique called merging. The idea behind merging is to consider primitive keys instead of hierarchies. It is conceptually like the compression used in source coding. Through this technique, it is feasible to combine multiple keys into an aggregate key. Thus, communication and storage requirements are greatly reduced. This technique can also be used for an alternative implementation of Akl-Taylor's scheme. Moreover, it can be used to construct a systematic approach for adjusting hierarchies in Akl-Taylor's scheme as well. Through the insights gained from these exercises, we may see that some problems that are usually addressed by the conventional key assignment schemes can be solved directly via merging, with better performance. Furthermore, if other suitable merging functions are found in the future, new secure hierarchical key assignment schemes and time-bound schemes will be obtained accordingly.", "paper_title": "Merging: An efficient solution for a time-bound hierarchical key assignment scheme", "paper_id": "WOS:000235515200008"}