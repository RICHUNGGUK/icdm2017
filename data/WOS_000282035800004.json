{"auto_keywords": [{"score": 0.046819005802717, "phrase": "end-user_code"}, {"score": 0.00481495049065317, "phrase": "macro_scripts"}, {"score": 0.004244955499652296, "phrase": "prior_uses"}, {"score": 0.0037981086150309885, "phrase": "reusable_code"}, {"score": 0.003566028957296066, "phrase": "web_macro_scripts"}, {"score": 0.0035135084960705816, "phrase": "script_traits"}, {"score": 0.0033981387193790353, "phrase": "ibm_coscripter_repository_logs"}, {"score": 0.00328654473734697, "phrase": "actual_reuse"}, {"score": 0.0031434146012468307, "phrase": "higher_levels"}, {"score": 0.0030288982511487835, "phrase": "machine_learning_model"}, {"score": 0.0028436862612859896, "phrase": "repository_logs"}, {"score": 0.0027502501046865525, "phrase": "existing_machine_learning_models"}, {"score": 0.002650018880406324, "phrase": "sensitivity_analysis"}, {"score": 0.002370663905320869, "phrase": "individual_traits"}, {"score": 0.0023184226291364097, "phrase": "best_predictions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["End-user programming", " End-user software engineering", " Repositories", " Reuse", " Web macros"], "paper_abstract": "To help people find a code that they might want to reuse, repositories of end-user code typically sort scripts by number of downloads, ratings, or other information based on prior uses of the code. However, this information is unavailable when the code is new or when it has not yet been reused. Addressing this problem requires identifying reusable code based solely on information that exists when a script is created. To provide such a model for web macro scripts, we identified script traits that might plausibly predict reuse, then used IBM CoScripter repository logs to statistically test how well each corresponded to actual reuse. These tests confirmed that the traits generally did correspond to higher levels of reuse as anticipated. We then developed a machine learning model that uses these traits as features to predict reuse of macros. Evaluating this model on repository logs showed that its accuracy is comparable to that of existing machine learning models for predicting reuse-but with a much simpler structure. Sensitivity analysis revealed that our model is quite robust; its quality is greatly reduced only when parameters are set to such extreme values that the model becomes inordinately selective. Testing the model with individual traits revealed those that provided the best predictions on their own. Based on these results, we outline opportunities for using our model to improve repositories of end-user code. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Using traits of web macro scripts to predict reuse", "paper_id": "WOS:000282035800004"}