{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "contract_satisfaction"}, {"score": 0.007754385835476217, "phrase": "higher-order_contracts"}, {"score": 0.004693476992528682, "phrase": "higher-order_world"}, {"score": 0.0046141941030386525, "phrase": "behavioral_software_contracts"}, {"score": 0.004459605573798577, "phrase": "popular_mechanism"}, {"score": 0.004273601449537163, "phrase": "logical_claims"}, {"score": 0.0041657281535389615, "phrase": "program's_flow"}, {"score": 0.0039244530915794025, "phrase": "first-order_functions"}, {"score": 0.0037928847801943404, "phrase": "natural_interpretation"}, {"score": 0.0029116257477000617, "phrase": "observational_equivalence"}, {"score": 0.0024969812322112174, "phrase": "small_model_language"}, {"score": 0.002332133125576037, "phrase": "different_notions"}, {"score": 0.0021412594173592513, "phrase": "contract_parties"}], "paper_keywords": ["Languages", " Design", " Reliability", " Theory", " Contract satisfaction", " higher-order contracts"], "paper_abstract": "Behavioral software contracts have become a popular mechanism for specifying and ensuring logical claims about a program's flow of values. While contracts for first-order functions come with a natural interpretation and are well understood, the various incarnations of higher-order contracts adopt, implicitly or explicitly, different views concerning the meaning of contract satisfaction. In this article, we define various notions of contract satisfaction in terms of observational equivalence and compare them with each other and notions in the literature. Specifically, we introduce a small model language with higher-order contracts and use it to formalize different notions of contract satisfaction. Each of them demands that the contract parties satisfy certain observational equivalences. Categories and Subject Descriptors: D. 3.1 [Programming Languages]: Formal Definitions and Theory-Semantics", "paper_title": "On Contract Satisfaction in a Higher-Order World", "paper_id": "WOS:000297685600002"}