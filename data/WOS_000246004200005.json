{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hierarchical_sensor_networks"}, {"score": 0.04853583542060624, "phrase": "group_key_management_protocol"}, {"score": 0.04495258068457484, "phrase": "partial_keys"}, {"score": 0.03310810282697231, "phrase": "energy_consumption"}, {"score": 0.00454254773622547, "phrase": "pre-deployed_keys"}, {"score": 0.004493207015584002, "phrase": "sensor_node"}, {"score": 0.00444439983637316, "phrase": "partial_key"}, {"score": 0.004042919099733537, "phrase": "traditional_cryptographic_techniques"}, {"score": 0.003984444229875069, "phrase": "sensor_networks"}, {"score": 0.003941141575848601, "phrase": "associated_high_energy"}, {"score": 0.003912533878506028, "phrase": "computational_overheads"}, {"score": 0.0037725685596495355, "phrase": "group_keys"}, {"score": 0.0035202324978577263, "phrase": "cluster_heads"}, {"score": 0.003272767888056937, "phrase": "trusted_third_party"}, {"score": 0.0031099353574309606, "phrase": "broadcasting_partial_keys_and_the_group_key"}, {"score": 0.0028702214190712036, "phrase": "key_sizes"}, {"score": 0.002838993542880416, "phrase": "performance_study"}, {"score": 0.002808104467715375, "phrase": "optimum_number"}, {"score": 0.002737327060030586, "phrase": "group_key"}, {"score": 0.0026976845075643314, "phrase": "key_size"}, {"score": 0.002678078466226442, "phrase": "security_requirements"}, {"score": 0.002648935542912504, "phrase": "power_consumption"}, {"score": 0.0026201089205321704, "phrase": "experimental_study"}, {"score": 0.0025647488267543394, "phrase": "spin"}, {"score": 0.0024715695446993107, "phrase": "group_members"}, {"score": 0.002391739069644444, "phrase": "pre-deployed_key_approach"}, {"score": 0.0021049977753042253, "phrase": "obtained_results"}], "paper_keywords": ["group key management", " hierarchical sensor networks", " partial keys"], "paper_abstract": "In this paper, we describe a group key management protocol for hierarchical sensor networks where instead of using pre-deployed keys, each sensor node generates a partial key dynamically using a function. The function takes partial keys of its children as arguments. The design of the protocol is motivated by the fact that traditional cryptographic techniques are impractical in sensor networks because of associated high energy and computational overheads. The group key management protocol supports the establishment of two types of group keys; one for the nodes within a group (intra-cluster), and the other among a group of cluster heads (inter-cluster). The protocol handles freshness of the group key dynamically, and eliminates the involvement of a trusted third party (TTP). We have experimentally analyzed the time and energy consumption in broadcasting partial keys and the group key under two sensor routing protocols (Tiny-AODV and Tiny-Diffusion) by varying the number of nodes and key sizes. The performance study provides the optimum number of partial keys needed for computing the group key to balance the key size for security requirements and the power consumption. The experimental study also concludes that the energy consumption of SPIN [91 increases rapidly as the number of group members increases in comparison to our protocol. Similarly the pre-deployed key approach requires more communication time in comparison with this protocol. We have implemented this protocol using MICA2 motes and repeated most of the experiments which are done in simulation and we found out that the obtained results are very close to the observations made using the simulator.", "paper_title": "Energy-efficient group key management protocols for for hierarchical sensor networks", "paper_id": "WOS:000246004200005"}