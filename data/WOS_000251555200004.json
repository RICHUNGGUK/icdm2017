{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "constant_interruptions"}, {"score": 0.004720043307726269, "phrase": "asynchronous_exceptions"}, {"score": 0.0038676325043529524, "phrase": "semantic_perspective"}, {"score": 0.002925728709297618, "phrase": "low-level_implementation"}, {"score": 0.0022127018991294047, "phrase": "greater_confidence"}], "paper_keywords": [""], "paper_abstract": "Asynchronous exceptions, or interrupts, are important for writing robust, modular programs, but are traditionally viewed as being difficult from a semantic perspective. In this article, we present a simple, formally justified, semantics for interrupts. Our approach is to show how a high-level semantics for interrupts can be justified with respect to a low-level implementation, by means of a compiler and its correctness theorem. In this manner we obtain two different perspectives on the problem, formally shown to be equivalent, which gives greater confidence in the correctness of our semantics.", "paper_title": "What is the meaning of these constant interruptions ?", "paper_id": "WOS:000251555200004"}