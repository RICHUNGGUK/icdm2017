{"auto_keywords": [{"score": 0.04929443808213738, "phrase": "overlapping_digit_patterns"}, {"score": 0.042294426209151435, "phrase": "cse_representation"}, {"score": 0.00481495049065317, "phrase": "time-efficient_single_constant_multiplication"}, {"score": 0.004684157900507474, "phrase": "common_subexpression_elimination"}, {"score": 0.00463287706844195, "phrase": "cse"}, {"score": 0.004218602458288531, "phrase": "constant_multiplication"}, {"score": 0.004103942174451674, "phrase": "common_patterns"}, {"score": 0.0039269071382230444, "phrase": "cse_algorithms"}, {"score": 0.0036958398682001015, "phrase": "inherent_restrictions"}, {"score": 0.0032021226849872054, "phrase": "best_existing_heuristic_algorithm"}, {"score": 0.0031669873302916, "phrase": "single_constant_multiplication"}, {"score": 0.0031322707706117883, "phrase": "scm"}, {"score": 0.0029641011108505785, "phrase": "multiple_constant_multiplication"}, {"score": 0.0029315898380380813, "phrase": "mcm"}, {"score": 0.0025257081555100556, "phrase": "strict_limitation"}, {"score": 0.00241658945942583, "phrase": "new_heuristic"}, {"score": 0.0021879624017959493, "phrase": "run_time"}], "paper_keywords": ["Common subexpression elimination (CSE)", " overlapping digit patterns (ODPs)", " run time efficiency", " single constant multiplication (SCM)"], "paper_abstract": "Common subexpression elimination (CSE) algorithms try to minimize the number of adders (or subtracters) required to implement constant multiplication by searching and substituting common patterns in the CSE representation of a constant. CSE algorithms, in general, cannot find certain patterns due to inherent restrictions in the CSE representation. We propose overlapping digit patterns (ODPs) to remove some of these restrictions. We integrate ODPs into H(k), the best existing heuristic algorithm for single constant multiplication (SCM). H(k) is not applicable to the multiple constant multiplication (MCM) problem, so we cannot consider this problem. Generally, H(k) finds solutions very close to optimal, so there is a strict limitation on any further improvement which applies to any new heuristic. Instead, by integrating ODPs within H(k), we can on average significantly improve the run time of the algorithm (typically by one order of magnitude) while still reducing the number of adders.", "paper_title": "Time-Efficient Single Constant Multiplication Based on Overlapping Digit Patterns", "paper_id": "WOS:000269155400021"}