{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "bayesian"}, {"score": 0.00481495049065317, "phrase": "sequential_monte_carlo"}, {"score": 0.004106225442735525, "phrase": "particle_filters"}, {"score": 0.0038352452380298464, "phrase": "signal_processing"}, {"score": 0.0035281264325950556, "phrase": "bayesian_modeling"}, {"score": 0.003371066990851953, "phrase": "considerable_attentions"}, {"score": 0.0032209766681045365, "phrase": "natural_and_scalable_parallelizations"}, {"score": 0.0028309318332306703, "phrase": "parallel_programming"}, {"score": 0.0025843206540392184, "phrase": "sequential_monte_carlo_related_fields"}, {"score": 0.0023771343615901185, "phrase": "general_sequential_monte_carlo_algorithms"}], "paper_keywords": ["sequential Monte Carlo", " particle fillter", " C plus plus template metaprogramming"], "paper_abstract": "Sequential Monte Carlo is a family of algorithms for sampling from a sequence of distributions. Some of these algorithms, such as particle filters, are widely used in the physics and signal processing researches. More recent developments have established their application in more general inference problems such as Bayesian modeling. These algorithms have attracted considerable attentions in recent years as they admit natural and scalable parallelizations. However, these algorithms are perceived to be difficult to implement. In addition, parallel programming is often unfamiliar to many researchers though conceptually appealing, especially for sequential Monte Carlo related fields. A C++ template library is presented for the purpose of implementing general sequential Monte Carlo algorithms on parallel hardware. Two examples are presented: a simple particle filter and a classic Bayesian modeling problem.", "paper_title": "vSMC: Parallel Sequenced Monte Carlo in C plus", "paper_id": "WOS:000349844000001"}