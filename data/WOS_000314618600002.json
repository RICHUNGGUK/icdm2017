{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "redundant_arithmetics"}, {"score": 0.004766090327062509, "phrase": "computer-aided_design"}, {"score": 0.004622450915803531, "phrase": "rapid_pace"}, {"score": 0.00457553517865013, "phrase": "technological_evolution"}, {"score": 0.004506048850130758, "phrase": "substantial_amount"}, {"score": 0.004238452771031322, "phrase": "integrated_circuit_designers"}, {"score": 0.0041316803676012155, "phrase": "design_cycle"}, {"score": 0.004068907083697369, "phrase": "strict_performance_constraints"}, {"score": 0.003966388754366831, "phrase": "computer-aided_design_tools"}, {"score": 0.0038271712887391015, "phrase": "cad_tools"}, {"score": 0.0036181717017041387, "phrase": "power_consumption"}, {"score": 0.003403122817578447, "phrase": "design_environment"}, {"score": 0.0033173234105492895, "phrase": "arithmetic_datapath_design_support"}, {"score": 0.0029798924689472014, "phrase": "parameterized_generation"}, {"score": 0.002949598537993663, "phrase": "vlsi_modules"}, {"score": 0.002718045523483502, "phrase": "parameterized_arithmetic_ip-block_generators"}, {"score": 0.002556359086441866, "phrase": "best_architecture"}, {"score": 0.0025174594088331853, "phrase": "arithmetic_operator"}, {"score": 0.0024289743270061157, "phrase": "optimization_goal"}, {"score": 0.002367676766637248, "phrase": "binary_arithmetic"}, {"score": 0.0023197517832705297, "phrase": "redundant_arithmetic"}, {"score": 0.002272794656458419, "phrase": "good_intrinsic_performance"}, {"score": 0.002249672943553135, "phrase": "redundant_architectures"}, {"score": 0.0021928902836049384, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Very large-scale integrated (VLSI) circuit", " Hardware description language", " Design automation", " Design reuse", " Datapath synthesis", " Redundant arithmetic", " Performance optimizations"], "paper_abstract": "The rapid pace of technological evolution places a substantial amount of pressure on minimizing the time-to-market for integrated circuit designers. Such pressure on the design cycle combined with strict performance constraints makes the use of computer-aided design tools mandatory. In this context. CAD tools that improve performance in terms of delay, area or power consumption are of interest. In this paper, we present a design environment that is dedicated to arithmetic datapath design support. This environment consists of the following elements: (1) Stratus: a language that is dedicated to the parameterized generation of VLSI modules and that allows several levels of abstraction; (2) ArithLib: a library of parameterized arithmetic IP-block generators; and (3) several optimization algorithms that choose the best architecture for each arithmetic operator of a datapath, given an optimization goal. These algorithms consider binary arithmetic as well as redundant arithmetic, given the good intrinsic performance of redundant architectures. In addition, experimental results are presented. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Exploring redundant arithmetics in computer-aided design of arithmetic datapaths", "paper_id": "WOS:000314618600002"}