{"auto_keywords": [{"score": 0.0468720905372598, "phrase": "storage-class_memory"}, {"score": 0.01174703787562132, "phrase": "frash"}, {"score": 0.00481495049065317, "phrase": "hybrid_file_system"}, {"score": 0.004773476989344654, "phrase": "hierarchical_storage"}, {"score": 0.004591202593942391, "phrase": "novel_hybrid_file_system"}, {"score": 0.004454237726525018, "phrase": "nand_flash"}, {"score": 0.004377806391261418, "phrase": "promising_physical_characteristics"}, {"score": 0.004120435930514554, "phrase": "current_storage_device_scale"}, {"score": 0.003894963476923956, "phrase": "independent_storage_device"}, {"score": 0.003618558599449415, "phrase": "log-structured_file_system"}, {"score": 0.0035564156572789473, "phrase": "memory_and_storage_aspects"}, {"score": 0.003405671497507337, "phrase": "current_log-structured_file_system"}, {"score": 0.003332704619499476, "phrase": "hybrid_view_storage-class_memory"}, {"score": 0.003261295948815592, "phrase": "in-memory_data_structure"}, {"score": 0.00319141242685261, "phrase": "on-disk_structure"}, {"score": 0.003109519872758431, "phrase": "key_data_structures"}, {"score": 0.002990592465417758, "phrase": "legacy_log-structured_file_system"}, {"score": 0.0029012378668247397, "phrase": "mount_latency"}, {"score": 0.0028390477456009568, "phrase": "robustness_issue"}, {"score": 0.002766171878646582, "phrase": "disk_structure"}, {"score": 0.0026603411931700556, "phrase": "file_system_object"}, {"score": 0.0024928553725344933, "phrase": "legacy_log-structured_approach"}, {"score": 0.0022957232752482196, "phrase": "copy-on-mount_technique"}, {"score": 0.0022562464662197867, "phrase": "access_latency_difference"}, {"score": 0.002236762786982225, "phrase": "main_memory"}, {"score": 0.0021418339161425994, "phrase": "mount_time"}], "paper_keywords": ["Measurement", " Performance", " Flash storage", " log-structured file system"], "paper_abstract": "In this work, we develop a novel hybrid file system, FRASH, for storage-class memory and NAND Flash. Despite the promising physical characteristics of storage-class memory, its scale is an order of magnitude smaller than the current storage device scale. This fact makes it less than desirable for use as an independent storage device. We carefully analyze in-memory and on-disk file system objects in a log-structured file system, and exploit memory and storage aspects of the storage-class memory to overcome the drawbacks of the current log-structured file system. FRASH provides a hybrid view storage-class memory. It harbors an in-memory data structure as well as a on-disk structure. It provides nonvolatility to key data structures which have been maintained in-memory in a legacy log-structured file system. This approach greatly improves the mount latency and effectively resolves the robustness issue. By maintaining on-disk structure in storage-class memory, FRASH provides byte-addressability to the file system object and metadata for page, and subsequently greatly improves the I/O performance compared to the legacy log-structured approach. While storage-class memory offers byte granularity, it is still far slower than its DRAM counter part. We develop a copy-on-mount technique to overcome the access latency difference between main memory and storage-class memory. Our file system was able to reduce the mount time by 92% and file system I/O performance was increased by 16%.", "paper_title": "FRASH: Exploiting Storage Class Memory in Hybrid File System for Hierarchical Storage", "paper_id": "WOS:000208424200003"}