{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "embedded_software"}, {"score": 0.00429057323623293, "phrase": "design_environment"}, {"score": 0.0038230844545071303, "phrase": "user-written_systemc_modules"}, {"score": 0.003154012038613403, "phrase": "real-time_operating_system"}, {"score": 0.002703869368554536, "phrase": "user-written_systemc_hardware_modules"}, {"score": 0.0024088451312725924, "phrase": "successive_refinement"}, {"score": 0.0022302306304023602, "phrase": "hardware-software_codesign"}, {"score": 0.0021049977753042253, "phrase": "embedded-system_design"}], "paper_keywords": [""], "paper_abstract": "This article presents a design environment that provides an interface for user-written SystemC modules that model application software to make calls to a real-time operating system (RTOS) kernel and cosimulate with user-written SystemC hardware modules. The environment also facilitates successive refinement through three abstraction layers for hardware-software codesign suitable for embedded-system design.", "paper_title": "A SystemC refinement methodology for embedded software", "paper_id": "WOS:000236255100009"}