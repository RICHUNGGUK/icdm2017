{"auto_keywords": [{"score": 0.04350641237861327, "phrase": "service_ecosystems"}, {"score": 0.010823365942574025, "phrase": "failed_services"}, {"score": 0.00481495049065317, "phrase": "analysis_and_tolerance_strategies"}, {"score": 0.0047709540557306284, "phrase": "web_service_ecosystems"}, {"score": 0.0047273577269638725, "phrase": "service-oriented_computing"}, {"score": 0.004598933498016774, "phrase": "critical_roles"}, {"score": 0.004536029676655286, "phrase": "business_collaboration"}, {"score": 0.004372442291178139, "phrase": "latest_development"}, {"score": 0.004332471656145115, "phrase": "computing_technologies"}, {"score": 0.004062682236016889, "phrase": "service_failures"}, {"score": 0.0038447943243941685, "phrase": "previous_work"}, {"score": 0.003809628721278519, "phrase": "service_failure"}, {"score": 0.003689053436223376, "phrase": "ecosystem's_perspective"}, {"score": 0.0035233696341819437, "phrase": "service_failure_analysis_framework"}, {"score": 0.003459191419478298, "phrase": "complex_network_model"}, {"score": 0.003427540517249369, "phrase": "service_ecosystem"}, {"score": 0.003334309053314909, "phrase": "feature_model"}, {"score": 0.0031699005399973496, "phrase": "empirical_analysis"}, {"score": 0.003140888248194296, "phrase": "failed_service_features"}, {"score": 0.0031121406603482112, "phrase": "failure_impact_assessment"}, {"score": 0.002931569771634119, "phrase": "failure_tolerance_strategies"}, {"score": 0.00286493504971388, "phrase": "novel_composition-based_service_substitution_method"}, {"score": 0.0027614468443073028, "phrase": "functional_similar_ones"}, {"score": 0.0026986685585382347, "phrase": "service_systems"}, {"score": 0.0025655216052760093, "phrase": "new_substitution_method"}, {"score": 0.002329258721870127, "phrase": "service_substitution_method"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["service ecosystem", " failed service features", " failure impacts", " composition patterns", " service substitution"], "paper_abstract": "Service-oriented computing and cloud computing are playing critical roles in supporting business collaboration over the Internet. Thanks to the latest development in computing technologies, various large-scale, evolving, and rapidly growing service ecosystems emerge. However, service failures greatly hamper the usability and reputation of service ecosystems. In the previous work, service failure is not adequately studied from an ecosystem's perspective. To address this gap, we propose a service failure analysis framework based on a complex network model of service ecosystem. This framework comprises a feature model of failed services and several service failure impact indicators. By applying the framework, empirical analysis of failed service features and failure impact assessment can be implemented more easily and precisely. Moreover, to provide failure tolerance strategies for service ecosystems, a novel composition-based service substitution method is designed to replace the failed services with functional similar ones, such that the service systems are more robust when a failure occurs. As the new substitution method requires fewer structural data of services, it is more convenient to be applied in present RESTful Representational State Transfer (REST) service environment. Both the framework and the service substitution method are tested on real-world data set, and their usability and efficiency are demonstrated. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Failure analysis and tolerance strategies in web service ecosystems", "paper_id": "WOS:000351682800015"}