{"auto_keywords": [{"score": 0.03240430653841096, "phrase": "optimal_edge-coloring"}, {"score": 0.00481495049065317, "phrase": "integer_cost"}, {"score": 0.004717125879761534, "phrase": "color_c"}, {"score": 0.004191829338769843, "phrase": "different_colors"}, {"score": 0.0032768710589319103, "phrase": "g."}, {"score": 0.0030171910207671205, "phrase": "tree_t"}, {"score": 0.0029255474957478474, "phrase": "polynomial_time"}, {"score": 0.0028807718824400697, "phrase": "minimum_weight"}, {"score": 0.002793260314529581, "phrase": "new_bipartite_graph"}, {"score": 0.00266693888510356, "phrase": "efficient_simple_algorithm"}, {"score": 0.0023460846396652422, "phrase": "delta"}, {"score": 0.002309242063033298, "phrase": "maximum_degree"}], "paper_keywords": ["algorithm", " cost edge-coloring", " multitree", " perfect matching", " tree"], "paper_abstract": "Let C be a set of colors, and let omega(c) be an integer cost assigned to a color c, in C. An edge-coloring of a graph G is to color all the edges of G so that any two adjacent edges are colored with different colors in C. The cost omega(f) of an edge-coloring f of G is the sum of costs omega(f(e)) of colors f(e) assigned to all edges e in G. An edge-coloring f of G is optimal if omega(f) is minimum among all edge-colorings of G. In this paper, we show that the problem of finding an optimal edge-coloring of a tree T can be simply reduced in polynomial time to the minimum weight perfect matching problem for a new bipartite graph constructed from T. The reduction immediately yields an efficient simple algorithm to find an optimal edge-coloring of T in time O(n(1.5)Delta log(nN(omega))), where n is the number of vertices in T, Delta is the maximum degree of T, and N-omega is the maximum absolute cost vertical bar omega(c)vertical bar of colors c in C. We then show that our result can be extended for multitrees.", "paper_title": "Minimum Cost Edge-Colorings of Trees Can Be Reduced to Matchings", "paper_id": "WOS:000290125800003"}