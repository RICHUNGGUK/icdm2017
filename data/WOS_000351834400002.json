{"auto_keywords": [{"score": 0.048992899974696226, "phrase": "multilabel_learning"}, {"score": 0.03202831374286256, "phrase": "label_relationships"}, {"score": 0.00481495049065317, "phrase": "ml-tree"}, {"score": 0.004749106104067268, "phrase": "tree-structure-based_approach"}, {"score": 0.004515252649226697, "phrase": "unseen_instances"}, {"score": 0.00443308765153716, "phrase": "training_samples"}, {"score": 0.004273196830970426, "phrase": "known_labels"}, {"score": 0.004062682236016889, "phrase": "hierarchical_tree_model"}, {"score": 0.003916098498242888, "phrase": "ml-tree_algorithm"}, {"score": 0.0038447943243941685, "phrase": "tree_structure"}, {"score": 0.0035233696341819437, "phrase": "one-against-all_svm_classifiers"}, {"score": 0.0033651019362620866, "phrase": "child_nodes"}, {"score": 0.0032287289440915187, "phrase": "predictive_label_vector"}, {"score": 0.0031699005399973496, "phrase": "predictive_label_transmission"}, {"score": 0.003126481516783286, "phrase": "tree_model"}, {"score": 0.003097865379563127, "phrase": "multilabel_prediction"}, {"score": 0.0030695103543472908, "phrase": "automatic_discovery"}, {"score": 0.00290473242917264, "phrase": "predictive_labels"}, {"score": 0.002878140062594849, "phrase": "leaf_nodes"}, {"score": 0.002711109302199029, "phrase": "predictive_label_co-occurrence"}, {"score": 0.00257735013358606, "phrase": "ml-tree_method"}, {"score": 0.002461472107682778, "phrase": "six_wellestablished"}, {"score": 0.00226583335721762, "phrase": "friedman_and_nemenyi_tests"}, {"score": 0.002224510044064184, "phrase": "statistical_significance"}, {"score": 0.0021539955106204354, "phrase": "experimental_results"}], "paper_keywords": ["Hierarchical tree model", " multilabel classification", " multilabel learning", " tree-based classification"], "paper_abstract": "Multilabel learning aims to predict labels of unseen instances by learning from training samples that are associated with a set of known labels. In this paper, we propose to use a hierarchical tree model for multilabel learning, and to develop the ML-Tree algorithm for finding the tree structure. ML-Tree considers a tree as a hierarchy of data and constructs the tree using the induction of one-against-all SVM classifiers at each node to recursively partition the data into child nodes. For each node, we define a predictive label vector to represent the predictive label transmission in the tree model for multilabel prediction and automatic discovery of the label relationships. If two labels co-occur frequently as predictive labels at leaf nodes, these labels are supposed to be relevant. The amount of predictive label co-occurrence provides an estimation of the label relationships. We examine the ML-Tree method on 11 real data sets of different domains and compare it with six wellestablished multilabel learning algorithms. The performances of these approaches are evaluated by 16 commonly used measures. We also conduct Friedman and Nemenyi tests to assess the statistical significance of the differences in performance. Experimental results demonstrate the effectiveness of our method.", "paper_title": "ML-TREE: A Tree-Structure-Based Approach to Multilabel Learning", "paper_id": "WOS:000351834400002"}