{"auto_keywords": [{"score": 0.04896221231267544, "phrase": "invariant_assertions"}, {"score": 0.00481495049065317, "phrase": "loop_functions"}, {"score": 0.004539005582217309, "phrase": "important_role"}, {"score": 0.004178935413340453, "phrase": "iterative_programs"}, {"score": 0.003757480190200645, "phrase": "related_but_distinct_concept"}, {"score": 0.003541923233726252, "phrase": "invariant_relation"}, {"score": 0.0026355812883224203, "phrase": "hoare's_logic"}, {"score": 0.002573965014439041, "phrase": "invariant_relations"}, {"score": 0.002259883463607508, "phrase": "mills'_logic"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Function extraction", " Loop functions", " Invariant assertions", " Invariant relations", " Invariant functions", " Relational calculus", " Refinement calculus", " Computing loop behavior"], "paper_abstract": "Invariant assertions play an important role in the analysis and verification of iterative programs. In this paper, we introduce a related but distinct concept, namely that of invariant relation. While invariant assertions are useful to prove the correctness of a loop with respect to a specification (represented by a precondition/postcondition pair) in Hoare's logic, invariant relations are useful to derive the function of the loop in Mills' logic. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Reflexive transitive invariant relations: A basis for computing loop functions", "paper_id": "WOS:000282627600003"}