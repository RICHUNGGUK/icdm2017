{"auto_keywords": [{"score": 0.02563327568472148, "phrase": "delta"}, {"score": 0.00481495049065317, "phrase": "fly_estimation"}, {"score": 0.004604023526673226, "phrase": "asynchronous_message-passing_system"}, {"score": 0.004402295697276237, "phrase": "asynchronous_system"}, {"score": 0.003553540530701019, "phrase": "crashed_process"}, {"score": 0.0031372369299648203, "phrase": "good_approximations"}, {"score": 0.002955050521440921, "phrase": "real_challenge"}, {"score": 0.0028966970007550824, "phrase": "tolerant-distributed_computing"}, {"score": 0.002769568481822277, "phrase": "second_protocol"}, {"score": 0.002687922713487696, "phrase": "heterogeneous_communication_networks"}, {"score": 0.0026086775334428617, "phrase": "realistic_computation_model"}, {"score": 0.0025191653363555214, "phrase": "nonsynchronized_local_clocks"}, {"score": 0.002420611343093316, "phrase": "local_duration"}, {"score": 0.002136747803494932, "phrase": "duration_delta"}, {"score": 0.0021049977753042253, "phrase": "simulation-based_experimental_evaluation"}], "paper_keywords": ["Approximation protocol", " asynchronous system", " coverage assumption", " crash failure", " crash detection", " fault-tolerance", " message passing", " nonsynchronized local clocks"], "paper_abstract": "It is well known that in an asynchronous system where processes are prone to crash, it is impossible to design a protocol that provides each process with the set of processes that are currently alive. Basically, this comes from the fact that it is impossible to distinguish a crashed process from a process that is very slow or with which communications are very slow. Nevertheless, designing protocols that provide the processes with good approximations of the set of processes that are currently alive remains a real challenge in fault-tolerant-distributed computing. This paper proposes such a protocol, plus a second protocol that allows to cope with heterogeneous communication networks. These protocols consider a realistic computation model where the processes are provided with nonsynchronized local clocks and a function alpha() that takes a local duration Delta as a parameter, and returns an integer that is an estimate of the number of processes that could have crashed during that duration Delta. A simulation-based experimental evaluation of the proposed protocols is also presented. These experiments show that the protocols are practically relevant.", "paper_title": "On the Fly Estimation of the Processes that Are Alive in an Asynchronous Message-Passing System", "paper_id": "WOS:000265412500003"}