{"auto_keywords": [{"score": 0.03123696808284741, "phrase": "prototype_tool"}, {"score": 0.00481495049065317, "phrase": "nasa_autonomous_ground_control_system"}, {"score": 0.004700468701207975, "phrase": "new_requirements-based_programming_approach"}, {"score": 0.004515655183335171, "phrase": "computer-based_systems"}, {"score": 0.004003511299646736, "phrase": "automatic_generation"}, {"score": 0.003939748053452577, "phrase": "provably-correct_code"}, {"score": 0.0032231139180761183, "phrase": "autonomous_systems"}, {"score": 0.003121183062764093, "phrase": "autonomic_properties"}, {"score": 0.0024133548120920997, "phrase": "logos"}, {"score": 0.002355925231179695, "phrase": "nasa"}, {"score": 0.0022268964676199292, "phrase": "autonomic_behavior"}], "paper_keywords": ["validation", " verification", " formal methods", " automatic code generation", " NASA", " autonomous systems", " autonomic systems"], "paper_abstract": "A new requirements-based programming approach to the engineering of computer-based systems offers not only an underlying formalism, but also full formal development from requirements capture through to the automatic generation of provably-correct code. The method, Requirements-to-Design-to-Code (R2D2C), is directly applicable to the development of autonomous systems and systems having autonomic properties. We describe both the R2D2C method and a prototype tool that embodies the method, and illustrate the applicability of the method by describing how the prototype tool could be used in the development of LOGOS, a NASA autonomous ground control system that exhibits autonomic behavior. Finally, we briefly discuss other possible areas of application of the approach.", "paper_title": "A requirements-based programming approach to developing a NASA autonomous ground control system", "paper_id": "WOS:000251648700002"}