{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "maximal_contractions"}, {"score": 0.037694919794756004, "phrase": "literal_sets"}, {"score": 0.03687484221926564, "phrase": "decomposing_function"}, {"score": 0.004600870784042767, "phrase": "decomposition_based_algorithm"}, {"score": 0.004531637625717547, "phrase": "revision_problems"}, {"score": 0.0044634416051962545, "phrase": "classical_propositional_logic"}, {"score": 0.004297388539539564, "phrase": "decomposing_rules"}, {"score": 0.0033455764382772754, "phrase": "satisfiable_literal_sets"}, {"score": 0.002896167001212006, "phrase": "satisfied_models"}, {"score": 0.002788257824525862, "phrase": "revision_algorithm"}, {"score": 0.0023771343615901185, "phrase": "memory_requirement"}, {"score": 0.0023235629819760018, "phrase": "filter_function"}, {"score": 0.0022369407711124775, "phrase": "improved_algorithm"}, {"score": 0.0021865218861454256, "phrase": "good_performance"}, {"score": 0.0021049977753042253, "phrase": "space_perspectives"}], "paper_keywords": ["belief change", " maximal contraction", " decomposing rules", " revision algorithm"], "paper_abstract": "This paper proposes a decomposition based algorithm for revision problems in classical propositional logic. A set of decomposing rules are presented to analyze the satisfiability of formulas. The satisfiability of a formula is equivalent to the satisfiability of a set of literal sets. A decomposing function is constructed to calculate all satisfiable literal sets of a given formula. When expressing the satisfiability of a formula, these literal sets are equivalent to all satisfied models of such formula. A revision algorithm based on this decomposing function is proposed, which can calculate maximal contractions of a given problem. In order to reduce the memory requirement, a filter function is introduced. The improved algorithm has a good performance in both time and space perspectives.", "paper_title": "A decomposition based algorithm for maximal contractions", "paper_id": "WOS:000327494200001"}