{"auto_keywords": [{"score": 0.04839639002577898, "phrase": "pso"}, {"score": 0.00481495049065317, "phrase": "asynchronous_discrete_particle_swarm_optimization"}, {"score": 0.004712726613162057, "phrase": "novel_hardware_framework"}, {"score": 0.004679134285953932, "phrase": "particle_swarm_optimization"}, {"score": 0.004563427013973105, "phrase": "discrete_optimization_problems"}, {"score": 0.004340488340181084, "phrase": "growing_field"}, {"score": 0.0041136473765874815, "phrase": "computationally_intensive_method"}, {"score": 0.004055176557424983, "phrase": "long_execution_time"}, {"score": 0.0038986150699604504, "phrase": "real-time_applications"}, {"score": 0.003829455440282146, "phrase": "proper_solution"}, {"score": 0.0037885477117363675, "phrase": "limited_time"}, {"score": 0.003748076074268714, "phrase": "sopc"}, {"score": 0.0036553070575015344, "phrase": "flexible_systems"}, {"score": 0.003616252896285766, "phrase": "high_degree"}, {"score": 0.0034026714408341868, "phrase": "required_computational_operations"}, {"score": 0.003318423751430509, "phrase": "embedded_processors"}, {"score": 0.0032246835734680377, "phrase": "fitness_values"}, {"score": 0.0031902155632863236, "phrase": "programmed_software_codes"}, {"score": 0.0031448288291084, "phrase": "subparticle_method"}, {"score": 0.0030889995517870525, "phrase": "full_scalability"}, {"score": 0.0029802879302375986, "phrase": "particle_length"}, {"score": 0.002744510304340939, "phrase": "optimization_architecture"}, {"score": 0.002695768552609587, "phrase": "single_chip_master-slave_multiprocessor_structure"}, {"score": 0.0026289770980696286, "phrase": "pso_gains"}, {"score": 0.002619571161767134, "phrase": "parallel_efficacy"}, {"score": 0.0025273383208209944, "phrase": "five_benchmarks"}, {"score": 0.002327310963701377, "phrase": "software_implementation"}, {"score": 0.0023024126375034066, "phrase": "elapsed_computation_time"}, {"score": 0.0022615046141708987, "phrase": "ppso_core"}, {"score": 0.0022213218042340752, "phrase": "neural_network_training"}, {"score": 0.0021975548867457623, "phrase": "sopc-based_embedded_system"}, {"score": 0.0021662599012740127, "phrase": "system_applicability"}, {"score": 0.0021507795710951384, "phrase": "real-world_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd"}], "paper_keywords": ["Evolutionary algorithms", " Particle swarm optimization", " Parallel architecture", " Multiprocessing", " Field programmable gate array (FPGA)", " System-on-a-programmable-chip", " Real-time applications"], "paper_abstract": "This paper presents a novel hardware framework of particle swarm optimization (PSO) for various kinds of discrete optimization problems based on the system-on-a-programmable-chip (SOPC) concept. PSO Is a new optimization algorithm With a growing field of applications. Nevertheless, similar to the other evolutionary algorithms, PSO is generally a computationally intensive method which suffers from long execution time. Hence, it is difficult to use PSO in real-time applications in which reaching a proper solution in a limited time is essential SOPC offers a platform to effectively design flexible systems with a high degree of complexity. A hardware pipelined PSO (PPSO) Core is applied with which the required computational operations of the algorithm are performed. Embedded processors have also been employed to evaluate the fitness values by running programmed software codes. Applying the subparticle method brings the benefit of full scalability to the framework and makes it independent of the particle length. Therefore, more complex and larger problems can be addressed Without modifying the architecture of the framework. To speed up the computations, the optimization architecture is implemented on a single chip master-slave multiprocessor structure Moreover, the asynchronous model of PSO gains parallel efficacy and provides an approach to update particles continuously. Five benchmarks are exploited to evaluate the effectiveness and robustness of the system The results indicate a speed-up of up to 98 times over the software implementation in the elapsed computation time. Besides, the PPSO Core has been employed for neural network training in ail SOPC-based embedded system which approves the system applicability for real-world applications. (C) 2009 Elsevier Ltd All rights reserved", "paper_title": "Parallel scalable hardware implementation of asynchronous discrete particle swarm optimization", "paper_id": "WOS:000275785300005"}