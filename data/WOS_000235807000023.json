{"auto_keywords": [{"score": 0.030486779814481724, "phrase": "uml"}, {"score": 0.00481495049065317, "phrase": "analysis_models"}, {"score": 0.0046161999598320486, "phrase": "non-functional_requirements"}, {"score": 0.0038343546245999285, "phrase": "uml_models"}, {"score": 0.003770185129638344, "phrase": "different_analysis_models"}, {"score": 0.0036759314172445934, "phrase": "petri_nets"}, {"score": 0.0036144035798673967, "phrase": "queueing_networks"}, {"score": 0.0035539019235553897, "phrase": "formal_logic"}, {"score": 0.0032387402145603412, "phrase": "higher_level"}, {"score": 0.003027178161479457, "phrase": "new_\"abstraction-raising\"_transformation_approach"}, {"score": 0.0026445028886931837, "phrase": "large_semantic_gap"}, {"score": 0.0025137856138000014, "phrase": "target_model"}, {"score": 0.002450864311898833, "phrase": "proposed_approach"}, {"score": 0.002271372252250557, "phrase": "klaper"}, {"score": 0.0021408862709571615, "phrase": "reliability_analysis"}, {"score": 0.0021049977753042253, "phrase": "component-based_systems"}], "paper_keywords": [""], "paper_abstract": "The verification of non-functional requirements of software models (such as performance, reliability, scalability, security, etc.) requires the transformation of UML models into different analysis models such as Petri nets, queueing networks, formal logic, etc., which represent the system at a higher level of abstraction. The paper proposes a new \"abstraction-raising\" transformation approach for generating analysis models from UML models. In general, such transformations must bridge a large semantic gap between the source and the target model. The proposed approach is illustrated by a transformation from UML to Klaper (Kernel LAnguage for PErformance and Reliability analysis of component-based systems).", "paper_title": "Abstraction-raising transformation for generating analysis models", "paper_id": "WOS:000235807000023"}