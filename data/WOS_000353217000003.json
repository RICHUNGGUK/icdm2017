{"auto_keywords": [{"score": 0.04201419729599906, "phrase": "proposed_approach"}, {"score": 0.015719716506582538, "phrase": "dynamic_reconfiguration"}, {"score": 0.004777569299319633, "phrase": "mobile_agents"}, {"score": 0.004722038375317162, "phrase": "pure_software_agents"}, {"score": 0.004577076689777069, "phrase": "multi-agent_systems"}, {"score": 0.004471270242168067, "phrase": "pure_hardware_agents"}, {"score": 0.004402088928254543, "phrase": "fpga_hardware"}, {"score": 0.004055998173160551, "phrase": "high-level_services"}, {"score": 0.003931402465972151, "phrase": "software_agent"}, {"score": 0.0038106195546165574, "phrase": "hardware_agent"}, {"score": 0.0037662852047763112, "phrase": "target_node"}, {"score": 0.003693533648584145, "phrase": "wide_spectrum"}, {"score": 0.0036363418376496484, "phrase": "system_designers"}, {"score": 0.0035660913513115267, "phrase": "distributed_applications"}, {"score": 0.0035245918797629804, "phrase": "current_system_requirements"}, {"score": 0.00337650257503995, "phrase": "multi-agent_frameworks"}, {"score": 0.003298357357267836, "phrase": "called_agent"}, {"score": 0.0031474338010045386, "phrase": "calling_agents"}, {"score": 0.002956858061485755, "phrase": "proxy_agents"}, {"score": 0.0028325548627901004, "phrase": "necessary_information"}, {"score": 0.0027240799841720957, "phrase": "jade_framework"}, {"score": 0.002692427052590726, "phrase": "java"}, {"score": 0.002490053106007765, "phrase": "timing_performance"}, {"score": 0.002470676601347937, "phrase": "memory_overhead"}, {"score": 0.00228499525153, "phrase": "kalman_filter"}, {"score": 0.0021803388613879896, "phrase": "hardware_agents"}, {"score": 0.002163367190715979, "phrase": "obtained_results"}, {"score": 0.0021049977753042253, "phrase": "proposed_ideas"}], "paper_keywords": ["Multi-agent systems", " Hardware agent", " Mobile agent", " Reconfigurable computing"], "paper_abstract": "The paper describes an approach to allow dynamic reconfiguration of mobile agents. Both pure software agents-as the ones usually supported by multi-agent systems frameworks-as well as pure hardware agents, running in FPGA hardware, are supported. Agents can migrate among nodes or move from software to hardware (or vice-versa) using high-level services. The proposed approach even supports that a software agent migrates to another node and becomes a hardware agent in the target node. This opens a wide spectrum of possibilities for system designers, allowing dynamic reconfiguration of distributed applications based on current system requirements. Communication among agents follows the same schema usually adopted by multi-agent frameworks and the fact that the called agent is implemented as hardware or software is totally transparent to the calling agents. This is made possible due to the development of the an agent wrapper layer, on which proxy agents, implemented in software, are responsible for handling all necessary information to their hardware counterparts. The proposed approach was implemented using the Jade framework, a Java-based multi-agent systems framework which is widely adopted in several applications. In order to assess the timing performance and memory overhead of the proposed approach, a case study including two computationally intensive agents-a Floating Point Unit (FPU) and a Kalman Filter agent-were developed and implemented both as software as well as hardware agents. Obtained results that allowed the validation of the proposed ideas are presented in the paper.", "paper_title": "Dynamically reconfigurable hardware/software mobile agents", "paper_id": "WOS:000353217000003"}