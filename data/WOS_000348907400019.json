{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "energy_management"}, {"score": 0.004739686553336044, "phrase": "stack"}, {"score": 0.00468912237497774, "phrase": "modern_demand"}, {"score": 0.004639712384096822, "phrase": "energy-efficient_computation"}, {"score": 0.004262643556463569, "phrase": "operating_systems"}, {"score": 0.003936910716320182, "phrase": "disjointed_space"}, {"score": 0.0038339398365449507, "phrase": "different_levels"}, {"score": 0.003773449694108617, "phrase": "system_stack"}, {"score": 0.0034299649219748513, "phrase": "experimental_survey"}, {"score": 0.003375826910838081, "phrase": "present_state"}, {"score": 0.0030521898646210413, "phrase": "total_energy"}, {"score": 0.0030199761431186434, "phrase": "average_power"}, {"score": 0.0029722900280316216, "phrase": "execution_time"}, {"score": 0.002658863179011018, "phrase": "effective_parallelization"}, {"score": 0.0025348408238837655, "phrase": "far_more_energy"}, {"score": 0.002508073621696602, "phrase": "linux's_frequency"}, {"score": 0.002391067964886602, "phrase": "other's_savings"}, {"score": 0.0022674379203603224, "phrase": "power_impacts"}, {"score": 0.0021616339773325704, "phrase": "runtime_impacts"}, {"score": 0.0021049977753042253, "phrase": "inconsistent_energy_impacts"}], "paper_keywords": [""], "paper_abstract": "Modern demand for energy-efficient computation has spurred research at all levels of the stack, from devices to microarchitecture, operating systems, compilers, and languages. Unfortunately, this breadth has resulted in a disjointed space, with technologies at different levels of the system stack rarely compared, let alone coordinated. This work begins to remedy the problem, conducting an experimental survey of the present state of energy management across the stack. Focusing on settings that are exposed to software, we measure the total energy, average power, and execution time of 41 benchmark applications in 220 configurations, across a total of 200,000 program executions. Some of the more important findings of the survey include that effective parallelization and compiler optimizations have the potential to save far more energy than Linux's frequency tuning algorithms; that certain non-complementary energy strategies can undercut each other's savings by half when combined; and that while the power impacts of most strategies remain constant across applications, the runtime impacts vary, resulting in inconsistent energy impacts.", "paper_title": "An Experimental Survey of Energy Management Across the Stack", "paper_id": "WOS:000348907400019"}