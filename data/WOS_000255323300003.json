{"auto_keywords": [{"score": 0.0490756113024592, "phrase": "crossed_cube"}, {"score": 0.0485813230510468, "phrase": "crossed_cubes"}, {"score": 0.036895653910106824, "phrase": "n-d_crossed_cube"}, {"score": 0.03596176205294267, "phrase": "unit_expansion"}, {"score": 0.004590820632326585, "phrase": "important_class"}, {"score": 0.004542441734438654, "phrase": "hypercube_variants"}, {"score": 0.002403799575774605, "phrase": "jia"}, {"score": 0.002378408229095287, "phrase": "j._fan"}, {"score": 0.0023532890136269986, "phrase": "x._jia"}, {"score": 0.002329083043688839, "phrase": "embedding"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["interconnection network", " crossed cube", " 3D mesh", " graph embedding", " dilation", " expansion"], "paper_abstract": "Crossed cubes are an important class of hypercube variants. This paper addresses how to embed a family of disjoint 3D meshes into a crossed cube. Two major contributions of this paper are: (1) for n >= 4, a family of two disjoint 3D meshes of size 2 x 2 x 2(n-3) can be embedded in an n-D crossed cube with unit dilation and unit expansion, and (2) for n >= 6, a family of four disjoint 3D meshes of size 4 x 2 x 2(n-5) can be embedded in an n-D crossed cube with unit dilation and unit expansion. These results mean that a family of two or four 3D-mesh-structured parallel algorithms can be executed on a same crossed cube efficiently and in parallel. Our work extends the results recently obtained by Fan and Jia [J. Fan, X. Jia, Embedding meshes into crossed cubes, Information Sciences 177(15) (2007) 3151-3160]. (c) 2008 Published by Elsevier Inc.", "paper_title": "Embedding a family of disjoint 3D meshes into a crossed cube", "paper_id": "WOS:000255323300003"}