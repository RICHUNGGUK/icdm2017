{"auto_keywords": [{"score": 0.04810827982024645, "phrase": "sdf"}, {"score": 0.00481495049065317, "phrase": "parametric_dataflow_applications"}, {"score": 0.004770211811866158, "phrase": "many-core_platforms"}, {"score": 0.004447600571127578, "phrase": "streaming_applications"}, {"score": 0.004146716743362567, "phrase": "next_generation"}, {"score": 0.004108161406159407, "phrase": "high_definition_video_applications"}, {"score": 0.003976007772514762, "phrase": "new_features"}, {"score": 0.0038301525703886585, "phrase": "topology_modifications"}, {"score": 0.0037592362369401546, "phrase": "modern_many-core_platforms"}, {"score": 0.0035376693476114733, "phrase": "generic_and_flexible_framework"}, {"score": 0.003407839062159497, "phrase": "parametric_dataflow_model"}, {"score": 0.0031770714776989282, "phrase": "new_sthorm_many-core_platform"}, {"score": 0.003003726508522467, "phrase": "user-defined_ordering"}, {"score": 0.0029206231857112305, "phrase": "parametric_dataflow_graph"}, {"score": 0.0028664985822266344, "phrase": "generic_or_user-defined_specific_constraints"}, {"score": 0.0027741761880779535, "phrase": "power_consumption"}, {"score": 0.0026974065918918275, "phrase": "scheduling_algorithm"}, {"score": 0.0026598200370569433, "phrase": "minimal_overhead"}, {"score": 0.0025862068041567934, "phrase": "different_scheduling_policies"}, {"score": 0.002226592967032469, "phrase": "scheduling_capabilities"}, {"score": 0.0021750990136123367, "phrase": "real_world_application"}, {"score": 0.0021049977753042253, "phrase": "high_definition_video"}], "paper_keywords": ["Algorithms", " Languages", " Verification", " Dataflow", " Manycore", " Scheduling", " Liveness", " Boundedness"], "paper_abstract": "Dataflow models, such as SDF, have been effectively used to program streaming applications while ensuring their liveness and boundedness. Yet, industrials are struggling to design the next generation of high definition video applications using these models. Such applications demand new features such as parameters to express dynamic input/output rate and topology modifications. Their implementation on modern many-core platforms is a major challenge. We tackle these problems by proposing a generic and flexible framework to schedule streaming applications designed in a parametric dataflow model of computation. We generate parallel as soon as possible (ASAP) schedules targeted to the new STHORM many-core platform of STMicroelectronics. Furthermore, these schedules can be customized using user-defined ordering and resource constraints. The parametric dataflow graph is associated with generic or user-defined specific constraints aimed at minimizing timing, buffer sizes, power consumption, or other criteria. The scheduling algorithm executes with minimal overhead and can be adapted to different scheduling policies just by adding some constraints. The safety of both the dataflow graph and constraints can be checked statically and all schedules are guaranteed to be bounded and deadlock free. We illustrate the scheduling capabilities of our approach using a real world application: the VC-1 video decoder for high definition video streaming.", "paper_title": "A Framework to Schedule Parametric Dataflow Applications on Many-Core Platforms", "paper_id": "WOS:000341937800015"}