{"auto_keywords": [{"score": 0.0474680407483571, "phrase": "tdac"}, {"score": 0.00737000873548608, "phrase": "client_side"}, {"score": 0.007067547388559469, "phrase": "server_side"}, {"score": 0.005195830689976862, "phrase": "temporary_access_control_credential"}, {"score": 0.005087873739141781, "phrase": "client_application"}, {"score": 0.004616859702338596, "phrase": "trusted_decentralized_access_control"}, {"score": 0.004274527415193801, "phrase": "fundamental_principle"}, {"score": 0.004156411748278609, "phrase": "access_control_policies"}, {"score": 0.003985305257857655, "phrase": "sensitive_objects"}, {"score": 0.003821215658570578, "phrase": "trusted_computing_technologies"}, {"score": 0.003689628075766217, "phrase": "previous_work"}, {"score": 0.0036382660173943393, "phrase": "sandhu"}, {"score": 0.0035876913182069045, "phrase": "zhang"}, {"score": 0.0033682492486884364, "phrase": "trusted_components"}, {"score": 0.003162252895465901, "phrase": "private_trusted_reference_monitor"}, {"score": 0.0029688173975648173, "phrase": "access_control_request"}, {"score": 0.0026722904884984348, "phrase": "master_reference_monitor"}, {"score": 0.002306123367679187, "phrase": "typical_application"}, {"score": 0.002226592967032469, "phrase": "client's_private_context_data"}, {"score": 0.002195552442011313, "phrase": "subject-context_aware_access_control"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Trusted computing", " Trusted decentralized access control", " Context-aware access control"], "paper_abstract": "This paper proposes a trusted decentralized access control (TDAC) framework for the client/server architecture. As the fundamental principle, TDAC enforces access control policies at the client side and protects sensitive objects at the server side by leveraging trusted computing technologies. Compared with the previous work of Sandhu and Zhang (2005), TDAC uses fewer requirements for trusted components. To implement TDAC, we design a private trusted reference monitor that runs at the client side, evaluates an access control request, and signs a temporary access control credential for a client application trustworthily: we also design a master reference monitor that runs at the server side, evaluates the request from the client application only according to the temporary access control credential. As a typical application, TDAC can protect client's private context data in subject-context aware access control. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A trusted decentralized access control framework for the client/server architecture", "paper_id": "WOS:000275132700002"}