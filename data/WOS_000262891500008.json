{"auto_keywords": [{"score": 0.030711241854255947, "phrase": "fuzzy_logic"}, {"score": 0.00481495049065317, "phrase": "software_development_effort_prediction"}, {"score": 0.0045820747375409435, "phrase": "traditional_approaches"}, {"score": 0.0045318666714939905, "phrase": "software_projects_effort_prediction"}, {"score": 0.004384504920139083, "phrase": "mathematical_formulae"}, {"score": 0.004312622975366672, "phrase": "historical_data"}, {"score": 0.004172360444377281, "phrase": "experts_judgments"}, {"score": 0.00373682045166829, "phrase": "effort_prediction_approaches"}, {"score": 0.0036352070472201086, "phrase": "early_phases"}, {"score": 0.0035755653799043, "phrase": "software_development_lifecycle"}, {"score": 0.0034975571855450343, "phrase": "requirements_development"}, {"score": 0.003132236287543072, "phrase": "later_development_phases"}, {"score": 0.003030247482854539, "phrase": "recent_works"}, {"score": 0.0029805015010906013, "phrase": "promising_results"}, {"score": 0.0028675712105299496, "phrase": "effort_prediction_systems"}, {"score": 0.0025257081555100556, "phrase": "effort_prediction_framework"}, {"score": 0.00240328454980006, "phrase": "handling_imprecision"}, {"score": 0.002286781334850213, "phrase": "effort_prediction"}, {"score": 0.002261666793030715, "phrase": "evaluation_experiments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Effort prediction", " Type-2 fuzzy logic", " COCOMO", " Imprecision", " Uncertainty"], "paper_abstract": "Traditional approaches for software projects effort prediction such as the use of mathematical formulae derived from historical data, or the use of experts judgments are plagued with issues pertaining to effectiveness and robustness in their results. These issues are more pronounced when these effort prediction approaches are used during the early phases of the software development lifecycle, for example requirements development, whose effort predictors along with their relationships to effort are characterized as being even more imprecise and uncertain than those of later development phases, for example design. Recent works have demonstrated promising results using approaches based on fuzzy logic. Effort prediction systems that use fuzzy logic can deal with imprecision; they, however, can not deal with uncertainty. This paper presents an effort prediction framework that is based on type-2 fuzzy logic to allow handling imprecision and uncertainty inherent in the information available for effort prediction. Evaluation experiments have shown the framework to be promising. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Handling imprecision and uncertainty in software development effort prediction: A type-2 fuzzy logic based framework", "paper_id": "WOS:000262891500008"}