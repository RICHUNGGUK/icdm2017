{"auto_keywords": [{"score": 0.049631680892871025, "phrase": "object-based_storage_system"}, {"score": 0.03803384992967457, "phrase": "non-sensitive_areas"}, {"score": 0.0312702430794085, "phrase": "bless"}, {"score": 0.00481495049065317, "phrase": "object_level_encryption_security"}, {"score": 0.004529881123652277, "phrase": "storage_devices"}, {"score": 0.004466519142879166, "phrase": "peta-byte_scale"}, {"score": 0.004362870617347183, "phrase": "considerable_part"}, {"score": 0.004123781267600542, "phrase": "existing_storage_security_schemes"}, {"score": 0.003649585593445665, "phrase": "large_number"}, {"score": 0.003548111729206587, "phrase": "severe_performance_penalty"}, {"score": 0.003369322866499541, "phrase": "object_level_encryption"}, {"score": 0.0033377940531761985, "phrase": "secured_object-based_storage_system"}, {"score": 0.0031399038722901788, "phrase": "size_encryption_area"}, {"score": 0.003095923814666088, "phrase": "unnecessary_processing"}, {"score": 0.0028986672783671147, "phrase": "overall_performance"}, {"score": 0.0028715299874549245, "phrase": "storage_systems"}, {"score": 0.0028446460307503343, "phrase": "extended_object_attributes"}, {"score": 0.002765490759189057, "phrase": "file_security_information"}, {"score": 0.002688532127821979, "phrase": "bless."}, {"score": 0.002626034130205569, "phrase": "bless's_efficiency"}, {"score": 0.0024818877663889813, "phrase": "widely_used_obss."}, {"score": 0.002447101794397243, "phrase": "bless's_performance"}, {"score": 0.0022378101636842296, "phrase": "sequential_workloads"}, {"score": 0.002196077907454079, "phrase": "random_workloads"}, {"score": 0.0021652891317252994, "phrase": "traditional_full_encryption_schemes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Object-based storage system", " Encryption"], "paper_abstract": "In Object-Based Storage System (OBSS) there are hundreds even thousands of storage devices to store peta-byte scale of data. A considerable part of such data is sensitive and needs to be encrypted. While existing storage security schemes encrypt entire files to ensure security, it is often unnecessary to encrypt all areas within a file. Otherwise, the encryption of a large number of non-sensitive areas will result in severe performance penalty. This paper presents the design and implementation of an object level encryption for secured object-based storage system referred to as BLESS, which allows a user to specify any size encryption area to avoid unnecessary processing of non-sensitive areas within a file. Not surprisingly, BLESS significantly improves the overall performance of storage systems. Extended object attributes are utilized to record the file security information, thereby ensuring flexibility of BLESS. In order to demonstrate BLESS's efficiency, we have implemented BLESS on Lustre, which is a widely used OBSS. We measure BLESS's performance under a variety of benchmarks, and the experiment indicates that BLESS can increase throughput by 42% for sequential workloads and 54% for random workloads compared with traditional full encryption schemes. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "BLESS: Object level encryption security for object-based storage system", "paper_id": "WOS:000296919500021"}