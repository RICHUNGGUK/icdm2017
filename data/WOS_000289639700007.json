{"auto_keywords": [{"score": 0.04820613313024094, "phrase": "operator_mapping_problem"}, {"score": 0.04716622566739236, "phrase": "in-network_stream_processing"}, {"score": 0.00481495049065317, "phrase": "constructive_in-network_stream_processing."}, {"score": 0.004574247691703376, "phrase": "in-network_stream_processing_applications"}, {"score": 0.004247560712327667, "phrase": "multiple_data_objects"}, {"score": 0.0037682108720193956, "phrase": "sensor_network"}, {"score": 0.003683213029483699, "phrase": "continuous_queries"}, {"score": 0.003641433168173135, "phrase": "distributed_relational_databases"}, {"score": 0.0034789831290103967, "phrase": "\"constructive\"_scenario"}, {"score": 0.0031393948330209255, "phrase": "processing_servers"}, {"score": 0.002753138528582461, "phrase": "minimum_steady-state_throughput"}, {"score": 0.002527150892127982, "phrase": "relevant_operator-placement_problems"}, {"score": 0.002442025065383455, "phrase": "even_simple_versions"}, {"score": 0.0023742444777622245, "phrase": "np"}, {"score": 0.002178400923036365, "phrase": "extensive_simulations"}, {"score": 0.0021291870676682406, "phrase": "theoretical_bounds"}, {"score": 0.0021049977753042253, "phrase": "optimal_solutions"}], "paper_keywords": ["In-network stream processing", " trees of operators", " operator mapping", " optimization", " complexity results", " polynomial heuristics"], "paper_abstract": "In this paper we consider the operator mapping problem for in-network stream processing applications. In-network stream processing consists in applying a tree of operators in steady-state to multiple data objects that are continually updated at various locations on a network. Examples of in-network stream processing include the processing of data in a sensor network, or of continuous queries on distributed relational databases. We study the operator mapping problem in a \"constructive\" scenario, i.e., a scenario in which one builds a platform dedicated to the application by purchasing processing servers with various costs and capabilities. The objective is to minimize the cost of the platform while ensuring that the application achieves a minimum steady-state throughput. The first contribution of this paper is the formalization of a set of relevant operator-placement problems, and a proof that even simple versions of the problem are NP-complete. Our second contribution is the design of several polynomial time heuristics, which are evaluated via extensive simulations and compared to theoretical bounds for optimal solutions.", "paper_title": "RESOURCE ALLOCATION STRATEGIES FOR CONSTRUCTIVE IN-NETWORK STREAM PROCESSING", "paper_id": "WOS:000289639700007"}