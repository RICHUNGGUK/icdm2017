{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "grid_architecture"}, {"score": 0.004720606036240263, "phrase": "protocol_architecture"}, {"score": 0.004582528208024817, "phrase": "basic_mechanisms"}, {"score": 0.004515004397496303, "phrase": "virtual_organization"}, {"score": 0.004089475312474684, "phrase": "based_open_architecture"}, {"score": 0.003911253966141701, "phrase": "code_sharing"}, {"score": 0.0038727120021750973, "phrase": "standard_protocols"}, {"score": 0.0037593414153801394, "phrase": "standard_services"}, {"score": 0.0037039021744127783, "phrase": "enhanced_capabilities"}, {"score": 0.0034901729647741353, "phrase": "three-layer_coordination"}, {"score": 0.0032724821705972357, "phrase": "end-to-end_quality"}, {"score": 0.00308357048262018, "phrase": "grid_resources"}, {"score": 0.003038066486989815, "phrase": "joint_coordination_algorithm"}, {"score": 0.0029637093924781825, "phrase": "interlayer_coupling"}, {"score": 0.0029344771385297137, "phrase": "fabric_layer"}, {"score": 0.0029055323737809825, "phrase": "collective_layer"}, {"score": 0.0028768722873689432, "phrase": "application_layer"}, {"score": 0.002724207384182295, "phrase": "system-wide_optimization"}, {"score": 0.002670719148310961, "phrase": "user's_preferences"}, {"score": 0.002605329434787829, "phrase": "integrated_coordination"}, {"score": 0.0025415366388578465, "phrase": "constrained_optimization_problem"}, {"score": 0.002516457934208144, "phrase": "utility_functions"}, {"score": 0.002454835845644037, "phrase": "grid_user'_preferences"}, {"score": 0.0024306105794630246, "phrase": "resource_provider's_benefit_function"}, {"score": 0.0023476849595393872, "phrase": "optimization_framework"}, {"score": 0.0023130151703068444, "phrase": "layered_approach"}, {"score": 0.002278856202878812, "phrase": "sum_utility_maximization_problem"}, {"score": 0.0022120408738490437, "phrase": "proposed_joint_three-layer_coordination"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Joint coordination", " Virtual organization", " Standard based open architecture", " Protocol architecture"], "paper_abstract": "Grid architecture is protocol architecture, with protocols defining the basic mechanisms by which virtual organization (VO) users and resources negotiate, establish, manage, and exploit sharing relationships. A standard based open architecture facilitates extensibility, interoperability, portability, and code sharing; standard protocols make it easy to define standard services that provide enhanced capabilities. Grid architecture organizes into layers. In the paper, a three-layer coordination of grid architecture is proposed. The aim is to optimize the end-to-end quality of the dynamic grid application as well as efficiently utilizing the grid resources. A joint coordination algorithm, which exploits the interlayer coupling of fabric layer, collective layer and application layer, is proposed. The algorithm aims to achieve a system-wide optimization based on the user's preferences. We formulate the integrated coordination of three layers into a constrained optimization problem. Utility functions are used to express grid user' preferences, resource provider's benefit function and system's objectives. The optimization framework provides a layered approach to the sum utility maximization problem. The advantage of the proposed joint three-layer coordination is demonstrated through simulations. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "An efficient coordination scheme between layers of grid architecture", "paper_id": "WOS:000261466600015"}