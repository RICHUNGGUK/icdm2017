{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "formal_methods"}, {"score": 0.008949994349272296, "phrase": "cloud_computing_systems"}, {"score": 0.006810955537993458, "phrase": "cloud_computing"}, {"score": 0.0046928556063004214, "phrase": "cloud_computing_systems._formal_methods"}, {"score": 0.004252707756312684, "phrase": "real_systems"}, {"score": 0.004005176784823524, "phrase": "current_technology_development"}, {"score": 0.0039035351575463103, "phrase": "appropriate_service"}, {"score": 0.003837205620832367, "phrase": "increasing_demand"}, {"score": 0.003788196352457501, "phrase": "high_quality"}, {"score": 0.0037398106866046972, "phrase": "free_service"}, {"score": 0.002879237498994052, "phrase": "cloud_frameworks"}, {"score": 0.0028302774484002527, "phrase": "hadoop"}, {"score": 0.0027114323601885666, "phrase": "scheduling_failures"}, {"score": 0.0024252458095689847, "phrase": "big_data"}, {"score": 0.002274059352027924, "phrase": "classical_distributed_systems"}, {"score": 0.0021692000054033956, "phrase": "faulty_systems"}], "paper_keywords": ["Formal Verification", " Cloud Computing", " Theorem Proving", " Model Checking"], "paper_abstract": "Formal methods are necessary to capture the semantics and behavior of processes of various systems. They characterize and provide insight into the behavior of real systems and thus identify their deterministic and non-deterministic features. The design and deployment of cloud computing systems utilize the current technology development in order to provide the appropriate service and accommodate the increasing demand while maintaining high quality and error free service. In this paper, we discuss the state of the art on using formal methods for the verification of cloud computing systems. Even though formal methods have been used successfully in the design and verification of several aspects of these systems, there are still many design issues in cloud computing that can be enhanced using formal methods. For instance, several scheduling algorithms are being used for cloud frameworks, such as Hadoop for instance, that are found to suffer from scheduling failures. This could have been avoided if the schedular has been properly verified. On the other hand, several new paradigms have evolved with cloud computing such as big data, these require fundamental changed on methods and algorithms that are being used for classical distributed systems, which in turn, increase the chance of having faulty systems that are difficult to highlight using only simulation methods.", "paper_title": "CHALLENGES IN FORMAL METHODS FOR TESTING AND VERIFICATION OF CLOUD COMPUTING SYSTEMS", "paper_id": "WOS:000361466500008"}