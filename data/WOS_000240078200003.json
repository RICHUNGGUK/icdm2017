{"auto_keywords": [{"score": 0.049698358871674404, "phrase": "asc"}, {"score": 0.00481495049065317, "phrase": "stream_compiler"}, {"score": 0.004682288586254123, "phrase": "field_programmable_gate_arrays"}, {"score": 0.004481132747216135, "phrase": "hardware-design_productivity_gap"}, {"score": 0.004392565073466714, "phrase": "available_transistors"}, {"score": 0.004220632461231742, "phrase": "vlsi"}, {"score": 0.0041703614123283165, "phrase": "fpga_computer-aided-design"}, {"score": 0.003975200317233532, "phrase": "software-like_programming_interface"}, {"score": 0.003789137457228946, "phrase": "hand-designed_circuits"}, {"score": 0.0035403060198952244, "phrase": "algorithm_level"}, {"score": 0.0034981163169818803, "phrase": "architecture_level"}, {"score": 0.003456427643307907, "phrase": "arithmetic_level"}, {"score": 0.0034016119212097826, "phrase": "gate_level"}, {"score": 0.003294566092612857, "phrase": "increased_productivity"}, {"score": 0.0032036590920314725, "phrase": "hardware_acceleration"}, {"score": 0.0031654684543975077, "phrase": "wide_range"}, {"score": 0.0030904433394138963, "phrase": "hardware_accelerators"}, {"score": 0.0030171910207671205, "phrase": "top_performance"}, {"score": 0.0029693204265884327, "phrase": "design-space_exploration"}, {"score": 0.00288736193515505, "phrase": "hardware-design_task"}, {"score": 0.0028529310661977577, "phrase": "software-design_process"}, {"score": 0.002796458145152894, "phrase": "gcc"}, {"score": 0.002686821995335494, "phrase": "hardware_netlist"}, {"score": 0.002623111480310373, "phrase": "hardware-design_productivity"}, {"score": 0.0025405019456703325, "phrase": "pure_software_development"}, {"score": 0.0024703502756471514, "phrase": "case_studies"}, {"score": 0.002373472641477602, "phrase": "gate_level-kasumi"}, {"score": 0.0022352169832099153, "phrase": "arithmetic_level-redundant_addition"}, {"score": 0.0021049977753042253, "phrase": "architecture_level-wavelet"}], "paper_keywords": ["design space exploration", " FPGAs", " hardware design"], "paper_abstract": "A stream compiler (ASC) for computing with field programmable gate arrays (FPGAs) emerges from the ambition to bridge the hardware-design productivity gap where the number of available transistors grows more rapidly than the productivity of very large scale integration (VLSI) and FPGA computer-aided-design (CAD) tools. ASC addresses this problem with a software-like programming interface to hardware design (FPGAs) while keeping the performance of hand-designed circuits at the same time. ASC improves productivity by letting the programmer optimize the implementation on the algorithm level, the architecture level, the arithmetic level, and the gate level, all within the same C++ program. The increased productivity of ASC is applied to the hardware acceleration of a wide range of applications. Traditionally, hardware accelerators are tediously handcrafted to achieve top performance. ASC simplifies design-space exploration of hardware accelerators by transforming the hardware-design task into a software-design process, using only \"GNU compiler collection (GCC)\" and \"make\" to obtain a hardware netlist. From experience, the hardware-design productivity and ease of use are close to pure software development. This paper presents results and case studies with optimizations that are: 1) on the gate level-Kasumi and International Data Encryption Algorithm (IDEA) encryptions; 2) on the arithmetic level-redundant addition and multiplication function evaluation for two-dimensional (2-D) rotation; and 3) on the architecture level-Wavelet and Lempel-Ziv (LZ)-like compression.", "paper_title": "ASC: A stream compiler for computing with FPGAs", "paper_id": "WOS:000240078200003"}