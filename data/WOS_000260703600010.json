{"auto_keywords": [{"score": 0.004363277689798392, "phrase": "single_machine"}, {"score": 0.004245476558619167, "phrase": "job-independent_penalties"}, {"score": 0.003953806321226277, "phrase": "detailed_classic_beam_search_algorithms"}, {"score": 0.003661987063211563, "phrase": "evaluation_functions"}, {"score": 0.003485824905231454, "phrase": "different_rules"}, {"score": 0.003373101013123386, "phrase": "beam_search_heuristics"}, {"score": 0.003318108914777263, "phrase": "computational_results"}, {"score": 0.0031932442564773468, "phrase": "beam_search_procedures"}, {"score": 0.0030562674358159945, "phrase": "dispatching_rule"}, {"score": 0.0028932554846476718, "phrase": "best_existing_heuristic"}, {"score": 0.0026942333853202556, "phrase": "detailed_beam_search_algorithm"}, {"score": 0.002650279521276126, "phrase": "best_performance"}, {"score": 0.002564505790176378, "phrase": "small_to_medium_size_instances"}, {"score": 0.0024143815950383647, "phrase": "excessive_computation_times"}, {"score": 0.0023749823753904204, "phrase": "recovering_beam_search_procedure"}, {"score": 0.002175436093794315, "phrase": "large_instances"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Scheduling", " Single machine", " Early/tardy", " Job-independent penalties", " Heuristics", " Beam search"], "paper_abstract": "In this paper, we present beam search heuristics for the single machine early/tardy scheduling problem with job-independent penalties, and no machine idle time. These heuristics include priority and detailed classic beam search algorithms, as well as filtered and recovering procedures. Three dispatching rules are considered as evaluation functions, in order to analyse the effect of different rules on the performance of the beam search heuristics. The computational results show that the performance of the beam search procedures does improve with the quality of the dispatching rule. The detailed and recovering algorithms clearly Outperform the best existing heuristic, and the improvement is particularly higher for the more difficult instances. The detailed beam search algorithm provides the best performance, and is recommended for small to medium size instances. For larger instances, however, this algorithm requires excessive computation times. The recovering beam search procedure is computationally more efficient, and is then the heuristic of choice for medium to large instances. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Beam search heuristics for the single machine early/tardy scheduling problem with no machine idle time", "paper_id": "WOS:000260703600010"}