{"auto_keywords": [{"score": 0.03130260918869616, "phrase": "dlv"}, {"score": 0.015719688796674732, "phrase": "disjunctive_logic_programming"}, {"score": 0.015242281098344832, "phrase": "backjumping_technique"}, {"score": 0.014951179991985027, "phrase": "stable_model_semantics"}, {"score": 0.004436545340717729, "phrase": "related_techniques"}, {"score": 0.004317109072311102, "phrase": "constraint_solving"}, {"score": 0.004200874581076468, "phrase": "propositional_satisfiability_testing"}, {"score": 0.004103728794623367, "phrase": "non-disjunctive_logic_programming"}, {"score": 0.0037516215763875225, "phrase": "new_theoretical_framework"}, {"score": 0.003693533648584145, "phrase": "sdlp"}, {"score": 0.0035660913513115267, "phrase": "disjunctive_setting"}, {"score": 0.0034971932704828197, "phrase": "reason_calculus"}, {"score": 0.0034700069041302003, "phrase": "associated_computations"}, {"score": 0.00337650257503995, "phrase": "traditional_approaches"}, {"score": 0.0030986716686217768, "phrase": "specific_aspects"}, {"score": 0.0030387767523076528, "phrase": "benign_way"}, {"score": 0.0029800360974218836, "phrase": "proposed_technique"}, {"score": 0.002756180088265064, "phrase": "hard_random_and_structured_instances"}, {"score": 0.002499798127196099, "phrase": "backjumping_method"}, {"score": 0.0023209828061385596, "phrase": "heuristic_functions"}, {"score": 0.002197443382039439, "phrase": "backjumping_performs"}, {"score": 0.002163367190715979, "phrase": "structured_satisfiability"}, {"score": 0.0021381565332182773, "phrase": "boolean_formula_instances"}, {"score": 0.0021049977753042253, "phrase": "search_space"}], "paper_keywords": ["Logic programming", " stable models", " backjumping", " experiments"], "paper_abstract": "In this work we present a backjumping technique for Disjunctive Logic Programming under the Stable Model Semantics (SDLP). It builds upon related techniques that had originally been introduced for constraint solving, which have been adapted to propositional satisfiability testing, and recently also to non-disjunctive logic programming under the stable model semantics (SLP) [1, 2]. We focus on backjumping without clause learning, providing a new theoretical framework for backjumping in SDLP, elaborating on and exploiting peculiarities of the disjunctive setting. We present a reason calculus and associated computations, which - compared to the traditional approaches - reduces the information to be stored, while fully preserving the correctness and the efficiency of the backjumping technique, handling specific aspects of disjunction in a benign way. We implemented the proposed technique in DLV, the state-of-the-art SDLP system. We have conducted several experiments on hard random and structured instances in order to assess the impact of backjumping. To this end, we have compared DLV in various versions: With and without the backjumping method described in this paper, in combination with two different heuristic functions. Our conclusion is that under any of the heuristic functions, DLV with backjumping is favourable to DLV without backjumping. DLV with backjumping performs particularly well on structured satisfiability and quantified boolean formula instances, where the search space and execution time are effectively cut.", "paper_title": "A backjumping technique for Disjunctive Logic Programming", "paper_id": "WOS:000238257300004"}