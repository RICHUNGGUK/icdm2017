{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hard_binary_csps"}, {"score": 0.04898285994723956, "phrase": "discrete_particle_swarm_algorithm"}, {"score": 0.03666309084995488, "phrase": "local_best_positions"}, {"score": 0.004632597963417253, "phrase": "binary_constraint_satisfaction_problems"}, {"score": 0.003702702337768558, "phrase": "min-conflict_heuristic"}, {"score": 0.002981885091155911, "phrase": "simulated_annealing_algorithm"}, {"score": 0.0027175263159330523, "phrase": "simulated_annealing"}, {"score": 0.0026143990748127253, "phrase": "era_model"}, {"score": 0.002554406040896888, "phrase": "repeated_particles"}, {"score": 0.0025151755329660837, "phrase": "tabu_list"}, {"score": 0.0022568866348667547, "phrase": "random_constraint_satisfaction_problem_instances"}, {"score": 0.002205079358459154, "phrase": "phase_transition_theory"}, {"score": 0.0021544587602892466, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "The discrete particle swarm algorithm for binary constraint satisfaction problems (CSPs) is analyzed in this paper. The analysis denotes that rho(1) and rho(2) are set to 0 may be a heuristic similar to min-conflict heuristic. The further observation is the impact of local best positions. A control parameter p(b) is introduced to reduce the effect of the local best positions. To improve the performance, simulated annealing algorithm is combined with the discrete particle swarm algorithm, and the neighborhood exploring in simulated annealing is carried out by ERA model. Eliminating repeated particles and Tabu list avoiding cycling are also introduced in this paper. Our hybrid algorithm is tested with random constraint satisfaction problem instances based on phase transition theory. The experimental results indicate that our hybrid discrete particle swarm algorithm is able to solve hard binary CSPs.", "paper_title": "A hybrid discrete particle swarm algorithm for hard binary CSPs", "paper_id": "WOS:000241892100024"}