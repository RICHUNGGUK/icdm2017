{"auto_keywords": [{"score": 0.038639607688939065, "phrase": "ewd"}, {"score": 0.00481495049065317, "phrase": "ewd_design_environment"}, {"score": 0.004537254814246843, "phrase": "complex_and_heterogeneous_embedded_systems"}, {"score": 0.004161553532799662, "phrase": "multiple_models"}, {"score": 0.003900257249255497, "phrase": "conformance_tests"}, {"score": 0.00385832528624328, "phrase": "syntactic_and_static_semantics"}, {"score": 0.0036159990127332315, "phrase": "multiple_moc_rnodeling"}, {"score": 0.0035771121569391916, "phrase": "simulation_framework"}, {"score": 0.0034629341517018438, "phrase": "moc_formalisms"}, {"score": 0.00342568771304873, "phrase": "model_construction"}, {"score": 0.003370565320453525, "phrase": "metamodeling_approach"}, {"score": 0.003193129886123359, "phrase": "translation_tools"}, {"score": 0.0031417377608722, "phrase": "executable_models"}, {"score": 0.002881255933884771, "phrase": "moc-specific_modeling_syntax"}, {"score": 0.0027443174539994925, "phrase": "execution_semantics"}, {"score": 0.0025857324180891526, "phrase": "parsing_and_translation_tools"}, {"score": 0.002530359917257626, "phrase": "xml-based_interoperability_language"}, {"score": 0.002410058288617039, "phrase": "executable_standard_ml"}, {"score": 0.002384118687666971, "phrase": "haskell"}, {"score": 0.0022830706430588482, "phrase": "existing_simulation_frameworks"}, {"score": 0.002246292543825748, "phrase": "sml-sys"}, {"score": 0.002127915423138391, "phrase": "metamodeling_driven_multitarget_design_environment"}, {"score": 0.0021049977753042253, "phrase": "multi-moc_modeling_capability"}], "paper_keywords": ["design", " languages", " verification", " metamodeling", " metamodel", " MoC", " functional language", " denotational semantics", " interoperable modeling language", " heterogeneous system design", " Ptolemy II", " SystemC", " ForSyDe"], "paper_abstract": "We present the EWD design environment and methodology, a modeling and simulation framework suited for complex and heterogeneous embedded systems with varying degrees of expressibility and modeling fidelity. This environment promotes the use of multiple models of computation (MoCs) to support heterogeneity and metamodeling for conformance tests of syntactic and static semantics during the process of modeling. Therefore, EWD is a multiple MoC rnodeling and simulation framework that ensures conformance of the MoC formalisms during model construction using a metamodeling approach. In addition, EWD provides a suite of translation tools that generate executable models for two simulation frameworks to demonstrate its language-independent modeling framework. The EWD methodology uses the Generic Modeling Environment for customization of the MoC-specific modeling syntax into a visual representation. To embed the execution semantics of the MoCs into the models, we have built parsing and translation tools that leverage an XML-based interoperability language. This interoperability language is then translated into executable Standard ML or Haskell models that can also be analyzed by existing simulation frameworks such as SML-Sys or ForSyDe. In summary, EWD is a metamodeling driven multitarget design environment with multi-MoC modeling capability.", "paper_title": "EWD: A metamodeling driven customizable multi-MoC system modeling framework", "paper_id": "WOS:000249095700014"}