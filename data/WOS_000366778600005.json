{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "component-level_exception_mechanism"}, {"score": 0.047905977291456965, "phrase": "android_programs"}, {"score": 0.04706226145554155, "phrase": "unexpected_exceptions"}, {"score": 0.045417031794566444, "phrase": "android_platform"}, {"score": 0.004682708592184678, "phrase": "recent_researches"}, {"score": 0.004388035083357706, "phrase": "current_design"}, {"score": 0.004267468074128779, "phrase": "java_exception_mechanism"}, {"score": 0.00413096972023037, "phrase": "component-based_structure"}, {"score": 0.004092830944740822, "phrase": "android"}, {"score": 0.0038708810091769856, "phrase": "robust_android_programs"}, {"score": 0.003678023470672862, "phrase": "intra-component_handler"}, {"score": 0.0034624082435775676, "phrase": "uncaught_exceptions"}, {"score": 0.0034303736977646135, "phrase": "caller_component"}, {"score": 0.0033515736929172644, "phrase": "component_activation_flow"}, {"score": 0.0032292292848296617, "phrase": "android_semantics"}, {"score": 0.003140401552000472, "phrase": "robustness_property"}, {"score": 0.0029288446848334576, "phrase": "domain-specific_library"}, {"score": 0.0028882701690741467, "phrase": "existing_android_components"}, {"score": 0.0028482561434303886, "phrase": "lightweight_approach"}, {"score": 0.0026811531172346676, "phrase": "android_benchmark_programs"}, {"score": 0.0025474193855847074, "phrase": "runtime_exceptions"}, {"score": 0.0022155569675462333, "phrase": "new_mechanism"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Android", " Java", " Exception", " Component", " Semantics"], "paper_abstract": "Recent researches have reported that Android programs are vulnerable to unexpected exceptions. One reason is that the current design of Android platform solely depends on Java exception mechanism, which is unaware of the component-based structure of Android programs. This paper proposes a component-level exception mechanism for programmers to build robust Android programs with. With the mechanism, they can define an intra-component handler for each component to recover from exceptions, and they can propagate uncaught exceptions to caller component along the reverse of component activation flow. Theoretically, we have formalized an Android semantics with exceptions to prove the robustness property of the mechanism. In practice, we have implemented the mechanism with a domain-specific library that extends existing Android components. This lightweight approach does not demand the change of the Android platform. In our experiment with Android benchmark programs, the library is found to catch a number of runtime exceptions that would otherwise get the programs terminated abnormally. We also measure the overhead of using the library to show that it is very small. Our proposal is a new mechanism for defending Android programs from unexpected exceptions. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A lightweight approach to component-level exception mechanism for robust android apps", "paper_id": "WOS:000366778600005"}