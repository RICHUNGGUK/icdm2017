{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "proxy_servers"}, {"score": 0.043367051214551706, "phrase": "delivery_schedule"}, {"score": 0.040170396999330976, "phrase": "proxy_server"}, {"score": 0.03800340820588704, "phrase": "memory_space"}, {"score": 0.0047515546458205046, "phrase": "video_staging"}, {"score": 0.004688989566904871, "phrase": "video_streaming_proxy_server"}, {"score": 0.004566308708871429, "phrase": "simultaneous_connections"}, {"score": 0.004526129302830441, "phrase": "media_servers"}, {"score": 0.004179991181159956, "phrase": "specific_arrival"}, {"score": 0.0040886093072615, "phrase": "arrival_schedules"}, {"score": 0.0040347380310668994, "phrase": "incoming_network_bandwidth"}, {"score": 0.003999217176949845, "phrase": "delivery_schedules"}, {"score": 0.003946519058822334, "phrase": "outgoing_network_bandwidth"}, {"score": 0.003759142310009214, "phrase": "sufficient_buffer"}, {"score": 0.0035806300393050926, "phrase": "disk_space"}, {"score": 0.003080548510001051, "phrase": "traditional_smoothing_algorithm"}, {"score": 0.0030399188412691914, "phrase": "video_staging_algorithm"}, {"score": 0.0029212075318449616, "phrase": "smoothing_algorithm"}, {"score": 0.002697474061842142, "phrase": "arrival_schedule"}, {"score": 0.0025806490053534316, "phrase": "delivery_schedule_pair"}, {"score": 0.002512990657100351, "phrase": "better_resource_utilization_rate"}, {"score": 0.0024798279465139688, "phrase": "different_parameter_sets"}, {"score": 0.0023101951336207955, "phrase": "network_bandwidth"}, {"score": 0.002289821830549781, "phrase": "disk_bandwidth"}, {"score": 0.0021809311689473493, "phrase": "inter-resource_scheduling"}, {"score": 0.0021049977753042253, "phrase": "video_streaming_proxy_server_system"}], "paper_keywords": ["variable-bit-rate video", " proxy server", " video smoothing", " video staging", " video streaming"], "paper_abstract": "A video streaming proxy server needs to handle hundreds of simultaneous connections between media servers and clients. Inside, every video arrived at the server and delivered from it follows a specific arrival and delivery schedule. While arrival schedules compete for incoming network bandwidth, delivery schedules compete for outgoing network bandwidth. As a result, a proxy server has to provide sufficient buffer and disk cache for storage, together with memory space, disk space and disk bandwidth. In order to optimize the throughput, a proxy server has to govern the usage of these resources. In this paper, we first analyze the property of a traditional smoothing algorithm and a video staging algorithm. Then we develop, based on the smoothing algorithm, a video staging algorithm for video streaming proxy servers. This algorithm allows us to devise an arrival schedule based on the delivery schedule. Under this arrival and delivery schedule pair, we can achieve a better resource utilization rate gracefully between different parameter sets. It is also interesting to note that the usage of the resources such as network bandwidth, disk bandwidth and memory space becomes interchangeable. It provides the basis for inter-resource scheduling to further improve the throughput of a video streaming proxy server system.", "paper_title": "Throughput optimization for video streaming proxy servers based on video staging", "paper_id": "WOS:000250766500004"}