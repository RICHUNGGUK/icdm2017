{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "idiomatic_traversals"}, {"score": 0.004620093797504386, "phrase": "new_ways"}, {"score": 0.004485735417293941, "phrase": "particular_class"}, {"score": 0.00443308765153716, "phrase": "effectful_haskell_programs"}, {"score": 0.004129873531628877, "phrase": "specific_problem"}, {"score": 0.0040097139701644165, "phrase": "binary_trees"}, {"score": 0.0038930368103015467, "phrase": "general_inversion_law"}, {"score": 0.003562912424153324, "phrase": "arbitrary_traversable_type"}, {"score": 0.00314708280192844, "phrase": "suitable_sense"}, {"score": 0.002966438503447793, "phrase": "inversion_law"}, {"score": 0.002651213849567608, "phrase": "traversable_functors"}, {"score": 0.002620040660435039, "phrase": "finitary_containers"}, {"score": 0.002573965014439041, "phrase": "arbitrary_traversable_object"}, {"score": 0.002155412043665635, "phrase": "special_idiom"}, {"score": 0.0021049977753042253, "phrase": "free_applicative_functor"}], "paper_keywords": ["applicative functors", " finitary containers", " idioms", " monads", " traversable functors"], "paper_abstract": "We present new ways of reasoning about a particular class of effectful Haskell programs, namely those expressed as idiomatic traversals. Starting out with a specific problem about labelling and unlabelling binary trees, we extract a general inversion law, applicable to any monad, relating a traversal over the elements of an arbitrary traversable type to a traversal that goes in the opposite direction. This law can be invoked to show that, in a suitable sense, unlabelling is the inverse of labelling. The inversion law, as well as a number of other properties of idiomatic traversals, is a corollary of a more general theorem characterising traversable functors as finitary containers: an arbitrary traversable object can be decomposed uniquely into shape and contents, and traversal be understood in terms of those. Proof of the theorem involves the properties of traversal in a special idiom related to the free applicative functor.", "paper_title": "Understanding Idiomatic Traversals Backwards and Forwards", "paper_id": "WOS:000331119900003"}