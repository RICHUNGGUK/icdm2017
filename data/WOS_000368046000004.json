{"auto_keywords": [{"score": 0.043113908496203925, "phrase": "vm"}, {"score": 0.00481495049065317, "phrase": "ubiquitous_high_performance_computing"}, {"score": 0.004734987730139094, "phrase": "ubiquitous_high-performance_computing"}, {"score": 0.004579005794486596, "phrase": "concurrent_services"}, {"score": 0.004502943680955863, "phrase": "important_task"}, {"score": 0.004354572391793908, "phrase": "major_development_effort"}, {"score": 0.0041642891310893, "phrase": "virtual_machine"}, {"score": 0.00400459716272594, "phrase": "helpful_solution"}, {"score": 0.0038725824361608243, "phrase": "additional_overhead_costs"}, {"score": 0.003641713874009232, "phrase": "device_driver"}, {"score": 0.003405472159599445, "phrase": "vm_technique"}, {"score": 0.0032383707002544755, "phrase": "alternative_approach"}, {"score": 0.00306227185008558, "phrase": "virtualized_middleware"}, {"score": 0.0028635111041882956, "phrase": "proposed_approach"}, {"score": 0.002815864555488112, "phrase": "userspace_transparency"}, {"score": 0.002784540221128404, "phrase": "contention_management"}, {"score": 0.002722930209707764, "phrase": "vm_concept"}, {"score": 0.0024620842899061614, "phrase": "vm_memory_mechanism"}, {"score": 0.0024211009463218484, "phrase": "zero-copy_buffers"}, {"score": 0.0023021895404322767, "phrase": "uware"}, {"score": 0.002189105604712615, "phrase": "broad_variety"}, {"score": 0.002164738347530832, "phrase": "uhpc."}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Middleware", " Ubiquitous high performance computing", " Virtualization", " Concurrency control"], "paper_abstract": "In ubiquitous high-performance computing (UHPC), performing concurrent services is an important task of middleware. Because a major development effort is not easily achieved, isolating a virtual machine (VM) may be a helpful solution but will likely suffer from additional overhead costs. This challenge can also be resolved by reusing the device driver. However, these solutions are difficult to implement without the VM technique. In this study, we present an alternative approach to minimizing overhead and develop a middleware called userspace virtualized middleware (Uware). Instead of bypassing the VM, the proposed approach depends on userspace transparency and contention management to shift the VM concept into middleware. We introduce two strategies to enhance the system adaptively: comprehensive restructuring by simplifying the VM memory mechanism and implementing zero-copy buffers to reuse devices. The result demonstrates that Uware is feasible and could be applied in a broad variety of UHPC. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "A virtualization approach to develop middleware for ubiquitous high performance computing", "paper_id": "WOS:000368046000004"}