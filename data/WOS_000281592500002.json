{"auto_keywords": [{"score": 0.0496729815270419, "phrase": "web_services"}, {"score": 0.007559318376475325, "phrase": "automatic_web_service_composition"}, {"score": 0.0058826456917072745, "phrase": "automatic_web_service_composition_algorithms"}, {"score": 0.00481495049065317, "phrase": "huge_amount"}, {"score": 0.004459605573798577, "phrase": "online_requests"}, {"score": 0.004112812699639956, "phrase": "frequent_request"}, {"score": 0.00387459052649752, "phrase": "individual_services"}, {"score": 0.0038090874465452214, "phrase": "added-value_composite_web_service"}, {"score": 0.0033660587983313536, "phrase": "new_composite_web_service"}, {"score": 0.0032950412841674026, "phrase": "key_enabling_features"}, {"score": 0.003211788912325178, "phrase": "semantic_web"}, {"score": 0.0031440159350875057, "phrase": "successful_methods"}, {"score": 0.0029116257477000617, "phrase": "composition_methods"}, {"score": 0.0027662954811372175, "phrase": "light_weight"}, {"score": 0.002742787059497186, "phrase": "scalable_testbed"}, {"score": 0.0026058621464926826, "phrase": "mandatory_components"}, {"score": 0.0024547103576350233, "phrase": "extension_mechanisms"}, {"score": 0.002362192695471035, "phrase": "reference_implementations"}, {"score": 0.002342110338541984, "phrase": "web_service_matchmaking"}, {"score": 0.0021049977753042253, "phrase": "composition_method"}], "paper_keywords": ["Semantic web", " Web service", " Automatic service composition", " Testbed"], "paper_abstract": "A huge amount of web services are deployed on the Web, nowadays. These services can be used to fulfill online requests. Requests are getting more and more complicated over time. So, there exists a lot of frequent request that cannot be fulfilled using just one web service. For using web services, composing individual services to create the added-value composite web service to fulfill the user request is necessary in most cases. Web services can be composed manually but it is a too tedious and time consuming task. The ability of automatic web service composition to create a new composite web service is one of the key enabling features for the future for the semantic web. There are some successful methods for automatic web service composition, but the lack of standard, open, and lightweight test environment makes the comparison and evaluation of these composition methods impossible. In this paper we propose an architecture for a light weight and scalable testbed to execute, test and evaluate automatic web service composition algorithms. The architecture provides mandatory components for implementing and evaluation of automatic web service composition algorithms. Also, this architecture provides some extension mechanisms to extend its default functionalities. We have also given reference implementations for web service matchmaking and composition. Also, some scenarios for testing and evaluating the testbed are given. We have found that the performance of the composition method will dramatically decrease as the number of web services increases. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Semantic web service composition testbed", "paper_id": "WOS:000281592500002"}