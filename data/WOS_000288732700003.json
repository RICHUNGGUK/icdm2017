{"auto_keywords": [{"score": 0.03867712206987224, "phrase": "rapid_development"}, {"score": 0.00481495049065317, "phrase": "modularized_software_development"}, {"score": 0.0047689174754929195, "phrase": "evolution_robustness"}, {"score": 0.004416079619543104, "phrase": "intrinsic_high_complexity"}, {"score": 0.004352876088312741, "phrase": "increasing_demands"}, {"score": 0.00429057323623293, "phrase": "quick-service-ready_paradigm"}, {"score": 0.003934970057482768, "phrase": "insufficient_guidance"}, {"score": 0.0038047474331318974, "phrase": "software_engineering"}, {"score": 0.003643607569483598, "phrase": "qualified_business_software"}, {"score": 0.0034063576796640603, "phrase": "pattern-based_software_development"}, {"score": 0.0032777653153451265, "phrase": "pattern-based_software_framework"}, {"score": 0.0030203487665054806, "phrase": "web_applications"}, {"score": 0.002837188425640173, "phrase": "software_patterns"}, {"score": 0.002690886043654469, "phrase": "system_development"}, {"score": 0.0026523079380037706, "phrase": "business_rules"}, {"score": 0.002527654365712841, "phrase": "developer's_lack"}, {"score": 0.0025034338848015166, "phrase": "business_experiences"}, {"score": 0.002432152706473349, "phrase": "suitable_pattern-based_software_framework"}, {"score": 0.002208853811052348, "phrase": "software_evolution_robustness"}, {"score": 0.0021771713131746636, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software standardization and integration", " Evolution robustness", " Design pattern", " Framework"], "paper_abstract": "Context: Software development is now facing much more challenges than ever before due to the intrinsic high complexity and the increasing demands of the quick-service-ready paradigm. Objective: As the developers are now called for more quality software systems from the industries, there is insufficient guidance from the methodologies and standards of software engineering that can provide assistance to the rapid development of qualified business software. Method: In this work, we discuss the advantages of the pattern-based software development. We verify the benefits using a pattern-based software framework called OS2F, and a corresponding system design architecture that is intended for the rapid development of web applications. Results: The objective of the framework/architecture is that, through software patterns, developers should be able to separate the work of system development from the business rules so as to reduce the problems caused by a developer's lack of business experiences. Conclusion: Through a suitable pattern-based software framework, the quality of the product can thus be enhanced, software development time and cost decreased, and software evolution robustness improved. Crown Copyright (C) 2010 Published by Elsevier B.V. All rights reserved.", "paper_title": "Pattern-based framework for modularized software development and evolution robustness", "paper_id": "WOS:000288732700003"}