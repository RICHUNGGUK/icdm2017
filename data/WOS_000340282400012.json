{"auto_keywords": [{"score": 0.03992659287798474, "phrase": "ecd"}, {"score": 0.015527715337322799, "phrase": "wireless_sensor_networks"}, {"score": 0.015338039638095154, "phrase": "wireless_reprogramming"}, {"score": 0.00481495049065317, "phrase": "link_quality_aware_code_dissemination"}, {"score": 0.004610058444728656, "phrase": "crucial_technique"}, {"score": 0.004553128404612054, "phrase": "software_deployment"}, {"score": 0.004359328949187473, "phrase": "code_dissemination"}, {"score": 0.004278807087784626, "phrase": "basic_building_block"}, {"score": 0.003617616153730564, "phrase": "dynamically_configurable_packet_sizes"}, {"score": 0.003506851152129303, "phrase": "packet_size"}, {"score": 0.0034634973175137486, "phrase": "high_phy_rate_radios"}, {"score": 0.003336614511719501, "phrase": "transmission_efficiency"}, {"score": 0.0031944286166257466, "phrase": "accurate_sender_selection_algorithm"}, {"score": 0.003135356056324338, "phrase": "transmission_collisions"}, {"score": 0.0030582832134483685, "phrase": "poor_links"}, {"score": 0.0029279232349513724, "phrase": "simple_impact-based_backoff_timer_design"}, {"score": 0.0027857115172243226, "phrase": "multiple_eligible_senders"}, {"score": 0.0027172101552870973, "phrase": "largest_impact_sender"}, {"score": 0.002429161048032688, "phrase": "testbed_experiments"}, {"score": 0.0022542611024997474, "phrase": "-the-art_protocols"}, {"score": 0.0021988036841154605, "phrase": "mnp"}, {"score": 0.002131383155056741, "phrase": "completion_time"}, {"score": 0.0021049977753042253, "phrase": "data_traffic"}], "paper_keywords": ["Wireless sensor network", " dissemination", " reprogramming"], "paper_abstract": "Wireless reprogramming is a crucial technique for software deployment in wireless sensor networks (WSNs). Code dissemination is a basic building block to enable wireless reprogramming. We present ECD, an Efficient Code Dissemination protocol leveraging 1-hop link quality information based on the TinyOS platform. Compared to prior works, ECD has three salient features. First, it supports dynamically configurable packet sizes. By increasing the packet size for high PHY rate radios, it significantly improves the transmission efficiency. Second, it employs an accurate sender selection algorithm to mitigate transmission collisions and transmissions over poor links. Third, it employs a simple impact-based backoff timer design to shorten the time spent in coordinating multiple eligible senders so that the largest impact sender is most likely to transmit. We implement ECD based on TinyOS and evaluate its performance extensively via testbed experiments and simulations. Results show that ECD outperforms state-of-the-art protocols, Deluge and MNP, in terms of completion time and data traffic (e.g., about 20 percent less traffic and 20-30 percent shorter completion time compared to Deluge).", "paper_title": "Link Quality Aware Code Dissemination in Wireless Sensor Networks", "paper_id": "WOS:000340282400012"}