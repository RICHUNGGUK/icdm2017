{"auto_keywords": [{"score": 0.004824363938601528, "phrase": "approximation"}, {"score": 0.004776222767100612, "phrase": "mapreduce"}, {"score": 0.004298666679374568, "phrase": "chosen_initial_centers"}, {"score": 0.004229556887896042, "phrase": "proper_initialization"}, {"score": 0.00412796126884884, "phrase": "ideal_solution"}, {"score": 0.003700037700138249, "phrase": "optimal_one"}, {"score": 0.0034817084307034955, "phrase": "data_increases"}, {"score": 0.003223494720348768, "phrase": "mapreduce_jobs"}, {"score": 0.0031459887611258765, "phrase": "k_centers"}, {"score": 0.0030455297429878873, "phrase": "mapper_phase"}, {"score": 0.0029482691362918423, "phrase": "reducer_phase"}, {"score": 0.0028425481299483254, "phrase": "multiple_machines"}, {"score": 0.0028081546657056948, "phrase": "single_machine"}, {"score": 0.002537216271965659, "phrase": "optimal_solution"}, {"score": 0.002466139325703204, "phrase": "expensive_distance_computation"}, {"score": 0.002436289099444074, "phrase": "proposed_method"}, {"score": 0.0023776656246300063, "phrase": "pruning_strategy"}, {"score": 0.002320449502337321, "phrase": "large_number"}, {"score": 0.0023016843709107297, "phrase": "redundant_distance_computations"}, {"score": 0.0022830706430588482, "phrase": "extensive_experiments"}, {"score": 0.002264607102799332, "phrase": "real_and_synthetic_data"}, {"score": 0.0022190974300886467, "phrase": "performance_results"}, {"score": 0.0021049977753042253, "phrase": "good_approximation"}], "paper_keywords": ["Clustering algorithms", " k-means", " k-means plus", " MapReduce", " approximation", " scalability"], "paper_abstract": "k-means is undoubtedly one of the most popular clustering algorithms owing to its simplicity and efficiency. However, this algorithm is highly sensitive to the chosen initial centers and thus a proper initialization is crucial for obtaining an ideal solution. To address this problem, k-means++ is proposed to sequentially choose the centers so as to achieve a solution that is provably close to the optimal one. However, due to its weak scalability, k-means++ becomes inefficient as the size of data increases. To improve its scalability and efficiency, this paper presents MapReduce k-means++ method which can drastically reduce the number of MapReduce jobs by using only one MapReduce job to obtain k centers. The k-means++ initialization algorithm is executed in the Mapper phase and the weighted k-means++ initialization algorithm is run in the Reducer phase. As this new MapReduce k-means++ method replaces the iterations among multiple machines with a single machine, it can reduce the communication and I/O costs significantly. We also prove that the proposed MapReduce k-means++ method obtains O(alpha(2)) approximation to the optimal solution of k-means. To reduce the expensive distance computation of the proposed method, we further propose a pruning strategy that can greatly avoid a large number of redundant distance computations. Extensive experiments on real and synthetic data are conducted and the performance results indicate that the proposed MapReduce k-means++ method is much more efficient and can achieve a good approximation.", "paper_title": "Efficient k-Means plus plus Approximation with MapReduce", "paper_id": "WOS:000347015800009"}