{"auto_keywords": [{"score": 0.01382847317958117, "phrase": "steiner"}, {"score": 0.00481495049065317, "phrase": "dynamic_steiner_trees"}, {"score": 0.004687645903373103, "phrase": "fully_dynamic_self-stabilizing_algorithm"}, {"score": 0.004625255533545965, "phrase": "dynamic_steiner_tree_problem"}, {"score": 0.004563691742821759, "phrase": "steiner_tree_problem"}, {"score": 0.004154995396099332, "phrase": "steiner_group"}, {"score": 0.0040996651541091575, "phrase": "s._steiner_trees"}, {"score": 0.004063186599879217, "phrase": "good_candidates"}, {"score": 0.003991196463806465, "phrase": "communication_primitives"}, {"score": 0.003868257410961701, "phrase": "essential_building_blocks"}, {"score": 0.0037827603118271757, "phrase": "middleware_architectures"}, {"score": 0.003732368382223596, "phrase": "new_emergent_networks"}, {"score": 0.003397866151093552, "phrase": "optimal_steiner_tree"}, {"score": 0.0033227310662785293, "phrase": "existing_solutions"}, {"score": 0.0030248298759040695, "phrase": "ordinary_nodes"}, {"score": 0.002741269087816162, "phrase": "nodes_memory_corruption"}, {"score": 0.002506562885555113, "phrase": "correct_configuration"}, {"score": 0.0023021895404322767, "phrase": "steiner_tree_service"}, {"score": 0.002271476019266231, "phrase": "stabilization_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Self-stabilization", " Dynamic Steiner tree", " Multicast", " Message passing networks"], "paper_abstract": "This paper proposes a fully dynamic self-stabilizing algorithm for the dynamic Steiner tree problem. The Steiner tree problem aims at constructing a Minimum Spanning Tree (MST) over a subset of nodes called Steiner members, or Steiner group usually denoted S. Steiner trees are good candidates to efficiently implement communication primitives such as publish/subscribe or multicast, essential building blocks in the design of middleware architectures for the new emergent networks (e.g., P2P, sensor or adhoc networks). Our algorithm returns a log(broken vertical bar S broken vertical bar)-approximation of the optimal Steiner tree. It improves over existing solutions in several ways. First, it is fully dynamic, in other words it withstands the dynamism when both the group members and ordinary nodes can join or leave the network. Next, our algorithm is self-stabilizing, that is, it copes with nodes memory corruption. Last but not least, our algorithm is super-stabilizing. That is, while converging to a correct configuration (i.e., a Steiner tree) after a modification of the network, it keeps offering the Steiner tree service during the stabilization time to all members that have not been affected by this modification. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "A super-stabilizing log(n)-approximation algorithm for dynamic Steiner trees", "paper_id": "WOS:000323872400006"}