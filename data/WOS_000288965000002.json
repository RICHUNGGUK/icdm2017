{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "soc_middleware"}, {"score": 0.004563427013973105, "phrase": "service-oriented_computing"}, {"score": 0.0040334640350288, "phrase": "existing_distributed_computing_technologies"}, {"score": 0.003990385737207714, "phrase": "composition_and_interaction_issues"}, {"score": 0.0039055990919333082, "phrase": "central_concerns"}, {"score": 0.0038431888954930083, "phrase": "soc_applications"}, {"score": 0.0037615180375561805, "phrase": "heterogeneous_and_distributed_processes"}, {"score": 0.0036227329311981195, "phrase": "inter-organizational_service_integration"}, {"score": 0.003451766520526601, "phrase": "complex_process_requirements"}, {"score": 0.0034148795808317555, "phrase": "different_types"}, {"score": 0.0027395968397212053, "phrase": "process_view"}, {"score": 0.002568435291444709, "phrase": "system_integration"}, {"score": 0.0025409639091476363, "phrase": "service_composition"}, {"score": 0.002447101794397243, "phrase": "proposed_soc_middleware"}, {"score": 0.002407941567598653, "phrase": "flowengine"}, {"score": 0.002306543826130521, "phrase": "contemporary_web_services_technologies"}, {"score": 0.0022696277881969896, "phrase": "experimental_case_study"}, {"score": 0.002233301265743633, "phrase": "e-governmental_environment"}, {"score": 0.0021049977753042253, "phrase": "complex_inter-organizational_processes"}], "paper_keywords": ["Cross-Organizational Process View", " Decomposition Methodology", " E-Government", " Exceptions", " Flows", " Web Services"], "paper_abstract": "Service-Oriented Computing (SOC) has recently gained attention both within industry and academia; however, its characteristics cannot be easily solved using existing distributed computing technologies. Composition and interaction issues have been the central concerns, because SOC applications are composed of heterogeneous and distributed processes. To tackle the complexity of inter-organizational service integration, the authors propose a methodology to decompose complex process requirements into different types of flows, such as control, data, exception, and security. The subset of each type of flow necessary for the interactions with each partner can be determined in each service. These subsets collectively constitute a process view, based on which interactions can be systematically designed and managed for system integration through service composition. The authors illustrate how the proposed SOC middleware, named FlowEngine, implements and manages these flows with contemporary Web services technologies. An experimental case study in an e-governmental environment further demonstrates how the methodology can facilitate the design of complex inter-organizational processes.", "paper_title": "Service Composition and Interaction in a SOC Middleware Supporting Separation of Concerns with Flows and Views", "paper_id": "WOS:000288965000002"}