{"auto_keywords": [{"score": 0.047948928662235685, "phrase": "mathematical_model"}, {"score": 0.03633768465921191, "phrase": "denotational_semantics"}, {"score": 0.00481495049065317, "phrase": "provably_correct_translation"}, {"score": 0.004232702713825967, "phrase": "simply_typed_lambda-calculus"}, {"score": 0.004013843843250455, "phrase": "mathematical_proof"}, {"score": 0.0036093693971289754, "phrase": "suitable_fragment"}, {"score": 0.003320277992107974, "phrase": "formal_translation"}, {"score": 0.0027254466299651936, "phrase": "completeness_result"}, {"score": 0.0021049977753042253, "phrase": "correct_result"}], "paper_keywords": ["Functional programming", " Object-oriented programming", " Inheritance", " Simply typed lambda-calculus", " Denotational semantics", " Kripke-style logical relation", " Correctness proof"], "paper_abstract": "We introduce a translation of the simply typed lambda-calculus into C++, and give a mathematical proof of the correctness of this translation. For this purpose we develop a suitable fragment of C++ together with a denotational semantics. We introduce a formal translation of the lambda-calculus into this fragment, and show that this translation is correct with respect to the denotational semantics. We show as well a completeness result, namely that by translating lambda-terms we obtain essentially all C++ terms in this fragment. We introduce a mathematical model for the evaluation of programs of this fragment, and show that the evaluation computes the correct result with respect to this semantics.", "paper_title": "A Provably Correct Translation of the lambda-Calculus into a Mathematical Model of C plus", "paper_id": "WOS:000261345700002"}