{"auto_keywords": [{"score": 0.02839491365475632, "phrase": "traditional_instruction"}, {"score": 0.012066824516994189, "phrase": "cs_languages"}, {"score": 0.011656889167808817, "phrase": "small_pieces"}, {"score": 0.011496795583877227, "phrase": "cs_language"}, {"score": 0.00481495049065317, "phrase": "scalable_game_engine"}, {"score": 0.0047815456178508815, "phrase": "computer_science_languages"}, {"score": 0.00467185299669322, "phrase": "computer_science"}, {"score": 0.004532988904965752, "phrase": "new_jobs"}, {"score": 0.004491093879657087, "phrase": "personal_growth"}, {"score": 0.00428733103049275, "phrase": "new_tools"}, {"score": 0.004237845317333986, "phrase": "wider_audience"}, {"score": 0.004208427318712072, "phrase": "game-based_learning"}, {"score": 0.00399881984083004, "phrase": "different_levels"}, {"score": 0.0037383254707271905, "phrase": "flexible_and_scalable_architecture"}, {"score": 0.003320561182494713, "phrase": "game_design"}, {"score": 0.003282197445772301, "phrase": "game_model"}, {"score": 0.00322173228196031, "phrase": "incremental_learning"}, {"score": 0.0032067902832512833, "phrase": "cs_language_structures"}, {"score": 0.0030897146022309517, "phrase": "educational_videogame"}, {"score": 0.003061117663080156, "phrase": "xml_markup_language"}, {"score": 0.0029084868804220686, "phrase": "text_console"}, {"score": 0.002737859907164783, "phrase": "undergraduate_students"}, {"score": 0.00272543218166803, "phrase": "cs"}, {"score": 0.0027125107079553675, "phrase": "social_sciences"}, {"score": 0.0026256177509198625, "phrase": "slides_presentation"}, {"score": 0.0024830688817246995, "phrase": "whole_experience"}, {"score": 0.0023103100997344072, "phrase": "educational_gain"}, {"score": 0.0022889103976458437, "phrase": "game-based_instructional_approach"}, {"score": 0.002149545057757726, "phrase": "new_programming_languages"}, {"score": 0.0021049977753042253, "phrase": "new_comers"}], "paper_keywords": ["Application software", " educational technology", " software architecture", " computer programming", " educational videogames"], "paper_abstract": "Every day, more people are interested in learning computer science (CS), either to improve their skill set to apply for new jobs or just for personal growth. The sector of the population looking for instruction on these subjects has increased and diversified. We need new tools that appeal to this wider audience, and game-based learning is one of the most promising approaches at the moment. There is a need for more scalable game-based instruction paradigms that can be easily adapted to different levels of complexity and content related to CS (different programming languages, different programming paradigms, and so on). Throughout this paper, we present a flexible and scalable architecture to create videogames for learning CS languages. The architecture is based on the idea that students control the game using small pieces of text written in some CS language. The keys of the scalability of our approach are: 1) it separates the CS language used to write the programs from the game design and 2) the game model provides a system of levels that allows incremental learning of CS language structures. As validation and implementation of our approach, we developed Lost in Space, an educational videogame to teach the XML markup language. In this game, the player travels through several levels, guiding a spaceship by introducing small pieces of XML in a text console. Players can move and rotate the ship among other power-ups that get unblocked as they advances in the game. The game was tested with undergraduate students from CS and social sciences, by comparing it with traditional instruction (i.e., a teacher with a slides presentation). Students who played the game were much more engaged than those who attended the lecture, showing a more active attitude throughout the whole experience and also spent more time practicing after class. Findings also suggest that the game was effective for instruction, regardless of the background of the students. However, the educational gain observed with the game-based instructional approach, although effective, was not significantly higher than traditional instruction. We think that our approach is adequate to introduce CS languages in general, as well as new programming languages, and seems to be more appealing to new comers than traditional instruction.", "paper_title": "Building a Scalable Game Engine to Teach Computer Science Languages", "paper_id": "WOS:000372658300008"}