{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "eri"}, {"score": 0.03614151065104426, "phrase": "sorting_functionality"}, {"score": 0.0047464608267006395, "phrase": "simd_execution"}, {"score": 0.0047013405841819025, "phrase": "large-scale_hartree-fock_scf."}, {"score": 0.004634459424542272, "phrase": "resurgent_attractiveness"}, {"score": 0.004376273644295806, "phrase": "high-performance_computing_applications"}, {"score": 0.0039774255771053675, "phrase": "simd"}, {"score": 0.003828187766572941, "phrase": "electron_repulsion_integral"}, {"score": 0.003702206069379459, "phrase": "essentially_\"simd-ify"}, {"score": 0.0034790978593553794, "phrase": "low_throughput"}, {"score": 0.0033806943112103397, "phrase": "greater_awareness"}, {"score": 0.003348513474852869, "phrase": "computer_architecture"}, {"score": 0.0031018195951638882, "phrase": "system_performance_analysis"}, {"score": 0.00305762327908599, "phrase": "memory_locality_analysis"}, {"score": 0.002611010097359509, "phrase": "workload_characteristics"}, {"score": 0.0025861368747446324, "phrase": "expected_performance"}, {"score": 0.002372649454733251, "phrase": "potential_performance"}, {"score": 0.0022509365210787993, "phrase": "conventional_cpus"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Hartree-Fock Self Consistent Field", " Electron Repulsion Integrals", " single-instruction-multiple-data processing"], "paper_abstract": "Given the resurgent attractiveness of single-instruction-multiple-data (SIMD) processing, it is important for high-performance computing applications to be SIMD-capable. The Hartree-Fock SCF (HF-SCF) application, in it's canonical form, cannot fully exploit SIMD) processing. Prior attempts to implement Electron Repulsion Integral (ERI) sorting functionality to essentially \"SIMD-ify\" the HF-SCF application have met frustration because of the low throughput of the sorting functionality. With greater awareness of computer architecture, we discuss how the sorting functionality may be practically implemented to provide high-performance. Overall system performance analysis, including memory locality analysis, is also conducted, and further emphasises that a system with ERI sorting is capable of very high throughput. We discuss two alternative implementation options, with one immediately accessible software-based option discussed in detail. The impact of workload characteristics on expected performance is also discussed, and it is found that in general as basis set size increases the potential performance of the system also increases. Consideration is given to conventional CPUs, GPUs, FPGAs, and the Cell Broadband Engine architecture. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "On ERI sorting for SIMD execution of large-scale Hartree-Fock SCF", "paper_id": "WOS:000256736900004"}