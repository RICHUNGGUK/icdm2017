{"auto_keywords": [{"score": 0.03033967241857671, "phrase": "unbounded_budget"}, {"score": 0.029017038111344675, "phrase": "best_known_approximation_factor"}, {"score": 0.00481495049065317, "phrase": "processing_time"}, {"score": 0.004768012159430855, "phrase": "non-negative_weight"}, {"score": 0.004675497336655545, "phrase": "possible_time_intervals"}, {"score": 0.00445195298244008, "phrase": "processing_cost"}, {"score": 0.004351305527177264, "phrase": "feasible_subset"}, {"score": 0.0042668414931947615, "phrase": "single_machine"}, {"score": 0.004197703302809062, "phrase": "total_weight"}, {"score": 0.003919299546627271, "phrase": "budgeted_real-time_scheduling"}, {"score": 0.0038181472934630347, "phrase": "special_case"}, {"score": 0.0037195959056754444, "phrase": "well-known_real-time_scheduling_problem"}, {"score": 0.0035999631751991385, "phrase": "real-time_scheduling"}, {"score": 0.003231722251475338, "phrase": "real-time_scheduling_problem"}, {"score": 0.003168921495806216, "phrase": "vehicle_scheduling"}, {"score": 0.0031482594269532254, "phrase": "linear_combinatorial_auctions"}, {"score": 0.0031175187897991632, "phrase": "quality-of-service"}, {"score": 0.0030870755475461494, "phrase": "internet_connections"}, {"score": 0.002948883844627217, "phrase": "brso"}, {"score": 0.0029212741387197516, "phrase": "np"}, {"score": 0.002471248834609488, "phrase": "better_ratios"}, {"score": 0.002447101794397243, "phrase": "simpler_approximation_algorithms"}, {"score": 0.002391670093694849, "phrase": "special_cases"}, {"score": 0.0023298518405721804, "phrase": "budgeted_job_interval_selection_problem"}, {"score": 0.0022920276083063947, "phrase": "budgeted_jisp"}, {"score": 0.0021049977753042253, "phrase": "multiple_machines"}], "paper_keywords": ["real-time scheduling", " job interval selection", " approximation algorithms"], "paper_abstract": "Suppose that we are given a set of jobs, where each job has a processing time, a non-negative weight, and a set of possible time intervals in which it can be processed. In addition, each job has a processing cost. Our goal is to schedule a feasible subset of the jobs on a single machine, such that the total weight is maximized, and the cost of the schedule is within a given budget. We refer to this problem as budgeted real-time scheduling (BRS). Indeed, the special case where the budget is unbounded is the well-known real-time scheduling problem. The second problem that we consider is budgeted real-time scheduling with overlaps (BRSO), in which several jobs may be processed simultaneously, and the goal is to maximize the time in which the machine is utilized. Our two variants of this real-time scheduling problem have important applications, in vehicle scheduling, linear combinatorial auctions, and Quality-of-Service management for Internet connections. These problems are the focus of this paper. Both BRS and BRSO are strongly NP-hard, even with unbounded budget. Our main results are (2 + epsilon)-approximation algorithms for these problems. This ratio coincides with the best known approximation factor for the (unbudgeted) real-time scheduling problem, and is slightly weaker than the best known approximation factor of e/(e - 1) for the (unbudgeted) real-time scheduling with overlaps, presented in this paper. We show that better ratios (or simpler approximation algorithms) can be derived for some special cases, including instances with unit-costs and the budgeted job interval selection problem (JISP). Budgeted JISP is shown to be APX-hard even when overlaps are allowed and with unbounded budget. Finally, our results can be extended to instances with multiple machines.", "paper_title": "Real-time scheduling with a budget", "paper_id": "WOS:000244834400008"}