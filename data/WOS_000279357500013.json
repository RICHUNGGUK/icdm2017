{"auto_keywords": [{"score": 0.04917503970392541, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "managed_languages"}, {"score": 0.004461359547152617, "phrase": "hard_real-time_systems"}, {"score": 0.004186534737631288, "phrase": "garbage_collection_algorithms"}, {"score": 0.0041074234667687875, "phrase": "predictable_space-and-time_performance"}, {"score": 0.003525861581971337, "phrase": "time-and-space_worst-case_bounds"}, {"score": 0.0033508547759861186, "phrase": "mark-region_collection"}, {"score": 0.003144222265269426, "phrase": "separate_replication-copying_collection"}, {"score": 0.002931569771634119, "phrase": "external_fragmentation"}, {"score": 0.002857849698346116, "phrase": "small_heaps"}, {"score": 0.0026815368507715, "phrase": "fiji_vm"}, {"score": 0.0025160740422447837, "phrase": "mission-critical_systems"}, {"score": 0.0024372021710656585, "phrase": "thorough_experimental_evaluation"}, {"score": 0.002391067964886602, "phrase": "wide_variety"}, {"score": 0.002316105585203396, "phrase": "server-class_and_embedded_systems"}, {"score": 0.0021593396036472777, "phrase": "previous_schemes"}], "paper_keywords": ["Algorithms", " Experimentation", " Languages", " Measurement", " Performance", " Reliability", " fragmentation", " real-time", " mark-sweep", " mark-region", " replication-copying"], "paper_abstract": "Managed languages such as Java and C# are being considered for use in hard real-time systems. A hurdle to their widespread adoption is the lack of garbage collection algorithms that offer predictable space-and-time performance in the face of fragmentation. We introduce SCHISM/CMR, a new concurrent and realtime garbage collector that is fragmentation tolerant and guarantees time-and-space worst-case bounds while providing good throughput. SCHISM/CMR combines mark-region collection of fragmented objects and arrays (arraylets) with separate replication-copying collection of immutable arraylet spines, so as to cope with external fragmentation when running in small heaps. We present an implementation of SCHISM/CMR in the Fiji VM, a high-performance Java virtual machine for mission-critical systems, along with a thorough experimental evaluation on a wide variety of architectures, including server-class and embedded systems. The results show that SCHISM/CMR tolerates fragmentation better than previous schemes, with a much more acceptable throughput penalty.", "paper_title": "Schism: Fragmentation-Tolerant Real-Time Garbage Collection", "paper_id": "WOS:000279357500013"}