{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "component-based_systems"}, {"score": 0.004491678520807451, "phrase": "efficient_and_user-friendly_development"}, {"score": 0.004388796812234033, "phrase": "component-based_application"}, {"score": 0.004125773078637226, "phrase": "rather_complex_development_infrastructure"}, {"score": 0.00393886140366453, "phrase": "component_composition"}, {"score": 0.003878451139312637, "phrase": "component_repository"}, {"score": 0.003760385494931853, "phrase": "run-time_infrastructure"}, {"score": 0.0032216622984027558, "phrase": "component_system"}, {"score": 0.00282470997972535, "phrase": "presented_arguments"}, {"score": 0.0027175263159330523, "phrase": "broad_practical_experience"}, {"score": 0.0026347074232350503, "phrase": "component_systems_sofa"}, {"score": 0.0024574537875026634, "phrase": "classical_ad_hoc"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["software architectures", " software components", " model-driven development", " meta-models", " model transformation"], "paper_abstract": "To allow efficient and user-friendly development of a component-based application, component systems have to provide a rather complex development infrastructure, including a tool for component composition, component repository, and a run-time infrastructure. In this paper, we present and evaluate benefits of using meta-modeling during the process of defining a component system and also during creation of the development and run-time infrastructures. Most of the presented arguments are based on a broad practical experience with designing the component systems SOFA and SOFA 2; the former designed in a classical ad hoc 'manual' way, whereas the latter with the help of meta-modeling. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Using meta-modeling in design and implementation of component-based systems: the SOFA case study", "paper_id": "WOS:000295446900002"}