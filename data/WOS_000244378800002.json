{"auto_keywords": [{"score": 0.04880364979195164, "phrase": "web_applications"}, {"score": 0.00481495049065317, "phrase": "dfa_representations"}, {"score": 0.004763276186680183, "phrase": "http"}, {"score": 0.004636340567075841, "phrase": "intrusion_detection"}, {"score": 0.004561826854638056, "phrase": "key_technology"}, {"score": 0.004512814529823301, "phrase": "self-healing_systems"}, {"score": 0.004298666679374568, "phrase": "security_threats"}, {"score": 0.004229556887896042, "phrase": "web_server-based_applications"}, {"score": 0.003879234831701853, "phrase": "signature_updates"}, {"score": 0.0038375280115736958, "phrase": "extensive_administrative_overhead"}, {"score": 0.003334309053314909, "phrase": "anomaly-based_intrusion_detection"}, {"score": 0.0028968858148006823, "phrase": "malicious_web_requests"}, {"score": 0.0025031188149336257, "phrase": "wide_variety"}, {"score": 0.0022830706430588482, "phrase": "benign_attacks"}, {"score": 0.0021863046959469863, "phrase": "properly_patched_servers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["anomaly intrusion detection", " finite automata induction", " web server security"], "paper_abstract": "Intrusion detection is a key technology for self-healing systems designed to prevent or manage damage caused by security threats. Protecting web server-based applications using intrusion detection is challenging, especially when autonomy is required (i.e., without signature updates or extensive administrative overhead). Web applications are difficult to protect because they are large, complex, highly customized, and often created by programmers with little security background. Anomaly-based intrusion detection has been proposed as a strategy to meet these requirements. This paper describes how DFA (Deterministic Finite Automata) induction can be used to detect malicious web requests. The method is used in combination with rules for reducing variability among requests and heuristics for filtering and grouping anomalies. With this setup a wide variety of attacks is detectable with few false-positives, even when the system is trained on data containing benign attacks (e.g., attacks that fail against properly patched servers). (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Learning DFA representations of HTTP for protecting web applications", "paper_id": "WOS:000244378800002"}