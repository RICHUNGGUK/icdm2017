{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "restricted_growth_words"}, {"score": 0.004689650818647484, "phrase": "length_n_restricted_growth_word"}, {"score": 0.0033868916699805224, "phrase": "word_statistics"}, {"score": 0.002941913249957503, "phrase": "combinatorial_objects"}, {"score": 0.002890557197908352, "phrase": "restricted_growth_functions"}, {"score": 0.00284009509859163, "phrase": "staircase_words"}, {"score": 0.0027417911324611917, "phrase": "binary_sequences"}, {"score": 0.002600661525224505, "phrase": "generic_generating_algorithm"}, {"score": 0.0024451427672857458, "phrase": "gray_code"}, {"score": 0.0023604768913655463, "phrase": "constant_average_time"}, {"score": 0.0022787359717772976, "phrase": "corresponding_statistics"}, {"score": 0.0022192891418394514, "phrase": "local_properties"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " Restricted growth functions/words", " Gray codes"], "paper_abstract": "A length n restricted growth word is a word w = w(1)w(2)...w(n) over the set of integers where w(1) = 0 and each w(i), i > 1, lies between 0 and the value of a word statistics of the prefix w(1)w(2)...w(i-1) of w, plus one. Restricted growth words simultaneously generalize combinatorial objects as restricted growth functions, staircase words and ascent or binary sequences. Here we give a generic generating algorithm for restricted growth words. It produces a Gray code and runs in constant average time provided that the corresponding statistics has some local properties. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Efficient generation of restricted growth words", "paper_id": "WOS:000322295500005"}