{"auto_keywords": [{"score": 0.04348479326253447, "phrase": "finite_state_machines"}, {"score": 0.00481495049065317, "phrase": "digital_logic_design"}, {"score": 0.004704187604192605, "phrase": "web-based_education_platform"}, {"score": 0.004560438999891081, "phrase": "digital_logic_design_process"}, {"score": 0.004438250823243621, "phrase": "combinatorial_circuits"}, {"score": 0.00440394242852293, "phrase": "logic_gates"}, {"score": 0.003981243132108882, "phrase": "machine_type"}, {"score": 0.003935147683802319, "phrase": "state_code"}, {"score": 0.003800026771283179, "phrase": "logic_minimization"}, {"score": 0.003756021561809324, "phrase": "k-map_approach"}, {"score": 0.0037125240439927114, "phrase": "quine_mccluskey_scheme"}, {"score": 0.0034618794528555063, "phrase": "digital_logic_design_courses"}, {"score": 0.003253279945540651, "phrase": "lecture_notes"}, {"score": 0.0032155857567170696, "phrase": "homework_problems"}, {"score": 0.003093054709625219, "phrase": "thorough_investigation"}, {"score": 0.003069112841132911, "phrase": "related_pedagogical_aspects"}, {"score": 0.003033546013625887, "phrase": "appropriate_interactive_graphical_processes"}, {"score": 0.002963640433319524, "phrase": "web-based_solution"}, {"score": 0.002617059777997427, "phrase": "advocated_approach"}, {"score": 0.002566685388128598, "phrase": "access_rules"}, {"score": 0.00243072375406841, "phrase": "assessed_homework_problems"}, {"score": 0.0023932142697579506, "phrase": "submission_deadline"}, {"score": 0.002319918823705175, "phrase": "student_learning_process"}, {"score": 0.002301947614465974, "phrase": "learning_curves"}, {"score": 0.00227525089435209, "phrase": "proposed_platform"}, {"score": 0.0022141537427057363, "phrase": "students'_feedback"}, {"score": 0.0021049977753042253, "phrase": "students'_performance"}], "paper_keywords": [""], "paper_abstract": "This paper presents a web-based education platform for the visualization and animation of the digital logic design process. This includes the design of combinatorial circuits using logic gates, multiplexers, decoders, and look-up-tables as well as the design of finite state machines. Various configurations of finite state machines can be selected to define the machine type, the state code, and the flip-flop type. Logic minimization with the K-map approach and the Quine McCluskey scheme is also supported. The tools, denoted as DLD-VISU, help students practice related topics in digital logic design courses. Also, instructors can use the tools to efficiently generate and verify examples for lecture notes or for homework problems and assignments. DLD-VISU was designed relying on a thorough investigation of related pedagogical aspects to define appropriate interactive graphical processes. The decision for a web-based solution, on the one hand, was motivated by making the tools available, portable, expandable, and at the same time transparent to the user. On the other hand, the advocated approach enables instructors to define access rules for their students to assure that students cannot use the tools to solve assessed homework problems or assignments before submission deadline. DLD-VISU supports self-assessment and reflects the student learning process using learning curves. The proposed platform was evaluated both in form of students' feedback as well as by analyzing the impact of using the tools on students' performance.", "paper_title": "A Web-Based Visualization and Animation Platform for Digital Logic Design", "paper_id": "WOS:000358585000007"}