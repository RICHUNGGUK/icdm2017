{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_tool_path_computation"}, {"score": 0.004769702911065878, "phrase": "multi-core_gpus"}, {"score": 0.004724878518219719, "phrase": "tool_path_generation"}, {"score": 0.004571269461883144, "phrase": "computer_aided_manufacturing"}, {"score": 0.004485735417293941, "phrase": "efficient_strategies"}, {"score": 0.004238576355081601, "phrase": "standard_machining"}, {"score": 0.004081385289516914, "phrase": "tool_path_computation_demand"}, {"score": 0.004043003243656031, "phrase": "higher_computation_performance"}, {"score": 0.003784209997115174, "phrase": "hardware_acceleration"}, {"score": 0.0037309384824565695, "phrase": "incremental_solution"}, {"score": 0.0032376465741070274, "phrase": "development_time"}, {"score": 0.003102752392819577, "phrase": "faster_ones"}, {"score": 0.0029594318330247614, "phrase": "specific_graphic_hardware_approach"}, {"score": 0.002890266318361907, "phrase": "multi-core_graphic_processing_units"}, {"score": 0.002769805263310232, "phrase": "tool_path_computation"}, {"score": 0.00266693888510356, "phrase": "highly_accurate_and_robust_tool_path_generation_algorithm"}, {"score": 0.002507845411496512, "phrase": "fully_implemented_algorithm"}, {"score": 0.002460825108719896, "phrase": "lathe_machining"}, {"score": 0.002391938519840648, "phrase": "comparative_study"}, {"score": 0.002292199117499287, "phrase": "total_computing_time"}, {"score": 0.002259883463607508, "phrase": "execution_time"}, {"score": 0.0021656385587456952, "phrase": "modern_pcs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tool path computing", " Virtual digitizing", " Specific hardware architectures", " Graphics Processor Unit", " CUDA technology"], "paper_abstract": "Tool path generation is one of the most complex problems in Computer Aided Manufacturing. Although some efficient strategies have been developed, most of them are only useful for standard machining. However, the algorithms used for tool path computation demand a higher computation performance, which makes the implementation on many existing systems very slow or even impractical. Hardware acceleration is an incremental solution that can be cleanly added to these systems while keeping everything else intact. It is completely transparent to the user. The cost is much lower and the development time is much shorter than replacing the computers by faster ones. This paper presents an optimisation that uses a specific graphic hardware approach using the power of multi-core Graphic Processing Units (GPUs) in order to improve the tool path computation. This improvement is applied on a highly accurate and robust tool path generation algorithm. The paper presents, as a case of study, a fully implemented algorithm used for turning lathe machining of shoe lasts. A comparative study will show the gain achieved in terms of total computing time. The execution time is almost two orders of magnitude faster than modern PCs. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Efficient tool path computation using multi-core GPUs", "paper_id": "WOS:000313406200006"}