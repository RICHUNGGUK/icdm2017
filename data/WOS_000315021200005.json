{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "tree-like_core_overlay"}, {"score": 0.03938949896050613, "phrase": "core_overlay"}, {"score": 0.0282066988930242, "phrase": "proposed_approach"}, {"score": 0.004772137871562584, "phrase": "hybrid-structured_application-layer_multicast"}, {"score": 0.004645959941491617, "phrase": "multicast_systems"}, {"score": 0.0046046429665581555, "phrase": "high_transmission_efficiency"}, {"score": 0.004563691742821759, "phrase": "low_latency"}, {"score": 0.004502943680955863, "phrase": "poor_resilience"}, {"score": 0.004248869786808024, "phrase": "backbone_nodes"}, {"score": 0.004009074013302036, "phrase": "strong_upload_capacity"}, {"score": 0.0037997077863530897, "phrase": "tree_topology"}, {"score": 0.003666217992454448, "phrase": "spanning_tree"}, {"score": 0.0036173729405604674, "phrase": "whole_overlay"}, {"score": 0.003569176320452192, "phrase": "mesh-like_topology"}, {"score": 0.003397866151093552, "phrase": "application-layer_multicast_overlay"}, {"score": 0.0032347516831068715, "phrase": "proposed_optimization_algorithm"}, {"score": 0.0031350397225314262, "phrase": "overlay_tree"}, {"score": 0.0030794433253250476, "phrase": "out-degree_weighted_reliability"}, {"score": 0.002815864555488112, "phrase": "illegal_solution"}, {"score": 0.002729029534060092, "phrase": "evolution_efficiency"}, {"score": 0.0027047136845332917, "phrase": "simulation_results"}, {"score": 0.002574788013427524, "phrase": "tree-like_core_overlay_systems"}, {"score": 0.0024401411219526774, "phrase": "reliability-first_algorithm"}, {"score": 0.002322895056238477, "phrase": "degree-first_algorithm"}, {"score": 0.0022613292987262177, "phrase": "proposed_algorithm"}, {"score": 0.0021334650920198715, "phrase": "topology_optimization"}, {"score": 0.0021049977753042253, "phrase": "real_multicast_overlay"}], "paper_keywords": ["Tree-like core overlay", " application-layer multicast", " out-degree weighted reliability", " evolutionary programming"], "paper_abstract": "The tree topology in multicast systems has high transmission efficiency, low latency, but poor resilience to node failures. In our work, some nodes are selected as backbone nodes to construct a tree-like core overlay. Backbone nodes are reliable enough and have strong upload capacity as well, which is helpful to overcome the shortcomings of tree topology. The core overlay is organized into a spanning tree while the whole overlay is of mesh-like topology. This paper focuses on improving the performance of the application-layer multicast overlay by optimizing the core overlay which is periodically adjusted with the proposed optimization algorithm. Our approach is to construct the overlay tree based on the out-degree weighted reliability where the reliability of a node is weighted by its upload bandwidth (out-degree). There is no illegal solution during the evolution which ensures the evolution efficiency. Simulation results show that the proposed approach greatly enhances the reliability of the tree-like core overlay systems and achieves shorter delay simultaneously. Its reliability performance is better than the reliability-first algorithm and its delay is very close to that of the degree-first algorithm. The complexity of the proposed algorithm is acceptable for application. Therefore the proposed approach is efficient for the topology optimization of a real multicast overlay.", "paper_title": "Optimization of Tree-like Core Overlay in Hybrid-structured Application-layer Multicast", "paper_id": "WOS:000315021200005"}