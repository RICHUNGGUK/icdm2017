{"auto_keywords": [{"score": 0.04413646558311552, "phrase": "dvs"}, {"score": 0.00481495049065317, "phrase": "real-time_task_systems"}, {"score": 0.004491970050862321, "phrase": "computing_system"}, {"score": 0.004338661611644755, "phrase": "functional_and_performance_requirements"}, {"score": 0.004278807087784626, "phrase": "dynamic_voltage_scaling"}, {"score": 0.0040194764936614565, "phrase": "slowdown_factors"}, {"score": 0.003909301559145041, "phrase": "considerable_energy_savings"}, {"score": 0.0037236852537136547, "phrase": "computing_slowdown_factors"}, {"score": 0.0036722834182246933, "phrase": "dynamically_scheduled_tasks"}, {"score": 0.003621588555525458, "phrase": "specified_deadlines"}, {"score": 0.003308649946463136, "phrase": "bisection_method"}, {"score": 0.0030437652050982617, "phrase": "varying_power_characteristics"}, {"score": 0.0027806165169981622, "phrase": "optimization_problem"}, {"score": 0.002723186210025975, "phrase": "ellipsoid_method"}, {"score": 0.0021947755130109696, "phrase": "known_slowdown_techniques"}, {"score": 0.002164432930854161, "phrase": "static_slowdown_factors"}, {"score": 0.0021049977753042253, "phrase": "dynamic_slowdown"}], "paper_keywords": ["EDF scheduling", " real-time systems", " low power scheduling", " dynamic voltage scaling", " slowdown factors", " convex optimization"], "paper_abstract": "Slowdown factors determine the extent of slowdown a computing system can experience based on functional and performance requirements. Dynamic Voltage Scaling (DVS) of a processor based on slowdown factors can lead to considerable energy savings. We address the problem of computing slowdown factors for dynamically scheduled tasks with specified deadlines. We present an algorithm to compute a near optimal constant slowdown factor based on the bisection method. As a further generalization, for the case of tasks with varying power characteristics, we present the computation of near optimal slowdown factors as a solution to convex optimization problem using the ellipsoid method. The algorithms are practically fast and have the same time complexity as the algorithms to compute the feasibility of a task set. Our simulation results show an average 20 percent energy gain over known slowdown techniques using static slowdown factors and 40 percent gain with dynamic slowdown.", "paper_title": "Optimized slowdown in real-time task systems", "paper_id": "WOS:000241412500009"}