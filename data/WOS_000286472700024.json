{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "auxiliary_storage"}, {"score": 0.004121275290411653, "phrase": "sequential_and_distributed_automata"}, {"score": 0.0032629585038738856, "phrase": "finite-state_graph_automata"}, {"score": 0.003048001809453513, "phrase": "monadic_second-order"}, {"score": 0.002989250900517719, "phrase": "mso"}, {"score": 0.002931569771634119, "phrase": "definable_graphs"}, {"score": 0.002875027551180213, "phrase": "bounded_tree-width"}, {"score": 0.0027651847105654363, "phrase": "graph_structure"}, {"score": 0.0024601402359002056, "phrase": "uniform_mechanism"}, {"score": 0.002389276641014013, "phrase": "emptiness_algorithms"}, {"score": 0.0021049977753042253, "phrase": "new_decidability_results"}], "paper_keywords": ["Algorithms", " Reliability", " Theory", " Verification", " model checking", " automata", " decision procedures", " bounded tree-width"], "paper_abstract": "We propose a generalization of results on the decidability of emptiness for several restricted classes of sequential and distributed automata with auxiliary storage (stacks, queues) that have recently been proved. Our generalization relies on reducing emptiness of these automata to finite-state graph automata (without storage) restricted to monadic second-order (MSO) definable graphs of bounded tree-width, where the graph structure encodes the mechanism provided by the auxiliary storage. Our results outline a uniform mechanism to derive emptiness algorithms for automata, explaining and simplifying several existing results, as well as proving new decidability results.", "paper_title": "The Tree Width of Auxiliary Storage", "paper_id": "WOS:000286472700024"}