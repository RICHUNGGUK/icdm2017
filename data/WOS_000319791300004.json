{"auto_keywords": [{"score": 0.04757556213629672, "phrase": "edit_distance"}, {"score": 0.015719716506582538, "phrase": "approximate_membership"}, {"score": 0.015389558966545437, "phrase": "regular_languages"}, {"score": 0.004324985524216987, "phrase": "efficient_probabilistic_algorithm"}, {"score": 0.0036815763368083197, "phrase": "polynomial_time"}, {"score": 0.003451766520526601, "phrase": "input_automaton"}, {"score": 0.003342280102112269, "phrase": "inverse_error_precision"}, {"score": 0.003167441161387607, "phrase": "previous_approaches"}, {"score": 0.002875391177926809, "phrase": "input_word"}, {"score": 0.002695768552609587, "phrase": "previous_approximate_membership_tester"}, {"score": 0.002610198789888055, "phrase": "hamming_distance"}, {"score": 0.002447101794397243, "phrase": "polynomial_complexity_time"}, {"score": 0.0023440589015485077, "phrase": "larger_polynomials"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Automata", " Probabilistic algorithms", " Property testing", " Regular word languages"], "paper_abstract": "We present an efficient probabilistic algorithm for testing approximate membership of words to regular languages modulo the edit distance. Our algorithm runs in polynomial time in the size of the input automaton and the inverse error precision in contrast to all previous approaches, and independently of the size of the input word. We also improve a previous approximate membership tester modulo the Hamming distance such that it runs in polynomial complexity time, but with larger polynomials than for the edit distance. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Approximate membership for regular languages modulo the edit distance", "paper_id": "WOS:000319791300004"}