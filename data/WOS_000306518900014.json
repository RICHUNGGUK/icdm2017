{"auto_keywords": [{"score": 0.045889715318462816, "phrase": "ecc"}, {"score": 0.029130191344221467, "phrase": "cell_storage_efficiency"}, {"score": 0.00481495049065317, "phrase": "information-theoretical_nand_flash_memory_storage_capacity"}, {"score": 0.0047113960612140335, "phrase": "memory_system_design_space_exploration"}, {"score": 0.004630150894006861, "phrase": "future_nand_flash_memory"}, {"score": 0.004530552828603269, "phrase": "system-level_fault-tolerance_techniques"}, {"score": 0.004300133642951283, "phrase": "overall_system_storage_integrity"}, {"score": 0.004153041453795458, "phrase": "coding_redundancy"}, {"score": 0.004081385289516914, "phrase": "effective_cell_storage_efficiency"}, {"score": 0.0038568987435766014, "phrase": "system_storage_reliability"}, {"score": 0.0037249113156851013, "phrase": "growing_interest"}, {"score": 0.003581797255879607, "phrase": "bch_code"}, {"score": 0.003459191419478298, "phrase": "specific_eccs"}, {"score": 0.003384695931421288, "phrase": "great_practical_importance"}, {"score": 0.0033262524445013303, "phrase": "theoretical_limit"}, {"score": 0.0032830808525570903, "phrase": "achievable_cell_storage_efficiency"}, {"score": 0.003129509028432954, "phrase": "approximate_nand_flash_memory_channel_model"}, {"score": 0.002770150086489194, "phrase": "information-theoretical_bounds"}, {"score": 0.0025500402081330394, "phrase": "retention_limit"}, {"score": 0.0024950747439601863, "phrase": "important_insights"}, {"score": 0.002473420909291381, "phrase": "system_designers"}, {"score": 0.0023371689326096476, "phrase": "information-theoretical_study"}, {"score": 0.0022472527731744974, "phrase": "average_nand_flash_memory_programming_speed"}, {"score": 0.0021797112385590913, "phrase": "user_data"}, {"score": 0.00212343307513777, "phrase": "nand_flash_cell"}], "paper_keywords": ["Endurance", " information theory", " interference", " model", " NAND flash", " retention", " storage capacity", " tradeoff"], "paper_abstract": "Today and future NAND flash memory will heavily rely on system-level fault-tolerance techniques such as error correction code (ECC) to ensure the overall system storage integrity. Since ECC demands the storage of coding redundancy and hence degrades effective cell storage efficiency, it is highly desirable to use more powerful coding solutions that can maintain the system storage reliability at less coding redundancy. This has motivated a growing interest in the industry to search for alternatives to BCH code being used in today. Regardless to specific ECCs, it is of great practical importance to know the theoretical limit on the achievable cell storage efficiency, which motivates this work. We first develop an approximate NAND flash memory channel model that explicitly incorporates program/erase (P/E) cycling effects and cell-to-cell interference, based on which we then develop strategies for estimating the information-theoretical bounds on cell storage efficiency. We show that it can readily reveal the tradeoffs among cell storage efficiency, P/E cycling endurance, and retention limit, which can provide important insights for system designers. Finally, motivated by the dynamics of P/E cycling effect revealed by the information-theoretical study, we propose two memory system design techniques that can improve the average NAND flash memory programming speed and increase the total amount of user data that can be stored in NAND flash cell over its entire lifetime.", "paper_title": "Estimating Information-Theoretical NAND Flash Memory Storage Capacity and its Implication to Memory System Design Space Exploration", "paper_id": "WOS:000306518900014"}