{"auto_keywords": [{"score": 0.04928409246925515, "phrase": "memory_usage_prediction"}, {"score": 0.035510778141852606, "phrase": "large_and_complex_scenes"}, {"score": 0.00481495049065317, "phrase": "adaptive_ray-bundle"}, {"score": 0.004579005794486596, "phrase": "large_scenes"}, {"score": 0.004428139418750855, "phrase": "adaptive_rendering_technique"}, {"score": 0.004378958522416482, "phrase": "ray-bundle_tracing"}, {"score": 0.004330322118728468, "phrase": "ray-bundle"}, {"score": 0.004187614134377688, "phrase": "per-pixel_linked-list_construction"}, {"score": 0.004118339867523449, "phrase": "gpu"}, {"score": 0.00400459716272594, "phrase": "rasterization_based_approach"}, {"score": 0.003960101604693806, "phrase": "significant_benefits"}, {"score": 0.00389427992231721, "phrase": "efficient_generation"}, {"score": 0.0038510053729959074, "phrase": "light_maps"}, {"score": 0.003541357671562449, "phrase": "real-time_graphics"}, {"score": 0.003293142761521425, "phrase": "limited_capacity"}, {"score": 0.0032383707002544755, "phrase": "gpu_memory"}, {"score": 0.003149094460617212, "phrase": "high-resolution_frame_buffer"}, {"score": 0.0031140747752837826, "phrase": "high-capacity_node_buffer"}, {"score": 0.002977835845437357, "phrase": "memory_overflow"}, {"score": 0.0028795712616923462, "phrase": "per-pixel_linked-list"}, {"score": 0.002677616534005393, "phrase": "rendering_process"}, {"score": 0.002603758927691463, "phrase": "adaptive_tiling_technique"}, {"score": 0.0025037596405075866, "phrase": "appropriately_tiled_frame_buffer"}, {"score": 0.0023941575109692336, "phrase": "overflow_risks"}, {"score": 0.0022137465420508785, "phrase": "high-quality_light_maps"}, {"score": 0.0021049977753042253, "phrase": "previous_ray-bundle"}], "paper_keywords": [""], "paper_abstract": "This paper proposes an adaptive rendering technique for ray-bundle tracing. Ray-bundle tracing can be done by per-pixel linked-list construction on a GPU rasterization pipeline. This rasterization based approach offers significant benefits for the efficient generation of light maps (e.g., hardware acceleration, tessellation, and recycling of shaders used in real-time graphics). However, it is inapplicable to large and complex scenes due to the limited capacity of the GPU memory because it requires a high-resolution frame buffer and high-capacity node buffer for the linked-lists. In addition, memory overflow can potentially occur on the per-pixel linked-list since the memory usage of the lists is usually unknown before the rendering process. We introduce an adaptive tiling technique with memory usage prediction. Our method uses an appropriately tiled frame buffer, thus eliminating almost all of the overflow risks thanks to our adaptive tile subdivision scheme. Using this technique, we are able to render high-quality light maps of large and complex scenes which cannot be computed using previous ray-bundle based methods.", "paper_title": "Adaptive Ray-bundle Tracing with Memory Usage Prediction: Efficient Global Illumination in Large Scenes", "paper_id": "WOS:000327310800033"}