{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "distributed_implementation"}, {"score": 0.04945540937697203, "phrase": "multiparty_interactions"}, {"score": 0.04043476064430838, "phrase": "final_implementation"}, {"score": 0.004598933498016774, "phrase": "high_level_coordination_primitives"}, {"score": 0.004450568197899267, "phrase": "component-based_frameworks"}, {"score": 0.004306968571854912, "phrase": "inherent_complexity"}, {"score": 0.0042508289538799905, "phrase": "present-day_systems_designs"}, {"score": 0.004086744751579196, "phrase": "multiple_issues"}, {"score": 0.003928969293303814, "phrase": "runtime_performance"}, {"score": 0.003728000957725218, "phrase": "novel_approach"}, {"score": 0.0035605741849764187, "phrase": "scheduling_constraints"}, {"score": 0.003356275163203055, "phrase": "new_composition_operator"}, {"score": 0.0033138482454504914, "phrase": "restriction"}, {"score": 0.002982068153662372, "phrase": "current_state"}, {"score": 0.0028108690791085536, "phrase": "natural_encoding"}, {"score": 0.00268452026617243, "phrase": "knowledge-based_optimization"}, {"score": 0.0026148807877309417, "phrase": "restriction_operator"}, {"score": 0.0025638362414466278, "phrase": "superfluous_communication"}, {"score": 0.0024007585788965655, "phrase": "enhanced_conflict_resolution_protocol"}, {"score": 0.0022928018832993387, "phrase": "prototype_implementation"}, {"score": 0.0021896891011033105, "phrase": "different_optimizations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multiparty interaction", " Priority", " Observation", " Conflict resolution", " Distributed systems"], "paper_abstract": "Using high level coordination primitives allows enhanced expressiveness of component-based frameworks to cope with the inherent complexity of present-day systems designs. Nonetheless, their distributed implementation raises multiple issues, regarding both the correctness and the runtime performance of the final implementation. We propose a novel approach for distributed implementation of multiparty interactions subject to scheduling constraints expressed by priorities. We rely on a new composition operator named Restriction, whose semantics dynamically restricts the set of interactions allowed for execution, depending on the current state. We show that this operator provides a natural encoding for priorities. We provide a knowledge-based optimization that modifies the Restriction operator to avoid superfluous communication in the final implementation. We complete our framework through an enhanced conflict resolution protocol that natively implements Restriction. A prototype implementation allows us to compare performances of different optimizations. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Optimized distributed implementation of multiparty interactions with Restriction", "paper_id": "WOS:000347741000009"}