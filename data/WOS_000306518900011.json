{"auto_keywords": [{"score": 0.02352399674577565, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "scalable_packet_classification"}, {"score": 0.004765173195920904, "phrase": "fpga._multi-field_packet_classification"}, {"score": 0.004594951819987416, "phrase": "flexible_matching"}, {"score": 0.004547438494330851, "phrase": "arbitrary_combination"}, {"score": 0.004500414250942443, "phrase": "numerous_packet_header_fields"}, {"score": 0.004362226376603478, "phrase": "recently_proposed_openflow_switching"}, {"score": 0.004055998173160551, "phrase": "great_challenge"}, {"score": 0.003993216345115755, "phrase": "scalable_solutions"}, {"score": 0.0039519004610213595, "phrase": "next-generation_packet_classification"}, {"score": 0.0038304902197108643, "phrase": "larger_rule_sets"}, {"score": 0.0036743708250589484, "phrase": "abundant_parallelism"}, {"score": 0.003580032420161922, "phrase": "current_field-programmable_gate_arrays"}, {"score": 0.0031107911390188055, "phrase": "state-of-the-art_decision-tree-based_algorithm"}, {"score": 0.0028178463431115562, "phrase": "multiple_subsets"}, {"score": 0.002702887319160532, "phrase": "optimized_decision_tree"}, {"score": 0.0026609940110902666, "phrase": "tree-to-pipeline_mapping_scheme"}, {"score": 0.0025657442830956017, "phrase": "memory_utilization"}, {"score": 0.0025259712348798323, "phrase": "high_throughput"}, {"score": 0.0024868131939261716, "phrase": "implementation_results"}, {"score": 0.002324007171619245, "phrase": "on-chip_memory"}, {"score": 0.002127046102734894, "phrase": "gbps_throughput"}, {"score": 0.0021049977753042253, "phrase": "minimum_size"}], "paper_keywords": ["Decision tree", " field-programmable gate array (FPGA)", " openflow", " packet classification", " pipeline", " SRAM"], "paper_abstract": "Multi-field packet classification has evolved from traditional fixed 5-tuple matching to flexible matching with arbitrary combination of numerous packet header fields. For example, the recently proposed OpenFlow switching requires classifying each packet using up to 12-tuple packet header fields. It has become a great challenge to develop scalable solutions for next-generation packet classification that support higher throughput, larger rule sets and more packet header fields. This paper exploits the abundant parallelism and other desirable features provided by current field-programmable gate arrays (FPGAs), and proposes a decision-tree-based, 2-D multi-pipeline architecture for next-generation packet classification. We revisit the techniques for traditional 5-tuple packet classification and propose several optimization techniques for the state-of-the-art decision-tree-based algorithm. Given a set of 12-tuple rules, we develop a framework to partition the rule set into multiple subsets each of which is built into an optimized decision tree. A tree-to-pipeline mapping scheme is carefully designed to maximize the memory utilization while sustaining high throughput. The implementation results show that our architecture can store either 10K real-life 5-tuple rules or 1K synthetic 12-tuple rules in on-chip memory of a single state-of-the-art FPGA, and sustain 80 and 40 Gbps throughput for minimum size (40 bytes) packets, respectively.", "paper_title": "Scalable Packet Classification on FPGA", "paper_id": "WOS:000306518900011"}