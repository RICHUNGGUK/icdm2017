{"auto_keywords": [{"score": 0.0450172065504679, "phrase": "protocol_reverse_engineering"}, {"score": 0.04327832021381773, "phrase": "network_management"}, {"score": 0.00481495049065317, "phrase": "network_protocols"}, {"score": 0.0047588556219929756, "phrase": "automatic_protocol_reverse_engineering"}, {"score": 0.004594443767709888, "phrase": "protocol_message_formats"}, {"score": 0.00454090611248773, "phrase": "protocol_state_machine"}, {"score": 0.004358368398332723, "phrase": "target_protocol"}, {"score": 0.0039449104968131655, "phrase": "honey-pot_systems"}, {"score": 0.0038309141193444015, "phrase": "botnet_detection"}, {"score": 0.0035288860880035985, "phrase": "manual_and_painstaking_process"}, {"score": 0.0031751758963130135, "phrase": "novel_approach"}, {"score": 0.003138124398958758, "phrase": "automatic_reverse_engineering_application-layer_network_protocols"}, {"score": 0.0030118058266380503, "phrase": "network_traces"}, {"score": 0.00284009509859163, "phrase": "message_formats"}, {"score": 0.0027741761880779535, "phrase": "protocol_state_machines"}, {"score": 0.0026624684547385718, "phrase": "prototype_system"}, {"score": 0.0021805201234139475, "phrase": "existing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Protocol reverse engineering", " Protocol keyword", " Variance analysis", " Message format", " State machine"], "paper_abstract": "Automatic protocol reverse engineering is a process of extracting protocol message formats and protocol state machine without access to the specification of target protocol. Protocol reverse engineering is useful for addressing many problems of network management and security, such as network management, honey-pot systems, intrusion detection, Botnet detection and prevention, and so on. Currently, protocol reverse engineering is mainly a manual and painstaking process which is time-consuming and error-prone. In this paper, we present a novel approach for automatic reverse engineering application-layer network protocols. We extract protocol keywords from network traces based on their support rates and variances of positions, reconstruct message formats, and infer protocol state machines. We implement our approach in a prototype system called AutoReEngine and evaluate it over four text-based protocols (HTTP, POP3, SMTP and FTP) and two binary protocols (DNS and NetBIOS). The results show that our AutoReEngine outperforms the existing algorithms. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Position-based automatic reverse engineering of network protocols", "paper_id": "WOS:000320148400013"}