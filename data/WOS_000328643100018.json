{"auto_keywords": [{"score": 0.04872654495804916, "phrase": "secure_channels"}, {"score": 0.004503525064934708, "phrase": "confidential_and_authenticated_message_exchange"}, {"score": 0.004376273644295806, "phrase": "generic_approach"}, {"score": 0.004073742909601419, "phrase": "mac"}, {"score": 0.0035632774896594524, "phrase": "general_purpose_macs"}, {"score": 0.0034459835582278746, "phrase": "special_purpose_macs"}, {"score": 0.0033166379485150507, "phrase": "main_motivation"}, {"score": 0.0027129118211250336, "phrase": "overall_composition"}, {"score": 0.002611010097359509, "phrase": "encryption_algorithm"}, {"score": 0.0024771000236931836, "phrase": "authentication_algorithm"}, {"score": 0.0022401855403251653, "phrase": "standard_macs"}, {"score": 0.00220823903315848, "phrase": "universal_hash_functions"}, {"score": 0.0021049977753042253, "phrase": "key-recovery_attacks"}], "paper_keywords": ["Confidentiality", " authenticity", " message authentication code (MAC)", " authenticated encryption", " universal hash families"], "paper_abstract": "In cryptography, secure channels enable the confidential and authenticated message exchange between authorized users. A generic approach of constructing such channels is by combining an encryption primitive with an authentication primitive (MAC). In this work, we introduce the design of a new cryptographic primitive to be used in the construction of secure channels. Instead of using general purpose MACs, we propose the deployment of special purpose MACs, named epsilon-MACs. The main motivation behind this work is the observation that, since the message must be both encrypted and authenticated, there might be some redundancy in the computations performed by the two primitives. Therefore, removing such redundancy can improve the efficiency of the overall composition. Moreover, computations performed by the encryption algorithm can be further utilized to improve the security of the authentication algorithm. In particular, we will show how epsilon-MACs can be designed to reduce the amount of computation required by standard MACs based on universal hash functions, and show how epsilon-MACs can be secured against key-recovery attacks.", "paper_title": "epsilon-MACs: Toward More Secure and More Efficient Constructions of Secure Channels", "paper_id": "WOS:000328643100018"}