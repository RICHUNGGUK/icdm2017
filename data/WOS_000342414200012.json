{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "unit_size_jobs"}, {"score": 0.047383019958100334, "phrase": "rejection_value"}, {"score": 0.03468565579021586, "phrase": "rejected_jobs"}, {"score": 0.03287402698883015, "phrase": "machine_completion_times"}, {"score": 0.004752022662995341, "phrase": "online_scheduling_problem"}, {"score": 0.004702270260893693, "phrase": "identical_machines"}, {"score": 0.004580145821004561, "phrase": "arriving_job"}, {"score": 0.004449452743965974, "phrase": "minimization_problems"}, {"score": 0.0043682243489937935, "phrase": "maximization_problems"}, {"score": 0.003931597804750268, "phrase": "new_job"}, {"score": 0.003789282090309032, "phrase": "free_slot"}, {"score": 0.0036713893960565206, "phrase": "evicted_job"}, {"score": 0.003437387719239532, "phrase": "makespan_minimization_problem"}, {"score": 0.003252354374549961, "phrase": "norm_minimization_problem"}, {"score": 0.0029735960759537786, "phrase": "first_version"}, {"score": 0.002911546623666007, "phrase": "minimum_machine_load"}, {"score": 0.0027766151973320735, "phrase": "second_version"}, {"score": 0.002654911400878851, "phrase": "machine_loads"}, {"score": 0.0026270572353632297, "phrase": "total_rejection_profit"}, {"score": 0.0025858215477025117, "phrase": "optimal_solution"}, {"score": 0.0025385285106790403, "phrase": "offline_problem"}, {"score": 0.0024529757621396717, "phrase": "required_buffer_size"}, {"score": 0.002395437787820304, "phrase": "optimal_algorithms"}, {"score": 0.0022544399432457164, "phrase": "optimal_algorithm"}, {"score": 0.002178440554808121, "phrase": "lower_bounds"}, {"score": 0.0021498955164659145, "phrase": "special_case"}, {"score": 0.0021049977753042253, "phrase": "input_jobs"}], "paper_keywords": ["Scheduling with rejection", " Unit job", " Reordering buffers"], "paper_abstract": "We study an online scheduling problem with rejection on identical machines, in which we deal with unit size jobs. Each arriving job has a rejection value (a rejection cost or penalty for minimization problems, and a rejection profit for maximization problems) associated with it. A buffer of size is available to store jobs. A job which is not stored in the buffer must be either assigned to a machine or rejected. Upon the arrival of a new job, the job can be stored in the buffer if there is a free slot (possibly created by evicting other jobs and assigning or rejecting every evicted job). At termination, the buffer must be emptied. We study four variants of the problem, as follows. We study the makespan minimization problem, where the goal is to minimize the sum of the makespan and the penalty of rejected jobs, and the norm minimization problem, where the goal is to minimize the sum of the norm of the vector of machine completion times and the penalty of rejected jobs. We also study two maximization problems, where the goal in the first version is to maximize the sum of the minimum machine load (the cover value of the machines) and the total rejection profit, and in the second version the goal is to maximize a function of the machine completion times (which measures the balance of machine loads) and the total rejection profit. We show that an optimal solution (an exact solution for the offline problem) can always be obtained in this environment, and determine the required buffer size. Specifically, for all four variants we present optimal algorithms with and prove that in each case, using a buffer of size at most does not allow the design of an optimal algorithm, which makes our algorithms optimal in this respect as well. The lower bounds hold even for the special case where the rejection value is equal for all input jobs.", "paper_title": "Online scheduling with rejection and reordering: exact algorithms for unit size jobs", "paper_id": "WOS:000342414200012"}