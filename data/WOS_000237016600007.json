{"auto_keywords": [{"score": 0.04773866258910522, "phrase": "genetic_algorithm"}, {"score": 0.010995271430039429, "phrase": "convergence_speed"}, {"score": 0.010671810607304601, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "real-parameter_genetic_algorithm"}, {"score": 0.004695900553353526, "phrase": "engineering_problems"}, {"score": 0.004444203710097833, "phrase": "encoding_and_decoding_processes"}, {"score": 0.004291073117901643, "phrase": "hill-climbing_capacity"}, {"score": 0.004060986196931943, "phrase": "local_minimum"}, {"score": 0.0038431888954930083, "phrase": "novel_adaptive_real-parameter_simulated_annealing_genetic_algorithm"}, {"score": 0.0038048583022763796, "phrase": "arsaga"}, {"score": 0.0036370297611938796, "phrase": "simulated_annealing"}, {"score": 0.0035648266669315943, "phrase": "adaptive_mechanisms"}, {"score": 0.003441891354624516, "phrase": "solution_quality"}, {"score": 0.0031765314093444956, "phrase": "test_functions"}, {"score": 0.003097865379563127, "phrase": "first_example"}, {"score": 0.003051601113971322, "phrase": "helical_spring_optimization_design_case"}, {"score": 0.0029909851863915283, "phrase": "second_example"}, {"score": 0.0029463123778313196, "phrase": "system_identification_problem"}, {"score": 0.002560162916190598, "phrase": "global_searching_ability"}, {"score": 0.002496722870659199, "phrase": "novel_hybrid_algorithm"}, {"score": 0.0024105326885334962, "phrase": "small_population_size"}, {"score": 0.0023507916951658455, "phrase": "complex_and_large_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["genetic algorithm", " simulated annealing", " adaptive mechanism", " system identification", " optimization design"], "paper_abstract": "With its inheritance, genetic algorithm may spend much computation time in the encoding and decoding processes. Also, since genetic algorithm lacks hill-climbing capacity, it easily falls in a trap and finds a local minimum not the true solution. In this paper, a novel adaptive real-parameter simulated annealing genetic algorithm (ARSAGA) that maintains the merits of genetic algorithm and simulated annealing is proposed. Adaptive mechanisms are also added to insure the solution quality and to improve the convergence speed. The performance of this proposed algorithm is demonstrated in some test functions and two examples. The first example is a helical spring optimization design case, and the second example is a system identification problem described by an ARMAX (auto regressive and moving average exogenous) model. The former is a constrained engineering optimization problem, and the latter is an unconstrained one. The results indicate that the global searching ability and convergence speed of this novel hybrid algorithm is significantly improved, even though small population size is used for a complex and large problem. The proposed algorithm is significantly better than the other genetic algorithm-based methods or other methods discussed in this paper. (C) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "Improving real-parameter genetic algorithm with simulated annealing for engineering problems", "paper_id": "WOS:000237016600007"}