{"auto_keywords": [{"score": 0.03412670225840188, "phrase": "test_cases"}, {"score": 0.00481495049065317, "phrase": "extended_digraphs"}, {"score": 0.004461359547152617, "phrase": "new_fault-based_test_case_prioritization_technique"}, {"score": 0.004294381488413906, "phrase": "model-based_testing"}, {"score": 0.004098725744818192, "phrase": "fault_detection_rate"}, {"score": 0.0039620308501590795, "phrase": "test_suite"}, {"score": 0.0037495207047193034, "phrase": "regression_testing"}, {"score": 0.003670843919846253, "phrase": "extended_digraph_model"}, {"score": 0.003578600071301459, "phrase": "new_technique"}, {"score": 0.003459191419478298, "phrase": "novel_reinforcement-learning"}, {"score": 0.003204841443605308, "phrase": "regression_testing_objectives"}, {"score": 0.0030199761431186434, "phrase": "rl_concepts"}, {"score": 0.0029691377785333872, "phrase": "application's_digraph_model"}, {"score": 0.002870006736445581, "phrase": "forward_probabilities"}, {"score": 0.0026815368507715, "phrase": "alternative_approach"}, {"score": 0.0024527767211457046, "phrase": "proposed_techniques"}, {"score": 0.002391067964886602, "phrase": "graphical_user_interface"}, {"score": 0.0022626276288355432, "phrase": "test_case"}, {"score": 0.002215081186105616, "phrase": "experimental_results"}, {"score": 0.002177762848946681, "phrase": "proposed_technique"}, {"score": 0.0021049977753042253, "phrase": "test_runs"}], "paper_keywords": ["Fault-based test case prioritization", " model-based testing (MBT)", " reinforcement learning", " additional statement coverage", " HMM", " GUI testing", " random prioritization"], "paper_abstract": "Although many test case prioritization techniques exist, their performance is far from perfect. Hence, we propose a new fault-based test case prioritization technique to promote fault-revealing test cases in model-based testing (MBT) procedures. We seek to improve the fault detection rate-a measure of how fast a test suite is able to detect faults during testing-in scenarios such as regression testing. We propose an extended digraph model as the basis of this new technique. The model is realized using a novel reinforcement-learning (RL)-and hidden-Markov-model (HMM)-based technique which is able to prioritize test cases for regression testing objectives. We present a method to initialize and train an HMM based upon RL concepts applied to an application's digraph model. The model prioritizes test cases based upon forward probabilities, a new test case prioritization approach. In addition, we also propose an alternative approach to prioritizing test cases according to the amount of change they cause in applications. To evaluate the effectiveness of the proposed techniques, we perform experiments on graphical user interface (GUI)-based applications and compare the results with state-of-the-art test case prioritization approaches. The experimental results show that the proposed technique is able to detect faults early within test runs.", "paper_title": "Test Case Prioritization Using Extended Digraphs", "paper_id": "WOS:000366823200006"}