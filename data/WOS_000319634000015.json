{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "minimum_linear_arrangement"}, {"score": 0.0047559432344272, "phrase": "chord_graphs"}, {"score": 0.00466877910546307, "phrase": "linear_arrangement_phi"}, {"score": 0.004583205112737672, "phrase": "undirected_graph"}, {"score": 0.004362564831572539, "phrase": "vertical_bar_v_vertical_bar"}, {"score": 0.004204054047427536, "phrase": "bijective_function"}, {"score": 0.0039281997063335735, "phrase": "cost_function"}, {"score": 0.003145417865993521, "phrase": "minla"}, {"score": 0.0030123335878664064, "phrase": "np-hard_problem"}, {"score": 0.002762774046280398, "phrase": "polynomial_time"}, {"score": 0.002456744238900652, "phrase": "binary_representation"}, {"score": 0.0023819914954155905, "phrase": "optimal_arrangement"}, {"score": 0.002225426912273257, "phrase": "minimum_linear_arrangement_problem"}, {"score": 0.0021981149628094504, "phrase": "chord"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Minimum linear arrangement", " Graph layout", " Labeling", " Chord graph"], "paper_abstract": "A linear arrangement phi of an undirected graph G = (V,E) with vertical bar V vertical bar = n nodes is a bijective function phi:V -> {0, ... , n - 1}. The cost function is cost(G, phi) = Sigma(uv is an element of E)vertical bar(phi(u) - phi(v))vertical bar and opt(G) = min(for all phi)cost(G,phi). The problem of finding opt(G) is called minimum linear arrangement (MINLA). The Minimum Linear Arrangement is an NP-hard problem in general. But there are some classes of graphs optimally solvable in polynomial time. In this paper, we show that the label of each node equals to the reverse of binary representation of its id in the optimal arrangement. Then, we design an O(n) algorithm to solve the minimum linear arrangement problem of Chord graphs. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "An optimal time algorithm for minimum linear arrangement of chord graphs", "paper_id": "WOS:000319634000015"}