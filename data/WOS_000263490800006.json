{"auto_keywords": [{"score": 0.03931951230809142, "phrase": "publishing_transducers"}, {"score": 0.014715906855218924, "phrase": "relational_data"}, {"score": 0.014608346595566033, "phrase": "xml_trees"}, {"score": 0.013876813076934363, "phrase": "output_tree"}, {"score": 0.012705876596188471, "phrase": "expressive_power"}, {"score": 0.011048390571700593, "phrase": "tree_generation"}, {"score": 0.00481495049065317, "phrase": "xml_publishing_transducers"}, {"score": 0.004622662375029505, "phrase": "xml_publishing"}, {"score": 0.0043083624695326745, "phrase": "middleware_controller"}, {"score": 0.004136221184894985, "phrase": "relational_source"}, {"score": 0.00403026082093352, "phrase": "query_results"}, {"score": 0.0038548668648948044, "phrase": "xml_publishing_languages"}, {"score": 0.00328654473734697, "phrase": "tree_nodes"}, {"score": 0.0030628094110419697, "phrase": "existing_xml_publishing_languages"}, {"score": 0.0027810502577708105, "phrase": "equivalence_problems"}, {"score": 0.0026996706283276407, "phrase": "lower_and_upper_bounds"}, {"score": 0.0026304217782708713, "phrase": "ptime"}, {"score": 0.002497172413754263, "phrase": "existing_languages"}, {"score": 0.0024240794798626674, "phrase": "relational_query_languages"}, {"score": 0.002128587147609539, "phrase": "logical_transductions"}], "paper_keywords": ["Design", " Languages", " Theory", " XML publishing", " data exchange", " transducer", " complexity", " expressiveness"], "paper_abstract": "A number of languages have been developed for specifying XML publishing, that is, transformations of relational data into XML trees. These languages generally describe the behaviors of a middleware controller that builds an output tree iteratively, issuing queries to a relational source and expanding the tree with the query results at each step. To study the complexity and expressive power of XML publishing languages, this article proposes a notion of publishing transducers, which generate XML trees from relational data. We study a variety of publishing transducers based on what relational queries a transducer can issue, what temporary stores a transducer can use during tree generation, and whether or not some tree nodes are allowed to be virtual, that is, excluded from the output tree. We first show how existing XML publishing languages can be characterized by such transducers, and thus provide a synergy between theory and practice. We then study the membership, emptiness, and equivalence problems for various classes of transducers. We establish lower and upper bounds, all matching, ranging from PTIME to undecidable. Finally, we investigate the expressive power of these transducers and existing languages. We show that when treated as relational query languages, different classes of transducers capture either complexity classes (e. g., PSPACE) or fragments of datalog (e. g., linear datalog). For tree generation, we establish connections between publishing transducers and logical transductions, among other things.", "paper_title": "Expressiveness and Complexity of XML Publishing Transducers", "paper_id": "WOS:000263490800006"}