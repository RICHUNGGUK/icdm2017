{"auto_keywords": [{"score": 0.004553510708976456, "phrase": "resource_management"}, {"score": 0.004306205029641728, "phrase": "formal_operational_semantics"}, {"score": 0.0039380388343479384, "phrase": "object_construction"}, {"score": 0.003641713874009232, "phrase": "multiple_inheritance"}, {"score": 0.0030794433253250476, "phrase": "high-level_system_programming"}, {"score": 0.002911961514073769, "phrase": "predictable_and_reliable_resource_management"}, {"score": 0.002176887956041267, "phrase": "apparent_contradictions"}], "paper_keywords": ["Languages", " Verification"], "paper_abstract": "We present a formal operational semantics and its Coq mechanization for the C++ object model, featuring object construction and destruction, shared and repeated multiple inheritance, and virtual function call dispatch. These are key C++ language features for high-level system programming, in particular for predictable and reliable resource management. This paper is the first to present a formal mechanized account of the metatheory of construction and destruction in C++, and applications to popular programming techniques such as \"resource acquisition is initialization.\" We also report on irregularities and apparent contradictions in the ISO C++03 and C++11 standards.", "paper_title": "A Mechanized Semantics for C++ Object Construction and Destruction, with Applications to Resource Management", "paper_id": "WOS:000300548100041"}