{"auto_keywords": [{"score": 0.032381893275175655, "phrase": "vertex"}, {"score": 0.00481495049065317, "phrase": "simple_and_fast_mesh_denoising_method"}, {"score": 0.004560568143816105, "phrase": "mesh_features"}, {"score": 0.004478782833067256, "phrase": "sharp_edges"}, {"score": 0.00406663414150229, "phrase": "weighted_averaging"}, {"score": 0.004017846065981189, "phrase": "neighboring_face_normals"}, {"score": 0.003922011960904278, "phrase": "vertex_positions"}, {"score": 0.0037371212381934853, "phrase": "denoised_face"}, {"score": 0.0036479584876742085, "phrase": "weight_function"}, {"score": 0.0035824802350703376, "phrase": "normal_filtering"}, {"score": 0.0034135407979996673, "phrase": "previous_similar_approaches"}, {"score": 0.003312009953245191, "phrase": "trimmed_quadratic"}, {"score": 0.002899861600151726, "phrase": "surface_normals"}, {"score": 0.0028477727736832283, "phrase": "least-squares_error_criterion"}, {"score": 0.0026970382454914437, "phrase": "least-squares_problem"}, {"score": 0.002600995957987461, "phrase": "previous_methods"}, {"score": 0.0025697460140513932, "phrase": "user_input"}, {"score": 0.0025083651612064144, "phrase": "iteration_step_size"}, {"score": 0.0022771244331421586, "phrase": "vertex_position"}], "paper_keywords": ["mesh smoothing", " mesh denoising", " feature preservation"], "paper_abstract": "We present a simple and fast mesh denoising method, which can remove noise effectively while preserving mesh features such as sharp edges and corners. The method consists of two stages. First, noisy face normals are filtered iteratively by weighted averaging of neighboring face normals. Second, vertex positions are iteratively updated to agree with the denoised face normals. The weight function used during normal filtering is much simpler than that used in previous similar approaches, being simply a trimmed quadratic. This makes the algorithm both fast and simple to implement. Vertex position updating is based on the integration of surface normals using a least-squares error criterion. Like previous algorithms, we solve the least-squares problem by gradient descent; whereas previous methods needed user input to determine the iteration step size, we determine it automatically. In addition, we prove the convergence of the vertex position updating approach. Analysis and experiments show the advantages of our proposed method over various earlier surface denoising methods.", "paper_title": "Fast and effective feature-preserving mesh denoising", "paper_id": "WOS:000247893800007"}