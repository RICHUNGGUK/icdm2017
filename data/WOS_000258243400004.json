{"auto_keywords": [{"score": 0.0488492843865137, "phrase": "observability_problems"}, {"score": 0.046187365615949945, "phrase": "checking_sequence"}, {"score": 0.04179262389200996, "phrase": "external_coordination_message_exchanges"}, {"score": 0.03900627135593143, "phrase": "coordination_messages"}, {"score": 0.00481495049065317, "phrase": "distributed_test_architectures"}, {"score": 0.004338898899247236, "phrase": "test_architecture"}, {"score": 0.004227398267369744, "phrase": "multiple_remote_testers"}, {"score": 0.003569050665799723, "phrase": "external_network"}, {"score": 0.0028973794653974327, "phrase": "timing_constraints"}, {"score": 0.0021049977753042253, "phrase": "multiple_distinguishing_sequences"}], "paper_keywords": ["testing", " checking sequence", " distributed test architecture", " coordination problems", " observability problems"], "paper_abstract": "Controllability and observability problems may manifest themselves during the application of a checking sequence in a test architecture where there are multiple remote testers. These problems often require the use of external coordination message exchanges among testers during testing. However, the use of coordination messages requires the existence of an external network that can increase the cost of testing and can be difficult to implement. In addition, the use of coordination messages introduces delays and this can cause problems where there are timing constraints. Thus, sometimes it is desired to construct a checking sequence from the specification of the system under test that will be free from controllability and observability problems without requiring the use of external coordination message exchanges. This paper gives conditions under which it is possible to produce such a checking sequence, using multiple distinguishing sequences, and an algorithm that achieves this.", "paper_title": "Checking sequences for distributed test architectures", "paper_id": "WOS:000258243400004"}