{"auto_keywords": [{"score": 0.04630840426336342, "phrase": "cloud_computing"}, {"score": 0.032883543743821096, "phrase": "management_programs"}, {"score": 0.00481495049065317, "phrase": "architecture-based_management"}, {"score": 0.004685375117376838, "phrase": "system_management"}, {"score": 0.004559270778306828, "phrase": "high_costs"}, {"score": 0.004367898947304223, "phrase": "numerous_platforms"}, {"score": 0.004317109072311102, "phrase": "virtual_machines"}, {"score": 0.0038554737609608255, "phrase": "management_costs"}, {"score": 0.0037662852047763112, "phrase": "manual_activities"}, {"score": 0.0035660913513115267, "phrase": "system_mamnagement"}, {"score": 0.0034031466199896843, "phrase": "java"}, {"score": 0.0032472646337850042, "phrase": "high_programming_effort"}, {"score": 0.0030745737579268876, "phrase": "simple_but_powerful_way"}, {"score": 0.0028996963188373144, "phrase": "configuration_files"}, {"score": 0.0027995677499976406, "phrase": "runtime_model"}, {"score": 0.002766963729586353, "phrase": "platform's_software_architecture"}, {"score": 0.002671406231520296, "phrase": "observable_runtime_changes"}, {"score": 0.0026402908398883832, "phrase": "target_platforms"}, {"score": 0.0026095369186867707, "phrase": "corresponding_architecture_models"}, {"score": 0.002499798127196099, "phrase": "modeling_languages"}, {"score": 0.0024514505056251316, "phrase": "relatively_low-level_programming_languages"}, {"score": 0.00243237365704391, "phrase": "architecture-level_management_programs"}, {"score": 0.0022583704173318123, "phrase": "real-world_cloud_deployment"}, {"score": 0.0022320551224679526, "phrase": "traditional_programming_language_approaches"}, {"score": 0.0021381565332182773, "phrase": "new_model"}, {"score": 0.0021049977753042253, "phrase": "management_program_development"}], "paper_keywords": ["cloud management", " software architecture", " models at runtime"], "paper_abstract": "System management is becoming increasingly complex and brings high costs, especially with the advent of cloud computing. Cloud computing involves numerous platforms often of virtual machines (VMs) and middleware has to be managed to make the whole system work cost-effectively after an application is deployed. In order to reduce management costs, in particular for the manual activities, many computer programs have been developed remove or reduce the complexity and difficulty of system mamnagement. These programs are usually hard-coded in languages like Java and C++, which bring enough capability and flexibility but also cause high programming effort and cost. This paper proposes an architecture for developing management programs in a simple but powerful way. First of all, the manageability of a given platform (via APIs, configuration files, and scripts) is abstracted as a runtime model of the platform's software architecture, which can automatically and immediately propagate any observable runtime changes of the target platforms to the corresponding architecture models, and vice versa. The management programs are developed using modeling languages, instead of those relatively low-level programming languages. Architecture-level management programs bring many advantages related to performance, interoperability, reusability, and simplicity. An experiment on a real-world cloud deployment and comparisonwith traditional programming language approaches demonstrate the feasibility, effectiveness, and benefits of the new model based approach for management program development.", "paper_title": "Towards architecture-based management of platforms in the cloud", "paper_id": "WOS:000307266300005"}