{"auto_keywords": [{"score": 0.0402368601405761, "phrase": "transformation_technology"}, {"score": 0.030942721923991178, "phrase": "declarative_languages"}, {"score": 0.030744207483743853, "phrase": "qvt"}, {"score": 0.028825733577296984, "phrase": "qvt-core"}, {"score": 0.00481495049065317, "phrase": "relational_model_transformation_technologies"}, {"score": 0.004736045157669388, "phrase": "triple_graph_grammars"}, {"score": 0.004689321062844586, "phrase": "model_driven_architecture"}, {"score": 0.004506968388996092, "phrase": "different_models"}, {"score": 0.004447766706144458, "phrase": "separate_models"}, {"score": 0.004403874076980828, "phrase": "business_logic"}, {"score": 0.004346020686558718, "phrase": "specific_details"}, {"score": 0.00409490456027741, "phrase": "core_technology"}, {"score": 0.0040679316321948, "phrase": "mda"}, {"score": 0.0035402494307399733, "phrase": "fujaba_case_tool"}, {"score": 0.0032807941194429235, "phrase": "transformation_engine"}, {"score": 0.00257640185288362, "phrase": "qvt-core_mappings"}, {"score": 0.002559392185079503, "phrase": "tgg_rules"}, {"score": 0.0024842242921857705, "phrase": "tgg_transformation_engine"}, {"score": 0.002451527111936163, "phrase": "actual_qvt_transformation"}, {"score": 0.0023716501597131024, "phrase": "qvt-relations"}, {"score": 0.002271679416337276, "phrase": "semantic_gaps"}, {"score": 0.0021049977753042253, "phrase": "qvt."}], "paper_keywords": ["MDA", " Model-based software engineering", " Model transformation", " Query/View/Transformation (QVT)", " Triple Graph Grammar (TGG)"], "paper_abstract": "The Model Driven Architecture (MDA) is an approach to develop software based on different models. There are separate models for the business logic and for platform specific details. Moreover, code can be generated automatically from these models. This makes transforma- tions a core technology for MDA and for model-based software engineering approaches in general. Query/View/Transformation (QVT) is the transformation technology recently proposed for this purpose by the OMG. Triple Graph Grammars (TGGs) are another transformation technology proposed in the mid-nineties, used for example in the FUJABA CASE tool. In contrast to many other transformation technologies, both QVT and TGGs declaratively define the relation between two models. With this definition, a transformation engine can execute a transformation in either direction and, based on the same definition, can also propagate changes from one model to the other. In this paper, we compare the concepts of the declarative languages of QVT and TGGs. It turns out that TGGs and declarative QVT have many concepts in common. In fact, QVT-Core can be mapped to TGGs. We show that QVT-Core can be implemented by transforming QVT-Core mappings to TGG rules, which can then be executed by a TGG transformation engine that performs the actual QVT transformation. Furthermore, we discuss an approach for mapping QVT-Relations to TGGs. Based on the semantics of TGGs, we clarify semantic gaps that we identified in the declarative languages of QVT and, furthermore, we show how TGGs can benefit from the concepts of QVT.", "paper_title": "Comparing relational model transformation technologies: implementing Query/View/Transformation with Triple Graph Grammars", "paper_id": "WOS:000272321500003"}