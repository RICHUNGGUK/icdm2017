{"auto_keywords": [{"score": 0.024196682588943436, "phrase": "system_throughput"}, {"score": 0.00481495049065317, "phrase": "web_services-based_e-business_transactions"}, {"score": 0.004605748839642513, "phrase": "information_technology_industry"}, {"score": 0.00446471538346719, "phrase": "software_application_integration"}, {"score": 0.004425215632459868, "phrase": "application_interoperability"}, {"score": 0.00436661740263741, "phrase": "distributed_computing"}, {"score": 0.004327981760540394, "phrase": "radical_ways"}, {"score": 0.004289686492089576, "phrase": "web_services_platform"}, {"score": 0.00421410521089045, "phrase": "open_data_communication_and_data_formatting_protocols"}, {"score": 0.0038900709793274484, "phrase": "e-business_applications"}, {"score": 0.003737485125097945, "phrase": "web_services_components"}, {"score": 0.003449972561293443, "phrase": "other's_functionality"}, {"score": 0.0033442114331500407, "phrase": "service-oriented_computing"}, {"score": 0.0032852337992126564, "phrase": "service-oriented_applications"}, {"score": 0.0032706520949775065, "phrase": "quality_of_service"}, {"score": 0.0031703706626348507, "phrase": "major_concern"}, {"score": 0.0031006232333900055, "phrase": "remote_applications"}, {"score": 0.003073154478201771, "phrase": "internet_communication"}, {"score": 0.0027865506182608263, "phrase": "service_clients"}, {"score": 0.0027131212233443137, "phrase": "service_providers"}, {"score": 0.002572001496778222, "phrase": "multiple_providers"}, {"score": 0.002515384834484012, "phrase": "\"web_services_monitors"}, {"score": 0.002470987929071079, "phrase": "service_composition_execution"}, {"score": 0.0024490834773668153, "phrase": "transaction_monitor"}, {"score": 0.0023633857274905977, "phrase": "service_requests"}, {"score": 0.00233202607446404, "phrase": "best_service_provider"}, {"score": 0.002220551141101661, "phrase": "basic_strategies"}, {"score": 0.002200861826643147, "phrase": "efficient_scheduling"}, {"score": 0.0021813467128927347, "phrase": "web_services_transactions"}, {"score": 0.002123831297790248, "phrase": "simulation-based_evaluation"}, {"score": 0.0021049977753042253, "phrase": "even_basic_strategies"}], "paper_keywords": [""], "paper_abstract": "Web services platform, strongly backed by the information technology industry, is destined to change the software application integration, application interoperability, and distributed computing in radical ways. Web services platform is based on open data communication and data formatting protocols; therefore it has a very promising future in terms of adoptability. Future distributed applications in general and e-business applications in particular will be built rapidly by reusing web services components that are made available on Internet. These applications will talk to each other and utilize each other's functionality. This is in general called Service-Oriented Computing. For the service-oriented applications Quality of Service (QoS) will be a major concern considering the dependency over remote applications and Internet communication. In this paper we consider a service-oriented computing (e.g., e-business) environment where \"similar\" services are provided by many providers. Therefore, service clients can choose any of these service providers during run-time. Transactions (client programs that request services from multiple providers) are processed via \"web services monitors\" that handle service composition execution. Transaction monitor in this case need to efficiently schedule service requests to the best service provider in order to optimize the system throughput. We present some basic strategies for efficient scheduling of web services transactions. We show through a simulation-based evaluation that even basic strategies improve the system throughput substantially.", "paper_title": "Efficient scheduling strategies for web services-based e-business transactions", "paper_id": "WOS:000235959200010"}