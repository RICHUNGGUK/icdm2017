{"auto_keywords": [{"score": 0.049631680892871025, "phrase": "multihop_ad_hoc_networks"}, {"score": 0.013801799604746038, "phrase": "vegas"}, {"score": 0.00845664933971988, "phrase": "congestion_window"}, {"score": 0.00795769705947856, "phrase": "legacy_tcp-vegas"}, {"score": 0.007045756569574418, "phrase": "vegas-w"}, {"score": 0.00481495049065317, "phrase": "tcp-vegas"}, {"score": 0.004383406949799696, "phrase": "unified_network_model"}, {"score": 0.00432208488976429, "phrase": "tcp_source_window_model"}, {"score": 0.004123781267600542, "phrase": "optimal_window"}, {"score": 0.004085221464783815, "phrase": "maximum_average_throughput"}, {"score": 0.004028054020045027, "phrase": "network_capacity"}, {"score": 0.003934540154108188, "phrase": "reset_slow_start_threshold"}, {"score": 0.0038431888954930083, "phrase": "aggregate_throughput"}, {"score": 0.003684048704119722, "phrase": "network_increases"}, {"score": 0.0036324746826127997, "phrase": "main_reasons"}, {"score": 0.003581620064675766, "phrase": "vegas's_large_minimum_congestion_window"}, {"score": 0.0031995142224983094, "phrase": "packet_losses"}, {"score": 0.0031695693589575916, "phrase": "mac_layer"}, {"score": 0.003095923814666088, "phrase": "routing_layer"}, {"score": 0.003038237581227068, "phrase": "return_result"}, {"score": 0.0027139447110929586, "phrase": "modified_tcp_protocol"}, {"score": 0.002613709503583786, "phrase": "vegas-w."}, {"score": 0.0025171669791790438, "phrase": "rate_control_timer"}, {"score": 0.0024818877663889813, "phrase": "tcp_sending_process"}, {"score": 0.0023902026696615473, "phrase": "slow_start_and_congestion_avoidance_phases"}, {"score": 0.002248366278757655, "phrase": "slow_start_threshold"}, {"score": 0.0022168460543913787, "phrase": "stable_window"}, {"score": 0.0021049977753042253, "phrase": "extensive_simulation_results"}], "paper_keywords": ["TCP", " Vegas", " throughput", " ad hoc", " DSR"], "paper_abstract": "Performance of TCP-Vegas is not satisfactory in multihop ad hoc networks over IEEE 802.11 MAC protocol. We analyze the problem with a unified network model and a TCP source window model. We observe that Vegas cannot maintain the optimal window with maximum average throughput when the network capacity is smaller than the reset slow start threshold of Vegas. The aggregate throughput of all traffics decreases as the load of network increases. The main reasons lie in Vegas's large minimum congestion window, large reset slow start threshold and aggressive window increase policy. All of them induce overload of the network, which cause packet losses at MAC layer and over-reaction at routing layer. These in return result in the breakup of end-to-end connections and reduce the throughput. To fix these problems, we propose a modified TCP protocol based on TCP-Vegas for multihop ad hoc networks, called Vegas-W. We extend congestion window to fraction with a rate control timer under the TCP sending process. Probing mechanisms of legacy TCP-Vegas in both slow start and congestion avoidance phases are changed to increase congestion window after receiving more than one ACK. Furthermore, we update slow start threshold by tracking stable window. We evaluate the performance of Vegas-W through ns-2. Extensive simulation results show that Vegas-W can improve the throughput up to 87% over legacy TCP-Vegas over a variety of topologies including chain, grid, star, dumbbell and hammer, etc. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Improve throughput of TCP-Vegas in multihop ad hoc networks", "paper_id": "WOS:000258035900068"}