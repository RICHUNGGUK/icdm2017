{"auto_keywords": [{"score": 0.04958720442967608, "phrase": "nps-f."}, {"score": 0.04885877600670675, "phrase": "nps-f"}, {"score": 0.04673393949194979, "phrase": "overall_number"}, {"score": 0.04559173958405984, "phrase": "design_time"}, {"score": 0.00481495049065317, "phrase": "cpmd-mindful_task_assignment"}, {"score": 0.004716520738331953, "phrase": "multiprocessor_scheduling_scheme"}, {"score": 0.004644014990871423, "phrase": "sporadic_tasks"}, {"score": 0.0045726187330434025, "phrase": "high_utilisation"}, {"score": 0.0035682193844794215, "phrase": "edf"}, {"score": 0.0030083825666563898, "phrase": "priori_which_task_a_server"}, {"score": 0.002740885774408238, "phrase": "cache-related_preemption"}, {"score": 0.0024971144603069006, "phrase": "cpmd_estimation"}, {"score": 0.0024333239726872604, "phrase": "amended_bin-packing_scheme"}, {"score": 0.0021049977753042253, "phrase": "migrating_tasks"}], "paper_keywords": ["Real-time scheduling", " Multiprocessor", " Semi-partitioned", " NPS-F", " Bin packing", " CPMD estimation"], "paper_abstract": "The multiprocessor scheduling scheme NPS-F for sporadic tasks has a high utilisation bound and an overall number of preemptions bounded at design time. NPS-F binpacks tasks offline to as many servers as needed. At runtime, the scheduler ensures that each server is mapped to at most one of the m processors, at any instant. When scheduled, servers use EDF to select which of their tasks to run. Yet, unlike the overall number of preemptions, the migrations per se are not tightly bounded. Moreover, we cannot know a priori which task a server will be currently executing at the instant when it migrates. This uncertainty complicates the estimation of cache-related preemption and migration costs (CPMD), potentially resulting in their overestimation. Therefore, to simplify the CPMD estimation, we propose an amended bin-packing scheme for NPS-F allowing us (i) to identify at design time, which task migrates at which instant and (ii) bound a priori the number of migrating tasks, while preserving the utilisation bound of NPS-F.", "paper_title": "CPMD-mindful task assignment for NPS-F", "paper_id": "WOS:000344182000001"}