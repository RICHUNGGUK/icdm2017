{"auto_keywords": [{"score": 0.04092662713864431, "phrase": "rational_permutations"}, {"score": 0.013158283894449686, "phrase": "matrix_transposition"}, {"score": 0.010569363589721846, "phrase": "rational_permutation"}, {"score": 0.010408820375881983, "phrase": "optimal_cache_complexity"}, {"score": 0.010043543306756535, "phrase": "cache-oblivious_algorithm"}, {"score": 0.009495014825434958, "phrase": "tall_cache_assumption"}, {"score": 0.00481495049065317, "phrase": "cache-oblivious_rational_permutations"}, {"score": 0.00421340730888561, "phrase": "binary_representations"}, {"score": 0.0041490029730869345, "phrase": "vector_indices"}, {"score": 0.003941319912895672, "phrase": "notable_examples"}, {"score": 0.0035565113234273926, "phrase": "cache_hierarchies"}, {"score": 0.0035021127041237887, "phrase": "particular_emphasis"}, {"score": 0.0034485432592912917, "phrase": "cache-oblivious_setting"}, {"score": 0.002940626369102927, "phrase": "optimal_work_and_cache_complexities"}, {"score": 0.0026945086500597304, "phrase": "bit_reversal"}, {"score": 0.002533253511622532, "phrase": "cache_parameters"}, {"score": 0.002494466951433885, "phrase": "latter_result"}, {"score": 0.0024186627398860745, "phrase": "brodal"}, {"score": 0.0023939082532018993, "phrase": "fagerberg"}, {"score": 0.0023694065215394593, "phrase": "general_permutations"}, {"score": 0.002159852420283463, "phrase": "cache_optimality"}, {"score": 0.0021049977753042253, "phrase": "cache-oblivious_algorithms"}], "paper_keywords": ["rational permutation", " cache-oblivious algorithm", " tall cache", " lowerbound", " impossibility result", " memory hierarchy"], "paper_abstract": "Permuting a vector is a fundamental primitive which arises in many applications. In particular, rational permutations, which are defined by permutations of the bits of the binary representations of the vector indices, are widely used. Matrix transposition and bit-reversal are notable examples of rational permutations. In this paper we contribute a number of results regarding the execution of these permutations in cache hierarchies, with particular emphasis on the cache-oblivious setting. We first bound from below the work needed to execute a rational permutation with an optimal cache complexity. Then, we develop a cache-oblivious algorithm to perform any rational permutation, which exhibits optimal work and cache complexities under the tall cache assumption. We finally show that for certain families of rational permutations (including matrix transposition and bit reversal) no cache-oblivious algorithm can exhibit optimal cache complexity for all values of the cache parameters. This latter result specializes the one proved by Brodal and Fagerberg for general permutations to the case of rational permutations, and provides further evidence that the tall cache assumption is often necessary to attain cache optimality in the context of cache-oblivious algorithms. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "On the limits of cache-oblivious rational permutations", "paper_id": "WOS:000258242700010"}