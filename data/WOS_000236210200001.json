{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stable_models"}, {"score": 0.014862137826237274, "phrase": "coherence_spaces"}, {"score": 0.013826986444911319, "phrase": "pcf."}, {"score": 0.008953716898465589, "phrase": "extended_language"}, {"score": 0.0046238380150870435, "phrase": "qualitative_domains"}, {"score": 0.003932003833923186, "phrase": "stable_parallel_functions"}, {"score": 0.0038375280115736958, "phrase": "stable_functions"}, {"score": 0.003567455727660992, "phrase": "extensional_order"}, {"score": 0.003133252930886608, "phrase": "paradigmatic_programming_language"}, {"score": 0.0030828215204304473, "phrase": "stpcf"}, {"score": 0.0029126002350975634, "phrase": "language_pcf"}, {"score": 0.002796782643988021, "phrase": "operational_description"}, {"score": 0.0026209522797963447, "phrase": "effective_way"}, {"score": 0.002436289099444074, "phrase": "new_operators"}, {"score": 0.0023016843709107297, "phrase": "pcf-like_rewrite_system"}, {"score": 0.002246292543825748, "phrase": "st_pcf"}, {"score": 0.0021745003291048356, "phrase": "finite_cliques"}], "paper_keywords": [""], "paper_abstract": "It is well-known that stable models (as dI-domains, qualitative domains and coherence spaces) are not fully abstract for the language PCF. This fact is related to the existence of stable parallel functions and of stable functions that are not monotone with respect to the extensional order, which cannot be defined by programs of PCF. In this paper, a paradigmatic programming language named StPCF is proposed, which extends the language PCF with two additional operators. The operational description of the extended language is presented in an effective way, although the evaluation of one of the new operators cannot be formalized in a PCF-like rewrite system. Since St PCF can define all finite cliques of coherence spaces the above gap with stable models is filled, consequently stable models are fully abstract for the extended language. (c) 2005 Elsevier Inc. All rights reserved.", "paper_title": "A stable programming language", "paper_id": "WOS:000236210200001"}