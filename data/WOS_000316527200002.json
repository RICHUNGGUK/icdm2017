{"auto_keywords": [{"score": 0.04342032778234671, "phrase": "general_team_factors"}, {"score": 0.015203972017243274, "phrase": "agile_technology"}, {"score": 0.009462741062472853, "phrase": "xp-specific_team_factor"}, {"score": 0.004815625787328009, "phrase": "fidelity"}, {"score": 0.0045903243893123105, "phrase": "empirical_work"}, {"score": 0.004376131419366239, "phrase": "performance_advantage"}, {"score": 0.004351595642056769, "phrase": "traditional_methods"}, {"score": 0.0040334640350288, "phrase": "team's_success"}, {"score": 0.003932654396285872, "phrase": "agile_development_method's_collective_ownership"}, {"score": 0.0037701851296383405, "phrase": "agile_methodology"}, {"score": 0.003749033935324126, "phrase": "agile-specific_team_methods"}, {"score": 0.0036656047855140386, "phrase": "software_teams"}, {"score": 0.00357395617690842, "phrase": "extreme_programming"}, {"score": 0.0033974527047473044, "phrase": "xp-specific_team_practices"}, {"score": 0.0032387402145603412, "phrase": "project's_outcomes"}, {"score": 0.0032024832043416516, "phrase": "williams_et_al"}, {"score": 0.0030961218779438702, "phrase": "xp_methods"}, {"score": 0.002959765109527493, "phrase": "project's_performance"}, {"score": 0.002943147037670826, "phrase": "teamworking"}, {"score": 0.0027047548540516113, "phrase": "customer_access"}, {"score": 0.002689564715486338, "phrase": "short_releases"}, {"score": 0.00266693888510356, "phrase": "stand-up_meeting"}, {"score": 0.0025638362414466278, "phrase": "automated_unit_tests"}, {"score": 0.0025494354909453847, "phrase": "customer_acceptance_tests"}, {"score": 0.002535115422089855, "phrase": "test-first_design"}, {"score": 0.0021651504858015364, "phrase": "xp_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software development", " Extreme programming", " Agile methods", " Teamwork", " Cooperation", " Performance"], "paper_abstract": "Context: Developing a theory of agile technology, in combination with empirical work, must include assessing its performance effects, and whether all or some of its key ingredients account for any performance advantage over traditional methods. Given the focus on teamwork, is the agile technology what really matters, or do general team factors, such as cohesion, primarily account for a team's success? Perhaps the more specific software engineering team factors, for example the agile development method's collective ownership and code management, are decisive. Objective: To assess the contribution of agile methodology, agile-specific team methods, and general team factors in the performance of software teams. Method: We studied 40 small-scale software development teams which used Extreme Programming (XP). We measured (1) the teams' adherence to XP methods, (2) their use of XP-specific team practices, and (3) standard team attributes, as well as the quality of the project's outcomes. We used Williams et al.'s (2004a) [33] Shodan measures of XP methods, and regression analysis. Results: All three types of variables are associated with the project's performance. Teamworking is important but it is the XP-specific team factor (continuous integration, coding standards, and collective code ownership) that is significant. Only customer planning (release planning/planning game, customer access, short releases, and stand-up meeting) is positively related to performance. A negative relationship between foundations (automated unit tests, customer acceptance tests, test-first design, pair programming, and refactoring) is found and is moderated by craftsmanship (sustainable pace, simple design, and metaphor/system of names). Of the general team factors only cooperation is related to performance. Cooperation mediates the relationship between the XP-specific team factor and performance. Conclusion: Client and team foci of the XP method are its critical active ingredients. (C) 2013 Published by Elsevier B.V.", "paper_title": "Successful extreme programming: Fidelity to the methodology or good teamworking?", "paper_id": "WOS:000316527200002"}