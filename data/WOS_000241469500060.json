{"auto_keywords": [{"score": 0.04733190377720633, "phrase": "threading_libraries"}, {"score": 0.00481495049065317, "phrase": "memory_management"}, {"score": 0.004734448316824488, "phrase": "parallel_programming_models"}, {"score": 0.004463096299091981, "phrase": "sophisticated_memory_management_techniques"}, {"score": 0.003932654396285872, "phrase": "non-preemptive_parallel_programming_models"}, {"score": 0.0033218213825698417, "phrase": "nthlib"}, {"score": 0.003104849179057156, "phrase": "nano-threads_programming_model"}, {"score": 0.0029266219967426224, "phrase": "intel_based_multiprocessor_system"}, {"score": 0.0028775998963807324, "phrase": "hyper-threading"}, {"score": 0.0027819985260847577, "phrase": "smtsim_simulator"}, {"score": 0.0026222551419772867, "phrase": "memory_requirements"}, {"score": 0.0024926348205500715, "phrase": "execution_time"}, {"score": 0.002349467661235186, "phrase": "original_implementation"}, {"score": 0.0021408862709571615, "phrase": "larger_numbers"}, {"score": 0.0021049977753042253, "phrase": "parallel_tasks"}], "paper_keywords": [""], "paper_abstract": "Stand-alone threading libraries lack sophisticated memory management techniques. In this paper, we present a methodology that allows threading libraries that implement non-preemptive parallel programming models to reduce their memory requirements, based on the properties of those models. We applied the methodology to NthLib, which is an implementation of the Nano-Threads programming model, and evaluated it on an Intel based multiprocessor system with Hyper-Threading and on the SMTSIM simulator. Our results indicate that not only memory requirements drop drastically, but that execution time also improves, compared to the original implementation. This allows more fine-grained, but also larger numbers of parallel tasks to be created.", "paper_title": "Tying memory management to parallel programming models", "paper_id": "WOS:000241469500060"}