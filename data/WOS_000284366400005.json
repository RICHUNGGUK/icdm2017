{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_programming_models"}, {"score": 0.004658426838467567, "phrase": "heterogeneous_multicore_architectures."}, {"score": 0.004014452814186653, "phrase": "six_parallel_programming_models"}, {"score": 0.003516898780234098, "phrase": "task-based_models"}, {"score": 0.0030808211830129304, "phrase": "minimum_programming_effort"}, {"score": 0.002931569771634119, "phrase": "nearly_best_performance"}, {"score": 0.0024434201175883674, "phrase": "programming_models"}, {"score": 0.002175913488493802, "phrase": "proper_interoperability"}, {"score": 0.0021049977753042253, "phrase": "platform-specific_optimizations"}], "paper_keywords": [""], "paper_abstract": "This article evaluates the scalability and productivity of six parallel programming models for heterogeneous architectures, and finds that task-based models using code and data annotations require the minimum programming effort while sustaining nearly best performance. However, achieving this result requires both extensions of programming models to control locality and granularity and proper interoperability with platform-specific optimizations.", "paper_title": "PARALLEL PROGRAMMING MODELS FOR HETEROGENEOUS MULTICORE ARCHITECTURES", "paper_id": "WOS:000284366400005"}