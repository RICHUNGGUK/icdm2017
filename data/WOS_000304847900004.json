{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "data_exchange"}, {"score": 0.004661868629458321, "phrase": "data_sources"}, {"score": 0.004410629943506433, "phrase": "practical_tools"}, {"score": 0.004370087541308677, "phrase": "schema_mapping_generation"}, {"score": 0.004153647187175639, "phrase": "visual_specifications"}, {"score": 0.003947884118204803, "phrase": "theoretical_researches"}, {"score": 0.0035010071030752883, "phrase": "tuple_generating_dependencies"}, {"score": 0.003389557201018519, "phrase": "core_solution"}, {"score": 0.003281643474564305, "phrase": "optimal_solution"}, {"score": 0.0031479142819948007, "phrase": "core_computations"}, {"score": 0.003118942369691329, "phrase": "mapping_systems"}, {"score": 0.0026775328564629577, "phrase": "mapping_scenario"}, {"score": 0.0025802660239538353, "phrase": "executable_script"}, {"score": 0.0025447065763362984, "phrase": "core_solutions"}, {"score": 0.0025096359514694523, "phrase": "corresponding_data_exchange_problem"}, {"score": 0.002396179086883187, "phrase": "common_runtime_engines"}, {"score": 0.0022355167967736326, "phrase": "known_algorithms"}, {"score": 0.002164264600379492, "phrase": "post-processing_step"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Schema mappings", " Data exchange", " Core computation"], "paper_abstract": "Research has investigated mappings among data sources under two perspectives. On the one side, there are studies of practical tools for schema mapping generation; these focus on algorithms to generate mappings based on visual specifications provided by users. On the other side, we have theoretical researches about data exchange. These study how to generate a solution - i.e., a target instance - given a set of mappings usually specified as tuple generating dependencies. Since the notion of a core solution has been formally identified as an optimal solution, it is very important to efficiently support core computations in mapping systems. In this paper, we introduce several new algorithms that contribute to bridge the gap between the practice of mapping generation and the theory of data exchange. We show how, given a mapping scenario, it is possible to generate an executable script that computes core solutions for the corresponding data exchange problem. The algorithms have been implemented and tested using common runtime engines to show that they guarantee very good performances, orders of magnitudes better than those of known algorithms that compute the core as a post-processing step. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Core schema mappings: Scalable core computations in data exchange", "paper_id": "WOS:000304847900004"}