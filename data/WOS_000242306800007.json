{"auto_keywords": [{"score": 0.043429710921929404, "phrase": "common_intervals"}, {"score": 0.00481495049065317, "phrase": "pseudo-boolean_programming"}, {"score": 0.00471003041684707, "phrase": "rearrangement_distance_computation"}, {"score": 0.004658426838467567, "phrase": "computing_genomic_distances"}, {"score": 0.0046073860169839305, "phrase": "whole_genomes"}, {"score": 0.0045318666714939905, "phrase": "fundamental_problem"}, {"score": 0.004482206282876944, "phrase": "comparative_genomics"}, {"score": 0.00443308765153716, "phrase": "recent_researches"}, {"score": 0.00433645229352341, "phrase": "different_genomic_distance_definitions"}, {"score": 0.004058951880810154, "phrase": "conserved_intervals"}, {"score": 0.004014452814186653, "phrase": "maximum_adjacency"}, {"score": 0.0035377880940694034, "phrase": "np"}, {"score": 0.002947790697936243, "phrase": "absolute_accuracy"}, {"score": 0.002789528662623221, "phrase": "great_need"}, {"score": 0.002758907973783665, "phrase": "algorithmic_approaches"}, {"score": 0.002713604305939145, "phrase": "exact_solutions"}, {"score": 0.002669042572650594, "phrase": "genomic_distances"}, {"score": 0.002539689093411356, "phrase": "novel_generic_pseudo-boolean_approach"}, {"score": 0.0024842242921857705, "phrase": "exact_genomic_distance"}, {"score": 0.0023507916951658455, "phrase": "strong_emphasis"}, {"score": 0.002286781334850213, "phrase": "maximum_matching_model"}, {"score": 0.0022492129111567824, "phrase": "particular_importance"}, {"score": 0.002163930783583212, "phrase": "simple_lcs_heuristic"}, {"score": 0.0021049977753042253, "phrase": "well-known_public_benchmark_dataset"}], "paper_keywords": ["pseudo-boolean programming", " genome rearrangement", " common intervals", " duplication", " heuristic"], "paper_abstract": "Computing genomic distances between whole genomes is a fundamental problem in comparative genomics. Recent researches have resulted in different genomic distance definitions: number of breakpoints, number of common intervals, number of conserved intervals, Maximum Adjacency Disruption number (MAD), etc. Unfortunately, it turns out that, in presence of duplications, most problems are NP-hard, and hence several heuristics have been recently proposed. However, while it is relatively easy to compare heuristics between them, until now very little is known about the absolute accuracy of these heuristics. Therefore, there is a great need for algorithmic approaches that compute exact solutions for these genomic distances. In this paper, we present a novel generic pseudo-Boolean approach for computing the exact genomic distance between two whole genomes in presence of duplications, and put strong emphasis on common intervals under the maximum matching model. Of particular importance, we show very strong evidence that the simple LCS heuristic provides very good results on a well-known public benchmark dataset of gamma-Proteobacteria.", "paper_title": "How pseudo-boolean programming can help genome rearrangement distance computation", "paper_id": "WOS:000242306800007"}