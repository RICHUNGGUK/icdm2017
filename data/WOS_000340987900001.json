{"auto_keywords": [{"score": 0.049378038061471535, "phrase": "gapped_patterns"}, {"score": 0.007350142102607634, "phrase": "existing_algorithms"}, {"score": 0.0048149800481973835, "phrase": "motif"}, {"score": 0.004652016085325825, "phrase": "new_algorithms"}, {"score": 0.004539005582217309, "phrase": "multiple_string_matching"}, {"score": 0.004406994912939125, "phrase": "gapped_pattern"}, {"score": 0.004133940019630129, "phrase": "fixed_length"}, {"score": 0.003877737556673229, "phrase": "transcription_factor"}, {"score": 0.003858697684681798, "phrase": "binding_sites"}, {"score": 0.003820896867623235, "phrase": "dna_sequences"}, {"score": 0.00376488621224566, "phrase": "generalized_versions"}, {"score": 0.0036553070575015344, "phrase": "transcription_factor_specificities"}, {"score": 0.003378385493203297, "phrase": "unit-length_keywords"}, {"score": 0.002986969236641105, "phrase": "particular_case"}, {"score": 0.002943147037670826, "phrase": "novel_algorithms"}, {"score": 0.002843372121209168, "phrase": "dynamic_programming"}, {"score": 0.0023811153883132536, "phrase": "experimental_results"}, {"score": 0.002323142666222693, "phrase": "presented_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Combinatorial problems", " String algorithms", " Multiple pattern matching", " Pattern matching with gaps", " Word-level parallelism"], "paper_abstract": "We present new algorithms for the problem of multiple string matching of gapped patterns, where a gapped pattern is a sequence of strings such that there is a gap of fixed length between each two consecutive strings. The problem has applications in the discovery of transcription factor binding sites in DNA sequences when using generalized versions of the Position Weight Matrix model to describe transcription factor specificities. In these models a motif can be matched as a set of gapped patterns with unit-length keywords. The existing algorithms for matching a set of gapped patterns are worst-case efficient but not practical, or vice versa, in this particular case. The novel algorithms that we present are based on dynamic programming and bit-parallelism, and lie in a middle-ground among the existing algorithms. In fact, their time complexity is close to the best existing bound and, yet, they are also practical. We also provide experimental results which show that the presented algorithms are fast in practice, and preferable if all the strings in the patterns have unit-length. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Motif matching using gapped patterns", "paper_id": "WOS:000340987900001"}