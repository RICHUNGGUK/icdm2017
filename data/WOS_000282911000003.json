{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "audlib"}, {"score": 0.004611554879923759, "phrase": "security-relevant_information"}, {"score": 0.00438955582974973, "phrase": "wrapper_environment"}, {"score": 0.00430907756010007, "phrase": "application_level_audit_information"}, {"score": 0.004256243266481051, "phrase": "existing_executable_programs"}, {"score": 0.004101579688745222, "phrase": "detection_system"}, {"score": 0.0039040344230094164, "phrase": "existing_audit_systems"}, {"score": 0.0035369291417564606, "phrase": "existing_kernel-level_audit_sources"}, {"score": 0.0033251716926666437, "phrase": "audlib_framework"}, {"score": 0.0030497740719977835, "phrase": "web_server"}, {"score": 0.0029753513692467315, "phrase": "existing_kernel_audit_sources"}, {"score": 0.002831910651960411, "phrase": "linux"}, {"score": 0.002678734566245688, "phrase": "detailed_information"}, {"score": 0.002629539710839523, "phrase": "server's_execution"}, {"score": 0.0025027144548626975, "phrase": "security_information"}, {"score": 0.002323826502178581, "phrase": "wide_variety"}, {"score": 0.002239225269052105, "phrase": "dependency_analysis"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["audit systems", " computer security monitoring", " attack detection", " intrusion detection", " misuse detection"], "paper_abstract": "In this paper, we introduce Audlib, an extendable tool for generating security-relevant information on Unix systems. Audlib is a wrapper environment that generates application level audit information from existing executable programs. Audlib is not a detection system, instead it is designed to supplement existing audit systems and work transparently with them. Audlib records information that is not presently available from existing kernel-level audit sources. Here, we describe the design of the Audlib framework and the information it provides. We compare auditing the actions of a web server with Audlib to existing kernel audit sources and show that we have 2-4 times the throughput of Linux auditd and less than half the performance overhead of Solaris BSM while collecting detailed information about the server's execution. Although Audlib is focused on recording security information, this technique can be used to collect data for a wide variety of purposes including profiling, dependency analysis, and debugging. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Audlib: a configurable, high-fidelity application audit mechanism", "paper_id": "WOS:000282911000003"}