{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "capacitated_max"}, {"score": 0.004215397034321004, "phrase": "k_subsets"}, {"score": 0.00398177607914381, "phrase": "non-negative_weight"}, {"score": 0.003725470458263889, "phrase": "possibly_different_capacity"}, {"score": 0.0035864603175592854, "phrase": "upper_bound"}, {"score": 0.0030802351224657673, "phrase": "edge_weights"}, {"score": 0.0028274743316389437, "phrase": "different_subsets"}, {"score": 0.002696101728474703, "phrase": "local-search_algorithm"}, {"score": 0.002382329940096419, "phrase": "optimal_solution_value"}, {"score": 0.0021454671611847507, "phrase": "max_k-cut_problem"}], "paper_keywords": [""], "paper_abstract": "We consider a capacitated max k-cut problem in which a set of vertices is partitioned into k subsets. Each edge has a non-negative weight, and each subset has a possibly different capacity that imposes an upper bound on its size. The objective is to find a partition that maximizes the sum of edge weights across all pairs of vertices that lie in different subsets. We describe a local-search algorithm that obtains a solution with value no smaller than 1 - 1/k of the optimal solution value. This improves a previous bound of 1/2 for the max k-cut problem with fixed, though possibly different, sizes of subsets.", "paper_title": "The capacitated max k-cut problem", "paper_id": "WOS:000255876800003"}