{"auto_keywords": [{"score": 0.042070971187967834, "phrase": "pdp"}, {"score": 0.012421359231978912, "phrase": "multimedia_applications"}, {"score": 0.004783232571029632, "phrase": "embedded_processors"}, {"score": 0.004689321062844586, "phrase": "video_processing"}, {"score": 0.004536862734384202, "phrase": "increasingly_popular_and_important_workloads"}, {"score": 0.004403874076980828, "phrase": "high_computational_requirements"}, {"score": 0.004331675965350876, "phrase": "low_power"}, {"score": 0.004303127794432684, "phrase": "high_performance"}, {"score": 0.0041084684278314305, "phrase": "new_data_prefetch_mechanism"}, {"score": 0.003948613642680196, "phrase": "data_cache"}, {"score": 0.003896717568943166, "phrase": "recurring_patterns"}, {"score": 0.0036836332308340923, "phrase": "inter-miss_stride"}, {"score": 0.0033245147666408157, "phrase": "prefetch_actions"}, {"score": 0.0032916702592724217, "phrase": "future_accesses"}, {"score": 0.0032591491777773035, "phrase": "memory_access_latencies"}, {"score": 0.003205657519784272, "phrase": "simple_yet_effective_stop_criterion"}, {"score": 0.003091036449708673, "phrase": "additional_memory_accesses"}, {"score": 0.003060491505805715, "phrase": "additional_hardware"}, {"score": 0.002921879966280267, "phrase": "embedded_systems"}, {"score": 0.002789528662623221, "phrase": "momusys_reference_software"}, {"score": 0.0025509294021449254, "phrase": "external_memory"}, {"score": 0.0024678216843278806, "phrase": "performance_increases"}, {"score": 0.002271679416337276, "phrase": "significant_speedups"}, {"score": 0.002147265537489893, "phrase": "stream_buffers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["embedded processors", " MPEG", " multimedia applications", " prefetching"], "paper_abstract": "Multimedia applications in general and video processing, such as the MPEG4 Visual stream decoders, in particular are increasingly popular and important workloads for future embedded systems. Due to the high computational requirements, the need for low power, high performance embedded processors for multimedia applications is growing very fast. This paper proposes a new data prefetch mechanism called pattern-driven prefetching. PDP inspects the sequence of data cache misses and detects recurring patterns within that sequence. The patterns that are observed are based on the notions of the inter-miss stride (memory address stride between two misses) and the inter-miss interval (number of cycles between two misses). According to the patterns being detected, PDP initiates prefetch actions to anticipate future accesses and hide memory access latencies. PDP includes a simple yet effective stop criterion to avoid cache pollution and to reduce the number of additional memory accesses. The additional hardware needed for PDP is very limited making it an effective prefetch mechanism for embedded systems. In our experimental setup, we use cycle-level power/performance simulations of the MPEG4 Visual stream decoders from the MoMuSys reference software with various video streams. Our results show that PDP increases performance by as much as 45%, 24% and 10% for 2KB, 4KB and 8KB data caches, respectively, while the increase in external memory accesses remains under 0.6%. In conjunction with these performance increases, system-level (on-chip plus off-chip) energy reductions of 20%, 11.5% and 8% are obtained for 2KB, 4KB and 8KB data caches, respectively. In addition, we report significant speedups (up to 160%) for various other multimedia applications. Finally, we also show that PDP outperforms stream buffers. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Pattern-driven prefetching for multimedia applications on embedded processors", "paper_id": "WOS:000236785400001"}