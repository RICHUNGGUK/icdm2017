{"auto_keywords": [{"score": 0.04954033184026155, "phrase": "wait-free_concurrent_data_objects"}, {"score": 0.04769951483161258, "phrase": "real-time_systems"}, {"score": 0.00481495049065317, "phrase": "wait-free_data_objects"}, {"score": 0.004627944735913613, "phrase": "multiprocessor_systems"}, {"score": 0.004227209809791869, "phrase": "concurrent_operations"}, {"score": 0.0040171817997972335, "phrase": "bounded_number"}, {"score": 0.003817548980308163, "phrase": "data_objects"}, {"score": 0.0037745459666402915, "phrase": "high_access_parallelism_and_guarantee_correctness"}, {"score": 0.003332210257373994, "phrase": "single_read-operation"}, {"score": 0.0030955250132409964, "phrase": "significant_measure"}, {"score": 0.0030433302702291116, "phrase": "object_quality"}, {"score": 0.0028111220617485985, "phrase": "freshness_measure"}, {"score": 0.002671263324230699, "phrase": "freshness_problem"}, {"score": 0.0026262033625248445, "phrase": "online_problem"}, {"score": 0.0025097154697345096, "phrase": "first_one"}, {"score": 0.0024673738215365104, "phrase": "deterministic_algorithm"}, {"score": 0.0024395426929046415, "phrase": "asymptotically_optimal_competitive_ratio_root_alpha"}, {"score": 0.0022278779300543548, "phrase": "wait-free_operations"}, {"score": 0.002190280748985751, "phrase": "second_one"}, {"score": 0.002153316680437517, "phrase": "competitive_randomized_algorithm"}], "paper_keywords": [""], "paper_abstract": "Wait-free concurrent data objects are widely used in multiprocessor systems and real-time systems. Their popularity results from the fact that they avoid locking and that concurrent operations on such data objects are guaranteed to finish in a bounded number of steps regardless of the other operations interference. The data objects allow high access parallelism and guarantee correctness of the concurrent access with respect to its semantics. In such a highly-concurrent environment, where many wait-free write-operations updating the object state can overlap a single read-operation, the age/freshness of the state returned by this read-operation is a significant measure of the object quality, especially for real-time systems. In this paper, we first propose a freshness measure for wait-free concurrent data objects. Subsequently, we model the freshness problem as an online problem and present two algorithms for it. The first one is a deterministic algorithm with asymptotically optimal competitive ratio root alpha, where a is a function of the execution-time upper-bound of wait-free operations. The second one is a competitive randomized algorithm with competitive ratio 1n alpha/1 + 1n 2 - 2/root alpha.", "paper_title": "Competitive freshness algorithms for wait-free data objects", "paper_id": "WOS:000241469500073"}