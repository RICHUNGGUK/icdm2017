{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "swmr_atomic_memory"}, {"score": 0.0047057084749407485, "phrase": "message-passing_systems"}, {"score": 0.0045464538515249085, "phrase": "fault-tolerant_and_practically_stabilizing_simulation"}, {"score": 0.003961330917648707, "phrase": "asynchronous_message-passing_systems"}, {"score": 0.003296212583539166, "phrase": "practically_stabilizing_manner"}, {"score": 0.0031121406603482112, "phrase": "long_execution"}, {"score": 0.00283870598459543, "phrase": "key_element"}, {"score": 0.0026494723416072316, "phrase": "new_combinatorial_construction"}, {"score": 0.0025596276616952516, "phrase": "bounded_labeling_scheme"}, {"score": 0.0025014259919355453, "phrase": "arbitrary_labels"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Self-stabilization", " Shared memory", " Message passing", " Single writer multiple reader register"], "paper_abstract": "A fault-tolerant and practically stabilizing simulation of an atomic register is presented. The simulation works in asynchronous message-passing systems, and allows a minority of processes to crash. The simulation stabilizes in a practically stabilizing manner, by reaching a long execution in which it runs correctly. A key element in the simulation is a new combinatorial construction of a bounded labeling scheme accommodating arbitrary labels, including those not generated by the scheme itself. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Practically stabilizing SWMR atomic memory in message-passing systems", "paper_id": "WOS:000349741800005"}