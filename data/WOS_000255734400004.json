{"auto_keywords": [{"score": 0.03881915877269683, "phrase": "dw_repository"}, {"score": 0.00481495049065317, "phrase": "data_warehouses"}, {"score": 0.004766090327062509, "phrase": "different_modeling_approaches"}, {"score": 0.004598933498016774, "phrase": "design_pitfall"}, {"score": 0.004552255360140208, "phrase": "different_data_warehouse"}, {"score": 0.0042819270655224916, "phrase": "partial_solutions"}, {"score": 0.004174064076143015, "phrase": "isolated_aspects"}, {"score": 0.003946195919158241, "phrase": "integrated_and_standard_framework"}, {"score": 0.003866443402315402, "phrase": "dw_relevant_components"}, {"score": 0.003788296551609616, "phrase": "etl_processes"}, {"score": 0.0033857878144822906, "phrase": "whole_dw_development_process"}, {"score": 0.002889928791032578, "phrase": "dw_system"}, {"score": 0.0027459678326877744, "phrase": "different_mda_models"}, {"score": 0.0025563606086121044, "phrase": "cwm"}, {"score": 0.002261204313587616, "phrase": "case_study"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["data warehouse", " multidimensional modeling", " MDA", " QVT"], "paper_abstract": "Different modeling approaches have been proposed to overcome every design pitfall of different data warehouse (DW) components. However, most of them offer partial solutions that deal only with isolated aspects of the DW and do not provide developers with an integrated and standard framework for designing all DW relevant components, such as ETL processes, data sources, DW repository and so on. To overcome this problem, this paper describes how to align the whole DW development process with a Model Driven Architecture (MDA) framework. We then focus on describing one part of it: an MDA approach for the development of the DW repository, because it is the cornerstone of any DW system. Therefore, we describe how to build the different MDA models for the DW repository by using an extension of the Unified Modeling Language (UML) and the Common Warehouse Metamodel (CWM). Transformations between models are also clearly and formally established by using the Query/ View/Transformation (QVT) language. Finally, a case study is provided to exemplify the benefits of our MDA framework. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "An MDA approach for the development of data warehouses", "paper_id": "WOS:000255734400004"}