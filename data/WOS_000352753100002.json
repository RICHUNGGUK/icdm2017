{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "minimum_number"}, {"score": 0.01379462953341482, "phrase": "longest_edge"}, {"score": 0.01086046018016019, "phrase": "refinement_process"}, {"score": 0.004760017604908536, "phrase": "simplex_shapes"}, {"score": 0.0047057084749407485, "phrase": "longest_edge_bisection_refinement"}, {"score": 0.0046253989970108985, "phrase": "regular_n-simplex"}, {"score": 0.004494570360108983, "phrase": "global_optimization"}, {"score": 0.004443276312972159, "phrase": "branch-and-bound_methods"}, {"score": 0.00436742595270452, "phrase": "unit_n-simplex"}, {"score": 0.004123781267600542, "phrase": "binary_search_tree"}, {"score": 0.003916098498242888, "phrase": "different_shape_classes"}, {"score": 0.003592859432554987, "phrase": "binary_tree"}, {"score": 0.0033922781038328844, "phrase": "irregular_sub-simplices"}, {"score": 0.0028715299874549245, "phrase": "shape_classes"}, {"score": 0.002444544487772349, "phrase": "eight_classes"}, {"score": 0.0023346234464901978, "phrase": "high_computational_cost"}, {"score": 0.0022815262950738814, "phrase": "combinatorial_problem"}, {"score": 0.002255431275670053, "phrase": "future_research"}, {"score": 0.0022041312401435346, "phrase": "high_performance_computing"}, {"score": 0.0021049977753042253, "phrase": "higher_dimensions"}], "paper_keywords": ["regular simplex", " longest edge bisection", " branch-and-bound", " combinatorial optimization", " simplex shape"], "paper_abstract": "In several areas like Global Optimization using branch-and-bound methods, the unit n-simplex is refined by bisecting the longest edge such that a binary search tree appears. This process generates simplices belonging to different shape classes. Having less simplex shapes facilitates the prediction of the further workload from a node in the binary tree, because the same shape leads to the same sub-tree. Irregular sub-simplices generated in the refinement process may have more than one longest edge when n >= 3. The question is how to choose the longest edge to be bisected such that the number of shape classes is as small as possible. We develop a Branch-and-Bound (B&B) algorithm to find the minimum number of classes in the refinement process. The developed B&B algorithm provides a minimum number of eight classes for a regular 3-simplex. Due to the high computational cost of solving this combinatorial problem, future research focuses on using high performance computing to derive the minimum number of shapes in higher dimensions.", "paper_title": "On the Minimum Number of Simplex Shapes in Longest Edge Bisection Refinement of a Regular n-Simplex", "paper_id": "WOS:000352753100002"}