{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large-scale_distributed_event-based_system"}, {"score": 0.0045262653692203815, "phrase": "timely_delivery"}, {"score": 0.004475659507646842, "phrase": "real-time_events"}, {"score": 0.004400804926266097, "phrase": "large_number"}, {"score": 0.004351595642056769, "phrase": "low_priority_events"}, {"score": 0.004183638135671596, "phrase": "high_priority_events"}, {"score": 0.003954837422946628, "phrase": "event-based_middleware"}, {"score": 0.003910595307634916, "phrase": "large-scale_distributed_system"}, {"score": 0.003845154818609644, "phrase": "vehicular_ad_hoc_networks"}, {"score": 0.00378080526397273, "phrase": "event_priority_determination_engine"}, {"score": 0.0035941231858949035, "phrase": "priority_rule_size"}, {"score": 0.0034166271604770576, "phrase": "innovative_approach"}, {"score": 0.0033594249301033604, "phrase": "bloom_filter"}, {"score": 0.003247868216333148, "phrase": "bloom_filter_data_structure"}, {"score": 0.003140004304719746, "phrase": "rule_instances"}, {"score": 0.00305285084207725, "phrase": "complex_rule_evaluation"}, {"score": 0.0028857130140890787, "phrase": "bloom_filters"}, {"score": 0.0028373742057129126, "phrase": "time_complexity"}, {"score": 0.002805597755796506, "phrase": "data_prioritization"}, {"score": 0.00266693888510356, "phrase": "priority_rules"}, {"score": 0.0026222551419772867, "phrase": "event_discretization_signatures"}, {"score": 0.0024234059612683032, "phrase": "previous_computation_results"}, {"score": 0.0023560952790080943, "phrase": "overlay_network_nodes"}, {"score": 0.0022777800735119405, "phrase": "system_throughputs"}, {"score": 0.0021049977753042253, "phrase": "significant_performance_improvement"}], "paper_keywords": [""], "paper_abstract": "Data prioritization problem is paramount for distributed publish/subscribe infrastructure to the timely delivery of real-time events since a large number of low priority events may clog the channel thereby causing high priority events to get delayed. The challenge raised for the event-based middleware in large-scale distributed system such as vehicular ad hoc networks is that event priority determination engine must be efficient and scalable in terms of priority rule size and event throughputs. This paper proposes an innovative approach based on Bloom filter and event discretization. A Bloom filter data structure is used to store the rule instances and their priorities. The complex rule evaluation is reduced to set membership testing as queries on Bloom filters. The time complexity of data prioritization is constant and independent of the number of priority rules. As event discretization signatures can be cached, this approach is cache friendly in nature. The previous computation results can be cached in overlay network nodes and reused to improve the system throughputs and determination time. We have evaluated our proposed approach and the results show a significant performance improvement.", "paper_title": "Summary Instance: Scalable Event Priority Determination Engine for Large-Scale Distributed Event-Based System", "paper_id": "WOS:000364680700001"}