{"auto_keywords": [{"score": 0.033457111690421336, "phrase": "shape_grammars"}, {"score": 0.00481495049065317, "phrase": "computer-aided_conceptual_design_system"}, {"score": 0.00465634671242413, "phrase": "early_stages"}, {"score": 0.004258372598568333, "phrase": "design_alternatives"}, {"score": 0.004027031316965272, "phrase": "design_process"}, {"score": 0.0037449033166879874, "phrase": "design_requirements"}, {"score": 0.003601235776892337, "phrase": "visual_knowledge"}, {"score": 0.003501991125315889, "phrase": "basic_geometric_transformation_rules"}, {"score": 0.0033301694494391612, "phrase": "modelling_process"}, {"score": 0.0030794433253250476, "phrase": "basic_algorithms"}, {"score": 0.0029945352738604742, "phrase": "logic_design_constraints"}, {"score": 0.002847540262784593, "phrase": "layered_scheme"}, {"score": 0.002722930209707764, "phrase": "computational_cost"}, {"score": 0.00269263690712392, "phrase": "shape_generation"}, {"score": 0.0024897902536499005, "phrase": "graphic_environment"}, {"score": 0.0023941598279221296, "phrase": "shade"}, {"score": 0.0023151088048303705, "phrase": "architectural_design"}, {"score": 0.0022893422054387235, "phrase": "video_games_domains"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Computational design", " Computer-aided conceptual design", " Shape grammars", " Architecture", " Video games"], "paper_abstract": "In this article we propose a computer-aided conceptual design system to assist modelling at the early stages of design. More precisely, we address the problem of providing the designer with design alternatives that can be used as starting points of the design process. To guide the generation of such alternatives according to a given set of design requirements, the designer can express both visual knowledge in the form of basic geometric transformation rules, and also logic constraints that guide the modelling process. Our approach is based on the formalism of shape grammars, and supplements the basic algorithms with procedures that integrate logic design constraints and goals. Additionally, we introduce a layered scheme for shape grammars that can greatly reduce the computational cost of shape generation. Shape grammars, constraints, goals and layers can be handled through a graphic environment. We illustrate the functionalities of ShaDe through two use cases taken from the architectural design and video games domains, and also evaluate the performance of the system. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Layered shape grammars", "paper_id": "WOS:000340985900009"}