{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "network_protocols"}, {"score": 0.004577440795549049, "phrase": "networking_research_and_development_field"}, {"score": 0.004102096151528319, "phrase": "first_simulation"}, {"score": 0.003802135020791801, "phrase": "alternative_development_process"}, {"score": 0.0035539019235553897, "phrase": "network_emulation_features"}, {"score": 0.0034944094552943, "phrase": "network_simulator"}, {"score": 0.002805597755796506, "phrase": "data_plane"}, {"score": 0.002758597251689795, "phrase": "large_packets"}, {"score": 0.0026222551419772867, "phrase": "small_packets"}, {"score": 0.002450864311898833, "phrase": "control_plane"}, {"score": 0.002195866991284673, "phrase": "dedicated_implementation"}], "paper_keywords": ["Network protocol", " Simulation", " Implementation", " Framework ns-3"], "paper_abstract": "In the networking research and development field, one recurring problem faced is the duplication of effort to write first simulation and then implementation code. We posit an alternative development process that takes advantage of the built in network emulation features of Network Simulator 3 (ns-3) and allows developers to share most code between simulation and implementation of a protocol. Tests show that ns-3 can handle a data plane processing large packets, but has difficulties with small packets. When using ns-3 for implementing the control plane of a protocol, we found that ns-3 can even outperform a dedicated implementation. (C) 2011 Elsevier B. V. All rights reserved.", "paper_title": "Fast prototyping of network protocols through ns-3 simulation model reuse", "paper_id": "WOS:000302075400019"}