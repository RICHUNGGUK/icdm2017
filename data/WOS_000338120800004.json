{"auto_keywords": [{"score": 0.047748521831607424, "phrase": "score_chart"}, {"score": 0.00481495049065317, "phrase": "chess_visualization"}, {"score": 0.004663074596384574, "phrase": "successive_generations"}, {"score": 0.0045320819060445045, "phrase": "evolution_graph"}, {"score": 0.004483909657713567, "phrase": "chess_board"}, {"score": 0.004296264970612285, "phrase": "local_viewpoints"}, {"score": 0.004250588556735512, "phrase": "current_graphical_chess_tools"}, {"score": 0.004043744293248725, "phrase": "sequential_investigation"}, {"score": 0.003986509098918949, "phrase": "potential_outcomes"}, {"score": 0.0034444213065548688, "phrase": "position_relations"}, {"score": 0.003128216758835217, "phrase": "decision_tree"}, {"score": 0.003105979498529766, "phrase": "artificial_intelligence"}, {"score": 0.002975826686621829, "phrase": "chess_position"}, {"score": 0.0025892330566358503, "phrase": "graph_rendering"}, {"score": 0.0022851491693940272, "phrase": "chess_game"}, {"score": 0.0021893168527276105, "phrase": "presented_results"}, {"score": 0.0021429152327481892, "phrase": "conducted_user_studies"}], "paper_keywords": ["Chess visualization", " graph"], "paper_abstract": "We present a chess visualization to convey the changes in a game over successive generations. It contains a score chart, an evolution graph and a chess board, such that users can understand a game from global to local viewpoints. Unlike current graphical chess tools, which focus only on highlighting pieces that are under attack and require sequential investigation, our visualization shows potential outcomes after a piece is moved and indicates how much tactical advantage the player can have over the opponent. Users can first glance at the score chart to roughly obtain the growth and decline of advantages from both sides, and then examine the position relations and the piece placements, to know how the pieces are controlled and how the strategy works. To achieve this visualization, we compute the decision tree using artificial intelligence to analyze a game, in which each node represents a chess position and each edge connects two positions that are one-move different. We then merge nodes representing the same chess position, and shorten branches where nodes on them contain only two neighbors, in order to achieve readability. During the graph rendering, the nodes containing events such as draws, effective checks and checkmates, are highlighted because they show how a game is ended. As a result, our visualization helps players understand a chess game so that they can efficiently learn strategies and tactics. The presented results, evaluations, and the conducted user studies demonstrate the feasibility of our visualization design.", "paper_title": "Chess Evolution Visualization", "paper_id": "WOS:000338120800004"}