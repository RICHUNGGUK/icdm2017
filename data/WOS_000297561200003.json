{"auto_keywords": [{"score": 0.037329211685609744, "phrase": "ipsec_esp"}, {"score": 0.00481495049065317, "phrase": "qos-friendly_encapsulating_security_payload"}, {"score": 0.0046392209103157936, "phrase": "ipsec_standard"}, {"score": 0.004525629293824217, "phrase": "real_time_network_applications"}, {"score": 0.004396600680348434, "phrase": "cause_packet_delay"}, {"score": 0.004342430078306461, "phrase": "qos_enforcement"}, {"score": 0.00428892403807229, "phrase": "qos_level"}, {"score": 0.003773049633656302, "phrase": "destination_addresses"}, {"score": 0.0036653985479652854, "phrase": "transport_layer_protocol"}, {"score": 0.0034879474417223015, "phrase": "esp"}, {"score": 0.003459191419478298, "phrase": "network_control_devices"}, {"score": 0.0034165310204389682, "phrase": "preferred_treatment"}, {"score": 0.0033743949483348626, "phrase": "critical_applications"}, {"score": 0.0032376465741070274, "phrase": "qos-friendly_encapsulated_security_payload"}, {"score": 0.003132236287543072, "phrase": "new_ipsec_security_protocol"}, {"score": 0.003093595537995837, "phrase": "qos_supports"}, {"score": 0.002980511036040274, "phrase": "ah"}, {"score": 0.002883439044844259, "phrase": "network_elements"}, {"score": 0.0026875205754965537, "phrase": "q-esp_design"}, {"score": 0.002643386043540555, "phrase": "kernel_implementation"}, {"score": 0.0025785359740308337, "phrase": "analytical_as_well_as_experimental_evaluation"}, {"score": 0.002494531100339247, "phrase": "real_time"}, {"score": 0.002363890257644857, "phrase": "qos"}, {"score": 0.002344311033783139, "phrase": "security_metrics"}, {"score": 0.002258546887303777, "phrase": "application_scenarios"}, {"score": 0.0021940118003312397, "phrase": "q-esp_protocol"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Security protocols", " Performance evaluation", " IPSec", " Q-ESP", " ESP", " AH", " QoS"], "paper_abstract": "While IPSec standard is largely used to protect real time network applications, it unfortunately consumes more processing time, cause packet delay and impede QoS enforcement. The QoS level that a flow receives depends on the value of the Type of Service (ToS) field; the later is set by the 'Multi-Field' (MF) packet classifiers according to the IP source and destination addresses and ports as well as the transport layer protocol. The last three fields are encrypted by the IPSec ESP, and thus ESP prevents network control devices from providing preferred treatment for time critical applications. To solve this problem, we propose a QoS-friendly Encapsulated Security Payload (Q-ESP) as a new IPSec security protocol that provides QoS supports while enforcing the same security services assured by IPSec ESP and AH used jointly. Basically, Q-ESP allows network elements to inspect all the needed fields to perform classification adequately. In this paper, we present details about Q-ESP design, processing and kernel implementation. Moreover, we give analytical as well as experimental evaluation of our protocol to measure its impact on real time VoIP; we also compare it to IPSec ESP and AH according to QoS and security metrics. Finally, we present and discuss some application scenarios in which the use of the Q-ESP protocol has many advantages. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Specification, implementation and performance evaluation of the QoS-friendly encapsulating security payload (Q-ESP) protocol", "paper_id": "WOS:000297561200003"}