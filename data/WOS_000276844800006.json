{"auto_keywords": [{"score": 0.03859150608353858, "phrase": "color_data"}, {"score": 0.03424838397119819, "phrase": "mesh_colors"}, {"score": 0.004555028829645471, "phrase": "intrinsic_problems"}, {"score": 0.0038561471948364723, "phrase": "new_technique"}, {"score": 0.0035808664384880213, "phrase": "polygonal_mesh"}, {"score": 0.0033251716926666437, "phrase": "texture_space"}, {"score": 0.003284361433827464, "phrase": "model_space"}, {"score": 0.003145417398038261, "phrase": "vertex_colors"}, {"score": 0.0030123335878664064, "phrase": "color_values"}, {"score": 0.0027457584014804574, "phrase": "texture_mapping"}, {"score": 0.0026622351303038885, "phrase": "higher_texture_resolution"}, {"score": 0.002629539710839523, "phrase": "model_resolution"}, {"score": 0.0024416087858984644, "phrase": "model_surface"}, {"score": 0.002198084195030656, "phrase": "current_graphics_pipeline"}], "paper_keywords": ["Algorithms", " Mesh colors", " texture mapping", " vertex colors", " 3D paint"], "paper_abstract": "The coloring of 3D models using 2D or 3D texture mapping has well-known intrinsic problems, such as mapping discontinuities and limitations to model editing after coloring. Workarounds for these problems often require adopting very complex approaches. Here we propose a new technique, called mesh colors, for associating color data directly with a polygonal mesh. The approach eliminates problems deriving from using a map from texture space to model space. Mesh colors is an extension of vertex colors where, in addition to keeping color values on each vertex, they are also kept on edges and faces. Like texture mapping, the approach allows higher texture resolution than model resolution, but at the same time it guarantees one-to-one correspondence between the model surface and the color data, and eliminates discontinuities. We show that mesh colors integrate well with the current graphics pipeline and can be used to generate very high-quality textures.", "paper_title": "Mesh Colors", "paper_id": "WOS:000276844800006"}