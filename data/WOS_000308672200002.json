{"auto_keywords": [{"score": 0.04322166454567049, "phrase": "product_line_refinement"}, {"score": 0.00481495049065317, "phrase": "software_product_line_refinement"}, {"score": 0.004545240514015278, "phrase": "software_product_line"}, {"score": 0.004011366422179016, "phrase": "behavior_preservation"}, {"score": 0.0038973170902076707, "phrase": "original_product_line_products"}, {"score": 0.0035741900278634616, "phrase": "language_independent_theory"}, {"score": 0.0034063576796640603, "phrase": "refinement_properties"}, {"score": 0.0032463805170627686, "phrase": "compositional_product_line_evolution"}, {"score": 0.0029203055813347874, "phrase": "specific_languages"}, {"score": 0.002864628676257225, "phrase": "typical_product_lines_artifacts"}, {"score": 0.0025521085778978042, "phrase": "associated_product_line_refinement_transformation_templates"}, {"score": 0.0023178219772486868, "phrase": "specific_product_lines"}, {"score": 0.002166711569953301, "phrase": "comprehensive_product_line_refinement_catalogues"}], "paper_keywords": ["Software product lines", " Software evolution", " Refinement", " Refactoring"], "paper_abstract": "To safely evolve a software product line, it is important to have a notion of product line refinement that assures behavior preservation of the original product line products. So in this article we present a language independent theory of product line refinement, establishing refinement properties that justify stepwise and compositional product line evolution. Moreover, we instantiate our theory with the formalization of specific languages for typical product lines artifacts, and then introduce and prove soundness of a number of associated product line refinement transformation templates. These templates can be used to reason about specific product lines and as a basis to derive comprehensive product line refinement catalogues. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A theory of software product line refinement", "paper_id": "WOS:000308672200002"}