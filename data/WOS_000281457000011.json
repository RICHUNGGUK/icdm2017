{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sparse_polynomials"}, {"score": 0.004162826481635768, "phrase": "input_query"}, {"score": 0.003078577062864183, "phrase": "polynomial's_total_degree"}, {"score": 0.0028921584725218642, "phrase": "domain_size"}, {"score": 0.002847339938387273, "phrase": "running_time"}, {"score": 0.002759769970554556, "phrase": "bit-complexity_model"}, {"score": 0.0025524176761139413, "phrase": "upper_bound"}, {"score": 0.002448260697722081, "phrase": "existing_interpolation_algorithms"}, {"score": 0.0022175679453857473, "phrase": "similar_test"}, {"score": 0.002171836484200008, "phrase": "integer_coefficients"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Randomized algorithms", " Sparsity tests", " Multivariate polynomials"], "paper_abstract": "An l-sparse (multivariate) polynomial is a polynomial containing at most l-monomials in its explicit description. We assume that a polynomial is implicitly represented as a black-box: on an input query from the domain, the black-box replies with the evaluation of the polynomial at that input. We provide an efficient, randomized algorithm, that can decide whether a polynomial f : F(q)(n) -> F(q) given as a black-box is l-sparse or not, provided that q is large compared to the polynomial's total degree. The algorithm makes only O(l) queries, which is independent of the domain size. The running time of our algorithm (in the bit-complexity model) is poly(n, log d, l), where d is an upper bound on the degree of each variable. Existing interpolation algorithms for polynomials in the same model run in time poly(n, d, l). We provide a similar test for polynomials with integer coefficients. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "A local decision test for sparse polynomials", "paper_id": "WOS:000281457000011"}