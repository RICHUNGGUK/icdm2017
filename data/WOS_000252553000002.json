{"auto_keywords": [{"score": 0.04024836966992769, "phrase": "fbs"}, {"score": 0.004764220976404241, "phrase": "graphics_processing_units"}, {"score": 0.004714023408114857, "phrase": "filter_bank"}, {"score": 0.004590820632326585, "phrase": "widespread_usage"}, {"score": 0.004518442937844318, "phrase": "discrete_wavelet_transform"}, {"score": 0.0043080553835735825, "phrase": "fast_dwt_algorithms"}, {"score": 0.004151188559520802, "phrase": "computer_systems"}, {"score": 0.0038748022659578865, "phrase": "filter_bank_scheme"}, {"score": 0.003270092550315648, "phrase": "modern_graphics_processing_units"}, {"score": 0.0031845067058084583, "phrase": "current_trends"}, {"score": 0.0030847461428168614, "phrase": "powerful_stream_processors"}, {"score": 0.0030039966201398966, "phrase": "intensive_and_complex_floating-point_calculations"}, {"score": 0.0027889366191837504, "phrase": "growing_popularity"}, {"score": 0.0027015344365793016, "phrase": "computer_graphics_field"}, {"score": 0.0026447893350441502, "phrase": "new_performance_comparison"}, {"score": 0.0026168641536413978, "phrase": "great_practical_interest"}, {"score": 0.0024947959375982614, "phrase": "current-generation_gpus"}, {"score": 0.002416589459425828, "phrase": "actual_fbs_gains"}, {"score": 0.0022916428586256723, "phrase": "problem_size"}, {"score": 0.002196342933346204, "phrase": "wavelet_filter"}, {"score": 0.0021501863832966966, "phrase": "design_trends"}, {"score": 0.0021274723597955567, "phrase": "higher_gains"}, {"score": 0.0021049977753042253, "phrase": "future-generation_gpus"}], "paper_keywords": ["graphics processors", " parallel processing", " parallel algorithms", " parallel and vector implementations", " wavelets and fractals", " SIMD processors", " optimization", " parallel discrete wavelet transform", " lifting", " filter bank", " GPU", " stream processors"], "paper_abstract": "The widespread usage of the discrete wavelet transform (DWT) has motivated the development of fast DWT algorithms and their tuning on all sorts of computer systems. Several studies have compared the performance of the most popular schemes, known as Filter Bank Scheme (FBS) and Lifting Scheme (LS), and have always concluded that LS is the most efficient option. However, there is no such study on streaming processors such as modern Graphics Processing Units (GPUs). Current trends have transformed these devices into powerful stream processors with enough flexibility to perform intensive and complex floating-point calculations. The opportunities opened up by these platforms, as well as the growing popularity of the DWT within the computer graphics field, make a new performance comparison of great practical interest. Our study indicates that FBS outperforms LS in current-generation GPUs. In our experiments, the actual FBS gains range between 10 percent and 140 percent, depending on the problem size and the type and length of the wavelet filter. Moreover, design trends suggest higher gains in future-generation GPUs.", "paper_title": "Parallel implementation of the 2D discrete wavelet transform on Graphics Processing Units: Filter Bank versus Lifting", "paper_id": "WOS:000252553000002"}