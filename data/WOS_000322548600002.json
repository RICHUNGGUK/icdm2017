{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "collective_requests"}, {"score": 0.0047559432344272, "phrase": "grid_systems"}, {"score": 0.004611554879923759, "phrase": "new_algorithm"}, {"score": 0.004555028829645471, "phrase": "resource_allocation"}, {"score": 0.00438955582974973, "phrase": "existing_co-allocation_algorithms"}, {"score": 0.004204054047427536, "phrase": "partial_resource_reservation"}, {"score": 0.004026359831748917, "phrase": "better_grid_utilisation"}, {"score": 0.003693103542455806, "phrase": "collective_request"}, {"score": 0.003625347557965931, "phrase": "total_amount"}, {"score": 0.003558830226733501, "phrase": "required_resource_property"}, {"score": 0.0034935290662899488, "phrase": "strict_assumption"}, {"score": 0.0030497740719977835, "phrase": "co-allocation_algorithm"}, {"score": 0.0028494425496120228, "phrase": "grid_utilisation"}, {"score": 0.002728847267539957, "phrase": "job_placement"}, {"score": 0.0026458370516131255, "phrase": "greater_number"}, {"score": 0.0026133424923929227, "phrase": "accepted_jobs"}, {"score": 0.002565345470805401, "phrase": "proposed_algorithm"}, {"score": 0.0024416087858984644, "phrase": "xtreemos_grid"}, {"score": 0.002426566352219336, "phrase": "operating_system"}, {"score": 0.0021049977753042253, "phrase": "optimal_start_times"}], "paper_keywords": ["Resource co-allocation", " Grid computing", " Parallel applications", " Concurrency", " Advance reservations"], "paper_abstract": "We present a new algorithm for resource allocation in large, heterogeneous grids. Its main advantage over existing co-allocation algorithms is that it supports collective requests with partial resource reservation, where the focus is on better grid utilisation. Alongside the requests that must be fulfilled by each resource, a collective request specifies the total amount of a required resource property without a strict assumption with regard to its distribution. As a consequence, the job becomes much more flexible in terms of its resource assignment and the co-allocation algorithm may therefore start the job earlier. This flexibility increases grid utilisation as it allows an optimisation of job placement that leads to a greater number of accepted jobs. The proposed algorithm is implemented as a module in the XtreemOS grid operating system. Its performance and complexity have been assessed through experiments on the Grid'5000 infrastructure. The results reveal that in most cases the algorithm returns optimal start times for jobs and acceptable, but sometimes suboptimal resource sets.", "paper_title": "Co-Allocation with Collective Requests in Grid Systems", "paper_id": "WOS:000322548600002"}