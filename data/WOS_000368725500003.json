{"auto_keywords": [{"score": 0.031240177333863486, "phrase": "ftdr"}, {"score": 0.015719716506582538, "phrase": "heterogeneous_computing_systems"}, {"score": 0.004389912080394437, "phrase": "adverse_effect"}, {"score": 0.004318881178805575, "phrase": "large-scale_applications"}, {"score": 0.004225950334493496, "phrase": "fault-tolerant_scheduling"}, {"score": 0.004157561334726201, "phrase": "imperative_step"}, {"score": 0.004112582094962078, "phrase": "large-scale_computing_systems"}, {"score": 0.004046020290832207, "phrase": "existing_fault-tolerant_scheduling_algorithms"}, {"score": 0.0038527044625533574, "phrase": "multiple_copies"}, {"score": 0.003668591097652231, "phrase": "processor_failures"}, {"score": 0.003167217223469026, "phrase": "successful_execution"}, {"score": 0.0029830992938695033, "phrase": "fault-tolerant_dynamic_rescheduling_algorithm"}, {"score": 0.0027491084541806823, "phrase": "processor_failure"}, {"score": 0.002675252546913683, "phrase": "suspended_tasks"}, {"score": 0.002386062690026682, "phrase": "arbitrary_number"}, {"score": 0.0023346234464901978, "phrase": "randomly_generated_dags"}, {"score": 0.0022595316565074326, "phrase": "experimental_results"}, {"score": 0.002210814150677161, "phrase": "proposed_algorithm"}, {"score": 0.002186849855560281, "phrase": "good_performance"}, {"score": 0.0021396960731214225, "phrase": "makespan_and_resource_consumption"}], "paper_keywords": ["Directed acyclic graph", " Fault tolerance", " Heterogeneous computing system", " Task reschedule"], "paper_abstract": "As the scale and complexity of heterogeneous computing systems grow, failures occur frequently and have an adverse effect on solving large-scale applications. Hence, fault-tolerant scheduling is an imperative step for large-scale computing systems. The existing fault-tolerant scheduling algorithms belong to static scheduling, and they allocate multiple copies of each task to several processors no matter whether processor failures affect the execution of tasks. Such active replication strategies not only waste resource but also sacrifice the makespan. What is more, they cannot guarantee the successful execution of applications. In this paper, we propose a fault-tolerant dynamic rescheduling algorithm named FTDR, which can overcome above drawbacks. FTDR keeps listening to the processor failure, and reschedules the suspended tasks once failures occur. Because FTDR reschedules the tasks that are suspended because of failures, it can tolerate an arbitrary number of failures. Randomly generated DAGs are tested in our experiments. Experimental results show that the proposed algorithm achieves good performance in terms of makespan and resource consumption compared with its direct competitors.", "paper_title": "Fault-Tolerant Dynamic Rescheduling for Heterogeneous Computing Systems", "paper_id": "WOS:000368725500003"}