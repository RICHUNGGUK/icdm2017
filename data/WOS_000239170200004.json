{"auto_keywords": [{"score": 0.030048197586568664, "phrase": "wspd"}, {"score": 0.00481495049065317, "phrase": "external-memory_algorithm"}, {"score": 0.0046394362688524475, "phrase": "well-separated_pair_decomposition"}, {"score": 0.0033828748627992193, "phrase": "n_items"}, {"score": 0.0030825404960282713, "phrase": "dimension_d"}, {"score": 0.0026317312518257803, "phrase": "linear-size_t-spanner"}, {"score": 0.002267708463966758, "phrase": "k-closest-"}], "paper_keywords": ["external-memory algorithms", " computational geometry", " well-separated pair decomposition", " spanners", " closest-pair problem", " proximity problems"], "paper_abstract": "We present an external-memory algorithm to compute a well-separated pair decomposition (WSPD) of a given point set S in R-d in O(sort( N)) I/Os, where N is the number of points in S and sort( N) denotes the I/O-complexity of sorting N items. ( Throughout this paper we assume that the dimension d is fixed.) As applications of the WSPD, we show how to compute a linear-size t-spanner for S within the same I/O-bound and how to solve the K-nearest-neighbour and K-closest-pair problems in O( sort(K N)) and O( sort( N + K)) I/Os, respectively.", "paper_title": "I/O-efficient well-separated pair decomposition and applications", "paper_id": "WOS:000239170200004"}