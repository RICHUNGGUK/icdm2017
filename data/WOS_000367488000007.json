{"auto_keywords": [{"score": 0.004772022364467393, "phrase": "different_nodes"}, {"score": 0.004740076426055645, "phrase": "n-node_network"}, {"score": 0.004718897469501381, "phrase": "possibly_different_times"}, {"score": 0.004522336570662195, "phrase": "synchronous_rounds"}, {"score": 0.004492054590200548, "phrase": "deterministic_algorithm"}, {"score": 0.004295269532032448, "phrase": "adjacent_nodes"}, {"score": 0.004237925318473508, "phrase": "distinct_integer_label"}, {"score": 0.00391829297421861, "phrase": "main_efficiency_measure"}, {"score": 0.003892039911310129, "phrase": "rendezvous_algorithm's_performance"}, {"score": 0.0037549546301384336, "phrase": "earlier_agent"}, {"score": 0.0036553070575015344, "phrase": "initial_positions"}, {"score": 0.0034483511813084657, "phrase": "initial_knowledge"}, {"score": 0.0033193902043208417, "phrase": "minimum_amount"}, {"score": 0.003195236629209403, "phrase": "optimal_time"}, {"score": 0.003152531962718477, "phrase": "standard_paradigm"}, {"score": 0.00300749708357049, "phrase": "entire_instance"}, {"score": 0.0026228555939117543, "phrase": "smallest_size"}, {"score": 0.002519029122420084, "phrase": "optimal_size"}, {"score": 0.0024466025982664776, "phrase": "upper_bound"}, {"score": 0.002413879273009396, "phrase": "advice_string"}, {"score": 0.002370926370153685, "phrase": "natural_rendezvous_algorithm"}, {"score": 0.002256697266848135, "phrase": "main_contribution"}, {"score": 0.0021335427588412077, "phrase": "smaller_advice"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Rendezvous", " Advice", " Deterministic distributed algorithm", " Mobile agent", " Time"], "paper_abstract": "Two mobile agents, starting from different nodes of an n-node network at possibly different times, have to meet at the same node. This problem is known as rendezvous. Agents move in synchronous rounds using a deterministic algorithm. In each round, an agent decides to either remain idle or to move to one of the adjacent nodes. Each agent has a distinct integer label from the set {1,..., L}, which it can use in the execution of the algorithm, but it does not know the label of the other agent. The main efficiency measure of a rendezvous algorithm's performance is its time, i.e., the number of rounds from the start of the earlier agent until the meeting. If D is the distance between the initial positions of the agents, then Omega(D) is an obvious lower bound on the time of rendezvous. However, if each agent has no initial knowledge other than its label, time O(D) is usually impossible to achieve. We study the minimum amount of information that has to be available a priori to the agents to achieve rendezvous in optimal time Theta(D). Following the standard paradigm of algorithms with advice, this information is provided to the agents at the start by an oracle knowing the entire instance of the problem, i.e., the network, the starting positions of the agents, their wake-up rounds, and both of their labels. The oracle helps the agents by providing them with the same binary string called advice, which can be used by the agents during their navigation. The length of this string is called the size of advice. Our goal is to find the smallest size of advice which enables the agents to meet in time Theta(D). We show that this optimal size of advice is Theta(D log(n/D) + log log L). The upper bound is proved by constructing an advice string of this size, and providing a natural rendezvous algorithm using this advice that works in time Theta(D) for all networks. The matching lower bound, which is the main contribution of this paper, is proved by exhibiting classes of networks for which it is impossible to achieve rendezvous in time Theta(D) with smaller advice. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Fast rendezvous with advice", "paper_id": "WOS:000367488000007"}