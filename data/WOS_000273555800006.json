{"auto_keywords": [{"score": 0.047293169449964964, "phrase": "recursive_programs"}, {"score": 0.00481495049065317, "phrase": "program_analysis_method"}, {"score": 0.003526186748088922, "phrase": "non-recursive_programs"}, {"score": 0.0032423089921154503, "phrase": "program_transformation"}, {"score": 0.0030904433394138963, "phrase": "call_sites"}, {"score": 0.0024604876113911173, "phrase": "procedure_body"}, {"score": 0.0021049977753042253, "phrase": "summary_statement"}], "paper_keywords": ["Program verification", " Model checking", " Termination", " Recursion", " Summarization"], "paper_abstract": "We propose a program analysis method for proving termination of recursive programs. The analysis is based on a reduction of termination to two separate problems: reachability of recursive programs, and termination of non-recursive programs. Our reduction works through a program transformation that modifies the call sites and removes return edges. In the new, non-recursive program, a procedure call may non-deterministically enter the procedure body (which means that it will never return) or apply a summary statement.", "paper_title": "Summarization for termination: no return!", "paper_id": "WOS:000273555800006"}