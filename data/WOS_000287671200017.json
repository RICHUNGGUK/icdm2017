{"auto_keywords": [{"score": 0.04429872946717218, "phrase": "sbst"}, {"score": 0.00481495049065317, "phrase": "software-based_self-testing"}, {"score": 0.0045162169185355, "phrase": "effective_hybrid_test_program"}, {"score": 0.004155283263388382, "phrase": "pipeline_processor_cores"}, {"score": 0.004076157223660074, "phrase": "test_program"}, {"score": 0.003998531873723384, "phrase": "deterministically_developed_program"}, {"score": 0.003922378980031565, "phrase": "different_levels"}, {"score": 0.003872414709826833, "phrase": "processor_core_information"}, {"score": 0.003798654583736764, "phrase": "block-based_random_program"}, {"score": 0.003631945391344252, "phrase": "in-order_instructions"}, {"score": 0.0035856674209019234, "phrase": "random-order_instructions"}, {"score": 0.0034063576796640603, "phrase": "instruction_sequences"}, {"score": 0.003215295260684715, "phrase": "complementary_nature"}, {"score": 0.003154012038613403, "phrase": "hybrid_test_program"}, {"score": 0.003054450075234415, "phrase": "processor_fault_coverage"}, {"score": 0.0028830690329478465, "phrase": "conventional_scan_chain_method"}, {"score": 0.0028281000453392272, "phrase": "test_response_observation_methods"}, {"score": 0.002738797804069541, "phrase": "fault_coverage"}, {"score": 0.002568542343945288, "phrase": "micro_observation"}, {"score": 0.002535779689260244, "phrase": "macro_observation"}, {"score": 0.002347775213789611, "phrase": "multiple_input_signature"}, {"score": 0.002273605493468005, "phrase": "processor_local_bus"}, {"score": 0.0022302306304023602, "phrase": "conventional_methods"}, {"score": 0.0021049977753042253, "phrase": "significantly_less_processor_fault_coverage"}], "paper_keywords": ["Fault coverage measure", " fault observation method", " hybrid SBST", " processor testing", " software-based self-testing (SBST)"], "paper_abstract": "This paper presents an effective hybrid test program for the software-based self-testing (SBST) of pipeline processor cores. The test program combines a deterministically developed program which explores different levels of processor core information and a block-based random program which consists of a combination of in-order instructions, random-order instructions, return instructions, as well as instruction sequences used to trigger exception/interrupt requests. Due to the complementary nature of this hybrid test program, it can achieve processor fault coverage that is comparable to the performance of the conventional scan chain method. The test response observation methods and their impacts on fault coverage are also investigated. We present the concept of micro observation versus macro observation and show that the most effective method of using SBST is through a multiple input signature register connected to the processor local bus, while conventional methods that observe only the program results in the memory lead to significantly less processor fault coverage.", "paper_title": "Effective Hybrid Test Program Development for Software-Based Self-Testing of Pipeline Processor Cores", "paper_id": "WOS:000287671200017"}