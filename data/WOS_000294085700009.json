{"auto_keywords": [{"score": 0.0452514208810669, "phrase": "mapping_problem"}, {"score": 0.043300202446082514, "phrase": "cost_matrix"}, {"score": 0.03140730576283322, "phrase": "optimization-based_mappings"}, {"score": 0.00481495049065317, "phrase": "parallel_applications"}, {"score": 0.004680851157467745, "phrase": "parallel_program"}, {"score": 0.004598933498016774, "phrase": "parallel_computing_system"}, {"score": 0.004550469496119256, "phrase": "remarkable_impact"}, {"score": 0.004518442937844318, "phrase": "application_performance"}, {"score": 0.004392565073466714, "phrase": "optimization_framework"}, {"score": 0.00422516469733364, "phrase": "communication_matrix"}, {"score": 0.004021267064832957, "phrase": "parallel_system"}, {"score": 0.003923023699005215, "phrase": "distance_matrix"}, {"score": 0.003773449694108617, "phrase": "novel_definition"}, {"score": 0.0037336520904376687, "phrase": "cost_criterion"}, {"score": 0.003681238363808568, "phrase": "torus_networks"}, {"score": 0.0035533891890176823, "phrase": "different_axes"}, {"score": 0.003334309053314909, "phrase": "particular_instance"}, {"score": 0.003207108833360533, "phrase": "qap_solver"}, {"score": 0.0030847461428168614, "phrase": "greedy_randomized_algorithm"}, {"score": 0.002998688867384969, "phrase": "performance_levels"}, {"score": 0.0028842551358494823, "phrase": "trivial_mappings"}, {"score": 0.0025846562485378247, "phrase": "different_system_partitions"}, {"score": 0.0024947959375982614, "phrase": "real_application_traffic"}, {"score": 0.0024772013657695896, "phrase": "experimental_results"}, {"score": 0.002316105585203396, "phrase": "virtual_and_physical_topologies"}, {"score": 0.0021501863832966966, "phrase": "excellent_performance_levels"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Optimization-based mapping of parallel applications", " Mapping as an instance of the Quadratic Assignment Problem", " Scheduling for supercomputers", " Mappings on 2D and 3D cubes"], "paper_abstract": "The mapping of tasks of a parallel program onto nodes of a parallel computing system has a remarkable impact on application performance. In this paper we propose an optimization framework to solve the mapping problem, which takes into account the communication matrix of the application and a cost matrix that depends on the topology of the parallel system. This cost matrix is usually a distance matrix (the classic approach), but we propose a novel definition of the cost criterion, applicable to torus networks, that tries to distribute traffic evenly over the different axes; we call this the Traffic Distribution criterion. As the mapping problem can be seen as a particular instance of the Quadratic Assignment Problem (QAP), we can apply any QAP solver to this problem. In particular, we use a greedy randomized algorithm. Using simulation, we test the performance levels of the optimization-based mappings, and compare them with those of trivial mappings (consecutive, random), in two different environments: single application (one application uses all system resources all the time) and space sharing (several applications run simultaneously, on different system partitions), using systems with 2D and 3D topologies and real application traffic. Experimental results show that some applications do not benefit from optimization-based mappings: those in which there is a match between virtual and physical topologies, and those that carry out massive all-to-all communications. In other cases, optimization-based mappings with the TD criterion provide excellent performance levels. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Optimization-based mapping framework for parallel applications", "paper_id": "WOS:000294085700009"}