{"auto_keywords": [{"score": 0.03884976197665516, "phrase": "network_latency"}, {"score": 0.00481495049065317, "phrase": "network-on-chip_design"}, {"score": 0.004658426838467567, "phrase": "deep_sub-micron_era"}, {"score": 0.004614643339546038, "phrase": "many-core_processors"}, {"score": 0.004528301408585875, "phrase": "promising_architectures"}, {"score": 0.004401794742140806, "phrase": "moore's_law"}, {"score": 0.0043194180167921165, "phrase": "effective_communications"}, {"score": 0.004258644418211771, "phrase": "on-chip_components"}, {"score": 0.00406214911915987, "phrase": "new_paradigm"}, {"score": 0.0040049806975968145, "phrase": "better_scalability"}, {"score": 0.003948613642680196, "phrase": "traditional_buses"}, {"score": 0.0038564191670589884, "phrase": "previous_researches"}, {"score": 0.003820144626025562, "phrase": "application_mappings"}, {"score": 0.0037486121194392564, "phrase": "power_consumption"}, {"score": 0.003643807817480753, "phrase": "network_area"}, {"score": 0.0035085965086415474, "phrase": "previous_proposed_algorithms"}, {"score": 0.0034428776029411944, "phrase": "kernighan-lin_algorithm"}, {"score": 0.0034105582501313663, "phrase": "kl"}, {"score": 0.0033465923623290034, "phrase": "genetic_algorithms"}, {"score": 0.0033154898402044082, "phrase": "ga"}, {"score": 0.0031920445513574907, "phrase": "local_best_result"}, {"score": 0.003132236287543072, "phrase": "global_optimal_solution"}, {"score": 0.0030017207229983385, "phrase": "novel_application_mapping_algorithm"}, {"score": 0.0029039692582303904, "phrase": "tree_network"}, {"score": 0.0028495431343111897, "phrase": "kl_ga"}, {"score": 0.0026543514413663893, "phrase": "overall_communication_cost"}, {"score": 0.002580061425699194, "phrase": "mapping_solution"}, {"score": 0.0025436978068459565, "phrase": "kl-based_method"}, {"score": 0.002437645786158106, "phrase": "premature_phenomena"}, {"score": 0.0023694065215394593, "phrase": "ga-based_algorithm"}, {"score": 0.002259883463607508, "phrase": "local_optimum"}, {"score": 0.002196609505859369, "phrase": "new_population"}, {"score": 0.0021049977753042253, "phrase": "random_mapping_algorithm"}], "paper_keywords": ["NoC", " Kernighan-Lin algorithm", " Genetic algorithm", " MoT topology"], "paper_abstract": "As the very large-scale integrated circuit designs enter the deep sub-micron era, many-core processors are regarded as promising architectures to keep up with the Moore's law. To provide effective communications between the on-chip components, network-on-chip was proposed as a new paradigm that exhibits better scalability than the traditional buses. There have been previous researches on application mappings to reduce the power consumption, the network latency and the network area overhead. However, some of the previous proposed algorithms such as the Kernighan-Lin algorithm (KL) and some genetic algorithms (GA) have the problem of finding the local best result instead of a global optimal solution. In this paper, we propose a novel application mapping algorithm for the mesh-of-tree network topology, called KL_GA algorithm. Our proposed algorithm takes the advantage of both the Kernighan-Lin algorithm and genetic algorithms to reduce the overall communication cost. Our KL_GA algorithm first generates a mapping solution using a KL-based method. In order to avoid the appearance of premature phenomena, we next apply a GA-based algorithm to get rid of the population trapped in the local optimum and re-generate a new population. Our evaluations show that, compared to the random mapping algorithm, our KL_GA algorithm saves the power by 21.6 % and reduces the network latency by 16.3 % on the average.", "paper_title": "KL_GA: an application mapping algorithm for mesh-of-tree (MoT) architecture in network-on-chip design", "paper_id": "WOS:000363723100005"}