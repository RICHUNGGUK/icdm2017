{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "weighted_number"}, {"score": 0.049226991195811136, "phrase": "just-in-time_jobs"}, {"score": 0.004208002469225673, "phrase": "polynomial_time_solution"}, {"score": 0.004096082254543022, "phrase": "scheduling_problem"}, {"score": 0.003987126862293129, "phrase": "single_machine"}, {"score": 0.0038810583785936505, "phrase": "proportionate_flowshop"}, {"score": 0.0035156341294017685, "phrase": "rare_cases"}, {"score": 0.0022218413146898887, "phrase": "\"no-wait\"_proportionate_flowshop"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scheduling", " Proportionate flowshop", " Just-in-Time"], "paper_abstract": "In most cases, an extension of a polynomial time solution of a scheduling problem on a single machine to a proportionate flowshop leads to a similar (polynomial time) solution. One of the rare cases where the problem becomes hard, is that of maximizing the weighted number of Just-in-Time jobs on a proportionate flowshop. We introduce a (pseudo-polynomial) solution algorithm for this problem, which is faster by a factor of n than the algorithm published in the literature. We also introduce a (polynomial time) solution algorithm for the \"no-wait\" proportionate flowshop. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A note: Maximizing the weighted number of just-in-time jobs on a proportionate flowshop", "paper_id": "WOS:000346225300018"}