{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "topological_ordering_algorithm"}, {"score": 0.004744438075054019, "phrase": "ldag."}, {"score": 0.004709567162738894, "phrase": "directed_acyclic_graph"}, {"score": 0.004505638402009237, "phrase": "important_tool"}, {"score": 0.004439634831927606, "phrase": "workflow_modeling"}, {"score": 0.004374593906165761, "phrase": "data_provenance_management"}, {"score": 0.004185187805304909, "phrase": "dag"}, {"score": 0.003945117054416623, "phrase": "workflow_applications"}, {"score": 0.0037188360359702182, "phrase": "atomic_tasks"}, {"score": 0.0035054881943660096, "phrase": "atomic_task"}, {"score": 0.003353521531649663, "phrase": "expected_stage"}, {"score": 0.003161065111494053, "phrase": "improved_dag_model"}, {"score": 0.00266693888510356, "phrase": "reasonable_one"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["DAG", " Topological order", " Level", " LDAG", " Computational complexity"], "paper_abstract": "Directed Acyclic Graph (DAG) is an important tool for workflow modeling and data provenance management. In these applications. DAG usually performs well. Yet for some workflow applications, except data or control dependencies between atomic tasks, there exists another requirement that each atomic task should be accomplished at an expected stage. Therefore, this paper proposes an improved DAG model - LDAG, in which each vertex has a level. Three cases of the level of vertices are discussed. For a reasonable one of these cases, this paper proposes a topological ordering algorithm and proves its correctness. In addition, it discusses the complexity of the algorithm and some other relevant problems. (c) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Topological ordering algorithm for LDAG", "paper_id": "WOS:000309620700004"}