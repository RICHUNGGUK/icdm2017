{"auto_keywords": [{"score": 0.03350014650532268, "phrase": "stack_form"}, {"score": 0.00481495049065317, "phrase": "stack_reconstruction"}, {"score": 0.004733625412289433, "phrase": "rtl_orthogonal_scan_chain_design"}, {"score": 0.0043842558719324526, "phrase": "orthogonal_scan_chain"}, {"score": 0.0042373381286051354, "phrase": "rtl_design"}, {"score": 0.004130384980644375, "phrase": "verilog"}, {"score": 0.0039244530915794025, "phrase": "data_path_graph"}, {"score": 0.0038253590626087237, "phrase": "embedded_scan_chains"}, {"score": 0.0036037265181631324, "phrase": "minimum_weighted_cost"}, {"score": 0.003423969509052361, "phrase": "original_data_paths"}, {"score": 0.0025183881730011597, "phrase": "experimental_results"}, {"score": 0.002178144355363467, "phrase": "gate-level_scan"}, {"score": 0.0021049977753042253, "phrase": "rtl_scan"}], "paper_keywords": ["RTL scan", " orthogonal scan chain", " area overhead", " timing overhead", " fault coverage"], "paper_abstract": "In this paper, we propose an orthogonal scan chain embedded into the RTL design described by Verilog. We first construct the data path graph from the embedded scan chains and then find all the orthogonal scan paths with the minimum weighted cost. These paths share with original data paths as possible. Finally, we create a stack form to reconstruct all the orthogonal scan paths to manage the I/Os and reduce the length and width of stack form as well as decrease the overheads of area and timing. Experimental results show our RTL orthogonal scan chain approach can save up to 13.8% and 5.1% in area overhead than that of the gate-level scan and functional order RTL scan, respectively.", "paper_title": "Using stack reconstruction on RTL orthogonal scan chain design", "paper_id": "WOS:000242243500018"}