{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computational_complexity"}, {"score": 0.004626255242038005, "phrase": "optimal_bribery_schemes"}, {"score": 0.00450456611645112, "phrase": "voting_domains"}, {"score": 0.004103212598803194, "phrase": "cartesian_product"}, {"score": 0.002861961643289598, "phrase": "traditional_bribery_problem"}, {"score": 0.0023113506171584157, "phrase": "five_voting_rules"}, {"score": 0.0021910825909008946, "phrase": "bribery_actions"}, {"score": 0.0021049977753042253, "phrase": "five_cost_schemes"}], "paper_keywords": ["Social choice", " Voting", " Bribery", " CP-nets"], "paper_abstract": "We investigate the computational complexity of finding optimal bribery schemes in voting domains where the candidate set is the Cartesian product of a set of variables and voters use CP-nets, an expressive and compact way to represent preferences. To do this, we generalize the traditional bribery problem to take into account several issues over which agents vote, and their inter-dependencies. We consider five voting rules, three kinds of bribery actions, and five cost schemes. For most of the combinations of these parameters, we find that bribery in this setting is computationally easy.", "paper_title": "Bribery in voting with CP-nets", "paper_id": "WOS:000328831600006"}