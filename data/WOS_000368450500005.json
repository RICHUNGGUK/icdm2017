{"auto_keywords": [{"score": 0.04727338981813956, "phrase": "access_latency"}, {"score": 0.04673056531742198, "phrase": "distributed_storage_systems"}, {"score": 0.015720081336148984, "phrase": "htsc"}, {"score": 0.011799322673844327, "phrase": "parity_nodes"}, {"score": 0.008331991630220177, "phrase": "fh_htsc"}, {"score": 0.00470023328104698, "phrase": "xor"}, {"score": 0.004617170945097824, "phrase": "codes"}, {"score": 0.004398457709182882, "phrase": "massive_distributed_storage_system"}, {"score": 0.004267757384195032, "phrase": "big_data_operations"}, {"score": 0.004216566615939546, "phrase": "access_latency_performance"}, {"score": 0.004140924670517666, "phrase": "key_metric"}, {"score": 0.003969640975997097, "phrase": "user_experience"}, {"score": 0.003922011960904278, "phrase": "existing_codes"}, {"score": 0.0037371212381934853, "phrase": "storage_overhead"}, {"score": 0.003692271726952282, "phrase": "repair_cost"}, {"score": 0.0034135407979996673, "phrase": "new_xor-based_erasure_codes"}, {"score": 0.003232956879952914, "phrase": "high_failure_tolerant_htsc"}, {"score": 0.002813566267090177, "phrase": "htsc_and_fh_htsc_codes"}, {"score": 0.0027133856739937133, "phrase": "favorable_performance"}, {"score": 0.0024932498388507084, "phrase": "lower_access_latency"}, {"score": 0.0022909325048608054, "phrase": "representative_codes"}, {"score": 0.0022497569011987587, "phrase": "similar_storage_overhead"}, {"score": 0.002156529381840657, "phrase": "superior_choice"}, {"score": 0.0021049977753042253, "phrase": "low_access_latency_and_outstanding_failure_tolerance_capability"}], "paper_keywords": ["Access latency", " computation cost", " erasure codes", " failure tolerance", " repair cost", " storage overhead"], "paper_abstract": "A massive distributed storage system is the foundation for big data operations. Access latency performance is a key metric in distributed storage systems since it greatly impacts user experience while existing codes mainly focus on improving performance such as storage overhead and repair cost. By generating parity nodes from parity nodes, in this paper we design new XOR-based erasure codes hierarchical tree structure code (HTSC) and high failure tolerant HTSC (FH_HTSC) to reduce access latency in distributed storage systems. By comparing with other popular and representative codes, we show that, under the same repair cost, HTSC and FH_HTSC codes can reduce access latency while maintaining favorable performance in other metrics. In particular, under the same repair cost, FH_HTSC can achieve lower access latency, higher or equal failure tolerance and lower computation cost compared with the representative codes while enjoying similar storage overhead. Accordingly, FH_HTSC is a superior choice for applications requiring low access latency and outstanding failure tolerance capability at the same time.", "paper_title": "HTSC and FH_HTSC: XOR-based Codes to Reduce Access Latency in Distributed Storage Systems", "paper_id": "WOS:000368450500005"}