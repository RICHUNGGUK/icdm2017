{"auto_keywords": [{"score": 0.04375046794702629, "phrase": "gpu"}, {"score": 0.0046621835537196754, "phrase": "ubiquitous_devices"}, {"score": 0.004624751696958501, "phrase": "high_performance_computing"}, {"score": 0.004406360418456518, "phrase": "intensive_algorithms"}, {"score": 0.0043358695338488445, "phrase": "multicore_cpus"}, {"score": 0.004232232993872917, "phrase": "primary_shortcoming"}, {"score": 0.0040978781692373005, "phrase": "vendor_specific_apis"}, {"score": 0.004016072233242585, "phrase": "existing_programming_languages"}, {"score": 0.003920049436883885, "phrase": "substantial_knowledge"}, {"score": 0.0038417798012011155, "phrase": "programming_interface"}, {"score": 0.003704797078215222, "phrase": "growing_number"}, {"score": 0.003675023529026644, "phrase": "higher_level_programming_models"}, {"score": 0.0035296940954990964, "phrase": "ultimate_goal"}, {"score": 0.003487222504700868, "phrase": "high-level_model"}, {"score": 0.003417565253539315, "phrase": "easy-to-use_interface"}, {"score": 0.0033223686422055834, "phrase": "intensive_portions"}, {"score": 0.0031020367403802773, "phrase": "target_accelerator"}, {"score": 0.0030646951765987414, "phrase": "overall_performance"}, {"score": 0.0030278017562213265, "phrase": "reduced_development_effort"}, {"score": 0.002872979681637667, "phrase": "notable_high-level_directive"}, {"score": 0.002726076084104179, "phrase": "caps"}, {"score": 0.00270412352336872, "phrase": "pgi"}, {"score": 0.002586948327468439, "phrase": "isotropic"}, {"score": 0.002534906456854208, "phrase": "finite_difference_kernels"}, {"score": 0.002494279207996077, "phrase": "primary_components"}, {"score": 0.0024642355970277497, "phrase": "reverse_time_migration"}, {"score": 0.0024444100710763186, "phrase": "rtm"}, {"score": 0.002395530243993313, "phrase": "oil_and_gas_exploration"}, {"score": 0.002282166507956957, "phrase": "single_gpu"}, {"score": 0.0022546720211200893, "phrase": "mentioned_directives"}, {"score": 0.0021654904262891446, "phrase": "iso"}, {"score": 0.0021479597698614373, "phrase": "tti_kernels"}, {"score": 0.0021049977753042253, "phrase": "optimized_multi-threaded_cpu_implementations"}], "paper_keywords": ["RTM", " ISO", " TTI", " OpenMP", " GPU", " OpenACC", " Performance", " Accelerator directives", " Finite difference discretization"], "paper_abstract": "GPUs are slowly becoming ubiquitous devices in High Performance Computing, as their capabilities to enhance the performance per watt of compute intensive algorithms as compared to multicore CPUs have been identified. The primary shortcoming of a GPU is usability, since vendor specific APIs are quite different from existing programming languages, and it requires a substantial knowledge of the device and programming interface to optimize applications. Hence, lately a growing number of higher level programming models are targeting GPUs to alleviate this problem. The ultimate goal for a high-level model is to expose an easy-to-use interface for the user to offload compute intensive portions of code (kernels) to the GPU, and tune the code according to the target accelerator to maximize overall performance with a reduced development effort. In this paper, we share our experiences of three of the notable high-level directive based GPU programming models-PGI, CAPS and OpenACC (from CAPS and PGI) on an Nvidia M2090 GPU. We analyze their performance and programmability against Isotropic (ISO)/Tilted Transversely Isotropic (TTI) finite difference kernels, which are primary components in the Reverse Time Migration (RTM) application used by oil and gas exploration for seismic imaging of the sub-surface. When ported to a single GPU using the mentioned directives, we observe an average 1.5-1.8x improvement in performance for both ISO and TTI kernels, when compared with optimized multi-threaded CPU implementations using OpenMP.", "paper_title": "Performance of CPU/GPU compiler directives on ISO/TTI kernels", "paper_id": "WOS:000344169400004"}