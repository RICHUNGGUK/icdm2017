{"auto_keywords": [{"score": 0.03718034097391593, "phrase": "software_components"}, {"score": 0.00481495049065317, "phrase": "modern_service-oriented_enterprise_systems"}, {"score": 0.004760017604908536, "phrase": "increasingly_complex_and_dynamic_loosely-coupled_architectures"}, {"score": 0.0045726187330434025, "phrase": "resource_efficiency"}, {"score": 0.004494570360108983, "phrase": "high_operating_costs"}, {"score": 0.004123781267600542, "phrase": "workload_changes"}, {"score": 0.0040767015025213625, "phrase": "performance-relevant_application-level_dependencies"}, {"score": 0.0038936755823756226, "phrase": "architecture-level_performance_models"}, {"score": 0.0037617986040878342, "phrase": "performance_prediction"}, {"score": 0.0032398798149196432, "phrase": "typical_online_performance_prediction_scenarios"}, {"score": 0.003166259444961177, "phrase": "performance_metamodel"}, {"score": 0.00298942278888105, "phrase": "context_dependencies"}, {"score": 0.0028880836335117297, "phrase": "service_abstractions"}, {"score": 0.0028550709503536494, "phrase": "different_levels"}, {"score": 0.002664749302333897, "phrase": "complex_resource_landscapes"}, {"score": 0.0026191799769765085, "phrase": "presented_meta-model"}, {"score": 0.0025014259919355453, "phrase": "online_performance_prediction"}, {"score": 0.002402731767209114, "phrase": "online_scenarios"}, {"score": 0.002255431275670053, "phrase": "realistic_and_representative_online_performance_prediction_scenarios"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Online performance prediction", " Architecture-level performance meta-model", " Parameter and context dependencies"], "paper_abstract": "Modern service-oriented enterprise systems have increasingly complex and dynamic loosely-coupled architectures that often exhibit poor performance and resource efficiency and have high operating costs. This is due to the inability to predict at run-time the effect of workload changes on performance-relevant application-level dependencies and adapt the system configuration accordingly. Architecture-level performance models provide a powerful tool for performance prediction, however, current approaches to modeling the context of software components are not suitable for use at run-time. In this paper, we analyze typical online performance prediction scenarios and propose a performance metamodel for (i) expressing and resolving parameter and context dependencies, (ii) modeling service abstractions at different levels of granularity and (iii) modeling the deployment of software components in complex resource landscapes. The presented meta-model is a subset of the Descartes Meta-Model (DMM) for online performance prediction, specifically designed for use in online scenarios. We motivate and validate our approach in the context of realistic and representative online performance prediction scenarios based on the SPECjEnterprise2010 standard benchmark. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Architecture-level software performance abstractions for online, performance prediction", "paper_id": "WOS:000338387900002"}