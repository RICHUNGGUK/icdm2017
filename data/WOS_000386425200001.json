{"auto_keywords": [{"score": 0.028263664569935676, "phrase": "qalsh"}, {"score": 0.010672603441161065, "phrase": "query-aware_bucket_partition"}, {"score": 0.008572249479247398, "phrase": "lsh"}, {"score": 0.006407555872070964, "phrase": "lsb-forest"}, {"score": 0.00481495049065317, "phrase": "approximate_nearest_neighbor_search"}, {"score": 0.004775531918452571, "phrase": "locality-sensitive_hashing"}, {"score": 0.004621043537046209, "phrase": "well-known_indexing_schemes"}, {"score": 0.004471815702286754, "phrase": "euclidean"}, {"score": 0.004273782634394231, "phrase": "query-oblivious_manner"}, {"score": 0.0038720442355114045, "phrase": "different_buckets"}, {"score": 0.003700709435644458, "phrase": "query-oblivious_bucket_partition"}, {"score": 0.0036553070575015344, "phrase": "state-of-the-art_lsh_schemes"}, {"score": 0.003464890914694523, "phrase": "approximation_ratio"}, {"score": 0.0034364867143322274, "phrase": "integer_c"}, {"score": 0.003284361433827464, "phrase": "novel_concept"}, {"score": 0.0031260524791486347, "phrase": "bucket_partition"}, {"score": 0.0030623570435946977, "phrase": "query-aware_lsh_function"}, {"score": 0.00292674497467906, "phrase": "random_shift"}, {"score": 0.002890810475014827, "phrase": "traditional_query-oblivious_lsh_functions"}, {"score": 0.002762774046280398, "phrase": "query_performance"}, {"score": 0.002684257009647205, "phrase": "novel_query-aware_lsh_scheme"}, {"score": 0.0026403934420630155, "phrase": "c-ann_search"}, {"score": 0.0025027144548626975, "phrase": "query_quality"}, {"score": 0.0024416087858984644, "phrase": "aware_lsh_function"}, {"score": 0.0023721974375323267, "phrase": "approximation_ratio_c"}, {"score": 0.002333421318779658, "phrase": "extensive_experiments"}, {"score": 0.0022300169122921906, "phrase": "high-dimensional_space"}, {"score": 0.002166607745253829, "phrase": "ratio_c"}], "paper_keywords": [""], "paper_abstract": "Locality-Sensitive Hashing (LSH) and its variants are the well-known indexing schemes for the c-Approximate Nearest Neighbor (c-ANN) search problem in high-dimensional Euclidean space. Traditionally, LSH functions are constructed in a query-oblivious manner in the sense that buckets are partitioned before any query arrives. However, objects closer to a query may be partitioned into different buckets, which is undesirable. Due to the use of query-oblivious bucket partition, the state-of-the-art LSH schemes for external memory, namely C2LSH and LSB-Forest, only work with approximation ratio of integer c >= 2. In this paper, we introduce a novel concept of query-aware bucket partition which uses a given query as the \"anchor\" for bucket partition. Accordingly, a query-aware LSH function is a random projection coupled with query-aware bucket partition, which removes random shift required by traditional query-oblivious LSH functions. Notably, query-aware bucket partition can be easily implemented so that query performance is guaranteed. We propose a novel query-aware LSH scheme named QALSH for c-ANN search over external memory. Our theoretical studies show that QALSH enjoys a guarantee on query quality. The use of query aware LSH function enables QALSH to work with any approximation ratio c > 1. Extensive experiments show that QALSH outperforms C2LSH and LSB-Forest, especially in high-dimensional space. Specifically, by using a ratio c < 2, QALSH can achieve much better query quality.", "paper_title": "Query-Aware Locality-Sensitive Hashing for Approximate Nearest Neighbor Search", "paper_id": "WOS:000386425200001"}