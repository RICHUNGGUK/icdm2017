{"auto_keywords": [{"score": 0.04714232995455613, "phrase": "ack_compression"}, {"score": 0.004707479285061122, "phrase": "download_performance"}, {"score": 0.004561019117546361, "phrase": "common_bottleneck_link"}, {"score": 0.00439918275666155, "phrase": "download_acks"}, {"score": 0.004281707613765936, "phrase": "tcp"}, {"score": 0.00418595288276353, "phrase": "efficient_mechanisms"}, {"score": 0.004092463367307375, "phrase": "performance_problem"}, {"score": 0.0036224139706218916, "phrase": "perfectly_symmetrical_setup"}, {"score": 0.0034467039994594065, "phrase": "different_explanation"}, {"score": 0.003400274964240732, "phrase": "interactions-data_pendulum"}, {"score": 0.0031917146566068245, "phrase": "data_pendulum_effect"}, {"score": 0.003134503353065008, "phrase": "ack_segments"}, {"score": 0.0030505976034245234, "phrase": "link_buffers"}, {"score": 0.0029689311901364797, "phrase": "download_side"}, {"score": 0.0024440836179156593, "phrase": "simulation_results"}, {"score": 0.0023465400668244386, "phrase": "buffer_sizing"}, {"score": 0.0023253967212081626, "phrase": "performance_degradation"}, {"score": 0.0021049977753042253, "phrase": "data_pendulum"}], "paper_keywords": ["Performance", " TCP", " asymmetric links"], "paper_abstract": "Many papers explain the drop of download performance when two TCP connections in opposite directions share a common bottleneck link by ACK compression, the phenomenon in which download ACKs arrive in bursts so that TCP self clocking breaks. Efficient mechanisms to cope with the performance problem exist and we do not consider proposing yet another solution. We rather thoroughly analyze the interactions between connections and show that actually ACK compression only arises in a perfectly symmetrical setup and it has little impact on performance. We provide a different explanation of the interactions-data pendulum, a core phenomenon that we analyze in this paper. In the data pendulum effect, data and ACK segments alternately fill only one of the link buffers (on the upload or download side) at a time, but almost never both of them. We analyze the effect in the case in which buffers are structured as arrays of bytes and derive an expression for the ratio between the download and upload throughput. Simulation results and measurements confirm our analysis and show how appropriate buffer sizing alleviates performance degradation. We also consider the case of buffers structured as arrays of packets and show that it amplifies the effects of data pendulum.", "paper_title": "Two-way TCP Connections: Old Problem, New Insight", "paper_id": "WOS:000289669400001"}