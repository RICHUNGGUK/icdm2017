{"auto_keywords": [{"score": 0.03037241111200185, "phrase": "gpu"}, {"score": 0.00500619544912129, "phrase": "cuda"}, {"score": 0.00481495049065317, "phrase": "parallel_implementation_of"}, {"score": 0.004681971826924847, "phrase": "gustafson-kessel_clustering_algorithm"}, {"score": 0.0034398445347109396, "phrase": "high-dimensional_data"}, {"score": 0.0031182092708983184, "phrase": "parallel_implementation"}, {"score": 0.002989714021608139, "phrase": "gk_algorithm"}, {"score": 0.002562123444678208, "phrase": "optimized_matrix_multiplication_algorithm"}, {"score": 0.002388487669097511, "phrase": "shared_memory"}, {"score": 0.002289993730291136, "phrase": "cuda_version"}, {"score": 0.0021049977753042253, "phrase": "single-cpu_version"}], "paper_keywords": ["clustering", " Gustafson-Kessel", " CUDA", " GPU"], "paper_abstract": "Despite the benefits of the Gustafson-Kessel (GK) clustering algorithm, it becomes computationally inefficient when applied to high-dimensional data. In this letter, a parallel implementation of the GK algorithm on the GPU with CUDA is proposed. Using an optimized matrix multiplication algorithm with fast access to shared memory, the CUDA version achieved a maximum 240-fold speedup over the single-CPU version.", "paper_title": "A Parallel Implementation of the Gustafson-Kessel Clustering Algorithm with CUDA", "paper_id": "WOS:000302834400028"}