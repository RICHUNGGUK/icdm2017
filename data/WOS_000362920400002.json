{"auto_keywords": [{"score": 0.048786972321694204, "phrase": "holub's_algorithm"}, {"score": 0.0122502570646435, "phrase": "linear_time"}, {"score": 0.004819482221971181, "phrase": "linear"}, {"score": 0.0046340196745259694, "phrase": "morphic_imprimitivity_testing"}, {"score": 0.004583579470330216, "phrase": "stepan_holub"}, {"score": 0.004315771670213371, "phrase": "first_polynomial-time_algorithm"}, {"score": 0.004153520149706423, "phrase": "nontrivial_fixed_point"}, {"score": 0.003975515793563275, "phrase": "quadratic_time"}, {"score": 0.0039322149318145845, "phrase": "large_alphabets"}, {"score": 0.003622088701900472, "phrase": "careful_choice"}, {"score": 0.002989991779830814, "phrase": "unnecessary_operations"}, {"score": 0.002861708609922034, "phrase": "efficient_data_structures"}, {"score": 0.0027239390917424898, "phrase": "connected_components"}, {"score": 0.0026357877401570764, "phrase": "specially_marked_positions"}, {"score": 0.002508867228980776, "phrase": "quadratic_size"}, {"score": 0.0024815011359381692, "phrase": "large_alphabet"}, {"score": 0.002361992359512022, "phrase": "conceptual_graph"}, {"score": 0.0022980978400845144, "phrase": "preliminary_version"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Word morphism", " Morphical primitivity", " Linear-time algorithm"], "paper_abstract": "Stepan Holub (Discr. Math., 2009) gave the first polynomial-time algorithm deciding whether a given word is a nontrivial fixed point of a morphism. His algorithm works in quadratic time for large alphabets. We improve the algorithm to work in linear time. Our improvement starts with a careful choice of a subset of rules used in Holub's algorithm that is necessary to grant correctness of the algorithm. Afterwards we show how to choose the order of applying the rules that allows to avoid unnecessary operations on sets. We obtain linear time using efficient data structures for implementation of the rules. Holub's algorithm maintains connected components of a graph corresponding to specially marked positions in a word. This graph is of quadratic size for large alphabet. In our algorithm only a linear number of edges of this conceptual graph is processed. A preliminary version of this paper appeared at LATA 2013 conference [11]. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Linear-time version of Holub's algorithm for morphic imprimitivity testing", "paper_id": "WOS:000362920400002"}