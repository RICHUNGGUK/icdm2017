{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "existing_databases"}, {"score": 0.04969652007027205, "phrase": "informative_armstrong_databases"}, {"score": 0.004738325072560588, "phrase": "functional_dependencies"}, {"score": 0.004644247838681628, "phrase": "inclusion_dependencies"}, {"score": 0.004515655183335171, "phrase": "data_semantics"}, {"score": 0.0044795698035664695, "phrase": "relational_databases"}, {"score": 0.00426900754050533, "phrase": "foreign_keys"}, {"score": 0.004003511299646736, "phrase": "real-life_databases"}, {"score": 0.0036651042289628324, "phrase": "simple_list"}, {"score": 0.0033150213498435617, "phrase": "small_subsets"}, {"score": 0.0032753168662834516, "phrase": "existing_database"}, {"score": 0.003236086384959101, "phrase": "exactly_the_same_fds"}, {"score": 0.003108669771132255, "phrase": "classical_notion"}, {"score": 0.003083793024782014, "phrase": "armstrong_databases"}, {"score": 0.002915125480162171, "phrase": "real-world_tuples"}, {"score": 0.002880196765572443, "phrase": "main_result"}, {"score": 0.0027556576784848207, "phrase": "iadb"}, {"score": 0.0027008385562908425, "phrase": "non-circular_inds"}, {"score": 0.002668470532683947, "phrase": "constructive_proof"}, {"score": 0.0024524733595572084, "phrase": "real-life_database"}, {"score": 0.0024036710362692042, "phrase": "obtained_database"}, {"score": 0.0023558375480288297, "phrase": "initial_database"}, {"score": 0.0022268964676199292, "phrase": "key_feature"}, {"score": 0.002156402793481102, "phrase": "logical_level"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd"}], "paper_keywords": ["functional dependencies", " inclusion dependencies", " Armstrong databases", " database maintenance", " dependency visualization"], "paper_abstract": "Functional dependencies (FDs) and inclusion dependencies (INDs) convey most of data semantics in relational databases and are very useful in practice since they generalize keys and foreign keys. Nevertheless, FDs and INDs are often not available, obsolete or lost in real-life databases. Several algorithms have been proposed for mining these dependencies, but the output is always in the same format: a simple list of dependencies, hard to understand for the user. In this paper, we define informative Armstrong databases (IADBs) from databases as being small subsets of an existing database, satisfying exactly the same FDs and INDs. They are an extension of the classical notion of Armstrong databases, but more suitable for the understanding of dependencies, since tuples are real-world tuples. The main result of this paper is to bound the size of an IADB in the case of non-circular INDs. A constructive proof of this result is given, from which an algorithm has been devised. An implementation and experiments against a real-life database were performed; the obtained database contains 0.6% of the initial database tuples only. More importantly, such semantic sampling of databases appear to be a key feature for the understanding of existing databases at the logical level. (C) 2006 Elsevier Ltd All rights reserved.", "paper_title": "Semantic sampling of existing databases through informative Armstrong databases", "paper_id": "WOS:000244019200005"}