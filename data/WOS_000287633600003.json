{"auto_keywords": [{"score": 0.05007838762916156, "phrase": "weighted_frequency_counting"}, {"score": 0.03941502206126271, "phrase": "multi-core_processors"}, {"score": 0.026580781455701547, "phrase": "prim"}, {"score": 0.004765173195920904, "phrase": "high-speed_network_monitoring"}, {"score": 0.004618893461411858, "phrase": "high-speed_network"}, {"score": 0.004453874101119545, "phrase": "network_applications"}, {"score": 0.004384960761826366, "phrase": "traffic_engineering"}, {"score": 0.004339609346924681, "phrase": "anomaly_detection"}, {"score": 0.004184526032558792, "phrase": "service_attacks"}, {"score": 0.0040771431404398855, "phrase": "high_packet_arrival_rate"}, {"score": 0.003693533648584145, "phrase": "efficient_parallel_designs"}, {"score": 0.003078577062864183, "phrase": "efficient_parallel_system"}, {"score": 0.0029530125680590413, "phrase": "naive_fine-grained_lock_design_results"}, {"score": 0.0027741761880779535, "phrase": "severe_performance_degradation"}, {"score": 0.0027454383581457555, "phrase": "multi-core_architectures"}, {"score": 0.002619748321217153, "phrase": "novel_method"}, {"score": 0.002435542816459651, "phrase": "temporal_imprecision_concept"}, {"score": 0.002372935208038141, "phrase": "merge_overhead"}, {"score": 0.002311933249234786, "phrase": "relatively_large_memory_space"}, {"score": 0.0022524959504997303, "phrase": "theoretical_analysis"}, {"score": 0.0022291501521610737, "phrase": "real_traffic_experiments"}, {"score": 0.002171836484200008, "phrase": "almost_linear_speedup"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Traffic monitoring", " Parallel algorithms", " Data streams", " Weighted frequency counting", " Frequent items"], "paper_abstract": "Identifying frequent items in high-speed network is important for a variety of network applications ranging from traffic engineering to anomaly detection such as detection of denial of service attacks. To deal with high packet arrival rate, it is desirable that such systems are able to support very high update throughput. The advent of multi-core processors calls for efficient parallel designs which can effectively utilize the parallelism of the multi-cores. In this paper, we address the problem of parallelizing weighted frequency counting in the context of multi-core processors. We discuss the challenges in designing an efficient parallel system. Our evaluation and analysis reveals that the naive fine-grained lock design results in excessive overhead and wait, which in turn leads to severe performance degradation in multi-core architectures. Based on our analysis, we propose a novel method: precision integrated method (PRIM). PRIM makes use of the temporal imprecision concept to significantly reduce the merge overhead at the cost of relatively large memory space used. Both the theoretical analysis and real traffic experiments demonstrate that PRIM delivers almost linear speedup. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Parallelizing weighted frequency counting in high-speed network monitoring", "paper_id": "WOS:000287633600003"}