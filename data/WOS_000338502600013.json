{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "class_diagrams"}, {"score": 0.0047588556219929756, "phrase": "multiplicity_and_uniqueness_constraints"}, {"score": 0.004594443767709888, "phrase": "multiplicity_constraints"}, {"score": 0.00440976345264104, "phrase": "non-negative_integers"}, {"score": 0.004282391936827106, "phrase": "numeric_semantics"}, {"score": 0.004014923642015515, "phrase": "minimal_models"}, {"score": 0.00376409764683147, "phrase": "succinct_user_feedback"}, {"score": 0.0035705347414368696, "phrase": "experimental_section"}, {"score": 0.0033473779327638322, "phrase": "integer_linear_programming_perform"}, {"score": 0.0032697235411641695, "phrase": "real-world_and_synthetic_benchmarks"}, {"score": 0.0030653094605910727, "phrase": "formal_model"}, {"score": 0.002994178996584381, "phrase": "cost_functions"}, {"score": 0.0028736379396305596, "phrase": "research_programme"}, {"score": 0.002693919110230191, "phrase": "configuration_management"}, {"score": 0.0023953929817357882, "phrase": "formal_methods"}, {"score": 0.0023674192513753996, "phrase": "familiar_user_interfaces"}, {"score": 0.0021049977753042253, "phrase": "immediate_feedback"}], "paper_keywords": ["Model engineering", " Formal methods", " Reasoning about class diagrams", " Integer linear programming", " Configuration management"], "paper_abstract": "We translate class diagrams with multiplicity constraints and uniqueness attributes to inequalities over non-negative integers. Based on this numeric semantics we check the satisfiability and consistency of class diagrams and compute minimal models. We show that this approach is efficient and provides succinct user feedback in the case of errors. In an experimental section we demonstrate that general off-the-shelf solvers for integer linear programming perform as well on real-world and synthetic benchmarks as specialised algorithms do, facilitating the extension of the formal model by further numeric constraints like cost functions. Our results are embedded in a research programme on reasoning about class diagrams and are motivated by applications in configuration management. Compared to other (for instance logic-based) approaches our aim is to hide the complexity of formal methods behind familiar user interfaces like class diagrams and to concentrate on problems that can be solved efficiently in order to be able to provide immediate feedback to users.", "paper_title": "Numeric semantics of class diagrams with multiplicity and uniqueness constraints", "paper_id": "WOS:000338502600013"}