{"auto_keywords": [{"score": 0.04967710401179305, "phrase": "large-scale_behavioral_simulations"}, {"score": 0.00481495049065317, "phrase": "load_balancing"}, {"score": 0.004616199959832044, "phrase": "real-world_multi-agent_systems"}, {"score": 0.004481954307639453, "phrase": "discrete_time-steps"}, {"score": 0.004388450908826472, "phrase": "simulated_space"}, {"score": 0.004084829853870028, "phrase": "distinguishing_feature"}, {"score": 0.004050514095922329, "phrase": "behavioral_simulations"}, {"score": 0.003802135020791801, "phrase": "massive_scale"}, {"score": 0.0036759314172445934, "phrase": "continual_and_significant_load_imbalance"}, {"score": 0.0034504423179340738, "phrase": "excessive_load"}, {"score": 0.0031979796189858206, "phrase": "data_domains"}, {"score": 0.003144426503333397, "phrase": "load_changes"}, {"score": 0.003104849179057156, "phrase": "group_migration"}, {"score": 0.0029890721584351684, "phrase": "effective_and_low-cost_load_balancing_scheme"}, {"score": 0.0028654728453890426, "phrase": "key_observation"}, {"score": 0.002758597251689795, "phrase": "long_distance"}, {"score": 0.0026782279715171866, "phrase": "single_tick"}, {"score": 0.0026445028886931837, "phrase": "localized_mobility_property"}, {"score": 0.002535115422089855, "phrase": "dynamic_domain"}, {"score": 0.002482126086922683, "phrase": "merely_the_load_changes"}, {"score": 0.0023996317685956213, "phrase": "significant_load_changes"}, {"score": 0.0022906498741695094, "phrase": "load_imbalance"}, {"score": 0.002122866345896679, "phrase": "excellent_load_balance"}, {"score": 0.0021049977753042253, "phrase": "dramatically_lowered_costs"}], "paper_keywords": ["Behavioral simulation", " load balancing", " incremental partitioning", " multi-agent system", " group migration"], "paper_abstract": "Large-scale behavioral simulations are widely used to study real-world multi-agent systems. Such programs normally run in discrete time-steps or ticks, with simulated space decomposed into domains that are distributed over a set of workers to achieve parallelism. A distinguishing feature of behavioral simulations is their frequent and high-volume group migration, the phenomenon in which simulated objects traverse domains in groups at massive scale in each tick. This results in continual and significant load imbalance among domains. To tackle this problem, traditional load balancing approaches either require excessive load re-profiling and redistribution, which lead to high computation/communication costs, or perform poorly because their statically partitioned data domains cannot reflect load changes brought by group migration. In this paper, we propose an effective and low-cost load balancing scheme, named Inc-part, based on a key observation that an object is unlikely to move a long distance (across many domains) within a single tick. This localized mobility property allows one to efficiently estimate the load of a dynamic domain incrementally, based on merely the load changes occurring in its neighborhood. The domains experiencing significant load changes are then partitioned or merged, and redistributed to redress load imbalance among the workers. Experiments on a 64-node (1,024-core) platform show that Inc-part can attain excellent load balance with dramatically lowered costs compared to state-of-the-art solutions.", "paper_title": "Inc-Part: Incremental Partitioning for Load Balancing in Large-Scale Behavioral Simulations", "paper_id": "WOS:000356138700010"}