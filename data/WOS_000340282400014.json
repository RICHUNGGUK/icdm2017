{"auto_keywords": [{"score": 0.046819005802717, "phrase": "inter-core_communication_overhead"}, {"score": 0.007771437925143662, "phrase": "memory_usage"}, {"score": 0.006202540893611729, "phrase": "overall_memory_usage"}, {"score": 0.005173701299453014, "phrase": "schedulability_analysis"}, {"score": 0.00481495049065317, "phrase": "communication_overhead_minimization"}, {"score": 0.004779406424192843, "phrase": "streaming_applications"}, {"score": 0.004744123493964429, "phrase": "bus-based_multiprocessor_system"}, {"score": 0.004639822587124109, "phrase": "inter-core_communication"}, {"score": 0.004571559854487074, "phrase": "task_schedules"}, {"score": 0.0043889488321824785, "phrase": "timing_performance"}, {"score": 0.004198010835867604, "phrase": "mpsoc_architectures"}, {"score": 0.003566028957296066, "phrase": "bus-based_mpsocs"}, {"score": 0.0032743731084995515, "phrase": "intra-period_data_dependencies"}, {"score": 0.003074197032561992, "phrase": "inter-core_communication_tasks"}, {"score": 0.002630414143385786, "phrase": "scheduling_problem"}, {"score": 0.0026012779346272848, "phrase": "integer_linear_programming"}, {"score": 0.0025251455169484557, "phrase": "optimal_schedule"}, {"score": 0.0024512358145634336, "phrase": "heuristic_approach"}, {"score": 0.0024061422012437344, "phrase": "near-optimal_solution"}, {"score": 0.002301265368019983, "phrase": "real-life_streaming_applications"}, {"score": 0.002242206465278159, "phrase": "experimental_results"}, {"score": 0.0022091400304857043, "phrase": "proposed_approach"}, {"score": 0.0021684903968454267, "phrase": "schedule_length"}, {"score": 0.0021049977753042253, "phrase": "previous_work"}], "paper_keywords": ["Real-time", " task scheduling", " memory-aware", " inter-core communication", " streaming applications", " bus", " MPSoC"], "paper_abstract": "Inter-core communication introduces overheads in task schedules on Multiprocessor System-on-Chips (MPSoCs). Inter-core communication overhead not only negatively impacts the timing performance but also significantly degrades the memory usage for streaming applications running on MPSoC architectures. By minimizing inter-core communication overhead, a shorter period can be applied and system performance (e.g., throughput, memory usage) can be improved. In this paper, we focus on solving the problem of minimizing inter-core communication overhead for streaming applications on bus-based MPSoCs. The objective is to minimize inter-core communication overhead while minimizing the overall memory usage. To solve the problem, we first let tasks with intra-period data dependencies transform to inter-period data dependencies so as to overlap the execution of computation and inter-core communication tasks. By doing this, inter-core communication overhead can be effectively removed. To minimize the overall memory usage, we then perform schedulability analysis and obtain the bounds of the times needed to reschedule each task. Based on the schedulability analysis, we formulate the scheduling problem as an integer linear programming (ILP) model and obtain an optimal schedule. In addition, we propose a heuristic approach to efficiently obtain a near-optimal solution. We conduct experiments on a set of benchmarks from both real-life streaming applications and synthetic task graphs. The experimental results show that the proposed approach can significantly reduce the schedule length and improve the memory usage compared with the previous work.", "paper_title": "Memory-Aware Task Scheduling with Communication Overhead Minimization for Streaming Applications on Bus-Based Multiprocessor System-on-Chips", "paper_id": "WOS:000340282400014"}