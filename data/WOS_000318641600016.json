{"auto_keywords": [{"score": 0.04767944569251899, "phrase": "update_transactions"}, {"score": 0.00481495049065317, "phrase": "workload-efficient_deadline"}, {"score": 0.0046928556063004214, "phrase": "temporal_consistency"}, {"score": 0.004652845998457721, "phrase": "edf._deriving_deadlines"}, {"score": 0.00443878620915958, "phrase": "data_freshness"}, {"score": 0.004382127278148236, "phrase": "imposed_workload"}, {"score": 0.004270960586542813, "phrase": "important_problem"}, {"score": 0.004234532601573088, "phrase": "real-time_database_research"}, {"score": 0.004144810537437608, "phrase": "active_research"}, {"score": 0.00385368199735867, "phrase": "periodic_transactions"}, {"score": 0.0036605323485683983, "phrase": "practical_and_efficient_two-phase_algorithm"}, {"score": 0.003629291866667764, "phrase": "general_edf"}, {"score": 0.003447349911141396, "phrase": "edf-scheduled_update_transactions"}, {"score": 0.0032465423581390625, "phrase": "linear_time"}, {"score": 0.003137074867443131, "phrase": "execution_times"}, {"score": 0.0030183163057929687, "phrase": "validity_interval_lengths"}, {"score": 0.0029925402963843282, "phrase": "real-time_data_objects"}, {"score": 0.0029165216647792924, "phrase": "remaining_cases"}, {"score": 0.0027230880516264685, "phrase": "existing_deadline-monotonic-based_algorithm"}, {"score": 0.002467228805628948, "phrase": "schedulability_test"}, {"score": 0.002404522326122611, "phrase": "time_efficiency"}, {"score": 0.0023233800372985686, "phrase": "existing_approaches"}, {"score": 0.002283839204519042, "phrase": "generated_workloads"}, {"score": 0.002216251512062482, "phrase": "pseudopolynomial_time_complexity"}, {"score": 0.0021049977753042253, "phrase": "comparable_quality"}], "paper_keywords": ["Real-time databases", " temporal consistency", " update transaction", " periods and deadlines", " earliest deadline first"], "paper_abstract": "Deriving deadlines and periods for update transactions so as to maintain timeliness and data freshness while minimizing imposed workload has long been recognized an important problem in real-time database research. Despite years of active research, the state-of-the-art still has much room for improvement, particularly for periodic transactions scheduled by the Earliest Deadline First (EDF) algorithm. In this paper, we propose a practical and efficient two-phase algorithm, GEneral EDF (GE(EDF)), for assigning periods and deadlines to EDF-scheduled update transactions. Phase 1 of GE(EDF) aims at finding solutions for most inputs in linear time, based on the observation that the execution times of update transactions are relatively small compared to the validity interval lengths of real-time data objects in many real-time applications. In the remaining cases for which Phase 1 fails to derive solutions, Phase 2 is invoked by employing an existing deadline-monotonic-based algorithm, which we show is also applicable to our problem. Meanwhile, we have devised several techniques which significantly reduce the cost of schedulability test, and hence greatly improve time efficiency. Our experimental results demonstrate that GE(EDF) outperforms existing approaches in terms of generated workloads. Although Phase 2 has a pseudopolynomial time complexity, our experimental study shows that it runs much faster than other solutions with comparable quality.", "paper_title": "Workload-Efficient Deadline and Period Assignment for Maintaining Temporal Consistency under EDF", "paper_id": "WOS:000318641600016"}