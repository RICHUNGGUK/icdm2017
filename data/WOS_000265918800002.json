{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sparse_modeling_of_textures"}, {"score": 0.004680473391946691, "phrase": "generative_model"}, {"score": 0.004549734943142138, "phrase": "local_sparse_description"}, {"score": 0.004485735417293941, "phrase": "image_content"}, {"score": 0.004258644418211771, "phrase": "local_texture_patches"}, {"score": 0.004218602458288531, "phrase": "adapted_atomic_elements"}, {"score": 0.003986103192038901, "phrase": "sparse_coding"}, {"score": 0.0036610702290043387, "phrase": "new_texture"}, {"score": 0.0035587046945919788, "phrase": "optimization_problem"}, {"score": 0.0031619994642255846, "phrase": "hand_crafted_dictionaries"}, {"score": 0.0029594318330247614, "phrase": "synthetic_images"}, {"score": 0.002931569771634119, "phrase": "geometric_features"}, {"score": 0.0027178867838199734, "phrase": "input_exemplar"}, {"score": 0.0026543514413663893, "phrase": "computer_graphics_methods"}, {"score": 0.00247249708860822, "phrase": "last_method"}, {"score": 0.0023806459272452353, "phrase": "optimization_process"}, {"score": 0.002281376328251423, "phrase": "exemplar_patches"}, {"score": 0.0021049977753042253, "phrase": "proposed_texture_model"}], "paper_keywords": ["Image processing", " Texture synthesis", " Sparse representation", " Learning dictionaries", " Inpainting"], "paper_abstract": "This paper presents a generative model for textures that uses a local sparse description of the image content. This model enforces the sparsity of the expansion of local texture patches on adapted atomic elements. The analysis of a given texture within this framework performs the sparse coding of all the patches of the texture into the dictionary of atoms. Conversely, the synthesis of a new texture is performed by solving an optimization problem that seeks for a texture whose patches are sparse in the dictionary. This paper explores several strategies to choose this dictionary. A set of hand crafted dictionaries composed of edges, oscillations, lines or crossings elements allows to synthesize synthetic images with geometric features. Another option is to define the dictionary as the set of all the patches of an input exemplar. This leads to computer graphics methods for synthesis and shares some similarities with non-local means filtering. The last method we explore learns the dictionary by an optimization process that maximizes the sparsity of a set of exemplar patches. Applications of all these methods to texture synthesis, inpainting and classification shows the efficiency of the proposed texture model.", "paper_title": "Sparse Modeling of Textures", "paper_id": "WOS:000265918800002"}