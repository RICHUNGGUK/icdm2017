{"auto_keywords": [{"score": 0.04314490148813409, "phrase": "processor_configurations"}, {"score": 0.017813109430353736, "phrase": "design_points"}, {"score": 0.017215487991829988, "phrase": "analytical_models"}, {"score": 0.009572286496127293, "phrase": "execution_time"}, {"score": 0.006552508118263595, "phrase": "ps_method"}, {"score": 0.0063961218680577145, "phrase": "psp_method"}, {"score": 0.0045088388224419, "phrase": "data_flow_nature"}, {"score": 0.004477765573115626, "phrase": "multimedia_applications"}, {"score": 0.004416257191177784, "phrase": "space_exploration"}, {"score": 0.004236733825313407, "phrase": "pipelined_mpsoc"}, {"score": 0.004078562617505643, "phrase": "customizable_options"}, {"score": 0.0037148167062767096, "phrase": "performance_metrics"}, {"score": 0.0034305738274625634, "phrase": "pipelined_mpsoc's_design_points"}, {"score": 0.0033951334049808733, "phrase": "slow_full-system_cycle"}, {"score": 0.0033138516659108387, "phrase": "effective_use"}, {"score": 0.003234509549830177, "phrase": "individual_processor_configurations"}, {"score": 0.0030180996912267683, "phrase": "reduced_number"}, {"score": 0.002806391131610627, "phrase": "processor_analytical_model"}, {"score": 0.002739165532192527, "phrase": "remaining_processor_configurations"}, {"score": 0.0026735459686033627, "phrase": "typical_multimedia_applications"}, {"score": 0.002503232182798796, "phrase": "ps_and_psp_methods"}, {"score": 0.0024859463164240603, "phrase": "maximum_absolute_error"}, {"score": 0.0023518780693181796, "phrase": "design_spaces"}, {"score": 0.0023275553629639395, "phrase": "pipelined_mpsocs"}, {"score": 0.0021049977753042253, "phrase": "simulation_time"}], "paper_keywords": ["Dataflow architectures", " heterogeneous (hybrid) systems", " measurement", " evaluation", " modeling", " simulation of multiple-processor systems"], "paper_abstract": "The paradigm of pipelined MPSoC (processors connected in a pipeline) is well suited to data flow nature of multimedia applications. Often design space exploration is performed to optimize execution time, latency or throughput of a pipelined MPSoC where the variants in the system are processor configurations due to customizable options in each of the processors. Since there can be billions of combinations of processor configurations (design points), the challenge is to quickly provide estimates of performance metrics of those design points. Hence, in this article, we propose analytical models to estimate execution time, latency and throughput of a pipelined MPSoC's design points, avoiding slow full-system cycle accurate simulations of all the design points. For effective use of these analytical models, latencies of individual processor configurations should be available. We propose two estimation methods (PS and PSP) to quickly gather latencies of processor configurations with reduced number of simulations. The PS method simulates all the processor configurations once, while the PSP method simulates only a subset of processor configurations and then uses a processor analytical model to estimate the latencies of the remaining processor configurations. We experimented with several pipelined MPSoCs executing typical multimedia applications (JPEG encoder/decoder, MP3 encoder and H. 264 encoder). Our results show that the analytical models with PS and PSP methods had maximum absolute error of 12.95 percent and 18.67 percent respectively, and minimum fidelity of 0.93 and 0.88 respectively. The design spaces of the pipelined MPSoCs ranged from 10(12) to 10(18) design points, and hence simulation of all design points will take years and is infeasible. Compared to PS method, the PSP method reduced simulation time from days to several hours.", "paper_title": "Performance Estimation of Pipelined MultiProcessor System-on-Chips (MPSoCs)", "paper_id": "WOS:000342178200021"}