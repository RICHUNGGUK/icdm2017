{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "current_reuse_techniques"}, {"score": 0.00462919213721188, "phrase": "software_development_organizations"}, {"score": 0.003802135020791801, "phrase": "domain_evolutions"}, {"score": 0.003378385493203297, "phrase": "poor_resolution"}, {"score": 0.003312486229143855, "phrase": "retrieval_techniques"}, {"score": 0.0032160319265621285, "phrase": "candidate_artifacts"}, {"score": 0.003091767402370757, "phrase": "new_projects"}, {"score": 0.0026148807877309417, "phrase": "incremental_adoption"}, {"score": 0.0025638362414466278, "phrase": "low_cost"}, {"score": 0.0022113879114507577, "phrase": "big_problems"}, {"score": 0.0021682027434117095, "phrase": "traditional_reuse"}], "paper_keywords": [""], "paper_abstract": "Current reuse techniques disincentive their mass practice in software development organizations because of their large initial investments, the changes they required in ways of developing software, and their fragility in front of domain evolutions. We argue that the root of these problems is the poor resolution of retrieval techniques to identify candidate artifacts to utilize in new projects. We sketch an approach to reuse based on artifacts retrieval by content, which allows incremental adoption at low cost. The Incremental Reuse Method (IRM), founded on these principles, can solve the big problems of traditional reuse, allowing their application in all manner of organizations.", "paper_title": "Incremental software reuse", "paper_id": "WOS:000238575400029"}