{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "operand_descriptor"}, {"score": 0.004644014990871423, "phrase": "number_crunching"}, {"score": 0.004596295252559861, "phrase": "today's_cloud"}, {"score": 0.004123781267600542, "phrase": "original_von_neumann_instruction_model"}, {"score": 0.003855849747095327, "phrase": "new_architecture"}, {"score": 0.0035497797026638033, "phrase": "individual_operand"}, {"score": 0.0034771228725942846, "phrase": "effective_and_efficient_processing"}, {"score": 0.003441352119167824, "phrase": "today's_computing"}, {"score": 0.003405948098114941, "phrase": "hisc_instruction"}, {"score": 0.003336225354214798, "phrase": "operation_code"}, {"score": 0.0027267406923803367, "phrase": "execution_stages"}, {"score": 0.0026570998719084153, "phrase": "low_clock_cycle_overheads"}, {"score": 0.0026297428083782875, "phrase": "object-oriented_programming"}, {"score": 0.0025625729433234623, "phrase": "strict_access_control"}, {"score": 0.0024842242921857705, "phrase": "java_model"}, {"score": 0.002420762293555924, "phrase": "java_object-oriented_program"}, {"score": 0.002358917661465133, "phrase": "software_jvms"}, {"score": 0.0022053994402287925, "phrase": "future_extensions"}, {"score": 0.002160200030574203, "phrase": "oop."}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": [""], "paper_abstract": "Computing has been evolved from number crunching to today's cloud. Data are no longer numbers but information which needs to be appropriately guarded and easily transportable, but the original von Neumann instruction model does not support them architecturally. This led us to start a new architecture named HISC (High-level Instruction Set Computer), to attach attributes to individual operand on instruction for effective and efficient processing of today's computing. HISC instruction consists of an operation code (opcode), and an index to source or destination operand referenced by an operand descriptor, which contains value and attributes for the operand. The value and attributes can be accessed and processed in parallel with execution stages, introducing zero or low clock cycle overheads. Object-oriented programming (OOP) requires strict access control for the data. The JAVA model, jHISC, executes Java object-oriented program not only faster than software JVMs but has less cycles-per-instruction than other hardware Java processors. We also propose future extensions for operand descriptor beyond OOP. (c) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "HISC: A computer architecture using operand descriptor", "paper_id": "WOS:000304579100024"}