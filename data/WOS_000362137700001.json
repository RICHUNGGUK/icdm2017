{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ant_colony_optimization"}, {"score": 0.004753194996637899, "phrase": "semantic_network_support"}, {"score": 0.004692227830462433, "phrase": "software_design"}, {"score": 0.004602233424629559, "phrase": "important_task"}, {"score": 0.004204459295724526, "phrase": "search-based_software_engineering_approach"}, {"score": 0.003992729692096799, "phrase": "software_engineering_problems"}, {"score": 0.003941478054422721, "phrase": "search_algorithms"}, {"score": 0.003767203575060969, "phrase": "meta-heuristic_search_algorithm"}, {"score": 0.003577414339646767, "phrase": "input_data"}, {"score": 0.0035087260813209593, "phrase": "analysis_phase_artifacts"}, {"score": 0.003310447652300423, "phrase": "early_life_cycle_class_diagram"}, {"score": 0.0032259472087775138, "phrase": "human_designer's_background_knowledge"}, {"score": 0.002985130390111069, "phrase": "textual_documents"}, {"score": 0.0029467742734417255, "phrase": "analysis_phase"}, {"score": 0.0028715693000980324, "phrase": "wordnet"}, {"score": 0.00281635677605879, "phrase": "semantic_network"}, {"score": 0.002709161672473817, "phrase": "output_classes"}, {"score": 0.0026060359255636444, "phrase": "structural_relations"}, {"score": 0.0025230952890994236, "phrase": "proposed_method"}, {"score": 0.00244278788608393, "phrase": "case_studies"}, {"score": 0.0023346234464901978, "phrase": "evaluation_results"}, {"score": 0.0022749744354271816, "phrase": "background_knowledge"}, {"score": 0.0022457226013538343, "phrase": "optimization_algorithm"}, {"score": 0.0021883400011393564, "phrase": "better_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Search-based software engineering", " Automated software design", " Ant colony optimization"], "paper_abstract": "Software design is an important task that needs to be well performed. In this paper, a method for automated software design using search-based software engineering approach is proposed. This approach can solve software engineering problems using search algorithms. Ant colony optimization is used as the meta-heuristic search algorithm in both single-objective and multi-objective modes. Input data are the analysis phase artifacts and the output is in the form of early life cycle class diagram. To provide human designer's background knowledge, a semantic network is used that is built upon the textual documents of analysis phase plus other resources like WordNet. This semantic network is used to name the output classes, and also to determine structural relations between classes. The proposed method is evaluated by some case studies and results are reported. The evaluation results show that using background knowledge beside optimization algorithm helps to achieve better results. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Automated software design using ant colony optimization with semantic network support", "paper_id": "WOS:000362137700001"}