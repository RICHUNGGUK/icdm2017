{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "classical_framework"}, {"score": 0.004721162131188487, "phrase": "formal_languages"}, {"score": 0.004583878086896926, "phrase": "refinement_operation"}, {"score": 0.0041136473765874815, "phrase": "inverse_substitution"}, {"score": 0.0035141291835319682, "phrase": "specification_level"}, {"score": 0.003378385493203297, "phrase": "abstract_view"}, {"score": 0.003091767402370757, "phrase": "timed_systems"}, {"score": 0.0028574164693918433, "phrase": "uniform_notion"}, {"score": 0.0025638362414466278, "phrase": "timed_substitutions"}, {"score": 0.0024891269874339553, "phrase": "general_framework"}, {"score": 0.0024405312482831646, "phrase": "signalevent_languages"}, {"score": 0.0021049977753042253, "phrase": "regular_signal-event_languages"}], "paper_keywords": [""], "paper_abstract": "In the classical framework of formal languages, a refinement operation is modeled by a substitution and an abstraction by an inverse substitution. These mechanisms have been widely studied, because they describe a change in the specification level, from an abstract view to a, more concrete one, or conversely. For timed systems, there is up to now no uniform notion of substitutions. In this paper, we study the timed substitutions in the general framework of signalevent languages, where both signals and events are taken into account. We prove that regular signal-event languages are closed under substitutions and inverse substitutions.", "paper_title": "Refinements and abstractions of signal-event (timed) languages", "paper_id": "WOS:000241576400006"}