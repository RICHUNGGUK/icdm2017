{"auto_keywords": [{"score": 0.044605401042099674, "phrase": "refutation_proofs"}, {"score": 0.00481495049065317, "phrase": "unbounded_model_checking"}, {"score": 0.0045324756541157574, "phrase": "craig_interpolants"}, {"score": 0.0044644734709113985, "phrase": "inner_steps"}, {"score": 0.004419703921314433, "phrase": "sat-based_unbounded_model_checking"}, {"score": 0.004375391747884881, "phrase": "craig"}, {"score": 0.004223708778943785, "phrase": "unsatisfiable_sat_runs"}, {"score": 0.004077272409331917, "phrase": "linear_size"}, {"score": 0.003935892934907777, "phrase": "existing_techniques"}, {"score": 0.0038964032225585117, "phrase": "proof_reduction"}, {"score": 0.0038379074449947067, "phrase": "interpolant_circuit_compaction"}, {"score": 0.0037235274565193665, "phrase": "implementation_problem"}, {"score": 0.0036491673002304326, "phrase": "standard_logic_synthesis_techniques"}, {"score": 0.003282383509542342, "phrase": "existing_technique"}, {"score": 0.003073988343893906, "phrase": "customized_light_weight_combinational_logic_reductions"}, {"score": 0.002997399280524285, "phrase": "odc"}, {"score": 0.002908006828021539, "phrase": "bdd"}, {"score": 0.0027929100418926725, "phrase": "proof_graph_data_structure"}, {"score": 0.0026959452932289797, "phrase": "ad-hoc_combinational_reduction_procedure"}, {"score": 0.0024493494346360415, "phrase": "main_contributions"}, {"score": 0.0023642842046859274, "phrase": "overall_approach"}, {"score": 0.0021917966722180132, "phrase": "interpolant_generation_process"}], "paper_keywords": ["Craig interpolant", " SAT-based unbounded model checking", " Proof reduction", " Interpolant reduction"], "paper_abstract": "This paper addresses the problem of reducing the size of Craig interpolants generated within inner steps of SAT-based Unbounded Model Checking. Craig interpolants are obtained from refutation proofs of unsatisfiable SAT runs, in terms of and/or circuits of linear size, w.r.t. the proof. Existing techniques address proof reduction, whereas interpolant circuit compaction is typically considered as an implementation problem, tackled with standard logic synthesis techniques. We propose a three step interpolant computation process, specifically oriented to scalability, in which we: (1) exploit an existing technique to detect and remove redundancies in refutation proofs, (2) apply customized light weight combinational logic reductions (constant propagation, ODC-based simplifications, and BDD-based sweeping) directly on the proof graph data structure, (3) introduce an ad-hoc combinational reduction procedure for large interpolant circuits, based on the incrementality and divide-and-conquer paradigms. The main contributions of our approach are represented by the overall approach, the proposed combinational reduction technique, and a detailed experimental evaluation of the interpolant generation process, on a set of benchmarks from the Hardware Model Checking Competitions 2013 and 2014.", "paper_title": "Optimization techniques for craig interpolant compaction in unbounded model checking", "paper_id": "WOS:000354290800002"}