{"auto_keywords": [{"score": 0.039674809731396525, "phrase": "probcache"}, {"score": 0.015021854922452069, "phrase": "in-network_caching_environments"}, {"score": 0.00481495049065317, "phrase": "network_cache_management"}, {"score": 0.004736666296080189, "phrase": "information-centric_networks"}, {"score": 0.00462919213721188, "phrase": "resource_management"}, {"score": 0.00450933377534525, "phrase": "information-centric_networking_environments"}, {"score": 0.004406994912939125, "phrase": "predefined_places"}, {"score": 0.004363846362238565, "phrase": "content_delivery_path_results"}, {"score": 0.00433531459712787, "phrase": "unfair_and_inefficient_content"}, {"score": 0.0042928648367867835, "phrase": "different_content_flows"}, {"score": 0.004209202947762995, "phrase": "significant_caching_redundancy"}, {"score": 0.00406001734835979, "phrase": "content_flow_characteristics_results"}, {"score": 0.003993958025223994, "phrase": "network_resources"}, {"score": 0.0036673238814279286, "phrase": "caching_redundancy"}, {"score": 0.0035722806911457545, "phrase": "delivery_path"}, {"score": 0.003479692058963528, "phrase": "caching_capability"}, {"score": 0.003423042581201533, "phrase": "caches_contents"}, {"score": 0.0027741761880779535, "phrase": "higher_priority"}, {"score": 0.002737960968372391, "phrase": "longer_paths"}, {"score": 0.0026933542552712033, "phrase": "shorter_-_path_flows"}, {"score": 0.0026494723416072316, "phrase": "enhanced_version"}, {"score": 0.0026234862160314397, "phrase": "main_algorithm"}, {"score": 0.0025977542995083624, "phrase": "fair_behavior"}, {"score": 0.0025722741181993278, "phrase": "participating_content_flows"}, {"score": 0.002530359917257626, "phrase": "proposed_schemes"}, {"score": 0.002464709648714996, "phrase": "resource_allocation"}, {"score": 0.002424543908235379, "phrase": "proposed_probabilistic_approach"}, {"score": 0.0023694065215394593, "phrase": "ideal_performance"}, {"score": 0.002330790244117364, "phrase": "network_resource_utilization"}, {"score": 0.0022928018832993387, "phrase": "resource_allocation_fairness"}, {"score": 0.0022777800735119405, "phrase": "competing_content_flows"}, {"score": 0.0022113879114507577, "phrase": "expected_behavior"}, {"score": 0.002146926767291475, "phrase": "probcache_results"}, {"score": 0.0021328586481696157, "phrase": "fast_convergence"}, {"score": 0.0021049977753042253, "phrase": "popular_content_items"}], "paper_keywords": ["Information-centric networks", " in-network caching", " content multiplexing", " Cache capacity"], "paper_abstract": "We introduce the concept of resource management for in-network caching environments. We argue that in Information-Centric Networking environments, deterministically caching content messages at predefined places along the content delivery path results in unfair and inefficient content multiplexing between different content flows, as well as in significant caching redundancy. Instead, allocating resources along the path according to content flow characteristics results in better use of network resources and therefore, higher overall performance. The design principles of our proposed in-network caching scheme, which we call ProbCache, target these two outcomes, namely reduction of caching redundancy and fair content flow multiplexing along the delivery path. In particular, ProbCache approximates the caching capability of a path and caches contents probabilistically to: 1) leave caching space for other flows sharing (part of) the same path, and 2) fairly multiplex contents in caches along the path from the server to the client. We elaborate on the content multiplexing fairness of ProbCache and find that it sometimes behaves in favor of content flows connected far away from the source, that is, it gives higher priority to flows travelling longer paths, leaving little space to shorter - path flows. We introduce an enhanced version of the main algorithm that guarantees fair behavior to all participating content flows. We evaluate the proposed schemes in both homogeneous and heterogeneous cache size environments and formulate a framework for resource allocation in in-network caching environments. The proposed probabilistic approach to in-network caching exhibits ideal performance both in terms of network resource utilization and in terms of resource allocation fairness among competing content flows. Finally, and in contrast to the expected behavior, we find that the efficient design of ProbCache results in fast convergence to caching of popular content items.", "paper_title": "In-Network Cache Management and Resource Allocation for Information-Centric Networks", "paper_id": "WOS:000343904400015"}