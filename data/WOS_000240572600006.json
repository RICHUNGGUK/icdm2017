{"auto_keywords": [{"score": 0.0459419153066599, "phrase": "gap"}, {"score": 0.004637478829869904, "phrase": "simple_family"}, {"score": 0.004143196873246147, "phrase": "novel_combinatorial_translation"}, {"score": 0.00396050388346298, "phrase": "knapsack_problem"}, {"score": 0.0038721890530859578, "phrase": "approximation_algorithm"}, {"score": 0.003729335910488339, "phrase": "approximation_ratio"}, {"score": 0.0036461569988218267, "phrase": "knapsack_algorithm"}, {"score": 0.0024287485834314027, "phrase": "general_interesting_framework"}, {"score": 0.0023745087648471613, "phrase": "gap_problem"}, {"score": 0.0022696277881969896, "phrase": "best_combinatorial_approximation"}, {"score": 0.0021049977753042253, "phrase": "better_running_time"}], "paper_keywords": ["Generalized Assignment Problem", " local ratio", " approximation algorithms"], "paper_abstract": "We present a simple family of algorithms for solving the Generalized Assignment Problem (GAP). Our technique is based on a novel combinatorial translation of any algorithm for the knapsack problem into an approximation algorithm for GAP If the approximation ratio of the knapsack algorithm is alpha and its running time is O(f (N)), our algorithm guarantees a (1 + alpha)-approximation ratio, and it runs in O(M . f (N) + M . N), where N is the number of items and M is the number of bins. Not only does our technique comprise a general interesting framework for the GAP problem; it also matches the best combinatorial approximation for this problem, with a much simpler algorithm and a better running time. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "An efficient approximation for the Generalized Assignment Problem", "paper_id": "WOS:000240572600006"}