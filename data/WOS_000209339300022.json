{"auto_keywords": [{"score": 0.03700385809508468, "phrase": "program_state"}, {"score": 0.02621656341205468, "phrase": "binary_translation"}, {"score": 0.00481495049065317, "phrase": "heterogeneous-isa_chip_multiprocessor"}, {"score": 0.004684157900507474, "phrase": "single-isa_heterogeneous_chip_multiprocessors"}, {"score": 0.004592905436175987, "phrase": "greater_performance"}, {"score": 0.004556901872357751, "phrase": "energy_efficiency"}, {"score": 0.004521179256835894, "phrase": "homogeneous_cmps"}, {"score": 0.004363846362238565, "phrase": "single_isa"}, {"score": 0.004312622975366672, "phrase": "important_opportunity"}, {"score": 0.004278807087784626, "phrase": "greater_heterogeneity"}, {"score": 0.0042119653427658025, "phrase": "full_advantage"}, {"score": 0.0041625173012740544, "phrase": "heterogeneous-isa_cmp"}, {"score": 0.003970439654470374, "phrase": "heterogeneous_cores"}, {"score": 0.003877737556673229, "phrase": "program_phase_changes"}, {"score": 0.003832198214757852, "phrase": "external_conditions"}, {"score": 0.003626626504149897, "phrase": "heterogeneous-isa_cmps"}, {"score": 0.003445591238183763, "phrase": "architecture-specific_form"}, {"score": 0.0033917213078141373, "phrase": "state_transformation"}, {"score": 0.003286486670483032, "phrase": "migration_cost"}, {"score": 0.0030735451757603555, "phrase": "large_portions"}, {"score": 0.0027961342030212353, "phrase": "architecture-neutral_form"}, {"score": 0.002573965014439041, "phrase": "low_migration_cost"}, {"score": 0.0025537472239953807, "phrase": "minimal_sacrifice"}, {"score": 0.002533687835358909, "phrase": "non-migration_performance"}, {"score": 0.0024357240356443653, "phrase": "instantaneous_migration"}, {"score": 0.0023048904639724438, "phrase": "different_core"}, {"score": 0.0022509878391826867, "phrase": "short_time"}, {"score": 0.002224510044064184, "phrase": "function_call"}, {"score": 0.0021049977753042253, "phrase": "new_core"}], "paper_keywords": ["Design", " Performance", " Languages", " Heterogeneous CMP", " Thread migration"], "paper_abstract": "Prior research has shown that single-ISA heterogeneous chip multiprocessors have the potential for greater performance and energy efficiency than homogeneous CMPs. However, restricting the cores to a single ISA removes an important opportunity for greater heterogeneity. To take full advantage of a heterogeneous-ISA CMP, however, we must be able to migrate execution among heterogeneous cores in order to adapt to program phase changes and changing external conditions (e.g., system power state). This paper explores migration on heterogeneous-ISA CMPs. This is non-trivial because program state is kept in an architecture-specific form; therefore, state transformation is necessary for migration. To keep migration cost low, the amount of state that requires transformation must be minimized. This work identifies large portions of program state whose form is not critical for performance; the compiler is modified to produce programs that keep most of their state in an architecture-neutral form so that only a small number of data items must be repositioned and no pointers need to be changed. The result is low migration cost with minimal sacrifice of non-migration performance. Additionally, this work leverages binary translation to enable instantaneous migration. When migration is requested, the program is immediately migrated to a different core where binary translation runs for a short time until a function call is reached, at which point program state is transformed and execution continues natively on the new core. This system can tolerate migrations as often as every 100 ms and still retain 95% of the performance of a system that does not do, or support, migration.", "paper_title": "Execution Migration in a Heterogeneous-ISA Chip Multiprocessor", "paper_id": "WOS:000209339300022"}