{"auto_keywords": [{"score": 0.04838919478929019, "phrase": "dual-v-dd_buffer_insertion"}, {"score": 0.00481495049065317, "phrase": "power_reduction"}, {"score": 0.004686963264680882, "phrase": "first_in-depth_study"}, {"score": 0.004441059405327222, "phrase": "delay-optimal_single_v-dd_buffer_insertion"}, {"score": 0.0041891398413899435, "phrase": "delay_specification"}, {"score": 0.0040777192615062815, "phrase": "van_ginneken_algorithm"}, {"score": 0.003951453722517865, "phrase": "new_problem_formulation"}, {"score": 0.00384633057714983, "phrase": "quadratic_time"}, {"score": 0.0036443694410100507, "phrase": "pseudopolynomial_time"}, {"score": 0.003437486158494063, "phrase": "vertical_bar_b_vertical_bar"}, {"score": 0.003361069456060196, "phrase": "buffer_library"}, {"score": 0.003256922225995089, "phrase": "buffer_stations"}, {"score": 0.003085813569061001, "phrase": "possible_subtrees"}, {"score": 0.0029767499830258754, "phrase": "time_complexity"}, {"score": 0.002910545717767559, "phrase": "approximation_technique"}, {"score": 0.00277001889871322, "phrase": "predictive_min-delay"}, {"score": 0.0026720866990543744, "phrase": "related_work"}, {"score": 0.002543043781904587, "phrase": "run_time"}, {"score": 0.0024421008630165046, "phrase": "accuracy_loss"}, {"score": 0.0023346234464901978, "phrase": "linear_time_complexity"}, {"score": 0.002282667669149476, "phrase": "tree_size"}, {"score": 0.0021049977753042253, "phrase": "extended_van_ginneken_algorithm"}], "paper_keywords": ["buffer insertion", " delay", " dual-V-dd", " low power"], "paper_abstract": "This paper presents the first in-depth study on dual-V-dd buffer insertion for power minimization under delay constraint. Compared with delay-optimal single V-dd buffer insertion, the dual-V-dd buffer insertion reduces power by 16%. Such power reduction increases when the delay specification is relaxed. Whereas the van Ginneken algorithm can be extended to handle the new problem formulation optimally, its time complexity increases from quadratic time (O(vertical bar B vertical bar n(2))) to pseudopolynomial time (O(vertical bar B vertical bar n(3)c(max)(2)log(nc(max))), where vertical bar B vertical bar is the size of buffer library, n is the number of buffer stations, and c(max) is proportional to the number of all possible subtrees of the net. To improve the time complexity, we propose an approximation technique by sampling subsolutions (i.e., options) and apply predictive min-delay and prebuffer slack pruning rules from a related work. Experiments show that sampling is most effective to reduce run time, whereas the two pruning rules further improve efficiency and accuracy loss due to sampling. We show that our proposed algorithm has linear time complexity with respect to the tree size. It runs over 1000 times faster at a cost of less than 2% delay and power increase over the extended van Ginneken algorithm.", "paper_title": "Dual-V-dd buffer insertion for power reduction", "paper_id": "WOS:000258030600013"}