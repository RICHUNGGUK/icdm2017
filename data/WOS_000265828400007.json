{"auto_keywords": [{"score": 0.03757333677908554, "phrase": "sherbrooke"}, {"score": 0.00481495049065317, "phrase": "multivariate_polynomial"}, {"score": 0.004413846562278824, "phrase": "polynomial_constraints"}, {"score": 0.004342430078306461, "phrase": "geometric_design_tools"}, {"score": 0.004203030435498069, "phrase": "subdivision-based_solvers"}, {"score": 0.003811010743703935, "phrase": "broad_range"}, {"score": 0.0037087324991876727, "phrase": "binary_domain_subdivision"}, {"score": 0.0036091892088392775, "phrase": "projected_polyhedron_method"}, {"score": 0.0034180189629740426, "phrase": "prime_obstacle"}, {"score": 0.003362660648932247, "phrase": "subdivision_solvers"}, {"score": 0.003167217223469026, "phrase": "tensor_product"}, {"score": 0.002646267286675984, "phrase": "exponential_complexity"}, {"score": 0.0024653491388223546, "phrase": "underlying_structure"}, {"score": 0.0023602032679095955, "phrase": "expression_trees"}, {"score": 0.0021049977753042253, "phrase": "tensor_product_constraint_representation"}], "paper_keywords": ["Interval arithmetic", " multivariate polynomial constraint solver", " self-bisectors", " contact computation", " Hausdorff distance"], "paper_abstract": "In recent years, several quite successful attempts have been made to solve systems of polynomial constraints, using geometric design tools, exploiting the availability of subdivision-based solvers [7], [11], [12], [15]. This broad range of methods includes both binary domain subdivision as well as the projected polyhedron method of Sherbrooke and Patrikalakis [15]. A prime obstacle in using subdivision solvers is their scalability. When the given constraint is represented as a tensor product of all its independent variables, it grows exponentially in size as a function of the number of variables. In this work, we show that for many applications, especially geometric ones, the exponential complexity of the constraints can be reduced to a polynomial by representing the underlying structure of the problem in the form of expression trees that represent the constraints. We demonstrate the applicability and scalability of this representation and compare its performance to that of tensor product constraint representation through several examples.", "paper_title": "An Efficient Solution to Systems of Multivariate Polynomial Using Expression Trees", "paper_id": "WOS:000265828400007"}