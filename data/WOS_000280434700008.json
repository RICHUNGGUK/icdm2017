{"auto_keywords": [{"score": 0.04325124255431723, "phrase": "isb"}, {"score": 0.0047563776685277314, "phrase": "lwbtb"}, {"score": 0.004641351004344458, "phrase": "potential_performance"}, {"score": 0.00458488025289647, "phrase": "superscalar_processors"}, {"score": 0.004312622975366676, "phrase": "sufficient_instruction_bandwidth"}, {"score": 0.004234129588974058, "phrase": "front-end_units"}, {"score": 0.0039341294012600085, "phrase": "key_elements"}, {"score": 0.0035887342563437935, "phrase": "basic_block"}, {"score": 0.003459191419478298, "phrase": "split-line_instruction_problem"}, {"score": 0.003213920601037463, "phrase": "basic_blocks"}, {"score": 0.0031747618267940155, "phrase": "isb."}, {"score": 0.0030789331635764122, "phrase": "proposed_line-weighted_branch_target_buffer"}, {"score": 0.0029677378488677983, "phrase": "proposed_isb"}, {"score": 0.002913650880082273, "phrase": "upcoming_branch_information"}, {"score": 0.002860546817196148, "phrase": "current_cache_line"}, {"score": 0.0027069560455629917, "phrase": "next_basic_block"}, {"score": 0.0024389277933858054, "phrase": "proposed_isb._simulation_results"}, {"score": 0.0023798115577749225, "phrase": "cache_line_size"}, {"score": 0.0023079225317714815, "phrase": "good_chance"}, {"score": 0.002210903392596343, "phrase": "reassembled_cache_line"}, {"score": 0.0021705796895687864, "phrase": "fetch_efficiency"}, {"score": 0.0021049977753042253, "phrase": "fetch_capacity"}], "paper_keywords": ["trace cache", " instruction stream buffer", " ILP", " superscalar processor", " x86 architecture", " multiple instruction fetch"], "paper_abstract": "The potential performance of superscalar processors can be exploited only when processor is fed with sufficient instruction bandwidth. The front-end units, the Instruction Stream Buffer (ISB) and the fetcher, are the key elements for achieving this goal. Current ISBs could not support instruction streaming beyond a basic block. In x86 processors, the split-line instruction problem worsens this situation. In this paper, we proposed a basic blocks reassembling ISB. By cooperating with the proposed Line-Weighted Branch Target Buffer (LWBTB), the proposed ISB can predict upcoming branch information and reassemble current cache line together with the other cache line containing instructions for the next basic block. Therefore, the fetcher could fetch more instructions in a cycle with the assistance of the proposed ISB. Simulation results show that the cache line size over 64 bytes has a good chance to let two basic blocks present in a reassembled cache line and the fetch efficiency is about 90% as the fetch capacity is under 6.", "paper_title": "The Basic Block Reassembling Instruction Stream Buffer with LWBTB for X86 ISA", "paper_id": "WOS:000280434700008"}