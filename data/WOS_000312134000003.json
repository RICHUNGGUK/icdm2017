{"auto_keywords": [{"score": 0.035305993723685085, "phrase": "local_updates"}, {"score": 0.033872379767201054, "phrase": "navigation_mesh"}, {"score": 0.00481495049065317, "phrase": "dynamic_environments"}, {"score": 0.004145882022189891, "phrase": "city_environment"}, {"score": 0.004058180509184539, "phrase": "new_buildings"}, {"score": 0.0036990033106718183, "phrase": "small_obstacles"}, {"score": 0.003569451476205552, "phrase": "typical_day"}, {"score": 0.002881793492919646, "phrase": "incremental_methods"}, {"score": 0.0028409576481842457, "phrase": "voronoi_diagrams"}, {"score": 0.0027807832748641195, "phrase": "main_novelty"}, {"score": 0.002445514186654732, "phrase": "dynamic_polygonal_obstacles"}, {"score": 0.0022608057001451414, "phrase": "real-time_updates"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["navigation mesh", " dynamic environments", " medial axis", " Voronoi diagram"], "paper_abstract": "Games and simulations frequently model scenarios where obstacles move, appear, and disappear in an environment. A city environment changes as new buildings and roads are constructed, and routes can become partially blocked by small obstacles many times in a typical day. This paper studies the effect of using local updates to repair only the affected regions of a navigation mesh in response to a change in the environment. The techniques are inspired by incremental methods for Voronoi diagrams. The main novelty of this paper is that we show how to maintain a 2D or 2.5D navigation mesh in an environment that contains dynamic polygonal obstacles. Experiments show that local updates are fast enough to permit real-time updates of the navigation mesh. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "A navigation mesh for dynamic environments", "paper_id": "WOS:000312134000003"}