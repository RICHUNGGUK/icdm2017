{"auto_keywords": [{"score": 0.04799155246762867, "phrase": "large_number"}, {"score": 0.012862942935608556, "phrase": "common_value"}, {"score": 0.011084937079721746, "phrase": "message_exchange"}, {"score": 0.00481495049065317, "phrase": "byzantine_agreement_problem"}, {"score": 0.004718431349852634, "phrase": "important_research_topic"}, {"score": 0.0046803650677267146, "phrase": "distributed_computing_systems"}, {"score": 0.004440277230269978, "phrase": "fault-tolerance_scheme"}, {"score": 0.004386637056030611, "phrase": "distributed_computing_system"}, {"score": 0.004161553532799662, "phrase": "byzantine_agreement"}, {"score": 0.00412818023556064, "phrase": "ba"}, {"score": 0.004012500850311087, "phrase": "fault-free_processors"}, {"score": 0.0037150687722055727, "phrase": "significant_studies"}, {"score": 0.0036701570847323447, "phrase": "agreement_problem"}, {"score": 0.003640516896245813, "phrase": "distributed_systems"}, {"score": 0.003567455727660992, "phrase": "traditional_ba_protocols"}, {"score": 0.0033163269450817716, "phrase": "fault-free_processor"}, {"score": 0.0031459887611258765, "phrase": "messages_results"}, {"score": 0.003107935254560724, "phrase": "large_protocol_overhead"}, {"score": 0.0029602552900111407, "phrase": "network_environments"}, {"score": 0.0027741761880779535, "phrase": "efficient_protocol"}, {"score": 0.002599763359352916, "phrase": "received_values"}, {"score": 0.0025578967205807843, "phrase": "reliable_processors"}, {"score": 0.0024761702541879213, "phrase": "unreliable_processors"}, {"score": 0.0022923586577645143, "phrase": "proposed_protocol"}, {"score": 0.002255431275670053, "phrase": "minimum_number"}, {"score": 0.0022011501095573747, "phrase": "maximum_number"}, {"score": 0.00218334762335187, "phrase": "faulty_components"}, {"score": 0.0021569129153653777, "phrase": "distributed_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Byzantine agreement problem", " Fault tolerance", " Distributed system"], "paper_abstract": "Reliability is an important research topic in distributed computing systems consisting of a large number of processors. To achieve reliability, the fault-tolerance scheme of the distributed computing system must be revised. This kind of problem is known as a Byzantine agreement (BA) problem. It requires all fault-free processors to agree on a common value, even if some components are corrupt. Consequently, there have been significant studies of this agreement problem in distributed systems. However, the traditional BA protocols focus on running [(n - 1)/3 + 1 rounds of message exchange continuously to make each fault-free processor reach an agreement. In other words, since having a large number of messages results in a large protocol overhead, those protocols are inefficient and unreasonable, especially for some network environments which have large number of processors. In this study, we propose a novel and efficient protocol to reduce the number of messages. Our protocol can collect, compare and replace the received values to find the reliable processors and replace the values sent by the unreliable processors. Subsequently, each processor can agree on a common value through three rounds of message exchange. Furthermore, the proposed protocol can use the minimum number of messages to tolerate the maximum number of faulty components in a distributed system. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "A new solution for the Byzantine agreement problem", "paper_id": "WOS:000294085700001"}