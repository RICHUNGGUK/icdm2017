{"auto_keywords": [{"score": 0.03769716586279515, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "orientation_algorithms"}, {"score": 0.004687305496643216, "phrase": "maximum_outdegree"}, {"score": 0.004295269532032448, "phrase": "weighted_graph"}, {"score": 0.00418134346679498, "phrase": "maximum_weighted_outdegree"}, {"score": 0.003805788648230075, "phrase": "guard_arrangement"}, {"score": 0.0033268412940032103, "phrase": "optimal_orientation_algorithms"}, {"score": 0.003238517900104576, "phrase": "polynomial_time"}, {"score": 0.0029873281676201565, "phrase": "unweighted_graph"}, {"score": 0.0028498718992429825, "phrase": "input_graph"}, {"score": 0.002251637552201872, "phrase": "minimum_weights"}, {"score": 0.0021049977753042253, "phrase": "small_positive_real_number"}], "paper_keywords": ["graph orientation", " min-max optimization", " NP-hardness", " approximation algorithms"], "paper_abstract": "This paper studies the problem of orienting all edges of a weighted graph such that the maximum weighted outdegree of vertices is minimized. This problem, which has applications in the guard arrangement for example, can be shown to be NP-hard generally. In this paper we first give optimal orientation algorithms which run in polynomial time for the following special cases: (i) the input is an unweighted graph, and (ii) the input graph is a tree. Then, by using those algorithms as sub-procedures, we provide a simple, combinatorial, min {w(max)/w(min) (2 - epsilon)}-approximation algorithm for the general case, where W-max and w(min) are the maximum and the minimum weights of edges, respectively, and epsilon is some small positive real number that depends on the input.", "paper_title": "Graph orientation algorithms to minimize the maximum outdegree", "paper_id": "WOS:000250926300002"}