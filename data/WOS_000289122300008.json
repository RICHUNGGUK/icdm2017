{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallelization_in_transactional_databases"}, {"score": 0.0046676969718111765, "phrase": "important_and_well-researched_problems"}, {"score": 0.0044968982227349625, "phrase": "association_rules"}, {"score": 0.004441359373498799, "phrase": "transactional_databases"}, {"score": 0.004096635798793164, "phrase": "main_operation"}, {"score": 0.00402094658848301, "phrase": "discovery_process"}, {"score": 0.0039221899471111, "phrase": "occurrence_frequency"}, {"score": 0.003849711329589429, "phrase": "interesting_set"}, {"score": 0.0037087324991876727, "phrase": "association_rule"}, {"score": 0.0031549249117721946, "phrase": "large_data_warehouses"}, {"score": 0.0030582832134483685, "phrase": "large_number"}, {"score": 0.0029645930408561086, "phrase": "exponentially_large_space"}, {"score": 0.0029279232349513724, "phrase": "candidate_itemsets"}, {"score": 0.0027684263985790526, "phrase": "potential_solution"}, {"score": 0.0027172101552870973, "phrase": "computation_complexity"}, {"score": 0.002633941112839883, "phrase": "mining_algorithm"}, {"score": 0.0024904187737391807, "phrase": "novel_sequential_mining_algorithm"}, {"score": 0.002429161048032688, "phrase": "frequent_itemsets"}, {"score": 0.0023546984428119864, "phrase": "parallelized_solutions"}, {"score": 0.002212535878761148, "phrase": "important_factors"}, {"score": 0.0021580985506699105, "phrase": "time_complexity"}, {"score": 0.002131383155056741, "phrase": "communication_rate"}, {"score": 0.0021049977753042253, "phrase": "load_balancing"}], "paper_keywords": ["parallel processing", " data mining", " frequent itemsets", " association rules", " load balancing"], "paper_abstract": "One of the important and well-researched problems in data mining is mining association rules from transactional databases, where each transaction consists of a set of items. The main operation in this discovery process is computing the occurrence frequency of the interesting set of items. i.e., Association Rule mining algorithms search for the set of all subsets of items that frequently occur in many database transactions. In practice, we are usually faced with large data warehouses, which contain a large number of transactions and an exponentially large space of candidate itemsets, which have to be verified. A potential solution to the computation complexity is to parallelize the mining algorithm. In this paper, four parallel versions of a novel sequential mining algorithm for discovery of frequent itemsets are proposed. The parallelized solutions are compared analytically and experimentally, by considering some important factors, such as time complexity, communication rate, load balancing, etc.", "paper_title": "An Efficient Frequent Pattern Mining Method and its Parallelization in Transactional Databases", "paper_id": "WOS:000289122300008"}