{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "programmable_network_interfaces"}, {"score": 0.0047026237903774895, "phrase": "network_servers"}, {"score": 0.004592905436175987, "phrase": "flexible_interface"}, {"score": 0.004521179256835894, "phrase": "high-bandwidth_ethernet_links"}, {"score": 0.004346704947011699, "phrase": "critical_software"}, {"score": 0.004278807087784626, "phrase": "architectural_challenges"}, {"score": 0.0041136473765874815, "phrase": "architectural_and_software_suport"}, {"score": 0.0037133478610481994, "phrase": "self-securing_gigabit_ethernet_controller"}, {"score": 0.0035141291835319682, "phrase": "network_data_frames"}, {"score": 0.003432044343307207, "phrase": "raw_performance"}, {"score": 0.0033255627814855163, "phrase": "highbitrate_frame_data_transfer"}, {"score": 0.00327356326590461, "phrase": "low-latency_metadata_access"}, {"score": 0.0031970796597571367, "phrase": "intensive_computational_capacity"}, {"score": 0.00281826552772148, "phrase": "peripheral_device"}, {"score": 0.0026045914281028473, "phrase": "parallel_lightweight_processing_cores"}, {"score": 0.0025436978068459565, "phrase": "explicitly_-partitioned_memory_system"}, {"score": 0.0024842242921857705, "phrase": "dedicated_hardware_assists"}, {"score": 0.0023694065215394593, "phrase": "network_interface"}, {"score": 0.0021049977753042253, "phrase": "task-level_concurrency"}], "paper_keywords": [""], "paper_abstract": "Programmable network interfaces can provide network servers with a flexible interface to high-bandwidth Ethernet links, but they face critical software and architectural challenges. This article explores architectural and software suport for an programmable 10 Gigabit Ethernet controller. The design is then extended to support a self-securing Gigabit Ethernet controller that performs intrusion detection on all network data frames. Both raw performance and security require highbitrate frame data transfer, low-latency metadata access, and intensive computational capacity while still operating under the area, cost, and power bud et of a peripheral device. These goals are achieved using a combination of parallel lightweight processing cores, an explicitly -partitioned memory system, and dedicated hardware assists. The firmware on the network interface is designed to utilize these resources efficiently by exploiting frame-level, flow-level, and task-level concurrency.", "paper_title": "Parallel programmable ethernet controllers: Performance and security", "paper_id": "WOS:000248235200004"}