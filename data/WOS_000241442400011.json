{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "service_choreographies"}, {"score": 0.004706699397060569, "phrase": "service_choreography"}, {"score": 0.003923532450854754, "phrase": "ideal_observer"}, {"score": 0.003448705829033573, "phrase": "starting_point"}, {"score": 0.003371066990851953, "phrase": "service-oriented_systems"}, {"score": 0.003245520963944678, "phrase": "global_picture"}, {"score": 0.0031724417545242315, "phrase": "system's_behavior"}, {"score": 0.0031010029460927834, "phrase": "previous_work"}, {"score": 0.0028525124381208705, "phrase": "early_phases"}, {"score": 0.002788257824525862, "phrase": "development_lifecycle"}, {"score": 0.0026640466056415298, "phrase": "execution_semantics"}, {"score": 0.002413531395475291, "phrase": "formal_semantics"}, {"score": 0.002203200914130907, "phrase": "exp_riences"}, {"score": 0.0021049977753042253, "phrase": "unreachable_interactions"}], "paper_keywords": [""], "paper_abstract": "A service choreography is a model of interactions in which a set of services engage to achieve a goal, seen from the perspective of an ideal observer that records all messages exchanged between these services. Choreographies have been put forward as a starting point for building service-oriented systems since they provide a global picture of the system's behavior. In previous work we presented a language for service choreography modeling targeting the early phases of the development lifecycle. This paper provides an execution semantics for this language in terms of a mapping to pi-calculus. This formal semantics provides a basis for analyzing choreographies. The paper reports on exp riences using the semantics to detect unreachable interactions.", "paper_title": "Execution semantics for service choreographies", "paper_id": "WOS:000241442400011"}