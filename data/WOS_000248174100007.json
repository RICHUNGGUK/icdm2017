{"auto_keywords": [{"score": 0.0490583388803429, "phrase": "specification_constructor"}, {"score": 0.0046118021635786315, "phrase": "high_level"}, {"score": 0.00441718685609235, "phrase": "implementation_mechanism"}, {"score": 0.004322967486451877, "phrase": "low_level"}, {"score": 0.004052148727852149, "phrase": "high_levels"}, {"score": 0.0032190636347671675, "phrase": "operation_proof_obligation"}, {"score": 0.0031730701021262155, "phrase": "simple_examples"}, {"score": 0.0030609320300175953, "phrase": "requirements_engineering_and_model_evolution"}, {"score": 0.0028279422436488116, "phrase": "refinement_notions"}, {"score": 0.002448704249007665, "phrase": "simple_digital_redesign_control_theory_problem"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["refinement", " retrenchment", " simulation", " requirements engineering", " model evolution", " digital redesign", " mondex purse"], "paper_abstract": "Refinement is reviewed, highlighting in particular the distinction between its use as a specification constructor at a high level, and its use as an implementation mechanism at a low level. Some of its shortcomings as a specification constructor at high levels of abstraction are pointed out, and these are used to motivate the adoption of retrenchment for certain high level development steps. Basic properties of retrenchment are described, including a justification of the operation proof obligation, simple examples, its use in requirements engineering and model evolution, and simulation properties. The interaction of retrenchment with refinement notions of correctness is overviewed, as is a range of other technical issues. Two case study scenarios are presented. One is a simple digital redesign control theory problem, and the other is an overview of the application of retrenchment to the Mondex Purse development. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Engineering and theoretical underpinnings of retrenchment", "paper_id": "WOS:000248174100007"}