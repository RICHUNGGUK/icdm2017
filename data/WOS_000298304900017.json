{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "linux_package_dependencies"}, {"score": 0.015541495633518422, "phrase": "linux_operating_system_release"}, {"score": 0.009502460721973348, "phrase": "distribution_editors"}, {"score": 0.009180904407140842, "phrase": "server_side"}, {"score": 0.008029717446225574, "phrase": "package_dependencies"}, {"score": 0.004669180816745142, "phrase": "large_number"}, {"score": 0.004633429997452688, "phrase": "software_packages"}, {"score": 0.004580314008293946, "phrase": "complex_dependencies"}, {"score": 0.004493130934067195, "phrase": "dependency_relationship"}, {"score": 0.004112894218792621, "phrase": "dependency_management"}, {"score": 0.004065721092116729, "phrase": "widespread_adoption"}, {"score": 0.004034572092608487, "phrase": "linux_operating_systems"}, {"score": 0.003957735532719663, "phrase": "information_technology_society"}, {"score": 0.003735862292632131, "phrase": "complexity_dependencies"}, {"score": 0.0037072310568610723, "phrase": "linux_packages"}, {"score": 0.003622642432563435, "phrase": "huge_number"}, {"score": 0.0035536228914319354, "phrase": "consistent_and_effective_way"}, {"score": 0.0035264232291217835, "phrase": "linux"}, {"score": 0.0030583717270715556, "phrase": "client_side"}, {"score": 0.00230003335593664, "phrase": "effective_and_automatic_way"}, {"score": 0.0021049977753042253, "phrase": "linux_software_distributions"}], "paper_keywords": ["Linux package dependency", " conflict", " software distribution", " integrity of dependencies"], "paper_abstract": "A Linux operating system release is composed of a large number of software packages, with complex dependencies. The management of dependency relationship is the foundation of building and maintaining a Linux operating system release, and checking the integrity of the dependencies is the key of the dependency management. The widespread adoption of Linux operating systems in many areas of the information technology society has drawn the attention on the issues regarding how to check the integrity of complexity dependencies of Linux packages and how to manage a huge number of packages in a consistent and effective way. Linux distributions have already provided the tools for managing the tasks of installing, removing and upgrading the packages they were made of. A number of tools have been provided to handle these tasks on the client side. However, there is a lack of tools that could help the distribution editors to maintain the integrity of Linux package dependencies on the server side. In this paper we present a method based on conflict to check the integrity of Linux package dependencies. From the perspective of conflict, this method achieves the goal to check the integrity of package dependencies on the server side by removing the conflict associating with the packages. Our contribution provides an effective and automatic way to support distribution editors in handling those issues. Experiments using this method are very successful in checking the integrity of package dependencies in Linux software distributions.", "paper_title": "Conflict-Based Checking the Integrity of Linux Package Dependencies", "paper_id": "WOS:000298304900017"}