{"auto_keywords": [{"score": 0.037253245357488925, "phrase": "federation_partners"}, {"score": 0.015569319767201488, "phrase": "future_internet"}, {"score": 0.01125573368930464, "phrase": "administrative_domain"}, {"score": 0.009397577930529808, "phrase": "management_algorithms"}, {"score": 0.00481495049065317, "phrase": "federated_management"}, {"score": 0.004556901872357751, "phrase": "stringent_quality_requirements"}, {"score": 0.004469151810727749, "phrase": "federated_solution"}, {"score": 0.004215868268050613, "phrase": "service_information"}, {"score": 0.004148084083511326, "phrase": "federated_nodes"}, {"score": 0.004028796143006953, "phrase": "management_tasks"}, {"score": 0.003912925129722523, "phrase": "context_exchange_process"}, {"score": 0.0038624981944755813, "phrase": "context_communication"}, {"score": 0.0038003739322536156, "phrase": "scalable_approach"}, {"score": 0.0036790959367543337, "phrase": "local_context_updates"}, {"score": 0.003619910789366738, "phrase": "high_level"}, {"score": 0.0034704317267505035, "phrase": "context_exchange"}, {"score": 0.00325238798404366, "phrase": "trust_relationships"}, {"score": 0.0029602552900111407, "phrase": "rdf_and_sparql_rules"}, {"score": 0.0028843751686557736, "phrase": "contextual_requirements"}, {"score": 0.002828740624702789, "phrase": "remote_context"}, {"score": 0.0026768530320943063, "phrase": "owl-based_approach"}, {"score": 0.002608218347502229, "phrase": "complex_relationships"}, {"score": 0.002549604441640963, "phrase": "intra-domain_context_exchange_process"}, {"score": 0.0023054252458274823, "phrase": "timely_and_scalable_manner"}, {"score": 0.0022029383047842627, "phrase": "required_bandwidth"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": [""], "paper_abstract": "In the Future Internet, federations are set up to cope with the stringent quality requirements of services. While a federated solution offers advantages in terms of scalability, it complicates the exchange of context (e.g. Quality of Service information of services) between federated nodes, as each node requires context to perform management tasks. In this article, we propose a context exchange process that automates the context communication between nodes. A scalable approach is proposed that is able to quickly react to local context updates, while maintaining a high level of expressivity to define relationships between federation partners. We distinguish between the context exchange inside an administrative domain, which focuses on scalability, and the context exchange between federation partners, which emphasizes the trust relationships between partners. In both cases, the process allows defining which context needs to be exchanged when and from where. Inside an administrative domain, a combination of RDF and SPARQL rules are used. This allows modeling the contextual requirements of management algorithms and automatically requesting remote context, only when it is necessary for the management algorithms to proceed. Between domains, an OWL-based approach is used, which allows describing the complex relationships between federation partners. Triggered by the intra-domain context exchange process, the contextual capabilities are communicated and refined through policies. Both type of processes are evaluated. The results show that they can infer which context is needed in a timely and scalable manner. As such, it outperforms approaches where context is broadcast both in required bandwidth and end-to-end delay. Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "A semantic context exchange process for the federated management of the future internet", "paper_id": "WOS:000329440200001"}