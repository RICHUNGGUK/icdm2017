{"auto_keywords": [{"score": 0.004652016085325825, "phrase": "query_processors"}, {"score": 0.00447251540886613, "phrase": "relational_queries"}, {"score": 0.004216112320418982, "phrase": "peer_or_link_failures"}, {"score": 0.004013662619667083, "phrase": "real-world_applications"}, {"score": 0.003916098498242888, "phrase": "typical_failures"}, {"score": 0.003802135020791801, "phrase": "unpredictable_impact"}, {"score": 0.003601715012418258, "phrase": "intermediate_results"}, {"score": 0.003479692058963528, "phrase": "distributed_hash_join"}, {"score": 0.0031845067058084583, "phrase": "operator_states"}, {"score": 0.0029722900280316216, "phrase": "-query_replication_scheme"}, {"score": 0.0027878797103973313, "phrase": "processing_peer"}, {"score": 0.002706659627293686, "phrase": "network_overhead"}, {"score": 0.00266693888510356, "phrase": "in-query_replication"}, {"score": 0.0025892330566358503, "phrase": "network_size"}, {"score": 0.002428530921948425, "phrase": "extensive_experimental_evaluation"}, {"score": 0.002346160830406661, "phrase": "planetlab_deployment"}, {"score": 0.0022223176391038785, "phrase": "in-query_replication_scheme"}, {"score": 0.002146926767291475, "phrase": "routing_extension"}, {"score": 0.0021049977753042253, "phrase": "varying_reliability"}], "paper_keywords": ["Peer-to-peer", " Distributed query processing", " Fault-tolerant operators", " Distributed Hash Table (DHT)"], "paper_abstract": "Recently, a number of query processors has been proposed for the evaluation of relational queries in structured P2P systems. However, as these approaches do not consider peer or link failures, they cannot be deployed without extensions for real-world applications. We show that typical failures in structured P2P systems can have an unpredictable impact on the correctness of the result. In particular stateful operators that store intermediate results on peers, e.g., the distributed hash join, must protect such results against failures. Although many replication schemes for P2P systems exist, they cannot replicate operator states while the query is processed. In this paper we propose an in-query replication scheme which replicates the state of an operator among the neighbors of the processing peer. Our analytical evaluation shows that the network overhead of the in-query replication is in O(1) regarding network size, i.e., our scheme is scalable. We have carried out an extensive experimental evaluation using simulations as well as a PlanetLab deployment. It confirms the effectiveness and the efficiency of the in-query replication scheme and shows the effectiveness of the routing extension in networks of varying reliability.", "paper_title": "Fault-tolerant query processing in structured P2P-systems", "paper_id": "WOS:000279079700002"}