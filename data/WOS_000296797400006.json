{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_implementation_of_particle_filtering"}, {"score": 0.004653339900995785, "phrase": "waveform-agile"}, {"score": 0.004558977045730675, "phrase": "sequential_monte_carlo_particle_filters"}, {"score": 0.004316552692395911, "phrase": "nonlinear_non-gaussian_dynamic_system_parameters"}, {"score": 0.003688773272422118, "phrase": "existing_parallel_pf_algorithms"}, {"score": 0.0035648266669315943, "phrase": "new_approach"}, {"score": 0.0034924598001567944, "phrase": "parallel_pfs"}, {"score": 0.0034450303951025704, "phrase": "independent_metropolis-hastings"}, {"score": 0.003306559295382181, "phrase": "resampling_algorithms"}, {"score": 0.003239418275717787, "phrase": "root_mean-squared_estimation_error"}, {"score": 0.0030460403366412126, "phrase": "new_ppf-imh_algorithm"}, {"score": 0.002825251837733693, "phrase": "one-dimensional_problem"}, {"score": 0.0027116246112603875, "phrase": "ppf-imh_architecture"}, {"score": 0.0024138345020219333, "phrase": "waveform-agile_tracking_techniques"}, {"score": 0.002364777610365689, "phrase": "ppf-imh_algorithm"}, {"score": 0.002285216591220303, "phrase": "significant_performance_improvement"}], "paper_keywords": ["Particle filter", " Waveform-agile sensing", " Parallel architecture", " Field programmable gate array", " Target tracking"], "paper_abstract": "Sequential Monte Carlo particle filters (PFs) are useful for estimating nonlinear non-Gaussian dynamic system parameters. As these algorithms are recursive, their real-time implementation can be computationally complex. In this paper, we analyze the bottlenecks in existing parallel PF algorithms, and propose a new approach that integrates parallel PFs with independent Metropolis-Hastings (PPF-IMH) resampling algorithms to improve root mean-squared estimation error (RMSE) performance. We implement the new PPF-IMH algorithm on a Xilinx Virtex-5 field programmable gate array (FPGA) platform. For a one-dimensional problem with 1,000 particles, the PPF-IMH architecture with four processing elements uses less than 5% of a Virtex-5 FPGA's resource and takes 5.85 mu s for one iteration. We also incorporate waveform-agile tracking techniques into the PPF-IMH algorithm. We demonstrate a significant performance improvement when the waveform is adaptively designed at each time step with 6.84 mu s FPGA processing time per iteration.", "paper_title": "Algorithm and Parallel Implementation of Particle Filtering and its Use in Waveform-Agile Sensing", "paper_id": "WOS:000296797400006"}