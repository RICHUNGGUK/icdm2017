{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hardware-supported_minimal_tcb_code_execution"}, {"score": 0.00443308765153716, "phrase": "newly_available_cpu-based_security_technology"}, {"score": 0.003956784357357341, "phrase": "security-sensitive_applications"}, {"score": 0.003680587852807675, "phrase": "new_technology"}, {"score": 0.003459191419478298, "phrase": "right_direction"}, {"score": 0.0033883824438527316, "phrase": "significant_performance_issues"}, {"score": 0.0031193028729331667, "phrase": "existing_processor_technology"}, {"score": 0.002670884656785558, "phrase": "application_developers"}, {"score": 0.0022168460543913787, "phrase": "numerous_vulnerabilities"}, {"score": 0.0021490449563443025, "phrase": "underlying_layers"}, {"score": 0.0021049977753042253, "phrase": "legacy_code"}], "paper_keywords": ["measurement", " design", " security", " trusted computing", " late launch", " secure execution"], "paper_abstract": "We explore the extent to which newly available CPU-based security technology can reduce the Trusted Computing Base (TCB) for security-sensitive applications. We find that although this new technology represents a step in the right direction, significant performance issues remain. We offer several suggestions that leverage existing processor technology, retain security, and improve performance. Implementing these recommendations will finally allow application developers to focus exclusively on the security of their own code, enabling it to execute in isolation from the numerous vulnerabilities in the underlying layers of legacy code.", "paper_title": "How low can you go? Recommendations for hardware-supported minimal TCB code execution", "paper_id": "WOS:000256501300004"}