{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "set_l"}, {"score": 0.004435885269134359, "phrase": "n_different_words"}, {"score": 0.0038608730929994696, "phrase": "prior_studies"}, {"score": 0.0036707250689857348, "phrase": "recursion_theory"}, {"score": 0.0036246643358397272, "phrase": "complexity_theory"}, {"score": 0.0035120164504478437, "phrase": "finite_automata"}, {"score": 0.0034461093496505127, "phrase": "present_work"}, {"score": 0.003235193484261443, "phrase": "deterministic_pushdown_automata"}, {"score": 0.003095257144856771, "phrase": "input_words"}, {"score": 0.002887450071878095, "phrase": "deterministic_context-free_language_l"}, {"score": 0.002285335999629823, "phrase": "eli_shamir"}, {"score": 0.0021049977753042253, "phrase": "language_l"}], "paper_keywords": ["frequency computation", " deterministic pushdown automata", " context-free sets", " regular sets"], "paper_abstract": "A set L is (m, n)-computable iff there is a mechanism which on input of n different words produces n conjectures whether these words are in L, respectively, such that at least m of these conjectures are right. Prior studies dealt with (m, n)-computable sets in the contexts of recursion theory, complexity theory and the theory of finite automata. The present work aims to do this with respect to computations by deterministic pushdown automata (using one common stack while processing all input words in parallel). We prove the existence of a deterministic context-free language L which is recognised by an (1, 1)-DPDA but fails to be recognised by any (m, n)-DPDA, where n >= 2 and m >= n/2+ 1. This answers a question posed by Eli Shamir at LATA 2013. Furthermore, it is shown that there is a language L such that, for all m, n with m <= n/2, L can be recognised by an (m, n)-DPDA but, for all m, n with 1 <= m <= n, L cannot be recognised by (m, n)-DFA.", "paper_title": "Deterministic Frequency Pushdown Automata", "paper_id": "WOS:000368458100003"}