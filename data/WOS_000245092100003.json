{"auto_keywords": [{"score": 0.03600243304416855, "phrase": "energy_efficiency"}, {"score": 0.00481495049065317, "phrase": "embedded_computing"}, {"score": 0.004215057618794356, "phrase": "parallel_programming_models"}, {"score": 0.004041546659145336, "phrase": "hardware_capabilities"}, {"score": 0.003821215658570578, "phrase": "ambient_intelligence_applications"}, {"score": 0.003689628075766217, "phrase": "abstract_programming_models"}, {"score": 0.0036382660173943393, "phrase": "tightly_power-constrained_hardware_architectures"}, {"score": 0.003162252895465901, "phrase": "comparative_analysis"}, {"score": 0.0030319482153908037, "phrase": "programming_models"}, {"score": 0.002989714021608139, "phrase": "single-chip_multiprocessor_platforms"}, {"score": 0.0028068030356445894, "phrase": "hardware-software_viewpoint"}, {"score": 0.0027100527874262446, "phrase": "hardware_architectures"}, {"score": 0.0026722904884984348, "phrase": "software_libraries"}, {"score": 0.0026166287606163145, "phrase": "programming_model"}, {"score": 0.002544207840990836, "phrase": "representative_application_kernels"}, {"score": 0.0024912073108138613, "phrase": "multimedia_domain"}, {"score": 0.002422249273477746, "phrase": "application-level_parameters"}], "paper_keywords": ["MPSoCs", " embedded multimedia", " programming models", " task-level parallelism", " energy efficiency", " low power"], "paper_abstract": "In today's multiprocessor SoCs (MPSoCs), parallel programming models are needed to fully exploit hardware capabilities and to achieve the 100 Gops/W energy efficiency target required for Ambient Intelligence Applications. However, mapping abstract programming models onto tightly power-constrained hardware architectures imposes overheads which might seriously compromise performance and energy efficiency. The objective of this work is to perform a comparative analysis of message passing versus shared memory as programming models for single-chip multiprocessor platforms. Our analysis is carried out from a hardware-software viewpoint: We carefully tune hardware architectures and software libraries for each programming model. We analyze representative application kernels from the multimedia domain, and identify application-level parameters that heavily influence performance and energy efficiency. Then, we formulate guidelines for the selection of the most appropriate programming model and its architectural support.", "paper_title": "Energy-efficient multiprocessor systems-on-chip for embedded computing: Exploring programming models and their architectural support", "paper_id": "WOS:000245092100003"}