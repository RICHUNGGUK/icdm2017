{"auto_keywords": [{"score": 0.03169170094276944, "phrase": "safran"}, {"score": 0.00481495049065317, "phrase": "self-adaptive_fractal_components"}, {"score": 0.004659951478263083, "phrase": "application_developers"}, {"score": 0.00447316895126645, "phrase": "increasingly_variable_execution_contexts"}, {"score": 0.0035861227263414537, "phrase": "aspect-oriented_approach"}, {"score": 0.0034422330919613294, "phrase": "self-adaptive_applications"}, {"score": 0.00335867620389808, "phrase": "adaptation_code"}, {"score": 0.0028510114763213596, "phrase": "fractal_component_model"}, {"score": 0.0027141975147496264, "phrase": "adaptation_aspect"}, {"score": 0.002500571634075998, "phrase": "execution_context"}, {"score": 0.00241989408309933, "phrase": "base_program"}, {"score": 0.0022111720236287547, "phrase": "modular_development"}, {"score": 0.0021751997984619585, "phrase": "adaptation_policies"}, {"score": 0.0021049977753042253, "phrase": "running_applications"}], "paper_keywords": [""], "paper_abstract": "Nowadays, application developers have to deal with increasingly variable execution contexts, requiring the creation of applications able to adapt themselves autonomously to the evolutions of this context. In this paper, we show how an aspect-oriented approach enables the development of self-adaptive applications where the adaptation code is well modularized, both spatially and temporally. Concretely, we propose SAFRAN, an extension of the Fractal component model for the development of the adaptation aspect as reactive adaptation policies. These policies detect the evolutions of the execution context and adapt the base program by reconfiguring it. This way, SAFRAN allows the modular development of adaptation policies and their dynamic weaving into running applications.", "paper_title": "An aspect-oriented approach for developing self-adaptive fractal components", "paper_id": "WOS:000241358100006"}