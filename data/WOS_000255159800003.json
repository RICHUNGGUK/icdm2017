{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_engineering"}, {"score": 0.032338023891927234, "phrase": "software_process"}, {"score": 0.004568525347438891, "phrase": "software_measurement"}, {"score": 0.004460703838987562, "phrase": "five_key_conceptual_and_methodological_issues"}, {"score": 0.004355415885815204, "phrase": "measurement_theory"}, {"score": 0.004212157020917929, "phrase": "software_metrics"}, {"score": 0.00401560412621627, "phrase": "core_measures"}, {"score": 0.003791763445590174, "phrase": "special_concern"}, {"score": 0.0035462807506718578, "phrase": "developing_countries"}, {"score": 0.0034790978593553794, "phrase": "software_industry"}, {"score": 0.003332537728389913, "phrase": "institutional_support"}, {"score": 0.0032850648549389025, "phrase": "international_quality_standards"}, {"score": 0.002845883666777154, "phrase": "enhanced_awareness"}, {"score": 0.00276534038425712, "phrase": "business_processes"}, {"score": 0.002739001004969201, "phrase": "information_systems"}, {"score": 0.0025737890313763407, "phrase": "current_issues"}, {"score": 0.002549269480908849, "phrase": "foreseeable_trends"}, {"score": 0.0024771000236931836, "phrase": "literature_review"}, {"score": 0.0024301229420875155, "phrase": "major_academic_publications"}, {"score": 0.0023388183537341213, "phrase": "sensible_shift"}, {"score": 0.002316532084420729, "phrase": "measurement_interests"}, {"score": 0.002166349705365602, "phrase": "customary_focus"}, {"score": 0.002145703330831668, "phrase": "hard_issues"}, {"score": 0.0021252533072727707, "phrase": "algorithm_efficiency"}, {"score": 0.0021049977753042253, "phrase": "worker_productivity"}], "paper_keywords": ["software measurement", " software management", " software engineering", " measurement theory", " complexity", " interpretive data", " triangulation"], "paper_abstract": "Research on software measurement can be organized around five key conceptual and methodological issues: how to apply measurement theory to software, how to frame software metrics, how to develop metrics, how to collect core measures, and how to analyze measures. The subject is of special concern for the industry, which is interested in improving practices - mainly in developing countries, where the software industry represents an opportunity for growth and usually receives institutional support for matching international quality standards. Academics are also in need of understanding and developing more effective methods for managing the software process and assessing the success of products and services, as a result of an enhanced awareness about the emergency of aligning business processes and information systems. This paper unveils the fundamentals of measurement in software engineering and discusses current issues and foreseeable trends for the subject. A literature review was performed within major academic publications in the last decade, and findings suggest a sensible shift of measurement interests towards managing the software process as a whole - without losing from sight the customary focus on hard issues like algorithm efficiency and worker productivity.", "paper_title": "Measurement in software engineering: From the roadmap to the crossroads", "paper_id": "WOS:000255159800003"}