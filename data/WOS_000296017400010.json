{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "temporal_violations"}, {"score": 0.049483572884790016, "phrase": "concurrent_workflow_processes"}, {"score": 0.04182833290656608, "phrase": "temporal_violation"}, {"score": 0.011744319302224115, "phrase": "sprouting_graph"}, {"score": 0.011384911516801953, "phrase": "temporal_violation_paths"}, {"score": 0.004695900553353526, "phrase": "current_methods"}, {"score": 0.004579780586951551, "phrase": "concurrent_workflow_temporal_violations"}, {"score": 0.0038191874409949423, "phrase": "specific_solutions"}, {"score": 0.0033482708495261864, "phrase": "possible_solutions"}, {"score": 0.0028091907694771613, "phrase": "checking_point"}, {"score": 0.002493592357827492, "phrase": "real_business_scenario"}, {"score": 0.002327310963701377, "phrase": "temporal_constraints"}, {"score": 0.002298288831092204, "phrase": "multiple_concurrent_workflow_processes"}, {"score": 0.0021450029487459403, "phrase": "path_information"}, {"score": 0.0021049977753042253, "phrase": "workflow_processes"}], "paper_keywords": ["Dynamic checking and solution", " Petri nets (PNs)", " sprouting graph", " temporal constraint", " time workflow net (TWF-net)"], "paper_abstract": "Current methods that deal with concurrent workflow temporal violations only focus on checking whether there are any temporal violations. They are not able to point out the path where the temporal violation happens and thus cannot provide specific solutions. This paper presents an approach based on a sprouting graph to find out the temporal violation paths in concurrent workflow processes as well as possible solutions to resolve the temporal violations. First, we model concurrent workflow processes with time workflow net and a sprouting graph. Second, we update the sprouting graph at the checking point. Finally, we find out the temporal violation paths and provide solutions. We apply the approach in a real business scenario to illustrate its advantages: 1) It can dynamically check temporal constraints of multiple concurrent workflow processes with resource constraints; 2) it can give the path information in the workflow processes where the temporal violation happens; and 3) it can provide solution to the temporal violation based on the analysis.", "paper_title": "Dynamic Checking and Solution to Temporal Violations in Concurrent Workflow Processes", "paper_id": "WOS:000296017400010"}