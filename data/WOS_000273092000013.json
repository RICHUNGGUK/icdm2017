{"auto_keywords": [{"score": 0.03363896917055258, "phrase": "two-pattern_tests"}, {"score": 0.00481495049065317, "phrase": "pseudo-exhaustive_pattern_generators"}, {"score": 0.004760017604908536, "phrase": "built-in_self-test"}, {"score": 0.004705711969884148, "phrase": "bist"}, {"score": 0.0046253989970108985, "phrase": "high_fault_coverage"}, {"score": 0.0045726187330434025, "phrase": "detectable_combinational_faults"}, {"score": 0.004123781267600542, "phrase": "adjacent_k-bit_groups"}, {"score": 0.004007083686875716, "phrase": "recursive_pseudoexhaustive_generation"}, {"score": 0.0032399593341139394, "phrase": "cmos"}, {"score": 0.00307657476125683, "phrase": "delay_testing"}, {"score": 0.0029722900280316216, "phrase": "correct_circuit_operation"}, {"score": 0.002938317647182056, "phrase": "clock_speed"}, {"score": 0.002806256131739047, "phrase": "pseudoexhaustive_two-pattern_generator"}, {"score": 0.0023346234464901978, "phrase": "first_time"}, {"score": 0.002294686545883412, "phrase": "open_literature"}, {"score": 0.0022296340517805125, "phrase": "recursive_pseudoexhaustive_two-pattern_testing"}, {"score": 0.0021416404045850224, "phrase": "software-based_implementation"}, {"score": 0.0021049977753042253, "phrase": "hardware_overhead"}], "paper_keywords": ["Built-in self-test (BIST)", " pseudoexchaustive two-pattern testing", " test pattern generation"], "paper_abstract": "Pseudo-exhaustive pattern generators for built-in self-test (BIST) provide high fault coverage of detectable combinational faults with much fewer test vectors than exhaustive generation. In (n, k)-adjacent bit pseudo-exhaustive test sets, all 2(k) binary combinations appear to all adjacent k-bit groups of inputs. With recursive pseudoexhaustive generation, all (n, k)-adjacent bit pseudoexhaustive tests are generated for k <= n and more than one modules can be pseudo-exhaustively tested in parallel. In order to detect sequential (e.g., stuck-open) faults that occur into current CMOS circuits, two-pattern tests are exercised. Also, delay testing, commonly used to assure correct circuit operation at clock speed requires two-pattern tests. In this paper a pseudoexhaustive two-pattern generator is presented, that recursively generates all two-pattern (n, k)-adjacent bit pseudoexhaustive tests for k <= n all. To the best of our knowledge, this is the first time in the open literature that the subject of recursive pseudoexhaustive two-pattern testing is being dealt with. A software-based implementation with no hardware overhead is also presented.", "paper_title": "Recursive Pseudo-Exhaustive Two-Pattern Generation", "paper_id": "WOS:000273092000013"}