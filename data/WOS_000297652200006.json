{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "emerging_parallel_architectures"}, {"score": 0.004721893473387288, "phrase": "image_texture"}, {"score": 0.004118751115632515, "phrase": "novel_implementations"}, {"score": 0.004065474891313382, "phrase": "textural-feature_algorithms"}, {"score": 0.003834099867584972, "phrase": "fast_color"}, {"score": 0.0036871853429163953, "phrase": "different_textural-feature_calculations"}, {"score": 0.003477264432055326, "phrase": "general_and_algorithm-specific_techniques"}, {"score": 0.0033222630615013737, "phrase": "computational_power"}, {"score": 0.003257960296952439, "phrase": "gpu._common_operations"}, {"score": 0.0031741489723036255, "phrase": "textural-feature_pipeline_range"}, {"score": 0.00307240091019322, "phrase": "recursive_procedures"}, {"score": 0.003012919635505122, "phrase": "arithmetically_intensive_transcendental_functions"}, {"score": 0.0026619761089539595, "phrase": "considerable_programming_effort"}, {"score": 0.002576603426735759, "phrase": "memory_hierarchy"}, {"score": 0.0023982749733789882, "phrase": "textural_features"}, {"score": 0.0023062508214156123, "phrase": "counterpart_implementations"}, {"score": 0.0022763657774198184, "phrase": "multicore_cpus"}, {"score": 0.002232261129770455, "phrase": "experimental_results"}, {"score": 0.0022033327475266496, "phrase": "gpu_results"}], "paper_keywords": [""], "paper_abstract": "While image texture is effective for use in pattern-recognition and image-analysis algorithms, textural features are time-consuming to calculate on standard CPUs. Therefore, we present novel implementations of textural-feature algorithms on graphics processors (GPUs), enabling fast color and texture analysis. Since different textural-feature calculations exhibit diverse characteristics, we focus on using general and algorithm-specific techniques to exploit the inherent parallelism and computational power of a GPU. Common operations required during the textural-feature pipeline range from streaming computations to recursive procedures, from arithmetically intensive transcendental functions to matrix operations. Some of these kernels are well-suited to GPUs, while others require considerable programming effort to fully exploit the memory hierarchy due to their memory-usage patterns. In this paper, different strategies for computing textural features on GPUs are compared with counterpart implementations on multicore CPUs, and experimental results show GPU results reaching a speedup of 500 times for certain operations.", "paper_title": "Color and texture analysis using emerging parallel architectures", "paper_id": "WOS:000297652200006"}