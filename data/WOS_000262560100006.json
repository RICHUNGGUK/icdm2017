{"auto_keywords": [{"score": 0.03129956484103008, "phrase": "fds"}, {"score": 0.00481495049065317, "phrase": "distributed_skyline_retrieval"}, {"score": 0.004764220976404241, "phrase": "low_bandwidth_consumption"}, {"score": 0.004664352260912174, "phrase": "skyline_computation"}, {"score": 0.004590820632326585, "phrase": "underlying_data"}, {"score": 0.004447201233380302, "phrase": "geographically_distant_servers"}, {"score": 0.004240116703465252, "phrase": "existing_solutions"}, {"score": 0.003813669883040509, "phrase": "distributed_systems"}, {"score": 0.003773449694108617, "phrase": "vertical_partitioning"}, {"score": 0.0037336520904376687, "phrase": "restricted_horizontal_partitioning"}, {"score": 0.003522124318486352, "phrase": "computing_and_communication_abilities"}, {"score": 0.003375826910838081, "phrase": "skyline_search"}, {"score": 0.0032527939106509946, "phrase": "full_space"}, {"score": 0.003101153870424188, "phrase": "feedback-based_distributed_skyline"}, {"score": 0.002988101395789399, "phrase": "arbitrary_horizontal_partitioning"}, {"score": 0.002879158342988017, "phrase": "network_bandwidth"}, {"score": 0.002603012037901889, "phrase": "novel_feedback-driven_mechanism"}, {"score": 0.0023532890136269986, "phrase": "large_amount"}, {"score": 0.002328434471939886, "phrase": "local_data"}, {"score": 0.0021731423856364003, "phrase": "extensive_experimentation"}, {"score": 0.0021049977753042253, "phrase": "alternative_approaches"}], "paper_keywords": ["Skyline", " distributed", " FDS"], "paper_abstract": "We consider skyline computation when the underlying data set is horizontally partitioned onto geographically distant servers that are connected to the Internet. The existing solutions are not suitable for our problem, because they have at least one of the following drawbacks: 1) applicable only to distributed systems adopting vertical partitioning or restricted horizontal partitioning, 2) effective only when each server has limited computing and communication abilities, and 3) optimized only for skyline search in subspaces but inefficient in the full space. This paper proposes an algorithm, called feedback-based distributed skyline (FDS), to support arbitrary horizontal partitioning. FDS aims at minimizing the network bandwidth, measured in the number of tuples transmitted over the network. The core of FDS is a novel feedback-driven mechanism, where the coordinator iteratively transmits certain feedback to each participant. Participants can leverage such information to prune a large amount of local data, which otherwise would need to be sent to the coordinator. Extensive experimentation confirms that FDS significantly outperforms alternative approaches in both effectiveness and progressiveness.", "paper_title": "Distributed Skyline Retrieval with Low Bandwidth Consumption", "paper_id": "WOS:000262560100006"}