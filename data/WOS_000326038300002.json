{"auto_keywords": [{"score": 0.04679092937098069, "phrase": "control_algorithms"}, {"score": 0.03446037491656766, "phrase": "simplifying_assumption"}, {"score": 0.03179521039064598, "phrase": "main_processor"}, {"score": 0.00481495049065317, "phrase": "hardware_architectural_support_for_control_systems"}, {"score": 0.004792208732166814, "phrase": "sensor_processing"}, {"score": 0.004735820927042846, "phrase": "modern_control_theory"}, {"score": 0.004614081478934359, "phrase": "rapid_development"}, {"score": 0.0044425456916429, "phrase": "computing_medium"}, {"score": 0.004197074560058038, "phrase": "dedicated_digital_signal_processor"}, {"score": 0.004089127275533214, "phrase": "simple_dedicated_programmable_logic_device"}, {"score": 0.003937030300970066, "phrase": "single_component"}, {"score": 0.0036408975543932506, "phrase": "control_theory"}, {"score": 0.003319411530369619, "phrase": "hardware_architecture"}, {"score": 0.0032958869945139617, "phrase": "control_developers"}, {"score": 0.0030478317465786916, "phrase": "microsecond-level_response_times"}, {"score": 0.002983471655315243, "phrase": "noncontrol_tasks"}, {"score": 0.0028792021166715895, "phrase": "plant's_state"}, {"score": 0.002732811297967071, "phrase": "common_computations"}, {"score": 0.0026878074815686447, "phrase": "sensor_data"}, {"score": 0.002557182861679395, "phrase": "pid_algorithms"}, {"score": 0.002521038339625905, "phrase": "sensor_processing_unit"}, {"score": 0.002392814382568583, "phrase": "field_programmable_gate_array"}, {"score": 0.002381559827423597, "phrase": "fpga"}, {"score": 0.002309139952095626, "phrase": "magnitude_improvement"}, {"score": 0.002298206194070811, "phrase": "response_time"}, {"score": 0.002249639986821758, "phrase": "standard_general_software_implementation"}, {"score": 0.00221257634943091, "phrase": "spu"}, {"score": 0.002181291044472544, "phrase": "general_software_implementation"}, {"score": 0.002150448113659341, "phrase": "execution_units"}, {"score": 0.0021250783648650473, "phrase": "dedicated_computing_medium"}, {"score": 0.0021049977753042253, "phrase": "control_algorithm_development"}], "paper_keywords": ["Design", " Experimentation", " Measurement", " Control systems", " real-time systems", " sensor processing", " application-specific processor", " reconfigurable hardware"], "paper_abstract": "The field of modern control theory and the systems used to implement these controls have shown rapid development over the last 50 years. It was often the case that those developing control algorithms could assume the computing medium was solely dedicated to the task of controlling a plant, for example, the control algorithm being implemented in software on a dedicated Digital Signal Processor (DSP), or implemented in hardware using a simple dedicated Programmable Logic Device (PLD). As time progressed, the drive to place more system functionality in a single component (reducing power, cost, and increasing reliability) has made this assumption less often true. Thus, it has been pointed out by some experts in the field of control theory (e. g., Astrom) that those developing control algorithms must take into account the effects of running their algorithms on systems that will be shared with other tasks. One aspect of the work presented in this article is a hardware architecture that allows control developers to maintain this simplifying assumption. We focus specifically on the Proportional-Integral-Derivative (PID) controller. An on-chip coprocessor has been implemented that can scale to support servicing hundreds of plants, while maintaining microsecond-level response times, tight deterministic control loop timing, and allowing the main processor to service noncontrol tasks. In order to control a plant, the controller needs information about the plant's state. Typically this information is obtained from sensors with which the plant has been instrumented. There are a number of common computations that may be performed on this sensor data before being presented to the controller (e. g., averaging and thresholding). Thus in addition to supporting PID algorithms, we have developed a Sensor Processing Unit (SPU) that off-loads these common sensor processing tasks from the main processor. We have prototyped our ideas using Field Programmable Gate Array (FPGA) technology. Through our experimental results, we show our PID execution unit gives orders of magnitude improvement in response time when servicingmany plants, as compared to a standard general software implementation. We also show that the SPU scales much better than a general software implementation. In addition, these execution units allow the simplifying assumption of dedicated computing medium to hold for control algorithm development.", "paper_title": "Hardware Architectural Support for Control Systems and Sensor Processing", "paper_id": "WOS:000326038300002"}