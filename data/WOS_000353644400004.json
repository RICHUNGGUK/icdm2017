{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "termination_proof_methods"}, {"score": 0.004640079189342692, "phrase": "reduction_orderings"}, {"score": 0.003244050414264445, "phrase": "church's_simply_typed_lambda-calculus"}, {"score": 0.002323826502178581, "phrase": "user's_rules"}, {"score": 0.0021049977753042253, "phrase": "type_system"}], "paper_keywords": ["Theory", " Higher-order rewriting", " higher-order orderings", " higher-order patterns", " typed lambda calculus"], "paper_abstract": "We extend the termination proof methods based on reduction orderings to higher-order rewriting systems based on higher-order pattern matching. We accommodate, on the one hand, a weakly polymorphic, algebraic extension of Church's simply typed lambda-calculus and, on the other hand, any use of eta, as a reduction, as an expansion, or as an equation. The user's rules may be of any type in this type system, either a base, functional, or weakly polymorphic type.", "paper_title": "Normal Higher-Order Termination", "paper_id": "WOS:000353644400004"}