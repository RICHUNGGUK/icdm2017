{"auto_keywords": [{"score": 0.04124584638960656, "phrase": "first_setting"}, {"score": 0.039282223508626875, "phrase": "second_setting"}, {"score": 0.00481495049065317, "phrase": "width-two_obdds"}, {"score": 0.004425616928975799, "phrase": "prespecified_distance_measure"}, {"score": 0.004010841760769459, "phrase": "branching_program"}, {"score": 0.003044269254752414, "phrase": "property_testing"}, {"score": 0.003027178161479457, "phrase": "linear_functions"}, {"score": 0.0026971491199975083, "phrase": "distance_parameter"}, {"score": 0.002443970765041351, "phrase": "constant_epsilon"}, {"score": 0.0022020622730208514, "phrase": "testing_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Property testing", " OBDDs"], "paper_abstract": "Property testing is concerned with deciding whether an object (e.g. a graph or a function) has a certain property or is \"far\" (for a prespecified distance measure) from every object with that property. In this work, we consider the property of being computable by a read-once width-2 Ordered Binary Decision Diagram (OBDD), also known as a branching program, in two settings. In the first setting, the order of the variables is fixed and given to the algorithm, while in the second setting it is not fixed. That is, while in the first setting we should accept a function f if it is computable by a width-2 OBDD with a given order of the variables, in the second setting we should accept a function f if there exists an order of the variables according to which a width-2 OBDD can compute f. Width-2 OBDDs generalize two classes. of functions that have been studied in the context of property testing: linear functions (over GF(2)) and monomials. In both these cases membership can be tested by performing a number of queries that is independent of the number of variables, n (and is linear in 1/epsilon, where epsilon is the distance parameter). In contrast, we show that testing computability by width-2 OBDDs when the order of variables is fixed and known requires a number of queries that grows logarithmically with n (for a constant epsilon), and we provide an algorithm that performs (O) over tilde (log n/epsilon) queries. For the case where the order is not fixed, we show that there is no testing algorithm that performs a number of queries that is sublinear in n. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Testing computability by width-two OBDDs", "paper_id": "WOS:000301308900006"}