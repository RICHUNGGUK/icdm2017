{"auto_keywords": [{"score": 0.029817986308747473, "phrase": "high_speed"}, {"score": 0.012848925904988692, "phrase": "pm_accelerator"}, {"score": 0.00481495049065317, "phrase": "design_approaches"}, {"score": 0.004786620949516712, "phrase": "elliptic_curve_point_multiplication"}, {"score": 0.0047026237903774895, "phrase": "polynomial_basis_representation"}, {"score": 0.004674952036988355, "phrase": "point_multiplication"}, {"score": 0.004552421225766146, "phrase": "elliptic_curve_cryptography"}, {"score": 0.004525646438718079, "phrase": "ecc"}, {"score": 0.004459334186889869, "phrase": "pm_hardware_accelerator_design"}, {"score": 0.004228577663320847, "phrase": "pm_design_decision"}, {"score": 0.004178935413340453, "phrase": "utilized_hardware_resources"}, {"score": 0.004154332348800334, "phrase": "computation_speed"}, {"score": 0.0037909219941547373, "phrase": "multiplication_role"}, {"score": 0.003757480190200645, "phrase": "overall_pm_performance"}, {"score": 0.003626626504149897, "phrase": "bit_serial_or_bit_parallel_multiplication_approach"}, {"score": 0.0033883824438527316, "phrase": "single_point_operation"}, {"score": 0.0033584796908285894, "phrase": "realistic_design_cases"}, {"score": 0.003338690782620756, "phrase": "bit_serial_and_bit_parallel_multiplier"}, {"score": 0.003319114342627146, "phrase": "pm"}, {"score": 0.0032510690712452147, "phrase": "theoretical_modeling"}, {"score": 0.0030464123943266673, "phrase": "design_approach"}, {"score": 0.0029229166303837545, "phrase": "side_channel_attack_resistant_montgomery_power_ladder_algorithm"}, {"score": 0.0028546020769742177, "phrase": "resulting_pm_accelerator_overall_performance"}, {"score": 0.0027878797103973313, "phrase": "acceptable_cost"}, {"score": 0.0027714435547214183, "phrase": "chip_covered_area"}, {"score": 0.002620040660435039, "phrase": "parallelism_stages"}, {"score": 0.002581587777482942, "phrase": "proposed_methodology"}, {"score": 0.0024915819531646645, "phrase": "side_channel_attack_resistance"}, {"score": 0.0024622810950164415, "phrase": "covered_area"}, {"score": 0.0024333239726872604, "phrase": "fair_comparisons"}, {"score": 0.0023976048394496446, "phrase": "common_pm_architecture"}, {"score": 0.002362408791114333, "phrase": "use_case"}, {"score": 0.0023554316787703137, "phrase": "pm_accelerators"}, {"score": 0.0023277282036119106, "phrase": "fpga_technology"}, {"score": 0.0022935555629405003, "phrase": "designers_goal"}, {"score": 0.002273292707863821, "phrase": "proposed_architectures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Elliptic curve cryptography", " Finite field computation", " VLSI design"], "paper_abstract": "Point Multiplication (PM) is considered the most computationally complex and resource hungry Elliptic Curve Cryptography (ECC) mathematical operation. PM hardware accelerator design can follow several approaches that lead to a fast, small or flexible implementation, meeting related application specifications. However, each PM design decision has certain outcomes in utilized hardware resources and computation speed. Such a key design decision is related to the structure of the GF(2(k)) multipliers to be employed in the PM accelerator. In this paper, we highlight the GF(2(k)) multiplication role in the overall PM performance and investigate what are the trade-offs on a PM accelerator when using bit serial or bit parallel multiplication approach in terms of speed, chip covered area and flexibility. To achieve this goal, we estimate these tradeoffs for a single point operation and specify realistic design cases for bit serial and bit parallel multiplier based PM design approaches. To evaluate the theoretical modeling, a point operation design methodology based on the parallelism and rescheduling of GF(2(k)) operations is proposed. This design approach is adapted to two characteristic PM algorithm realizations, the traditional double & add algorithm and the side channel attack resistant Montgomery power ladder algorithm. Our goal is to assess the resulting PM accelerator overall performance so as to achieve high speed with an acceptable cost on chip covered area (hardware resources). Using this methodology, PM is performed in series of GF(2(k)) parallelism stages. To test the proposed methodology, 8 PM accelerator use cases are identified that can offer high speed, flexibility, side channel attack resistance or small chip covered area. To provide fair comparisons and results, a common PM architecture is devised and the use case PM accelerators are implemented in FPGA technology. Depending on the designers goal, the proposed architectures and 8 implementations can offer the benefit of either high speed (the proposed work is currently one of the fastest known GF(2(k)) bit parallel multiplier based PM realization) or flexibility with reasonable compromises in chip covered area. (c) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Comparing design approaches for elliptic curve point multiplication over GF(2(k)) with polynomial basis representation", "paper_id": "WOS:000366879500050"}