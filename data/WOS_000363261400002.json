{"auto_keywords": [{"score": 0.04956147216757455, "phrase": "dynamic_delimited_continuations"}, {"score": 0.01481673793089547, "phrase": "defunctionalized_form"}, {"score": 0.005204929300280473, "phrase": "dynamic_cps"}, {"score": 0.005037982014231957, "phrase": "continuation_monad"}, {"score": 0.00481495049065317, "phrase": "dynamic_continuation-passing_style"}, {"score": 0.004635187610736025, "phrase": "preexisting_definitional_abstract_machine"}, {"score": 0.004112582094962078, "phrase": "adjusted_abstract_machine"}, {"score": 0.003811010743703935, "phrase": "higher-order_evaluation_function"}, {"score": 0.0034554281349858836, "phrase": "delimited_continuations"}, {"score": 0.0031500213134140953, "phrase": "\"dynamic_continuation-passing_style"}, {"score": 0.0030487828775502563, "phrase": "corresponding_dynamic_cps_transformation"}, {"score": 0.0027341763737751467, "phrase": "recursive_answer_type"}, {"score": 0.002646267286675984, "phrase": "new_simulation"}, {"score": 0.0025611773887867255, "phrase": "static_ones"}, {"score": 0.0024788167298469455, "phrase": "new_applications"}, {"score": 0.0023990982005125763, "phrase": "meta-circular_evaluator"}, {"score": 0.0023219374444738723, "phrase": "present_work"}, {"score": 0.0022718774783143203, "phrase": "computational_artifacts"}, {"score": 0.002210814150677161, "phrase": "independent_designs"}, {"score": 0.0021631447601689444, "phrase": "mechanical_consequences"}, {"score": 0.0021049977753042253, "phrase": "definitional_abstract_machine"}], "paper_keywords": ["Algorithms", " Languages", " Theory", " Delimited continuations"], "paper_abstract": "We put a preexisting definitional abstract machine for dynamic delimited continuations in defunctionalized form, and we present the consequences of this adjustment. We first prove the correctness of the adjusted abstract machine. Because it is in defunctionalized form, we can refunctionalize it into a higher-order evaluation function. This evaluation function, which is compositional, is in continuation+state-passing style and threads a trail of delimited continuations and a meta-continuation. Since this style accounts for dynamic delimited continuations, we refer to it as \"dynamic continuation-passing style\" and we present the corresponding dynamic CPS transformation. We show that the notion of computation induced by dynamic CPS takes the form of a continuation monad with a recursive answer type. This continuation monad suggests a new simulation of dynamic delimited continuations in terms of static ones. Finally, we present new applications of dynamic delimited continuations, including a meta-circular evaluator. The significance of the present work is that the computational artifacts surrounding dynamic CPS are not independent designs: they are mechanical consequences of having put the definitional abstract machine in defunctionalized form.", "paper_title": "A Dynamic Continuation-Passing Style for Dynamic Delimited Continuations", "paper_id": "WOS:000363261400002"}