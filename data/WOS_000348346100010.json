{"auto_keywords": [{"score": 0.03678083841176403, "phrase": "pp_scheme"}, {"score": 0.027216202161865787, "phrase": "streaming_systems"}, {"score": 0.015719716506582538, "phrase": "peer_startup_process"}, {"score": 0.012154665650361083, "phrase": "fp_scheme"}, {"score": 0.008665452396578018, "phrase": "initial_offset_placement"}, {"score": 0.007092274656768956, "phrase": "measurement_results"}, {"score": 0.006670745750551168, "phrase": "initial_buffer_offset"}, {"score": 0.006487460777061248, "phrase": "reference_neighbor_peer"}, {"score": 0.0051759673059890016, "phrase": "buffer_width"}, {"score": 0.004895022358182382, "phrase": "uusee"}, {"score": 0.004428139418750855, "phrase": "critical_issue"}, {"score": 0.00415267519149569, "phrase": "peer's_buffer"}, {"score": 0.004118026552723285, "phrase": "startup_stage"}, {"score": 0.0040609174534657995, "phrase": "general_model"}, {"score": 0.003971179114354392, "phrase": "present_two_initial_offset_placement_schemes"}, {"score": 0.00389427992231721, "phrase": "real_systems"}, {"score": 0.0035512680138425237, "phrase": "new_peer"}, {"score": 0.0035216195857272403, "phrase": "fixed_padding"}, {"score": 0.0033208740593211467, "phrase": "reference_neighbor_peer's_offset_lag"}, {"score": 0.0029447150254434842, "phrase": "offset_lag"}, {"score": 0.002800158709933889, "phrase": "neighbor_peer_selection_mechanism"}, {"score": 0.002715325673496355, "phrase": "pplive"}, {"score": 0.0025390260969992942, "phrase": "good_performance"}, {"score": 0.002455205987751813, "phrase": "relatively_low_performance"}, {"score": 0.002354302193867031, "phrase": "better_performance"}, {"score": 0.0022957569067259625, "phrase": "critical_design_issue"}, {"score": 0.0022013916728990564, "phrase": "good_algorithm"}, {"score": 0.0021049977753042253, "phrase": "buffering_protocols"}], "paper_keywords": ["P2P live streaming", " Initial offset placement", " Protocol modeling", " Offset lag", " Buffer width"], "paper_abstract": "We measure and study the peer startup process in P2P live streaming systems and focus on a critical issue in this aspect: How a peer initializes its buffer status when it joins a channel, i.e., initial offset placement of the peer's buffer in the startup stage. We build a general model of peer startup process in chunk-based P2P streaming systems and present two initial offset placement schemes we inferred from the measurement results of real systems: Fixed padding (FP) scheme and proportional placement (PP) scheme. With FP scheme, the initial buffer offset is simply set to the offset reported by the reference neighbor peer of the new peer plus a fixed padding. With PP scheme, the initial buffer offset is set to the offset of the reference neighbor peer plus an advance proportional to the reference neighbor peer's offset lag or buffer width. We evaluate the performance of these two schemes, and find that the FP scheme, although simple, is not practical to be adopted in real P2P live streaming systems, and PP scheme is stable when the placement is based on offset lag, but will be unstable when it is based on buffer width if the chunk fetching strategy and neighbor peer selection mechanism are not properly designed. We then report our detailed measurement results of PPLive and UUSee, two popular commercial P2P streaming systems. The measurement results show that PPLive adopts the PP scheme based on buffer width and has good performance. UUSee, however, adopts FP scheme in its early version and has relatively low performance, and it later upgrades to use the PP scheme in its new version and consequently obtains better performance. These results show that initial offset placement is a critical design issue in P2P live streaming systems, and the PP scheme presented in this paper is a good algorithm for this purpose. Our analytical and measurement results could be useful for guiding the analysis and design of buffering protocols for P2P live streaming systems.", "paper_title": "Peer startup process and initial offset placement in peer-to-peer (P2P) live streaming systems", "paper_id": "WOS:000348346100010"}