{"auto_keywords": [{"score": 0.042426970046247924, "phrase": "underlying_tree"}, {"score": 0.015447610491653777, "phrase": "tree_decomposition"}, {"score": 0.01390972330205067, "phrase": "tree_realization"}, {"score": 0.00481495049065317, "phrase": "minimal_tree_realizations"}, {"score": 0.0047810714349158165, "phrase": "linear_codes"}, {"score": 0.003978866233891427, "phrase": "state_space"}, {"score": 0.0036942726653704213, "phrase": "constraint_complexity"}, {"score": 0.0036167509502276294, "phrase": "maximum_dimension"}, {"score": 0.0032991276152705934, "phrase": "least_constraint_complexity"}, {"score": 0.00316206336164649, "phrase": "tree_realizations"}, {"score": 0.0031286936417685178, "phrase": "linear_code"}, {"score": 0.0030306762103395842, "phrase": "unique_minimal_realization"}, {"score": 0.002988101395789399, "phrase": "state-space_dimension"}, {"score": 0.00281371157349156, "phrase": "minimal_realizations"}, {"score": 0.002744888626958772, "phrase": "first_construction"}, {"score": 0.002687235334499192, "phrase": "state-merging_procedure"}, {"score": 0.0025846562485378247, "phrase": "minimal_tree_realization"}, {"score": 0.002548331088496964, "phrase": "local_constraint_code_dimension"}, {"score": 0.002468450551616404, "phrase": "second_construction"}, {"score": 0.002275477757478827, "phrase": "graph_complexity"}, {"score": 0.0021578150667669535, "phrase": "forney"}, {"score": 0.0021049977753042253, "phrase": "minimum_trellis_constraint_complexity"}], "paper_keywords": ["Code decompositions", " cycle-free realizations", " linear codes", " r-sums", " tree realizations", " treewidth"], "paper_abstract": "A tree decomposition of the coordinates of a code is a mapping from the coordinate set to the set of vertices of a tree. A tree decomposition can be extended to a tree realization, i.e., a cycle-free realization of the code on the underlying tree, by specifying a state space at each edge of the tree, and a local constraint code at each vertex of the tree. The constraint complexity of a tree realization is the maximum dimension of any of its local constraint codes. A measure of the complexity of maximum-likelihood (ML) decoding for a code is its treewidth, which is the least constraint complexity of any of its tree realizations. It is known that among all tree realizations of a linear code that extends a given tree decomposition, there exists a unique minimal realization that minimizes the state-space dimension at each vertex of the underlying tree. In this paper, we give two new constructions of these minimal realizations. As a by-product of the first construction, a generalization of the state-merging procedure for trellis realizations, we obtain the fact that the minimal tree realization also minimizes the local constraint code dimension at each vertex of the underlying tree. The second construction relies on certain code decomposition techniques that we develop. We further observe that the treewidth of a code is related to a measure of graph complexity, also called treewidth. We exploit this connection to resolve a conjecture of Forney's regarding the gap between the minimum trellis constraint complexity and the treewidth of a code. We present a family of codes for which this gap can be arbitrarily large.", "paper_title": "On Minimal Tree Realizations of Linear Codes", "paper_id": "WOS:000268107200008"}