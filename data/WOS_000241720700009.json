{"auto_keywords": [{"score": 0.04464397984850976, "phrase": "optimal_alignment"}, {"score": 0.033865838751225646, "phrase": "optimal_solution"}, {"score": 0.01090031873734561, "phrase": "dynamic_programming_algorithm"}, {"score": 0.00915523570420381, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "optimal_multiple_sequence_alignment"}, {"score": 0.004748740786945996, "phrase": "pairwise_comparisons"}, {"score": 0.0047051051659828275, "phrase": "multiple_sequence_alignment"}, {"score": 0.004661890789162539, "phrase": "msa"}, {"score": 0.004492841495994535, "phrase": "computational_molecular_biology"}, {"score": 0.004349955692802962, "phrase": "best_known_scheme"}, {"score": 0.004192190072470619, "phrase": "dynamic_programming"}, {"score": 0.004040123129261597, "phrase": "input_sequences"}, {"score": 0.003734979290204709, "phrase": "msa_problem"}, {"score": 0.0034528025626422154, "phrase": "predefined_matching_segments"}, {"score": 0.0029780219173522115, "phrase": "predefined_sequence_segments"}, {"score": 0.0029234476524900794, "phrase": "single_letters"}, {"score": 0.0028566300478906916, "phrase": "input_size"}, {"score": 0.0026651772919894534, "phrase": "dynamic_programming_scheme"}, {"score": 0.002640636493247601, "phrase": "empirical_study"}, {"score": 0.00249805321224923, "phrase": "improved_running_time"}, {"score": 0.0024636239664210433, "phrase": "basic_dynamic_programming_algorithm"}, {"score": 0.0023091093387071593, "phrase": "additional_assumption"}, {"score": 0.0021049977753042253, "phrase": "search_space"}], "paper_keywords": ["multiple sequence alignment", " algorithms", " dynamic programming", " shortest path"], "paper_abstract": "Multiple Sequence Alignment (MSA) is one of the most fundamental problems in computational molecular biology. The running time of the best known scheme for finding an optimal alignment, based on dynamic programming, increases exponentially with the number of input sequences. Hence, many heuristics were suggested for the problem. We consider a version of the MSA problem where the goal is to find an optimal alignment in which matches are restricted to positions in predefined matching segments. We present several techniques for making the dynamic programming algorithm more efficient, while still finding an optimal solution under these restrictions. We prove that it suffices to find an optimal alignment of the predefined sequence segments, rather than single letters, thereby reducing the input size and thus improving the running time. We also identify \"shortcuts\" that expedite the dynamic programming scheme. Empirical study shows that, taken together, these observations lead to an improved running time over the basic dynamic programming algorithm by 4 to 12 orders of magnitude, while still obtaining an optimal solution. Under the additional assumption that matches between segments are transitive, we further improve the running time for finding the optimal solution by restricting the search space of the dynamic programming algorithm.", "paper_title": "Faster algorithms for optimal multiple sequence alignment based on pairwise comparisons", "paper_id": "WOS:000241720700009"}