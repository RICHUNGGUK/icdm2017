{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "feature_extraction"}, {"score": 0.008237948144598736, "phrase": "classifier_design"}, {"score": 0.007641539665290252, "phrase": "matrix-pattern-oriented_classifier_design"}, {"score": 0.004742729013774991, "phrase": "matrix"}, {"score": 0.004607772051902472, "phrase": "extended_pattern_representation"}, {"score": 0.004381841876150705, "phrase": "subsequent_classifier"}, {"score": 0.004340724551091173, "phrase": "matrix-pattern-oriented_feature_extraction"}, {"score": 0.004246271940215511, "phrase": "vector_pattern_representation"}, {"score": 0.003950103621065539, "phrase": "matrix_representation"}, {"score": 0.003791901285142797, "phrase": "matrix_pattern_representation"}, {"score": 0.0036285822640427525, "phrase": "so-called_fully_matrixized_approach"}, {"score": 0.0026158609712563737, "phrase": "vector-pattern-oriented_classifier_design"}, {"score": 0.0024178580026395276, "phrase": "designed_fully_matrixized_approach"}, {"score": 0.002357710902984216, "phrase": "effective_and_efficient_performance"}, {"score": 0.002313582249239217, "phrase": "prior_structural_knowledge"}, {"score": 0.0022207767448896515, "phrase": "alternative_feasible_pattern_representation"}, {"score": 0.002186079683182129, "phrase": "classifier_designs"}, {"score": 0.0021451564984201364, "phrase": "necessary_validation"}, {"score": 0.0021249824741421306, "phrase": "ugly_duckling"}, {"score": 0.0021049977753042253, "phrase": "\"no_free_lunch\"_theorems"}], "paper_keywords": ["classifier design (CD)", " feature extraction (FE)", " matrix pattern", " pattern recognition", " pattern representation", " vector pattern"], "paper_abstract": "The matrix, as an extended pattern representation to the vector, has proven to be effective in feature extraction. However, the subsequent classifier following the matrix-pattern-oriented feature extraction is generally still based on the vector pattern representation (namely, MatFE + VecCD), where it has been demonstrated that the effectiveness in classification just attributes to the matrix representation in feature extraction. This paper looks at the possibility of applying the matrix pattern representation to both feature extraction and classifier design. To this end, we propose a so-called fully matrixized approach, i.e., the matrix-pattern-oriented feature extraction followed by the matrix-pattern-oriented classifier design (MatFE + MatCD). To more comprehensively validate MatFE + MatCD, we further consider all the possible combinations of feature extraction (FE) and classifier design (CD) on the basis of patterns represented by matrix and vector respectively, i.e., MatFE + MatCD, MatFE + VecCD, just the matrix-pattern-oriented classifier design (MatCD), the vector-pattern-oriented feature extraction followed by the matrix-pattern-oriented classifier design (VecFE + MatCD), the vector-pattern -oriented feature extraction followed by the vector-pattern-oriented classifier design (VecFE + VecCD) and just the vector-pattern -oriented classifier design (VecCD). The experiments on the combinations have shown the following: 1) the designed fully matrixized approach (MatFE + MatCD) has an effective and efficient performance on those patterns with the prior structural knowledge such as images; and 2) the matrix gives us an alternative feasible pattern representation in feature extraction and classifier designs, and meanwhile provides a necessary validation for \"ugly duckling\" and \"no free lunch\" theorems.", "paper_title": "Pattern representation in feature extraction and classifier design: Matrix versus vector", "paper_id": "WOS:000258766500003"}