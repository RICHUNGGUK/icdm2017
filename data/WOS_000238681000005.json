{"auto_keywords": [{"score": 0.03336836049284039, "phrase": "optimal_protocol"}, {"score": 0.022851102999899384, "phrase": "causal_consistency"}, {"score": 0.008652609064249627, "phrase": "complete_replication"}, {"score": 0.00481495049065317, "phrase": "causal_memories"}, {"score": 0.004657393640152439, "phrase": "distributed_shared_memory"}, {"score": 0.00460604059914558, "phrase": "dsm"}, {"score": 0.004261885692956071, "phrase": "causality_order_relation"}, {"score": 0.004099542199088835, "phrase": "optimality_criterion"}, {"score": 0.004031865694174726, "phrase": "protocol_p"}, {"score": 0.003730465168354817, "phrase": "write_updates"}, {"score": 0.0033945024593626675, "phrase": "local_copy"}, {"score": 0.0030545815929619306, "phrase": "reliable_broadcast_communication"}, {"score": 0.002614534850703364, "phrase": "vector_clocks"}, {"score": 0.00251478366610296, "phrase": "causal_memory"}, {"score": 0.0024594969044952108, "phrase": "operational_point"}, {"score": 0.0021049977753042253, "phrase": "non-optimal_ones"}], "paper_keywords": ["causal consistency", " distributed shared memory", " propagation-based protocols", " optimality criterion", " distributed systems"], "paper_abstract": "Ensuring causal consistency in a Distributed Shared Memory (DSM) means all operations executed at each process will be compliant to a causality order relation. This paper first introduces an optimality criterion for a protocol P, based on a complete replication of variables at each process and propagation of write updates, that enforces causal consistency. This criterion measures the capability of a protocol to update the local copy as soon as possible while respecting causal consistency. Then we present an optimal protocol built on top of a reliable broadcast communication primitive and we show how previous protocols based on complete replication presented in the literature are not optimal. Interestingly, we prove that the optimal protocol embeds a system of vector clocks which captures the read/write semantics of a causal memory. From an operational point of view, an optimal protocol strongly reduces its message buffer overhead. Simulation studies show that the optimal protocol roughly buffers a number of messages of one order of magnitude lower than non-optimal ones based on the same communication primitive.", "paper_title": "Optimal propagation-based protocols implementing causal memories", "paper_id": "WOS:000238681000005"}