{"auto_keywords": [{"score": 0.03850253843948161, "phrase": "locked_cache_lines"}, {"score": 0.015323334533395763, "phrase": "cache_lines"}, {"score": 0.01255154055005785, "phrase": "multi-core_architectures"}, {"score": 0.00481495049065317, "phrase": "predictable_task_migration_for_locked_caches"}, {"score": 0.004765482708043842, "phrase": "multi-core_systems"}, {"score": 0.004644014990871423, "phrase": "hard_real-time_systems"}, {"score": 0.00443308765153716, "phrase": "cache_access_behavior"}, {"score": 0.004275650416511604, "phrase": "worst_case_execution_time"}, {"score": 0.0041666157975446564, "phrase": "multitasking_environment"}, {"score": 0.004081385289516914, "phrase": "cache_locking"}, {"score": 0.0039772848945723435, "phrase": "multi-core_hard_real-time_systems"}, {"score": 0.0037381083634085424, "phrase": "task_migration"}, {"score": 0.0034951469511975346, "phrase": "next_invocation"}, {"score": 0.0031354779851351287, "phrase": "hardware-based_push-assisted_cache_migration"}, {"score": 0.0029013950320185573, "phrase": "push-assisted_migration_model"}, {"score": 0.002769395841379498, "phrase": "bus-based_chip_multi-processor_architecture"}, {"score": 0.0026986685585382347, "phrase": "deterministic_migration_delay_bounds"}, {"score": 0.0025100713447593773, "phrase": "single_or_multiple_tasks"}, {"score": 0.002358917661465133, "phrase": "task_migrations"}, {"score": 0.0022399174232611853, "phrase": "hard_real-time_system"}], "paper_keywords": ["Design", " Experimentation", " Real-Time Systems", " Multi-Core Architectures", " Timing Analysis", " Task Migration"], "paper_abstract": "Locking cache lines in hard real-time systems is a common means of achieving predictability of cache access behavior and tightening as well as reducing worst case execution time, especially in a multitasking environment. However, cache locking poses a challenge for multi-core hard real-time systems since theoretically optimal scheduling techniques on multi-core architectures assume zero cost for task migration. Tasks with locked cache lines need to proactively migrate these lines before the next invocation of the task. Otherwise, cache locking on multi-core architectures becomes useless as predictability is compromised. This paper proposes hardware-based push-assisted cache migration as a means to retain locks on cache lines across migrations. We extend the push-assisted migration model with several cache migration techniques to efficiently retain locked cache lines on a bus-based chip multi-processor architecture. We also provide deterministic migration delay bounds that help the scheduler decide which migration technique(s) to utilize to relocate a single or multiple tasks. This information also allows the scheduler to determine feasibility of task migrations, which is critical for the safety of any hard real-time system. Such proactive migration of locked cache lines in multi-cores is unprecedented to our knowledge.", "paper_title": "Predictable Task Migration for Locked Caches in Multi-Core Systems", "paper_id": "WOS:000294608700014"}