{"auto_keywords": [{"score": 0.029420333683948755, "phrase": "hol"}, {"score": 0.006266881902120012, "phrase": "hol."}, {"score": 0.00481495049065317, "phrase": "synthesized_implementation"}, {"score": 0.004503959683578956, "phrase": "algorithm_complexity"}, {"score": 0.004283913685201902, "phrase": "floating-point_units"}, {"score": 0.0038112201846057445, "phrase": "deep_datapath"}, {"score": 0.00347657813672945, "phrase": "better_solution"}, {"score": 0.0030414140732789186, "phrase": "hardware_implementation"}, {"score": 0.0026384167183586015, "phrase": "high_ability"}, {"score": 0.002530359917257626, "phrase": "hol_verification_system"}, {"score": 0.002426717832834137, "phrase": "verification_task"}, {"score": 0.0023665766694993535, "phrase": "whole_design_path"}, {"score": 0.00223196703759329, "phrase": "gate-level_implementation"}, {"score": 0.0021049977753042253, "phrase": "high-level_mathematical_specification"}], "paper_keywords": ["floating-point arithmetic", " formal hardware verification", " higher-order logic", " theorem proving"], "paper_abstract": "Deep datapath and algorithm complexity have made the verification of floating-point units a very hard task. Most simulation and reachability analysis verification tools fail to verify a circuit with a deep datapath like most industrial floating-point units. Theorem proving, however, offers a better solution to handle such verification. In this paper, we have hierarchically formalized and verified a hardware implementation of the IEEE-754 table-driven floating-point exponential function algorithm using the higher-order logic (HOL) theorem prover. The high ability of abstraction in the HOL verification system allows its use for the verification task over the whole design path of the circuit, starting from gate-level implementation of the circuit up to a high-level mathematical specification.", "paper_title": "Verifying a Synthesized Implementation of IEEE-754 Floating-Point Exponential Function using HOL", "paper_id": "WOS:000277226000008"}