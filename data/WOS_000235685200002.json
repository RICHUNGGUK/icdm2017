{"auto_keywords": [{"score": 0.049683132952654335, "phrase": "heterogeneous_platforms"}, {"score": 0.00481495049065317, "phrase": "collective_communications"}, {"score": 0.00446820572467064, "phrase": "complex_application"}, {"score": 0.004376378707877484, "phrase": "heterogeneous_platform"}, {"score": 0.0042864307215634756, "phrase": "macro-communication_schemes"}, {"score": 0.004180919839686364, "phrase": "data_items"}, {"score": 0.003977594755967813, "phrase": "restricted_set"}, {"score": 0.003768426876815755, "phrase": "execution_time"}, {"score": 0.003721735062704032, "phrase": "single_collective_communication"}, {"score": 0.003630073540438812, "phrase": "steady-state_operation"}, {"score": 0.0035113478590679133, "phrase": "large_number"}, {"score": 0.0033824008297657494, "phrase": "pipelined_fashion"}, {"score": 0.002900037689072025, "phrase": "different_communication_and_computation_speeds"}, {"score": 0.0028521858876446654, "phrase": "best_throughput"}, {"score": 0.0027818804382539444, "phrase": "target_platform"}, {"score": 0.0027133032795773697, "phrase": "different_messages"}, {"score": 0.0026354246446771324, "phrase": "different_paths"}, {"score": 0.002602734354498382, "phrase": "main_focus"}, {"score": 0.0025385621498128243, "phrase": "complexity_results"}, {"score": 0.0024656866249273125, "phrase": "unified_framework"}, {"score": 0.002404885278896803, "phrase": "collective_communication_schemes"}, {"score": 0.002249961956629804, "phrase": "np-hard_problem"}, {"score": 0.0021944684609599245, "phrase": "efficient_polynomial_algorithms"}, {"score": 0.0021049977753042253, "phrase": "bibliographical_pointers"}], "paper_keywords": ["scheduling", " collective communications", " NP-completeness", " broadcast", " heuristics", " heterogeneous clusters", " grids"], "paper_abstract": "In this paper, we consider the communications involved in the execution of a complex application, deployed on a heterogeneous platform. Such applications extensively use macro-communication schemes, for example to broadcast data items, either to all resources (broadcast) or to a restricted set of targets (multicast). Rather than aiming at minimizing the execution time of a single collective communication, we focus on the steady-state operation. We assume that there is a large number of messages to be broadcast or multicast in pipelined fashion, and we aim at maximizing the throughput, i.e. the (rational) number of messages which can be broadcast or multicast every time-step. We target heterogeneous platforms, modeled by a graph where resources have different communication and computation speeds. Achieving the best throughput may well require that the target platform is used in totality: different messages may need to be transferred along different paths. The main focus of the paper is on complexity results. We aim at presenting a unified framework for analyzing the complexity of collective communication schemes. We concentrate on the classification (whether maximizing the throughput is a polynomial or NP-hard problem) rather than actually providing efficient polynomial algorithms (when such algorithms are known, we refer to bibliographical pointers).", "paper_title": "Complexity results for collective communications on heterogeneous platforms", "paper_id": "WOS:000235685200002"}