{"auto_keywords": [{"score": 0.038589252731608154, "phrase": "cpu_utilization"}, {"score": 0.00481495049065317, "phrase": "cpu_time_accounting"}, {"score": 0.0046803650677267146, "phrase": "processor_architectures"}, {"score": 0.004605147081797856, "phrase": "thread-level_parallelism"}, {"score": 0.004476399615305783, "phrase": "cmp_processors"}, {"score": 0.004368991631862884, "phrase": "smt"}, {"score": 0.004094639048362357, "phrase": "moderate_cost"}, {"score": 0.004012500850311087, "phrase": "complex_interaction"}, {"score": 0.003980106938194548, "phrase": "running_tasks"}, {"score": 0.003932003833923186, "phrase": "shared_resources"}, {"score": 0.003900257249255497, "phrase": "multi-tlp_architectures"}, {"score": 0.003822003373331997, "phrase": "cpu_time"}, {"score": 0.00342568771304873, "phrase": "processor_hardware_resources"}, {"score": 0.003329804436286295, "phrase": "accurate_cpu_accounting_mechanisms"}, {"score": 0.0030828215204304473, "phrase": "shared_data_center"}, {"score": 0.0030455297429878873, "phrase": "server_consolidation"}, {"score": 0.003020918749760067, "phrase": "future_systems"}, {"score": 0.0029008064765926414, "phrase": "hardware_cost"}, {"score": 0.002877361619893651, "phrase": "previous_cpu_accounting_mechanisms"}, {"score": 0.002831037222426215, "phrase": "pure-smt_processors"}, {"score": 0.0026423134393535265, "phrase": "new_accounting_mechanism"}, {"score": 0.0025167026017217926, "phrase": "accounted_cpu_utilization"}, {"score": 0.0024264193359373977, "phrase": "wide_range"}, {"score": 0.002406799309495983, "phrase": "processor_setups"}, {"score": 0.0023016843709107297, "phrase": "hardware_shared_resources"}, {"score": 0.0022190974300886467, "phrase": "previous_proposals"}], "paper_keywords": ["Design", " Performance", " Measurement", " CPU accounting", " multicore/multithreaded processors", " progress", " fairness", " slowdown"], "paper_abstract": "Processor architectures combining several paradigms of Thread-Level Parallelism (TLP), such as CMP processors in which each core is SMT, are becoming more and more popular as a way to improve performance at a moderate cost. However, the complex interaction between running tasks in hardware shared resources in multi-TLP architectures introduces complexities when accounting CPU time (or CPU utilization) to tasks. The CPU utilization accounted to a task depends on both the time it runs in the processor and the amount of processor hardware resources it receives. Deploying systems with accurate CPU accounting mechanisms is necessary to increase fairness. Moreover, it will allow users to be fairly charged on a shared data center, facilitating server consolidation in future systems. In this article we analyze the accuracy and hardware cost of previous CPU accounting mechanisms for pure-CMP and pure-SMT processors and we show that they are not adequate for CMP+SMT processors. Consequently, we propose a new accounting mechanism for CMP+SMT processors which: (1) increases the accuracy of accounted CPU utilization; (2) provides much more stable results over a wide range of processor setups; and (3) does not require tracking all hardware shared resources, significantly reducing its implementation cost. In particular, previous proposals lead to inaccuracies between 21% and 79% when measuring CPU utilization in an 8-core 2-way SMT processor, while our proposal reduces this inaccuracy to less than 5.0%.", "paper_title": "Fair CPU Time Accounting in CMP plus SMT Processors", "paper_id": "WOS:000313911800027"}