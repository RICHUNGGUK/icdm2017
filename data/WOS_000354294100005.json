{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpu"}, {"score": 0.004662036750452837, "phrase": "malware_writers"}, {"score": 0.0045726187330434025, "phrase": "new_methods"}, {"score": 0.004456044928556639, "phrase": "infection_lifetime"}, {"score": 0.00415050117148714, "phrase": "code_unpacking"}, {"score": 0.003916098498242888, "phrase": "automated_or_manual_malware_analysis"}, {"score": 0.0034636656250083744, "phrase": "ubiquitous_and_powerful_graphics_processing_unit"}, {"score": 0.0027801631944598206, "phrase": "malicious_code"}, {"score": 0.002726740692380339, "phrase": "different_processor_architecture"}, {"score": 0.0026916956768363158, "phrase": "ample_computational_power"}, {"score": 0.0026060359255636444, "phrase": "significant_challenges"}, {"score": 0.0025725382476862305, "phrase": "existing_malware_detection"}, {"score": 0.0025394700487126414, "phrase": "analysis_systems"}, {"score": 0.0023958326775913165, "phrase": "cpu_code"}, {"score": 0.0022312377180023282, "phrase": "even_more_robust_and_evasive_malware"}, {"score": 0.002132420504803564, "phrase": "potential_defenses"}, {"score": 0.0021049977753042253, "phrase": "gpu-assisted_malware"}], "paper_keywords": ["GPU", " Malware", " Evasion"], "paper_abstract": "Malware writers constantly seek new methods to increase the infection lifetime of their malicious software. To that end, techniques such as code unpacking and polymorphism have become the norm for hindering automated or manual malware analysis and evading virus scanners. In this paper, we demonstrate how malware can take advantage of the ubiquitous and powerful graphics processing unit (GPU) to increase its robustness against analysis and detection. We present the design and implementation of brute-force unpacking and runtime polymorphism, two code armoring techniques based on the general-purpose computing capabilities of modern graphics processors. By running part of the malicious code on a different processor architecture with ample computational power, these techniques pose significant challenges to existing malware detection and analysis systems, which are tailored to the analysis of CPU code. We also discuss how upcoming GPU features can be used to build even more robust and evasive malware, as well as directions for potential defenses against GPU-assisted malware.", "paper_title": "GPU-assisted malware", "paper_id": "WOS:000354294100005"}