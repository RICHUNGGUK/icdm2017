{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "uml_sequence_diagrams"}, {"score": 0.041528974128326006, "phrase": "sequence_diagram"}, {"score": 0.01453664426998616, "phrase": "cosmic"}, {"score": 0.013819361004308486, "phrase": "data_manipulations"}, {"score": 0.013362058327890808, "phrase": "finer_level"}, {"score": 0.012456760960667905, "phrase": "distinct_independent_variables"}, {"score": 0.012352278977504377, "phrase": "effort_estimation_models"}, {"score": 0.004747314816584038, "phrase": "cosmic_functional_size_measurement_method"}, {"score": 0.004575854901681043, "phrase": "software_effort"}, {"score": 0.004524348699657099, "phrase": "software_development_life_cycle"}, {"score": 0.004373267443572639, "phrase": "data_movements"}, {"score": 0.0041914608128592904, "phrase": "control_structure"}, {"score": 0.00399449659126893, "phrase": "structural_aspect"}, {"score": 0.0038719896823446592, "phrase": "functional_and_structural_sizes"}, {"score": 0.0036691380448651443, "phrase": "improved_measurement"}, {"score": 0.0032946562900625187, "phrase": "functional_size"}, {"score": 0.003266767911612594, "phrase": "functional_process"}, {"score": 0.003239114833599948, "phrase": "high_level"}, {"score": 0.0031397016413607795, "phrase": "structural_size"}, {"score": 0.0030005055373644096, "phrase": "flow_graph"}, {"score": 0.0028837660125643127, "phrase": "new_measurement_method"}, {"score": 0.0028111220617485985, "phrase": "software_metrics"}, {"score": 0.002771555801815504, "phrase": "abran"}, {"score": 0.0026940816246330494, "phrase": "sequence_diagrams"}, {"score": 0.0025819015229390663, "phrase": "different_levels"}, {"score": 0.002552781867125423, "phrase": "distinct_measurement_units"}, {"score": 0.002460386486765124, "phrase": "functional_requirements"}, {"score": 0.002405193760683982, "phrase": "abstract_level"}, {"score": 0.0023848164282879885, "phrase": "software_functional_size"}, {"score": 0.002305014991156598, "phrase": "detailed_level"}, {"score": 0.00228548445095552, "phrase": "software_structural_size"}, {"score": 0.0022089995300212588, "phrase": "complementary_aspects"}, {"score": 0.0021965026903942486, "phrase": "software_size"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["COSMIC ISO 19761", " UML sequence diagram", " Combined fragment", " Functional size measurement", " Structural size measurement", " Different levels of granularity"], "paper_abstract": "Context: The COSMIC functional size measurement method on UML diagrams has been investigated as a means to estimate the software effort early in the software development life cycle. Like other functional size measurement methods, the COSMIC method takes into account the data movements in the UML sequence diagrams for example, but does not consider the data manipulations in the control structure. This paper explores software sizing at a finer level of granularity by taking into account the structural aspect of a sequence diagram in order to quantify its structural size. These functional and structural sizes can then be used as distinct independent variables to improve effort estimation models. Objective: The objective is to design an improved measurement of the size of the UML sequence diagrams by taking into account the data manipulations represented by the structure of the sequence diagram, which will be referred to as their structural size. Method: While the design of COSMIC defines the functional size of a functional process at a high level of granularity (i.e. the data movements), the structural size of a sequence diagram is defined at a finer level of granularity: the size of the flow graph of their control structure described through the alt, opt and loop constructs. This new measurement method was designed by following the process recommended in Software Metrics and Software Metrology (Abran, 2010). Results: The size of sequence diagrams can now be measured from two perspectives, both functional and structural, and at different levels of granularity with distinct measurement units. Conclusion: It is now feasible to measure the size of functional requirements at two levels of granularity: at an abstract level, the software functional size can be measured in terms of COSMIC Function Point (CFP) units; and at a detailed level, the software structural size can be measured in terms of Control Structure Manipulation (CSM) units. These measures represent complementary aspects of software size and can be used as distinct independent variables to improve effort estimation models. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A measurement method for sizing the structure of UML sequence diagrams", "paper_id": "WOS:000349427200013"}