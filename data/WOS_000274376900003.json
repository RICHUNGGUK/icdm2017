{"auto_keywords": [{"score": 0.004447201233380302, "phrase": "general_methodology"}, {"score": 0.0036747384051186937, "phrase": "syntactic_and_behavioral_mismatches"}, {"score": 0.0034482025128821548, "phrase": "application_integration"}, {"score": 0.0032355864829403413, "phrase": "organizational_boundaries"}, {"score": 0.0028487656293168795, "phrase": "core_aggregation_process"}, {"score": 0.002508073621696602, "phrase": "composite_service"}, {"score": 0.002316105585203396, "phrase": "service_workflows"}, {"score": 0.0021049977753042253, "phrase": "data-flow_mapping"}], "paper_keywords": ["Algorithms", " Web service aggregation", " service contracts", " workflows", " BPEL", " YAWL"], "paper_abstract": "Our long-term objective is to develop a general methodology for deploying (Web) service aggregation and adaptation middleware, capable of suitably overcoming syntactic and behavioral mismatches in view of application integration within and across organizational boundaries. This article focuses on describing the core aggregation process, which generates the workflow of a composite service from a set of service workflows to be aggregated and a data-flow mapping linking service parameters.", "paper_title": "Design and Implementation of SATOR: A Web Service Aggregator", "paper_id": "WOS:000274376900003"}