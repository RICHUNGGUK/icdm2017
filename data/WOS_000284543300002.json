{"auto_keywords": [{"score": 0.04730434739897977, "phrase": "primal_grammars"}, {"score": 0.00481495049065317, "phrase": "iterated_term_schemata"}, {"score": 0.004459610543249395, "phrase": "hermann"}, {"score": 0.0036657110980445416, "phrase": "term_grammars"}, {"score": 0.0035731269727067496, "phrase": "high_expressive_power"}, {"score": 0.003512702405367876, "phrase": "good_computational_properties"}, {"score": 0.003394891095032025, "phrase": "exactly_the_same_properties"}, {"score": 0.002372298201966367, "phrase": "equivalent_primal_grammar"}, {"score": 0.0022346638243276717, "phrase": "original_formalism"}, {"score": 0.0021049977753042253, "phrase": "practical_point"}], "paper_keywords": ["Term schematisation", " Grammars", " Automated deduction"], "paper_abstract": "We propose an extension of primal grammars (Hermann and GalbavA1/2, Theor Comp Sci 176(1-2):111-158, 1997), called P-grammars. Primal grammars are term grammars with a high expressive power and good computational properties. P-grammars have exactly the same properties but are more modular, more concise, and easier to use, as shown by some examples. We prove that P-grammars are exponentially more concise than primal grammars. An algorithm, called p2primal, transforming any P-grammar into an equivalent primal grammar is provided, thus making the original formalism much easier to handle from a practical point of view.", "paper_title": "Simplified handling of iterated term schemata", "paper_id": "WOS:000284543300002"}