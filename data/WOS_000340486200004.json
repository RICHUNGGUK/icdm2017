{"auto_keywords": [{"score": 0.036202361760999516, "phrase": "redundant_move_sequences"}, {"score": 0.014584698311105766, "phrase": "single-agent_search_problems"}, {"score": 0.00481495049065317, "phrase": "single-agent_search"}, {"score": 0.004620093797504386, "phrase": "low-overhead_technique"}, {"score": 0.004525629293824217, "phrase": "search_cost"}, {"score": 0.004283019592801715, "phrase": "duplicate_states"}, {"score": 0.004224418476742716, "phrase": "redundant_sequences"}, {"score": 0.0033651019362620866, "phrase": "general_class"}, {"score": 0.0026986685585382347, "phrase": "experimental_results"}, {"score": 0.0025537472239953807, "phrase": "multiple_orders"}, {"score": 0.0023346234464901978, "phrase": "theoretical_results"}, {"score": 0.0022710523337245337, "phrase": "move_pruning"}, {"score": 0.0021049977753042253, "phrase": "different_search_algorithms"}], "paper_keywords": ["Heuristic search", " singe-agent search problem", " move pruning"], "paper_abstract": "Move pruning is a low-overhead technique for reducing search cost in single-agent search problems by avoiding the generation of duplicate states. Redundant sequences of moves, where the effect of one sequence is provably identical to some other sequence of moves, are suppressed during search. We present an algorithm for automatically identifying redundant move sequences in a general class of single-agent search problems, and a method for selecting redundant move sequences to prune during search. We demonstrate that the redundant move sequences which are to be pruned must be chosen carefully, and give experimental results using our move pruning method which show a speedup of multiple orders of magnitude in a variety of domains. Finally, we give theoretical results on conditions where move pruning does, and does not, affect the correctness of different search algorithms.", "paper_title": "Automatic move pruning for single-agent search", "paper_id": "WOS:000340486200004"}