{"auto_keywords": [{"score": 0.04755038371136592, "phrase": "software_repositories"}, {"score": 0.03652095438368971, "phrase": "domino_pieces"}, {"score": 0.024421252430118823, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "multi-perspective_exploratory_analysis_of_software_development_data"}, {"score": 0.004668525321431486, "phrase": "dominoes"}, {"score": 0.004439941010250576, "phrase": "multiple_perspectives"}, {"score": 0.004388796812234033, "phrase": "software_development_data"}, {"score": 0.004288261454002681, "phrase": "computational_power"}, {"score": 0.003878451139312637, "phrase": "different_relationships"}, {"score": 0.0038485929962942776, "phrase": "project_artifacts"}, {"score": 0.003548579306515579, "phrase": "multiple_matrices"}, {"score": 0.0034008496666026585, "phrase": "vertical_bar_method"}, {"score": 0.0032341432727280707, "phrase": "matrices_operations"}, {"score": 0.0031845067058084613, "phrase": "additional_domino_pieces"}, {"score": 0.003111472132927442, "phrase": "specific_project_entity_relationships"}, {"score": 0.0028138046006772593, "phrase": "dominoes_framework"}, {"score": 0.0027492483892113, "phrase": "apache_derby"}], "paper_keywords": ["Exploratory data analysis", " software dependencies", " developer expertise", " GPU computing"], "paper_abstract": "In this paper, we present Dominoes, an approach for analyzing software repositories with thousands of artifacts by considering multiple perspectives of the software development data. In order to achieve computational power we model the data and its relationships as matrices, making possible to efficiently process them with a GPUs (Graphics Processing Unit) based architectures. Dominoes can support automated exploration of different relationships among project artifacts, where users have the flexibility to interactively combine and compose them. Our solution organizes data extracted from software repositories into multiple matrices that can be treated as domino pieces (e.g. [commit vertical bar method]). The connection of such pieces corresponds to a set of matrices operations, which derive additional domino pieces. These derived domino pieces represent specific project entity relationships (e.g. number of commits in which two methods co-occurred) and can be used for further explorations. As an evaluation of the Dominoes framework we present two exploratory case studies based on Apache Derby. First, we use Dominoes to show how dependencies among artifacts can be derived. Then, we identify expertise of developers by considering the commits that developers make to artifacts. We show that identifying relationships among 34,335 elements along 7,578 commits takes about 0.2 minutes in GPU, while the same processing in CPU takes about 413 minutes. Besides, identifying expertise of developer on a set of 34,335 files and 36 developers takes about 0.1 minute in GPU, whereas in CPU it takes 324 minutes.", "paper_title": "Multi-Perspective Exploratory Analysis of Software Development Data", "paper_id": "WOS:000354763600004"}