{"auto_keywords": [{"score": 0.04881990207677595, "phrase": "floating-point_arithmetic"}, {"score": 0.00481495049065317, "phrase": "integer_powers"}, {"score": 0.004048860957751714, "phrase": "positive_integer"}, {"score": 0.003737485125097945, "phrase": "fused_multiply-add"}, {"score": 0.0027495914857929584, "phrase": "correctly_rounded_results"}, {"score": 0.002537880772794665, "phrase": "nearest_mode"}, {"score": 0.002250415129116109, "phrase": "floating-point_number"}, {"score": 0.0021049977753042253, "phrase": "exact_value"}], "paper_keywords": ["Algorithms", " Reliability", " Performance", " Correct rounding", " floating-point arithmetic", " integer power function"], "paper_abstract": "We introduce several algorithms for accurately evaluating powers to a positive integer in floating-point arithmetic, assuming a fused multiply-add (fma) instruction is available. For bounded, yet very large values of the exponent, we aim at obtaining correctly rounded results in round-to-nearest mode, that is, our algorithms return the floating-point number that is nearest the exact value.", "paper_title": "Computing Correctly Rounded Integer Powers in Floating-Point Arithmetic", "paper_id": "WOS:000274028800004"}