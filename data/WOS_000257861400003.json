{"auto_keywords": [{"score": 0.004671156704912419, "phrase": "unequal_letter"}, {"score": 0.004600870784042767, "phrase": "prefix-free_coding"}, {"score": 0.004429727701202369, "phrase": "large_literature"}, {"score": 0.004106225442735525, "phrase": "prefix-free_code"}, {"score": 0.004013843843250455, "phrase": "unequal_letter-cost_encoding_alphabet"}, {"score": 0.0037774893672602506, "phrase": "known_polynomial_time_algorithm"}, {"score": 0.003448705829033573, "phrase": "additive_errors"}, {"score": 0.003320277992107974, "phrase": "additive_error"}, {"score": 0.0031010029460927864, "phrase": "largest_encoding_letter_size"}, {"score": 0.0028525124381208705, "phrase": "optimal_codes"}, {"score": 0.002788257824525862, "phrase": "encoding_alphabet"}, {"score": 0.0026640466056415298, "phrase": "largest_letter_cost"}, {"score": 0.002564763827975352, "phrase": "previous_analyses"}, {"score": 0.0025069746344846397, "phrase": "infinite_error_bounds"}, {"score": 0.002413531395475291, "phrase": "new_algorithm"}, {"score": 0.0023412849215629986, "phrase": "infinite_encoding_alphabets"}, {"score": 0.0022369407711124775, "phrase": "finite_alphabet_case"}, {"score": 0.002153540857619362, "phrase": "better_error_bounds"}, {"score": 0.0021049977753042253, "phrase": "best_previous_ones"}], "paper_keywords": ["entropy", " prefix-free codes", " redundancy", " source-coding"], "paper_abstract": "There is a large literature devoted to the problem of finding an optimal (min-cost) prefix-free code with an unequal letter-cost encoding alphabet of size. While there is no known polynomial time algorithm for solving it optimally, there are many good heuristics that all provide additive errors to optimal. The additive error in these algorithms usually depends linearly upon the largest encoding letter size. This paper was motivated by the problem of finding optimal codes when the encoding alphabet is infinite. Because the largest letter cost is infinite, the previous analyses could give infinite error bounds. We provide a new algorithm that works with infinite encoding alphabets. When restricted to the finite alphabet case, our algorithm often provides better error bounds than the best previous ones known.", "paper_title": "More efficient algorithms and analyses for unequal letter cost prefix-free coding", "paper_id": "WOS:000257861400003"}