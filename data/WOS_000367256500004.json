{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "event-driven_applications"}, {"score": 0.004775335634705251, "phrase": "modern_event-driven_applications"}, {"score": 0.004677711903652145, "phrase": "web_pages"}, {"score": 0.0046392209103157936, "phrase": "mobile_apps"}, {"score": 0.004506968388996092, "phrase": "smooth_end-user_experience"}, {"score": 0.00428892403807229, "phrase": "single_event-loop_thread"}, {"score": 0.00418387341007444, "phrase": "nondeterministic_behaviors"}, {"score": 0.004115267130977749, "phrase": "execution_order"}, {"score": 0.004064548693812535, "phrase": "asynchronous_events"}, {"score": 0.003997891221012094, "phrase": "classic_shared-memory_concurrency"}, {"score": 0.003773049633656302, "phrase": "specific_schedules"}, {"score": 0.0036202043425301042, "phrase": "first_stateless_model_checker"}, {"score": 0.0032780806856932423, "phrase": "bug_discovery"}, {"score": 0.0029437270961011077, "phrase": "search_space"}, {"score": 0.0026543514413663893, "phrase": "small_number"}, {"score": 0.0026324658253309673, "phrase": "event_reorderings"}, {"score": 0.0025361866386341796, "phrase": "event_sequences"}, {"score": 0.0024434201175883674, "phrase": "harmful_nondeterminism"}, {"score": 0.0023540387251475615, "phrase": "client-side_web_applications"}, {"score": 0.0022962708568492734, "phrase": "event_interference"}, {"score": 0.0022492129111567824, "phrase": "real-world_programs"}, {"score": 0.0022214412809055013, "phrase": "experimental_results"}, {"score": 0.0021669202726173928, "phrase": "overall_exploration_capabilities"}, {"score": 0.0021049977753042253, "phrase": "existing_techniques"}], "paper_keywords": ["Model checking", " partial order reduction", " data races", " web applications", " event-driven applications"], "paper_abstract": "Modern event-driven applications, such as, web pages and mobile apps, rely on asynchrony to ensure smooth end-user experience. Unfortunately, even though these applications are executed by a single event-loop thread, they can still exhibit nondeterministic behaviors depending on the execution order of interfering asynchronous events. As in classic shared-memory concurrency, this nondeterminism makes it challenging to discover errors that manifest only in specific schedules of events. In this work we propose the first stateless model checker for event-driven applications, called R4. Our algorithm systematically explores the nondeterminism in the application and concisely exposes its overall effect, which is useful for bug discovery. The algorithm builds on a combination of three key insights: (i) a dynamic partial order reduction (DPOR) technique for reducing the search space, tailored to the domain of event-driven applications, (ii) conflict-reversal bounding based on a hypothesis that most errors occur with a small number of event reorderings, and (iii) approximate replay of event sequences, which is critical for separating harmless from harmful nondeterminism. We instantiate R4 for the domain of client-side web applications and use it to analyze event interference in a number of real-world programs. The experimental results indicate that the precision and overall exploration capabilities of our system significantly exceed that of existing techniques.", "paper_title": "Stateless Model Checking of Event-Driven Applications", "paper_id": "WOS:000367256500004"}