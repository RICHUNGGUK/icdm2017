{"auto_keywords": [{"score": 0.0054595573726314685, "phrase": "kim"}, {"score": 0.00481495049065317, "phrase": "spine_decompositions"}, {"score": 0.004658426838467567, "phrase": "length-constrained_heaviest_path_problem"}, {"score": 0.004506968388996092, "phrase": "length-constrained_heaviest_path"}, {"score": 0.004331675965350876, "phrase": "weighted_tree_t"}, {"score": 0.003922580121023413, "phrase": "path_p"}, {"score": 0.003820144626025562, "phrase": "maximum_total_path_weight"}, {"score": 0.0037699306119313154, "phrase": "total_path_length"}, {"score": 0.003482160257566501, "phrase": "time_lchp_algorithm"}, {"score": 0.0033911868693238894, "phrase": "data_structure"}, {"score": 0.0033025823350563087, "phrase": "spine_decomposition"}, {"score": 0.0032376465741070274, "phrase": "input_tree"}, {"score": 0.0030706395717772436, "phrase": "existing_algorithm"}, {"score": 0.003030247482854539, "phrase": "wu_et_al"}, {"score": 0.002602127996667857, "phrase": "time_algorithm"}, {"score": 0.0024678216843278806, "phrase": "special_case"}, {"score": 0.00240328454980006, "phrase": "longest_nonnegative_path"}, {"score": 0.0023559890904375526, "phrase": "constant_degree_tree"}, {"score": 0.002234358539133758, "phrase": "arbitrary_degree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " Analysis of algorithms", " Data structures"], "paper_abstract": "The length-constrained heaviest path (LCHP) in a weighted tree T, where each edge is assigned a weight and a length, is the path P in T with maximum total path weight and total path length bounded by a given value B. This paper presents an O(n logn) time LCHP algorithm which utilizes a data structure constructed from the spine decomposition of the input tree. This is an improvement over the existing algorithm by Wu et al. (1999), which runs in O(n log(2) n) time. Our method also improves on a previous O(n logn) time algorithm by Kim (2005) for the special case of finding a longest nonnegative path in a constant degree tree in that we can handle trees of arbitrary degree within the same time bounds. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Using spine decompositions to efficiently solve the length-constrained heaviest path problem for trees", "paper_id": "WOS:000260712000008"}