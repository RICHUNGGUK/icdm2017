{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "parallel_chen-han"}, {"score": 0.004707188147442449, "phrase": "discrete_geodesics"}, {"score": 0.004567230180529598, "phrase": "exact_geodesic_distance"}, {"score": 0.00443141503046841, "phrase": "high_computational_cost"}, {"score": 0.004398094237005956, "phrase": "existing_geodesic_algorithms"}, {"score": 0.004267287100135339, "phrase": "large-scale_models"}, {"score": 0.0042351951710402425, "phrase": "time-critical_applications"}, {"score": 0.0038247634489737142, "phrase": "original_ch_algorithm"}, {"score": 0.0037390789999636764, "phrase": "parallel_solution"}, {"score": 0.0035734052458933547, "phrase": "shortest_distance"}, {"score": 0.0035331426502479687, "phrase": "wavefront_propagation"}, {"score": 0.0034539685987677376, "phrase": "strict_order"}, {"score": 0.003415047118340286, "phrase": "tightly_coupled_manner"}, {"score": 0.003214730261140886, "phrase": "ch's_sequential_algorithm"}, {"score": 0.002958281631770322, "phrase": "data_dependence"}, {"score": 0.0027428939498108746, "phrase": "proposed_pch_algorithm"}, {"score": 0.0026813808976594183, "phrase": "large_number"}, {"score": 0.002572158343938064, "phrase": "simple_yet_effective_strategy"}, {"score": 0.0025335509856200433, "phrase": "total_number"}, {"score": 0.0024673738215365104, "phrase": "pch_algorithm"}, {"score": 0.0024487847651989128, "phrase": "modern_gpus"}, {"score": 0.0024120247307686084, "phrase": "nvidia_gtx"}, {"score": 0.0023137485947956732, "phrase": "performance_improvement"}, {"score": 0.00227040825063645, "phrase": "sequential_algorithms"}, {"score": 0.0022194677375148063, "phrase": "gpu_double-precision_performance"}, {"score": 0.0021778895748464024, "phrase": "extensive_experiments"}, {"score": 0.0021614767508781048, "phrase": "real-world_models"}, {"score": 0.002120982646893519, "phrase": "magnitude_improvement"}, {"score": 0.0021049977753042253, "phrase": "execution_time"}], "paper_keywords": ["Algorithms", " Discrete geodesic", " parallel computation", " window propagation", " GPU"], "paper_abstract": "In many graphics applications, the computation of exact geodesic distance is very important. However, the high computational cost of existing geodesic algorithms means that they are not practical for large-scale models or time-critical applications. To tackle this challenge, we propose the Parallel Chen-Han (or PCH) algorithm, which extends the classic Chen-Han (CH) discrete geodesic algorithm to the parallel setting. The original CH algorithm and its variant both lack a parallel solution because the windows (a key data structure that carries the shortest distance in the wavefront propagation) are maintained in a strict order or a tightly coupled manner, which means that only one window is processed at a time. We propose dividing the CH's sequential algorithm into four phases, window selection, window propagation, data organization, and events processing so that there is no data dependence or conflicts in each phase and the operations within each phase can be carried out in parallel. The proposed PCH algorithm is able to propagate a large number of windows simultaneously and independently. We also adopt a simple yet effective strategy to control the total number of windows. We implement the PCH algorithm on modern GPUs (such as Nvidia GTX 580) and analyze the performance in detail. The performance improvement (compared to the sequential algorithms) is highly consistent with GPU double-precision performance (GFLOPS). Extensive experiments on real-world models demonstrate an order of magnitude improvement in execution time compared to the state-of-the-art.", "paper_title": "Parallel Chen-Han (PCH) Algorithm for Discrete Geodesics", "paper_id": "WOS:000332118300009"}