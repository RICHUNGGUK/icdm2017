{"auto_keywords": [{"score": 0.04981504224429812, "phrase": "runtime_power_management"}, {"score": 0.046630461269012644, "phrase": "gaming_applications"}, {"score": 0.00481495049065317, "phrase": "time_series_characterization_of_gaming_workload"}, {"score": 0.00473578343131372, "phrase": "dynamic_voltage"}, {"score": 0.004670810466015742, "phrase": "dvfs"}, {"score": 0.004581315009194603, "phrase": "video_processing_applications"}, {"score": 0.004493535274957768, "phrase": "game_power_management"}, {"score": 0.0043952640674674425, "phrase": "battery-operated_portable_devices"}, {"score": 0.004287264446016914, "phrase": "video_power_management"}, {"score": 0.004251855014936839, "phrase": "pid_controllers"}, {"score": 0.00412449394611398, "phrase": "game_workload_prediction"}, {"score": 0.004101750176331242, "phrase": "dvfs."}, {"score": 0.004034260768222184, "phrase": "hand-tuned_pid_controller_gains"}, {"score": 0.003956921134443817, "phrase": "open_questions"}, {"score": 0.003838360529834522, "phrase": "prediction_quality"}, {"score": 0.0037751895787179173, "phrase": "gain_values"}, {"score": 0.0036317896279485346, "phrase": "wefirst"}, {"score": 0.00356213805517703, "phrase": "pid_controller_gain_values"}, {"score": 0.003513203382092187, "phrase": "good_game_quality"}, {"score": 0.003206615786563051, "phrase": "large_oscillations"}, {"score": 0.0031801031575393766, "phrase": "processor's_frequency"}, {"score": 0.003067717298233605, "phrase": "time_series_models"}, {"score": 0.0030255540794918863, "phrase": "least_mean_squares"}, {"score": 0.002992239873711124, "phrase": "linear_predictor"}, {"score": 0.0029348176536617013, "phrase": "autoregressive_moving_average"}, {"score": 0.0029186361915835507, "phrase": "arma"}, {"score": 0.0028389242954210254, "phrase": "relevant_model_parameters"}, {"score": 0.00273856268065539, "phrase": "manual_parameter_estimation"}, {"score": 0.0026859955072188932, "phrase": "real_setups"}, {"score": 0.0026344347040210643, "phrase": "even_game_applications"}, {"score": 0.002527281660573503, "phrase": "pid"}, {"score": 0.002513318709274709, "phrase": "lms"}, {"score": 0.0024311346712789553, "phrase": "quake_ii"}, {"score": 0.002404350157623904, "phrase": "crysis"}, {"score": 0.002262209824105154, "phrase": "first_work"}, {"score": 0.0022126280490696363, "phrase": "pid_controller_parameters"}, {"score": 0.0022004029656808224, "phrase": "power_management"}, {"score": 0.0021462188078498817, "phrase": "workload_prediction"}, {"score": 0.0021049977753042253, "phrase": "closed-source_games"}], "paper_keywords": ["Dynamic voltage scaling", " time series analysis", " prediction methods"], "paper_abstract": "Runtime power management using dynamic voltage and frequency scaling (DVFS) has been extensively studied for video processing applications. But there is only a little work on game power management although gaming applications are now widely run on battery-operated portable devices like mobile phones. Taking a cue from video power management, where PID controllers have been successfully used, they were recently applied to game workload prediction and DVFS. However, the use of hand-tuned PID controller gains on relatively short game plays left open questions on the robustness of the controller and the sensitivity of prediction quality on the choice of the gain values. In this paper, we try to systematically answer these questions. Wefirst show that from the space of PID controller gain values, only a small subset leads to good game quality and power savings. Further, the choice of this set highly depends on the scene and the game application. For most gain values the controller becomes unstable, which can lead to large oscillations in the processor's frequency setting and thereby poor results. We then study a number of time series models, such as a Least Mean Squares (LMS) Linear Predictor and its generalizations in the form of Autoregressive Moving Average (ARMA) models. These models learn most of the relevant model parameters iteratively as the game progresses, thereby dramatically reducing the complexity of manual parameter estimation. This makes them deployable in real setups, where all game plays and even game applications are not a priori known. We have evaluated each of these models (PID, LMS, andARMA) for a variety of games-ranging from Quake II to more recent closed-source gamessuch as Crysis, Need for Speed-Shift and World in Conflict-with very encouraging results. To the best of our knowledge, this is the first work that systematically explores (a) the feasibility of manually tuning PID controller parameters for power management, (b) time series models for workload prediction for gaming applications, and (c) power management for closed-source games.", "paper_title": "Time Series Characterization of Gaming Workload for Runtime Power Management", "paper_id": "WOS:000346572100022"}