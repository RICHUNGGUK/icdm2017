{"auto_keywords": [{"score": 0.025684890733806007, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "efficient_sorting"}, {"score": 0.004706699397060569, "phrase": "key_requirement"}, {"score": 0.004497410940849537, "phrase": "existing_techniques"}, {"score": 0.004330099613414957, "phrase": "new_sorting_approaches"}, {"score": 0.004013843843250455, "phrase": "numerical_simulations"}, {"score": 0.003501452436803395, "phrase": "ever_growing_massive_amounts"}, {"score": 0.0033455764382772754, "phrase": "daily_basis"}, {"score": 0.0032702516771609957, "phrase": "optimal_sorting_models"}, {"score": 0.0032209766681045365, "phrase": "serial_execution"}, {"score": 0.0031484483754909026, "phrase": "single_processor"}, {"score": 0.0030775481952377017, "phrase": "efficient_parallel_sorting"}, {"score": 0.0028095140358025, "phrase": "hardware-optimized_parallel_implementation"}, {"score": 0.0026040262154057607, "phrase": "significant_speed"}, {"score": 0.0025453546203590364, "phrase": "existing_sorting_implementations"}, {"score": 0.0024504843466435487, "phrase": "known_general_processing_unit"}, {"score": 0.002169968849836984, "phrase": "sorting_key_space"}], "paper_keywords": ["HPC", " GPGPU", " GPU sorting", " collision detection", " parallel sorting"], "paper_abstract": "Efficient sorting is a key requirement for many computer science algorithms. Acceleration of existing techniques as well as developing new sorting approaches is crucial for many real-time graphics scenarios, database systems, and numerical simulations to name just a few. It is one of the most fundamental operations to organize and filter the ever growing massive amounts of data gathered on a daily basis. While optimal sorting models for serial execution on a single processor exist, efficient parallel sorting remains a challenge. In this paper, we present a hardware-optimized parallel implementation of the radix sort algorithm that results in a significant speed up over existing sorting implementations. We outperform all known General Processing Unit (GPU) based sorting systems by about a factor of two and eliminate restrictions on the sorting key space. This makes our algorithm not only the fastest, but also the first general GPU sorting solution.", "paper_title": "Fast Four-Way Parallel Radix Sorting on GPUs", "paper_id": "WOS:000272569400028"}