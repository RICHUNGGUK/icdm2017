{"auto_keywords": [{"score": 0.04927689164761756, "phrase": "tree_patterns"}, {"score": 0.042326820317436065, "phrase": "pattern_p"}, {"score": 0.04001044929865455, "phrase": "tree_pattern"}, {"score": 0.038906160240873275, "phrase": "pn"}, {"score": 0.00481495049065317, "phrase": "tree_pattern_queries"}, {"score": 0.004695900553353526, "phrase": "important_fragments"}, {"score": 0.004283913685201902, "phrase": "finite_number"}, {"score": 0.004248294537944227, "phrase": "compatible_tree_patterns"}, {"score": 0.003795335309109018, "phrase": "q._c"}, {"score": 0.0028805474861014722, "phrase": "acyclic_schema_graph_g"}, {"score": 0.0027859524575280384, "phrase": "pg"}, {"score": 0.0027510752634224726, "phrase": "transformed_version"}, {"score": 0.0026494723416072316, "phrase": "schema_graph"}, {"score": 0.002594652434287807, "phrase": "distinguished_node"}, {"score": 0.002346861891137455, "phrase": "tree_pattern_q"}, {"score": 0.00231759652007697, "phrase": "view_v"}, {"score": 0.0022133899226519484, "phrase": "vg"}, {"score": 0.0021049977753042253, "phrase": "distinguished_path"}], "paper_keywords": [""], "paper_abstract": "Tree patterns represent important fragments of XPath. In this paper, we show that some classes C of tree patterns exhibit such a property that, given a finite number of compatible tree patterns P-1, ... , Pn. C, there exists another pattern P such that P-1, ... , Pn are all contained in P-1 and for any tree pattern Q. C, P-1, ... , Pn are all contained in Q if and only if P is contained in Q. We experimentally demonstrate that the pattern P is usually much smaller than P-1, ... , Pn combined together. Using the existence of P above, we show that testing whether a tree pattern, P-1 is contained in another, Q. C, under an acyclic schema graph G, can be reduced to testing whether PG, a transformed version of P-1 is contained in Q without any schema graph, provided that the distinguished node of P is not labeled *. We then show that, under G, the maximal contained rewriting (MCR) of a tree pattern Q using a view V can be found by finding the MCR of Q using VG without G, when there are no *-nodes on the distinguished path of V and no *-nodes in Q.", "paper_title": "Least common container of tree pattern queries and its applications", "paper_id": "WOS:000303455400003"}