{"auto_keywords": [{"score": 0.04864349780900302, "phrase": "random_graphs"}, {"score": 0.009945882979806387, "phrase": "database_applications"}, {"score": 0.00481495049065317, "phrase": "random_graph_generation"}, {"score": 0.0047113960612140335, "phrase": "widespread_usage"}, {"score": 0.004225950334493496, "phrase": "large_family"}, {"score": 0.004010960493946656, "phrase": "complex_networks"}, {"score": 0.003941746077126688, "phrase": "randomized_algorithms"}, {"score": 0.0034742854447532678, "phrase": "classical_algorithms"}, {"score": 0.003429204066141849, "phrase": "erdos-renyi"}, {"score": 0.003311799410921826, "phrase": "large_instances"}, {"score": 0.003115908199991072, "phrase": "parallel_processing_capabilities"}, {"score": 0.0030888830649190282, "phrase": "modern_hardware"}, {"score": 0.0030223381739019894, "phrase": "main_motivation"}, {"score": 0.002880927789104712, "phrase": "novel_parallel_algorithm"}, {"score": 0.0028065957753430713, "phrase": "erdos-renyi_model"}, {"score": 0.0027104531025934865, "phrase": "graphics_processing_unit"}, {"score": 0.002687003353649156, "phrase": "gpu"}, {"score": 0.002594880866651459, "phrase": "nice_amenities"}, {"score": 0.0023782753249846794, "phrase": "classical_approaches"}, {"score": 0.0023068049914566975, "phrase": "pprezer_algorithm"}, {"score": 0.0021987994275190314, "phrase": "relevant_average_speedup_gain"}, {"score": 0.0021797112385590913, "phrase": "pprezer"}, {"score": 0.0021607883988873492, "phrase": "baseline_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Random graph", " Random graph generation", " Parallel algorithm", " GPU"], "paper_abstract": "The widespread usage of random graphs has been highlighted in the context of database applications for several years. This because such data structures turn out to be very useful in a large family of database applications ranging from simulation to sampling, from analysis of complex networks to study of randomized algorithms, and so forth. Amongst others, Erdos-Renyi Gamma(v,p) is the most popular model to obtain and manipulate random graphs. Unfortunately, it has been demonstrated that classical algorithms for generating Erdos-Renyi based random graphs do not scale well in large instances and, in addition to this, fail to make use of the parallel processing capabilities of modern hardware. Inspired by this main motivation, in this paper we propose and experimentally assess a novel parallel algorithm for generating random graphs under the Erdos-Renyi model that is designed and implemented in a Graphics Processing Unit (GPU), called PPreZER. We demonstrate the nice amenities due to our solution via a succession of several intermediary algorithms, both sequential and parallel, which show the limitations of classical approaches and the benefits due to the PPreZER algorithm. Finally, our comprehensive experimental assessment and analysis brings to light a relevant average speedup gain of PPreZER over baseline algorithms. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "An effective and efficient parallel approach for random graph generation over GPUs", "paper_id": "WOS:000314445400004"}