{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "concurrent_transactions"}, {"score": 0.049435104149514096, "phrase": "multi-core_processors"}, {"score": 0.04879952093091754, "phrase": "transaction_parallelism"}, {"score": 0.004623224002010226, "phrase": "database_systems"}, {"score": 0.0045302298105691615, "phrase": "attractive_way"}, {"score": 0.004439097815805505, "phrase": "transaction_performance"}, {"score": 0.0035016702571862165, "phrase": "greatest_execution_efficiency"}, {"score": 0.003362060602812933, "phrase": "lowest_dependencies"}, {"score": 0.0028569549040495163, "phrase": "resource_snapshot_model"}, {"score": 0.0027616550517346066, "phrase": "resource_modeling"}, {"score": 0.0026157259734105, "phrase": "non-restarting_scheduling_algorithm"}, {"score": 0.0025630077791393125, "phrase": "inter-transaction_level"}, {"score": 0.0025113494092413604, "phrase": "processor_assignment_algorithm"}, {"score": 0.0024607296642187846, "phrase": "intra-transaction_level"}, {"score": 0.0022992346264367374, "phrase": "execution_performance"}, {"score": 0.0022682274656069643, "phrase": "transaction_streams"}, {"score": 0.0021776870246727233, "phrase": "parallel_system"}, {"score": 0.002148315508445588, "phrase": "multiple_heterogeneous_processors"}, {"score": 0.0021049977753042253, "phrase": "different_number"}], "paper_keywords": ["multi-core", " database transaction", " parallelism", " concurrency", " conflict detection"], "paper_abstract": "Transaction parallelism in database systems is an attractive way of improving transaction performance. There exists two levels of transaction parallelism, inter-transaction level and intra-transaction level. With the advent of multi-core processors, new hopes of improving transaction parallelism appear on the scene. The greatest execution efficiency of concurrent transactions comes from the lowest dependencies of them. However, the dependencies of concurrent transactions stand in the way of exploiting parallelism. In this paper, we present Resource Snapshot Model (RSM) for resource modeling in both levels. We propose a non-restarting scheduling algorithm in the inter-transaction level and a processor assignment algorithm in the intra-transaction level in terms of multi-core processors. Through these algorithms, execution performance of transaction streams will be improved in a parallel system with multiple heterogeneous processors that have different number of cores.", "paper_title": "Resources Snapshot Model for Concurrent Transactions in Multi-Core Processors", "paper_id": "WOS:000314190600009"}