{"auto_keywords": [{"score": 0.04252657555232397, "phrase": "software_developers"}, {"score": 0.04187714396259639, "phrase": "documentation_structure"}, {"score": 0.038372636001617486, "phrase": "software_documentation"}, {"score": 0.02886474130314416, "phrase": "code_elements"}, {"score": 0.02841775003608198, "phrase": "section_headers"}, {"score": 0.00481495049065317, "phrase": "extracting_development_tasks"}, {"score": 0.004763895422211728, "phrase": "navigate_software_documentation"}, {"score": 0.004713379149462482, "phrase": "knowledge_management"}, {"score": 0.004638602678192715, "phrase": "central_role"}, {"score": 0.004444921827311577, "phrase": "important_technical_knowledge"}, {"score": 0.0035527409334589317, "phrase": "specific_programming_actions"}, {"score": 0.002931569771634119, "phrase": "search_queries"}, {"score": 0.002794001681064862, "phrase": "auto-complete_list"}, {"score": 0.00260657976055413, "phrase": "field_study"}, {"score": 0.00256514094268541, "phrase": "six_professional_developers"}, {"score": 0.002537880772794665, "phrase": "tasknavigator"}, {"score": 0.002405853977978678, "phrase": "search_results"}, {"score": 0.0023675986784123656, "phrase": "extracted_tasks"}, {"score": 0.0021049977753042253, "phrase": "task_descriptions"}], "paper_keywords": ["Software documentation", " development tasks", " navigation", " auto-complete", " natural language processing"], "paper_abstract": "Knowledge management plays a central role in many software development organizations. While much of the important technical knowledge can be captured in documentation, there often exists a gap between the information needs of software developers and the documentation structure. To help developers navigate documentation, we developed a technique for automatically extracting tasks from software documentation by conceptualizing tasks as specific programming actions that have been described in the documentation. More than 70 percent of the tasks we extracted from the documentation of two projects were judged meaningful by at least one of two developers. We present TaskNavigator, a user interface for search queries that suggests tasks extracted with our technique in an auto-complete list along with concepts, code elements, and section headers. We conducted a field study in which six professional developers used TaskNavigator for two weeks as part of their ongoing work. We found search results identified through extracted tasks to be more helpful to developers than those found through concepts, code elements, and section headers. The results indicate that task descriptions can be effectively extracted from software documentation, and that they help bridge the gap between documentation structure and the information needs of software developers.", "paper_title": "Extracting Development Tasks to Navigate Software Documentation", "paper_id": "WOS:000356155700003"}