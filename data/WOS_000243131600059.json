{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "machine-learning_tree-pattern_queries"}, {"score": 0.004559270778306828, "phrase": "web_data"}, {"score": 0.004488734023485018, "phrase": "building_programs"}, {"score": 0.004055998173160551, "phrase": "constant_changes"}, {"score": 0.0036080776793146843, "phrase": "machine_learning"}, {"score": 0.003389704997952315, "phrase": "current_techniques"}, {"score": 0.0031845067058084583, "phrase": "non-intuitive_user_interaction"}, {"score": 0.0030387767523076528, "phrase": "nary_extraction"}, {"score": 0.002854761308379149, "phrase": "n-ary_extraction_language"}, {"score": 0.0024418934977061876, "phrase": "notable_aspect"}, {"score": 0.0022407927161620855, "phrase": "child_and_descendant_relationships"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": [""], "paper_abstract": "Effienct and reliable integration of web data requires building programs called wrappers. Hand writting wrappers is tedious and error prone. Constant changes in the web, also implies that wrappers need to be constantly refactored. Machine learning has proven to be useful, but current techniques are either limited in expressivity, require non-intuitive user interaction or do not allow for nary extraction. We study using tree-patterns as an n-ary extraction language and propose an algorithm learning such queries. It calculates the most information-conservative tree-pattern which is a generalization of two input trees. A notable aspect is that the approach allows to learn queries containing both child and descendant relationships between nodes. More importantly, the proposed approach does not require any labeling other than the data which the user effectively wants to extract. The experiments reported show the effectiveness of the approach.", "paper_title": "Integrating data from the web by machine-learning tree-pattern queries", "paper_id": "WOS:000243131600059"}