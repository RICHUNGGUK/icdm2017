{"auto_keywords": [{"score": 0.039042932775872875, "phrase": "candidate_verification"}, {"score": 0.014840837151820472, "phrase": "subgraph_query"}, {"score": 0.00481495049065317, "phrase": "efficient_query_processing_on_graph_databases"}, {"score": 0.004722524105267129, "phrase": "subgraph_queries"}, {"score": 0.004296624085469749, "phrase": "efficient_index"}, {"score": 0.0037693455100358876, "phrase": "candidate_answer"}, {"score": 0.0032272929113113203, "phrase": "frequent_subgraph"}, {"score": 0.0028863802062547928, "phrase": "larger_set"}, {"score": 0.002851559704519154, "phrase": "larger_fg-index"}, {"score": 0.002716416670228912, "phrase": "feature-index_uses"}, {"score": 0.002690164464009248, "phrase": "false_results"}, {"score": 0.002593952524530446, "phrase": "truly_matching_graphs"}, {"score": 0.002459015930565035, "phrase": "frequently_asked_non-fg-queries"}, {"score": 0.0022531498276119398, "phrase": "comprehensive_set"}, {"score": 0.0022259513905243497, "phrase": "query_processing"}], "paper_keywords": ["Algorithms", " Experimentation", " Performance", " Graph databases", " graph indexing", " graph query processing", " frequent subgraphs"], "paper_abstract": "We study the problem of processing subgraph queries on a database that consists of a set of graphs. The answer to a subgraph query is the set of graphs in the database that are supergraphs of the query. In this article, we propose an efficient index, FG*-index, to solve this problem. The cost of processing a subgraph query using most existing indexes mainly consists of two parts: the index probing cost and the candidate verification cost. Index probing is to find the query in the index, or to find the graphs from which we can generate a candidate answer set for the query. Candidate verification is to test whether each graph in the candidate set is indeed a supergraph of the query. We design FG*-index to minimize these two costs as follows. FG*-index consists of three components: the FG-index, the feature-index, and the FAQ-index. First, the FG-index employs the concept of Frequent subGraph (FG) to allow the set of queries that are FGs to be answered without candidate verification. We call this set of queries FG-queries. We can enlarge the set of FG-queries so that more queries can be answered without candidate verification; however, a larger set of FG-queries implies a larger FG-index and hence the index probing cost also increases. We propose the feature-index to reduce the index probing cost. The feature-index uses features to filter false results that are matched in the FG-index, so that we can quickly find the truly matching graphs for a query. For processing non-FG-queries, we propose the FAQ-index, which is dynamically constructed from the set of Frequently Asked non-FG-Queries (FAQs). Using the FAQ-index, verification is not required for processing FAQs and only a small number of candidates need to be verified for processing non-FG-queries that are not frequently asked. Finally, a comprehensive set of experiments verifies that query processing using FG*-index is up to orders of magnitude more efficient than state-of-the-art indexes and it is also more scalable.", "paper_title": "Efficient Query Processing on Graph Databases", "paper_id": "WOS:000265494300002"}