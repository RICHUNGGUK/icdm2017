{"auto_keywords": [{"score": 0.004706699397060569, "phrase": "k-vertex_connected_spanning_subgraph_problem."}, {"score": 0.004106225442735525, "phrase": "minimum_cost"}, {"score": 0.0037774893672602506, "phrase": "input_graph"}, {"score": 0.0036093693971289754, "phrase": "connectivity_requirement"}, {"score": 0.003371066990851953, "phrase": "polylogarithmic_approximation_ratio"}, {"score": 0.002985484575498061, "phrase": "undirected_graphs"}, {"score": 0.002896167001212006, "phrase": "previous_works"}, {"score": 0.002788257824525862, "phrase": "frank-tardos_algorithm"}, {"score": 0.0027254466299651936, "phrase": "k-outconnected_subgraphs"}, {"score": 0.002153540857619362, "phrase": "whole_cost"}, {"score": 0.0021049977753042253, "phrase": "optimal_solution"}], "paper_keywords": ["approximation algorithm", " network design", " vertex-connectivity", " k-connected graph"], "paper_abstract": "We present an O(log(2) k)-approximation algorithm for the problem of finding a k-vertex connected spanning subgraph of minimum cost, where n is the number of vertices in an input graph, and k is a connectivity requirement. Our algorithm is the first that achieves a polylogarithmic approximation ratio for all values of k and n, and it works for both directed and undirected graphs. As in previous works, we use the Frank-Tardos algorithm for finding k-outconnected subgraphs as a subroutine. However, with our structural lemmas, we are able to show that we need only partial solutions returned by the Frank-Tardos algorithm; thus, we can avoid paying the whole cost of an optimal solution every time the algorithm is applied.", "paper_title": "AN O(log(2) k)-APPROXIMATION ALGORITHM FOR THE k-VERTEX CONNECTED SPANNING SUBGRAPH PROBLEM", "paper_id": "WOS:000310582600001"}