{"auto_keywords": [{"score": 0.049783551527037576, "phrase": "data_center_networks"}, {"score": 0.04461509693576422, "phrase": "network_congestion"}, {"score": 0.04408799181269606, "phrase": "vm_placement"}, {"score": 0.040561326972059226, "phrase": "inter-vm_traffic"}, {"score": 0.00481495049065317, "phrase": "reduced_congestion"}, {"score": 0.004755723591767513, "phrase": "virtualization-based_data_centers"}, {"score": 0.004682708592184678, "phrase": "hosting_platform"}, {"score": 0.0046394362688524475, "phrase": "wide_range"}, {"score": 0.004568198442824687, "phrase": "communication_patterns"}, {"score": 0.004456475967147909, "phrase": "bandwidth_usage"}, {"score": 0.0044289730051264116, "phrase": "virtual_machines"}, {"score": 0.00432064072724161, "phrase": "higher_chance"}, {"score": 0.004099116259721107, "phrase": "application_performance"}, {"score": 0.004061214835223812, "phrase": "fault_tolerance"}, {"score": 0.004011221986096511, "phrase": "network_loads"}, {"score": 0.003937379670109389, "phrase": "optimal_placement"}, {"score": 0.003829147385604486, "phrase": "bottlenecked_network_paths"}, {"score": 0.003793732650000069, "phrase": "large_cross_network_traffic"}, {"score": 0.0037586442197443375, "phrase": "core_network_oversubscription"}, {"score": 0.0037354317390837616, "phrase": "unbalanced_workload_placement"}, {"score": 0.0036894343670807314, "phrase": "long-lived_congestion"}, {"score": 0.003666647736663085, "phrase": "data_center"}, {"score": 0.0035548008271253607, "phrase": "appropriate_proportion"}, {"score": 0.0033619752116657545, "phrase": "multiple_link-disjoint_paths"}, {"score": 0.0032392523450566505, "phrase": "link-disjoint_paths"}, {"score": 0.0031306834002600547, "phrase": "link_failure"}, {"score": 0.003035135667860725, "phrase": "surviving_paths"}, {"score": 0.002879329998649317, "phrase": "multiple_paths"}, {"score": 0.0028615323526689582, "phrase": "reduced_occurrence"}, {"score": 0.0026317312518257803, "phrase": "single_link_failures"}, {"score": 0.0025912411705523953, "phrase": "efficient_algorithm"}, {"score": 0.0025592969422491476, "phrase": "greedy_technique"}, {"score": 0.0024965820893532286, "phrase": "computing_and_memory_resource_requirements"}, {"score": 0.0023537101705489957, "phrase": "two-path_routing_algorithm"}, {"score": 0.0023103100997344072, "phrase": "protection_grade_requirements"}, {"score": 0.002212123058024589, "phrase": "proposed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Data Center", " Virtual machine placement", " Traffic splitting", " Congestion", " Protection"], "paper_abstract": "Virtualization-based Data Centers are increasingly becoming the hosting platform for a wide range of applications. The communication patterns in Data Center networks show the trend towards increasing bandwidth usage between virtual machines (VMs) within the Data Center resulting in higher chance of occurrence of network congestion. Thus, VM placement and routing algorithms are increasingly important to maximize application performance, provide fault tolerance, and reduce network loads. A less-than optimal placement of communicating VMs can cause inter-VM traffic to traverse bottlenecked network paths leading to large cross network traffic. The core network oversubscription and unbalanced workload placement could lead to long-lived congestion in Data Center networks. Multipath routing with traffic distributed in an appropriate proportion helps balance the load and decrease the possibility of congestion. Furthermore, by routing traffic on multiple link-disjoint paths, traffic can be protected against failures. The use of link-disjoint paths ensures the availability of at least one path for the traffic upon a link failure, thus guaranteeing a certain bandwidth (associated with the surviving paths). In this paper, we study the problem of VM placement with traffic routing on multiple paths for reduced occurrence of congestion while satisfying a certain protection grade which is defined as the fraction of rate (or bandwidth) guaranteed to be available in the event of single link failures. We develop an efficient algorithm based on a greedy technique for placing VMs onto servers satisfying the computing and memory resource requirements, taking into account the amount of inter-VM traffic and network load. In addition, we develop a two-path routing algorithm to satisfy the bandwidth and protection grade requirements so as to reduce the network congestion. Our simulation results show the effectiveness of the proposed algorithms in balancing the load and resilient when compared to other first-fit and random algorithms. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Virtual machine placement with two-path traffic routing for reduced congestion in data center networks", "paper_id": "WOS:000344437900001"}