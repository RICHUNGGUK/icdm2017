{"auto_keywords": [{"score": 0.004653120760786245, "phrase": "digit-recurrence_algorithm"}, {"score": 0.004574247691703376, "phrase": "previous_decimal_division_designs"}, {"score": 0.00447115003744675, "phrase": "recent_developments"}, {"score": 0.003051073364818384, "phrase": "selection_function"}, {"score": 0.002898291237210567, "phrase": "additional_delay"}, {"score": 0.0026003455833291124, "phrase": "cycle_delay"}, {"score": 0.0021908807203548345, "phrase": "shorter_latency"}, {"score": 0.0021049977753042253, "phrase": "newton-raphson_approximation"}], "paper_keywords": ["decimal arithmetic", " digit-recurrence division", " decimal division", " algorithms and architectures for floating-point arithmetic"], "paper_abstract": "In this work, we present a radix-10 division unit that is based on the digit-recurrence algorithm. The previous decimal division designs do not include recent developments in the theory and practice of this type of algorithm, which were developed for radix-2(k) dividers. In addition to the adaptation of these features, the radix-10 quotient digit is decomposed into a radix-2 digit and a radix-5 digit in such a way that only five and two times the divisor are required in the recurrence. Moreover, the most significant slice of the recurrence, which includes the selection function, is implemented in radix-2, avoiding the additional delay introduced by the radix-10 carry-save additions and allowing the balancing of the paths to reduce the cycle delay. The results of the implementation of the proposed radix-10 division unit show that its latency is close to that of radix-16 division units (comparable dynamic range of significands) and it has a shorter latency than a radix-10 unit based on the Newton-Raphson approximation.", "paper_title": "A radix-10 digit-recurrence division unit: Algorithm and architecture", "paper_id": "WOS:000246477600002"}