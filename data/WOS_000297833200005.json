{"auto_keywords": [{"score": 0.04995790331914937, "phrase": "sh"}, {"score": 0.036783392730258234, "phrase": "first_stage"}, {"score": 0.03230237103186197, "phrase": "assertional_part"}, {"score": 0.03206515294725112, "phrase": "knowledge_base"}, {"score": 0.028421184531388553, "phrase": "last_step"}, {"score": 0.00481495049065317, "phrase": "description_logic"}, {"score": 0.004742511243894382, "phrase": "conjunctive_queries"}, {"score": 0.004635881163634672, "phrase": "important_task"}, {"score": 0.004600870784042767, "phrase": "widening_use"}, {"score": 0.004577676867295466, "phrase": "description_logics"}, {"score": 0.004319168469158858, "phrase": "different_techniques"}, {"score": 0.004243415959311671, "phrase": "novel_approach"}, {"score": 0.0041166198894563326, "phrase": "schematic_trees"}, {"score": 0.003983512316698646, "phrase": "terminological_information"}, {"score": 0.0038352452380298464, "phrase": "dl_sh"}, {"score": 0.003758430609434303, "phrase": "previous_approaches"}, {"score": 0.0036460731590599645, "phrase": "input_knowledge_base"}, {"score": 0.003431300185872735, "phrase": "input_query"}, {"score": 0.0032785369171110857, "phrase": "terminological_constraints"}, {"score": 0.003245520963944678, "phrase": "next_stage"}, {"score": 0.003188538511401117, "phrase": "full_knowledge_base"}, {"score": 0.0031484483754909026, "phrase": "constructed_ucq"}, {"score": 0.0031088607288523927, "phrase": "relational_structures"}, {"score": 0.0028453007376752176, "phrase": "second_stage"}, {"score": 0.002718555300512433, "phrase": "assertional_data_amounts"}, {"score": 0.0024943100191530897, "phrase": "single_exponential_time"}, {"score": 0.0024691719264774165, "phrase": "transitive_roles"}, {"score": 0.0023952639120005193, "phrase": "dl_alch."}, {"score": 0.002282750567209246, "phrase": "exptime"}, {"score": 0.002248301564595415, "phrase": "core_expressive_dl"}, {"score": 0.0021809902552410265, "phrase": "disjunctive_datalog"}, {"score": 0.002153540857619362, "phrase": "worst-case_optimal_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Description Logics", " Conjunctive query answering", " Knots", " Computational complexity", " Disjunctive Datalog"], "paper_abstract": "Answering conjunctive queries (CQs) has been recognized as an important task for the widening use of Description Logics (DLs) in a number of applications. The problem has been studied by many authors, who developed a number of different techniques for its solution. We present a novel approach to CQ answering that is based on knots, which are schematic trees of depth at most one that can be used to represent the terminological information represented in a TBox. They allow us to obtain an algorithm for the DL SH that has some advantages with respect to previous approaches, proceeding as follows. We build a compilation of an input knowledge base using knots, and then use this compilation to answer CQs in two stages. In the first stage we employ knots to rewrite the input query into a set of queries (a union of CQs, short UCQ) that incorporate the terminological constraints. In the next stage we answer the query over the full knowledge base, by answering the constructed UCQ over a set of relational structures that are obtained by enriching the assertional part of the knowledge base. Since in the first stage we process the query and the taxonomy, and the assertional part of the knowledge base is only processed in the second stage, parts of the computation can be reused; in particular, answering a query over changing assertional data amounts to re-executing the last step. Notably, the algorithm handles CQs with distinguished (i.e., output) variables in a direct manner and scales down nicely: while double exponential in general, it runs in single exponential time under various restrictions on transitive roles in queries, including the case of CQ answering in the DL ALCH. This is worst-case optimal, given that CQ answering is 2EXPTIME-complete for SH and EXPTIME-complete already for the core expressive DL ALC. Furthermore, the last step is amenable to a realization in disjunctive Datalog, which yields a worst-case optimal implementation under data complexity. (C) 2011 Elsevier Inc. All rights reserved.", "paper_title": "Conjunctive query answering in the description logic SH using knots", "paper_id": "WOS:000297833200005"}