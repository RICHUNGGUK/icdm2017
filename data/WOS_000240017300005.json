{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "terminal-edge_bisection_method"}, {"score": 0.004497410940849537, "phrase": "practical_and_stable_algorithm"}, {"score": 0.004396267325338022, "phrase": "parallel_refinement"}, {"score": 0.004330099613414957, "phrase": "tetrahedral_meshes"}, {"score": 0.003923532450854754, "phrase": "terminal_stars"}, {"score": 0.003748937184382714, "phrase": "special_edge"}, {"score": 0.0035550029054401016, "phrase": "longest_edge"}, {"score": 0.0031966173935538992, "phrase": "terminal-edge_form"}, {"score": 0.0026843584448921543, "phrase": "stable_implementation"}], "paper_keywords": ["parallel mesh generation", " 3-dimensional (3D)", " longest-edge", " terminal-edge", " Lepp"], "paper_abstract": "We present a practical and stable algorithm for the parallel refinement of tetrahedral meshes. The algorithm is based on the refinement of terminal-edges and associated terminal stars. A terminal-edge is a special edge in the mesh which is the longest edge of every element that shares such an edge, while the elements that share a terminal-edge form a terminal star. We prove that the algorithm is inherently decoupled and thus scalable. Our experimental data show that we have a stable implementation able to deal with hundreds of millions of tetrahedra and whose speed is in between one and two order of magnitude higher from the method and implementation we presented (Rivara et al., Proceedings 13th international meshing roundtable, 2004).", "paper_title": "Parallel decoupled terminal-edge bisection method for 3D mesh generation", "paper_id": "WOS:000240017300005"}