{"auto_keywords": [{"score": 0.03756124727930921, "phrase": "irs_algorithm"}, {"score": 0.01520397201724326, "phrase": "distributed_environment"}, {"score": 0.014162708633709378, "phrase": "multiple_rules"}, {"score": 0.00481495049065317, "phrase": "active_rules"}, {"score": 0.0046161999598320486, "phrase": "new_challenges"}, {"score": 0.004519908617935935, "phrase": "active_rule_execution_models"}, {"score": 0.004388450908826472, "phrase": "single_event"}, {"score": 0.004260800171269249, "phrase": "distributed_sources"}, {"score": 0.004067635935640407, "phrase": "concurrent_rule_execution"}, {"score": 0.003883194688426525, "phrase": "integration_rule_scheduling"}, {"score": 0.0038506844670642493, "phrase": "irs"}, {"score": 0.0037861265016041813, "phrase": "integration_rules"}, {"score": 0.0037543106253910313, "phrase": "active_database_rules"}, {"score": 0.003660452313567116, "phrase": "component_integration"}, {"score": 0.0035389348527719404, "phrase": "rule_conflicts"}, {"score": 0.003349984456443527, "phrase": "write_sets"}, {"score": 0.003266201217790818, "phrase": "unique_aspect"}, {"score": 0.0031710903727066313, "phrase": "conflict_analysis"}, {"score": 0.003104849179057156, "phrase": "nested_rule_execution"}, {"score": 0.0029890721584351684, "phrase": "execution_model"}, {"score": 0.002951444412262927, "phrase": "immediate_coupling_mode"}, {"score": 0.002770273247998903, "phrase": "concurrent_execution"}, {"score": 0.0027469703311742647, "phrase": "different_rule"}, {"score": 0.0026222551419772867, "phrase": "priority_graph"}, {"score": 0.002280990744438186, "phrase": "final_state"}, {"score": 0.0022522565004588113, "phrase": "rule_execution"}, {"score": 0.0021866066626507028, "phrase": "rule_scheduling"}, {"score": 0.0021590588269751816, "phrase": "distributed_and_centralized_rule_execution_environments"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["active rules", " concurrent rule execution", " rule scheduling algorithm", " confluence analysis"], "paper_abstract": "The use of rules in a distributed environment creates new challenges for the development of active rule execution models. In particular, since a single event can trigger multiple rules that execute over distributed sources of data, it is important to make use of concurrent rule execution whenever possible. This paper presents the details of the integration rule scheduling (IRS) algorithm. Integration rules are active database rules that arc; used for component integration in a distributed environment. The IRS algorithm identifies rule conflicts for multiple rules triggered by the same event through static, compile-time analysis of the read and write sets of each rule. A unique aspect of the algorithm is that the conflict analysis includes the effects of nested rule execution that occurs as a result of using an execution model with an immediate coupling mode. The algorithm therefore identifies conflicts that may occur as a result of the concurrent execution of different rule triggering sequences. The rules are then formed into a priority graph before execution, defining the order in which rules triggered by the same event should be processed. Rules with the same priority can be executed concurrently. The IRS algorithm guarantees confluence in the final state of the rule execution. The IRS algorithm is applicable for rule scheduling in both distributed and centralized rule execution environments. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "A concurrent rule scheduling algorithm for active rules", "paper_id": "WOS:000244937900006"}