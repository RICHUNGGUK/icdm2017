{"auto_keywords": [{"score": 0.0047292449487169345, "phrase": "nonnegative_integers"}, {"score": 0.004535124351828787, "phrase": "adjacent_vertices"}, {"score": 0.003975200317233532, "phrase": "maximum_label"}, {"score": 0.003677280504320636, "phrase": "minimum_possible_span"}, {"score": 0.003321008590273796, "phrase": "connected_graph"}, {"score": 0.0031845067058084583, "phrase": "previously_published_exact_exponential_time_algorithms"}, {"score": 0.0030353401945270755, "phrase": "exponential_function"}, {"score": 0.002708399936381754, "phrase": "quite_a_while"}, {"score": 0.002387758958649797, "phrase": "claw-free_graphs"}, {"score": 0.002169132543304096, "phrase": "dominating_set"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graphs", " L(2,1)-labeling", " Exponential-time algorithm"], "paper_abstract": "An L(2, 1)-labeling of a graph is a mapping from its vertex set into nonnegative integers such that the labels assigned to adjacent vertices differ by at least 2, and labels assigned to vertices of distance 2 are different. The span of such a labeling is the maximum label used, and the L(2, 1)-span of a graph is the minimum possible span of its L(2, 1)-labelings. We show how to compute the L(2, 1)-span of a connected graph in time O*(2.6488(n)). Previously published exact exponential time algorithms were gradually improving the base of the exponential function from 4 to the so far best known 3, with 3 itself seemingly having been the Holy Grail for quite a while. As concerns special graph classes, we are able to solve the problem in time O*(2.5944(n)) for claw-free graphs, and in time O*(2(n-r)(2 + n/r)(r)) for graphs having a dominating set of size r. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Fast exact algorithm for L(2,1)-labeling of graphs", "paper_id": "WOS:000325905200006"}