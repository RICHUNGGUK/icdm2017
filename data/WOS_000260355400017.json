{"auto_keywords": [{"score": 0.045912844607109544, "phrase": "edit_operations"}, {"score": 0.00481495049065317, "phrase": "guided_tree_edit_distance"}, {"score": 0.004685575787741084, "phrase": "guided_tree_edit_distance_problem"}, {"score": 0.004477595431209663, "phrase": "minimum_cost_series"}, {"score": 0.004088807948906792, "phrase": "isomorphic_forests"}, {"score": 0.003767738552860633, "phrase": "third_input_forest_h"}, {"score": 0.0030017207229983385, "phrase": "efficient_algorithms"}, {"score": 0.002765776659294382, "phrase": "previous_algorithm"}, {"score": 0.0026428147559352465, "phrase": "peng"}, {"score": 0.0025951321078569625, "phrase": "ting"}, {"score": 0.002548331088496964, "phrase": "z._peng"}, {"score": 0.002502374576203785, "phrase": "h._ting"}, {"score": 0.0021436720821474973, "phrase": "combinatorial_pattern_matching"}, {"score": 0.002105013449780447, "phrase": "cpm"}], "paper_keywords": ["Design of algorithms", " String algorithms", " Edit distance", " Ordered trees"], "paper_abstract": "The guided tree edit distance problem is to find a minimum cost series of edit operations that transforms two input forests F and G into isomorphic forests F' and G' such that a third input forest H is included in F' (and G'). The edit operations are relabeling a vertex and deleting a vertex. We show efficient algorithms for this problem that are faster than the previous algorithm for this problem of Peng and Ting [Z. Peng, H. Ting, Guided forest edit distance: Better structure comparisons by using domain-knowledge, in: Proc. 18th Symposium on Combinatorial Pattern Matching (CPM), 2007, pp. 28-39]. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Faster algorithms for guided tree edit distance", "paper_id": "WOS:000260355400017"}