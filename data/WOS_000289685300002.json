{"auto_keywords": [{"score": 0.048953123174008836, "phrase": "global_synopsis"}, {"score": 0.02322730111336097, "phrase": "frequent_itemsets"}, {"score": 0.022315190045499818, "phrase": "data_streams"}, {"score": 0.016122449413928937, "phrase": "remote_sites"}, {"score": 0.008095179953920504, "phrase": "mining_results"}, {"score": 0.007539001050052401, "phrase": "central_server"}, {"score": 0.007068556260976614, "phrase": "distributed_computation_framework"}, {"score": 0.006763584917388299, "phrase": "communication_strategies"}, {"score": 0.006067435824765269, "phrase": "merging_operation"}, {"score": 0.005225087159487036, "phrase": "mining_algorithm"}, {"score": 0.0047823219739028325, "phrase": "distributed_data_streams"}, {"score": 0.004392565073466714, "phrase": "hash-based_approach"}, {"score": 0.004303830426772906, "phrase": "single_data_stream"}, {"score": 0.004034444399739595, "phrase": "distinct_remote_sites"}, {"score": 0.00395291546135423, "phrase": "mining_process"}, {"score": 0.0038862297330905836, "phrase": "first_attempt"}, {"score": 0.0038336889370744662, "phrase": "new_problem"}, {"score": 0.003532977898022071, "phrase": "maintained_global_synopsis"}, {"score": 0.003345680943026579, "phrase": "computation_resources"}, {"score": 0.0030002605593597966, "phrase": "accuracy_guarantee"}, {"score": 0.00240426758768164, "phrase": "continuously_maintained_global_synopsis"}, {"score": 0.002339601774631419, "phrase": "global_frequent_itemsets"}, {"score": 0.0023000698178350415, "phrase": "correctness_guarantees"}, {"score": 0.002230584233627327, "phrase": "accuracy_guarantee_analysis"}, {"score": 0.002126635713519051, "phrase": "synthetic_datasets"}, {"score": 0.0021049977753042253, "phrase": "real_dataset"}], "paper_keywords": ["Distributed data streams", " Data mining", " Frequent itemset", " Continuous distributed model", " Hash-based approach"], "paper_abstract": "Mining frequent itemsets over data streams has attracted much research attention in recent years. In the past, we had developed a hash-based approach for mining frequent itemsets over a single data stream. In this paper, we extend that approach to mine global frequent itemsets from a collection of data streams distributed at distinct remote sites. To speed up the mining process, we make the first attempt to address a new problem on continuously maintaining a global synopsis for the union of all the distributed streams. The mining results therefore can be yielded on demand by directly processing the maintained global synopsis. Instead of collecting and processing all the data in a central server, which may waste the computation resources of remote sites, distributed computations over the data streams are performed. A distributed computation framework is proposed in this paper, including two communication strategies and one merging operation. These communication strategies are designed according to an accuracy guarantee of the mining results, determining when and what the remote sites should transmit to the central server (named coordinator). On the other hand, the merging operation is exploited to merge the information received from the remote sites into the global synopsis maintained at the coordinator. By the strategies and operation, the goal of continuously maintaining the global synopsis can be achieved. Rooted in the continuously maintained global synopsis, we propose a mining algorithm for finding global frequent itemsets. Moreover, the correctness guarantees of the communication strategies and merging operation, and the accuracy guarantee analysis of the mining algorithm are provided. Finally, a series of experiments on synthetic datasets and a real dataset are performed to show the effectiveness and efficiency of the distributed computation framework.", "paper_title": "Mining frequent itemsets over distributed data streams by continuously maintaining a global synopsis", "paper_id": "WOS:000289685300002"}