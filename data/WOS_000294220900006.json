{"auto_keywords": [{"score": 0.048843518180451934, "phrase": "graphics_processing_units"}, {"score": 0.00481495049065317, "phrase": "vertex-centered_finite_volumes"}, {"score": 0.004545793387330536, "phrase": "navier-stokes_solver"}, {"score": 0.004498490110526062, "phrase": "steady_and_unsteady_turbulent_flows"}, {"score": 0.004359500411441827, "phrase": "triangular_and_quadrilateral_elements"}, {"score": 0.003988487841970088, "phrase": "programming_issues"}, {"score": 0.0038854765143440965, "phrase": "cpu_code"}, {"score": 0.0038252373717250687, "phrase": "gpu"}, {"score": 0.0037456980766939836, "phrase": "cuda_language"}, {"score": 0.0036680857629458816, "phrase": "cell-centered_schemes"}, {"score": 0.003554661425339528, "phrase": "vertex-centered_finite_volume_scheme"}, {"score": 0.003444732262403694, "phrase": "programming_complexity"}, {"score": 0.003118486096035156, "phrase": "delicate_gpu_memory_handling"}, {"score": 0.0029284999172756103, "phrase": "gpu_implementation"}, {"score": 0.0028527866590859967, "phrase": "fortran_code"}, {"score": 0.0027936239349923464, "phrase": "single_cpu_core"}, {"score": 0.002750056254309311, "phrase": "developed_gpu-enabled_code"}, {"score": 0.0026649432435828842, "phrase": "steady_and_unsteady_flows"}, {"score": 0.0025288869172313674, "phrase": "transonic_buffet_phenomenon"}, {"score": 0.0024250482323322606, "phrase": "nvidia's_ge-force_gtx"}, {"score": 0.002253461585851626, "phrase": "single_gpu"}, {"score": 0.002218299213266519, "phrase": "double_precision_arithmetic"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["computational fluid dynamics", " Graphics Processing Units", " unsteady flows", " unstructured/hybrid grids", " transonic buffet"], "paper_abstract": "This paper presents a Navier-Stokes solver for steady and unsteady turbulent flows on unstructured/hybrid grids, with triangular and quadrilateral elements, which was implemented to run on Graphics Processing Units (GPUs). The paper focuses on programming issues for efficiently porting the CPU code to the GPU, using the CUDA language. Compared with cell-centered schemes, the use of a vertex-centered finite volume scheme on unstructured grids increases the programming complexity since the number of nodes connected by edge to any other node might vary a lot. Thus, delicate GPU memory handling is absolutely necessary in order to maximize the speed-up of the GPU implementation with respect to the Fortran code running on a single CPU core. The developed GPU-enabled code is used to numerically study steady and unsteady flows around the supercritical airfoil OAT15A, by laying emphasis on the transonic buffet phenomenon. The computations were carried out on NVIDIA's Ge-Force GTX 285 graphics cards and speed-ups up to similar to 46x (on a single GPU, with double precision arithmetic) are reported. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Unsteady CFD computations using vertex-centered finite volumes for unstructured grids on Graphics Processing Units", "paper_id": "WOS:000294220900006"}