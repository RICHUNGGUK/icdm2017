{"auto_keywords": [{"score": 0.03658033990527774, "phrase": "parameter_variables"}, {"score": 0.028964411436954378, "phrase": "p-acd_model"}, {"score": 0.00481495049065317, "phrase": "parameterized_activity_cycle_diagram"}, {"score": 0.0046781613377273774, "phrase": "classical_activity_cycle_diagram"}, {"score": 0.004501774379030109, "phrase": "bipartite_directed_graph"}, {"score": 0.004270003565426343, "phrase": "dynamic_behavior"}, {"score": 0.004208881856146758, "phrase": "discrete-event_system"}, {"score": 0.004050116768809519, "phrase": "classical_acd_model"}, {"score": 0.003953932197201054, "phrase": "system_size"}, {"score": 0.0038230844545071303, "phrase": "enriched_acd"}, {"score": 0.003422781254306241, "phrase": "parameter_values"}, {"score": 0.003293570937654716, "phrase": "directed_arc"}, {"score": 0.0031845067058084583, "phrase": "single_pacd_model"}, {"score": 0.0030790429005600898, "phrase": "entire_class"}, {"score": 0.0029914213495838998, "phrase": "different_acd_models"}, {"score": 0.002850875630787708, "phrase": "well-known_activity"}, {"score": 0.002690886043654469, "phrase": "prototype_p-acd_simulator"}, {"score": 0.0025644240336018045, "phrase": "illustrative_example"}, {"score": 0.002527654365712841, "phrase": "conveyor-driven_serial_production_line"}, {"score": 0.002251813863195168, "phrase": "proposed_p-acd"}, {"score": 0.002219516542316085, "phrase": "effective_and_concise_modeling"}, {"score": 0.0021876814398268775, "phrase": "job_shop"}, {"score": 0.0021049977753042253, "phrase": "classical_acd."}], "paper_keywords": ["Activity cycle diagram (ACD)", " parameterized ACD", " activity transition table", " activity scanning algorithm", " discrete-event simulation modeling"], "paper_abstract": "The classical activity cycle diagram (ACD), which is a bipartite directed graph, is easy to learn and use for describing the dynamic behavior of a discrete-event system. However, the complexity of the classical ACD model increases rapidly as the system size increases. This article presents an enriched ACD called the parameterized ACD (P-ACD). In P-ACD, each node is allowed to have parameter variables, and parameter values are passed to the parameter variables through a directed arc. This article demonstrates how a single PACD model can be used to represent an entire class of very large-scale systems instead of requiring different ACD models for every instance. We also illustrate that the well-known activity scanning algorithm can be used to execute a P-ACD model. A prototype P-ACD simulator implemented in C# programming language is provided, and an illustrative example of a conveyor-driven serial production line with the prototype simulator is presented to illustrate construction and execution of a P-ACD model. In addition, it is demonstrated that the proposed P-ACD allows an effective and concise modeling of a job shop, which was not possible with the classical ACD.", "paper_title": "Parameterized Activity Cycle Diagram and Its Application", "paper_id": "WOS:000329124400004"}