{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "free_name"}, {"score": 0.03396170853862642, "phrase": "structural_congruence"}, {"score": 0.013191802238045251, "phrase": "reaction_semantics"}, {"score": 0.004236908273106904, "phrase": "process_algebras"}, {"score": 0.0041136473765874815, "phrase": "transition_semantics"}, {"score": 0.0036194914688460656, "phrase": "labelled_transition_semantics"}, {"score": 0.0031223774204093713, "phrase": "recursive_declarations"}, {"score": 0.002943147037670826, "phrase": "standard_definition"}, {"score": 0.0025638362414466278, "phrase": "fixed_point_approach"}, {"score": 0.0024405312482831646, "phrase": "free_names"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["process algebras", " reaction semantics", " concurrency"], "paper_abstract": "There are two popular approaches to specifying the semantics of process algebras: labelled transition semantics and reaction semantics. While the notion of free name is rather unproblematic for labelled transition semantics this is not so for reaction semantics in the presence of a structural congruence for unfolding recursive declarations. We show that the standard definition of free name is not preserved under the structural congruence. We then develop a fixed point approach to the set of free names and show that it is invariant under the structural congruence. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "What is a free name in a process algebra?", "paper_id": "WOS:000248168000004"}