{"auto_keywords": [{"score": 0.04468171463509881, "phrase": "n_rounds"}, {"score": 0.03867712206987224, "phrase": "last_surviving_element"}, {"score": 0.026920278563312996, "phrase": "last_survivor"}, {"score": 0.0047415081747150065, "phrase": "classic_josephus_problem"}, {"score": 0.004407599980762272, "phrase": "skip_value_k"}, {"score": 0.004065721092116729, "phrase": "current_position"}, {"score": 0.003988293689448734, "phrase": "kth_remaining_element"}, {"score": 0.003750260412839128, "phrase": "special_attention"}, {"score": 0.0035536228914319354, "phrase": "popular_problem"}, {"score": 0.0034993519231560637, "phrase": "uniform_number"}, {"score": 0.003265175268104804, "phrase": "lth_time"}, {"score": 0.0029428772818833166, "phrase": "nth_fibonacci_number"}, {"score": 0.002273605493468005, "phrase": "first_result"}, {"score": 0.0021792693001152896, "phrase": "entire_sequence"}, {"score": 0.0021049977753042253, "phrase": "arithmetic_operations"}], "paper_keywords": ["Josephus problem", " Fibonacci number", " Chinese remainder theorem", " Bertrand's postulate", " Number theory", " Algorithm"], "paper_abstract": "In the classic Josephus problem, elements 1, 2,..., n are placed in order around a circle and a skip value k is chosen. The problem proceeds in n rounds, where each round consists of traveling around the circle from the current position, and selecting the kth remaining element to be eliminated from the circle. After n rounds, every element is eliminated. Special attention is given to the last surviving element, denote it by j. We generalize this popular problem by introducing a uniform number of lives l, so that elements are not eliminated until they have been selected for the lth time. We prove two main results: 1) When n and k are fixed, then j is constant for all values of l larger than the nth Fibonacci number. In other words, the last surviving element stabilizes with respect to increasing the number of lives. 2) When n and j are fixed, then there exists a value of k that allows j to be the last survivor simultaneously for all values of l. In other words, certain skip values ensure that a given position is the last survivor, regardless of the number of lives. For the first result we give an algorithm for determining j (and the entire sequence of selections) that uses O(n(2)) arithmetic operations.", "paper_title": "The Feline Josephus Problem", "paper_id": "WOS:000299091300003"}