{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "overestimated_utilities"}, {"score": 0.004684157900507474, "phrase": "high_utility_itemset_mining"}, {"score": 0.004241914481080374, "phrase": "high_utility_itemsets"}, {"score": 0.003992385826251404, "phrase": "huge_range"}, {"score": 0.003948613642680196, "phrase": "real_world_applications"}, {"score": 0.0038838500580958744, "phrase": "retail_market_data_analysis"}, {"score": 0.003841263262252044, "phrase": "stock_market_prediction"}, {"score": 0.0034975571855450373, "phrase": "large_number"}, {"score": 0.003459191419478298, "phrase": "candidate_itemsets"}, {"score": 0.0033837135367113004, "phrase": "mining_performance"}, {"score": 0.003030247482854539, "phrase": "mining_process"}, {"score": 0.002915437843874821, "phrase": "tree_structure"}, {"score": 0.0028675712105299496, "phrase": "miq-tree"}, {"score": 0.002713604305939145, "phrase": "database_information"}, {"score": 0.0026252106881752067, "phrase": "proposed_data_structure"}, {"score": 0.0025257081555100556, "phrase": "performance_evaluation"}, {"score": 0.0024842242921857705, "phrase": "mu-growth"}, {"score": 0.002261666793030715, "phrase": "overestimated_methods"}, {"score": 0.002175913488493802, "phrase": "similar_memory_usage"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Candidate pruning", " Data mining", " High utility itemsets", " Single-pass tree construction", " Utility mining"], "paper_abstract": "High utility itemset mining considers the importance of items such as profit and item quantities in transactions. Recently, mining high utility itemsets has emerged as one of the most significant research issues due to a huge range of real world applications such as retail market data analysis and stock market prediction. Although many relevant algorithms have been proposed in recent years, they incur the problem of generating a large number of candidate itemsets, which degrade mining performance. In this paper, we propose an algorithm named MU-Growth (Maximum Utility Growth) with two techniques for pruning candidates effectively in mining process. Moreover, we suggest a tree structure, named MIQ-Tree (Maximum Item Quantity Tree), which captures database information with a single-pass. The proposed data structure is restructured for reducing overestimated utilities. Performance evaluation shows that MU-Growth not only decreases the number of candidates but also outperforms state-of-the-art tree-based algorithms with overestimated methods in terms of runtime with a similar memory usage. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "High utility itemset mining with techniques for reducing overestimated utilities and pruning candidates", "paper_id": "WOS:000331682100027"}