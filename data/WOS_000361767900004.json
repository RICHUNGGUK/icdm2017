{"auto_keywords": [{"score": 0.029866053313786035, "phrase": "aggregate_lineage"}, {"score": 0.00481495049065317, "phrase": "sum_aggregate_queries"}, {"score": 0.0047517225918491226, "phrase": "ai_systems"}, {"score": 0.004331675965350876, "phrase": "aggregate_and_specifically_sum_functions"}, {"score": 0.0041357305373417455, "phrase": "data's_attributes"}, {"score": 0.0036958398682001015, "phrase": "big_parts"}, {"score": 0.0034363735647539267, "phrase": "big_data"}, {"score": 0.0033911868693238894, "phrase": "new_types"}, {"score": 0.0033465923623290034, "phrase": "intelligent_analytics"}, {"score": 0.003010250522930773, "phrase": "randomised_algorithm"}, {"score": 0.002931569771634119, "phrase": "small_summary"}, {"score": 0.0026194209399161184, "phrase": "large_values"}, {"score": 0.002279217896185919, "phrase": "original_data"}, {"score": 0.0021049977753042253, "phrase": "sum_queries"}], "paper_keywords": ["Artificial intelligence", " databases", " aggregate queries", " database lineage", " query approximation", " randomised algorithms"], "paper_abstract": "AI systems typically make decisions and find patterns in data based on the computation of aggregate and specifically sum functions, expressed as queries, on data's attributes. This computation can become costly or even inefficient when these queries concern the whole or big parts of the data and especially when we are dealing with big data. New types of intelligent analytics require also the explanation of why something happened. In this paper we present a randomised algorithm that constructs a small summary of the data, called Aggregate Lineage, which can approximate well and explain all sums with large values in time that depends only on its size. The size of Aggregate Lineage is practically independent on the size of the original data. Our algorithm does not assume any knowledge on the set of sum queries to be approximated.", "paper_title": "Efficient lineage for SUM aggregate queries", "paper_id": "WOS:000361767900004"}