{"auto_keywords": [{"score": 0.04293812570249548, "phrase": "non-observable_behaviour"}, {"score": 0.00481495049065317, "phrase": "equivalence_relations"}, {"score": 0.004782848614014638, "phrase": "transition_systems"}, {"score": 0.004533585346030341, "phrase": "related_pair"}, {"score": 0.0041837333868790134, "phrase": "existing_bisimulation_relations"}, {"score": 0.0040324997782003455, "phrase": "temporal_logic_formulas"}, {"score": 0.003978866233891427, "phrase": "next_step_operator"}, {"score": 0.00368397861425962, "phrase": "branching_bisimulations"}, {"score": 0.003622811707147052, "phrase": "natural_number"}, {"score": 0.0035746075891407224, "phrase": "nesting_depth"}, {"score": 0.0035388743851813512, "phrase": "x_operators"}, {"score": 0.003343007152920687, "phrase": "glabbeek_and_weijland's_notion"}, {"score": 0.003287482882222731, "phrase": "explicit_divergence"}, {"score": 0.0032328778271536454, "phrase": "novel_parameterised_relation"}, {"score": 0.0030950988205648605, "phrase": "x_operator-nesting_depth"}, {"score": 0.0030233510365494406, "phrase": "specified_parameter"}, {"score": 0.0029237213120317227, "phrase": "next-preserving_bisimulations"}, {"score": 0.002808477620731167, "phrase": "strong_bisimulation"}, {"score": 0.0026618355977665745, "phrase": "advanced_slicing_procedure"}, {"score": 0.0026263842544386948, "phrase": "formula-specific_slice"}, {"score": 0.002582731586309754, "phrase": "reduced_model"}, {"score": 0.0024152394732063908, "phrase": "novel_procedure"}, {"score": 0.0023122257999320527, "phrase": "original_model"}, {"score": 0.0021549990311897347, "phrase": "overall_verification_process"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Bisimulation", " Transition system", " Temporal logic", " CTL*", " Model checking", " Slicing", " Behavior Trees"], "paper_abstract": "Bisimulations are equivalence relations between transition systems which assure that certain aspects of the behaviour of the systems are the same in a related pair. For many applications it is not possible to maintain such an equivalence unless non-observable (stuttering) behaviour is ignored. However, existing bisimulation relations which permit the removal of non-observable behaviour are unable to preserve temporal logic formulas referring to the next step operator. In this paper we propose a family of next-preserving branching bisimulations to overcome this limitation. Next-preserving branching bisimulations are parameterised with a natural number, indicating the nesting depth of the X operators that the bisimulation preserves, while still allowing non-observable behaviour to be reduced. Based on van Glabbeek and Weijland's notion of branching bisimulation with explicit divergence, we define the novel parameterised relation for which we prove the preservation of CTL* formulas with an X operator-nesting depth that is not greater than the specified parameter. It can be shown that the family of next-preserving bisimulations constitutes a hierarchy that fills the gap between branching bisimulation and strong bisimulation. As an example for its application we show how this definition gives rise to an advanced slicing procedure that creates a formula-specific slice, which constitutes a reduced model of the system that can be used as a substitute when verifying this formula. The result is a novel procedure for generating slices that are next-preserving branching bisimilar to the original model for any formula. We can assure that each slice preserves the formula it corresponds to, which renders the overall verification process sound. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Next-preserving branching bisimulation", "paper_id": "WOS:000358625800007"}