{"auto_keywords": [{"score": 0.015719716506582538, "phrase": "continuous_online_memory_testing"}, {"score": 0.015547084727554788, "phrase": "multi-threading_extension"}, {"score": 0.008171838768156773, "phrase": "parsec_benchmarks"}, {"score": 0.00470862827326028, "phrase": "today's_computers"}, {"score": 0.0046046429665581555, "phrase": "main_memory"}, {"score": 0.004528156929805637, "phrase": "improved_dram_density"}, {"score": 0.00445293569103488, "phrase": "density_increases"}, {"score": 0.004403480614319231, "phrase": "smaller_bit_cells"}, {"score": 0.004141093507753515, "phrase": "error_susceptibility"}, {"score": 0.004027031316965272, "phrase": "memory_resiliency"}, {"score": 0.00389427992231721, "phrase": "memory_health"}, {"score": 0.003601235776892337, "phrase": "software-only_self-test"}, {"score": 0.0031140747752837826, "phrase": "chip_multiprocessors"}, {"score": 0.0030451958332949735, "phrase": "memory_health_simultaneously_with_execution_of_single_and_multi-threaded_applications"}, {"score": 0.002784540221128404, "phrase": "fixed_time_interval"}, {"score": 0.002707741309851526, "phrase": "lurking_errors"}, {"score": 0.0023021895404322767, "phrase": "tlb_shootdowns"}, {"score": 0.002276566401216226, "phrase": "application_performance"}, {"score": 0.0022386642196006567, "phrase": "additional_page_migrations"}, {"score": 0.0021049977753042253, "phrase": "physical_memory"}], "paper_keywords": ["Self testing", " errors", " resilience", " memory"], "paper_abstract": "Today's computers have gigabytes of main memory due to improved DRAM density. As density increases, smaller bit cells become more susceptible to errors. With an increase in error susceptibility, the need for memory resiliency also increases. Self-testing of memory health can proactively check for errors to improve resiliency. This paper describes a software-only self-test to continuously test memory. We present the challenges and design for an approach, called Continuous Online Memory Testing with Multi-threading Extension (COMeT+), that targets chip multiprocessors. COMeT+ tests memory health simultaneously with execution of single and multi-threaded applications in anticipation of allocation requests. The approach guarantees that memory is tested within a fixed time interval to limit exposure to lurking errors. We developed and evaluated an implementation of COMeT+. On the SPEC CPU2006 and the PARSEC benchmarks, COMeT+ has a low 4% average performance overhead. On the PARSEC benchmarks, the effect of TLB shootdowns on application performance due to additional page migrations caused by COMeT+ was insignificant. When emulated errors were injected into physical memory, applications executed 1.13x to 4.41x longer with COMeT+ than without it.", "paper_title": "COMeT plus : Continuous Online Memory Testing with Multi-Threading Extension", "paper_id": "WOS:000338511000006"}