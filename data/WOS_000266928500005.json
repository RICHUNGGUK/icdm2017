{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "recommendation_systems"}, {"score": 0.004559661374976129, "phrase": "binary_preference"}, {"score": 0.003683097597914604, "phrase": "unit_cost"}, {"score": 0.003424771860049617, "phrase": "minimal_cost"}, {"score": 0.00330246222643051, "phrase": "similar_preference_vectors"}, {"score": 0.0032135959043774085, "phrase": "similar_\"taste"}, {"score": 0.0028813415821988156, "phrase": "public_billboard"}, {"score": 0.0025833500717948343, "phrase": "distributed_randomized_peer-to-peer_algorithm"}, {"score": 0.0024349853033241663, "phrase": "best_possible_approximation"}, {"score": 0.002401972657236928, "phrase": "player's_real_preference_vector"}, {"score": 0.0022743274702883456, "phrase": "adversarial_preferences"}, {"score": 0.0022537212268979507, "phrase": "previous_algorithms"}, {"score": 0.0021436720821474973, "phrase": "preference_vectors"}, {"score": 0.0021049977753042253, "phrase": "polynomial_overhead"}], "paper_keywords": ["Recommendation systems", " Collaborative filtering", " Randomized algorithms", " Electronic commerce", " Probes", " Billboard"], "paper_abstract": "We consider a model of recommendation systems, where each member from a given set of players has a binary preference to each element in a given set of objects: intuitively, each player either likes or dislikes each object. However, the players do not know their preferences. To find his preference of an object, a player may probe it, but each probe incurs unit cost. The goal of the players is to learn their complete preference vector (approximately) while incurring minimal cost. This is possible if many players have similar preference vectors: such a set of players with similar \"taste\" may split the cost of probing all objects among them, and share the results of their probes by posting them on a public billboard. The problem is that players do not know a priori whose taste is close to theirs. In this paper we present a distributed randomized peer-to-peer algorithm in which each player outputs a vector which is close to the best possible approximation of the player's real preference vector after a polylogarithmic number of rounds. The algorithm works under adversarial preferences. Previous algorithms either made severely limiting assumptions on the structure of the preference vectors, or had polynomial overhead.", "paper_title": "Tell Me Who I Am: An Interactive Recommendation System", "paper_id": "WOS:000266928500005"}