{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "relational_framework"}, {"score": 0.004703671193348433, "phrase": "possibilistic_logic"}, {"score": 0.004559270778306828, "phrase": "flexible_querying_systems"}, {"score": 0.004384960761826366, "phrase": "logical_framework"}, {"score": 0.004217286731331736, "phrase": "satisfaction_degrees"}, {"score": 0.004024485331377682, "phrase": "query_satisfaction"}, {"score": 0.003389704997952315, "phrase": "._cases"}, {"score": 0.002810520668490478, "phrase": "conventional_relational_databases"}, {"score": 0.002619748321217153, "phrase": "elementary_query_conditions"}, {"score": 0.002559072326933071, "phrase": "query_conditions"}, {"score": 0.0023300677028248776, "phrase": "traditional_selection"}, {"score": 0.002206045784326466, "phrase": "motivated_examples"}, {"score": 0.0021049977753042253, "phrase": "used_concepts"}], "paper_keywords": ["flexible querying", " conventional relational databases", " preferences", " select-project-join operations"], "paper_abstract": "Traditionally, flexible querying systems are supported by a logical framework that is based on satisfaction degrees. Alternatively, certainty about query satisfaction can also be modelled by possibility and necessity measures. This approach was extended by our group in order to handle the. cases of missing information more adequately. In this paper, it is presented how our extended logical framework can be used to support flexible querying on conventional relational databases. The handling of preferences, both inside elementary query conditions and between query conditions, is presented, as well as the extension of the traditional selection, projection and join operators. Motivated examples are provided to illustrate the used concepts. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Flexible querying in a relational framework supported by possibilistic logic", "paper_id": "WOS:000256820300004"}