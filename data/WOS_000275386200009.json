{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "self-stabilizing_algorithms"}, {"score": 0.0044466988529842134, "phrase": "dijkstra"}, {"score": 0.00436575511349828, "phrase": "distributed_system"}, {"score": 0.004081385289516914, "phrase": "initial_state"}, {"score": 0.0037231102027070724, "phrase": "finite_time"}, {"score": 0.0031360786664165093, "phrase": "graph_algorithms"}, {"score": 0.0025615908073796027, "phrase": "set_problems"}, {"score": 0.0024389277933858054, "phrase": "graph_theoretic_problems"}, {"score": 0.0022797772939670063, "phrase": "large_number"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Distributed algorithm", " Self-stabilization", " Graph algorithm", " Independence", " Domination", " Coloring", " Matching"], "paper_abstract": "Dijkstra defined a distributed system to be self-stabilizing if, regardless of the initial state, the system is guaranteed to reach a legitimate (correct) state in a finite time. Even though the concept of self-stabilization received little attention when it was introduced, it has become one of the most popular fault tolerance approaches. On the other hand, graph algorithms form the basis of many network protocols. They are used in routing, clustering, multicasting and many other tasks. The objective of this paper is to survey the self-stabilizing algorithms for dominating and independent set problems, colorings, and matchings. These graph theoretic problems are well studied in the context of self-stabilization and a large number of algorithms have been proposed for them. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "A survey on self-stabilizing algorithms for independence, domination, coloring, and matching in graphs", "paper_id": "WOS:000275386200009"}