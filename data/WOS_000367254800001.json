{"auto_keywords": [{"score": 0.0444227308407221, "phrase": "synchronization_techniques"}, {"score": 0.00481495049065317, "phrase": "synchronization_synchrobench"}, {"score": 0.004551199992546761, "phrase": "concurrent_algorithms"}, {"score": 0.003940706575253453, "phrase": "recent_literature"}, {"score": 0.0038432351747230997, "phrase": "intel"}, {"score": 0.003795335309109018, "phrase": "sun_microsystems"}, {"score": 0.0037480820185465677, "phrase": "amd."}, {"score": 0.0035206210784792117, "phrase": "java"}, {"score": 0.00347657813672945, "phrase": "new_micro-benchmark_suite"}, {"score": 0.0034118234596993836, "phrase": "synchrobench"}, {"score": 0.003265365666305185, "phrase": "new_data_structures"}, {"score": 0.0031646057802503526, "phrase": "main_conclusion"}, {"score": 0.0028091907694771613, "phrase": "best_performance"}, {"score": 0.0025409639091476363, "phrase": "transactional_memory"}, {"score": 0.0021049977753042253, "phrase": "efficient_algorithms"}], "paper_keywords": ["Benchmark", " data structure", " reusability", " lock-freedom"], "paper_abstract": "In this paper, we present the most extensive comparison of synchronization techniques. We evaluate 5 different synchronization techniques through a series of 31 data structure algorithms from the recent literature on 3 multicore platforms from Intel, Sun Microsystems and AMD. To this end, we developed in C/C++ and Java a new micro-benchmark suite, called Synchrobench, hence helping the community evaluate new data structures and synchronization techniques. The main conclusion of this evaluation is threefold: (i) although compare-and-swap helps achieving the best performance on multicores, doing so correctly is hard; (ii) optimistic locking offers varying performance results while transactional memory offers more consistent results; and (iii) copy-on-write and read-copy-update suffer more from contention than any other technique but could be combined with others to derive efficient algorithms.", "paper_title": "More Than You Ever Wanted to Know about Synchronization Synchrobench, Measuring the Impact of the Synchronization on Concurrent Algorithms", "paper_id": "WOS:000367254800001"}