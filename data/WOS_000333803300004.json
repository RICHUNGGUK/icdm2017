{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "shortest_path_problems"}, {"score": 0.0047152877145889656, "phrase": "forbidden_paths"}, {"score": 0.0043367547691560175, "phrase": "shortest_path_problem"}, {"score": 0.0036680857629458785, "phrase": "optimal_path"}, {"score": 0.003444732262403694, "phrase": "most-efficient_algorithm"}, {"score": 0.003069867656852932, "phrase": "polynomial_time_complexity"}, {"score": 0.0027356847952125433, "phrase": "pseudo-polynomial_time_complexity"}, {"score": 0.002241679436497569, "phrase": "non_elementary_forbidden_paths"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["shortest path", " dynamic programming", " forbidden path"], "paper_abstract": "We consider the variant of the shortest path problem in which a given set of paths is forbidden to occur as a subpath in an optimal path. We establish that the most-efficient algorithm for its solution, a dynamic programming algorithm, has polynomial time complexity; it had previously been conjectured that the algorithm has pseudo-polynomial time complexity. Furthermore, we show that this algorithm can be extended, without increasing its time complexity, to handle non elementary forbidden paths. (c) 2014 Wiley Periodicals, Inc. NETWORKS, Vol. 63(3), 239-242 2014", "paper_title": "A note on shortest path problems with forbidden paths", "paper_id": "WOS:000333803300004"}