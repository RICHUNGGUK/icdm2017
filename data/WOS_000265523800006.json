{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "conjunctive_queries"}, {"score": 0.004775918707955445, "phrase": "description_logic_programs"}, {"score": 0.004604136423327813, "phrase": "semantic_web"}, {"score": 0.004566805735863274, "phrase": "nonmonotonic_description_logic_programs"}, {"score": 0.004366808573435364, "phrase": "powerful_formalism"}, {"score": 0.004331393784852601, "phrase": "couple_nonmonotonic_logic_programming"}, {"score": 0.004296264970612285, "phrase": "description_logic"}, {"score": 0.004226856126282259, "phrase": "clear_semantic_basis"}, {"score": 0.003960224426500707, "phrase": "cq"}, {"score": 0.00384888690376059, "phrase": "ucq"}, {"score": 0.003802135020791801, "phrase": "description_logics_knowledge_bases"}, {"score": 0.003710323357333052, "phrase": "disjunctive_rules"}, {"score": 0.0036652492107503956, "phrase": "novel_formalism"}, {"score": 0.0035477010181860376, "phrase": "increased_expressivity"}, {"score": 0.0032700071110068323, "phrase": "unnamed_individuals"}, {"score": 0.0030017265292778374, "phrase": "nexp"}, {"score": 0.0028467558213723697, "phrase": "logic_programming_system"}, {"score": 0.002581324549141829, "phrase": "specific_support"}, {"score": 0.002398583143633569, "phrase": "program_rewriting"}, {"score": 0.002350152413458658, "phrase": "respective_generic_rewriting_algorithms"}, {"score": 0.0022933216359142736, "phrase": "cq-program_prototype_show"}, {"score": 0.0022378620428620782, "phrase": "significant_performance_improvements"}, {"score": 0.0021396386320044172, "phrase": "useful_basis"}, {"score": 0.0021049977753042253, "phrase": "cq-program_optimization"}], "paper_keywords": ["Hybrid rule languages", " Conjunctive queries and description logics", " Answer set programming", " Semantic web"], "paper_abstract": "Towards combining rules and ontologies for the Semantic Web, nonmonotonic Description Logic Programs (dl-programs) have been proposed as a powerful formalism to couple nonmonotonic logic programming and Description Logic reasoning on a clear semantic basis. In this paper, we present cq-programs, which enhance dl-programs with conjunctive queries (CQ) and union of conjunctive queries (UCQ) over Description Logics knowledge bases, as well as with disjunctive rules. The novel formalism has two advantages. First, it offers increased expressivity because it allows for (U)CQs in the bodies of the rules. The (U)CQs allow one to access unnamed individuals in the rules and they increase the expressivity of the formalism, as evident from the increase in complexity from NEXP to 2-EXP. And second, when implemented as a combination between a logic programming system and a DL-reasoner, this integration of rules and ontologies gives rise to strategies for optimizing calls to the DL-reasoner, by exploiting specific support for (U)CQs. To this end, we present equivalence preserving transformations which can be used for program rewriting, and we present respective generic rewriting algorithms. Experimental results for a cq-program prototype show that this can lead to significant performance improvements, and suggest that cq-programs and program rewriting provide a useful basis for dl- and cq-program optimization.", "paper_title": "Exploiting conjunctive queries in description logic programs", "paper_id": "WOS:000265523800006"}