{"auto_keywords": [{"score": 0.049139223492443776, "phrase": "self-stabilizing_algorithms"}, {"score": 0.00481495049065317, "phrase": "distance-k"}, {"score": 0.004389339243427964, "phrase": "immediate_neighbors"}, {"score": 0.004218602458288531, "phrase": "usual_self-stabilizing_model"}, {"score": 0.0037450707321601963, "phrase": "general_transformation"}, {"score": 0.003368816076401138, "phrase": "space_overhead"}, {"score": 0.0031115683920520773, "phrase": "distance-k_resource_allocation_algorithm"}, {"score": 0.0029706504420983896, "phrase": "polynomial-time_self-stabilizing_algorithm"}, {"score": 0.0025509294021449254, "phrase": "maximal_p-sets"}, {"score": 0.002294369814584028, "phrase": "recent_paper"}, {"score": 0.0022492129111567824, "phrase": "et_al"}, {"score": 0.0021903801614787423, "phrase": "distance-two_information"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["polynomial-time", " self-stabilizing", " algorithm", " k-packing", " irredundant"], "paper_abstract": "Many graph problems seem to require knowledge that extends beyond the immediate neighbors of a node. The usual self-stabilizing model only allows for nodes to make decisions based on the states of their immediate neighbors. We provide a general transformation for constructing self-stabilizing algorithms which utilize distance-k knowledge. Our transformation has both a slowdown and space overhead in n(O(logk)) and might be thought of as a distance-k resource allocation algorithm. Our main application is a polynomial-time self-stabilizing algorithm for finding maximal irredundant sets, a problem which seems to require distance-4 information. These results can be generalized to efficiently find maximal P-sets, for properties P which we call local monotonic. Our techniques extend results in a recent paper by Gairing et al. for achieving distance-two information. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Distance-k knowledge in self-stabilizing algorithms", "paper_id": "WOS:000256557900009"}