{"auto_keywords": [{"score": 0.03066950362642781, "phrase": "rti"}, {"score": 0.030521204964773844, "phrase": "hla"}, {"score": 0.00481495049065317, "phrase": "high-level_architecture"}, {"score": 0.004777744121315302, "phrase": "time-management_conversion"}, {"score": 0.004740823885631586, "phrase": "distributed_simulation"}, {"score": 0.004252793268613575, "phrase": "integration_and_interoperability_aspects"}, {"score": 0.004154908228936342, "phrase": "high_level_architecture"}, {"score": 0.003950453462399077, "phrase": "middleware_component"}, {"score": 0.0037853015963603682, "phrase": "main_issues"}, {"score": 0.0035711248264686415, "phrase": "technical_issues"}, {"score": 0.0034618794528555063, "phrase": "optimistic_approach"}, {"score": 0.0033690254452595865, "phrase": "conservative_approach"}, {"score": 0.0031537270875516108, "phrase": "time_management_converter"}, {"score": 0.003093054709625219, "phrase": "hla_based_simulation_systems"}, {"score": 0.003069112841132911, "phrase": "timac"}, {"score": 0.003033546013625887, "phrase": "state_machine"}, {"score": 0.002940697344380201, "phrase": "application_layer"}, {"score": 0.002817639725689939, "phrase": "conservative_hla_synchronization_interface"}, {"score": 0.002731381261399358, "phrase": "transparent_optimistic_execution"}, {"score": 0.0026892447164623247, "phrase": "related_benefits"}, {"score": 0.0025967927629150715, "phrase": "conservative_synchronization"}, {"score": 0.0024880904032564583, "phrase": "rti_services"}, {"score": 0.0024496978447849835, "phrase": "hla_standard"}, {"score": 0.002421291757425244, "phrase": "experimental_evaluation"}, {"score": 0.0022664208122072657, "phrase": "georgia_tech_b-rti_package"}, {"score": 0.0021463304704817873, "phrase": "simulated_demonstration_exercises"}], "paper_keywords": ["Optimistic synchronization"], "paper_abstract": "Distributed simulation allows the treatment of large/complex models by having several interacting simulators running concurrently, each one in charge of a portion of the model. In order to effectively manage integration and interoperability aspects, the standard known as High Level Architecture (HLA) has been developed, which is based on a middleware component known as Run-Time-Infrastructure (RTI). One of the main issues faced by such a standard is synchronization, so that HLA supports both conservative and optimistic approaches. However, technical issues, combined with some peculiarities of the optimistic approach, force most simulators to use the conservative approach. In order to tackle these issues, we present the design and implementation of a Time Management Converter (TiMaC) for HLA based simulation systems. TiMaC is a state machine designed to be transparently interposed between the application layer and the underlying RTI, which performs mapping of the conservative HLA synchronization interface onto the optimistic one. Such a mapping allows transparent optimistic execution (and the related benefits) for simulators originally designed to rely on conservative synchronization. This is achieved without the need to modify the RTI services or alter the HLA standard. An experimental evaluation demonstrating the viability and effectiveness of our proposal is also reported, by integrating our TiMaC implementation with the Georgia Tech B-RTI package and running on it both (A) benchmarks relying on traces from simulated demonstration exercises collected using the Joint Semi-Automated Forces (JSAF) simulation program and (B) a self-federated Personal Communication System simulation application.", "paper_title": "Transparent Optimistic Synchronization in the High-Level Architecture via Time-Management Conversion", "paper_id": "WOS:000311299500004"}