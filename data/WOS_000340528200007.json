{"auto_keywords": [{"score": 0.04670675420350503, "phrase": "energy_efficiency"}, {"score": 0.028698677865297288, "phrase": "energy_consumption"}, {"score": 0.00481495049065317, "phrase": "online_energy-efficient"}, {"score": 0.004715702140552199, "phrase": "multicore_platforms"}, {"score": 0.00465067040500426, "phrase": "acyclic_graph"}, {"score": 0.004323620278409076, "phrase": "priori_assumptions"}, {"score": 0.004234456398783788, "phrase": "task_dependencies"}, {"score": 0.004005537264228818, "phrase": "offline_profiling_data"}, {"score": 0.003909301559145041, "phrase": "novel_energy-efficient_online_scheduling_solution"}, {"score": 0.003571591012750155, "phrase": "smart_foresighted_decisions"}, {"score": 0.0034615969985956866, "phrase": "current_scheduling_decisions"}, {"score": 0.00342568771304873, "phrase": "present_and_future_deadline"}, {"score": 0.0032067276476968032, "phrase": "scheduling_tasks"}, {"score": 0.003054367741379269, "phrase": "future_deadlines"}, {"score": 0.002761340122199076, "phrase": "proposed_low-complexity_solution"}, {"score": 0.0027326751144684386, "phrase": "general_dag_model"}, {"score": 0.002648448458159033, "phrase": "existing_sophisticated_and_complex_scheduler"}, {"score": 0.002505054869094183, "phrase": "different_configurations"}, {"score": 0.0024876840172100567, "phrase": "synthetic_dags"}, {"score": 0.0023043558058824572, "phrase": "second_existing_scheduling_solution"}, {"score": 0.00221781065048839, "phrase": "low_complexities"}, {"score": 0.0021947755130109696, "phrase": "real_mobile_platform"}, {"score": 0.002127092664485508, "phrase": "workload_prediction_errors"}, {"score": 0.0021049977753042253, "phrase": "different_estimator_accuracies"}], "paper_keywords": ["Adaptive", " directed acyclic graph", " energy-efficient scheduler", " multimedia embedded systems", " online"], "paper_abstract": "Numerous directed acyclic graph (DAG) schedulers have been developed to improve the energy efficiency of various multicore platforms. However, these schedulers make a priori assumptions about the relationship between the task dependencies, and they are unable to adapt online to the characteristics of each application without offline profiling data. Therefore, we propose a novel energy-efficient online scheduling solution for the general DAG model to address the two aforementioned problems. Our proposed scheduler is able to adapt at run-time to the characteristics of each application by making smart foresighted decisions, which take into account the impact of current scheduling decisions on the present and future deadline miss rates and energy efficiency. Moreover, our scheduler is able to efficiently handle execution with very limited resources by avoiding scheduling tasks that are expected to miss their deadlines and do not have an impact on future deadlines. We validate our approach against state-of-the-art solutions. In our first set of experiments, our results with the H. 264 video decoder demonstrate that the proposed low-complexity solution for the general DAG model reduces the energy consumption by up to 15% compared to an existing sophisticated and complex scheduler that was specifically built for the H. 264 video decoder application. In our second set of experiments, our results with different configurations of synthetic DAGs demonstrate that our proposed solution is able to reduce the energy consumption by up to 55% and the deadline miss rates by up to 99% compared to a second existing scheduling solution. Finally, we show that our DAG flow manager and scheduler have low complexities on a real mobile platform and we show that our solution is resilient to workload prediction errors by using different estimator accuracies.", "paper_title": "Online Energy-Efficient Task-Graph Scheduling for Multicore Platforms", "paper_id": "WOS:000340528200007"}