{"auto_keywords": [{"score": 0.03476802033032483, "phrase": "shadd"}, {"score": 0.010435409021063343, "phrase": "architectural_defects"}, {"score": 0.00481495049065317, "phrase": "good_architecture"}, {"score": 0.004586531354697466, "phrase": "software_product"}, {"score": 0.004390192910013225, "phrase": "product_quality"}, {"score": 0.004326624385772596, "phrase": "software_architecture"}, {"score": 0.004284755353695709, "phrase": "early_insight"}, {"score": 0.004243289764306128, "phrase": "product_capabilities"}, {"score": 0.004081385289516914, "phrase": "life_cycle"}, {"score": 0.003631671435460452, "phrase": "well-known_scenario-based_methods"}, {"score": 0.0032629585038738856, "phrase": "different_characteristics"}, {"score": 0.0031231012822640672, "phrase": "scenario-based_approach"}, {"score": 0.0030778231027679464, "phrase": "proposed_method"}, {"score": 0.003018468582368033, "phrase": "critical_aspects"}, {"score": 0.0029892206557359836, "phrase": "potential_problems"}, {"score": 0.002903161412792026, "phrase": "stakeholder's_point"}, {"score": 0.0026986685585382347, "phrase": "architectural_defects_detection"}, {"score": 0.0025829353063908256, "phrase": "systematic_form"}, {"score": 0.0024481856932959227, "phrase": "real_system"}, {"score": 0.0021674482571326283, "phrase": "conventional_evaluation_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Software architectures", " Problems", " Architectural defects", " Scenario-based evaluation", " ATAM", " SHADD"], "paper_abstract": "Although a good architecture is not sufficient to guarantee the success of a software product, undoubtedly it is essential to support the product quality. Evaluating software architecture provides early insight into product capabilities and limitations. The earlier in the life cycle the problems are detected, the cheaper it is to fix them. In this paper, at first, a review on well-known scenario-based methods to evaluate software architectures is presented, and their advantages and limitations are discussed. Then, a method named SHADD with different characteristics is introduced to detect architectural defects. Using a scenario-based approach, the proposed method finds out the critical aspects and potential problems threatening the system from the stakeholder's point of view. Scenarios are then used as a basis for the process of architectural defects detection. SHADD and its elements are specified in a systematic form and an illustration of its application on the architecture of a real system is also presented. The results show that SHADD can be used to detect those architectural defects which may be uncovered during the application of conventional evaluation methods. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "SHADD: A scenario-based approach to software architectural defects detection", "paper_id": "WOS:000299803100036"}