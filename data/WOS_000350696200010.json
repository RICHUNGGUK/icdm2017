{"auto_keywords": [{"score": 0.04845849110410781, "phrase": "mapreduce"}, {"score": 0.032896243581846056, "phrase": "proposed_optimizer"}, {"score": 0.013638412241894512, "phrase": "heterogeneous_clusters"}, {"score": 0.00481495049065317, "phrase": "dynamic_network_optimizer"}, {"score": 0.0047057084749407485, "phrase": "heterogeneous_cluster"}, {"score": 0.0045726187330434025, "phrase": "popular_programming_paradigm"}, {"score": 0.00452043800760441, "phrase": "cloud_computing"}, {"score": 0.00436742595270452, "phrase": "large-scale_data"}, {"score": 0.0039841418890102925, "phrase": "hadoop's_built-in_load_balancing_algorithm"}, {"score": 0.003940462916475403, "phrase": "map"}, {"score": 0.0038492126993451337, "phrase": "excessive_network_traffic"}, {"score": 0.0037402558657576124, "phrase": "new_dynamic_network_optimizer"}, {"score": 0.0035722806911457545, "phrase": "network_traffic"}, {"score": 0.003471135453226184, "phrase": "mapreduce_jobs"}, {"score": 0.003334309053314909, "phrase": "bandwith_competition"}, {"score": 0.003221316290858497, "phrase": "network_links"}, {"score": 0.003166259444961177, "phrase": "bandwidth_utilization"}, {"score": 0.00307657476125683, "phrase": "different_types"}, {"score": 0.0027424619603260837, "phrase": "openflow_testbed"}, {"score": 0.002664749302333897, "phrase": "simulation_results"}, {"score": 0.0025596276616952516, "phrase": "significant_effect"}, {"score": 0.002530359917257626, "phrase": "increasing_bandwidth_utilization"}, {"score": 0.0022815262950738814, "phrase": "multi-path_heterogeneous_cluster"}, {"score": 0.0021049977753042253, "phrase": "real_environment"}], "paper_keywords": ["MapReduce", " OpenFlow", " Optimization", " Heterogeneous cluster"], "paper_abstract": "MapReduce is a popular programming paradigm in cloud computing due to its excellent scalability for processing large-scale data. However, MapReduce performs poorly in heterogeneous clusters. One of the reasons is that Hadoop's built-in load balancing algorithm for Map function leads to excessive network traffic. We propose a new dynamic network optimizer called OFScheduler for heterogeneous clusters to relieve the network traffic during the execution of MapReduce jobs. The optimizer focuses on reducing bandwith competition, balancing the workload of network links and increasing bandwidth utilization. The proposed optimizer tags different types of traffic and utilize the Openflow to adjust transfers of flows dynamically. We instantiate a simulator and an OpenFlow testbed for evaluation. The simulation results demonstrate that the proposed optimizer has a significant effect on increasing bandwidth utilization and improving the performance of MapReduce by 24 similar to 63 % for most of jobs in a multi-path heterogeneous cluster. The experiment results show that the proposed optimizer can be deployed into a real environment.", "paper_title": "OFScheduler: A Dynamic Network Optimizer for MapReduce in Heterogeneous Cluster", "paper_id": "WOS:000350696200010"}