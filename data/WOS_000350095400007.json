{"auto_keywords": [{"score": 0.036537166725723366, "phrase": "mesh_blocks"}, {"score": 0.00481495049065317, "phrase": "high-dimensional_structured_adaptive_mesh_refinement"}, {"score": 0.004710854091689325, "phrase": "high-dimensional_partial_differential_equations"}, {"score": 0.004568871736067739, "phrase": "low_overhead"}, {"score": 0.0044118153390803405, "phrase": "uniform_discretization"}, {"score": 0.004373398434399966, "phrase": "computational_domains"}, {"score": 0.004204602964512469, "phrase": "exponential_increase"}, {"score": 0.004167982855788402, "phrase": "problem_size"}, {"score": 0.00406001734835979, "phrase": "spatial_adaptivity"}, {"score": 0.00397217701571219, "phrase": "mesh_data"}, {"score": 0.003607630811220324, "phrase": "adaptive_scheme"}, {"score": 0.0035141291835319682, "phrase": "recursive_bisection"}, {"score": 0.0033489371483830153, "phrase": "fine_structures"}, {"score": 0.0030148941188459987, "phrase": "linear_kd-tree"}, {"score": 0.0029755458462182565, "phrase": "explicit_node_index_map"}, {"score": 0.002923876831533028, "phrase": "hierarchical_splitting"}, {"score": 0.002898378776839434, "phrase": "internal_nodes"}, {"score": 0.0027620516806198354, "phrase": "mesh_hierarchy"}, {"score": 0.0025977542995083624, "phrase": "generated_meshes"}, {"score": 0.002541469965286169, "phrase": "algorithmic_scalability"}, {"score": 0.002464709648714996, "phrase": "test_problems"}, {"score": 0.0023902621773166963, "phrase": "worst-case_complexity"}, {"score": 0.0023079225317714815, "phrase": "node_map_index"}, {"score": 0.0022480304016499605, "phrase": "average_runtime"}, {"score": 0.0022089663761854657, "phrase": "studied_examples"}, {"score": 0.0021516366862117707, "phrase": "log_n."}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Structured adaptive mesh refinement", " Anisotropic mesh", " High-dimensional", " Hierarchical data structure", " kd-tree", " Morton order", " 2:1 balancing"], "paper_abstract": "Spatial discretization of high-dimensional partial differential equations requires data representations that are of low overhead in terms of memory and complexity. Uniform discretization of computational domains quickly grows out of reach due to an exponential increase in problem size with dimensionality. Even with spatial adaptivity, the number of mesh data points can be unnecessarily large if care is not taken as to where refinement is done. This paper proposes an adaptive scheme that generates the mesh by recursive bisection, allowing mesh blocks to be arbitrarily anisotropic to allow for fine structures in some directions without over-refining in those directions that suffice with less refinement. Within this framework, the mesh blocks are organized in a linear kd-tree with an explicit node index map corresponding to the hierarchical splitting of internal nodes. Algorithms for refinement, coarsening and 2:1 balancing of a mesh hierarchy are derived. To demonstrate the capabilities of the framework, examples of generated meshes are presented and the algorithmic scalability is evaluated on a suite of test problems. In conclusion, although the worst-case complexity of sorting the nodes and building the node map index is n(2), the average runtime scaling in the studied examples is no worse than n log n. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Data structures and algorithms for high-dimensional structured adaptive mesh refinement", "paper_id": "WOS:000350095400007"}