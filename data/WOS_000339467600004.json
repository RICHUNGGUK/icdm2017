{"auto_keywords": [{"score": 0.04556042428972813, "phrase": "xml"}, {"score": 0.010705172732405014, "phrase": "compression_format"}, {"score": 0.010414689071636857, "phrase": "xml_data"}, {"score": 0.009818231496594883, "phrase": "xml_collections"}, {"score": 0.00958923153936767, "phrase": "xpath_queries"}, {"score": 0.00481495049065317, "phrase": "compressed_xml_documents"}, {"score": 0.004758188582347737, "phrase": "extensible_markup_language"}, {"score": 0.004610058444728656, "phrase": "de_facto_standard"}, {"score": 0.004573748810476845, "phrase": "semistructured_data_representation"}, {"score": 0.00453772385360173, "phrase": "data_exchange"}, {"score": 0.004396426822203258, "phrase": "well-known_shortcoming"}, {"score": 0.0038431888954930083, "phrase": "compressed_form"}, {"score": 0.003812896124654341, "phrase": "direct_access"}, {"score": 0.0037234376132464463, "phrase": "query_languages"}, {"score": 0.003679502464285035, "phrase": "xquery"}, {"score": 0.003607404191062938, "phrase": "standard_ones"}, {"score": 0.0035227556634027466, "phrase": "xml."}, {"score": 0.0034811680446852054, "phrase": "good_deal"}, {"score": 0.0034537189001268113, "phrase": "theoretical_and_practical_proposals"}, {"score": 0.0032161835102640372, "phrase": "required_access_operations"}, {"score": 0.0028110458014332187, "phrase": "compressed_representations"}, {"score": 0.0027341763737751467, "phrase": "complex_operations"}, {"score": 0.0025866699249916508, "phrase": "key_components"}, {"score": 0.0025059726551815275, "phrase": "xxs"}, {"score": 0.002437425029824563, "phrase": "natural_language_text"}, {"score": 0.0023150468182777813, "phrase": "large_subset"}, {"score": 0.0022967713922705, "phrase": "xpath_operations"}, {"score": 0.0021049977753042253, "phrase": "uncompressed_representations"}], "paper_keywords": ["Algorithms", " Performance", " Semistructured data", " XML", " XPath", " compression", " self-index"], "paper_abstract": "The eXtensible Markup Language (XML) is acknowledged as the de facto standard for semistructured data representation and data exchange on the Web and many other scenarios. A well-known shortcoming of XML is its verbosity, which increases manipulation, transmission, and processing costs. Various structure-blind and structure-conscious compression techniques can be applied to XML, and some are even access-friendly, meaning that the documents can be efficiently accessed in compressed form. Direct access is necessary to implement the query languages XPath and XQuery, which are the standard ones to exploit the expressiveness of XML. While a good deal of theoretical and practical proposals exist to solve XPath/XQuery operations on XML, only a few ones are well integrated with a compression format that supports the required access operations on the XML data. In this work we go one step further and design a compression format for XML collections that boosts the performance of XPath queries on the data. This is done by designing compressed representations of the XML data that support some complex operations apart from just accessing the data, and those are exploited to solve key components of the XPath queries. Our system, called XXS, is aimed at XML collections containing natural language text, which are compressed to within 35%-50% of their original size while supporting a large subset of XPath operations in time competitive with, and many times outperforming, the best state-of-the-art systems that work on uncompressed representations.", "paper_title": "XXS: Efficient XPath Evaluation on Compressed XML Documents", "paper_id": "WOS:000339467600004"}