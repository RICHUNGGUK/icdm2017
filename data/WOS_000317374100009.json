{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multicast_congestion_control"}, {"score": 0.004654666266471607, "phrase": "receiver"}, {"score": 0.0046018264570209765, "phrase": "layered_multicast"}, {"score": 0.004567231311385026, "phrase": "rlm"}, {"score": 0.004498812433096501, "phrase": "numerous_multicast_congestion_control_protocols"}, {"score": 0.004381529886417792, "phrase": "rlc"}, {"score": 0.004348580182733617, "phrase": "flid"}, {"score": 0.00421923944095905, "phrase": "finally_the_webrc_protocol"}, {"score": 0.003956971099850658, "phrase": "wide_range"}, {"score": 0.003927203683176278, "phrase": "network_conditions"}, {"score": 0.0037532257703888315, "phrase": "dynamic_layer_mechanism"}, {"score": 0.0037109446302945903, "phrase": "congestion_window_mechanism"}, {"score": 0.003573443857536701, "phrase": "tcp"}, {"score": 0.003415047118340286, "phrase": "unicast_and_multicast_streams"}, {"score": 0.003363830908814182, "phrase": "simulation_approximations"}, {"score": 0.0033008858616145205, "phrase": "extensive_evaluations"}, {"score": 0.003142668996712078, "phrase": "interesting_network_behaviors"}, {"score": 0.003083849594367653, "phrase": "join_time_latency_problem"}, {"score": 0.003026127736667187, "phrase": "local_testbeds"}, {"score": 0.0028271058251633815, "phrase": "art_protocols"}, {"score": 0.0027846824619356583, "phrase": "webrc"}, {"score": 0.002572158343938064, "phrase": "convergence_time"}, {"score": 0.0025049752758014602, "phrase": "good_behavior"}, {"score": 0.002476721068743341, "phrase": "mentioned_metrics"}, {"score": 0.00243033541656411, "phrase": "webrc."}, {"score": 0.002366847878952636, "phrase": "signaling_overhead"}, {"score": 0.002279011030331704, "phrase": "efficient_multicast_congestion_control"}, {"score": 0.002253299769886694, "phrase": "open_source_implementation"}, {"score": 0.002202742267484358, "phrase": "multicast_applications"}, {"score": 0.002169667676959813, "phrase": "file_transfer"}, {"score": 0.002153316680437517, "phrase": "video_streaming"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multicast", " Dynamic layering", " Congestion control", " Fairness", " Convergence time", " TCP-friendly"], "paper_abstract": "Since 1995 and the Receiver-driven Layered Multicast (RLM) protocol, numerous multicast congestion control protocols have been proposed, such as RLC, FLID-SL, FLID-DL and finally the WEBRC protocol. However these protocols suffer from some limitations and have not been extensively experimented on a wide range of network conditions. This article presents the Multicast Congestion Control (M2C) protocol, which is based on a dynamic layer mechanism and a congestion window mechanism for each receiver. M2C is designed to be TCP-friendly and to fairly share the bandwidth when competing with unicast and multicast streams. To reduce simulation approximations and to carry out extensive evaluations over the Internet we implemented M2C and several other multicast congestion control protocols. The experiments reveal interesting network behaviors, such as the join time latency problem, that simulations and local testbeds had not revealed before. We evaluated the impact of this latency on the state of the art protocols. Focusing on WEBRC and M2C, we have then defined and run a validation benchmark to qualify their behavior in terms of fairness and convergence time. These experiments show M2C robustness and good behavior for the mentioned metrics and its improvements compared to WEBRC. Furthermore, we have analyzed the signaling overhead of these protocols. Thus, M2C is an efficient multicast congestion control with an open source implementation which is easily usable by multicast applications, such as file transfer or video streaming. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Robust and fair Multicast Congestion Control (M2C)", "paper_id": "WOS:000317374100009"}