{"auto_keywords": [{"score": 0.046816430263847804, "phrase": "sn_p_systems"}, {"score": 0.026122850289158096, "phrase": "sn_p_modules"}, {"score": 0.00481495049065317, "phrase": "neural_p_systems"}, {"score": 0.004545240514015278, "phrase": "formal_verification"}, {"score": 0.004401955895933783, "phrase": "computing_power"}, {"score": 0.004024242000713225, "phrase": "transition_diagram"}, {"score": 0.003922378980031565, "phrase": "sn_p_system"}, {"score": 0.0037262941538784094, "phrase": "diagram_cycles"}, {"score": 0.0036788184374592706, "phrase": "invariants_formulae"}, {"score": 0.003054450075234415, "phrase": "asynchronous_and_sequential_sn_p_systems"}, {"score": 0.0027212777001495176, "phrase": "slight_modification"}, {"score": 0.0026693851900137953, "phrase": "standard_sn_p_systems"}, {"score": 0.002585081657512565, "phrase": "new_variant"}, {"score": 0.002273605493468005, "phrase": "string_language_acceptors"}, {"score": 0.002145942273032774, "phrase": "computing_devices"}, {"score": 0.0021049977753042253, "phrase": "finite_automata"}], "paper_keywords": ["Spiking neural P system", " Formal verification", " Universality", " Asynchronous", " Sequential", " Finite automaton", " Finite state transducer", " Systolic trellis automaton"], "paper_abstract": "This work deals with several aspects concerning the formal verification of SN P systems and the computing power of some variants. A methodology based on the information given by the transition diagram associated with an SN P system is presented. The analysis of the diagram cycles codifies invariants formulae which enable us to establish the soundness and completeness of the system with respect to the problem it tries to resolve. We also study the universality of asynchronous and sequential SN P systems and the capability these models have to generate certain classes of languages. Further, by making a slight modification to the standard SN P systems, we introduce a new variant of SN P systems with a special I/O mode, called SN P modules, and study their computing power. It is demonstrated that, as string language acceptors and transducers, SN P modules can simulate several types of computing devices such as finite automata, a-finite transducers, and systolic trellis automata.", "paper_title": "On spiking neural P systems", "paper_id": "WOS:000278267300013"}