{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "csp"}, {"score": 0.011893357651572433, "phrase": "hardware_support"}, {"score": 0.004749824776508639, "phrase": "java_chip_multiprocessor"}, {"score": 0.004664352260912174, "phrase": "memory_bandwidth_limitations"}, {"score": 0.004477595431209663, "phrase": "convenient_shared_memory_model"}, {"score": 0.004317848984770719, "phrase": "core-to-core_communication"}, {"score": 0.003996983218174335, "phrase": "multithreaded_applications"}, {"score": 0.0037506567448470163, "phrase": "message_based_communication"}, {"score": 0.003503497128638099, "phrase": "embedded_java_cmp."}, {"score": 0.003378385493203297, "phrase": "chip_communication_channels"}, {"score": 0.003141364320497748, "phrase": "shared_memory"}, {"score": 0.0030988045934942587, "phrase": "presented_solution"}, {"score": 0.00297454367746853, "phrase": "real-time_predictability_requirements"}, {"score": 0.0027532312461536704, "phrase": "noc"}, {"score": 0.00266693888510356, "phrase": "total_device_area"}, {"score": 0.0025716240685409535, "phrase": "shared_memory-based_communication"}, {"score": 0.0024460897937643032, "phrase": "raw_data_transfer"}, {"score": 0.0023372808856170386, "phrase": "application_speed-up"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Java", " Embedded systems", " Network-on-chip", " Communicating sequential processes"], "paper_abstract": "Due to memory bandwidth limitations, chip multiprocessors (CMPs) adopting the convenient shared memory model for their main memory architecture scale poorly. On-chip core-to-core communication is a solution to this problem, that can lead to further performance increase for a number of multithreaded applications. Programmatically, the Communicating Sequential Processes (CSPs) paradigm provides a sound computational model for such an architecture with message based communication. In this paper we explore hardware support for CSP in the context of an embedded Java CMP. The hardware support for CSP are on-chip communication channels, implemented by a ring-based network-on-chip (NoC), to reduce the memory bandwidth pressure on the shared memory. The presented solution is scalable and also specific for our limited resources and real-time predictability requirements. CMP architectures of three to eight processors were implemented and tested on both Altera (EP1C12, EP2C70) and Xilinx (XC3S1200e) FPGAs, showing that the NoC accounts for under 9% of the total device area used by the system. Compared to shared memory-based communication, our NoC-based solution is between 1.7 and 9.3 times faster for raw data transfer, depending on the communication and memory configuration. Application speed-up, on the other hand, is highly dependent on the type of processing, as our measurements show. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Hardware support for CSP on a Java chip multiprocessor", "paper_id": "WOS:000324667900009"}