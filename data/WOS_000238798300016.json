{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "generalized_collision_detection"}, {"score": 0.004406994912939125, "phrase": "new_dynamic_and_efficient_bounding_volume_hierarchy"}, {"score": 0.003954837422946628, "phrase": "different_ways"}, {"score": 0.003584025547693836, "phrase": "temporal_coherence"}, {"score": 0.0035141291835319682, "phrase": "lazy_evaluation_techniques"}, {"score": 0.0033452741392850523, "phrase": "significant_advantages"}, {"score": 0.0032160319265621285, "phrase": "execution_speed"}, {"score": 0.0028016507334576216, "phrase": "adaptive_low_memory_cost_implementation"}, {"score": 0.002640781900605126, "phrase": "critical_importance"}, {"score": 0.0021049977753042253, "phrase": "improved_sorting-based_method"}], "paper_keywords": ["collision detection", " deformation", " data structure simulation", " animation", " three-dimensional graphics and realism"], "paper_abstract": "In this paper, we propose a new dynamic and efficient bounding volume hierarchy for breakable objects undergoing structured and/or unstructured motion. Our object-space method is based on different ways to incrementally update the hierarchy during simulation by exploiting temporal coherence and lazy evaluation techniques. This leads to significant advantages in terms of execution speed. Furthermore, we also show how our method lends itself naturally for an adaptive low memory cost implementation, which may be of critical importance in some applications. Finally, we propose two different techniques for detecting self-intersections, one using our hierarchical data structure, and the other is an improved sorting-based method. (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "A dynamic bounding volume hierarchy for generalized collision detection", "paper_id": "WOS:000238798300016"}