{"auto_keywords": [{"score": 0.03914346881278065, "phrase": "online_setting"}, {"score": 0.00481495049065317, "phrase": "standard_dynamic_programming_solution"}, {"score": 0.004621279527317074, "phrase": "n_nodes"}, {"score": 0.004458189822972851, "phrase": "dynamic_programming_speed-up_techniques"}, {"score": 0.004300830853119242, "phrase": "quadrangle_inequality"}, {"score": 0.00421340730888561, "phrase": "totally_monotone_matrices"}, {"score": 0.003941319912895672, "phrase": "speed-up_techniques"}, {"score": 0.003343841875107018, "phrase": "worst_case"}, {"score": 0.0031277316566463978, "phrase": "entire_problem"}, {"score": 0.002986329509791943, "phrase": "major_result"}, {"score": 0.0028076592725295646, "phrase": "dynamic_programming_speed"}, {"score": 0.002546315584783112, "phrase": "new_k-medians"}, {"score": 0.002494466951433885, "phrase": "new_point"}, {"score": 0.002357249810661667, "phrase": "worst-case_time"}, {"score": 0.0022856052476424344, "phrase": "similar_techniques"}, {"score": 0.0022047613106966723, "phrase": "online_k-coverage"}, {"score": 0.0021377414429251647, "phrase": "line_problem"}], "paper_keywords": ["location", " k-median", " k-cover", " online algorithms"], "paper_abstract": "The standard dynamic programming solution to finding k-medians on a line with n nodes requires O(kn(2)) time. Dynamic programming speed-up techniques, e.g., use of the quadrangle inequality or properties of totally monotone matrices, can reduce this to O(kn) time. However, these speed-up techniques are inherently static and cannot be used in an online setting, i.e., if we want to increase the size of the problem by one new point. Then, in the worst case, we could do no better than recalculating the solution to the entire problem from scratch in O(kn) time. The major result of this paper is to show that we can maintain the dynamic programming speed up in an online setting where points are added from left to right on a line. Computing the new k-medians after adding a new point takes only O(k) amortized time and O(k log n) worst-case time (simultaneously). Using similar techniques, we can also solve the online k-coverage with uniform coverage on a line problem with the same time bounds.", "paper_title": "Online maintenance of k-medians and k-covers on a line", "paper_id": "WOS:000239170200002"}