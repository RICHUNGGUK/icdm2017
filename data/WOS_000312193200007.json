{"auto_keywords": [{"score": 0.035884478140401375, "phrase": "eti"}, {"score": 0.00481495049065317, "phrase": "set_similarity_queries"}, {"score": 0.004763895422211728, "phrase": "set_queries"}, {"score": 0.004688321299229397, "phrase": "important_topic"}, {"score": 0.004468684611798047, "phrase": "earlier_research"}, {"score": 0.004374385639298755, "phrase": "set_containment_queries"}, {"score": 0.004169394481182493, "phrase": "t-overlap_query"}, {"score": 0.004016594765266821, "phrase": "set_similarity_query"}, {"score": 0.0038487848937121204, "phrase": "traditional_algorithms"}, {"score": 0.003727527379253624, "phrase": "inverted_index"}, {"score": 0.003629392214109574, "phrase": "new_paradigm"}, {"score": 0.0035527409334589317, "phrase": "prefix_tree"}, {"score": 0.0034407781868385423, "phrase": "expanded_trie_index"}, {"score": 0.003314591878914152, "phrase": "trie_node_structure"}, {"score": 0.003244567402785763, "phrase": "new_properties"}, {"score": 0.0030923570058383355, "phrase": "toverlap_problem"}, {"score": 0.00304321897427383, "phrase": "query_nodes"}, {"score": 0.003010893527930816, "phrase": "specific_query_depth"}, {"score": 0.002900426826591769, "phrase": "new_algorithm"}, {"score": 0.002869613770219469, "phrase": "tsimilarity"}, {"score": 0.0027058852678238632, "phrase": "three-step_framework"}, {"score": 0.00260657976055413, "phrase": "extensive_experiments"}, {"score": 0.002418742283474052, "phrase": "overlap_threshold"}, {"score": 0.002393034183276193, "phrase": "dataset_size"}, {"score": 0.00232995025271599, "phrase": "distinct_elements"}], "paper_keywords": ["expanded trie index (ETI)", " set similarity query", " T-Overlap", " T-Similarity algorithm", " T-SimilarityExact algorithm"], "paper_abstract": "Set queries are an important topic and have attracted a lot of attention. Earlier research mainly concentrated on set containment queries. In this paper we focus on the T-Overlap query which is the foundation of the set similarity query. To address this issue, unlike traditional algorithms that are based on an inverted index, we design a new paradigm based on the prefix tree (trie) called the expanded trie index (ETI) which expands the trie node structure by adding some new properties. Based on ETI, we convert the TOverlap problem to finding query nodes with specific query depth equaling to T and propose a new algorithm called TSimilarity to solve T-Overlap efficiently. Then we carry out a three-step framework to extend T-Overlap to other similarity predicates. Extensive experiments are carried out to compare T-Similarity with other inverted index based algorithms from cardinality of query, overlap threshold, dataset size, the number of distinct elements and so on. Results show that T-Similarity outperforms the state-of-the-art algorithms in many aspects.", "paper_title": "ETI: an efficient index for set similarity queries", "paper_id": "WOS:000312193200007"}