{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "python"}, {"score": 0.039564040338829085, "phrase": "mtpy"}, {"score": 0.004659951478263083, "phrase": "software_package_mtpy"}, {"score": 0.004241451614311598, "phrase": "standard_mt_data_processing_and_handling_scheme"}, {"score": 0.003988901168289797, "phrase": "convenience_scripts"}, {"score": 0.0039402177950179345, "phrase": "standard_external_data_processing_and_modelling_software"}, {"score": 0.0037207397635410327, "phrase": "raw_and_pre-processed_mt_data"}, {"score": 0.0036008372531664726, "phrase": "static_compilation"}, {"score": 0.0034422330919613294, "phrase": "flexible_software_toolbox"}, {"score": 0.003290591812800382, "phrase": "respective_needs"}, {"score": 0.0031845067058084583, "phrase": "overall_functionality"}, {"score": 0.003145609726536791, "phrase": "mechanical_toolbox"}, {"score": 0.003069230909006614, "phrase": "new_tools"}, {"score": 0.0030069962181403487, "phrase": "flexible_framework"}, {"score": 0.002770389097966904, "phrase": "existing_codes"}, {"score": 0.0024700078414481297, "phrase": "everyday_work-flow"}, {"score": 0.002449839292715327, "phrase": "mt_data_processing"}, {"score": 0.0024001337476063094, "phrase": "standard_edi_data_files"}, {"score": 0.0023131855385489764, "phrase": "miniseed"}, {"score": 0.0022111720236287547, "phrase": "graphical_data_representation"}, {"score": 0.002157433262687853, "phrase": "phase_tensor_pseudosection"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Magnetotellurics", " Data processing", " Python toolbox", " Software", " Open source"], "paper_abstract": "We present the software package MTpy that allows handling, processing, and imaging of magnetotelluric (MT) data sets. Written in Python, the code is open source, containing sub-packages and modules for various tasks within the standard MT data processing and handling scheme. Besides the independent definition of classes and functions, MTpy provides wrappers and convenience scripts to call standard external data processing and modelling software. In its current state, modules and functions of MTpy work on raw and pre-processed MT data. However, opposite to providing a static compilation of software, we prefer to introduce MTpy as a flexible software toolbox, whose contents can be combined and utilised according to the respective needs of the user. Just as the overall functionality of a mechanical toolbox can be extended by adding new tools, MTpy is a flexible framework, which will be dynamically extended in the future. Furthermore, it can help to unify and extend existing codes and algorithms within the (academic) MT community. In this paper, we introduce the structure and concept of MTpy. Additionally, we show some examples from an everyday work-flow of MT data processing: the generation of standard EDI data files from raw electric (E-) and magnetic flux density (B-) field time series as input, the conversion into MiniSEED data format, as well as the generation of a graphical data representation in the form of a Phase Tensor pseudosection. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "MTpy: A Python toolbox for magnetotellurics", "paper_id": "WOS:000343631600014"}