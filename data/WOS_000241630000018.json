{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "java"}, {"score": 0.004747997855358171, "phrase": "jastadd"}, {"score": 0.004274527415193801, "phrase": "qualified_access"}, {"score": 0.004185632403886255, "phrase": "syntactic_ambiguities"}, {"score": 0.004041546659145336, "phrase": "java_name_analysis"}, {"score": 0.0035376693476114733, "phrase": "declarative_and_modular_manner"}, {"score": 0.0034640450599342488, "phrase": "jastadd_compiler_construction_system"}, {"score": 0.003010757286626405, "phrase": "informal_java_language_specification"}, {"score": 0.0028664985822266344, "phrase": "specification_transfer"}, {"score": 0.002616628760616317, "phrase": "new_concepts"}, {"score": 0.002544207840990836, "phrase": "existing_concepts"}, {"score": 0.0024912073108138613, "phrase": "iterative_manner"}, {"score": 0.002388487669097511, "phrase": "informal_language_specification"}, {"score": 0.0022580713471027996, "phrase": "context-free_and_context-dependent_concepts"}], "paper_keywords": [""], "paper_abstract": "Name analysis for Java is challenging with its complex visibility rules involving nested, scopes, inheritance, qualified access, and syntactic ambiguities. We show how Java name analysis including ambiguities related to names of variables, fields, and packages, can be implemented in a declarative and modular manner using the JastAdd compiler construction system. Declarative attributes and context-dependent rewrites enable the implementation to be modularized in the same way as the informal Java language specification. The individual rules in the specification transfer directly to equations in the implementation. Rewrites are used to define new concepts in terms of existing concepts in an iterative manner in the same way as the informal language specification. This enables equations to use both context-free and context-dependent concepts and leads to improved separation of concerns. A full Java 1.4 compiler has been implemented to validate the technique.", "paper_title": "Modular name analysis for Java using JastAdd", "paper_id": "WOS:000241630000018"}