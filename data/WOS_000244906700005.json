{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "component-based_networks"}, {"score": 0.0346777204973957, "phrase": "resource_assignment"}, {"score": 0.034296462589383216, "phrase": "resource_allocation"}, {"score": 0.004706453355638515, "phrase": "grid_computing_environment"}, {"score": 0.004247560712327667, "phrase": "alternative_composition"}, {"score": 0.004058180509184539, "phrase": "essential_driver"}, {"score": 0.003789763907758991, "phrase": "virtual_economy"}, {"score": 0.0036001255166809793, "phrase": "efficient_scheduling_algorithm"}, {"score": 0.0035390378585554547, "phrase": "completion_time"}, {"score": 0.0031393948330209255, "phrase": "available_machines"}, {"score": 0.0029483516334882862, "phrase": "residing_components"}, {"score": 0.002898291237210567, "phrase": "similar_problems"}, {"score": 0.0028006988338192375, "phrase": "multiprocessor_scheduling_literature"}, {"score": 0.0026152363154073707, "phrase": "multiple_tasks"}, {"score": 0.0024700776739384977, "phrase": "designed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["multiprocessor scheduling", " grid computing", " component-based network", " completion time"], "paper_abstract": "In a grid computing environment, it is important to be capable of agilely quantifying the quality of service achievable by each alternative composition of resources. This capability is an essential driver to not only efficiently utilizing the resources but also promoting the virtual economy. In this paper, we design an efficient scheduling algorithm of minimizing completion time for component-based networks. The performance of the network is a function of resource assignment and resource allocation. Resource assignment assigns components to available machines and resource allocation allocates the resources of each machine to the residing components. Though similar problems can be found in the multiprocessor scheduling literature, our problem is different especially because the components in our networks process multiple tasks in parallel with their successor or predecessor components. The designed algorithm is simple but effective since it incorporates the fact that the components in a network can be considered independent under a certain resource allocation policy. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Efficient scheduling algorithm for component-based networks", "paper_id": "WOS:000244906700005"}