{"auto_keywords": [{"score": 0.047510470298773616, "phrase": "tm"}, {"score": 0.00481495049065317, "phrase": "hardware_tm_limitations"}, {"score": 0.004749106104067268, "phrase": "software_fallbacks"}, {"score": 0.004312622975366676, "phrase": "known_software_fallbacks"}, {"score": 0.0041666157975446564, "phrase": "simple_locks"}, {"score": 0.004109600767747015, "phrase": "sophisticated_versions"}, {"score": 0.004025531820226182, "phrase": "norec_hybrid_tm_algorithm"}, {"score": 0.003483120583663528, "phrase": "all-software_slow_path"}, {"score": 0.00307657476125683, "phrase": "maximal_amount"}, {"score": 0.0030344301563232944, "phrase": "initial_reads"}, {"score": 0.0027361626349903744, "phrase": "novel_combination"}, {"score": 0.002680114113899346, "phrase": "rh_approach"}, {"score": 0.0026252106881752067, "phrase": "norec_algorithm"}, {"score": 0.002571429085596686, "phrase": "first_hybrid_tm"}, {"score": 0.0024501740852758505, "phrase": "hardware's_original_semantics"}, {"score": 0.002318566141177149, "phrase": "rh_norec"}, {"score": 0.0022092084106039834, "phrase": "improved_performance_relative"}, {"score": 0.0021639307835832136, "phrase": "prior_methods"}, {"score": 0.0021049977753042253, "phrase": "concurrency_levels"}], "paper_keywords": ["Algorithms", " Design", " Transactional Memory"], "paper_abstract": "Because of hardware TM limitations, software fallbacks are the only way to make TM algorithms guarantee progress. Nevertheless, all known software fallbacks to date, from simple locks to sophisticated versions of the NOrec Hybrid TM algorithm, have either limited scalability or weakened semantics. We propose a novel reduced-hardware (RH) version of the NOrec HyTM algorithm. Instead of an all-software slow path, in our RH NOrec the slow-path is a \"mix\" of hardware and software: one short hardware transaction executes a maximal amount of initial reads in the hardware, and the second executes all of the writes. This novel combination of the RH approach and the NOrec algorithm delivers the first Hybrid TM that scales while fully preserving the hardware's original semantics of opacity and privatization. Our GCC implementation of RH NOrec is promising in that it shows improved performance relative to all prior methods, at the concurrency levels we could test today.", "paper_title": "Reduced Hardware NOrec: A Safe and Scalable Hybrid Transactional Memory", "paper_id": "WOS:000370874900005"}