{"auto_keywords": [{"score": 0.030557616693411147, "phrase": "cpu"}, {"score": 0.00481495049065317, "phrase": "gpgpu_computing_for_microscopic"}, {"score": 0.004686963264680882, "phrase": "crowd_dynamics."}, {"score": 0.004562362497952548, "phrase": "gpgpu_implementations"}, {"score": 0.004401342842183475, "phrase": "crowd_dynamics"}, {"score": 0.004133055661437163, "phrase": "continuous_social_force_model"}, {"score": 0.003987126862293129, "phrase": "differential_equations"}, {"score": 0.0035473867669654174, "phrase": "non-homogeneous_cellular_automata"}, {"score": 0.003044455555031339, "phrase": "gpgpu_technology"}, {"score": 0.0027328817607818207, "phrase": "significant_characteristics"}, {"score": 0.002143247921132179, "phrase": "proposed_algorithms"}, {"score": 0.0021049977753042253, "phrase": "efficient_gpu_computations"}], "paper_keywords": ["Crowd simulation", " social force", " social distances", " cellular automata", " using GPU in simulation"], "paper_abstract": "We compare GPGPU implementations of two popular models of crowd dynamics. Specifically, we consider a continuous social force model, based on differential equations (molecular dynamics) and a discrete social distances model based on non-homogeneous cellular automata. For comparative purposes both models have been implemented in two versions: on the one hand using GPGPU technology, on the other hand using CPU only. We compare some significant characteristics of each model, for example: performance, memory consumption and issues of visualization. We also propose and test some possibilities for tuning the proposed algorithms for efficient GPU computations.", "paper_title": "GPGPU COMPUTING FOR MICROSCOPIC SIMULATIONS OF CROWD DYNAMICS", "paper_id": "WOS:000370996500010"}