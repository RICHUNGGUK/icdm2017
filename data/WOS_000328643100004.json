{"auto_keywords": [{"score": 0.039311295427493606, "phrase": "nccloud"}, {"score": 0.012845507770131197, "phrase": "data_redundancy"}, {"score": 0.00481495049065317, "phrase": "fault_tolerance"}, {"score": 0.004763565662615503, "phrase": "cloud_storage"}, {"score": 0.004712726613162057, "phrase": "recent_studies"}, {"score": 0.004637478829869904, "phrase": "stripe_data"}, {"score": 0.0045879792359519375, "phrase": "multiple_cloud_vendors"}, {"score": 0.0043482604833437735, "phrase": "permanent_failure"}, {"score": 0.004121015016128205, "phrase": "lost_data"}, {"score": 0.0038226070564362697, "phrase": "proxy-based_storage_system"}, {"score": 0.003781772207256374, "phrase": "fault-tolerant_multiple-cloud_storage"}, {"score": 0.00366185681714204, "phrase": "cost-effective_repair"}, {"score": 0.003603327452846714, "phrase": "permanent_single-cloud_failure"}, {"score": 0.0034332736827447654, "phrase": "network-coding-based_storage_scheme"}, {"score": 0.003066945490483524, "phrase": "traditional_erasure_codes"}, {"score": 0.0027841357057119295, "phrase": "data_transfer"}, {"score": 0.0026384167183586015, "phrase": "encoding_requirement"}, {"score": 0.002610198789888055, "phrase": "storage_nodes"}, {"score": 0.0024868972942701582, "phrase": "network_coding"}, {"score": 0.0023950275815082297, "phrase": "proof-of-concept_prototype"}, {"score": 0.0022453451864218477, "phrase": "fmsr_codes"}, {"score": 0.0022213218042340735, "phrase": "significant_monetary_cost_savings"}, {"score": 0.002127765807039172, "phrase": "comparable_response_time_performance"}, {"score": 0.0021049977753042253, "phrase": "normal_cloud_storage_operations"}], "paper_keywords": ["Regenerating codes", " network coding", " fault tolerance", " recovery", " implementation", " experimentation"], "paper_abstract": "To provide fault tolerance for cloud storage, recent studies propose to stripe data across multiple cloud vendors. However, if a cloud suffers from a permanent failure and loses all its data, we need to repair the lost data with the help of the other surviving clouds to preserve data redundancy. We present a proxy-based storage system for fault-tolerant multiple-cloud storage called NCCloud, which achieves cost-effective repair for a permanent single-cloud failure. NCCloud is built on top of a network-coding-based storage scheme called the functional minimum-storage regenerating (FMSR) codes, which maintain the same fault tolerance and data redundancy as in traditional erasure codes (e.g., RAID-6), but use less repair traffic and, hence, incur less monetary cost due to data transfer. One key design feature of our FMSR codes is that we relax the encoding requirement of storage nodes during repair, while preserving the benefits of network coding in repair. We implement a proof-of-concept prototype of NCCloud and deploy it atop both local and commercial clouds. We validate that FMSR codes provide significant monetary cost savings in repair over RAID-6 codes, while having comparable response time performance in normal cloud storage operations such as upload/download.", "paper_title": "NCCloud: A Network-Coding-Based Storage System in a Cloud-of-Clouds", "paper_id": "WOS:000328643100004"}