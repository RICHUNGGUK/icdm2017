{"auto_keywords": [{"score": 0.045445417733767, "phrase": "software_engineers"}, {"score": 0.03737634241271663, "phrase": "detex"}, {"score": 0.029559271850767357, "phrase": "detection_algorithms"}, {"score": 0.00481495049065317, "phrase": "design_smells"}, {"score": 0.004768649568826951, "phrase": "poor_solutions"}, {"score": 0.004722791767189843, "phrase": "recurring_implementation"}, {"score": 0.004677372885331908, "phrase": "design_problems"}, {"score": 0.004125027493339274, "phrase": "research_field"}, {"score": 0.002940095976373734, "phrase": "high_level"}, {"score": 0.002869793011316547, "phrase": "consistent_vocabulary"}, {"score": 0.0028421434495262796, "phrase": "domain-specific_language"}, {"score": 0.002530359917257626, "phrase": "swiss_army_knife"}], "paper_keywords": ["Antipatterns", " design smells", " code smells", " specification", " metamodeling", " detection", " Java"], "paper_abstract": "Code and design smells are poor solutions to recurring implementation and design problems. They may hinder the evolution of a system by making it hard for software engineers to carry out changes. We propose three contributions to the research field related to code and design smells: 1) DECOR, a method that embodies and defines all the steps necessary for the specification and detection of code and design smells, 2) DETEX, a detection technique that instantiates this method, and 3) an empirical validation in terms of precision and recall of DETEX. The originality of DETEX stems from the ability for software engineers to specify smells at a high level of abstraction using a consistent vocabulary and domain-specific language for automatically generating detection algorithms. Using DETEX, we specify four well-known design smells: the antipatterns Blob, Functional Decomposition, Spaghetti Code, and Swiss Army Knife, and their 15 underlying code smells, and we automatically generate their detection algorithms. We apply and validate the detection algorithms in terms of precision and recall on XERCES v2.7.0, and discuss the precision of these algorithms on 11 open-source systems.", "paper_title": "DECOR: A Method for the Specification and Detection of Code and Design Smells", "paper_id": "WOS:000273988900004"}