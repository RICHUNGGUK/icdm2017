{"auto_keywords": [{"score": 0.0442410131848582, "phrase": "mapreduce"}, {"score": 0.008325991969732102, "phrase": "short_tasks"}, {"score": 0.0069389916485373265, "phrase": "high_complexity"}, {"score": 0.006886468387692372, "phrase": "high_computation"}, {"score": 0.004815667814185297, "phrase": "cloud"}, {"score": 0.004688321299229397, "phrase": "priority-based_data_distribution_mechanism"}, {"score": 0.004327981760540394, "phrase": "low_response_time"}, {"score": 0.004262539473250432, "phrase": "quite_few_users"}, {"score": 0.0038605361756636667, "phrase": "processing_applications"}, {"score": 0.0035500334260484376, "phrase": "image_processing_procedures"}, {"score": 0.003378385493203297, "phrase": "intermediate_data"}, {"score": 0.003340733008194199, "phrase": "map"}, {"score": 0.0033019779616246356, "phrase": "final_output"}, {"score": 0.00293380698353469, "phrase": "current_user"}, {"score": 0.0028132529128565282, "phrase": "map_tasks"}, {"score": 0.0027706507124407686, "phrase": "final_result"}, {"score": 0.002718301574682098, "phrase": "novel_scheduling_scheme"}, {"score": 0.0026976391682197133, "phrase": "dynamic_switch_of_reduce_function"}, {"score": 0.0025282151875392817, "phrase": "next_task"}, {"score": 0.0024899186481178075, "phrase": "achieved_percentage"}, {"score": 0.0024335561337016174, "phrase": "idle_time"}, {"score": 0.002378475179389543, "phrase": "hadoop"}, {"score": 0.0022894012453842064, "phrase": "traditional_hadoop"}, {"score": 0.002246124435189668, "phrase": "experimental_results"}, {"score": 0.0021952683716334478, "phrase": "mapreduce_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["3D image", " Cloud system", " Multicast streaming", " Image processing"], "paper_abstract": "Most users process short tasks using MapReduce. In other words, most tasks handled by the Map and Reduce functions require low response time. Currently, quite few users use MapReduce for 2D to 3D image processing, which Is highly complicated and requires long execution time. However, in our opinion, MapReduce is exactly suitable for processing applications of high complexity and high computation. This paper implements MapReduce on an integrated 2D to 3D multi-user system, in which Map is responsible for image processing procedures of high complexity and high computation, and Reduce is responsible for integrating the intermediate data processed by Map for the final output. Different from short tasks, when several users compete simultaneously to acquire data from MapReduce for 2D to 3D applications, data that waits to be processed by Map will be delayed by the current user and Reduce has to wait until the completion of all Map tasks to generate the final result. Therefore, a novel scheduling scheme, Dynamic Switch of Reduce Function (DSRF) Algorithm, is proposed in this paper for MapReduce to switch dynamically to the next task according to the achieved percentage of tasks and reduce the idle time of Reduce. By using Hadoop to implement our MapReduce platform, we compare the performance of traditional Hadoop with our proposed scheme. The experimental results reveal that our proposed scheduling scheme efficiently enhances MapReduce performance in running 2D to 3D applications. (c) 2012 Elsevier B.V. All rights reserved,", "paper_title": "Cloud-based image processing system with priority-based data distribution mechanism", "paper_id": "WOS:000309697000005"}