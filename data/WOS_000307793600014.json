{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model-driven_development"}, {"score": 0.012774509437706208, "phrase": "mde"}, {"score": 0.004490212943845175, "phrase": "model-driven_engineering"}, {"score": 0.004252793268613575, "phrase": "model-based_methodological_proposals"}, {"score": 0.004059266990094632, "phrase": "development_cycle"}, {"score": 0.0037414662674652805, "phrase": "development_process"}, {"score": 0.0035711248264686415, "phrase": "supporting_frameworks"}, {"score": 0.003408512155673965, "phrase": "methodological_proposal"}, {"score": 0.0033690254452595865, "phrase": "corresponding_technical_support"}, {"score": 0.0032786537599187125, "phrase": "good_practice"}, {"score": 0.0032155857567170696, "phrase": "mandatory_requirement"}, {"score": 0.0031906984691667246, "phrase": "mde_contexts"}, {"score": 0.002963640433319524, "phrase": "methodological_and_technical_decisions"}, {"score": 0.0028067105937184954, "phrase": "information_systems"}, {"score": 0.002658068304632523, "phrase": "modern_db_schemas"}, {"score": 0.002293014162421338, "phrase": "mde_practitioners"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Model-driven engineering", " Domain-specific modeling", " Software development frameworks"], "paper_abstract": "In recent years, the impact of the model-driven engineering (MDE) paradigm has resulted in the advent of a number of model-based methodological proposals that leverage the use of models at any stage of the development cycle. Apart from promoting the role of models, MDE is notable for leveraging the level of automation along the development process. For this to be achieved there is a need of supporting frameworks, tools or environments. This way, while accompanying any methodological proposal of the corresponding technical support has been traditionally recognized as a good practice, it becomes a mandatory requirement in MDE contexts. To address this task, this work presents in a systematic and reasoned way the set of methodological and technical decisions that drove the specification of M2DAT, a technical solution for model-driven development of Information Systems and its reference implementation: M2DAT-DB, a DSL toolkit for model-driven development of modern DB schemas. The objective of this work is to put forward the conclusions and decisions derived from the experience of the authors when designing and building such framework. As a result, this work will help not only MDE practitioners, but also SE practitioners wishing to bring the advantages of MDE to their fields of interest. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "A framework for model-driven development of information systems: Technical decisions and lessons learned", "paper_id": "WOS:000307793600014"}