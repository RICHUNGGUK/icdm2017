{"auto_keywords": [{"score": 0.040012451990183516, "phrase": "prequential_error"}, {"score": 0.016315798847131073, "phrase": "fading_factors"}, {"score": 0.009158598750499137, "phrase": "decision_models"}, {"score": 0.004667149874736771, "phrase": "resource-aware_environments"}, {"score": 0.004233762728640565, "phrase": "experimental_work"}, {"score": 0.003993216345115755, "phrase": "general_framework"}, {"score": 0.003946766004066276, "phrase": "predictive_stream"}, {"score": 0.0037224647319912293, "phrase": "reliable_error_estimators"}, {"score": 0.0036221822903900725, "phrase": "stationary_data"}, {"score": 0.003580032420161922, "phrase": "consistent_learning_algorithms"}, {"score": 0.0035383712891119937, "phrase": "holdout_estimator"}, {"score": 0.0034029588672379926, "phrase": "sliding_window"}, {"score": 0.0032855095476183372, "phrase": "bayes_error"}, {"score": 0.0029224275921964724, "phrase": "proposed_methods"}, {"score": 0.0028996963188373144, "phrase": "hypothesis_testing"}, {"score": 0.002865929543375884, "phrase": "change_detection"}, {"score": 0.00277778944472107, "phrase": "drift_scenarios"}, {"score": 0.0026923527275481804, "phrase": "standard_change_detection_algorithm"}, {"score": 0.00243237365704391, "phrase": "fast_and_efficient_change_detection"}, {"score": 0.002385326947545194, "phrase": "sliding_windows"}, {"score": 0.0023029188952824685, "phrase": "important_requirements"}, {"score": 0.002163367190715979, "phrase": "best_practice"}, {"score": 0.002146527342660575, "phrase": "performance_assessment"}, {"score": 0.0021049977753042253, "phrase": "continuous_process"}], "paper_keywords": ["Data streams", " Evaluation design", " Prequential analysis", " Concept drift"], "paper_abstract": "Most streaming decision models evolve continuously over time, run in resource-aware environments, and detect and react to changes in the environment generating data. One important issue, not yet convincingly addressed, is the design of experimental work to evaluate and compare decision models that evolve over time. This paper proposes a general framework for assessing predictive stream learning algorithms. We defend the use of prequential error with forgetting mechanisms to provide reliable error estimators. We prove that, in stationary data and for consistent learning algorithms, the holdout estimator, the prequential error and the prequential error estimated over a sliding window or using fading factors, all converge to the Bayes error. The use of prequential error with forgetting mechanisms reveals to be advantageous in assessing performance and in comparing stream learning algorithms. It is also worthwhile to use the proposed methods for hypothesis testing and for change detection. In a set of experiments in drift scenarios, we evaluate the ability of a standard change detection algorithm to detect change using three prequential error estimators. These experiments point out that the use of forgetting mechanisms (sliding windows or fading factors) are required for fast and efficient change detection. In comparison to sliding windows, fading factors are faster and memoryless, both important requirements for streaming applications. Overall, this paper is a contribution to a discussion on best practice for performance assessment when learning is a continuous process, and the decision models are dynamic and evolve over time.", "paper_title": "On evaluating stream learning algorithms", "paper_id": "WOS:000314716200001"}