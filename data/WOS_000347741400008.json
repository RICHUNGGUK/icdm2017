{"auto_keywords": [{"score": 0.049465088868450476, "phrase": "programmer_productivity"}, {"score": 0.03859868948574288, "phrase": "systematic_reuse"}, {"score": 0.00481495049065317, "phrase": "well-known_means"}, {"score": 0.004712463245074863, "phrase": "decrease_development_effort"}, {"score": 0.00467207889925365, "phrase": "systematic_software_reuse"}, {"score": 0.004612147352416241, "phrase": "large_scale_reuse"}, {"score": 0.004552981066668676, "phrase": "elusive_goal"}, {"score": 0.004417848254181138, "phrase": "individual_software_artifacts"}, {"score": 0.003984141889010296, "phrase": "essential_part"}, {"score": 0.003949974260471287, "phrase": "modern_software_development"}, {"score": 0.0038825121288253435, "phrase": "mainstream_metadata_formats"}, {"score": 0.0038327843491188854, "phrase": "xml"}, {"score": 0.00380000581628449, "phrase": "java"}, {"score": 0.0032820385246266773, "phrase": "metadata_reusability"}, {"score": 0.003212074324593725, "phrase": "pattern-based_structural_expressions"}, {"score": 0.0029467742734417255, "phrase": "maintainability_advantages"}, {"score": 0.0028468767420392945, "phrase": "individual_program_components"}, {"score": 0.002810292047426252, "phrase": "entire_applications"}, {"score": 0.002750367101761396, "phrase": "pbse"}, {"score": 0.002680114113899346, "phrase": "metadata-expressed_functionality"}, {"score": 0.0025449518236394103, "phrase": "nonfunctional_concerns"}, {"score": 0.0024586427394152196, "phrase": "existing_languages"}, {"score": 0.0024061887405214186, "phrase": "emerging_languages"}, {"score": 0.0023855210798264205, "phrase": "automated_metadata_translation"}, {"score": 0.0023245746777044766, "phrase": "intrinsic_part"}, {"score": 0.002304606411453748, "phrase": "modern_software_applications"}, {"score": 0.0021601997088758957, "phrase": "development_effort"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software reuse", " Metadata", " Non-functional concerns", " Annotations", " XML", " Domain-specific language"], "paper_abstract": "Among the well-known means to increase programmer productivity and decrease development effort is systematic software reuse. Although large scale reuse remains an elusive goal, programmers have been successfully reusing individual software artifacts, including components, libraries, and specifications. One software artifact that is not amenable to reuse is metadata, which has become an essential part of modern software development. Specifically, mainstream metadata formats, including XML and Java 5 annotations, are not amenable to systematic reuse. As a result, software that uses metadata cannot fully reap the benefits traditionally associated with systematic reuse. To address this lack of metadata reusability, this article presents Pattern-Based Structural Expressions (PBSE), a new metadata format that is not only reusable, but also offers conciseness and maintainability advantages. PBSE can be reused both across individual program components and across entire applications. In addition, PBSE make it possible to reuse metadata-expressed functionality across languages. In particular, we show how implementations of nonfunctional concerns (commonly expressed through metadata) in existing languages can be reused in emerging languages via automated metadata translation. Because metadata constitutes an intrinsic part of modern software applications, the ability to systematically reuse metadata is essential for improving programmer productivity and decreasing development effort. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Reusing metadata across components, applications, and languages", "paper_id": "WOS:000347741400008"}