{"auto_keywords": [{"score": 0.04064141489786066, "phrase": "bpel"}, {"score": 0.031257882462327705, "phrase": "petri_nets"}, {"score": 0.00481495049065317, "phrase": "formal_semantics"}, {"score": 0.004730158389701481, "phrase": "control_flow"}, {"score": 0.004688321299229397, "phrase": "ws-bpel._web_service_composition"}, {"score": 0.004444921827311577, "phrase": "existing_ones"}, {"score": 0.004347256848088215, "phrase": "domain-specific_languages"}, {"score": 0.00408501512749186, "phrase": "process-oriented_language"}, {"score": 0.004030904155828147, "phrase": "ws-bpel"}, {"score": 0.003821503621554738, "phrase": "simple_communication_primitives"}, {"score": 0.0037209035703970705, "phrase": "control-flow_constructs"}, {"score": 0.0034807976670686628, "phrase": "comprehensive_and_rigorously_defined_mapping"}, {"score": 0.003404244237372396, "phrase": "petri_net_structures"}, {"score": 0.0032272929113113203, "phrase": "unreachable_activities"}, {"score": 0.003198705576491802, "phrase": "conflicting_messages"}, {"score": 0.0031703706626348507, "phrase": "garbage_collection"}, {"score": 0.0031422859551159506, "phrase": "conformance_checking"}, {"score": 0.0030459283281463953, "phrase": "interaction_processes"}, {"score": 0.002861961643289598, "phrase": "existing_theoretical_results"}, {"score": 0.0028366012006726896, "phrase": "analysis_tools"}, {"score": 0.002761856557698856, "phrase": "finite_state_machines"}, {"score": 0.0026534064006291853, "phrase": "state_space"}, {"score": 0.0025950024597986366, "phrase": "structural_analysis"}, {"score": 0.00241658945942583, "phrase": "bpel_processes"}, {"score": 0.002352886041381761, "phrase": "petri-net-based_analysis_techniques"}, {"score": 0.0022705467477443417, "phrase": "different_examples"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["business process modeling", " Web services", " BPEL", " tool-based verification", " Petri nets"], "paper_abstract": "Web service composition refers to the creation of new (Web) services by combining functionalities provided by existing ones. A number of domain-specific languages for service composition have been proposed, with consensus being formed around a process-oriented language known as WS-BPEL (or BPEL). The kernel of BPEL consists of simple communication primitives that may be combined using control-flow constructs expressing sequence, branching, parallelism, synchronization, etc. We present a comprehensive and rigorously defined mapping of BPEL constructs onto Petri net structures, and use this for the analysis of various dynamic properties related to unreachable activities, conflicting messages, garbage collection, conformance checking, and deadlocks and lifelocks in interaction processes. We use a mapping onto Petri nets because this allows us to use existing theoretical results and analysis tools. Unlike approaches based on finite state machines, we do not need to construct the state space, and can use structural analysis (e.g., transition invariants) instead. We have implemented a tool that translates BPEL processes into Petri nets and then applies Petri-net-based analysis techniques. This tool has been tested on different examples, and has been used to answer a variety of questions. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Formal semantics and analysis of control flow in WS-BPEL", "paper_id": "WOS:000248174100002"}