{"auto_keywords": [{"score": 0.04955461236891121, "phrase": "exception_handling"}, {"score": 0.027880547210140456, "phrase": "database_management_system"}, {"score": 0.00481495049065317, "phrase": "automated_insertion"}, {"score": 0.0045820747375409435, "phrase": "key_and_referential_constraints"}, {"score": 0.00373682045166829, "phrase": "mechanical_coding"}, {"score": 0.003536346954940087, "phrase": "program_transformation"}, {"score": 0.003421245054271364, "phrase": "extended_abstract_syntax_tree"}, {"score": 0.0033651019362620866, "phrase": "sql_query_semantics"}, {"score": 0.0032376465741070274, "phrase": "code_pattern"}, {"score": 0.003097865379563127, "phrase": "exception_handling_code"}, {"score": 0.0029641011108505785, "phrase": "transformation_rule"}, {"score": 0.0026543514413663893, "phrase": "built-in_enforcement_feature"}, {"score": 0.002363806685815014, "phrase": "transformation_rules"}, {"score": 0.002200077887697072, "phrase": "php_systems"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": ["Constraints Violation", " Database Query Aware AST (DB-AST)", " Exception Handling", " Key and Referential Constrains", " Structured Query Language (SQL) Query Pattern", " Transformation Rule"], "paper_abstract": "Key and referential constraints are two main integrity constraints in database applications. These constraints can be automatically enforced by the Database Management System with their exception-violation from these constraints-handled by programmers. This paper proposes an approach to relieve the burden of programmers from mechanical coding for handling exceptions of these constraints violation by using program transformation. We first propose an extended abstract syntax tree to include SQL query semantics. Based on it, each code pattern that requires exception handling together with the exception handling code to be inserted is represented as a transformation rule. We provide two alternatives to handle the exceptions: one is to handle the exceptions in conjunction with the built-in enforcement feature in Database Management System; the other is handling them without using the feature provided in Database Management System. Hence, two types of transformation rules are provided accordingly. A tool GEHPHP (Generation of Exception Handling for PHP Systems) has been developed to implement the proposed approach. Experiments have also been conducted to evaluate the applicable of the approach.", "paper_title": "Automated Insertion of Exception Handling for Key and Referential Constraints", "paper_id": "WOS:000329757400001"}