{"auto_keywords": [{"score": 0.04312685577856799, "phrase": "nonpreemptive_real-time_systems"}, {"score": 0.0047049532961375, "phrase": "multiple_power_states"}, {"score": 0.004597457370802855, "phrase": "dynamic_power_management"}, {"score": 0.00454465875679273, "phrase": "dpm"}, {"score": 0.004339293854115301, "phrase": "sleep_state"}, {"score": 0.004289419884432487, "phrase": "significant_transition_time"}, {"score": 0.004001938457469328, "phrase": "nonpreemptive_real-time_task_scheduling_schemes"}, {"score": 0.0037121208432871118, "phrase": "runtime_schedulability_check_algorithm"}, {"score": 0.0034832884999421374, "phrase": "valid_schedule"}, {"score": 0.0032122679403131537, "phrase": "first_algorithm"}, {"score": 0.003156984631072011, "phrase": "execution_sequence"}, {"score": 0.0029622717081190667, "phrase": "second_one"}, {"score": 0.002911278281894321, "phrase": "short_idle_periods"}, {"score": 0.00282822695516646, "phrase": "sleeping_state"}, {"score": 0.0027475383418803724, "phrase": "last_one"}, {"score": 0.00270023138867066, "phrase": "idle_period"}, {"score": 0.002608040688794517, "phrase": "required_devices"}, {"score": 0.0025044454602720597, "phrase": "starting_time"}, {"score": 0.002418923027024191, "phrase": "suggested_schemes"}, {"score": 0.002141898874982106, "phrase": "better_energy_efficiency"}, {"score": 0.0021049977753042253, "phrase": "existing_comparative_algorithms"}], "paper_keywords": ["Algorithms", " Theory", " Performance", " Reliability", " Dynamic power management", " DPM", " power-aware computing", " real-time scheduling", " real-time systems"], "paper_abstract": "Many I/O devices provide multiple power states known as the dynamic power management (DPM) feature. However, activating from sleep state requires significant transition time and this obstructs utilizing DPM in nonpreemptive real-time systems. This article suggests nonpreemptive real-time task scheduling schemes maximizing the effectiveness of the I/O device DPM support. First, we introduce a runtime schedulability check algorithm for nonpreemptive real-time systems that can check whether a modification from a valid schedule is still valid. By using this, we suggest three heuristic algorithms. The first algorithm reorders the execution sequence of tasks according to the similarity of their required device sets. The second one gathers dispersed short idle periods into one long idle period to extend sleeping state of I/O devices and the last one inserts an idle period between two consecutively scheduled tasks to prepare the required devices of a task right before the starting time of the task. The suggested schemes were evaluated for both the real-world task sets and the hypothetical task sets with simulation and the results showed that the suggested algorithms produced better energy efficiency than the existing comparative algorithms.", "paper_title": "Dynamic Alteration Schemes of Real-Time Schedules for I/O Device Energy Efficiency", "paper_id": "WOS:000285875500009"}