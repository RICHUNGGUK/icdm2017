{"auto_keywords": [{"score": 0.043982673134435366, "phrase": "type_assignment_proof"}, {"score": 0.00481495049065317, "phrase": "intersection_types"}, {"score": 0.004722613498487908, "phrase": "type_assignment_method"}, {"score": 0.004632039024076267, "phrase": "termination_properties"}, {"score": 0.004456044928556639, "phrase": "first_part"}, {"score": 0.004342430078306461, "phrase": "conservation_properties"}, {"score": 0.004123781267600542, "phrase": "classical_conservation_theorem"}, {"score": 0.0035543706594585076, "phrase": "de_groote"}, {"score": 0.003353521531649663, "phrase": "direct_type_assignment_proof"}, {"score": 0.003289117944111902, "phrase": "extended_conservation_property"}, {"score": 0.00281635677605879, "phrase": "conservation_theorem"}, {"score": 0.002639968630788011, "phrase": "second_part"}, {"score": 0.0025564805535628022, "phrase": "omega"}, {"score": 0.002304606411453748, "phrase": "krivine's_system_d"}, {"score": 0.0021049977753042253, "phrase": "sorensen's_omega-theorem"}], "paper_keywords": [""], "paper_abstract": "We use the system of intersection types and the type assignment method to prove termination properties in lambda-calculus. In the first part we deal with conservation properties. We give a type assignment proof of the classical conservation theorem for lambda I calculus and then we extend this method to the notion of the reduction beta(I) and beta(S) of de Groote [9]. We also give a direct type assignment proof of the extended conservation property according to which if a term is beta(I), beta(S)-normalizable then it is beta-strongly normalizable. We further extend the conservation theorem by introducing the notion of beta(*)-normal form. In the second part we prove that if Omega is not a substring of a lambda-term M then M can be typed in the Krivine's system D of intersection types. In that way we obtain a type assignment proof of the Sorensen's Omega-theorem.", "paper_title": "Intersection Types and Termination Properties", "paper_id": "WOS:000312724500007"}