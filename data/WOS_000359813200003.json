{"auto_keywords": [{"score": 0.049734762741514144, "phrase": "case-based_reasoning"}, {"score": 0.015266975087655241, "phrase": "adaptation_solutions"}, {"score": 0.010612387000973441, "phrase": "goal_reasoning"}, {"score": 0.009948701439628968, "phrase": "adaptation_decisions"}, {"score": 0.004745965928357563, "phrase": "self-adaptive_software_systems"}, {"score": 0.004711843410316589, "phrase": "requirements-driven_approaches"}, {"score": 0.004661116930794176, "phrase": "effective_mechanism"}, {"score": 0.0046276016230633495, "phrase": "self-adaptive_systems"}, {"score": 0.004336556638639097, "phrase": "alternative_system_configurations"}, {"score": 0.004305364955542171, "phrase": "environmental_parameters"}, {"score": 0.0039623243082901214, "phrase": "current_configuration"}, {"score": 0.0039196351785300045, "phrase": "executing_system"}, {"score": 0.003766991006640731, "phrase": "improved_requirements-driven_self-adaptation_approach"}, {"score": 0.003581252556182843, "phrase": "successful_adaptations"}, {"score": 0.003529880686744397, "phrase": "adaptation_cases"}, {"score": 0.0033557940171476683, "phrase": "system_configurations"}, {"score": 0.0032250366795039715, "phrase": "original_adaptation_cases"}, {"score": 0.003110579040263398, "phrase": "similar_cases"}, {"score": 0.0029571101238632783, "phrase": "complex_relations"}, {"score": 0.0029358111718032704, "phrase": "requirements_violations"}, {"score": 0.0028832306043717637, "phrase": "current_system_configurations"}, {"score": 0.002760836859397696, "phrase": "suboptimal_adaptation_solutions"}, {"score": 0.0027310567737368033, "phrase": "additional_case_mutation_mechanism"}, {"score": 0.002682133505994396, "phrase": "existing_adaptation_solutions"}, {"score": 0.0026151058979100596, "phrase": "experimental_study"}, {"score": 0.0025868936783877035, "phrase": "online_shopping_benchmark"}, {"score": 0.0024326641072463157, "phrase": "case-based_approach"}, {"score": 0.0023977287074829798, "phrase": "satisfaction_level"}, {"score": 0.0023804491500749106, "phrase": "quality_constraints"}, {"score": 0.0023042157412517333, "phrase": "case_mutation"}, {"score": 0.002279349794239273, "phrase": "better_adaptation_solutions"}, {"score": 0.0022063469115990715, "phrase": "evolution_process"}, {"score": 0.00216680270402079, "phrase": "evolution_analysis"}, {"score": 0.002143416464171068, "phrase": "general_evolution_trends"}, {"score": 0.0021049977753042253, "phrase": "different_evolution_phases"}], "paper_keywords": ["Self-adaptive systems", " Requirements goal models", " Goal reasoning", " Case-based reasoning"], "paper_abstract": "Requirements-driven approaches provide an effective mechanism for self-adaptive systems by reasoning over their runtime requirements models to make adaptation decisions. However, such approaches usually assume that the relations among alternative system configurations, environmental parameters and requirements are clearly understood, which is often not true. Moreover, they do not consider the influence of the current configuration of an executing system on adaptation decisions. In this paper, we propose an improved requirements-driven self-adaptation approach that combines goal reasoning and case-based reasoning. In the approach, past experiences of successful adaptations are retained as adaptation cases, which are described by not only requirements violations and contexts, but also currently deployed system configurations. The approach does not depend on a set of original adaptation cases, but employs goal reasoning to provide adaptation solutions when no similar cases are available. Case-based reasoning is used to provide more precise adaptation decisions that better reflect the complex relations among requirements violations, contexts, and current system configurations by utilizing past experiences. To prevent case-based reasoning from getting trapped in suboptimal adaptation solutions, an additional case mutation mechanism is introduced to mutate existing adaptation solutions when necessary. We conduct an experimental study with an online shopping benchmark to evaluate the effectiveness of our approach. The results show that our approach outperforms both a requirements-driven approach and a case-based approach in terms of satisfaction level of quality constraints. The results also confirm the effectiveness of case mutation for producing better adaptation solutions. In addition, we empirically investigate the evolution process of adaptation solutions. The evolution analysis reveals some general evolution trends of adaptation solutions such as different evolution phases.", "paper_title": "Rationalism with a dose of empiricism: combining goal reasoning and case-based reasoning for self-adaptive software systems", "paper_id": "WOS:000359813200003"}