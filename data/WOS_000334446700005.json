{"auto_keywords": [{"score": 0.04495971759688538, "phrase": "distributed_applications"}, {"score": 0.027173520893275842, "phrase": "servicess"}, {"score": 0.00481495049065317, "phrase": "distributed_infrastructures"}, {"score": 0.004695900553353526, "phrase": "new_challenges"}, {"score": 0.004579780586951551, "phrase": "effective_use"}, {"score": 0.004169226023596022, "phrase": "monolithic_applications"}, {"score": 0.004066076430818046, "phrase": "service-oriented_applications"}, {"score": 0.0030862341714020694, "phrase": "multiple_cloud_solutions"}, {"score": 0.0028091907694771613, "phrase": "specific_provider"}, {"score": 0.0025892330566358503, "phrase": "programmers_challenges"}, {"score": 0.002509284173541882, "phrase": "straightforward_programming_model"}, {"score": 0.0024625017739528096, "phrase": "execution_framework"}, {"score": 0.0024014759148123736, "phrase": "abstracting_applications"}, {"score": 0.0023566987138026285, "phrase": "actual_execution_environment"}, {"score": 0.0022133711375320266, "phrase": "multiple_providers"}, {"score": 0.002172093645267283, "phrase": "appropriate_interfaces"}, {"score": 0.0021315842986705485, "phrase": "scientific_applications"}, {"score": 0.0021049977753042253, "phrase": "federated_clouds"}], "paper_keywords": ["Cloud computing", " Programming models", " Interoperability", " Standards"], "paper_abstract": "The rise of virtualized and distributed infrastructures has led to new challenges to accomplish the effective use of compute resources through the design and orchestration of distributed applications. As legacy, monolithic applications are replaced with service-oriented applications, questions arise about the steps to be taken in order to maximize the usefulness of the infrastructures and to provide users with tools for the development and execution of distributed applications. One of the issues to be solved is the existence of multiple cloud solutions that are not interoperable, which forces the user to be locked to a specific provider or to continuously adapt applications. With the objective of simplifying the programmers challenges, ServiceSs provides a straightforward programming model and an execution framework that helps on abstracting applications from the actual execution environment. This paper presents how ServiceSs transparently interoperates with multiple providers implementing the appropriate interfaces to execute scientific applications on federated clouds.", "paper_title": "ServiceSs: An Interoperable Programming Framework for the Cloud", "paper_id": "WOS:000334446700005"}