{"auto_keywords": [{"score": 0.02948361076941776, "phrase": "mapreduce_cluster"}, {"score": 0.015719716506582538, "phrase": "job_completion_reliability"}, {"score": 0.015515524343026846, "phrase": "job_energy_consumption"}, {"score": 0.014628852819464732, "phrase": "mapreduce"}, {"score": 0.011706424486934666, "phrase": "intermediate_data"}, {"score": 0.004658426838467567, "phrase": "heterogeneous_mapreduce_cluster"}, {"score": 0.004597244847332915, "phrase": "different_intermediate-data_replication_policies"}, {"score": 0.004360412703519539, "phrase": "popular_distributed_programming_framework"}, {"score": 0.004274766964161756, "phrase": "data-intensive_applications"}, {"score": 0.0041357305373417455, "phrase": "large-scale_mapreduce_cluster"}, {"score": 0.0039748192550806815, "phrase": "considerable_energy_consumption"}, {"score": 0.0036472537997966938, "phrase": "input_data"}, {"score": 0.0034363735647539267, "phrase": "failed_tasks"}, {"score": 0.0024192592458651204, "phrase": "different_input_data_sizes"}, {"score": 0.0021330830123432614, "phrase": "analytical_results"}, {"score": 0.0021049977753042253, "phrase": "mapreduce_managers"}], "paper_keywords": ["MapReduce", " Hadoop", " Job completion reliability", " Job energy consumption", " Intermediate data", " Replication"], "paper_abstract": "Recently, MapReduce has been a popular distributed programming framework for solving data-intensive applications. However, a large-scale MapReduce cluster has inevitable machine/node failures and considerable energy consumption. To solve these problems, MapReduce has employed several policies for replicating input data, storing/replicating intermediate data, and re-executing failed tasks. In this study, we concentrate on two typical policies for storing/replicating intermediate data, and derive the job completion reliability (JCR for short) and job energy consumption (JEC for short) of a MapReduce cluster when the two policies are individually employed. The two policies are further analyzed and compared given various scenarios in which jobs with different input data sizes, numbers of reduce tasks, and other parameters are run in a MapReduce cluster with two extreme parallel execution capabilities. From the analytical results, MapReduce managers are able to comprehend how the two policies influence the JCR and JEC of a MapReduce cluster.", "paper_title": "Analyzing job completion reliability and job energy consumption for a heterogeneous MapReduce cluster under different intermediate-data replication policies", "paper_id": "WOS:000353786700005"}