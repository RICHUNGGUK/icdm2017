{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "prime_invisible_tasks"}, {"score": 0.004761850836420121, "phrase": "process_mining"}, {"score": 0.004631637679516574, "phrase": "new_business_processes"}, {"score": 0.004381749459671914, "phrase": "already_enacted_ones"}, {"score": 0.004261885692956071, "phrase": "existing_process"}, {"score": 0.004238307626560739, "phrase": "mining_algorithms"}, {"score": 0.004076858589744185, "phrase": "invisible_tasks"}, {"score": 0.0038567860860362745, "phrase": "process_model"}, {"score": 0.003628352506247126, "phrase": "new_process_mining_algorithm"}, {"score": 0.0034324073240680213, "phrase": "mining_capability"}, {"score": 0.0033757067564871494, "phrase": "classical_alpha_algorithm"}, {"score": 0.0032290277960438855, "phrase": "event_logs"}, {"score": 0.003123203316511694, "phrase": "five_types"}, {"score": 0.0030041042542729036, "phrase": "initialize"}, {"score": 0.002970918012061879, "phrase": "skip"}, {"score": 0.002873524721802591, "phrase": "finalize."}, {"score": 0.002794802975530612, "phrase": "new_ordering_relation"}, {"score": 0.0027486060614330043, "phrase": "mendacious_dependencies"}, {"score": 0.0026000466400112974, "phrase": "reduction_rule"}, {"score": 0.0025570607111118793, "phrase": "redundant_\"mendacious\"_dependencies"}, {"score": 0.0024732038734968567, "phrase": "construction_algorithm"}, {"score": 0.0022377394845878268, "phrase": "artificial_and_real-life_logs"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Workflow log", " Process mining", " Invisible tasks", " Petri nets"], "paper_abstract": "Process mining is helpful for deploying new business processes as well as auditing, analyzing and improving the already enacted ones. Most of the existing process mining algorithms have some problems in dealing with invisible tasks, i.e., such tasks that exist in a process model but not in its event log. In this paper, a new process mining algorithm named alpha(#) is proposed, which extends the mining capability of the classical alpha algorithm by supporting the detection of prime invisible tasks from event logs. Prime invisible tasks are divided into five types according to their structural features, i.e., INITIALIZE, SKIP, REDO, SWITCH and FINALIZE. After that, a new ordering relation for detecting mendacious dependencies between tasks that reflects prime invisible tasks is introduced. A reduction rule for identifying redundant \"mendacious\" dependencies is also considered. The construction algorithm to insert prime invisible tasks of SKIP/REDO/SWITCH types is presented. The alpha(#) algorithm has been evaluated using both artificial and real-life logs and the results are promising. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Mining process models with prime invisible tasks", "paper_id": "WOS:000282475800001"}