{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dynamic_generalized_assignment_problem"}, {"score": 0.029662559436015954, "phrase": "column_generation_algorithm"}, {"score": 0.004578030096508602, "phrase": "dgap"}, {"score": 0.004435885269134359, "phrase": "well-known_generalized_assignment_problem"}, {"score": 0.004325339932975582, "phrase": "discretized_time_horizon"}, {"score": 0.004191007935893067, "phrase": "starting_time"}, {"score": 0.004112411350177274, "phrase": "finishing_time"}, {"score": 0.003984665807155269, "phrase": "additional_constraints"}, {"score": 0.003909923690310641, "phrase": "warehouse_and_yard_management_applications"}, {"score": 0.0034461093496505127, "phrase": "origin-destination_integer_multi-commodity_flow_problem"}, {"score": 0.0031148723927633955, "phrase": "moderate_size"}, {"score": 0.002887450071878095, "phrase": "larger_instances"}, {"score": 0.0027106334164712057, "phrase": "lower_bounds"}, {"score": 0.00264296841319955, "phrase": "linear_program"}, {"score": 0.0023290951071300433, "phrase": "feasible_integer_solutions"}, {"score": 0.002299830460180699, "phrase": "computational_experiments"}, {"score": 0.0022709326810964386, "phrase": "large-scale_instances"}, {"score": 0.002186395051086251, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Generalized assignment problem", " Dynamic problem", " Column generation", " Warehouse management", " Yard management"], "paper_abstract": "This paper studies the dynamic generalized assignment problem (DGAP) which extends the well-known generalized assignment problem by considering a discretized time horizon and by associating a starting time and a finishing time with each task. Additional constraints related to warehouse and yard management applications are also considered. Three linear integer programming formulations of the problem are introduced. The strongest one models the problem as an origin-destination integer multi-commodity flow problem with side constraints. This model can be solved quickly for instances of small to moderate size. However, because of its computer memory requirements, it becomes impractical for larger instances. Hence, a column generation algorithm is used to compute lower bounds by solving the linear program (LP) relaxation of the problem. This column generation algorithm is also embedded in a heuristic aimed at finding feasible integer solutions. Computational experiments on large-scale instances show the effectiveness of the proposed approach. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "A column generation heuristic for a dynamic generalized assignment problem", "paper_id": "WOS:000264631300017"}