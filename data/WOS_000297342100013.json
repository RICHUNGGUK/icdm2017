{"auto_keywords": [{"score": 0.04824070778853848, "phrase": "atr"}, {"score": 0.009950592606884068, "phrase": "atr_bounds"}, {"score": 0.00481495049065317, "phrase": "faster_feasibility_evaluation"}, {"score": 0.0047732596509542135, "phrase": "all-terminal-reliable_networks"}, {"score": 0.004670597652149685, "phrase": "all-terminal_reliability"}, {"score": 0.004550300345169981, "phrase": "stochastic_network"}, {"score": 0.004491313367627919, "phrase": "computationally_expensive_task"}, {"score": 0.004300133642951283, "phrase": "preset_value"}, {"score": 0.004099183062034004, "phrase": "new_method"}, {"score": 0.004028452405970376, "phrase": "sequential_lower_and_upper_bounds"}, {"score": 0.003907586297783078, "phrase": "greedy_network_factoring"}, {"score": 0.0038568987435766014, "phrase": "proposed_method"}, {"score": 0.0034894451015047875, "phrase": "upper_bounds"}, {"score": 0.0034441627435203804, "phrase": "atr._subnetworks"}, {"score": 0.0032830808525570903, "phrase": "spanning_tree"}, {"score": 0.0030888830649190282, "phrase": "recursive_manner"}, {"score": 0.002880927789104712, "phrase": "preset_atr_requirement"}, {"score": 0.002818850283787242, "phrase": "rapid_convergence"}, {"score": 0.0026175952455594277, "phrase": "early_stage"}, {"score": 0.002583597507349819, "phrase": "network_factoring_process"}, {"score": 0.0024950747439601863, "phrase": "greedy_algorithm"}, {"score": 0.0024201029474586007, "phrase": "computer_experiments"}, {"score": 0.002347378595930709, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "operating_probabilities"}], "paper_keywords": ["All-terminal reliability (ATR)", " greedy heuristic", " network connectivity"], "paper_abstract": "Although calculating the all-terminal reliability (ATR) of a stochastic network is a computationally expensive task, deciding whether the ATR is greater than a preset value could be done with less effort. This study proposes a new method that generates the sequential lower and upper bounds of the ATR, based on greedy network factoring. The proposed method begins by finding the most reliable spanning tree and most unreliable cut set in the given network. Their operative and failing probabilities are used to update the lower and upper bounds of the ATR. Subnetworks are then produced, corresponding to each state of the spanning tree or cut set. This procedure is applied to the subnetworks in a recursive manner to update the ATR bounds further, until either the lower or upper bound reaches the preset ATR requirement. Due to the rapid convergence of the ATR bounds, the feasibility of a given network is likely to be decided at an early stage of the network factoring process. This study proposes several different implementations of the greedy algorithm and introduces the results of the computer experiments comparing them. Based on the experimental results, this study suggests a relationship between the performance of each implementation and the characteristics of the given network, such as layout and edge operating probabilities.", "paper_title": "A Greedy Algorithm for Faster Feasibility Evaluation of All-Terminal-Reliable Networks", "paper_id": "WOS:000297342100013"}