{"auto_keywords": [{"score": 0.04167518006179969, "phrase": "ec"}, {"score": 0.005515835464866592, "phrase": "rns"}, {"score": 0.00481495049065317, "phrase": "massive_parallel_architectures"}, {"score": 0.004701015188740582, "phrase": "cryptographic_applications"}, {"score": 0.004645057834614705, "phrase": "massive_parallel_computing_platforms"}, {"score": 0.004535124351828787, "phrase": "graphic_processing_units"}, {"score": 0.004348936976349555, "phrase": "real_challenge"}, {"score": 0.00429715240295033, "phrase": "practical_implementations"}, {"score": 0.00407161650109722, "phrase": "parallel_algorithm"}, {"score": 0.004023120753104693, "phrase": "elliptic_curve"}, {"score": 0.003927848423072668, "phrase": "point_multiplication"}, {"score": 0.0038119123317396954, "phrase": "ec_cryptography"}, {"score": 0.003677280504320636, "phrase": "proposed_approach"}, {"score": 0.0033812801309408514, "phrase": "high-precision_integer_arithmetic"}, {"score": 0.0032814236411444022, "phrase": "maximum_throughput"}, {"score": 0.0026283626419808036, "phrase": "related_art"}, {"score": 0.002581477142020187, "phrase": "experimental_analysis"}, {"score": 0.00247529638625566, "phrase": "opencl_descriptions"}, {"score": 0.0024311346712789553, "phrase": "proposed_algorithms"}, {"score": 0.0022895278869126848, "phrase": "proposed_rns_approach"}, {"score": 0.0022352169832099153, "phrase": "ec_curves"}, {"score": 0.0021953290937408807, "phrase": "underlying_finite_fields"}, {"score": 0.002169132543304096, "phrase": "smaller_size"}, {"score": 0.0021049977753042253, "phrase": "general_purpose"}], "paper_keywords": ["residue number system", " elliptic curve", " cryptography", " GPU"], "paper_abstract": "Acceleration of cryptographic applications on massive parallel computing platforms, such as Graphic Processing Units (GPUs), becomes a real challenge concerning practical implementations. In this paper, we propose a parallel algorithm for Elliptic Curve (EC) point multiplication in order to compute EC cryptography on these platforms. The proposed approach relies on the usage of the Residue Number System (RNS) to extract parallelism on high-precision integer arithmetic. Results suggest a maximum throughput of 9827 EC multiplications per second and minimum latency of 29.2 ms for a 224-bit underlying field, in a commercial Nvidia 285 GTX GPU. Performances up to an order of magnitude better in latency and 122% in throughput are achieved regarding other approaches reported in the related art. An experimental analysis of the scalability, based on OpenCL descriptions of the proposed algorithms, suggest that further advantage can be obtained from the proposed RNS approach for GPUs and EC curves supported by underlying finite fields of smaller size, regarding implementations on general purpose multi-cores.", "paper_title": "RNS-Based Elliptic Curve Point Multiplication for Massive Parallel Architectures", "paper_id": "WOS:000303654500011"}