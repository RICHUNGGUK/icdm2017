{"auto_keywords": [{"score": 0.04911945324917723, "phrase": "heterogeneous_many-core_systems"}, {"score": 0.010310144213231526, "phrase": "pdl"}, {"score": 0.00481495049065317, "phrase": "explicit_platform_descriptions"}, {"score": 0.00453113241842654, "phrase": "power_constraints"}, {"score": 0.004494570360108983, "phrase": "modern_computer_architectures"}, {"score": 0.0043512358455892, "phrase": "whole_computing_landscape"}, {"score": 0.004298666679374568, "phrase": "mobile_devices"}, {"score": 0.004246729915110547, "phrase": "desktop_systems"}, {"score": 0.0041112665381266315, "phrase": "high-end_supercomputers"}, {"score": 0.004078078530972285, "phrase": "large-scale_data_centers"}, {"score": 0.003947973513495612, "phrase": "superior_performance-power_ratios"}, {"score": 0.003916098498242888, "phrase": "programming_heterogeneous_many-core_architectures"}, {"score": 0.0035965032173588753, "phrase": "low-level_architectural_details"}, {"score": 0.003453584878128719, "phrase": "different_programming_models"}, {"score": 0.0034118234596993836, "phrase": "single_application"}, {"score": 0.0033029038236817372, "phrase": "platform_description_language"}, {"score": 0.0031974502006267163, "phrase": "key_architectural_patterns"}, {"score": 0.003171615440419782, "phrase": "commonly_used_heterogeneous_computing_systems"}, {"score": 0.003020918749760067, "phrase": "platform-specific_information"}, {"score": 0.002984373546099842, "phrase": "well-defined_and_explicit_manner"}, {"score": 0.0029126002350975634, "phrase": "prototype_source-to-source_compilation_framework"}, {"score": 0.002831037222426215, "phrase": "sequential_task-based_programs"}, {"score": 0.002599763359352916, "phrase": "component-based_approach"}, {"score": 0.0025578967205807843, "phrase": "different_implementation_variants"}, {"score": 0.0024963543716522087, "phrase": "different_parts"}, {"score": 0.002466139325703204, "phrase": "heterogeneous_platform"}, {"score": 0.00241658945942583, "phrase": "advanced_runtime_system"}, {"score": 0.0023680327896318915, "phrase": "dynamic_task_scheduling"}, {"score": 0.0022281257694320433, "phrase": "commonly_used_scientific_kernel"}, {"score": 0.0022011501095573747, "phrase": "financial_application"}, {"score": 0.002183347623351868, "phrase": "different_configurations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Heterogeneous many-core architectures", " Platform descriptors", " Source-to-source transformation", " Parallelization", " CPU computing"], "paper_abstract": "Heterogeneous many-core systems constitute a viable approach for coping with power constraints in modern computer architectures and can now be found across the whole computing landscape ranging from mobile devices, to desktop systems and servers, all the way to high-end supercomputers and large-scale data centers. While these systems promise to offer superior performance-power ratios, programming heterogeneous many-core architectures efficiently has been shown to be notoriously difficult. Programmers typically are forced to take into account a plethora of low-level architectural details and usually have to resort to a combination of different programming models within a single application. In this paper we propose a platform description language (PDL) that enables to capture key architectural patterns of commonly used heterogeneous computing systems. PDL architecture descriptions support both programmers and toolchains by providing platform-specific information in a well-defined and explicit manner. We have developed a prototype source-to-source compilation framework that utilizes PDL descriptors to transform sequential task-based programs with source code annotations into a form that is convenient for execution on heterogeneous many-core systems. Our framework relies on a component-based approach that accommodates for different implementation variants of tasks, customized for different parts of a heterogeneous platform, and utilizes an advanced runtime system for exploiting parallelism through dynamic task scheduling. We show various usage scenarios of our PDL and demonstrate the effectiveness of our framework for a commonly used scientific kernel and a financial application on different configurations of a state-of-the-art CPU/GPU system. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Using explicit platform descriptions to support programming of heterogeneous many-core systems", "paper_id": "WOS:000300134700006"}