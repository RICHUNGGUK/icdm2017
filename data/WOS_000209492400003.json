{"auto_keywords": [{"score": 0.03549493770065823, "phrase": "simulation_speed"}, {"score": 0.013167950656157999, "phrase": "mciss"}, {"score": 0.00481495049065317, "phrase": "distributed_timing_synchronization_technique"}, {"score": 0.004733625412289433, "phrase": "parallel_multi-core_instruction-set_simulation"}, {"score": 0.0046141941030386525, "phrase": "multi-core_architecture"}, {"score": 0.0037928847801943404, "phrase": "system_development"}, {"score": 0.0032255172568437965, "phrase": "conventional_centralized_timing_synchronization_mechanism"}, {"score": 0.0026282000779095987, "phrase": "new_distributed_timing_synchronization_technique"}, {"score": 0.0021049977753042253, "phrase": "centralized_synchronization_approach"}], "paper_keywords": ["Performance", " Verification", " Timing synchronization", " distributed synchronization", " multi-core simulation", " instruction-set simulation"], "paper_abstract": "As multi-core architecture has become the mainstream, the corresponding multi-core instruction-set simulation (MCISS) is also needed to aid system development. Ideally, we may run a MCISS in parallel to enhance the simulation speed. However, the conventional centralized timing synchronization mechanism would greatly constrain the parallelism of a MCISS, so the simulation speed is bounded. To resolve this issue, we propose a new distributed timing synchronization technique which allows higher parallelism for a MCISS. Hence, it accelerates the simulation speed by 9 to 20 times as the number of cores increases in contrast to the centralized synchronization approach.", "paper_title": "A Distributed Timing Synchronization Technique for Parallel Multi-Core Instruction-Set Simulation", "paper_id": "WOS:000209492400003"}