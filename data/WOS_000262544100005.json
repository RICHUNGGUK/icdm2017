{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "quantified_boolean_formulas"}, {"score": 0.040537135041717604, "phrase": "multi-engine_solver"}, {"score": 0.004576253356889219, "phrase": "robust_solver"}, {"score": 0.004258128672571261, "phrase": "different_problem_domains"}, {"score": 0.00416882434439484, "phrase": "domain-specific_tuning"}, {"score": 0.0035634522350563107, "phrase": "optimal_results"}, {"score": 0.0034445472801689046, "phrase": "syntactic_qbf_features"}, {"score": 0.0033295966773779174, "phrase": "existing_qbf_engines"}, {"score": 0.003071682293903262, "phrase": "state-of-the-art_qbf_solvers"}, {"score": 0.0029691377785333872, "phrase": "inductive_reasoning_techniques"}, {"score": 0.002931569771634119, "phrase": "engine-selection_policies"}, {"score": 0.002762423953243486, "phrase": "learned_policies"}, {"score": 0.0026929458952693465, "phrase": "good_predictions"}, {"score": 0.0024632148715152393, "phrase": "usage_scenario"}, {"score": 0.0024114635128122783, "phrase": "rewarding_results"}, {"score": 0.0023408288327263316, "phrase": "aqme-adaptive_qbf_multi-engine-"}, {"score": 0.0021049977753042253, "phrase": "previously_uncharted_formulas"}], "paper_keywords": ["Self-adaptive multi-engine solver", " Quantified Boolean formulas", " AQME"], "paper_abstract": "In this paper we study the problem of engineering a robust solver for quantified Boolean formulas (QBFs), i.e., a tool that can efficiently solve formulas across different problem domains without the need for domain-specific tuning. The paper presents two main empirical results along this line of research. Our first result is the development of a multi-engine solver, i.e., a tool that selects among its reasoning engines the one which is more likely to yield optimal results. In particular, we show that syntactic QBF features can be correlated to the performances of existing QBF engines across a variety of domains. We also show how a multi-engine solver can be obtained by carefully picking state-of-the-art QBF solvers as basic engines, and by harnessing inductive reasoning techniques to learn engine-selection policies. Our second result is the improvement of our multi-engine solver with the capability of updating the learned policies when they fail to give good predictions. In this way the solver becomes also self-adaptive, i.e., able to adjust its internal models when the usage scenario changes substantially. The rewarding results obtained in our experiments show that our solver AQME-Adaptive QBF Multi-Engine-can be more robust and efficient than state-of-the-art single-engine solvers, even when it is confronted with previously uncharted formulas and competitors.", "paper_title": "A self-adaptive multi-engine solver for quantified Boolean formulas", "paper_id": "WOS:000262544100005"}