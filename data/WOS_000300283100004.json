{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "voting_trees"}, {"score": 0.03514549768352576, "phrase": "schwartz_rule"}, {"score": 0.004782848614014638, "phrase": "incomplete_preferences"}, {"score": 0.004750959742844963, "phrase": "weighted_votes"}, {"score": 0.0047035227618053965, "phrase": "multiagent_settings"}, {"score": 0.004641005983799053, "phrase": "different_preferences"}, {"score": 0.004610058444728656, "phrase": "preference_aggregation"}, {"score": 0.004548778268252678, "phrase": "important_issue"}, {"score": 0.00447331713604276, "phrase": "general_method"}, {"score": 0.004443482801729777, "phrase": "aggregate_preferences"}, {"score": 0.004340614094598847, "phrase": "voting_tree_rules"}, {"score": 0.004311660976562745, "phrase": "aggregate_agents'_preferences"}, {"score": 0.0042543303585113965, "phrase": "voting_tree"}, {"score": 0.004114303071093143, "phrase": "pairwise_comparisons"}, {"score": 0.004073196909500369, "phrase": "binary_tree"}, {"score": 0.003992207640169795, "phrase": "majority_vote"}, {"score": 0.0038867116254051363, "phrase": "agents'_preferences"}, {"score": 0.0037461743696712833, "phrase": "ongoing_elicitation_process"}, {"score": 0.00351525021580923, "phrase": "tree_rules"}, {"score": 0.0026977641744883826, "phrase": "incomplete_profile"}, {"score": 0.0025059724686541263, "phrase": "exact_complexity"}, {"score": 0.0023990982005125763, "phrase": "exact_set"}, {"score": 0.0022814200422609774, "phrase": "polynomial_time"}, {"score": 0.0022434880661725493, "phrase": "possible_winners"}, {"score": 0.0021987994275190314, "phrase": "necessary_winners"}, {"score": 0.0021049977753042253, "phrase": "incomplete_profiles"}], "paper_keywords": ["Voting trees", " Incompleteness", " Winner determination"], "paper_abstract": "In multiagent settings where agents have different preferences, preference aggregation can be an important issue. Voting is a general method to aggregate preferences. We consider the use of voting tree rules to aggregate agents' preferences. In a voting tree, decisions are taken by performing a sequence of pairwise comparisons in a binary tree where each comparison is a majority vote among the agents. Incompleteness in the agents' preferences is common in many real-life settings due to privacy issues or an ongoing elicitation process. We study how to determine the winners when preferences may be incomplete, not only for voting tree rules (where the tree is assumed to be fixed), but also for the Schwartz rule (in which the winners are the candidates winning for at least one voting tree). In addition, we study how to determine the winners when only balanced trees are allowed. In each setting, we address the complexity of computing necessary (respectively, possible) winners, which are those candidates winning for all completions (respectively, at least one completion) of the incomplete profile. We show that many such winner determination problems are computationally intractable when the votes are weighted. However, in some cases, the exact complexity remains unknown. Since it is generally computationally difficult to find the exact set of winners for voting trees and the Schwartz rule, we propose several heuristics that find in polynomial time a superset of the possible winners and a subset of the necessary winners which are based on the completions of the (incomplete) majority graph built from the incomplete profiles.", "paper_title": "Winner determination in voting trees with incomplete preferences and weighted votes", "paper_id": "WOS:000300283100004"}