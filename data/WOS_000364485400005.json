{"auto_keywords": [{"score": 0.031682290996456926, "phrase": "dache"}, {"score": 0.010419013069582638, "phrase": "mapreduce_framework"}, {"score": 0.00910369462076804, "phrase": "hadoop"}, {"score": 0.008456902242801096, "phrase": "big-data_applications"}, {"score": 0.00588301919462901, "phrase": "cache_manager"}, {"score": 0.00481495049065317, "phrase": "data_aware_caching_for_big-data_applications"}, {"score": 0.0044991925146184025, "phrase": "large-scale_distributed_data_processing_applications"}, {"score": 0.004230068512904886, "phrase": "google's_mapreduce"}, {"score": 0.00417820345049698, "phrase": "apache"}, {"score": 0.003880017219275826, "phrase": "defacto_software_systems"}, {"score": 0.0035369291417564606, "phrase": "large_amount"}, {"score": 0.0034935290662899488, "phrase": "intermediate_data"}, {"score": 0.0032440761502606314, "phrase": "mapreduce"}, {"score": 0.0025027144548626975, "phrase": "actual_computing_work"}, {"score": 0.002456744238900652, "phrase": "novel_cache_description_scheme"}, {"score": 0.0024116163689723333, "phrase": "cache_request"}, {"score": 0.0023819914954155905, "phrase": "reply_protocol"}, {"score": 0.002225426912273257, "phrase": "testbed_experiment_results"}, {"score": 0.0021311850321045767, "phrase": "completion_time"}, {"score": 0.0021049977753042253, "phrase": "mapreduce_jobs"}], "paper_keywords": ["big-data", " MapReduce", " Hadoop", " caching"], "paper_abstract": "The buzz-word big-data refers to the large-scale distributed data processing applications that operate on exceptionally large amounts of data. Google's MapReduce and Apache's Hadoop, its open-source implementation, are the defacto software systems for big-data applications. An observation of the MapReduce framework is that the framework generates a large amount of intermediate data. Such abundant information is thrown away after the tasks finish, because MapReduce is unable to utilize them. In this paper, we propose Dache, a data-aware cache framework for big-data applications. In Dache, tasks submit their intermediate results to the cache manager. A task queries the cache manager before executing the actual computing work. A novel cache description scheme and a cache request and reply protocol are designed. We implement Dache by extending Hadoop. Testbed experiment results demonstrate that Dache significantly improves the completion time of MapReduce jobs.", "paper_title": "Dache: A Data Aware Caching for Big-Data Applications Using the MapReduce Framework", "paper_id": "WOS:000364485400005"}