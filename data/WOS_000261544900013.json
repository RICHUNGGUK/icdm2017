{"auto_keywords": [{"score": 0.03155726762576116, "phrase": "gpu"}, {"score": 0.00535532213577063, "phrase": "nns"}, {"score": 0.00481495049065317, "phrase": "radial_basis_function_networks"}, {"score": 0.004681226806682058, "phrase": "neural_networks"}, {"score": 0.004261617028111862, "phrase": "main_limitations"}, {"score": 0.004201991568145053, "phrase": "long_time"}, {"score": 0.004123781267600542, "phrase": "training_process"}, {"score": 0.003916098498242888, "phrase": "fast_training_process"}, {"score": 0.00375395061615019, "phrase": "application_domain"}, {"score": 0.003701401653850141, "phrase": "possible_way"}, {"score": 0.0036324746826127997, "phrase": "learning_process"}, {"score": 0.0033851984021896287, "phrase": "high_cost"}, {"score": 0.0033377940531761985, "phrase": "reduced_flexibility"}, {"score": 0.003291051334991867, "phrase": "original_central_processing_unit"}, {"score": 0.0030097975788892896, "phrase": "graphic_processing_unit"}, {"score": 0.002650857539177183, "phrase": "nn_named_radial_basis_function_network"}, {"score": 0.0023789822182914877, "phrase": "brief_paper"}, {"score": 0.002323663295811215, "phrase": "gpu_implementation"}, {"score": 0.002291089893848235, "phrase": "entire_learning_process"}, {"score": 0.0021857667493036786, "phrase": "computational_cost"}], "paper_keywords": ["Graphic processing unit (GPU)", " neural networks (NNs)", " radial basis function networks (RBFNs)"], "paper_abstract": "Neural networks (NNs) have been used in several areas, showing their potential but also their limitations. One of the main limitations is the long time required for the training process; this is not useful in the case of a fast training process being required to respond to changes in the application domain. A possible way to accelerate the learning process of an NN is to implement it in hardware, but due to the high cost and the reduced flexibility of the original central processing unit (CPU) implementation, this solution is often not chosen. Recently, the power of the graphic processing unit (GPU), on the market, has increased and it has started to be used in many applications. In particular, a kind of NN named radial basis function network (RBFN) has been used extensively, proving its power. However, their limiting time performances reduce their application in many areas. In this brief paper, we describe a GPU implementation of the entire learning process of an RBFN showing the ability to reduce the computational cost by about two orders of magnitude with respect to its CPU implementation.", "paper_title": "Radial Basis Function Networks GPU-Based Implementation", "paper_id": "WOS:000261544900013"}