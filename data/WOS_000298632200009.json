{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ldpc"}, {"score": 0.039625559364838386, "phrase": "ldpc_codes"}, {"score": 0.030071875396291397, "phrase": "hyperbolic_trigonometric_functions"}, {"score": 0.025431444684301974, "phrase": "cordic_isa_extensions"}, {"score": 0.004750178261675602, "phrase": "sdr_platforms"}, {"score": 0.004707479285061122, "phrase": "wireless_protocols"}, {"score": 0.004623224002010226, "phrase": "spectral_efficiency"}, {"score": 0.004561019117546361, "phrase": "high_data_throughput"}, {"score": 0.004055652445791872, "phrase": "shannon_capacity"}, {"score": 0.003947186611084043, "phrase": "state-of-art_wireless_protocols"}, {"score": 0.0038765236351397843, "phrase": "wimax"}, {"score": 0.003841610436545169, "phrase": "lte_advanced"}, {"score": 0.003671865026158296, "phrase": "high_cost"}, {"score": 0.0034937647771945803, "phrase": "proposed_decoding_algorithms"}, {"score": 0.0034467039994594065, "phrase": "belief_propagation"}, {"score": 0.0034159137571129665, "phrase": "bp"}, {"score": 0.0033242742850902295, "phrase": "good_approximation"}, {"score": 0.0032794890195334513, "phrase": "optimal_decoder"}, {"score": 0.0031917146566068245, "phrase": "compute-intensive_hyperbolic_trigonometric_functions"}, {"score": 0.0031203609829058587, "phrase": "computational_complexity"}, {"score": 0.0030922667860233603, "phrase": "typical_ldpc_decoder_implementations"}, {"score": 0.00298238929037041, "phrase": "min-sum_algorithm"}, {"score": 0.0029025435402480326, "phrase": "reduced_signal_processing_performance"}, {"score": 0.0028764048059439205, "phrase": "efficient_and_accurate_methods"}, {"score": 0.0027491902732542013, "phrase": "bp_algorithm"}, {"score": 0.002724428781940696, "phrase": "real-time_ldpc_decoder_implementations"}, {"score": 0.0025342090097293826, "phrase": "sdr"}, {"score": 0.0022124605840026313, "phrase": "power_consumption_estimates"}, {"score": 0.0021826210858934933, "phrase": "memory_requirements"}, {"score": 0.0021049977753042253, "phrase": "baseline_implementation"}], "paper_keywords": ["LDPC decoding", " Belief propagation algorithm", " Hyperbolic tangents", " CORDIC", " SDR", " ISA extensions"], "paper_abstract": "Wireless protocols strive to increase spectral efficiency and achieve high data throughput. Low-density parity-check (LDPC) codes are advanced forward error correction (FEC) codes that use iterative decoding techniques to achieve close to the Shannon capacity. Due to their superior performance, state-of-art wireless protocols, such as WiMAX and LTE Advanced, are adopting LDPC codes. LDPC codes come with the high cost of drastically increased computational effort for decoding. Among the proposed decoding algorithms, the belief propagation (BP) algorithm leads to a good approximation of an optimal decoder; however, it uses compute-intensive hyperbolic trigonometric functions. To reduce the computational complexity, typical LDPC decoder implementations use simplified algorithms, such as the min-sum algorithm, at the expense of reduced signal processing performance. Efficient and accurate methods to compute hyperbolic trigonometric functions can facilitate the use of the BP algorithm in real-time LDPC decoder implementations. This paper investigates hyperbolic COordinate Rotation DIgital Computer (CORDIC) instruction set architecture (ISA) extensions for software-defined radio (SDR) processors to compute the hyperbolic trigonometric functions for LDPC decoding efficiently. The CORDIC ISA extensions are evaluated on the low-power multi-threaded Sandbridge Sandblaster (TM) SB3000 platform. The computational performance, numerical accuracy, hardware estimates, power consumption estimates, and memory requirements with the CORDIC ISA extensions are compared to a baseline implementation without these extensions on the SB3000.", "paper_title": "CORDIC instructions for LDPC decoding on SDR platforms", "paper_id": "WOS:000298632200009"}