{"auto_keywords": [{"score": 0.04520035896788701, "phrase": "system-level_load_balancing"}, {"score": 0.00481495049065317, "phrase": "high_gain"}, {"score": 0.004741845603430361, "phrase": "low_noise"}, {"score": 0.004598933498016774, "phrase": "single_photon_counting"}, {"score": 0.004494570360108983, "phrase": "research_application"}, {"score": 0.004392565073466714, "phrase": "drift-diffusion_model"}, {"score": 0.004195418010131832, "phrase": "application-level_load_balancing"}, {"score": 0.003946195919158241, "phrase": "simulation_code"}, {"score": 0.00385658790017119, "phrase": "linux_cluster_supercomputer"}, {"score": 0.003711723285313348, "phrase": "load_balancing"}, {"score": 0.003545024951402818, "phrase": "smooth_increase"}, {"score": 0.0033857978863047916, "phrase": "centralized"}, {"score": 0.003334309053314909, "phrase": "distributed_organization"}, {"score": 0.0032585499655442404, "phrase": "adaptive_simulation_code"}, {"score": 0.0031360786664165093, "phrase": "system_software"}, {"score": 0.003088384809415812, "phrase": "marked_performance_differences"}, {"score": 0.002949598537993663, "phrase": "mosix"}, {"score": 0.00260919016332682, "phrase": "lam"}, {"score": 0.0025694595669648063, "phrase": "mpich"}, {"score": 0.002343592759327921, "phrase": "ampi"}, {"score": 0.0021049977753042253, "phrase": "mpi_calls"}], "paper_keywords": ["cluster computing", " adaptive simulation", " optoelectronics", " MOSIX", " Charm plus"], "paper_abstract": "Design of an avalanche photodiode with high gain and low noise that can achieve single photon counting is a research application of the drift-diffusion model. System-level load balancing when combined with application-level load balancing is shown to improve the performance of simulation code on a Linux cluster supercomputer. The two forms of load balancing are required to approach a smooth increase in performance with scaling. Centralized and distributed organization of the adaptive simulation code reflected the choice of system software. Marked performance differences were observed when two contrasting cluster software parallelization systems, MOSIX and Charm++, were applied. The paper compares the two dynamically load-balanced systems to MPI implementations (LAM and MPICH), which are statically load balanced. Also considered is AMPI, which is based on Charm++ and includes system-level load balancing but additionally implements all MPI calls.", "paper_title": "Load-balanced drift-diffusion model simulation: Cluster software performance evaluation", "paper_id": "WOS:000246304700009"}