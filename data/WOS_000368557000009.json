{"auto_keywords": [{"score": 0.042980055209087153, "phrase": "time_scale"}, {"score": 0.037878248909328095, "phrase": "reactive_domains"}, {"score": 0.004860218511356106, "phrase": "time"}, {"score": 0.004706453355638515, "phrase": "functional_synchronous_language"}, {"score": 0.004653170526972062, "phrase": "concurrent"}, {"score": 0.004600389726895716, "phrase": "reactive_systems"}, {"score": 0.004522406417999492, "phrase": "multiple_time_scales"}, {"score": 0.004247560712327667, "phrase": "discrete_simulation"}, {"score": 0.004175533280178052, "phrase": "sensor_network"}, {"score": 0.003211883390828745, "phrase": "time_refinement"}, {"score": 0.0028328599839713866, "phrase": "reactiveeml_language"}, {"score": 0.002753138528582461, "phrase": "ml_language"}, {"score": 0.0027218799769229596, "phrase": "synchronous_programming"}, {"score": 0.0026604223073300685, "phrase": "esterel"}, {"score": 0.002585539416877115, "phrase": "operational_semantics"}, {"score": 0.0025416235470290286, "phrase": "extended_language"}, {"score": 0.0021784009230363627, "phrase": "parallel_implementation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Synchronous languages", " Functional languages", " Semantics", " Type systems"], "paper_abstract": "Concurrent and reactive systems often exhibit multiple time scales. This situation occurs, for instance, in the discrete simulation of a sensor network where the time scale at which agents communicate is very different from the time scale used to model the internals of an agent. The paper presents reactive domains to simplify the programming of such systems. Reactive domains allow for several time scales to be defined and they enable time refinement, that is, the replacement of a system with a more detailed version, without changing its observed behavior. Our work applies to the REACTIVEEML language, which extends an ML language with synchronous programming constructs a to Esterel. We present an operational semantics for the extended language, a type system that ensures the soundness of programs, and a sequential implementation. We discuss how reactive domains can be used in a parallel implementation. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Time refinement in a functional synchronous language", "paper_id": "WOS:000368557000009"}