{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "one-one_mapping"}, {"score": 0.0045162169185355, "phrase": "two-dimensional_parameterized_matching"}, {"score": 0.004235938758522453, "phrase": "n_x_n_text"}, {"score": 0.0038476708316022823, "phrase": "color_images"}, {"score": 0.003750260412839128, "phrase": "color_maps"}, {"score": 0.003494866798828308, "phrase": "two-dimensional_parameterized_matching_problem"}, {"score": 0.0027920359090544107, "phrase": "amir_et_al"}, {"score": 0.0026693851900137953, "phrase": "key_step"}, {"score": 0.0024874156497091994, "phrase": "distinct_characters"}, {"score": 0.0024243586247372087, "phrase": "x_m_substring"}, {"score": 0.002378114613631841, "phrase": "n_x_n_string"}, {"score": 0.0021049977753042253, "phrase": "independent_interest"}], "paper_keywords": ["Parameterized matching", " two-dimensional pattern matching", " witness computation"], "paper_abstract": "Two equal-length strings, or two equal-sized two-dimensional texts, parameterize match (p-match) if there is a one-one mapping (relative to the alphabet) of their characters. Two-dimensional parameterized matching is the task of finding all m x m substrings of an n x n text that p-match an m x m pattern. This models searching for color images with changing of color maps, for example. We present two algorithms that solve the two-dimensional parameterized matching problem. The time complexities of our algorithms are O(n(2) log(2) m) and O(n(2) + m(2.5) polylog(m)). Our algorithms are faster than the O(n(2)mlog(2)mlog logm) time algorithm for this problem of Amir et al. [2006]. A key step in both of our algorithms is to count the number of distinct characters in every m x m substring of an n x n string. We show how to solve this problem in O(n2) time. This result may be of independent interest.", "paper_title": "Two-Dimensional Parameterized Matching", "paper_id": "WOS:000345574900005"}