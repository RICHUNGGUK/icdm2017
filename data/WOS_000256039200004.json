{"auto_keywords": [{"score": 0.04381015920982132, "phrase": "dres"}, {"score": 0.007350703333490893, "phrase": "tcam_storage_efficiency"}, {"score": 0.005175162372541578, "phrase": "tcam_coprocessor"}, {"score": 0.00481495049065317, "phrase": "tcam_coprocessors"}, {"score": 0.004631758267671427, "phrase": "ternary_content-addressable_memory"}, {"score": 0.004421063493736839, "phrase": "filtering_rules"}, {"score": 0.004319322238010043, "phrase": "range_matching"}, {"score": 0.003975132194940018, "phrase": "dynamic_range_selection_algorithm"}, {"score": 0.003950453462399077, "phrase": "existing_range_encoding_schemes"}, {"score": 0.003919900973086169, "phrase": "additional_hardware_support"}, {"score": 0.0038237693863175334, "phrase": "dynamic_encoded_range_update_algorithm"}, {"score": 0.0037853015963603682, "phrase": "range_encoding"}, {"score": 0.003627028894710926, "phrase": "network_processor"}, {"score": 0.003557283483525861, "phrase": "packet_classification"}, {"score": 0.003516079377293321, "phrase": "salient_feature"}, {"score": 0.003253279945540651, "phrase": "full_control"}, {"score": 0.0032155857567170696, "phrase": "range_code_size"}, {"score": 0.0031050953733360825, "phrase": "tcam_structure"}, {"score": 0.002998390117435555, "phrase": "comprehensive_solution"}, {"score": 0.002917931350071647, "phrase": "search_key_encoding_scheme"}, {"score": 0.002884111441153185, "phrase": "range_encoding_scheme"}, {"score": 0.002731381261399358, "phrase": "optimal_selection"}, {"score": 0.0026272523687965615, "phrase": "tcam_storage"}, {"score": 0.0025666855314072706, "phrase": "tcam"}, {"score": 0.002527083139627522, "phrase": "updated_lock"}, {"score": 0.0024784363584530976, "phrase": "tcam_database_lookup_process"}, {"score": 0.0024118962715000197, "phrase": "real-world_databases"}, {"score": 0.002319918823705175, "phrase": "tcam_storage_expansion_ratio"}, {"score": 0.0022576249214220187, "phrase": "performance_analysis"}, {"score": 0.002205560249972527, "phrase": "probabilistic_model"}, {"score": 0.0021214346747442363, "phrase": "wide_spectrum"}, {"score": 0.0021049977753042253, "phrase": "range_distributions"}], "paper_keywords": ["packet classification", " range matching", " ternary CAM", " network processor"], "paper_abstract": "One of the most critical resource management issues in the use of ternary content-addressable memory (TCAM) for packet classification/filtering is how to effectively support filtering rules with ranges, known as range matching. In this paper, the Dynamic Range Encoding Scheme (DRES) is proposed to significantly improve the TCAM storage efficiency for range matching. Unlike the existing range encoding schemes requiring additional hardware support, DRES uses the TCAM coprocessor itself to assist range encoding. Hence, DRES can be readily programmed in a network processor using a TCAM coprocessor for packet classification. A salient feature of DRES is its ability to allow a subset of ranges to be encoded and, hence, to have full control over the range code size. This advantage allows DRES to exploit the TCAM structure to maximize the TCAM storage efficiency. DRES is a comprehensive solution, including a dynamic range selection algorithm, a search key encoding scheme, a range encoding scheme, and a dynamic encoded range update algorithm. Although the dynamic range selection algorithm running in the software allows optimal selection of ranges to be encoded to fully utilize the TCAM storage, the dynamic encoded range update algorithm allows the TCAM database to be updated lock free without interrupting the TCAM database lookup process. DRES is evaluated based on real-world databases and the results show that DRES can reduce the TCAM storage expansion ratio from 6.20 to 1.23. The performance analysis of DRES based on a probabilistic model demonstrates that DRES significantly improves the TCAM storage efficiency for a wide spectrum of range distributions.", "paper_title": "DRES: Dynamic range encoding scheme for TCAM coprocessors", "paper_id": "WOS:000256039200004"}