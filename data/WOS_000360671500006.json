{"auto_keywords": [{"score": 0.03796201124021817, "phrase": "priority_level"}, {"score": 0.011318743189121525, "phrase": "bug_reports"}, {"score": 0.00481495049065317, "phrase": "bug_report_priority"}, {"score": 0.004773692073488661, "phrase": "multi-factor_analysis"}, {"score": 0.004612147352416241, "phrase": "software_quality"}, {"score": 0.004342430078306461, "phrase": "bug_tracking_system"}, {"score": 0.00428670987745951, "phrase": "bugzilla"}, {"score": 0.003686935223424015, "phrase": "bug_triagers"}, {"score": 0.0035620354052144656, "phrase": "reported_bug"}, {"score": 0.003324743991757282, "phrase": "priority_assignment_process"}, {"score": 0.003267925215811654, "phrase": "manual_one"}, {"score": 0.00307657476125683, "phrase": "automated_approach"}, {"score": 0.003037047249598515, "phrase": "machine_learning"}, {"score": 0.0028468767420392945, "phrase": "multiple_factors"}, {"score": 0.002566997205079849, "phrase": "bug_report"}, {"score": 0.0024061887405214186, "phrase": "discriminative_model"}, {"score": 0.002375253757224999, "phrase": "new_classification_algorithm"}, {"score": 0.0023447155524245655, "phrase": "ordinal_class_labels"}, {"score": 0.0023245746777044766, "phrase": "imbalanced_data"}, {"score": 0.002245808526093592, "phrase": "eclipse"}, {"score": 0.0021883400011393564, "phrase": "baseline_approaches"}, {"score": 0.002150900082318562, "phrase": "average_f-measure"}, {"score": 0.0021232402128269906, "phrase": "relative_improvement"}], "paper_keywords": ["Bug report management", " Priority prediction", " Multi-factor analysis"], "paper_abstract": "Bugs are prevalent. To improve software quality, developers often allow users to report bugs that they found using a bug tracking system such as Bugzilla. Users would specify among other things, a description of the bug, the component that is affected by the bug, and the severity of the bug. Based on this information, bug triagers would then assign a priority level to the reported bug. As resources are limited, bug reports would be investigated based on their priority levels. This priority assignment process however is a manual one. Could we do better? In this paper, we propose an automated approach based on machine learning that would recommend a priority level based on information available in bug reports. Our approach considers multiple factors, temporal, textual, author, related-report, severity, and product, that potentially affect the priority level of a bug report. These factors are extracted as features which are then used to train a discriminative model via a new classification algorithm that handles ordinal class labels and imbalanced data. Experiments on more than a hundred thousands bug reports from Eclipse show that we can outperform baseline approaches in terms of average F-measure by a relative improvement of up to 209 %.", "paper_title": "Automated prediction of bug report priority using multi-factor analysis", "paper_id": "WOS:000360671500006"}