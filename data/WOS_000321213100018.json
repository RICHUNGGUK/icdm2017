{"auto_keywords": [{"score": 0.0324049610608681, "phrase": "stabilizer"}, {"score": 0.02761800224765537, "phrase": "layout_effects"}, {"score": 0.00481495049065317, "phrase": "software_developers"}, {"score": 0.004782848614014638, "phrase": "effective_performance_evaluation"}, {"score": 0.0047035227618053965, "phrase": "optimizations_or_measure_overhead"}, {"score": 0.004625506452304716, "phrase": "automatic_performance_regression_tests"}, {"score": 0.004458375125223899, "phrase": "standard_methodology"}, {"score": 0.004399102320426124, "phrase": "execution_times"}, {"score": 0.004268591456106124, "phrase": "modern_architectural_features"}, {"score": 0.004169754607580288, "phrase": "sound_evaluation"}, {"score": 0.004141936429360251, "phrase": "multiple_samples"}, {"score": 0.003992207640169795, "phrase": "high_confidence"}, {"score": 0.003939107874750185, "phrase": "null_hypothesis"}, {"score": 0.0037587384888691645, "phrase": "branch_predictors"}, {"score": 0.0036963349119571104, "phrase": "machine-specific_parameters"}, {"score": 0.003659389341948856, "phrase": "exact_layout"}, {"score": 0.0036107002958650344, "phrase": "stack_frames"}, {"score": 0.0035746075891407224, "phrase": "heap_objects"}, {"score": 0.0035388743851813512, "phrase": "single_binary"}, {"score": 0.0034568750690264034, "phrase": "program_layouts"}, {"score": 0.003343007152920687, "phrase": "compiler_optimizations"}, {"score": 0.0033206861608068025, "phrase": "code_changes"}, {"score": 0.0029631742332058087, "phrase": "powerful_statistical_techniques"}, {"score": 0.0029335351665967396, "phrase": "sound_performance_evaluation"}, {"score": 0.0029139401928060123, "phrase": "modern_architectures"}, {"score": 0.0028179057379595124, "phrase": "memory_configurations"}, {"score": 0.002522830979240594, "phrase": "gaussian_distribution"}, {"score": 0.0024725918236048632, "phrase": "statistical_tests"}, {"score": 0.0024560685690604945, "phrase": "anova."}, {"score": 0.002431489080631481, "phrase": "stabilizer's_efficiency"}, {"score": 0.0023122257999320527, "phrase": "llvm's_optimizations"}, {"score": 0.0022061853706148945, "phrase": "significant_impact_relative"}, {"score": 0.0021049977753042253, "phrase": "random_noise"}], "paper_keywords": ["Randomization", " Measurement Bias", " Performance Evaluation"], "paper_abstract": "Researchers and software developers require effective performance evaluation. Researchers must evaluate optimizations or measure overhead. Software developers use automatic performance regression tests to discover when changes improve or degrade performance. The standard methodology is to compare execution times before and after applying changes. Unfortunately, modern architectural features make this approach unsound. Statistically sound evaluation requires multiple samples to test whether one can or cannot (with high confidence) reject the null hypothesis that results are the same before and after. However, caches and branch predictors make performance dependent on machine-specific parameters and the exact layout of code, stack frames, and heap objects. A single binary constitutes just one sample from the space of program layouts, regardless of the number of runs. Since compiler optimizations and code changes also alter layout, it is currently impossible to distinguish the impact of an optimization from that of its layout effects. This paper presents STABILIZER, a system that enables the use of the powerful statistical techniques required for sound performance evaluation on modern architectures. STABILIZER forces executions to sample the space of memory configurations by repeatedly rerandomizing layouts of code, stack, and heap objects at runtime. STABILIZER thus makes it possible to control for layout effects. Re-randomization also ensures that layout effects follow a Gaussian distribution, enabling the use of statistical tests like ANOVA. We demonstrate STABILIZER's efficiency (< 7% median overhead) and its effectiveness by evaluating the impact of LLVM's optimizations on the SPEC CPU2006 benchmark suite. We find that, while -02 has a significant impact relative to -01, the performance impact of -03 over -02 optimizations is indistinguishable from random noise.", "paper_title": "STABILIZER: Statistically Sound Performance Evaluation", "paper_id": "WOS:000321213100018"}