{"auto_keywords": [{"score": 0.048901199639170195, "phrase": "interaction_nets"}, {"score": 0.00481495049065317, "phrase": "token-passing_nets"}, {"score": 0.004638354165775803, "phrase": "call-by-name_and_call-by-value_strategies"}, {"score": 0.0042157995925335544, "phrase": "traditional_abstract_machines"}, {"score": 0.004077995480957875, "phrase": "lower-level_specifications"}, {"score": 0.003928321515373316, "phrase": "radically_different_ways"}, {"score": 0.003706299561774348, "phrase": "simple_idea"}, {"score": 0.003645192746918234, "phrase": "explicit_syntactic_object"}, {"score": 0.003585089792133518, "phrase": "evaluation_flow"}, {"score": 0.0032446544415922615, "phrase": "implemented_strategies"}, {"score": 0.0027246145918972025, "phrase": "better_sharing"}, {"score": 0.0025385621498128243, "phrase": "call-by-need_strategy"}, {"score": 0.0022782315534795516, "phrase": "fully_lazy_reduction"}, {"score": 0.002158233639156017, "phrase": "abstract_machines"}], "paper_keywords": [""], "paper_abstract": "Recently, encodings in interaction nets of the call-by-name and call-by-value strategies of the lambda-calculus have been proposed. The purpose of these encodings is to bridge the gap between interaction nets and traditional abstract machines, which are both used to provide lower-level specifications of strategies of the lambda-calculus, but in radically different ways. The strength of these encodings is their simplicity, which comes from the simple idea of introducing an explicit syntactic object to represent the evaluation flow. Another benefit of this approach is that no artifact is needed to represent boxes. However, these encodings deliberately follow the implemented strategies (call-by-name and call-by-value) as closely as possible, and hence do not benefit from the ability of interaction nets to represent sharing easily. The aim of this paper is to show that better sharing (hence efficiency) can indeed be achieved without adding much structure. We thus present the call-by-need strategy following the same philosophy, which is, indeed, no more complicated than call-by-name. We also extend our approach to fully lazy reduction. This continues the task of bridging the gap between interaction nets and abstract machines, thus pushing forward a more uniform framework for implementations of the lambda-calculus.", "paper_title": "Call-by-need in token-passing nets", "paper_id": "WOS:000239940300006"}