{"auto_keywords": [{"score": 0.04549508303230704, "phrase": "real-time_constraints"}, {"score": 0.015719716506582538, "phrase": "design_space_exploration"}, {"score": 0.015537276607640774, "phrase": "partially_reconfigurable_systems"}, {"score": 0.0040334640350288, "phrase": "hardware_design_space"}, {"score": 0.003916098498242888, "phrase": "reconfigurable_regions"}, {"score": 0.003824719989796025, "phrase": "fpga"}, {"score": 0.0036914757355166966, "phrase": "application_resources_information"}, {"score": 0.0036481158025940016, "phrase": "interface_constraints"}, {"score": 0.0034185505275141077, "phrase": "highly_configurable_systemc_simulator"}, {"score": 0.003378385493203297, "phrase": "recosim"}, {"score": 0.003260690513595527, "phrase": "control_data_flow_graphs"}, {"score": 0.0029315721709110665, "phrase": "xilinx"}, {"score": 0.002651213849567608, "phrase": "slice_decomposition"}, {"score": 0.0024118292918742967, "phrase": "area_requirements"}, {"score": 0.0023554316787703137, "phrase": "static_implementation"}, {"score": 0.0021049977753042253, "phrase": "high_level_application_specification"}], "paper_keywords": ["Reconfigurable architecture", " Design space exploration", " Real-time systems", " Partial reconfiguration", " Field programmable gate arrays"], "paper_abstract": "In this paper, we present a flow enabling design space exploration for partially reconfigurable systems with real-time constraints, called FoRTReSS. FoRTReSS allows estimating mixed hardware/software implementations of an application where the hardware design space, the floorplanning of reconfigurable regions placed on the FPGA, is automatically inferred from application resources information, interface constraints and the target device. Real-time constraints are verified by a highly configurable SystemC simulator, RecoSim, handling applications described as control data flow graphs (CDFGs). We demonstrate our approach on an H.264 video decoder and an H.265 encoder targeting the latest Zynq-7000 platforms from Xilinx, embedding a Cortex-A9 dual-core processor. We show that an hardware/software implementation of the H.264 decoder using both processor cores and slice decomposition is possible under real-time constraints, effectively achieving a framerate of 30 frames per second while reducing area requirements compared to a static implementation, using 54 % less slice resources and 44 % less BRAM resources. Additionally we report the ability of the methodology to address very early analysis from high level application specification on the example of an H.265 encoder.", "paper_title": "FoRTReSS: a flow for design space exploration of partially reconfigurable systems", "paper_id": "WOS:000363541100004"}