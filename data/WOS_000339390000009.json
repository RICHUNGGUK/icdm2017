{"auto_keywords": [{"score": 0.036384452583045866, "phrase": "distributed_execution"}, {"score": 0.00481495049065317, "phrase": "autonomic_systems"}, {"score": 0.00475382761232911, "phrase": "service_bus"}, {"score": 0.0047135086583390585, "phrase": "modern_dynamic_distributed_systems"}, {"score": 0.0044786435725543685, "phrase": "users'_needs"}, {"score": 0.004421770937919324, "phrase": "execution_environment_variations"}, {"score": 0.0041835168653521, "phrase": "distributed_systems"}, {"score": 0.004112812699639956, "phrase": "smart_management"}, {"score": 0.00397495478332679, "phrase": "existing_integration_infrastructures"}, {"score": 0.00387459052649752, "phrase": "autonomic_computing"}, {"score": 0.0037928847801943404, "phrase": "system_properties"}, {"score": 0.0035883942463601688, "phrase": "users'_requirements"}, {"score": 0.003423969509052361, "phrase": "multiple_self-management_processes"}, {"score": 0.00317095235382607, "phrase": "different_autonomic_managers"}, {"score": 0.003104038398386081, "phrase": "specific_and_global_goals_achievement"}, {"score": 0.0029871209444889716, "phrase": "software_architecture"}, {"score": 0.0029116257477000617, "phrase": "multiple_autonomic_managers"}, {"score": 0.002801935384649699, "phrase": "distributed_cross-layer_self-management_solution"}, {"score": 0.00268488398249084, "phrase": "autonomic_managers"}, {"score": 0.0026507289852980512, "phrase": "multiple_locations"}, {"score": 0.0026282000779095987, "phrase": "different_layers"}, {"score": 0.0025291601927956765, "phrase": "consistent_and_cost-effective_way"}, {"score": 0.0023123057299992587, "phrase": "self-management_processes"}, {"score": 0.0022346638243276717, "phrase": "use_case"}, {"score": 0.002187464225869713, "phrase": "autonomic_data_replication_systems"}, {"score": 0.0021504218042734677, "phrase": "autonomic_service_bus"}], "paper_keywords": ["autonomic computing", " quality of service", " enterprise service bus", " distributed and coordinated management"], "paper_abstract": "Modern dynamic distributed systems require to dynamically take into account at runtime the changes in users' needs and the execution environment variations in order to improve the quality of service. The evolution of distributed systems, through the smart management of their properties and the extension of the existing integration infrastructures, becomes a necessity. Autonomic computing allows the self-management of system properties at runtime, according to fluctuations in the environment and changes in users' requirements. However, the mechanisms for parallel and distributed execution of multiple self-management processes have not been addressed substantially. It is critical to coordinate the execution of several processes performed by different autonomic managers, while still guaranteeing specific and global goals achievement. We address this issue by proposing a software architecture that allows the coordination of multiple autonomic managers which handle several component-based and service-oriented collaborative software entities. This architecture offers a distributed cross-layer self-management solution through orchestration and choreography. Using both techniques, autonomic managers running on multiple locations and different layers will be able to achieve their goals in a consistent and cost-effective way. In this paper, we present a set of mechanisms intended to coordinate the distributed execution of a set of self-management processes in one or more layers. We have chosen an use case involving the self-management of autonomic data replication systems integrated via an autonomic service bus in order to illustrate our approach.", "paper_title": "Multilevel and Coordinated Self-management in Autonomic Systems based on Service Bus", "paper_id": "WOS:000339390000009"}