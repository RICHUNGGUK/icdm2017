{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "eucalyptus_cloud_computing_infrastructure"}, {"score": 0.004596295252559861, "phrase": "high_reliability"}, {"score": 0.0043875257506180865, "phrase": "modern_applications"}, {"score": 0.004297795905522757, "phrase": "rapidly_growing_demands"}, {"score": 0.004231699728933577, "phrase": "uninterruptible_services"}, {"score": 0.004188198923320451, "phrase": "cloud_computing_systems"}, {"score": 0.004081385289516914, "phrase": "large_pools"}, {"score": 0.003997891221012094, "phrase": "computational_resources"}, {"score": 0.0038959121068990517, "phrase": "software_framework"}, {"score": 0.0037965243835456214, "phrase": "private_clouds"}, {"score": 0.003757480190200645, "phrase": "hybrid-style_infrastructure"}, {"score": 0.003405948098114941, "phrase": "software_aging_effects"}, {"score": 0.003353521531649663, "phrase": "eucalyptus_framework"}, {"score": 0.0032510690712452147, "phrase": "intensive_requests"}, {"score": 0.0032176163279340206, "phrase": "remote_storage_attachment"}, {"score": 0.0031845067058084583, "phrase": "virtual_machine_instantiations"}, {"score": 0.0029013950320185573, "phrase": "ram_memory"}, {"score": 0.0028715299874549245, "phrase": "swap_space_exhaustion"}, {"score": 0.0028273061946184645, "phrase": "highly_excessive_cpu_utilization"}, {"score": 0.0027837615811247963, "phrase": "virtual_machines"}, {"score": 0.0026570998719084153, "phrase": "time_series_analysis"}, {"score": 0.0026297428083782875, "phrase": "schedule_rejuvenation"}, {"score": 0.0024842242921857705, "phrase": "proper_moment"}, {"score": 0.0023346234464901978, "phrase": "eucalyptus_test_bed"}, {"score": 0.0022399174232611853, "phrase": "higher_availability"}, {"score": 0.0021714122348552747, "phrase": "threshold-triggered_rejuvenation_method"}, {"score": 0.0021049977753042253, "phrase": "resources_utilization"}], "paper_keywords": ["Software aging and rejuvenation", " cloud computing", " dependability and performance analysis", " memory leak"], "paper_abstract": "The need for high reliability, availability and performance has significantly increased in modern applications, that handle rapidly growing demands while providing uninterruptible services. Cloud computing systems fundamentally provide access to large pools of data and computational resources. Eucalyptus is a software framework largely used to implement private clouds and hybrid-style Infrastructure as a Service. It implements the Amazon Web Service (AWS) API, allowing interoperability with other AWS-based services. This article investigates the software aging effects in the Eucalyptus framework, considering workloads composed of intensive requests for remote storage attachment and virtual machine instantiations. We found problems that may be harmful to system dependability and performance, specifically regarding to RAM memory and swap space exhaustion, besides highly excessive CPU utilization by the virtual machines. We also present an approach that applies time series analysis to schedule rejuvenation, so as to reduce the downtime by predicting the proper moment to perform the rejuvenation. We experimentally evaluate our approach using an Eucalyptus test bed. The results show that our approach achieves higher availability, when compared to a threshold-triggered rejuvenation method based on continuous monitoring of resources utilization.", "paper_title": "Software Aging in the Eucalyptus Cloud Computing Infrastructure: Characterization and Rejuvenation", "paper_id": "WOS:000332482300011"}