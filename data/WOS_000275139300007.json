{"auto_keywords": [{"score": 0.049484729332067316, "phrase": "spatial_join"}, {"score": 0.040650574499495426, "phrase": "dot"}, {"score": 0.025717290683516653, "phrase": "proposed_method"}, {"score": 0.00481495049065317, "phrase": "dot-based_indexing"}, {"score": 0.004573748810476845, "phrase": "object_pairs"}, {"score": 0.0042426974826585695, "phrase": "efficient_processing_algorithm"}, {"score": 0.004110549138321181, "phrase": "underlying_spatial_indexes"}, {"score": 0.003982500388997762, "phrase": "fairly_effective_algorithm"}, {"score": 0.003935513160201076, "phrase": "spatial_joins"}, {"score": 0.003904495523681369, "phrase": "double_transformation"}, {"score": 0.0034537189001268113, "phrase": "two-dimensional_cases"}, {"score": 0.0032804824152243106, "phrase": "two-dimensional_original_space"}, {"score": 0.003190817088774159, "phrase": "efficient_algorithm"}, {"score": 0.003153140905312787, "phrase": "range_queries"}, {"score": 0.003128270147867462, "phrase": "extended_dot."}, {"score": 0.003066945490483524, "phrase": "quarter_division_technique"}, {"score": 0.00303072749758085, "phrase": "tri-quarter_division_technique"}, {"score": 0.0029362173680378624, "phrase": "space-filling_curve"}, {"score": 0.0028222016727557087, "phrase": "space_transformation_operations"}, {"score": 0.0027559226203857316, "phrase": "novel_spatial_join_algorithm"}, {"score": 0.0027126012542151015, "phrase": "range_query_processing_algorithm"}, {"score": 0.002607246047604476, "phrase": "access_order"}, {"score": 0.0025866699249916508, "phrase": "disk_pages"}, {"score": 0.0024960634897058394, "phrase": "disk_accesses"}, {"score": 0.0023990982005125763, "phrase": "extensive_experiments"}, {"score": 0.0023801608396295396, "phrase": "data_sets"}, {"score": 0.0023150468182777813, "phrase": "experimental_results"}, {"score": 0.0022339335462778437, "phrase": "spatial_join_processing"}, {"score": 0.002155656133617155, "phrase": "widely-used_r-tree-based_spatial_join_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Spatial databases", " Spatial indexing", " DOT index", " Spatial join", " Space-filling curve"], "paper_abstract": "A spatial join is a query that searches for a set of object pairs satisfying a given spatial relationship from a database. It is one of the most costly queries, and thus requires an efficient processing algorithm that fully exploits the features of the underlying spatial indexes. In our earlier work, we devised a fairly effective algorithm for processing spatial joins with double transformation (DOT) indexing, which is one of several spatial indexing schemes. However, the algorithm is restricted to only the one-dimensional cases. In this paper, we extend the algorithm for the two-dimensional cases, which are general in Geographic Information Systems (GIS) applications. We first extend DOT to two-dimensional original space. Next, we propose an efficient algorithm for processing range queries using extended DOT. This algorithm employs the quarter division technique and the tri-quarter division technique devised by analyzing the regularity of the space-filling curve used in DOT. This greatly reduces the number of space transformation operations. We then propose a novel spatial join algorithm based on this range query processing algorithm. In processing a spatial join, we determine the access order of disk pages so that we can minimize the number of disk accesses. We show the superiority of the proposed method by extensive experiments using data sets of various distributions and sizes. The experimental results reveal that the proposed method improves the performance of spatial join processing up to three times in comparison with the widely-used R-tree-based spatial join method. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Efficient processing of spatial joins with DOT-based indexing", "paper_id": "WOS:000275139300007"}