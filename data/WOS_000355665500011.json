{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "top_trees"}, {"score": 0.04763743657605743, "phrase": "new_compression_scheme"}, {"score": 0.027297956165049014, "phrase": "dag_compression"}, {"score": 0.004475022550508119, "phrase": "labeled_trees"}, {"score": 0.00386519448487341, "phrase": "internal_repeats"}, {"score": 0.0035176353680157367, "phrase": "classical_dag_compression"}, {"score": 0.003373334961160647, "phrase": "rooted_subtree_repeats"}, {"score": 0.0032012284065895537, "phrase": "fast_navigational_queries"}, {"score": 0.003069867656852932, "phrase": "compressed_representation"}, {"score": 0.0027645030021576926, "phrase": "optimal_worst-case_compression"}, {"score": 0.002289180040240783, "phrase": "navigational_queries"}, {"score": 0.002241679436497569, "phrase": "logarithmic_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Tree compression", " Top trees", " Pattern matching"], "paper_abstract": "We introduce a new compression scheme for labeled trees based on top trees. Our compression scheme is the first to simultaneously take advantage of internal repeats in the tree (as opposed to the classical DAG compression that only exploits rooted subtree repeats) while also supporting fast navigational queries directly on the compressed representation. We show that the new compression scheme achieves close to optimal worst-case compression, can compress exponentially better than DAG compression, is never much worse than DAG compression, and supports navigational queries in logarithmic time. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "Tree compression with top trees", "paper_id": "WOS:000355665500011"}