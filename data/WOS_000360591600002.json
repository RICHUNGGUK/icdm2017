{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_computing_platforms"}, {"score": 0.0047057084749407485, "phrase": "processing_and_control_applications"}, {"score": 0.004641351004344458, "phrase": "distributed_platforms"}, {"score": 0.004195418010131832, "phrase": "tolerance_and_security_issues"}, {"score": 0.0038271712887391015, "phrase": "existing_tools"}, {"score": 0.0037921662574137535, "phrase": "model-driven_development_techniques"}, {"score": 0.0036052633308076933, "phrase": "end-to-end_solution"}, {"score": 0.0033651019362620866, "phrase": "integrated_model-driven_development_environment"}, {"score": 0.0026616868981501006, "phrase": "wide-spectrum_architecture_design_language"}, {"score": 0.0025655216052760093, "phrase": "integrated_collection"}, {"score": 0.0025420267431501367, "phrase": "individual_domain-specific_sub-languages"}, {"score": 0.0024501740852758505, "phrase": "\"correct-by-construction\"_software_development"}, {"score": 0.0023400004981080818, "phrase": "application_lifecycle"}, {"score": 0.002297327670408112, "phrase": "case_study"}, {"score": 0.002214297250267208, "phrase": "drems_ml"}, {"score": 0.002163930783583212, "phrase": "embedded_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Architecture description language", " Model-driven development", " Fractionated spacecraft"], "paper_abstract": "Complex sensing, processing and control applications running on distributed platforms are difficult to design, develop, analyze, integrate, deploy and operate, especially if resource constraints, fault tolerance and security issues are to be addressed. While technology exists today for engineering distributed, real-time component-based applications, many problems remain unsolved by existing tools. Model-driven development techniques are powerful, but there are very few existing and complete tool chains that offer an end-to-end solution to developers, from design to deployment. There is a need for an integrated model-driven development environment that addresses all phases of application lifecycle including design, development, verification, analysis, integration, deployment, operation and maintenance, with supporting automation in every phase. Arguably, a centerpiece of such a model-driven environment is the modeling language. To that end, this paper presents a wide-spectrum architecture design language called DREMS ML that itself is an integrated collection of individual domain-specific sub-languages. We claim that the language promotes \"correct-by-construction\" software development and integration by supporting each individual phase of the application lifecycle. Using a case study, we demonstrate how the design of DREMS ML impacts the development of embedded systems. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "DREMS ML: A wide spectrum architecture design language for distributed computing platforms", "paper_id": "WOS:000360591600002"}