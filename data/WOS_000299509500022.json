{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "local_and_remote_memory"}, {"score": 0.04495181483618325, "phrase": "local_motherboard"}, {"score": 0.03716222510314222, "phrase": "remote_ram_memory"}, {"score": 0.004718897469501381, "phrase": "cluster_computers"}, {"score": 0.0046621835537196754, "phrase": "cost-effective_alternative_solution"}, {"score": 0.004406360418456518, "phrase": "memory_address_space"}, {"score": 0.004064958518350867, "phrase": "full-fledged_shared_memory_implementation"}, {"score": 0.0039677715255034595, "phrase": "memory_usage"}, {"score": 0.003616189733352126, "phrase": "rma_devices"}, {"score": 0.003308986613384597, "phrase": "better_global_use"}, {"score": 0.003269162006886173, "phrase": "total_ram_memory"}, {"score": 0.003152531962718477, "phrase": "address_space"}, {"score": 0.0031271827534050493, "phrase": "local_applications"}, {"score": 0.003077092305006702, "phrase": "remote_motherboards"}, {"score": 0.002931569771634119, "phrase": "ideal_memory_scheduling_algorithm"}, {"score": 0.002884603537502399, "phrase": "cost-effective_heuristic"}, {"score": 0.002759279370360986, "phrase": "devised_ideal_algorithm"}, {"score": 0.0024444073418288703, "phrase": "memory_distribution"}, {"score": 0.002218526133566788, "phrase": "concurrent_applications"}, {"score": 0.0022006705963260433, "phrase": "experimental_results"}, {"score": 0.002165388556451298, "phrase": "qos_parameter"}, {"score": 0.0021049977753042253, "phrase": "unacceptable_performance_degradation"}], "paper_keywords": ["Cluster computers", " Memory scheduling", " Remote memory assignment", " Quality of service", " Analysis of performance"], "paper_abstract": "Cluster computers represent a cost-effective alternative solution to supercomputers. In these systems, it is common to constrain the memory address space of a given processor to the local motherboard. Constraining the system in this way is much cheaper than using a full-fledged shared memory implementation among motherboards. However, memory usage among motherboards can be unfairly balanced. On the other hand, remote memory access (RMA) hardware provides fast interconnects among the motherboards of a cluster. RMA devices can be used to access remote RAM memory from a local motherboard. This work focuses on this capability in order to achieve a better global use of the total RAM memory in the system. More precisely, the address space of local applications is extended to remote motherboards and is used to access remote RAM memory. This paper presents an ideal memory scheduling algorithm and proposes a cost-effective heuristic to allocate local and remote memory among local applications. Compared to the devised ideal algorithm, the heuristic obtains the same (or closely resembling) results while largely reducing the computational cost. In addition, we analyze the impact on the performance of stand alone applications varying the memory distribution among regions (local, local to board, and remote). Then, this study is extended to any number of concurrent applications. Experimental results show that a QoS parameter is needed in order to avoid unacceptable performance degradation.", "paper_title": "A cost-effective heuristic to schedule local and remote memory in cluster computers", "paper_id": "WOS:000299509500022"}