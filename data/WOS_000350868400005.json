{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "high-performance_storage_systems"}, {"score": 0.004690694501758065, "phrase": "large-scale_scientific_applications"}, {"score": 0.004641890423057823, "phrase": "high-performance_computing_systems"}, {"score": 0.0040942189695983185, "phrase": "pnetcdf"}, {"score": 0.003988487841970088, "phrase": "mpi_library"}, {"score": 0.003926359151817743, "phrase": "parallel_file_systems"}, {"score": 0.0038450179181069833, "phrase": "efficient_parallel_scientific_applications"}, {"score": 0.0037653554368382814, "phrase": "complicated_flow"}, {"score": 0.0036680857629458816, "phrase": "involved_interactions"}, {"score": 0.0033910448175165004, "phrase": "potential_performance"}, {"score": 0.003355717283753749, "phrase": "different_layers"}, {"score": 0.003303412571939192, "phrase": "storage_hierarchy"}, {"score": 0.0031845067058084583, "phrase": "individual_components"}, {"score": 0.003069867656852932, "phrase": "complex_interactions"}, {"score": 0.0029438813080245544, "phrase": "gui-based_integrated_profiling"}, {"score": 0.0028378798711397235, "phrase": "iopro"}, {"score": 0.002651015392318126, "phrase": "detailed_statistics"}, {"score": 0.0025960262223338293, "phrase": "user-specified_metrics"}, {"score": 0.0025156683465194967, "phrase": "experimental_results"}, {"score": 0.002301211274459965, "phrase": "end-to-end_trace"}, {"score": 0.002183684303511462, "phrase": "iopro_aids"}], "paper_keywords": ["MPI-IO", " Parallel file systems", " Parallel NetCDF", " HDF5", " I/O software stack", " Code instrumentation", " Performance visualization"], "paper_abstract": "Efficient execution of large-scale scientific applications requires high-performance computing systems designed to meet the I/O requirements. To achieve high-performance, such data-intensive parallel applications use a multi-layer layer I/O software stack, which consists of high-level I/O libraries such as PnetCDF and HDF5, the MPI library, and parallel file systems. To design efficient parallel scientific applications, understanding the complicated flow of I/O operations and the involved interactions among the libraries is quintessential. Such comprehension helps identify I/O bottlenecks and thus exploits the potential performance in different layers of the storage hierarchy. To profile the performance of individual components in the I/O stack and to understand complex interactions among them, we have implemented a GUI-based integrated profiling and analysis framework, IOPro. IOPro automatically generates an instrumented I/O stack, runs applications on it, and visualizes detailed statistics based on the user-specified metrics of interest. We present experimental results from two different real-life applications and show how our framework can be used in practice. By generating an end-to-end trace of the whole I/O stack and pinpointing I/O interference, IOPro aids in understanding I/O behavior and improving the I/O performance significantly.", "paper_title": "IOPro: a parallel I/O profiling and visualization framework for high-performance storage systems", "paper_id": "WOS:000350868400005"}