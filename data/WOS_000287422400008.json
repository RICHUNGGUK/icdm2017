{"auto_keywords": [{"score": 0.04741138420449486, "phrase": "network_calculus"}, {"score": 0.012121673958940109, "phrase": "stochastic_scaling"}, {"score": 0.00481495049065317, "phrase": "network_calculus-theory"}, {"score": 0.004621984064678252, "phrase": "seminal_work"}, {"score": 0.004584327293722142, "phrase": "cruz"}, {"score": 0.0044549056501745074, "phrase": "new_theory"}, {"score": 0.0044005599565517875, "phrase": "performance_analysis"}, {"score": 0.004364696693320128, "phrase": "networked_systems"}, {"score": 0.004276306563103443, "phrase": "classical_queueing_theory"}, {"score": 0.004189698902282913, "phrase": "performance_bounds"}, {"score": 0.004138575034269399, "phrase": "average_values"}, {"score": 0.004038183610525504, "phrase": "theoretical_basis"}, {"score": 0.003972607172518598, "phrase": "service_proposals"}, {"score": 0.003908091457759849, "phrase": "ietf's_integrated"}, {"score": 0.003876226041373242, "phrase": "differentiated_services_architectures"}, {"score": 0.0035861227263414537, "phrase": "ethernets"}, {"score": 0.003556873173040169, "phrase": "avionic_networks"}, {"score": 0.003400198866111204, "phrase": "speed-up_simulations"}, {"score": 0.0031714880645482496, "phrase": "new_versatile_modeling_element"}, {"score": 0.003107195462681857, "phrase": "conventionally"}, {"score": 0.0028862761537904206, "phrase": "setup_time"}, {"score": 0.0026920404458807444, "phrase": "load_balancing"}, {"score": 0.002659142621852998, "phrase": "current_link_loads"}, {"score": 0.0025628355581338563, "phrase": "conventional_network_calculus"}, {"score": 0.00241989408309933, "phrase": "probabilistic_bounds"}, {"score": 0.0023131855385489764, "phrase": "fundamental_results"}, {"score": 0.0021223334214910006, "phrase": "sample_application"}, {"score": 0.0021049977753042253, "phrase": "uncertain_load_balancing"}], "paper_keywords": ["Performance bounds", " Network calculus", " Demultiplexing", " Stochastic scaling"], "paper_abstract": "During the last two decades, starting with the seminal work by Cruz, network calculus has evolved as a new theory for the performance analysis of networked systems. In contrast to classical queueing theory, it deals with performance bounds instead of average values and thus has been the theoretical basis of quality of service proposals such as the IETF's Integrated and Differentiated Services architectures. Besides these it has, however, recently seen many other application scenarios as, for example, wireless sensor networks, switched Ethernets, avionic networks, Systems-on-Chip, or even to speed-up simulations, to name a few. In this article, we extend network calculus by adding a new versatile modeling element: a demultiplexer. Conventionally, demultiplexing has been either neglected or assumed to be static, i.e., fixed at the setup time of a network. This is restrictive for many potential applications of network calculus. For example, a load balancing based on current link loads in a network could not be modeled with conventional network calculus means. Our demultiplexing element is based on stochastic scaling. Stochastic scaling allows one to put probabilistic bounds on how a flow is split inside the network. Fundamental results on network calculus with stochastic scaling are therefore derived in this work. We illustrate the benefits of the demultiplexer in a sample application of uncertain load balancing. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Dynamic demultiplexing in network calculus-Theory and application", "paper_id": "WOS:000287422400008"}