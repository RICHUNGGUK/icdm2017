{"auto_keywords": [{"score": 0.04149355457493527, "phrase": "dut"}, {"score": 0.00481495049065317, "phrase": "web_application_proxies"}, {"score": 0.0047155367844327, "phrase": "common_practice"}, {"score": 0.004637478829869904, "phrase": "network_device"}, {"score": 0.004579780586951551, "phrase": "network_traffic"}, {"score": 0.00417793854311445, "phrase": "gateway_devices"}, {"score": 0.00389164348807591, "phrase": "application_level_proxy"}, {"score": 0.003685972800046028, "phrase": "application-layer_traffic"}, {"score": 0.0035204268675160257, "phrase": "security_functions"}, {"score": 0.00347657813672945, "phrase": "main_purpose"}, {"score": 0.0033622909109253616, "phrase": "security_functionalities"}, {"score": 0.0032112354575523317, "phrase": "proxyreplay"}, {"score": 0.003092690568543981, "phrase": "request-response_pairs"}, {"score": 0.0030160945545795494, "phrase": "protocol_dependency"}, {"score": 0.0029909851863915283, "phrase": "functional_dependency"}, {"score": 0.002966084234963723, "phrase": "concurrent_replay"}, {"score": 0.0029291198314113608, "phrase": "error_resistance"}, {"score": 0.002682917193736698, "phrase": "benchmark_scenario"}, {"score": 0.0026164433143193015, "phrase": "preprocess_mode"}, {"score": 0.002551612225562499, "phrase": "performance_capability"}, {"score": 0.00246765655376112, "phrase": "concurrent_mode"}, {"score": 0.00241658945942583, "phrase": "replayed_trace_file"}, {"score": 0.0022886952510350416, "phrase": "replay_performance"}, {"score": 0.0022041312401435346, "phrase": "off-the-shelf_personal_computer"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["application proxy", " real flow benchmarking", " traffic replay"], "paper_abstract": "It is a common practice to test a network device by replaying network traffic onto it and observe its reactions. Many replay tools support Transmission Control Protocol/Internet Protocol stateful traffic replay and hence can be used to test switches, routers, and gateway devices. However, they often fail if the device under test (DUT) is an application level proxy. In this paper, we design and implement ProxyReplay to replay application-layer traffic for network proxies. As many application proxies have built-in security functions, the main purpose of this tool is to evaluate the security functionalities of DUTs using payloads constructed from real network traces. ProxyReplay modifies requests and responses and maintains queues for request-response pairs to resolve the issues of protocol dependency, functional dependency, concurrent replay, and error resistance. The solution provides two replay modes, that is, the preprocess mode and the concurrent mode. Depending on the benchmark scenario, we show that the preprocess mode is better for benchmarking the performance capability of a DUT. In contrast, the concurrent mode is used when the replayed trace file is extremely large. Our experiments show 99% accuracy. In addition, the replay performance exceeds 320 Mbps by running the benchmark with an off-the-shelf personal computer in the preprocess mode. Copyright (C) 2014 John Wiley & Sons, Ltd.", "paper_title": "Stateful traffic replay for web application proxies", "paper_id": "WOS:000351877000008"}