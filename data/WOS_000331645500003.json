{"auto_keywords": [{"score": 0.04727453420916491, "phrase": "maximum_number"}, {"score": 0.038924308564028634, "phrase": "planar_graph"}, {"score": 0.03774235313612906, "phrase": "maximum_degree"}, {"score": 0.03255590603620929, "phrase": "flexdraw"}, {"score": 0.00481495049065317, "phrase": "flexibility_constraints"}, {"score": 0.004696909870731282, "phrase": "orthogonal_planar_drawings"}, {"score": 0.0043443560029027195, "phrase": "typical_applications"}, {"score": 0.00428314621261913, "phrase": "varying_importance"}, {"score": 0.0038506359988314787, "phrase": "new_problem"}, {"score": 0.0031563574387360465, "phrase": "combinatorial_embedding"}, {"score": 0.0026146595609362715, "phrase": "special_case"}, {"score": 0.0025686131021181134, "phrase": "complexity_gap"}, {"score": 0.002268161377269513, "phrase": "polynomial-time_algorithm"}, {"score": 0.0021049977753042253, "phrase": "disjoint_stars"}], "paper_keywords": ["Planar graphs", " Embeddings", " Orthogonal drawing", " Bend minimization"], "paper_abstract": "Traditionally, the quality of orthogonal planar drawings is quantified by either the total number of bends, or the maximum number of bends per edge. However, this neglects that in typical applications, edges have varying importance. In this work, we investigate an approach that allows to specify the maximum number of bends for each edge individually, depending on its importance. We consider a new problem called FlexDraw that is defined as follows. Given a planar graph G=(V,E) on n vertices with maximum degree 4 and a function that assigns a flexibility to each edge, does G admit a planar embedding on the grid such that each edge e has at most bends? Note that in our setting the combinatorial embedding of G is not fixed. FlexDraw directly extends the problem beta-embeddability asking whether G can be embedded with at most beta bends per edge. We give an algorithm with running-time O(n (2)) solving FlexDraw when the flexibility of each edge is positive. This includes 1-embeddability as a special case and thus closes the complexity gap between 0-embeddability, which is -hard to decide, and 2-embeddability, which is efficiently solvable since every planar graph with maximum degree 4 admits a 2-embedding except for the octahedron. In addition to the polynomial-time algorithm we show that FlexDraw is -hard even if the edges with flexibility 0 induce a tree or a union of disjoint stars.", "paper_title": "Orthogonal Graph Drawing with Flexibility Constraints", "paper_id": "WOS:000331645500003"}