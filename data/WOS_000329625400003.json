{"auto_keywords": [{"score": 0.028295418723826942, "phrase": "oragent"}, {"score": 0.00481495049065317, "phrase": "increasing_number"}, {"score": 0.004773904938276846, "phrase": "social_computational_systems"}, {"score": 0.0046928556063004214, "phrase": "great_amount"}, {"score": 0.004652845998457721, "phrase": "autonomous_entities"}, {"score": 0.004573842508130535, "phrase": "highly_dynamic_and_unpredictable_environments"}, {"score": 0.004419819325202464, "phrase": "high-level_abstraction"}, {"score": 0.004252707756312684, "phrase": "novel_mechanism"}, {"score": 0.004056981775766067, "phrase": "agent-oriented_programming"}, {"score": 0.004022380460067035, "phrase": "aop"}, {"score": 0.003920295222165263, "phrase": "potential_paradigm"}, {"score": 0.0036448787596988423, "phrase": "social_ability"}, {"score": 0.0034033029171804106, "phrase": "multi-agent_system"}, {"score": 0.003374499693623457, "phrase": "mas"}, {"score": 0.0032465423581390625, "phrase": "artificial_intelligence"}, {"score": 0.0030705342386533083, "phrase": "proven_principles"}, {"score": 0.0028060889647071787, "phrase": "dynamic_and_flexible_mas"}, {"score": 0.0026998264237910884, "phrase": "novel_aop_approach"}, {"score": 0.002597577409911978, "phrase": "dynamic_and_flexible_systems"}, {"score": 0.002553382046204689, "phrase": "software_engineering_perspective"}, {"score": 0.0025099367332615794, "phrase": "organizational_concepts"}, {"score": 0.002467228805628948, "phrase": "aop_language"}, {"score": 0.002373767863833987, "phrase": "explicit_primitives"}, {"score": 0.0023434058350520763, "phrase": "proposed_approach"}, {"score": 0.0023035249767734286, "phrase": "programming_model"}, {"score": 0.002274059352027922, "phrase": "corresponding_programming_language"}, {"score": 0.002197309930460606, "phrase": "formal_operational_semantics"}, {"score": 0.002178529882942255, "phrase": "oragent_language"}], "paper_keywords": ["agent", " agent-oriented programming", " organization-based programming", " role enactment", " role-based interactions", " organization abstraction"], "paper_abstract": "An increasing number of social computational systems consist of a great amount of autonomous entities and operate in highly dynamic and unpredictable environments. To construct such systems needs to seek high-level abstraction to manage the complexity of the systems and novel mechanism to support their characteristics, i.e., dynamism and flexibility. Agent-oriented programming (AOP) is considered as a potential paradigm for developing such systems by exhibiting a number of characteristics, such as autonomy, flexibility, social ability, etc. However, current researches on AOP mainly focus on the construction of multi-agent system (MAS) with theory and language facilities inspired from artificial intelligence (AI) and distributed AI, seldom considering and integrating the proven principles and practices of programming and software engineering. Moreover, abstractions and mechanism based on AI are inadequate for developing dynamic and flexible MAS in open environment. This paper proposes a novel AOP approach, namely Oragent, for constructing and implementing dynamic and flexible systems. From a software engineering perspective, Oragent integrates organizational concepts and mechanism into AOP language, and support the dynamism and flexibility with explicit primitives. The proposed approach consists of a programming model and a corresponding programming language. This paper presents the syntax and formal operational semantics of Oragent language, and studies a case to demonstrate our approach.", "paper_title": "Organization-based agent-oriented programming: model, mechanisms, and language", "paper_id": "WOS:000329625400003"}