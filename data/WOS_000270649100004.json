{"auto_keywords": [{"score": 0.048942952634754504, "phrase": "mutual_information"}, {"score": 0.04849559522610527, "phrase": "genetic_algorithms"}, {"score": 0.041652837252711225, "phrase": "input_variables"}, {"score": 0.03903762293211749, "phrase": "large_number"}, {"score": 0.00481495049065317, "phrase": "input_determination_techniques"}, {"score": 0.0047689174754929195, "phrase": "neural_network_models"}, {"score": 0.004545240514015278, "phrase": "artificial_neural_networks"}, {"score": 0.003643607569483598, "phrase": "anns_applications"}, {"score": 0.0035060903664150115, "phrase": "detrimental_effects"}, {"score": 0.003325410433297401, "phrase": "greater_amount"}, {"score": 0.003215295260684715, "phrase": "connection_weights"}, {"score": 0.0031845067058084583, "phrase": "additional_inputs"}, {"score": 0.003108814986752103, "phrase": "required_time"}, {"score": 0.0029914213495838998, "phrase": "training_algorithm"}, {"score": 0.0029203055813347874, "phrase": "local_minimum"}, {"score": 0.0027564303939865476, "phrase": "spurious_variables"}, {"score": 0.002527654365712841, "phrase": "appropriate_selection_technique"}, {"score": 0.00242047093248845, "phrase": "smallest_number"}, {"score": 0.0023972750359328235, "phrase": "independent_inputs"}, {"score": 0.00236289633510808, "phrase": "useful_predictors"}, {"score": 0.0021049977753042253, "phrase": "appropriate_model_inputs"}], "paper_keywords": ["Input determination techniques", " Artificial neural networks", " Mutual information", " Genetic algorithms"], "paper_abstract": "The use of artificial neural networks (ANNs) models has grown considerably over the last decade. One of the difficulties in using ANNs is the fact that in most cases there are several numbers of input variables available. In the past, there was a tendency to use a large number of inputs in ANNs applications. This can have a number of detrimental effects on the network during training and it also requires a greater amount of data to efficiently estimate the connection weights. Additional inputs tend to increase the required time for training and the risk of the training algorithm becoming stuck in a local minimum. A large number of inputs also increases the risk of including spurious variables that merely increase the noise in the forecasts. Consequently, it is important to use an appropriate selection technique of the input variables in order to obtain the smallest number of independent inputs that are useful predictors for the system which is being researched. The aim of this paper is to review techniques that will allow the selection of appropriate model inputs based particularly on mutual information and genetic algorithms.", "paper_title": "Review of input determination techniques for neural network models based on mutual information and genetic algorithms", "paper_id": "WOS:000270649100004"}