{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "edit_similarity_joins"}, {"score": 0.004643839937761046, "phrase": "important_role"}, {"score": 0.004478782833067256, "phrase": "data_integration"}, {"score": 0.004372002674739612, "phrase": "record_linkage"}, {"score": 0.004293584349522444, "phrase": "pattern_recognition"}, {"score": 0.004091248980678087, "phrase": "efficient_algorithms"}, {"score": 0.003945754887845885, "phrase": "edit_distance_constraint"}, {"score": 0.003714629047818465, "phrase": "overlapping_grams"}, {"score": 0.003352256019007896, "phrase": "existing_approaches"}, {"score": 0.003252542052430779, "phrase": "novel_approach"}, {"score": 0.003099113156350047, "phrase": "nonoverlapping_substrings"}, {"score": 0.0028650312174624635, "phrase": "chunking_schemes"}, {"score": 0.0027630232270330402, "phrase": "tail-restricted_chunk_boundary_dictionary"}, {"score": 0.0026646374739979694, "phrase": "vchunkjoin"}, {"score": 0.0025697460140513932, "phrase": "existing_filtering_methods"}, {"score": 0.002404447017429959, "phrase": "greedy_algorithm"}, {"score": 0.0023328599525181707, "phrase": "good_chunking_scheme"}, {"score": 0.0021960024679620886, "phrase": "new_algorithm"}, {"score": 0.002143529653780496, "phrase": "alternative_methods"}], "paper_keywords": ["Edit similarity joins", " approximate string matching", " prefix filtering", " q-gram", " edit distance"], "paper_abstract": "Similarity joins play an important role in many application areas, such as data integration and cleaning, record linkage, and pattern recognition. In this paper, we study efficient algorithms for similarity joins with an edit distance constraint. Currently, the most prevalent approach is based on extracting overlapping grams from strings and considering only strings that share a certain number of grams as candidates. Unlike these existing approaches, we propose a novel approach to edit similarity join based on extracting nonoverlapping substrings, or chunks, from strings. We propose a class of chunking schemes based on the notion of tail-restricted chunk boundary dictionary. A new algorithm, VChunkJoin, is designed by integrating existing filtering methods and several new filters unique to our chunk-based method. We also design a greedy algorithm to automatically select a good chunking scheme for a given data set. We demonstrate experimentally that the new algorithm is faster than alternative methods yet occupies less space.", "paper_title": "VChunkJoin: An Efficient Algorithm for Edit Similarity Joins", "paper_id": "WOS:000321261000018"}