{"auto_keywords": [{"score": 0.044791802253866926, "phrase": "trace_files"}, {"score": 0.04291449762322168, "phrase": "compression_method"}, {"score": 0.031000926924159483, "phrase": "compressed_trace_files"}, {"score": 0.027210105357521077, "phrase": "pdi"}, {"score": 0.027028258535168763, "phrase": "lbtc"}, {"score": 0.015350944223630529, "phrase": "trace-driven_simulation"}, {"score": 0.012184442580031986, "phrase": "running_simulations"}, {"score": 0.010524692294124467, "phrase": "previous_works"}, {"score": 0.00869439664356401, "phrase": "proposed_method"}, {"score": 0.008460082196532003, "phrase": "pdats"}, {"score": 0.00748090039436749, "phrase": "sbc"}, {"score": 0.00481495049065317, "phrase": "efficient_trace_file_compression_design"}, {"score": 0.004557943646825813, "phrase": "power_consumption"}, {"score": 0.004495854882808791, "phrase": "cpu_time"}, {"score": 0.004344292058151148, "phrase": "massive_storage_space"}, {"score": 0.004255807517348647, "phrase": "benchmark_programs"}, {"score": 0.004183442897207925, "phrase": "important_task"}, {"score": 0.004042369239448456, "phrase": "storage_space"}, {"score": 0.003800271653332246, "phrase": "important_approach"}, {"score": 0.0034520742915588004, "phrase": "novel_compression_method"}, {"score": 0.0034167069467881143, "phrase": "high_trace_file_compression_ratio"}, {"score": 0.0032788123043064475, "phrase": "higher_compression_ratios"}, {"score": 0.0031464653712924436, "phrase": "dynamic_reference_table"}, {"score": 0.003071736386629292, "phrase": "executed_programs"}, {"score": 0.0030298312658908855, "phrase": "non-sequential_addresses"}, {"score": 0.002998776886514782, "phrase": "trace_file"}, {"score": 0.0028482011835781434, "phrase": "on-the-fly_decompression_method"}, {"score": 0.002686643644493607, "phrase": "simulation_results"}, {"score": 0.002631832840403278, "phrase": "superior_compression_ratios"}, {"score": 0.0025168725317085195, "phrase": "sbc."}, {"score": 0.002201187194326849, "phrase": "improved_compression_time"}, {"score": 0.0021861082519868567, "phrase": "decompression_time"}], "paper_keywords": ["difference", " lossless coding", " trace compression", " trace-driven simulation", " on-the-fly decompression"], "paper_abstract": "Trace-driven simulation is a simple, fast, and convenient approach to simulate computer architecture for power consumption, throughput, CPU time, and other factors. However, trace-driven simulation requires a massive storage space to save the trace files of benchmark programs. Therefore, an important task is how to design a compression method that reduces the storage space of trace files efficiently. In addition to the compression method, on-the-fly decompression is an important approach to decrease the time of running simulations. Rather than providing the compression method and being absent from the on-the-fly decompression, this paper proposes a novel compression method with a high trace file compression ratio, and provides on-the-fly decompression. To obtain higher compression ratios for compressing trace files compared to previous works, this study proposes a dynamic reference table that accounts for the locality of executed programs to compress the non-sequential addresses in a trace file. In addition, to use compressed trace files easily, this study also proposes an on-the-fly decompression method to decrease the duration of running simulations and efficiently reduce the time for decompressing compressed trace files. The simulation results showed that the proposed method yielded superior compression ratios compared to previous works, including PDATS, PDI, LBTC, and SBC. Conversely, the sizes of the compressed trace files using our proposed method are 58%, 8%, 11%, and 57% of those with PDATS, PDI, LBTC, and SBC, respectively. In addition, the proposed method showed improved compression time and decompression time than PDI, LBTC, and SBC, which considers both addresses and instructions.", "paper_title": "Efficient Trace File Compression Design with Locality and Address Difference", "paper_id": "WOS:000325302300015"}