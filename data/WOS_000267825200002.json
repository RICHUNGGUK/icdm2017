{"auto_keywords": [{"score": 0.045526138066185134, "phrase": "flexsoc_framework"}, {"score": 0.00481495049065317, "phrase": "datapath_control"}, {"score": 0.0047588556219929756, "phrase": "efficient_computing"}, {"score": 0.0041586840496756474, "phrase": "conventional_five-stage_pipeline"}, {"score": 0.004014923642015515, "phrase": "exposed_datapath_control"}, {"score": 0.0039449104968131655, "phrase": "flexible_interconnect"}, {"score": 0.0036553070575015344, "phrase": "code_generation"}, {"score": 0.0035082436540296406, "phrase": "specialized_datapath_units"}, {"score": 0.0033083236588614174, "phrase": "compilation_framework"}, {"score": 0.003101503914610488, "phrase": "conventional_five-stage_general-purpose_processor"}, {"score": 0.0028736379396305596, "phrase": "cycle_count"}, {"score": 0.0027417911324611917, "phrase": "embedded_application_domain"}, {"score": 0.002409503258044183, "phrase": "flexcore_architecture"}, {"score": 0.0022854384756395116, "phrase": "exposed_flexcore_datapath"}, {"score": 0.00224551648748308, "phrase": "wide_control_word"}, {"score": 0.002206290313627494, "phrase": "conducted_evaluation"}, {"score": 0.002129877319760485, "phrase": "instruction_bandwidth"}, {"score": 0.0021049977753042253, "phrase": "memory_footprint"}], "paper_keywords": ["Flexible", " Interconnect", " Computer architecture", " Reconfigurable"], "paper_abstract": "We introduce FlexCore, the first exemplar of an architecture based on the FlexSoC framework. Comprising the same datapath units found in a conventional five-stage pipeline, the FlexCore has an exposed datapath control and a flexible interconnect to allow the datapath to be dynamically reconfigured as a consequence of code generation. Additionally, the FlexCore allows specialized datapath units to be inserted and utilized within the same architecture and compilation framework. This study shows that, in comparison to a conventional five-stage general-purpose processor, the FlexCore is up to 40% more efficient in terms of cycle count on a set of benchmarks from the embedded application domain. We show that both the fine-grained control and the flexible interconnect contribute to the speedup. Furthermore, according to our VLSI implementation study, the FlexCore architecture offers both time and energy savings. The exposed FlexCore datapath requires a wide control word. The conducted evaluation confirms that this increases the instruction bandwidth and memory footprint. This calls for efficient instruction decoding as proposed in the FlexSoC framework.", "paper_title": "FlexCore: Utilizing Exposed Datapath Control for Efficient Computing", "paper_id": "WOS:000267825200002"}