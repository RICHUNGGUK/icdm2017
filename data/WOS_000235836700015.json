{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "off-the-shelf_third_party_components"}, {"score": 0.0041657281535389615, "phrase": "user_requirement"}, {"score": 0.003697100573612401, "phrase": "particular_users"}, {"score": 0.0032255172568437965, "phrase": "bad_behaviors"}, {"score": 0.0030127172247606812, "phrase": "safety_properties"}, {"score": 0.0027662954811372175, "phrase": "interface_specifications"}, {"score": 0.0026282000779095987, "phrase": "goal_specification"}, {"score": 0.0021968238865548812, "phrase": "temporal_logic_formula"}], "paper_keywords": [""], "paper_abstract": "Software is being developed from off-the-shelf third party components. The interface specification of such a component may be under specified or may not fully match the user requirement. In this paper, we address the problem of customizing such components to particular users. We achieve this by constructing a monitor that monitors the component and detects any bad behaviors. Construction of such monitors essentially involves synthesizing safety properties that imply a given property that is obtained from the interface specifications of the component and the goal specification of the user. We present various methods for synthesizing such safety properties when the given property is given by an automaton or a temporal logic formula. We show that our methods are sound and complete. These results are extensions of the results given in [11].", "paper_title": "Monitoring off-the-shelf components", "paper_id": "WOS:000235836700015"}