{"auto_keywords": [{"score": 0.04349317877091025, "phrase": "partial_product_initialization"}, {"score": 0.04309795273052841, "phrase": "xor_extraction"}, {"score": 0.04251153857508317, "phrase": "carry-signal_mapping"}, {"score": 0.03808744219400253, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "debugging_arithmetic_circuits"}, {"score": 0.0046797114400479135, "phrase": "novel_automatic_debugging_algorithm"}, {"score": 0.004613516457919661, "phrase": "postsynthesis_combinational_arithmetic_circuit"}, {"score": 0.004462663711734448, "phrase": "wide_varieties"}, {"score": 0.004420472010542188, "phrase": "arithmetic_circuit_architectures"}, {"score": 0.0043786774510943625, "phrase": "design_optimizations"}, {"score": 0.004316722156877335, "phrase": "debugging_algorithm"}, {"score": 0.004000741805312148, "phrase": "run-time_complexity"}, {"score": 0.003962899903266524, "phrase": "conventional_carry-signal-mapping_algorithms"}, {"score": 0.003815064377019477, "phrase": "stoffel"}, {"score": 0.003778985005019547, "phrase": "kunz"}, {"score": 0.0035022161192936234, "phrase": "important_design_issues"}, {"score": 0.003419943984098415, "phrase": "extracted_xors"}, {"score": 0.0032149396890830575, "phrase": "multioperand_adders"}, {"score": 0.0031845067058084583, "phrase": "pin-swap_techniques"}, {"score": 0.0030802351224657673, "phrase": "xor_terms"}, {"score": 0.0029793675408245047, "phrase": "commutative_and_associative_laws"}, {"score": 0.0028006988338192375, "phrase": "conventional_techniques"}, {"score": 0.002696101728474703, "phrase": "whole_netlist"}, {"score": 0.0024984517279573906, "phrase": "proper_logics"}, {"score": 0.0024281181691350085, "phrase": "xor_extraction_phase"}, {"score": 0.0023936956017015696, "phrase": "problematic_xors"}, {"score": 0.0022824314760583834, "phrase": "automatic_replacement"}], "paper_keywords": ["Arithmetic circuits", " logic debugging", " postsynthesis verification"], "paper_abstract": "This paper presents a novel automatic debugging algorithm for a postsynthesis combinational arithmetic circuit. The approach is robust under wide varieties of arithmetic circuit architectures and design optimizations. The debugging algorithm in this paper consists of three phases of partial product initialization, XOR extraction, and carry-signal mapping. The run-time complexity of conventional carry-signal-mapping algorithms, such as the approach described by Stoffel and Kunz, is exponential. However, in the proposed algorithm, by making use of some important design issues, we categorize the extracted XORS into half/full-adders to make a very fast debugging algorithm. This approach is robust under multioperand adders, pin-swap techniques, optimizations concerning carry signals or XOR terms, and irregularities, such as commutative and associative laws. Moreover, the XOR extraction in the proposed algorithm is much faster than conventional techniques, as it does not evaluate the whole netlist. The bugs detected in the partial product initialization and the carry-signal mapping can automatically be replaced with proper logics. However, during the XOR extraction phase, the problematic XORs are only reported by the algorithm, and no automatic replacement is performed for such logic gates. To evaluate the effectiveness of our approach, we run it on several arithmetic circuits.", "paper_title": "A Formal Approach for Debugging Arithmetic Circuits", "paper_id": "WOS:000265486900011"}