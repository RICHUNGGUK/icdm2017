{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hardware-software_collaborative_techniques"}, {"score": 0.00468991337957911, "phrase": "dynamic_binary_translation_system"}, {"score": 0.004640808212832262, "phrase": "traditional_software-based_solutions"}, {"score": 0.004568108391981922, "phrase": "significant_runtime_overhead"}, {"score": 0.004426092397211699, "phrase": "extra_complex_optimization"}, {"score": 0.004288472456976113, "phrase": "hardware-software_collaboration_techniques"}, {"score": 0.004199101289890982, "phrase": "high_efficient_dynamic_binary_translation_system"}, {"score": 0.0039006600544599537, "phrase": "host_processor"}, {"score": 0.003799275066001196, "phrase": "existing_processor"}, {"score": 0.0037005154613244363, "phrase": "major_performance_bottlenecks"}, {"score": 0.0035853745478488254, "phrase": "pure_software-solution"}, {"score": 0.003437387719239532, "phrase": "suitable_hardware-software_partition_process"}, {"score": 0.0034013521529056715, "phrase": "codbt"}, {"score": 0.003278167066287366, "phrase": "hardware-based_binary_translator"}, {"score": 0.0031594291695784286, "phrase": "intermediate_instruction_set"}, {"score": 0.00291923164591297, "phrase": "novel_runtime"}, {"score": 0.0029038817737006405, "phrase": "profiling_strategy"}, {"score": 0.002769304577201566, "phrase": "hot_spots_information"}, {"score": 0.0027258422018680453, "phrase": "potential_future_optimizations"}, {"score": 0.0025994945418484935, "phrase": "implementation_approach"}, {"score": 0.0025722202862084186, "phrase": "dbt_system"}, {"score": 0.0024529757621396717, "phrase": "significant_performance_improvements"}, {"score": 0.0023891283748647416, "phrase": "appropriate_hardware_support_choices"}, {"score": 0.0023146962503449186, "phrase": "efficient_and_cost-effective_solution"}, {"score": 0.0022544399432457164, "phrase": "usual_methods"}, {"score": 0.0021957487795963666, "phrase": "dynamic_binary_translation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Dynamic binary translation", " Hardware/software collaboration", " Multi-source", " Runtime profiling"], "paper_abstract": "For implementing a dynamic binary translation system, traditional software-based solutions suffer from significant runtime overhead and are not suitable for extra complex optimization. This paper proposes using hardware-software collaboration techniques to create an high efficient dynamic binary translation system, CoDBT, which emulates several heterogeneous ISAs (Instruction Set Architectures) on a host processor without changing to the existing processor. We analyze the major performance bottlenecks via evaluating overhead of a pure software-solution DBT. Guidelines are provided for applying a suitable hardware-software partition process to CoDBT, as are algorithms for designing hardware-based binary translator and code cache management. An intermediate instruction set is introduced to make multi-source translation more practicable and scalable. Meantime, a novel runtime profiling strategy is integrated into the infrastructure to collect program hot spots information to supporting potential future optimizations. The advantages of using co-design as an implementation approach for DBT system are assessed by several SPEC benchmarks. Our results demonstrate that significant performance improvements can be achieved with appropriate hardware support choices. CoDBT could be an efficient and cost-effective solution for situations where the usual methods of performance acceleration for dynamic binary translation are inappropriate. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "CoDBT: A multi-source dynamic binary translator using hardware-software collaborative techniques", "paper_id": "WOS:000284570600002"}