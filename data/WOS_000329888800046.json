{"auto_keywords": [{"score": 0.0462368381299012, "phrase": "rgc"}, {"score": 0.008498181927413853, "phrase": "enumerated_mepss"}, {"score": 0.008306071895439101, "phrase": "maximal_frequent_itemsets"}, {"score": 0.0070473270181969465, "phrase": "remaining_uncovered_positive_instances"}, {"score": 0.006830666328340906, "phrase": "maximum-sized_meps"}, {"score": 0.00677406949174953, "phrase": "mrf"}, {"score": 0.006457216572878635, "phrase": "mrf_repetition"}, {"score": 0.0062325622109702045, "phrase": "uci-repository_datasets"}, {"score": 0.005488539854965353, "phrase": "hyperrectangles_output"}, {"score": 0.00481495049065317, "phrase": "rectangle_greedy_covers"}, {"score": 0.004774937143916685, "phrase": "efficient_construction_methods"}, {"score": 0.004579780586951551, "phrase": "greedy_cover"}, {"score": 0.004522796947899013, "phrase": "positive_instances"}, {"score": 0.004503959683578956, "phrase": "exclusive_axis-parallel_hyperrectangles"}, {"score": 0.004374267836149339, "phrase": "compact_classification_rule"}, {"score": 0.0043560464825349275, "phrase": "high_readability"}, {"score": 0.004195418010131832, "phrase": "disjunctive_normal_form"}, {"score": 0.004066076430818046, "phrase": "rgc_construction"}, {"score": 0.003990385737207714, "phrase": "enumeration_approach"}, {"score": 0.003965468669507077, "phrase": "maximal_exclusive_positive_subsets"}, {"score": 0.003685972800046028, "phrase": "efficient_enumeration_algorithm"}, {"score": 0.003617332099542474, "phrase": "enumeration_algorithm"}, {"score": 0.0034118234596993836, "phrase": "effective_dynamic_reordering"}, {"score": 0.0033834307787947047, "phrase": "excluded_frequency"}, {"score": 0.003369322866499541, "phrase": "bit-parallel_exclusiveness_check"}, {"score": 0.0031712256091350316, "phrase": "whole_negative_instances"}, {"score": 0.0030414140732789186, "phrase": "lcmmax"}, {"score": 0.002711109302199029, "phrase": "introduced_two_improvements"}, {"score": 0.0026000831253641344, "phrase": "practical_usage"}, {"score": 0.0025838249689625775, "phrase": "experimental_results"}, {"score": 0.002535656384127549, "phrase": "nearest_rectangle_classifier"}, {"score": 0.00246765655376112, "phrase": "randomized_subclass_method"}, {"score": 0.002411541097685622, "phrase": "component_rectangles"}, {"score": 0.002341958967624892, "phrase": "rsm."}, {"score": 0.0022696277881969896, "phrase": "six_popular_classifiers"}, {"score": 0.0022601535748259785, "phrase": "logistic_regression"}, {"score": 0.0022507188208913394, "phrase": "support_vector_machine"}, {"score": 0.0022366403187359628, "phrase": "disjunctive_normal_form_representation"}, {"score": 0.0022226496830385304, "phrase": "classification_rules"}, {"score": 0.0021405218946318623, "phrase": "rsm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Greedy cover", " Axis-parallel hyperrectangle", " Classification", " Data mining"], "paper_abstract": "We develop efficient construction methods of a rectangle greedy cover (RGC), and evaluate its usefulness in applications. An RGC is a greedy cover of the set of given positive instances by exclusive axis-parallel hyperrectangles, namely, axis-parallel hyperrectangles that exclude all the given negative instances. An RGC is expected to be a compact classification rule with high readability because the number of its component rectangles is expected to be small and it can be seen as a disjunctive normal form, which is one of the most readable representations for us. We propose two approaches of RGC construction: enumeration approach and direct approach. In enumeration approach, the maximal exclusive positive subsets (MEPSs) are enumerated first and then an ordinary greedy set covering is done using the enumerated MEPSs. We make clear the relation between enumeration of the maximal frequent itemsets and enumeration of the MEPSs, and convert an efficient enumeration algorithm LCMmax [1] of maximal frequent itemsets to an enumeration algorithm LCMmax.R-naive of MEPSs. We also develop a more efficient version of LCMmax.R-naive, or LCMmax.R, by incorporating effective dynamic reordering of instances using excluded frequency and bit-parallel exclusiveness check. In direct approach, each component MEPS of an RGC is searched not from enumerated MEPSs but directly from the dataset that consists of the remaining uncovered positive instances and the whole negative instances. We developed an algorithm called MRF that efficiently finds an maximum-sized MEPS for given positive and negative instances. MRF is made from LCMmax.R by modifying it so as to find a maximum-sized MEPS only. An RGC is constructed by MRF repetition, that is, by repeatedly executing MRF using the remaining uncovered positive instances. According to our experimental evaluation using UCI-repository datasets, LCMmax.R was about 5-11 times faster than LCMmax.Rnaive, which indicates effectiveness of the introduced two improvements. MRF repetition, however, was significantly faster than LCMmax.R, and it was fast enough for practical usage. The experimental results using UCI-repository datasets also showed that accuracy of a nearest rectangle classifier using an RGC is close to that using the hyperrectangles output by the randomized subclass method (RSM) [2] though the number of component rectangles of an RGC is significantly smaller than the number of the hyperrectangles output by RSM. The performance of RGC was also shown to be comparable to that of the six popular classifiers including logistic regression and support vector machine. The disjunctive normal form representation of the classification rules obtained by RGC was demonstrated to be simpler and more readable for us than that obtained by RSM and C4.5. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "An efficient construction and application usefulness of rectangle greedy covers", "paper_id": "WOS:000329888800046"}