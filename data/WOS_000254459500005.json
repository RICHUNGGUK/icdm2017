{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "quantum"}, {"score": 0.0045726187330434025, "phrase": "language_l"}, {"score": 0.00443308765153716, "phrase": "property_tester"}, {"score": 0.004209893377338457, "phrase": "probabilistic_algorithm"}, {"score": 0.0032176163279340206, "phrase": "large_hamming_distance"}, {"score": 0.0030554300179552415, "phrase": "l._we"}, {"score": 0.0029013950320185573, "phrase": "similar_notion"}, {"score": 0.002841971477743441, "phrase": "quantum_property_testing"}, {"score": 0.0026161698049580804, "phrase": "good_quantum_property_testers"}, {"score": 0.0022168460543913787, "phrase": "large_number"}, {"score": 0.0021049977753042253, "phrase": "quantumly_testing"}], "paper_keywords": ["quantum computing", " property testing"], "paper_abstract": "A language L has a property tester if there exists a probabilistic algorithm that given an input x queries only a small number of bits of x and distinguishes the cases as to whether x is in L and x has large Hamming distance from all y in L. We de. ne a similar notion of quantum property testing and show that there exist languages with good quantum property testers but no good classical testers. We also show there exist languages which require a large number of queries even for quantumly testing.", "paper_title": "Quantum property testing", "paper_id": "WOS:000254459500005"}