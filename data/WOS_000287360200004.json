{"auto_keywords": [{"score": 0.0438193436311179, "phrase": "fpga"}, {"score": 0.00481495049065317, "phrase": "smart_camera"}, {"score": 0.004668059458774745, "phrase": "new_approach"}, {"score": 0.004596295252559861, "phrase": "contour-tracing_algorithm"}, {"score": 0.004525629293824217, "phrase": "low-power_smart_camera"}, {"score": 0.0043875257506180865, "phrase": "embedded_system"}, {"score": 0.004039423410198574, "phrase": "linear-time_algorithm"}, {"score": 0.003936389070602614, "phrase": "connected_components"}, {"score": 0.003531474887552889, "phrase": "high-speed_real-time_operation"}, {"score": 0.0033883824438527316, "phrase": "proposed_method"}, {"score": 0.0032848684681050745, "phrase": "sequential_co-processing_algorithm"}, {"score": 0.003071274938566466, "phrase": "intermediate_representation"}, {"score": 0.0030396665931462, "phrase": "directional_information"}, {"score": 0.0029620573986902416, "phrase": "fpga_image-processing_design"}, {"score": 0.0029164434911787187, "phrase": "pre-processed_data"}, {"score": 0.0028273061946184645, "phrase": "software_component"}, {"score": 0.0026986685585382347, "phrase": "final_result"}, {"score": 0.0026161698049580804, "phrase": "sorted_list"}, {"score": 0.0025892330566358503, "phrase": "contour_points"}, {"score": 0.002445950676329976, "phrase": "data_throughput"}, {"score": 0.0023711591828229736, "phrase": "hardware_resources"}, {"score": 0.0022749744354271816, "phrase": "consecutive_images"}, {"score": 0.0022399174232611853, "phrase": "runtime_behaviour"}, {"score": 0.0022053994402287925, "phrase": "parallel_operation"}, {"score": 0.002137947680862631, "phrase": "real-time_requirements"}], "paper_keywords": ["Image processing", " Object recognition", " Contour tracing", " FPGA pre-processing", " FPGA filtering"], "paper_abstract": "This paper describes a new approach for a contour-tracing algorithm targeting a low-power smart camera for industrial inspection. This embedded system consists of the three major components: CMOS sensor, FPGA and microprocessor. By analysing a linear-time algorithm used for simultaneously labelling connected components and their contours, two independent tasks could be identified. By efficiently assigning these two parts to the FPGA and the microprocessor achieving high-speed real-time operation is possible. The novelty of the proposed method is the development of a sequential co-processing algorithm for the FPGA. A Contour-Neighbourhood 3 x 3 filter kernel for converting the grey-level data to an intermediate representation containing directional information was added into an FPGA image-processing design. This pre-processed data is then provided to a software component which is executed on a microprocessor. The final result of this analysis is a sorted list of contour points for each object in the image. Further increases of the data throughput and the workload of the hardware resources are achievable by pipelining the subtasks of consecutive images. The runtime behaviour of this parallel operation is sufficient for meeting the real-time requirements of an industrial 2D measurement system.", "paper_title": "A co-processed contour tracing algorithm for a smart camera", "paper_id": "WOS:000287360200004"}