{"auto_keywords": [{"score": 0.03700385809508468, "phrase": "tetrahedral_mesh"}, {"score": 0.00481495049065317, "phrase": "dynamic_geometry"}, {"score": 0.004752221133109136, "phrase": "fluid_simulations"}, {"score": 0.004363846362238565, "phrase": "standard_way"}, {"score": 0.0038271712887391015, "phrase": "alternative_strategy"}, {"score": 0.003703611021999795, "phrase": "whole_sequence"}, {"score": 0.003378385493203297, "phrase": "specific_time_step"}, {"score": 0.0027560092576928595, "phrase": "topological_changes"}, {"score": 0.00266693888510356, "phrase": "simplification_algorithms"}, {"score": 0.0026148807877309417, "phrase": "temporal_coherence"}, {"score": 0.0024007585788965655, "phrase": "previous_gpu-"}, {"score": 0.0023079225317714815, "phrase": "out-_of-_core_multiresolution_structure"}, {"score": 0.0022628564592874147, "phrase": "quadric_error_simplification"}, {"score": 0.0022041312401435346, "phrase": "second_application"}, {"score": 0.0021049977753042253, "phrase": "varying_surfaces"}], "paper_keywords": ["hypermeshes", " multiresolution", " GPU-assisted rendering", " interactive visualization"], "paper_abstract": "Fluid simulations typically produce complex three- dimensional ( 3D) isosurfaces whose geometry and topology change over time. The standard way of representing such \"dynamic geometry\" is by a set of isosurfaces that are extracted individually at certain time steps. An alternative strategy is to represent the whole sequence as a four- dimensional ( 4D) tetrahedral mesh. The isosurface at a specific time step can then be computed by intersecting the tetrahedral mesh with a 3D hyperplane. This not only allows the animation of the surface continuously over time without having to worry about the topological changes, but also enables simplification algorithms to exploit temporal coherence. We show how to interactively render such 4D tetrahedral meshes by improving previous GPU- accelerated techniques and building an out- of- core multiresolution structure based on quadric error simplification. As a second application, we apply our framework to time- varying surfaces that result from morphing one triangle mesh into another.", "paper_title": "Interactive rendering of dynamic geometry", "paper_id": "WOS:000255550600016"}