{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "bin_packing_heuristics"}, {"score": 0.04945540937697203, "phrase": "genetic_programming"}, {"score": 0.00465964893087681, "phrase": "bin-packing_problem"}, {"score": 0.004568871736067739, "phrase": "well_known_np-hard_optimisation_problem"}, {"score": 0.004167982855788402, "phrase": "good_quality_solutions"}, {"score": 0.004007083686875716, "phrase": "genetic_programming_system"}, {"score": 0.002982068153662372, "phrase": "fixed_framework"}, {"score": 0.0028857130140890787, "phrase": "open_bins"}, {"score": 0.0025977542995083624, "phrase": "best_evolved_programs"}, {"score": 0.002497319603143104, "phrase": "human_designed_'first-fit'_heuristic"}, {"score": 0.0021049977753042253, "phrase": "high_quality_heuristics"}], "paper_keywords": [""], "paper_abstract": "The bin-packing problem is a well known NP-Hard optimisation problem, and, over the years, many heuristics have been developed to generate good quality solutions. This paper outlines a genetic programming system which evolves a heuristic that decides whether to put a piece in a bin when presented with the sum of the pieces already in the bin and the size of the piece that is about to be packed. This heuristic operates in a fixed framework that iterates through the open bins, applying the heuristic to each one, before deciding which bin to use. The best evolved programs emulate the functionality of the human designed 'first-fit' heuristic. Thus, the contribution of this paper is to demonstrate that genetic programming can be employed to automatically evolve bin packing heuristics which are the same as high quality heuristics which have been designed by humans.", "paper_title": "Evolving bin packing heuristics with genetic programming", "paper_id": "WOS:000241446400087"}