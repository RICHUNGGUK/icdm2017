{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "python"}, {"score": 0.04926405051585262, "phrase": "open_quantum_systems"}, {"score": 0.013728797567613278, "phrase": "master_equation"}, {"score": 0.009888079789996422, "phrase": "distributed_program"}, {"score": 0.009804357850033392, "phrase": "test_data"}, {"score": 0.004666397248938625, "phrase": "object-oriented_open-source_framework"}, {"score": 0.004522406417999492, "phrase": "arbitrary_hamiltonians"}, {"score": 0.004483909657713567, "phrase": "time-dependent_systems"}, {"score": 0.0043208252177835815, "phrase": "quantum_object_class"}, {"score": 0.004175533280178052, "phrase": "monte_carlo"}, {"score": 0.004069766428492073, "phrase": "basic_structure"}, {"score": 0.003989351600022163, "phrase": "numerical_simulation"}, {"score": 0.003966667994579941, "phrase": "open_system_dynamics"}, {"score": 0.0038332390893263844, "phrase": "complete_calculation"}, {"score": 0.0036937324041350097, "phrase": "current_implementations"}, {"score": 0.0035491469311213, "phrase": "quantum_optics"}, {"score": 0.003528957477793481, "phrase": "superconducting_circuit_devices"}, {"score": 0.0034789831290103967, "phrase": "trapped_ions"}, {"score": 0.003390799914533271, "phrase": "classroom_instruction"}, {"score": 0.0033532663006674117, "phrase": "program"}, {"score": 0.0032860401904845522, "phrase": "python_catalogue_identifier"}, {"score": 0.0031845067058084583, "phrase": "cpc_program_library"}, {"score": 0.003166384930533443, "phrase": "queen's_university"}, {"score": 0.003148366187634132, "phrase": "belfast"}, {"score": 0.003130449195105333, "phrase": "n._ireland"}, {"score": 0.003094920033010818, "phrase": "gnu_general_public_license"}, {"score": 0.0026756848139722744, "phrase": "linux"}, {"score": 0.002660520094453948, "phrase": "mac"}, {"score": 0.002637827608231063, "phrase": "windows"}, {"score": 0.002484225771461358, "phrase": "matplotlib"}, {"score": 0.002359759876402679, "phrase": "lindblad_master_equation"}, {"score": 0.0023463203637929466, "phrase": "monte_carlo_wave_function_method"}, {"score": 0.002254357921422124, "phrase": "lindblad_form"}, {"score": 0.0021413855297794946, "phrase": "underlying_hilbert_space"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Open quantum systems", " Lindblad master equation", " Quantum Monte Carlo", " Python"], "paper_abstract": "We present an object-oriented open-source framework for solving the dynamics of open quantum systems written in Python. Arbitrary Hamiltonians, including time-dependent systems, may be built up from operators and states defined by a quantum object class, and then passed on to a choice of master equation or Monte Carlo solvers. We give an overview of the basic structure for the framework before detailing the numerical simulation of open system dynamics. Several examples are given to illustrate the build up to a complete calculation. Finally, we measure the performance of our library against that of current implementations. The framework described here is particularly well suited to the fields of quantum optics, superconducting circuit devices, nanomechanics, and trapped ions, while also being ideal for use in classroom instruction. Program summary Program title: QuTiP: The Quantum Toolbox in Python Catalogue identifier: AEMB_v1_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEMB_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU General Public License, version 3 No. of lines in distributed program, including test data, etc.: 16482 No. of bytes in distributed program, including test data, etc.: 213 438 Distribution format: tar.gz Programming language: Python Computer: i386, x86-64 Operating system: Linux, Mac OSX, Windows RAM: 2+ Gigabytes Classification: 7 External routines: NumPy (http://numpy.scipy.org/), SciPy (http://www.scipy.org/), Matplotlib (http://matplotlib.sourceforge.net/) Nature of problem: Dynamics of open quantum systems. Solution method: Numerical solutions to Lindblad master equation or Monte Carlo wave function method. Restrictions: Problems must meet the criteria for using the master equation in Lindblad form. Running time: A few seconds up to several tens of minutes, depending on size of underlying Hilbert space. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "QuTiP: An open-source Python framework for the dynamics of open quantum systems", "paper_id": "WOS:000304384500024"}