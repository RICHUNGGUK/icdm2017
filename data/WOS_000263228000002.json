{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "pict_correctness"}, {"score": 0.004548253531664032, "phrase": "pict_programming_language"}, {"score": 0.00388828234270598, "phrase": "pi-calculus_terms"}, {"score": 0.0036207206487324506, "phrase": "abstract_machine"}, {"score": 0.0034690732089830045, "phrase": "important_property"}, {"score": 0.00332375606483146, "phrase": "concurrent_programming_language_implementation"}, {"score": 0.0031845067058084583, "phrase": "fair_execution"}, {"score": 0.0026077803487003, "phrase": "pict"}, {"score": 0.002570817338292482, "phrase": "abstract_machine_executions"}, {"score": 0.0024984517279573906, "phrase": "fair_pi-calculus_executions"}, {"score": 0.002326304140277375, "phrase": "new_proofs"}, {"score": 0.0021049977753042253, "phrase": "pict_abstract_machine"}], "paper_keywords": ["Pi-calculus", " Abstract machine", " Fairness", " Pict"], "paper_abstract": "The Pict programming language is an implementation of the pi-calculus in which executions of pi-calculus terms are specified via an abstract machine. An important property of any concurrent programming language implementation is the fair execution of threads. After defining fairness for the pi-calculus, we show that Pict abstract machine executions implement fair pi-calculus executions. We also give new proofs of soundness and liveness for the Pict abstract machine. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Pict correctness revisited", "paper_id": "WOS:000263228000002"}