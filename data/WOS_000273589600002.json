{"auto_keywords": [{"score": 0.03769716586279515, "phrase": "theta"}, {"score": 0.00481495049065317, "phrase": "k-mismatch_pattern"}, {"score": 0.004502126088469323, "phrase": "text_t"}, {"score": 0.00432423070113186, "phrase": "pattern_p"}, {"score": 0.004266501496765747, "phrase": "length_m"}, {"score": 0.004043158538239064, "phrase": "bound_k"}, {"score": 0.0033492947290751996, "phrase": "time_randomised_algorithm"}, {"score": 0.003260377175139591, "phrase": "correct_answer"}, {"score": 0.003216804708106142, "phrase": "high_probability"}, {"score": 0.002811770047652563, "phrase": "group_testing"}, {"score": 0.0021917966722180132, "phrase": "extra_cost"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Pattern matching", " String algorithms", " Randomised algorithms", " Group testing"], "paper_abstract": "We present solutions for the k-mismatch pattern matching problem with don't cares. Given a text t of length n and a pattern p of length m with don't care symbols and a bound k, our algorithms find all the places that the pattern matches the text with at most k mismatches. We first give a Theta (n(k+log m log k) log n) time randomised algorithm which finds the correct answer with high probability. We then present a new deterministic Theta(nk(2) log(2) M) time solution that uses tools originally developed for group testing. Taking our derandomisation approach further we develop an approach based on k-selectors that runs in Theta(nk polylog m) time. Further, in each case the location of the mismatches at each alignment is also given at no extra cost. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Pattern matching with don't cares and few errors", "paper_id": "WOS:000273589600002"}