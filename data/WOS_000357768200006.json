{"auto_keywords": [{"score": 0.04880638758905066, "phrase": "set_agreement_problem"}, {"score": 0.00481495049065317, "phrase": "crash-recovery_systems"}, {"score": 0.004521566043596533, "phrase": "n_proposed_values"}, {"score": 0.00384633057714983, "phrase": "failure_detector"}, {"score": 0.003777800904236079, "phrase": "asynchronous_systems"}, {"score": 0.0033914308417007316, "phrase": "different_identities"}, {"score": 0.0028076592725295646, "phrase": "weakest_failure_detector"}, {"score": 0.0026126405272417783, "phrase": "asynchronous_message"}, {"score": 0.0022218413146898887, "phrase": "equal_identities"}, {"score": 0.0021049977753042253, "phrase": "complete_initial_knowledge"}], "paper_keywords": [""], "paper_abstract": "The set agreement problem requires that from n proposed values at most n - 1 can be decided. Traditionally, this problem is solved using a failure detector in asynchronous systems where processes may crash but not recover, where processes have different identities, and where all processes initially know the membership. In this paper we study the set agreement problem, and the weakest failure detector L used to solve it, in asynchronous message passing systems where processes may crash and recover, with homonyms (i.e., processes may have equal identities), and without a complete initial knowledge of the membership.", "paper_title": "Set agreement and the loneliness failure detector in crash-recovery systems", "paper_id": "WOS:000357768200006"}