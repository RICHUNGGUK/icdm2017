{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "nearest_surrounders"}, {"score": 0.04936965530044379, "phrase": "object_environments"}, {"score": 0.004604023526673226, "phrase": "round-eye\""}, {"score": 0.0044685410845412745, "phrase": "nearest_surrounding_objects"}, {"score": 0.0041469500929423595, "phrase": "surveillance_applications"}, {"score": 0.0040854526743211396, "phrase": "core_part"}, {"score": 0.003984968827278219, "phrase": "continuous_nearest_surrounder"}, {"score": 0.0037913267098534887, "phrase": "nearest_objects"}, {"score": 0.003753738096719609, "phrase": "distinct_angles"}, {"score": 0.003716520760680603, "phrase": "query_points"}, {"score": 0.0036070601923916196, "phrase": "conventional_spatial_queries"}, {"score": 0.003553540530701019, "phrase": "range_queries"}, {"score": 0.0035183010916001664, "phrase": "nearest_neighbor_queries"}, {"score": 0.0034834098902271626, "phrase": "ns_query"}, {"score": 0.0033306180744375616, "phrase": "query_point"}, {"score": 0.0031845067058084583, "phrase": "centralized_server"}, {"score": 0.0030600032877646263, "phrase": "location_updates"}, {"score": 0.00286795254228461, "phrase": "ns_queries"}, {"score": 0.0027557911038816256, "phrase": "corresponding_result_changes"}, {"score": 0.0026086775334428617, "phrase": "affected_query_answers"}, {"score": 0.002544422946205545, "phrase": "system_performance"}, {"score": 0.0024941578231560055, "phrase": "processing_time"}, {"score": 0.0024693979425773993, "phrase": "network_bandwidth_consumption"}, {"score": 0.002136747803494932, "phrase": "proposed_techniques"}, {"score": 0.0021049977753042253, "phrase": "wide_range"}], "paper_keywords": ["moving objects", " nearest surrounder", " pervasive computing"], "paper_abstract": "This paper presents \"Round-Eye\", a system for tracking nearest surrounding objects (or nearest surrounders) in moving object environments. This system provides a platform for surveillance applications. The core part of this system is continuous nearest surrounder (NS) query that maintains views of the nearest objects at distinct angles from query points. This query differs from conventional spatial queries such as range queries and nearest neighbor queries as NS query considers both distance and angular aspects of objects with respect to a query point at the same time. In our system framework, a centralized server is dedicated (1) to collect location updates of both objects and queries, (2) to determine which NS queries are invalidated in presence of object/query location changes and corresponding result changes if any, and (3) to refresh the affected query answers. To enhance the system performance in terms of processing time and network bandwidth consumption, we propose various techniques, namely, safe region, partial query reevaluation, and incremental query result update. Through simulations, we evaluate our system with the proposed techniques over a wide range of settings. (C) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Round-Eye: A system for tracking nearest surrounders in moving object environments", "paper_id": "WOS:000251040800009"}