{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "embedded_controllers_based"}, {"score": 0.004743806810821005, "phrase": "anytime_computing"}, {"score": 0.004338390136272005, "phrase": "embedded_controllers"}, {"score": 0.004211069233133584, "phrase": "so-called_anytime_control_paradigm"}, {"score": 0.0038798015183611275, "phrase": "subroutine_calls"}, {"score": 0.0037101871762082153, "phrase": "control_goal"}, {"score": 0.003392804886610623, "phrase": "design_methodology"}, {"score": 0.003293142761521425, "phrase": "feedback_controller"}, {"score": 0.0030338645940033875, "phrase": "switching_policy"}, {"score": 0.002944715025443487, "phrase": "controller_subroutines"}, {"score": 0.002815864555488112, "phrase": "stability_guarantees"}, {"score": 0.0027535633837592597, "phrase": "closed-loop_system"}, {"score": 0.002574788013427524, "phrase": "stochastic_model"}, {"score": 0.0021049977753042253, "phrase": "realistic_real-time_task_sets"}], "paper_keywords": ["Anytime control", " embedded systems", " real-time control"], "paper_abstract": "In this paper, we present a methodology for designing embedded controllers based on the so-called anytime control paradigm. A control law is split into a sequence of subroutine calls, each one fulfilling a control goal and refining the result produced by the previous one. We propose a design methodology to define a feedback controller structured in accordance with this paradigm and show how a switching policy of selecting the controller subroutines can be designed that provides stability guarantees for the closed-loop system. The cornerstone of this construction is a stochastic model describing the probability of executing, in each activation of the controller, the different subroutines. We show how this model can be constructed for realistic real-time task sets and provide an experimental validation of the approach.", "paper_title": "Design of Embedded Controllers Based on Anytime Computing", "paper_id": "WOS:000283984900004"}