{"auto_keywords": [{"score": 0.04314875627016036, "phrase": "grammar_system"}, {"score": 0.02841775003608198, "phrase": "concurrent_programming_theory"}, {"score": 0.004327981760540394, "phrase": "related_models"}, {"score": 0.004013025478863664, "phrase": "concurrent_program"}, {"score": 0.0038556354709511818, "phrase": "owicki-gries_theory"}, {"score": 0.0037043953071235155, "phrase": "concurrent_programming"}, {"score": 0.0036553070575015344, "phrase": "converse_translation"}, {"score": 0.002900426826591769, "phrase": "agreement_language"}, {"score": 0.0028366012006726896, "phrase": "basic_non-context_free_constructions"}, {"score": 0.0025605773834404253, "phrase": "non-retuming_parallel_communicating_grammar_system"}, {"score": 0.0022806798371116698, "phrase": "parallel_communicating_grammar_system"}, {"score": 0.0021049977753042253, "phrase": "grammar_system_framework"}], "paper_keywords": ["parallel communicating grammar system", " multiprogramming", " Owicki-Gries theory"], "paper_abstract": "The aim of this note is to show how parallel communicating grammar systems and concurrent programs might be viewed as related models for distributed and cooperating computation. We argue that a grammar system can be translated into a concurrent program, where one can make use of the Owicki-Gries theory and other tools available in the theory of concurrent programming. The converse translation is also possible and this turns out to be useful when we are looking for a grammar system able to generate a given language. In order to show this, we use the language: L-cd = {a(n)b(m)c(n)d(m) vertical bar n, m >= }, called crossed agreement language, one of the basic non-context free constructions in natural and artificial languages. We prove, using tools from concurrent programming theory, that L-cd, can be generated by a non-retuming parallel communicating grammar system with three regular components. We also discuss the absence of strategies in the concurrent programming theory to prove that L-cd cannot be generated by any parallel communicating grammar system with two regular components only, no matter the working strategy, but we prove this statement in the grammar system framework.", "paper_title": "A possible connection between two theories: Grammar systems and concurrent programming", "paper_id": "WOS:000245937200008"}