{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "system_execution"}, {"score": 0.015275339512964505, "phrase": "software_system_performance_properties"}, {"score": 0.015129982192508388, "phrase": "unite"}, {"score": 0.0118510811489174, "phrase": "performance_analysis"}, {"score": 0.004205570965859848, "phrase": "system_execution_traces"}, {"score": 0.004026505114417176, "phrase": "system_execution_trace"}, {"score": 0.0035679633126097115, "phrase": "proper_planning"}, {"score": 0.00328625950643742, "phrase": "generated_system_execution_trace"}, {"score": 0.002828418443899226, "phrase": "setae"}, {"score": 0.0026049517737353365, "phrase": "software_systems"}, {"score": 0.0024578987081792405, "phrase": "different_open-source_projects"}, {"score": 0.002387507583705495, "phrase": "setaf"}, {"score": 0.0023644936731468252, "phrase": "proper_performance_analysis"}, {"score": 0.002230984431056064, "phrase": "originating_software_system's_source_code"}, {"score": 0.0021670777282518424, "phrase": "expensive_and_time-consuming_task"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["SETAF", " System execution traces", " Adaptation"], "paper_abstract": "UNITE is a method and tool that analyzes software system performance properties, e.g., end-to-end response time, throughput, and service time, via system execution traces. UNITE, however, assumes that a system execution trace contains properties (e.g., identifiable keywords, unique message instances, and enough variation among the same event types) to support performance analysis. With proper planning, it is possible to ensure that properties required to support such analysis are incorporated in the generated system execution trace. It, however, is not safe to assume this to be the case with many existing software systems. This article therefore presents a method and a tool called the System Execution Trace Adaptation Framework (SETAE), which is built atop of UNITE and adapts system execution traces to support performance analysis of software systems. It also presents examples and results of applying SETAF to different open-source projects. The results show that SETAF enables proper performance analysis via system execution traces without requiring developers to make modifications to the originating software system's source code, which can be a expensive and time-consuming task. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Adapting system execution traces to support analysis of software system performance properties", "paper_id": "WOS:000324898300010"}