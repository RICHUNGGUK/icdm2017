{"auto_keywords": [{"score": 0.030813660850066347, "phrase": "hadamard"}, {"score": 0.00481495049065317, "phrase": "gaussian_random_number_generators"}, {"score": 0.004548253531664032, "phrase": "important_component"}, {"score": 0.004462663711734448, "phrase": "parallel_monte_carlo_simulations"}, {"score": 0.004175533280178052, "phrase": "high-quality_gaussian_samples"}, {"score": 0.00369022262431101, "phrase": "table-hadamard_generator"}, {"score": 0.0033875770020590796, "phrase": "multiple_streams"}, {"score": 0.00332375606483146, "phrase": "random_numbers"}, {"score": 0.0031393948330209224, "phrase": "discrete_table_distributions"}, {"score": 0.003051073364818384, "phrase": "pseudo-gaussian_base_samples"}, {"score": 0.0027479040199262393, "phrase": "central_limit_theorem"}, {"score": 0.0024747842618794255, "phrase": "generated_sample"}, {"score": 0.0022076314894741394, "phrase": "next_best_technique"}, {"score": 0.0021049977753042253, "phrase": "higher_statistical_quality"}], "paper_keywords": ["Arithmetic operations", " parallel algorithms", " reconfigurable applications"], "paper_abstract": "Gaussian random number generators (GRNGs) are an important component in parallel Monte Carlo simulations using FPGAs, where tens or hundreds of high-quality Gaussian samples must be generated per cycle using very few logic resources. This article describes the Table-Hadamard generator, which is a GRNG designed to generate multiple streams of random numbers in parallel. It uses discrete table distributions to generate pseudo-Gaussian base samples, then a parallel Hadamard transform to efficiently apply the central limit theorem. When generating 64 output samples, the Table-Hadamard requires just 130 slices per generated sample, which is a third of the resources needed by the next best technique, while still providing higher statistical quality.", "paper_title": "The Table-Hadamard GRNG: An Area-Efficient FPGA Gaussian Random Number Generator", "paper_id": "WOS:000363659000003"}