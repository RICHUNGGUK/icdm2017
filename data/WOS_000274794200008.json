{"auto_keywords": [{"score": 0.04806645810598007, "phrase": "java"}, {"score": 0.00481495049065317, "phrase": "synchronous_scheduling_service"}, {"score": 0.004763565662615503, "phrase": "distributed_real-time_java"}, {"score": 0.004712726613162057, "phrase": "current_trends"}, {"score": 0.004662427600500598, "phrase": "real-time_systems"}, {"score": 0.004539005582217309, "phrase": "new_alternative"}, {"score": 0.004233119608341877, "phrase": "real-time_specification"}, {"score": 0.004011867299107537, "phrase": "substantial_ongoing_activity"}, {"score": 0.003926626018798576, "phrase": "straightforward_and_valuable_distributed_real-time_specification"}, {"score": 0.0037615180375561805, "phrase": "current_paper"}, {"score": 0.0036422425344358037, "phrase": "latter_activity"}, {"score": 0.0035648266669315943, "phrase": "different_angles"}, {"score": 0.0033602844686125375, "phrase": "popular_real-time_architectures"}, {"score": 0.0031504667809625344, "phrase": "end-to-end_guarantees"}, {"score": 0.002695768552609587, "phrase": "portable_model"}, {"score": 0.002568435291444709, "phrase": "distributed_object-oriented_implementation"}, {"score": 0.0024868972942701582, "phrase": "real-time_remote_method_invocation"}, {"score": 0.002162379426839795, "phrase": "preliminary_predictability"}, {"score": 0.0021392418081444798, "phrase": "performance_assessment"}, {"score": 0.0021049977753042253, "phrase": "distributed_real-time_java_technology"}], "paper_keywords": ["Real time", " synchronous scheduling", " distributed real-time Java", " RTRMI", " RTSJ"], "paper_abstract": "Current trends in real-time systems identify Java as a new alternative to develop both centralized and distributed real-time systems. Many efforts have been devoted to develop the Real-Time Specification for Java (RTSJ), and there is substantial ongoing activity to produce a straightforward and valuable Distributed Real-Time Specification for Java (DRTSJ). The current paper provides a contribution to this latter activity defining, from different angles, a synchronous scheduling service aligned with principles of some popular real-time architectures. This service orchestrates the system in such a way that it provides end-to-end guarantees in the distributed transactions, guaranteeing their timely execution across the network and nodes. The service is described from two points of view: the system one, characterizing a portable model; and the programmer one, defining a distributed object-oriented implementation of a model based on Real-Time Remote Method Invocation (RTRMI). Finally, it also presents results of an implementation carried out to judge the efficiency of the service, offering a preliminary predictability and performance assessment of a distributed real-time Java technology.", "paper_title": "A Synchronous Scheduling Service for Distributed Real-Time Java", "paper_id": "WOS:000274794200008"}