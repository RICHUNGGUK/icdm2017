{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "metric_spaces"}, {"score": 0.004695900553353526, "phrase": "set_d"}, {"score": 0.004551199992546761, "phrase": "reverse_nearest_neighbor"}, {"score": 0.004066076430818046, "phrase": "query_object"}, {"score": 0.003701401653850141, "phrase": "existing_rnn_solutions"}, {"score": 0.003454858296390957, "phrase": "precomputed_information"}, {"score": 0.0029909851863915283, "phrase": "euclidean_objects"}, {"score": 0.002688532127821979, "phrase": "first_algorithms"}, {"score": 0.002655017467085696, "phrase": "efficient_rnn_search"}, {"score": 0.00262191949451482, "phrase": "generic_metric_spaces"}, {"score": 0.0025409639091476363, "phrase": "detailed_representations"}, {"score": 0.002283913454238574, "phrase": "distance_metric"}, {"score": 0.0022413233627905696, "phrase": "triangle_inequality"}, {"score": 0.0021315842986705485, "phrase": "proposed_methods"}, {"score": 0.0021049977753042253, "phrase": "extensive_experiments"}], "paper_keywords": ["reverse nearest neighbor", " metric space"], "paper_abstract": "Given a set D of objects, a reverse nearest neighbor (RNN) query returns the objects o in D such that o is closer to a query object q than to any other object in D, according to a certain similarity metric. The existing RNN solutions are not sufficient because they either 1) rely on precomputed information that is expensive to maintain in the presence of updates or 2) are applicable only when the data consists of \"Euclidean objects\" and similarity is measured using the L-2 norm. In this paper, we present the first algorithms for efficient RNN search in generic metric spaces. Our techniques require no detailed representations of objects, and can be applied as long as their mutual distances can be computed and the distance metric satisfies the triangle inequality. We confirm the effectiveness of the proposed methods with extensive experiments.", "paper_title": "Reverse nearest neighbor search in metric spaces", "paper_id": "WOS:000239077800007"}