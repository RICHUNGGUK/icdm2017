{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "nash_equilibria"}, {"score": 0.0493588904307621, "phrase": "bimatrix_games"}, {"score": 0.004671156704912419, "phrase": "gpu-based_parallel_support_enumeration"}, {"score": 0.004396267325338022, "phrase": "strategic_analysis"}, {"score": 0.004168986485488861, "phrase": "resource_allocation"}, {"score": 0.0038938807148174975, "phrase": "moderately_sized_games"}, {"score": 0.0036924762294207633, "phrase": "lower_execution_times"}, {"score": 0.003501452436803395, "phrase": "parallel_processing_capabilities"}, {"score": 0.0033967510986397946, "phrase": "currently_available_massively_parallel_architectures"}, {"score": 0.0031484483754909026, "phrase": "gpu-based_parallel_support_enumeration_algorithm"}, {"score": 0.0030776800536616677, "phrase": "nash"}, {"score": 0.0028309318332306703, "phrase": "new_parallelization_method"}, {"score": 0.0027671619871474764, "phrase": "high_degrees"}, {"score": 0.0026640466056415298, "phrase": "massively_parallel_gpu_architectures"}, {"score": 0.0025843206540392184, "phrase": "extensive_experiments"}, {"score": 0.0024504843466435487, "phrase": "proposed_algorithm"}, {"score": 0.0023591417077156555, "phrase": "significant_speedups"}, {"score": 0.002254003531073337, "phrase": "mpi-based_parallel_implementations"}, {"score": 0.002203200914130907, "phrase": "support_enumeration_method"}, {"score": 0.0021049977753042253, "phrase": "multi-core_computers"}], "paper_keywords": ["Nash equilibria", " game theory", " parallel algorithms", " GPU", " OpenMP", " MPI"], "paper_abstract": "Computing Nash equilibria is a very important problem in strategic analysis of markets, conflicts, and resource allocation. Unfortunately, computing these equilibria even for moderately sized games is computationally expensive. To obtain lower execution times it is essential to exploit the parallel processing capabilities offered by the currently available massively parallel architectures. To address this issue, we design a GPU-based parallel support enumeration algorithm for computing Nash equilibria in bimatrix games. The algorithm is based on a new parallelization method which achieves high degrees of parallelism suitable for massively parallel GPU architectures. We perform extensive experiments to characterize the performance of the proposed algorithm. The algorithm achieves significant speedups relative to the OpenMP and MPI-based parallel implementations of the support enumeration method running on a cluster of multi-core computers.", "paper_title": "Computing Nash Equilibria in Bimatrix Games: GPU-Based Parallel Support Enumeration", "paper_id": "WOS:000347015800007"}