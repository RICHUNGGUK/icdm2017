{"auto_keywords": [{"score": 0.039591164034645916, "phrase": "prime_factors"}, {"score": 0.03700380491311325, "phrase": "fermat's_algorithm"}, {"score": 0.034287434471945516, "phrase": "epf"}, {"score": 0.03328379379492012, "phrase": "composite_number"}, {"score": 0.00481495049065317, "phrase": "fermat_factorization"}, {"score": 0.004752221133109136, "phrase": "continued_fraction_technique"}, {"score": 0.004690305164360866, "phrase": "integer_factorization_problem"}, {"score": 0.004392565073466714, "phrase": "limited_computational_capability"}, {"score": 0.004297560964892607, "phrase": "vulnerable_integers"}, {"score": 0.004149792080414689, "phrase": "cloud_computing"}, {"score": 0.003607630811220324, "phrase": "suitable_size"}, {"score": 0.003423042581201533, "phrase": "simplest_method"}, {"score": 0.0030281251520610604, "phrase": "continued_fractions"}, {"score": 0.002508284945907166, "phrase": "loop_count"}, {"score": 0.0023384629381463054, "phrase": "prime_factor"}, {"score": 0.0021705796895687864, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Integer factorization problem", " IFP", " Fermat's algorithm", " Continued fraction", " Estimated prime factor"], "paper_abstract": "Although Integer Factorization Problem (IFP) is one of the most difficult problems in the world due to the limited computational capability, there exist some vulnerable integers which are factorable by the development of cloud computing. For example, given an integer N = pg, which is a product of two primes, it is hard to determine the prime factors p and q efficiently. However, for the suitable size of a number N, Fermat's algorithm may be one of the simplest method for solving it. In this paper, a method called EPF for estimating the prime factors of a composite number is proposed. We use the technique of continued fractions to output two integers, p(E) + q(E) and p(E) . q(E), which are close to p + g and p . q, respectively. Furthermore, we show that EPF can be adopted to reduce the loop count in Fermat's algorithm before factoring a composite number. The effect depends on the size of the prime factor. We believe that there are still other applications as well wherein EPF can be used. Crown Copyright (C) 2013 Published by Elsevier B.V. All rights reserved.", "paper_title": "On the improvement of Fermat factorization using a continued fraction technique", "paper_id": "WOS:000329007500019"}