{"auto_keywords": [{"score": 0.00474283953918251, "phrase": "multi-threaded_tasks"}, {"score": 0.0045158206186680224, "phrase": "pay-per-use_access"}, {"score": 0.004315879542755464, "phrase": "simple_access"}, {"score": 0.0038683363637006902, "phrase": "client_tasks"}, {"score": 0.0038392331564122387, "phrase": "allocated_virtual_machines"}, {"score": 0.003363830908814182, "phrase": "virtual_machine_allocation_policy"}, {"score": 0.003313380246267812, "phrase": "scheduling_outcome"}, {"score": 0.0031665087019813244, "phrase": "virtual_machine_instance_type"}, {"score": 0.0030955250132409964, "phrase": "provisioning_method"}, {"score": 0.0029360049890445944, "phrase": "mathematical_model"}, {"score": 0.002859345731792013, "phrase": "single_or_multiple_instance_types"}, {"score": 0.0026411384812121503, "phrase": "workflow_applications"}, {"score": 0.002562451837774567, "phrase": "general_relation"}, {"score": 0.002495521662819317, "phrase": "synthetically_generated_workflows"}, {"score": 0.002458061764297103, "phrase": "wide_range"}, {"score": 0.0024395426929046415, "phrase": "possible_cases"}, {"score": 0.002366847878952636, "phrase": "probabilistic_selection_methods"}, {"score": 0.002340147988348115, "phrase": "small_and_heterogeneous_execution_times"}, {"score": 0.002287646331988365, "phrase": "large_homogeneous_ones"}, {"score": 0.00227040825063645, "phrase": "best_algorithm"}, {"score": 0.0021861425611350857, "phrase": "powerful_instance_types"}, {"score": 0.002153316680437517, "phrase": "weaker_ones"}, {"score": 0.002120982646893519, "phrase": "dynamic_methods"}, {"score": 0.0021049977753042253, "phrase": "static_ones"}], "paper_keywords": ["Workflow scheduling", " Virtual machine provisioning", " Cloud computing", " Cost and makespan modeling"], "paper_abstract": "Cloud computing promises the delivery of on-demand pay-per-use access to unlimited resources. Using these resources requires more than a simple access to them as most clients have certain constraints in terms of cost and time that need to be fulfilled. Therefore certain scheduling heuristics have been devised to optimize the placement of client tasks on allocated virtual machines. The applications can be roughly divided in two categories: independent bag-of-tasks and workflows. In this paper we focus on the latter and investigate a less studied problem, i.e., the effect the virtual machine allocation policy has on the scheduling outcome. For this we look at how workflow structure, execution time, virtual machine instance type affect the efficiency of the provisioning method when cost and makespan are considered. To aid our study we devised a mathematical model for cost and makespan in case single or multiple instance types are used. While the model allows us to determine the boundaries for two of our extreme methods, the complexity of workflow applications calls for a more experimental approach to determine the general relation. For this purpose we considered synthetically generated workflows that cover a wide range of possible cases. Results have shown the need for probabilistic selection methods in case small and heterogeneous execution times are used, while for large homogeneous ones the best algorithm is clearly noticed. Several other conclusions regarding the efficiency of powerful instance types as compared to weaker ones, and of dynamic methods against static ones are also made.", "paper_title": "On the efficiency of several VM provisioning strategies for workflows with multi-threaded tasks on clouds", "paper_id": "WOS:000344168800003"}