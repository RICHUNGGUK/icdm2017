{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "gridspace_-_semantic"}, {"score": 0.004466519142879166, "phrase": "grid_computing_plaform"}, {"score": 0.0034984340449789745, "phrase": "legacy_applications"}, {"score": 0.003038237581227068, "phrase": "quite_a_challenge"}, {"score": 0.0029816229984366374, "phrase": "today's_grid_middleware"}, {"score": 0.002818013056816282, "phrase": "new_approach"}, {"score": 0.002765490759189057, "phrase": "grid_programming"}, {"score": 0.002688532127821979, "phrase": "presented_solution"}, {"score": 0.0026384167183586015, "phrase": "gridspace"}, {"score": 0.0025171669791790438, "phrase": "component_programming_methodology"}, {"score": 0.002470237978694949, "phrase": "semantic_grid_initiative_achievements"}, {"score": 0.0023566987138026285, "phrase": "dynamic_organization"}, {"score": 0.0023127544795063263, "phrase": "semantic_comparison_techniques"}, {"score": 0.0021049977753042253, "phrase": "grid_applications"}], "paper_keywords": ["grid programming", " semantic discovery", " dynamic workflow"], "paper_abstract": "The Grid computing plaform which has emerged recently, while robust and feature-rich, is still considerably complex to program for. Not only the migration of legacy applications is difficult - even the development of a new, complex application from the beginning could be quite a challenge using today's Grid middleware. This work proposes a new approach to Grid programming. The presented solution called GridSpace, based on the component programming methodology and Semantic Grid initiative achievements, employs decomposition, dynamic organization and semantic comparison techniques in order to provide a new, abstract layer for programmers of Grid applications.", "paper_title": "GridSpace - Semantic programming environment for the grid", "paper_id": "WOS:000238107100022"}