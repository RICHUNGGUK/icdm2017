{"auto_keywords": [{"score": 0.034940932061321935, "phrase": "negative_pattern_matching"}, {"score": 0.00481495049065317, "phrase": "pattern_matching"}, {"score": 0.0047732596509542135, "phrase": "network_intrusion_detection_systems"}, {"score": 0.004731928080086235, "phrase": "high-speed_network_intrusion_detection_systems"}, {"score": 0.00457013354092966, "phrase": "fast_pattern_matching"}, {"score": 0.0045108906244892165, "phrase": "parallel_tcam-based_pattern_matching_algorithms"}, {"score": 0.004394688617163029, "phrase": "even_higher_line_rate"}, {"score": 0.00428146713705618, "phrase": "parallel_tcam-based_pattern_matching_engines"}, {"score": 0.004028452405970376, "phrase": "fine-grained_parallelism"}, {"score": 0.003976203286249396, "phrase": "load_balancing"}, {"score": 0.0037411604449359794, "phrase": "performance_gain"}, {"score": 0.0037087324991876727, "phrase": "increased_power_consumption"}, {"score": 0.0034143003168921114, "phrase": "ultra-scalable_nids."}, {"score": 0.0031568884810273226, "phrase": "fine-grained_load_balancing"}, {"score": 0.0030092043899087734, "phrase": "npm"}, {"score": 0.002906138793910919, "phrase": "ternary_content_addressable_memory"}, {"score": 0.002806595775343074, "phrase": "power_consumption"}, {"score": 0.0027104531025934865, "phrase": "exclusive_pattern_matching"}, {"score": 0.002652039172817654, "phrase": "rule_sets"}, {"score": 0.002105007807034302, "phrase": "elsevier"}], "paper_keywords": ["Negative pattern", " Exclusive matching", " Pattern matching", " Intrusion detection"], "paper_abstract": "High-speed network intrusion detection systems (NIDSes) commonly employ TCAMs for fast pattern matching, and parallel TCAM-based pattern matching algorithms have proven promising to achieve even higher line rate. However, two challenges impede parallel TCAM-based pattern matching engines from being truly scalable, namely: (1) how to implement fine-grained parallelism to optimize load balancing and maximize throughput, and (2) how to reconcile between the performance gain and increased power consumption both due to parallelism. In this paper, we propose two techniques to answer the above challenges yielding an ultra-scalable NIDS. We first introduce the concept of negative pattern matching, by which we can splice flows into segments for fine-grained load balancing and optimized parallel speedup while ensuring correctness, negative pattern matching (NPM) also dramatically reduces the number of Ternary Content Addressable Memory (TCAM) lookups thus reducing the power consumption. Then we propose the idea of exclusive pattern matching, which divides the rule sets into subsets; each subset is queried selectively and independently given a certain input without affecting correctness. In concert, these two techniques improve both the pattern matching throughput and scalability in any scenario. Our experimental results show that up to 90% TCAM lookups can be saved, at the cost of merely 10% additional 2-byte index table lookups in the SRAM. (C) 2015 Elsevier BM. All rights reserved.", "paper_title": "Algorithms to speedup pattern matching for network intrusion detection systems", "paper_id": "WOS:000355046000005"}