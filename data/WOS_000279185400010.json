{"auto_keywords": [{"score": 0.04857562547389659, "phrase": "self-organizing_maps"}, {"score": 0.0048149540663384284, "phrase": "som."}, {"score": 0.004738765336344627, "phrase": "parallel_implementation"}, {"score": 0.004693631352125911, "phrase": "distinctly_different_concept"}, {"score": 0.004361526027730043, "phrase": "input_space"}, {"score": 0.0043199694330708464, "phrase": "single_input_instances"}, {"score": 0.004144399274022276, "phrase": "simple_multi-machine_concept"}, {"score": 0.004065781456356258, "phrase": "parallel_nature"}, {"score": 0.004027031316965272, "phrase": "neural_network_architecture"}, {"score": 0.003950631096355195, "phrase": "classic_som"}, {"score": 0.003925486550801027, "phrase": "ozdzynski"}, {"score": 0.003875812382877018, "phrase": "lin"}, {"score": 0.003826492478418294, "phrase": "liljeholm"}, {"score": 0.0037779353922392117, "phrase": "beatty"}, {"score": 0.0036592001010420667, "phrase": "kohonen's_self-organizing_map_algorithm"}, {"score": 0.0034109154088832376, "phrase": "true_parallel_execution"}, {"score": 0.0033142503315912986, "phrase": "expensive_hardware"}, {"score": 0.0032826392745833872, "phrase": "considerable_algorithm_adaptation"}, {"score": 0.003240958183116486, "phrase": "multiple_instances"}, {"score": 0.0032203623502991613, "phrase": "som"}, {"score": 0.0031998046354547705, "phrase": "multiple_machines"}, {"score": 0.0031091037560494806, "phrase": "controller-worker_architecture"}, {"score": 0.00307944332532505, "phrase": "controller_machine"}, {"score": 0.003050064985384108, "phrase": "significant_bottleneck"}, {"score": 0.002973081656751767, "phrase": "valova"}, {"score": 0.002935319576795509, "phrase": "szer"}, {"score": 0.002917241175885743, "phrase": "d."}, {"score": 0.00287038349042963, "phrase": "buer"}, {"score": 0.002616274347640382, "phrase": "parasom"}, {"score": 0.0025665698207861533, "phrase": "significant_adaptation"}, {"score": 0.0022875127203850027, "phrase": "parallel_paradigm"}, {"score": 0.002244040022860764, "phrase": "performance_gain"}, {"score": 0.002222613784010603, "phrase": "proposed_implementation"}, {"score": 0.0021049977753042253, "phrase": "mapping_algorithm"}], "paper_keywords": ["self-organizing maps", " growing neural networks", " parallelism"], "paper_abstract": "This work describes a parallel implementation of a distinctly different concept in self-organizing maps (SOMs)-processing of the input as a whole, in parallel, via neurons attracted to cover regions of the input space rather than single input instances. The algorithm is analyzed from the perspective of its parallelism and a simple multi-machine concept is utilized to demonstrate the parallel nature of the neural network architecture. The nature of the classic SOM (Ozdzynski, P., Lin, A., Liljeholm, M. and Beatty, J. (2002) A parallel implementation of Kohonen's self-organizing map algorithm: performance and scalability. Neurocomputing, 44-46, 567-571) algorithm displays some parallel characteristics, but contains several bottlenecks, which prevent a true parallel execution. Most SOM parallel implementations either deal with expensive hardware that requires considerable algorithm adaptation, or run multiple instances of SOM on multiple machines and choose the most relevant, or adopt controller-worker architecture with the controller machine presenting a significant bottleneck in the parallelism. Our algorithm (Valova, I., Szer, D., Gueorguieva, G. and Buer, A. (2005) A parallel growing architecture for self-organizing maps with unsupervised learning. Neurocomputing, 68C, 177-195), which we eventually named ParaSOM, reveals no need for significant adaptation to be ported to parallelism and the analysis and implementations we discuss illustrate this quality. This work presents two designs for parallelizing our algorithm and analyzes both while demonstrating the easiness in the transition to a parallel paradigm. We have illustrated the performance gain of the proposed implementation and compared it with other similar methods, from the perspectives of both parallelism and nature of the mapping algorithm.", "paper_title": "NIPSOM: Parallel Architecture and Implementation of a Growing SOM", "paper_id": "WOS:000279185400010"}