{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "functional_dependencies"}, {"score": 0.045912844607109565, "phrase": "identification_constraints"}, {"score": 0.0047283116134926645, "phrase": "first-class_citizens"}, {"score": 0.004051828608343507, "phrase": "full_status"}, {"score": 0.003978866233891427, "phrase": "concept_constructors"}, {"score": 0.003871869188502677, "phrase": "boolean-complete_description_logic"}, {"score": 0.003600351201298387, "phrase": "surprisingly_simple_forms"}, {"score": 0.00334780964309978, "phrase": "associated_logical_implication_problem"}, {"score": 0.002947611960613497, "phrase": "left-hand_side"}, {"score": 0.0026188490199688013, "phrase": "identification_constraint"}, {"score": 0.00245724480030654, "phrase": "monotone_concept_constructors"}, {"score": 0.002391067964886602, "phrase": "right-hand_side"}, {"score": 0.0022434880661725493, "phrase": "decidable_implication_problems"}], "paper_keywords": ["description logics", " path-functional dependency", " relational keys"], "paper_abstract": "We investigate whether identification constraints such as keys and functional dependencies can be granted full status as concept constructors in a Boolean-complete description logic. In particular, we show that surprisingly simple forms of such constraints lead to undecidability of the associated logical implication problem if they are allowed within the scope of a negation or on the left-hand side of inclusion dependencies. We then show that allowing a very general form of identification constraint to occur in the scope of monotone concept constructors on the right-hand side of inclusion dependencies still leads to decidable implication problems. We consider the relationship between certain classes of identification constraints and nominals.", "paper_title": "On keys and functional dependencies as first-class citizens in description logics", "paper_id": "WOS:000254201400003"}