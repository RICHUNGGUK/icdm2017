{"auto_keywords": [{"score": 0.048949445942657245, "phrase": "petri_nets"}, {"score": 0.00481495049065317, "phrase": "step_firing_policies"}, {"score": 0.0047464608267006395, "phrase": "unconstrained_step_semantics"}, {"score": 0.004232331639807526, "phrase": "maximally_concurrent_semantics"}, {"score": 0.004132411680987228, "phrase": "priority_orders"}, {"score": 0.003958439439112026, "phrase": "general_way"}, {"score": 0.003902085339580381, "phrase": "step_semantics"}, {"score": 0.0037199473428123175, "phrase": "concurrent_behaviour"}, {"score": 0.003580355398511932, "phrase": "modelling_features"}, {"score": 0.003429544382524185, "phrase": "policy_disables"}, {"score": 0.0033166379485150507, "phrase": "enabled_steps"}, {"score": 0.003043031131345537, "phrase": "synthesis_problem"}, {"score": 0.002928765962664163, "phrase": "generalised_regions"}, {"score": 0.00290087451159631, "phrase": "step_transition_systems"}, {"score": 0.00283229915062791, "phrase": "axiomatic_characterisation"}, {"score": 0.002791932344920906, "phrase": "transition_systems"}, {"score": 0.0027129118211250336, "phrase": "reachability_graphs"}, {"score": 0.0024301229420875155, "phrase": "linear_rewards"}, {"score": 0.002316532084420729, "phrase": "single_transition"}, {"score": 0.0022188370388602813, "phrase": "current_net_marking"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": ["Petri nets", " step firing policy", " step transition system", " regions", " synthesis problem"], "paper_abstract": "The unconstrained step semantics of Petri nets is impractical for simulating and modelling applications. In the past, this inadequacy has been alleviated by introducing various flavours of maximally concurrent semantics, as well as priority orders. In this paper, we introduce a general way of controlling step semantics of Petri nets through step firing policies that restrict the concurrent behaviour of Petri nets and so improve their execution and modelling features. In a nutshell, a step firing policy disables at each marking a subset of enabled steps which could otherwise be executed. We discuss various examples of step firing policies and then investigate the synthesis problem for Petri nets controlled by such policies. Using generalised regions of step transition systems, we provide an axiomatic characterisation of those transition systems which can be realised as reachability graphs of Petri nets controlled by a given step firing policy. We also provide two different decision and synthesis algorithms for PT-nets and step firing policies based on linear rewards of steps, where the reward for firing a single transition is either fixed or it depends on the current net marking. The simplicity of the algorithms supports our claim that the proposed approach is practical.", "paper_title": "Synthesis of Nets with Step Firing Policies", "paper_id": "WOS:000271472900002"}