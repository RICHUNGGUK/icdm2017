{"auto_keywords": [{"score": 0.04928674718599398, "phrase": "software_engineering"}, {"score": 0.02322730111336099, "phrase": "grammatical_inference"}, {"score": 0.00421297029755273, "phrase": "pattern_recognition"}, {"score": 0.004143196873246147, "phrase": "computational_biology"}, {"score": 0.004074574278425223, "phrase": "natural_language_processing"}, {"score": 0.0035648266669315943, "phrase": "unknown_language"}, {"score": 0.003066945490483524, "phrase": "convenient_tool"}, {"score": 0.0027974705482714884, "phrase": "first-class_objects"}, {"score": 0.0026384167183586015, "phrase": "specific_purpose"}, {"score": 0.002594652434287807, "phrase": "human_designers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Grammatical inference", " Software engineering", " Grammar induction"], "paper_abstract": "Grammatical inference - used successfully in a variety of fields such as pattern recognition, computational biology and natural language processing - is the process of automatically inferring a grammar by examining the sentences of an unknown language. Software engineering can also benefit from grammatical inference. Unlike these other fields, which use grammars as a convenient tool to model naturally occurring patterns, software engineering treats grammars as first-class objects typically created and maintained for a specific purpose by human designers. We introduce the theory of grammatical inference and review the state of the art as it relates to software engineering. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A survey of grammatical inference in software engineering", "paper_id": "WOS:000345181300004"}