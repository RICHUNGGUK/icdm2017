{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "versatile_pointer_analysis_framework"}, {"score": 0.004730158389701481, "phrase": "current_pointer_analysis_techniques"}, {"score": 0.004484596684703308, "phrase": "heap_accesses"}, {"score": 0.0040309035566691645, "phrase": "valuable_information"}, {"score": 0.0038900709793274484, "phrase": "dynamic_memory"}, {"score": 0.003754140294151593, "phrase": "pointer-based_programs"}, {"score": 0.003465350958971198, "phrase": "unified_framework"}, {"score": 0.003374094774912924, "phrase": "broadened_perspective"}, {"score": 0.0031422859551159506, "phrase": "available_techniques"}, {"score": 0.002900426826591769, "phrase": "early_view"}, {"score": 0.0027495914857929584, "phrase": "graph-based_shape_analysis_technique"}, {"score": 0.002629889135655667, "phrase": "early_experiments"}, {"score": 0.0025605773834404253, "phrase": "detailed_information"}, {"score": 0.0022404162042797262, "phrase": "def-use_information"}, {"score": 0.0021049977753042253, "phrase": "shape_analysis"}], "paper_keywords": [""], "paper_abstract": "Current pointer analysis techniques fail to find parallelism in heap accesses. However, some of them are still capable of obtaining valuable information about the way dynamic memory is used in pointer-based programs. It would be desirable to have a unified framework with a broadened perspective that can take the best out of available techniques and compensate for their weaknesses. We present an early view of such a framework, featuring a graph-based shape analysis technique. We describe some early experiments that obtain detailed information about how dynamic memory arranges in the heap. Furthermore, we document how def-use information can be used to greatly optimize shape analysis.", "paper_title": "Towards a versatile pointer analysis framework", "paper_id": "WOS:000241469500029"}