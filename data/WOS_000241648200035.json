{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "sigref_-_a"}, {"score": 0.004488734023485018, "phrase": "uniform_signature-based_approach"}, {"score": 0.0034162643819889054, "phrase": "efficient_bdd_operations"}, {"score": 0.0032094634756436595, "phrase": "appropriate_signature"}, {"score": 0.0030625949549620475, "phrase": "rapid_development"}, {"score": 0.0028325548627901004, "phrase": "experimental_evidence"}, {"score": 0.0026402908398883832, "phrase": "computational_results"}, {"score": 0.002559072326933071, "phrase": "real-world_instances"}, {"score": 0.002366763442497185, "phrase": "state_spaces"}, {"score": 0.0021049977753042253, "phrase": "explicit_state_space_description"}], "paper_keywords": [""], "paper_abstract": "We present a uniform signature-based approach to compute the most popular bisimulations. Our approach is implemented symbolically using BDDs, which enables the handling of very large transition systems. Signatures for the bisimulations are built up from a few generic building blocks, which naturally correspond to efficient BDD operations. Thus, the definition of an appropriate signature is the key for a rapid development of algorithms for other types of bisimulation. We provide experimental evidence of the viability of this approach by presenting computational results for many bisimulations on real-world instances. The experiments show cases where our framework can handle state spaces efficiently that are far too large to handle for any tool that requires an explicit state space description.", "paper_title": "Sigref - A symbolic bisimulation tool box", "paper_id": "WOS:000241648200035"}