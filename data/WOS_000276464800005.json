{"auto_keywords": [{"score": 0.028622220448588382, "phrase": "paper"}, {"score": 0.00481495049065317, "phrase": "rigi-an"}, {"score": 0.004721893473387288, "phrase": "software_reverse_engineering"}, {"score": 0.004424441580112395, "phrase": "rigi_environment"}, {"score": 0.004338898899247236, "phrase": "mature_research_tool"}, {"score": 0.004172722575842674, "phrase": "engineer_software_systems"}, {"score": 0.004065474891313382, "phrase": "large_systems"}, {"score": 0.0035228596881051763, "phrase": "source_code"}, {"score": 0.003454687811707182, "phrase": "exchange_format"}, {"score": 0.0033878306639271963, "phrase": "extracted_information"}, {"score": 0.003257960296952439, "phrase": "abstract_information"}, {"score": 0.003194898129853895, "phrase": "scripting_language"}, {"score": 0.002644678812707061, "phrase": "rigi's_main_components"}, {"score": 0.0025102759256260703, "phrase": "reverse_engineering_research"}, {"score": 0.002413964586947992, "phrase": "rigi's_architecture_and_design_decisions"}, {"score": 0.0023062508214156123, "phrase": "major_functionalities"}, {"score": 0.0022468671200629024, "phrase": "tool_extensibility"}, {"score": 0.002189009136006588, "phrase": "end-user_programmability"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Reverse engineering", " Program comprehension", " Tool-building", " Tool requirements"], "paper_abstract": "The Rigi environment is a mature research tool that provides functionality to reverse engineer software systems. With Rigi large systems can be analyzed, interactively explored, summarized, and documented. This is supported with parsers to extract information from source code, an exchange format to store extracted information, analyses to transform and abstract information, a scripting language and library to automate the process, and a visualization engine to interactively explore and manipulate information in the form of typed, directed, hierarchical graphs. In this Paper we describe Rigi's main components and functionalities, and assess its impact on reverse engineering research. Furthermore, we discuss Rigi's architecture and design decisions that led to a decoupling of major functionalities, and enable tool extensibility, interoperability and end-user programmability. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Rigi-An environment for software reverse engineering, exploration, visualization, and redocumentation", "paper_id": "WOS:000276464800005"}