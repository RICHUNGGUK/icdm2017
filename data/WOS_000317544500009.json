{"auto_keywords": [{"score": 0.03275097241605011, "phrase": "rapid_mixing_time"}, {"score": 0.004815315858763141, "phrase": "distributed"}, {"score": 0.004518442937844318, "phrase": "short_random_walks"}, {"score": 0.004312622975366676, "phrase": "distributed_construction"}, {"score": 0.0037336520904376687, "phrase": "fault_scenarios"}, {"score": 0.003670843919846253, "phrase": "unexpected_faults"}, {"score": 0.003624429617337833, "phrase": "fastest_possible_way"}, {"score": 0.0035634522350563107, "phrase": "folklore_results"}, {"score": 0.0034886660821793576, "phrase": "expander_graph"}, {"score": 0.0034299649219748513, "phrase": "randomized_nature"}, {"score": 0.0033579708256295847, "phrase": "monitoring_technique"}, {"score": 0.00327356326590461, "phrase": "desired_results"}, {"score": 0.0028457440091791226, "phrase": "non-regular_expanders"}, {"score": 0.0027390682208834013, "phrase": "hierarchical_sequence"}, {"score": 0.0026252106881752067, "phrase": "previous_spander"}, {"score": 0.0025160740422447837, "phrase": "different_quality"}, {"score": 0.0024320326084093465, "phrase": "different_applications"}, {"score": 0.0021593396036472777, "phrase": "snap-stabilizing_token_tracing"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Expanders", " Random walks", " Self-stabilization", " Self-organization", " Dynamic networks"], "paper_abstract": "Self-stabilizing distributed construction of expanders by the use of short random walks. We consider self-stabilizing and self-organizing distributed construction of a spanner that forms an expander. We advocate the importance of designing systems to be self-stabilizing and self-organizing, as designers cannot predict and address all fault scenarios and should address unexpected faults in the fastest possible way. We use folklore results to randomly define an expander graph. Given the randomized nature of our algorithms, a monitoring technique is presented for ensuring the desired results. The monitoring is based on the fact that expanders have a rapid mixing time and the possibility of examining the rapid mixing time by O(n log n) short (O(log(4) n) length) random walks even for non-regular expanders. We then use our results to construct a hierarchical sequence of spanders, each being an expander spanning the previous spander. Such a sequence of spanders may be used to achieve different quality of service (QoS) assurances in different applications. Several snap-stabilizing algorithms that are used for monitoring are presented, including: (i) Snap-stabilizing data-link, (ii) Snap-stabilizing message passing reset, and (iii) Snap-stabilizing token tracing. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Spanders: Distributed spanning expanders", "paper_id": "WOS:000317544500009"}