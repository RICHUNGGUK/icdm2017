{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "model_transformations"}, {"score": 0.04896221231267542, "phrase": "phasing_mechanism"}, {"score": 0.004521179256835894, "phrase": "great_effort"}, {"score": 0.003923815926819606, "phrase": "model_transformation_languages"}, {"score": 0.0037723376234229636, "phrase": "phasing"}, {"score": 0.003432044343307207, "phrase": "organization_mechanism"}, {"score": 0.0029547698888028697, "phrase": "rule-based_transformation_languages"}, {"score": 0.0022958180852458215, "phrase": "internal_transformation_composition"}, {"score": 0.0022070310530794097, "phrase": "usual_transformation_problems"}], "paper_keywords": ["Model transformation", " Transformation languages", " Phasing mechanism", " Modularity", " Internal transformation composition"], "paper_abstract": "In recent years a great effort has been devoted to understanding the nature of model transformations. As a result, several mechanisms to improve model transformation languages have been proposed. Phasing has been mentioned in some works as a rule scheduling or organization mechanism, but without any detail. In this paper, we present a phasing mechanism in the context of rule-based transformation languages. We explain the structure and the behavior of the mechanism, and how it can be integrated in a language. We also analyze how the mechanism promotes modularity, internal transformation composition and helps to solve usual transformation problems. Besides, we show several examples of application to illustrate the usefulness of the mechanism.", "paper_title": "Modularization of model transformations through a phasing mechanism", "paper_id": "WOS:000267687600003"}