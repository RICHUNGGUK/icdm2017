{"auto_keywords": [{"score": 0.03136108721143252, "phrase": "proposed_system"}, {"score": 0.004773041440577456, "phrase": "jist"}, {"score": 0.004710854091689325, "phrase": "rapid_prototyping_and_publishing_of_neuroimaging_software"}, {"score": 0.004669845451682529, "phrase": "non-invasive_neuroimaging_techniques"}, {"score": 0.004529093447865156, "phrase": "vivo_study"}, {"score": 0.004431149592844886, "phrase": "functional_response"}, {"score": 0.004354315061804687, "phrase": "biological_mechanisms"}, {"score": 0.004278807087784626, "phrase": "advanced_methods"}, {"score": 0.004223032986655664, "phrase": "heavy_reliance"}, {"score": 0.004186253035932442, "phrase": "computer-based_processing"}, {"score": 0.004042295865725559, "phrase": "neuroimaging_community"}, {"score": 0.0038355531523269217, "phrase": "new_modalities"}, {"score": 0.003752550907120244, "phrase": "custom_tools"}, {"score": 0.003671338229632309, "phrase": "existing_tools"}, {"score": 0.003623453648863547, "phrase": "significant_hurdle"}, {"score": 0.003468287913322255, "phrase": "new_framework"}, {"score": 0.003438058620195309, "phrase": "algorithm_development"}, {"score": 0.003378385493203297, "phrase": "tool_interoperability"}, {"score": 0.003334309053314909, "phrase": "graphical_user_interfaces"}, {"score": 0.0032908057622663732, "phrase": "advanced_batch_processing_tools"}, {"score": 0.0031775430407770026, "phrase": "minimal_additional_programming"}, {"score": 0.0031498398446368025, "phrase": "computational_overhead"}, {"score": 0.0031223774204093713, "phrase": "java-based_rapid_prototyping"}, {"score": 0.0030414140732789186, "phrase": "efficient_and_practical_approach"}, {"score": 0.0030017207229983385, "phrase": "new_algorithms"}, {"score": 0.0029238768315330305, "phrase": "rapidly_constructed_prototypes"}, {"score": 0.0028857130140890787, "phrase": "fully-functional_processing_modules"}, {"score": 0.002835599469639296, "phrase": "multiple_gui"}, {"score": 0.002749980017065414, "phrase": "file_formats"}, {"score": 0.0026321198895843173, "phrase": "mri_image_processing"}, {"score": 0.0025750928944698673, "phrase": "cortical_surface_extraction"}, {"score": 0.002552628669352939, "phrase": "large_cross-sectional_cohorts"}, {"score": 0.0024864020775253767, "phrase": "fully_automated_diffusion_tensor_image_analysis"}, {"score": 0.002359046870732839, "phrase": "simulation_framework"}, {"score": 0.002297831085501592, "phrase": "new_image_analysis_method"}, {"score": 0.002228412982799273, "phrase": "open_source"}, {"score": 0.0021993066642488237, "phrase": "lesser_gnu_public_license"}, {"score": 0.0021801141529624686, "phrase": "lgpl"}, {"score": 0.0021049977753042253, "phrase": "nitrc"}], "paper_keywords": ["Parallel processing", " Pipeline", " Rapid prototyping", " Image processing", " MRI"], "paper_abstract": "Non-invasive neuroimaging techniques enable extraordinarily sensitive and specific in vivo study of the structure, functional response and connectivity of biological mechanisms. With these advanced methods comes a heavy reliance on computer-based processing, analysis and interpretation. While the neuroimaging community has produced many excellent academic and commercial tool packages, new tools are often required to interpret new modalities and paradigms. Developing custom tools and ensuring interoperability with existing tools is a significant hurdle. To address these limitations, we present a new framework for algorithm development that implicitly ensures tool interoperability, generates graphical user interfaces, provides advanced batch processing tools, and, most importantly, requires minimal additional programming or computational overhead. Java-based rapid prototyping with this system is an efficient and practical approach to evaluate new algorithms since the proposed system ensures that rapidly constructed prototypes are actually fully-functional processing modules with support for multiple GUI's, a broad range of file formats, and distributed computation. Herein, we demonstrate MRI image processing with the proposed system for cortical surface extraction in large cross-sectional cohorts, provide a system for fully automated diffusion tensor image analysis, and illustrate how the system can be used as a simulation framework for the development of a new image analysis method. The system is released as open source under the Lesser GNU Public License (LGPL) through the Neuroimaging Informatics Tools and Resources Clearinghouse (NITRC).", "paper_title": "The Java Image Science Toolkit (JIST) for Rapid Prototyping and Publishing of Neuroimaging Software", "paper_id": "WOS:000276344300002"}