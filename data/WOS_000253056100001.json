{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "max-sat"}, {"score": 0.014858018007154252, "phrase": "minimaxsat"}, {"score": 0.012631607553581057, "phrase": "hard_clauses"}, {"score": 0.004058180509184539, "phrase": "best_current_sat"}, {"score": 0.004000741805312148, "phrase": "max-sat_techniques"}, {"score": 0.003752126270661821, "phrase": "mandatory_satisfaction"}, {"score": 0.003672801588091089, "phrase": "sat"}, {"score": 0.0035949949979695063, "phrase": "soft_clauses"}, {"score": 0.0025525322651112365, "phrase": "two-watched_literal_scheme"}, {"score": 0.0024281181691350085, "phrase": "wide_set"}, {"score": 0.002326304140277375, "phrase": "broad_set"}, {"score": 0.0022933216359142736, "phrase": "optimization_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "best_specialized_alternative"}], "paper_keywords": [""], "paper_abstract": "In this paper we introduce MINIMAXSAT, a new Max-SAT solver that is built on top of MINISAT+. It incorporates the best current SAT and Max-SAT techniques. It can handle hard clauses (clauses of mandatory satisfaction as in SAT), soft clauses (clauses whose falsification is penalized by a cost as in Max-SAT) as well as pseudo-boolean objective functions and constraints. Its main features are: learning and backjumping on hard clauses; resolution-based and substraction-based lower bounding; and lazy propagation with the two-watched literal scheme. Our empirical evaluation comparing a wide set of solving alternatives on a broad set of optimization benchmarks indicates that the performance of MINIMAXSAT is usually close to the best specialized alternative and, in some cases, even better.", "paper_title": "MINIMAXSAT: An efficient weighted Max-SAT solver", "paper_id": "WOS:000253056100001"}