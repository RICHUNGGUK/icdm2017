{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "pid_controller"}, {"score": 0.004733625412289433, "phrase": "numerical_accuracy"}, {"score": 0.004653667500876187, "phrase": "numerical_programs"}, {"score": 0.004575053987970206, "phrase": "floating-point_computations"}, {"score": 0.0033374705499418377, "phrase": "larger_pieces"}, {"score": 0.00317095235382607, "phrase": "control_structures"}, {"score": 0.0030127172247606812, "phrase": "case_study"}, {"score": 0.002539978170928796, "phrase": "experimental_data"}, {"score": 0.002413153346716919, "phrase": "different_versions"}, {"score": 0.0021049977753042253, "phrase": "significant_impact"}], "paper_keywords": ["Numerical Accuracy", " Semantics-Based Program Transformation", " Floating-Point Arithmetic", " Validation of Numerical Programs"], "paper_abstract": "Numerical programs performing floating-point computations are very sensitive to the way formulas are written. Several techniques have been proposed concerning the transformation of expressions in order to improve their accuracy and now we aim at going a step further by automatically transforming larger pieces of code containing several assignments and control structures. This article presents a case study in this direction. We consider a PID controller and we transform its code in order to improve its accuracy. The experimental data obtained when we compare the different versions of the code (which are mathematically equivalent) show that those transformations have a significant impact on the accuracy of the computations.", "paper_title": "Transformation of a PID Controller for Numerical Accuracy", "paper_id": "WOS:000365196900006"}