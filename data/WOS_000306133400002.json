{"auto_keywords": [{"score": 0.03843856552198327, "phrase": "test-once_strategy"}, {"score": 0.018971509483668787, "phrase": "uniformity_assumption"}, {"score": 0.004724365740062236, "phrase": "existing_specification-based_testing_techniques"}, {"score": 0.004606219233601922, "phrase": "diverse_combinations"}, {"score": 0.004577145044601205, "phrase": "test-relevant_aspects"}, {"score": 0.004364833543615155, "phrase": "pragmatic_strategy"}, {"score": 0.0038332390893263844, "phrase": "particular_condition"}, {"score": 0.003355515315708125, "phrase": "inadequate_testing"}, {"score": 0.0032714883740359896, "phrase": "viable_alternatives"}, {"score": 0.0031593653672862924, "phrase": "-few_strategies"}, {"score": 0.003109674734960237, "phrase": "particular_conditions"}, {"score": 0.0029558409515535525, "phrase": "test-a-few_strategies"}, {"score": 0.002782989122345306, "phrase": "clear_evidence"}, {"score": 0.0024513404432665153, "phrase": "faulty_programs"}, {"score": 0.0023974961635593135, "phrase": "random_sampling"}, {"score": 0.002186712881521657, "phrase": "better_trade-off"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["particular condition", " software testing", " software validation", " test-a-few strategy", " test-once strategy", " test case selection"], "paper_abstract": "Existing specification-based testing techniques often generate comprehensive test suites to cover diverse combinations of test-relevant aspects. Such a test suite can be prohibitively expensive to execute exhaustively because of its large size. A pragmatic strategy often adopted in practice, called test-once strategy, is to identify certain particular conditions from the specification and to test each such condition once only. This strategy is implicitly based on the uniformity assumption that the implementation will process a particular condition uniformly, regardless of other parameters or inputs. As the decision of adopting the test-once strategy is often based on the specification, whether the uniformity assumption actually holds in the implementation needs to be critically assessed, or else the risk of inadequate testing could be non-negligible. As viable alternatives to reduce such a risk, a family of test-a-few strategies for the testing of particular conditions is proposed in this paper. Two rounds of experiments that evaluate the effectiveness of the test-a-few strategies as compared with the test-once strategy are further reported. Our experiments do the following: (1) provide clear evidence that the uniformity assumption often, but not always, holds and that the assumption usually fails to hold when the implementation is faulty; (2) demonstrate that all our proposed test-a-few strategies are statistically more reliable than the test-once strategy in revealing faulty programs; (3) show that random sampling is already substantially more effective than the test-once strategy; and (4) indicate that, compared with other test-a-few strategies under study, choice coverage seems to achieve a better trade-off between test effort and effectiveness. Copyright (c) 2011 John Wiley & Sons, Ltd.", "paper_title": "An empirical evaluation of several test-a-few strategies for testing particular conditions", "paper_id": "WOS:000306133400002"}