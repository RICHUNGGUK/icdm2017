{"auto_keywords": [{"score": 0.0376801493962264, "phrase": "ehcf"}, {"score": 0.015582933475847684, "phrase": "sliding_windows"}, {"score": 0.012302302470997123, "phrase": "exponential_histogram"}, {"score": 0.012141527444570295, "phrase": "temporal_cluster_features"}, {"score": 0.008618694753465595, "phrase": "cluster_evolution"}, {"score": 0.00481495049065317, "phrase": "data_streams"}, {"score": 0.0047306078475683865, "phrase": "mining_data_streams"}, {"score": 0.004688989566904871, "phrase": "great_challenges"}, {"score": 0.004606843145343611, "phrase": "limited_memory_availability"}, {"score": 0.004566308708871429, "phrase": "real-time_query_response_requirement"}, {"score": 0.0044863018460183784, "phrase": "evolving_data_stream"}, {"score": 0.004235793609579307, "phrase": "evolving_behaviors"}, {"score": 0.004198510172614725, "phrase": "individual_clusters"}, {"score": 0.0040347380310668994, "phrase": "novel_method"}, {"score": 0.0036445446531633368, "phrase": "novel_data_structure"}, {"score": 0.0032485526269852606, "phrase": "cluster_distribution"}, {"score": 0.003163439005885435, "phrase": "existing_methods"}, {"score": 0.002908306074124806, "phrase": "recent_records"}, {"score": 0.002807118943000936, "phrase": "previous_methods"}, {"score": 0.0024688710065898646, "phrase": "flexible_framework"}, {"score": 0.002382936364692606, "phrase": "specific_cluster"}, {"score": 0.0022595974985992664, "phrase": "computing_resources"}, {"score": 0.0022396694076443446, "phrase": "data_stream_clustering"}, {"score": 0.002200337772403981, "phrase": "theoretical_analysis"}, {"score": 0.0021809311689473493, "phrase": "extensive_experiments"}, {"score": 0.0021049977753042253, "phrase": "proposed_method"}], "paper_keywords": ["cluster tracking", " evolving", " data streams", " sliding windows"], "paper_abstract": "Mining data streams poses great challenges due to the limited memory availability and real-time query response requirement. Clustering an evolving data stream is especially interesting because it captures not only the changing distribution of clusters but also the evolving behaviors of individual clusters. In this paper, we present a novel method for tracking the evolution of clusters over sliding windows. In our SWClustering algorithm, we combine the exponential histogram with the temporal cluster features, propose a novel data structure, the Exponential Histogram of Cluster Features (EHCF). The exponential histogram is used to handle the in-cluster evolution, and the temporal cluster features represent the change of the cluster distribution. Our approach has several advantages over existing methods: (1) the quality of the clusters is improved because the EHCF captures the distribution of recent records precisely; (2) compared with previous methods, the mechanism employed to adaptively maintain the in-cluster synopsis can track the cluster evolution better, while consuming much less memory; (3) the EHCF provides a flexible framework for analyzing the cluster evolution and tracking a specific cluster efficiently without interfering with other clusters, thus reducing the consumption of computing resources for data stream clustering. Both the theoretical analysis and extensive experiments show the effectiveness and efficiency of the proposed method.", "paper_title": "Tracking clusters in evolving data streams over sliding windows", "paper_id": "WOS:000255680300003"}