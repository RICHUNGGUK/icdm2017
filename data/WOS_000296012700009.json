{"auto_keywords": [{"score": 0.04718079151846453, "phrase": "numerical_solution"}, {"score": 0.00481495049065317, "phrase": "one-layer_shallow_water_systems"}, {"score": 0.004453874101119545, "phrase": "shallow_water_systems"}, {"score": 0.004217286731331736, "phrase": "geophysical_flows"}, {"score": 0.004087756756529841, "phrase": "big_dimensions"}, {"score": 0.0038404642251010797, "phrase": "powerful_accelerators"}, {"score": 0.0037516215763875225, "phrase": "numerical_results"}, {"score": 0.003693533648584145, "phrase": "reasonable_times"}, {"score": 0.0033372020049592726, "phrase": "first_order"}, {"score": 0.00331125524068286, "phrase": "well-balanced_finite_volume_scheme"}, {"score": 0.0031597433845085092, "phrase": "graphics_processing_units"}, {"score": 0.003015143226706584, "phrase": "nvidia_cuda_programming_model"}, {"score": 0.002854761308379149, "phrase": "potential_data_parallelism"}, {"score": 0.0026402908398883832, "phrase": "cuda_model"}, {"score": 0.002599365215003002, "phrase": "single_and_double_floating_point_precision"}, {"score": 0.0024803459795996116, "phrase": "high_efficiency"}, {"score": 0.002422890839801611, "phrase": "cuda_solver"}, {"score": 0.0023300677028248776, "phrase": "cpu_parallel_implementation"}, {"score": 0.002171836484200008, "phrase": "previously_existing_gpu_solver"}, {"score": 0.0021049977753042253, "phrase": "shading_language"}], "paper_keywords": ["General Purpose computation on Graphics Processing Units (GPGPU)", " Shallow water systems", " OpenMP", " CUDA"], "paper_abstract": "The numerical solution of shallow water systems is useful for several applications related to geophysical flows, but the big dimensions of the domains suggests the use of powerful accelerators to obtain numerical results in reasonable times. This paper addresses how to speed up the numerical solution of a first order well-balanced finite volume scheme for 2D one-layer shallow water systems by using modern Graphics Processing Units (GPUs) supporting the NVIDIA CUDA programming model. An algorithm which exploits the potential data parallelism of this method is presented and implemented using the CUDA model in single and double floating point precision. Numerical experiments show the high efficiency of this CUDA solver in comparison with a CPU parallel implementation of the solver and with respect to a previously existing GPU solver based on a shading language.", "paper_title": "Simulation of one-layer shallow water systems on multicore and CUDA architectures", "paper_id": "WOS:000296012700009"}