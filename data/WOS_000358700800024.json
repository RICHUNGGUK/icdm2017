{"auto_keywords": [{"score": 0.031461310706329015, "phrase": "refactoring_opportunities"}, {"score": 0.00481495049065317, "phrase": "social_goal_models"}, {"score": 0.004767826806287385, "phrase": "goal-oriented_requirements_engineering_approaches"}, {"score": 0.00462919213721188, "phrase": "requirements_engineering_community"}, {"score": 0.004539005582217309, "phrase": "expressive_modelling_languages"}, {"score": 0.004494570360108983, "phrase": "requirements_elicitation"}, {"score": 0.004321118442104989, "phrase": "common_challenge"}, {"score": 0.004073359218158693, "phrase": "accidental_complexity"}, {"score": 0.003802135020791801, "phrase": "insufficient_information"}, {"score": 0.00376488621224566, "phrase": "proper_understanding"}, {"score": 0.0033950634506367235, "phrase": "tool_support"}, {"score": 0.0032319109979344184, "phrase": "goal_models"}, {"score": 0.0026277995163948263, "phrase": "model_incompleteness"}, {"score": 0.002464709648714996, "phrase": "well-known_system_models"}, {"score": 0.0023346234464901978, "phrase": "evaluated_models"}, {"score": 0.0022777800735119405, "phrase": "timely_feedback_mechanism"}, {"score": 0.002255431275670053, "phrase": "requirements_engineers"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Goal-oriented requirements models", " i*", " Software metrics", " Model assessment"], "paper_abstract": "Goal-oriented Requirements Engineering approaches have become popular in the Requirements Engineering community as they provide expressive modelling languages for requirements elicitation and analysis. However, as a common challenge, such approaches are still struggling when it comes to managing the accidental complexity of their models. Furthermore, those models might be incomplete, resulting in insufficient information for proper understanding and implementation. In this paper, we provide a set of metrics, which are formally specified and have tool support, to measure and analyse complexity and completeness of goal models, in particular social goal models (e.g. i*). Concerning complexity, the aim is to identify refactoring opportunities to improve the modularity of those models, and consequently reduce their accidental complexity. With respect to completeness, the goal is to automatically detect model incompleteness. We evaluate these metrics by applying them to a set of well-known system models from industry and academia. Our results suggest refactoring opportunities in the evaluated models, and provide a timely feedback mechanism for requirements engineers on how close they are to completing their models. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Metrics for measuring complexity and completeness for social goal models", "paper_id": "WOS:000358700800024"}