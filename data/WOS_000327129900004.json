{"auto_keywords": [{"score": 0.004483450050677258, "phrase": "formal_methods"}, {"score": 0.004275173711009189, "phrase": "automated_verification"}, {"score": 0.004224627834741731, "phrase": "large_classes"}, {"score": 0.004174677062711731, "phrase": "infinite_state"}, {"score": 0.004125314447335291, "phrase": "parameterized_systems"}, {"score": 0.003910278811774747, "phrase": "safety_property"}, {"score": 0.003795677450778112, "phrase": "purely_logical_problem"}, {"score": 0.0036408354779365643, "phrase": "first-order_formula"}, {"score": 0.0034715658596258018, "phrase": "generic_automated_finite_model_building_procedures"}, {"score": 0.003232254571848865, "phrase": "concise_representation"}, {"score": 0.002903771635043968, "phrase": "detailed_case_study"}, {"score": 0.002801849371896573, "phrase": "parameterized_mutual_exclusion_protocol"}, {"score": 0.0027034948760997564, "phrase": "relative_completeness"}, {"score": 0.0026556165534143915, "phrase": "finite_countermodel_finding_method"}, {"score": 0.002532035301903554, "phrase": "parameterized_linear_arrays"}, {"score": 0.0025020469669826497, "phrase": "finite_automata"}, {"score": 0.0024431289979171505, "phrase": "known_methods"}, {"score": 0.002399850604120431, "phrase": "monotonic_abstraction"}, {"score": 0.002371424085814217, "phrase": "symbolic_backward_reachability"}, {"score": 0.002329412930430366, "phrase": "practical_efficiency"}, {"score": 0.0021946656099592608, "phrase": "verification_problems"}, {"score": 0.0021049977753042253, "phrase": "finding_procedure"}], "paper_keywords": ["Finite model finding", " Parameterized verification", " Mutual exclusion", " Monotonic abstraction", " Regular invariants"], "paper_abstract": "In this paper we investigate to what extent a very simple and natural \"reachability as deducibility\" approach, originating in research on formal methods for security, is applicable to the automated verification of large classes of infinite state and parameterized systems. In this approach the verification of a safety property is reduced to the purely logical problem of finding a countermodel for a first-order formula. This task is delegated then to generic automated finite model building procedures. A finite countermodel, if found, provides with a concise representation for a system invariant sufficient to establish the safety. In this paper we first present a detailed case study on the verification of a parameterized mutual exclusion protocol. Further we establish the relative completeness of the finite countermodel finding method (FCM) for a class of parameterized linear arrays of finite automata with respect to known methods based on monotonic abstraction and symbolic backward reachability. The practical efficiency of the method is illustrated on a set of verification problems taken from the literature using Mace4 model finding procedure.", "paper_title": "Finite Reasons for Safety", "paper_id": "WOS:000327129900004"}