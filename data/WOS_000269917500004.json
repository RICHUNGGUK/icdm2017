{"auto_keywords": [{"score": 0.050078263389430576, "phrase": "simulink_diagrams"}, {"score": 0.049521347818116, "phrase": "simulink"}, {"score": 0.014578313393986814, "phrase": "embedded_systems"}, {"score": 0.00993106900334289, "phrase": "tic_models"}, {"score": 0.004358368398332723, "phrase": "increasing_usage"}, {"score": 0.004257360656055417, "phrase": "real-time_safety-critical_situations"}, {"score": 0.003991449490087454, "phrase": "high-level_assurance"}, {"score": 0.0038085117064624208, "phrase": "timed_interval_calculus"}, {"score": 0.0034673190692473903, "phrase": "tic_formal_verification_capability"}, {"score": 0.003367077034382727, "phrase": "tic_library_functions"}, {"score": 0.0033083236588614174, "phrase": "simulink_library_blocks"}, {"score": 0.0029766550209309127, "phrase": "functional_and_timing_aspects"}, {"score": 0.002741797661508365, "phrase": "tic"}, {"score": 0.00270978310478061, "phrase": "whole_diagrams"}, {"score": 0.0024667783849055634, "phrase": "high_degree"}, {"score": 0.0023953929817357882, "phrase": "generic_theorem"}, {"score": 0.002298902547676131, "phrase": "design_space"}, {"score": 0.002258745901862197, "phrase": "environment_properties"}, {"score": 0.0021677478798910565, "phrase": "complex_diagrams"}, {"score": 0.0021049977753042253, "phrase": "continuous_and_discrete_behavior"}], "paper_keywords": ["Simulink", " Real-Time Specification", " Z Language", " Formal Verification"], "paper_abstract": "Simulink has been widely used in industry to model and simulate embedded systems. With the increasing usage of embedded systems in real-time safety-critical situations, Simulink becomes deficient to analyze (timing) requirements with high-level assurance. In this article, we apply Timed Interval Calculus (TIC), a real-time specification language, to complement Simulink with TIC formal verification capability. We elaborately construct TIC library functions to model Simulink library blocks which are used to compose Simulink diagrams. Next, Simulink diagrams are automatically transformed into TIC models which preserve functional and timing aspects. Important requirements such as timing bounded liveness can be precisely specified in TIC for whole diagrams or some components. Lastly, validation of TIC models can be rigorously conducted with a high degree of automation using a generic theorem prover. Our framework can enlarge the design space by representing environment properties to open systems, and handle complex diagrams as the analysis of continuous and discrete behavior is supported.", "paper_title": "A formal framework for modeling and validating Simulink diagrams", "paper_id": "WOS:000269917500004"}