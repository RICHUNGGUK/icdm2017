{"auto_keywords": [{"score": 0.043598819545932886, "phrase": "cost-approximation_factor"}, {"score": 0.03605294720229584, "phrase": "approximation_ratio"}, {"score": 0.00481495049065317, "phrase": "approximation_algorithms"}, {"score": 0.004723513936771486, "phrase": "center_dot_edges"}, {"score": 0.004413036532585712, "phrase": "parameterized_approximation_algorithm"}, {"score": 0.004390012797820981, "phrase": "bdmst_problem"}, {"score": 0.004367108655796158, "phrase": "bicriteria_approximation_ratio"}, {"score": 0.0042617859335771615, "phrase": "first_factor"}, {"score": 0.00418810762179987, "phrase": "second_factor"}, {"score": 0.004037486280813639, "phrase": "input_parameter"}, {"score": 0.004016413965935386, "phrase": "parameter_p"}, {"score": 0.003926359151817743, "phrase": "first_improvement"}, {"score": 0.0038651944848734133, "phrase": "marathe_et_al"}, {"score": 0.0036172364609815487, "phrase": "distributed_implementations"}, {"score": 0.0035795609511543023, "phrase": "first_algorithm"}, {"score": 0.0035670895401691536, "phrase": "bounded-hops_minimum-cost_steiner_tree"}, {"score": 0.003554661425339528, "phrase": "complete_graphs"}, {"score": 0.003542276457435362, "phrase": "triangle_inequality"}, {"score": 0.0034749237645253723, "phrase": "euclidean_space"}, {"score": 0.0032405868564736253, "phrase": "general-case_approximation"}, {"score": 0.0029852932802967224, "phrase": "edge_lengths"}, {"score": 0.0029490263171816676, "phrase": "polynomial-time_algorithm"}, {"score": 0.0029081159725864096, "phrase": "length_function"}, {"score": 0.0028378798711397235, "phrase": "time_complexity"}, {"score": 0.002803398730609738, "phrase": "special_case"}, {"score": 0.002560000295424659, "phrase": "optimal_solution"}, {"score": 0.0025333084852052147, "phrase": "significant_improvement"}, {"score": 0.002395571076685383, "phrase": "existing_multicast_network"}, {"score": 0.0023664513743373423, "phrase": "new_terminals"}, {"score": 0.0023133055945761235, "phrase": "approximation_algorithm"}, {"score": 0.002301211274459965, "phrase": "bounded-diameter_minimum-cardinality_edge_addition_problem"}, {"score": 0.0021049977753042253, "phrase": "distributed_implementation"}], "paper_keywords": [""], "paper_abstract": "We present approximation algorithms for two closely related bicriteria problems. Given a graph with two weight functions on the center dot edges, length and cost, we consider the Bounded-Diameter Minimum-Cost Steiner Tree (BDMST) problem and the Bounded-Diameter Minimum-Cardinality Edge Addition (BDMC) problem. We present a parameterized approximation algorithm for the BDMST problem with a bicriteria approximation ratio of (O (p log s/log p), O (log s/log p)) where the first factor gives the relaxation on the diameter bound, the second factor is the cost-approximation factor, s is the number of required-nodes and p, 1 <= p < s, is an input parameter. The parameter p allows a trade-off between the two approximation factors. This is the first improvement of the cost-approximation factor since the scheme proposed by Marathe et al. [9]. For example, p can be set to s(alpha) to obtain an (0 (s alpha),, 0 (1)) approximation for a constant c alpha The algorithm is very simple and is suitable for distributed implementations. We also present the first algorithm for Bounded-Hops Minimum-Cost Steiner Tree for complete graphs with triangle inequality. This model includes graphs defined by points in a Euclidean space of any dimension. The algorithm guarantees an approximation ratio of (O (log(d) S), O (logd S)) where d is the bound on the diameter. This is an improvement over the general-case approximation when d is comparable with s. For example, the ratio is (O (1), O (1)) for any d = s(alpha) where alpha is a constant between 0 and 1. For the case where the number of terminals is a constant and all edge lengths are unit, we have a polynomial-time algorithm. This can be extended to any length function providing a (1 + epsilon) in the approximation with s showing up in the time complexity of the algorithm. For another special case, where the cost of any edge is either 1 or 0 and the length of each edge is positive, an algorithm with approximation ratio of (O (log (c log s)), O(log(c log s))) is presented, where c is the cost of the optimal solution. This approximation is a significant improvement over (O (log s), O (log s)) when the cost of the solution c is much smaller than the number of terminals s. This is useful when an existing multicast network is to be modified to accommodate new terminals with the addition of as few new edges as possible. We also propose an approximation algorithm for the Bounded-Diameter Minimum-Cardinality Edge Addition problem, which achieves an O(log n) approximation while relaxing the diameter bound by 2. While this ratio is the same as the one claimed in [3], this algorithm is simple and combinatorial rather than based on the Linear Program solution and can be readily modified for a distributed implementation.", "paper_title": "Bounded-diameter minimum-cost graph problems", "paper_id": "WOS:000250197300007"}