{"auto_keywords": [{"score": 0.0471266580242191, "phrase": "compressor_trees"}, {"score": 0.00481495049065317, "phrase": "gpc-based_compressor_tree_synthesis"}, {"score": 0.004638908427402293, "phrase": "total_number"}, {"score": 0.004294381488413906, "phrase": "carry_propagation"}, {"score": 0.004081385289516914, "phrase": "asic_implementation"}, {"score": 0.003978866233891427, "phrase": "full_adders"}, {"score": 0.003945266418163835, "phrase": "half_adders"}, {"score": 0.003829877278269543, "phrase": "lut-based_fpgas"}, {"score": 0.0037495207047193034, "phrase": "dedicated_structures"}, {"score": 0.0036553070575015344, "phrase": "multi-operand_adders"}, {"score": 0.003593812067062062, "phrase": "recent_studies"}, {"score": 0.0034299649219748513, "phrase": "generalized_parallel_counters"}, {"score": 0.0033437537557378157, "phrase": "building_blocks"}, {"score": 0.0028457440091791252, "phrase": "maximum_level"}, {"score": 0.002785978280998868, "phrase": "target_problem"}, {"score": 0.0027159094186967247, "phrase": "minimization_problem"}, {"score": 0.0026252106881752067, "phrase": "maximum_levels"}, {"score": 0.0025375331660958665, "phrase": "ilp-based_approach"}, {"score": 0.0024842242921857705, "phrase": "key_point"}, {"score": 0.0023111922860677672, "phrase": "existing_approach"}, {"score": 0.0022626276288355432, "phrase": "compression_process"}, {"score": 0.0021319959284827896, "phrase": "ilp_formulation"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["compressor tree", " generalized parallel counter", " integer linear programming", " arithmetic synthesis"], "paper_abstract": "Multi-operand adders that calculate the summation of more than two operands usually consist of compressor trees, which reduce the number of operands to two without any carry propagation, and carry-propagate adders for the two operands in the ASIC implementation. Compressor trees that consist of full adders and half adders cannot be implemented efficiently on LUT-based FPGAs, and carry-chains or dedicated structures have been utilized to produce multi-operand adders on FPGAs. Recent studies indicate that compressor trees can be implemented efficiently on LUTs using Generalized Parallel Counters (GPCs) as the building blocks of compressor trees. This paper addresses the problem of synthesizing compressor trees based on GPCs. Based on the observation that characteristics such as the area, power, and delay correlate roughly to the total number and the maximum level of GPCs, the target problem can be regarded as a minimization problem for the total number of GPCs and the maximum levels of the GPCs, for which an ILP-based approach is proposed. The key point of our formulation is not to model the problem based on the structures of compressor trees like the existing approach, but instead the compression process itself is used to reduce the number of variables and constraints in the ILP formulation. The experimental results demonstrate the advantage of our formulation in terms of the quality and runtime.", "paper_title": "An Exact Approach for GPC-Based Compressor Tree Synthesis", "paper_id": "WOS:000329006900030"}