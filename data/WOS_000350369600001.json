{"auto_keywords": [{"score": 0.044102202157865374, "phrase": "low_complexity"}, {"score": 0.00481495049065317, "phrase": "multimedia_communications"}, {"score": 0.004767261858417823, "phrase": "fast_and_flexible_dvc"}, {"score": 0.004657808551825796, "phrase": "network_technologies"}, {"score": 0.0046269981365987915, "phrase": "mobile_devices"}, {"score": 0.004565984572487962, "phrase": "low-cost_video_cameras"}, {"score": 0.004520750567829338, "phrase": "new_multimedia_services"}, {"score": 0.004490842671590769, "phrase": "mobile_telephony"}, {"score": 0.004431616517786392, "phrase": "video_communications"}, {"score": 0.004329835888760592, "phrase": "multimedia_services"}, {"score": 0.004272724011826495, "phrase": "special_requirements"}, {"score": 0.004051680770486568, "phrase": "mobile_video_communications"}, {"score": 0.003998223112665124, "phrase": "traditional_codecs"}, {"score": 0.003945467978172845, "phrase": "high_complexity"}, {"score": 0.003906357144047631, "phrase": "encoder_side"}, {"score": 0.003854809457075099, "phrase": "distributed_video_coding"}, {"score": 0.0037913267098534887, "phrase": "tougher_complexity_constraints"}, {"score": 0.0037662262006579023, "phrase": "encoding_algorithms"}, {"score": 0.003704196857903231, "phrase": "increasing_decoder_complexity"}, {"score": 0.0035712919163869176, "phrase": "distributed_video"}, {"score": 0.003352825186671963, "phrase": "scalable_video_coding"}, {"score": 0.0032324864013225166, "phrase": "proposed_scheme"}, {"score": 0.0032004205378150354, "phrase": "highly-complex_processes"}, {"score": 0.003054922297665861, "phrase": "low-delay_transmission"}, {"score": 0.003004572722189157, "phrase": "transcoder_time"}, {"score": 0.0027649684074145028, "phrase": "first_transcoding_stage"}, {"score": 0.002701361707441567, "phrase": "multicore_processor"}, {"score": 0.002656823796937945, "phrase": "decoding_algorithm"}, {"score": 0.002595698433525986, "phrase": "second_stage"}, {"score": 0.00256993314099902, "phrase": "motion_vectors"}, {"score": 0.002535975801308951, "phrase": "first_decoding_stage"}, {"score": 0.0025024660249697408, "phrase": "motion_estimation_complexity"}, {"score": 0.002364907617070299, "phrase": "proposed_transcoder"}, {"score": 0.0023259039577313294, "phrase": "different_kinds"}, {"score": 0.0022951636331743066, "phrase": "gop_lengths"}, {"score": 0.0021980296285911915, "phrase": "efficient_algorithm"}, {"score": 0.002154592730528917, "phrase": "-mobile_video_communications"}, {"score": 0.002126111716875144, "phrase": "transcoding_time"}, {"score": 0.0021049977753042253, "phrase": "significant_rate-distortion_penalty"}], "paper_keywords": ["Transcoding", " H.264", " SVC", " DVC", " Wyner-Ziv", " Parallel Computing"], "paper_abstract": "The evolution of network technologies and mobile devices (equipped with low-cost video cameras) offer new multimedia services for mobile telephony, such as video communications. However, this kind of multimedia services needs to meet special requirements in terms of low complexity on both sides of the communication. Currently, most of mobile video communications are based on traditional codecs, which concentrates high complexity on the encoder side. Then, Distributed Video Coding tackles the problem of tougher complexity constraints for encoding algorithms at the expense of increasing decoder complexity. Taking into account the benefits of both paradigms, Distributed Video Coding to H.264 transcoding provides such multimedia systems with low complexity on both sides. Moreover, there is a H.264 extension called Scalable Video Coding which supports a variety of networks and devices. This proposed scheme moves the highly-complex processes to the transcoder, which has more resources. However, to achieve a low-delay transmission between mobile devices, transcoder time must be reduced. For this purpose, this paper focuses on reducing the complexity of the transcoder. To start with, the first transcoding stage is improved by means of a multicore processor, which executes the decoding algorithm in parallel. Then, the second stage uses the motion vectors generated during the first decoding stage to reduce the motion estimation complexity of the H.264 encoder and of its scalable extension as well. To support different Distributed Video Coding/H.264 patterns and profiles, the proposed transcoder includes a mapping between different kinds of frames and GOP lengths from both paradigms. As a result, this paper proposes an efficient algorithm to support mobile-to-mobile video communications which reduces the transcoding time about 70 % without significant rate-distortion penalty.", "paper_title": "Multimedia Communications Using a Fast and Flexible DVC to H.264/AVC/SVC Transcoder", "paper_id": "WOS:000350369600001"}