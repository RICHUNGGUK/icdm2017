{"auto_keywords": [{"score": 0.03923307184680597, "phrase": "ceta"}, {"score": 0.00481495049065317, "phrase": "linear_order-sorted_specifications"}, {"score": 0.004412000844879264, "phrase": "sufficient_completeness"}, {"score": 0.00385431710959668, "phrase": "equational_tree_automata_decision_problem"}, {"score": 0.0037634608487353183, "phrase": "tree_automata_library"}, {"score": 0.0031342307827666675, "phrase": "tree_automata"}, {"score": 0.0030119758165837625, "phrase": "boolean_operations"}, {"score": 0.0029409171055888804, "phrase": "equational_theory"}, {"score": 0.0024488738006005133, "phrase": "decision_procedure"}, {"score": 0.0021049977753042253, "phrase": "general_case"}], "paper_keywords": [""], "paper_abstract": "We present a tool for checking the sufficient completeness of left-linear, order-sorted equational specifications modulo associativity, commutativity, and identity. Our tool treats this problem as an equational tree automata decision problem using the tree automata library CETA, which we also introduce in this paper. CETA implements a semi-algorithm for checking the emptiness of a class of tree automata that are closed under Boolean operations and an equational theory containing associativity, commutativity and identity axioms. Though sufficient,completeness for this class of specifications is undecidable in general, our tool is a decision procedure for subcases known to be decidable, and has specialized techniques that are effective in practice for the general case.", "paper_title": "A sufficient completeness checker for linear order-sorted specifications modulo axioms", "paper_id": "WOS:000240085600014"}