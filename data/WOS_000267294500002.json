{"auto_keywords": [{"score": 0.03395416915055737, "phrase": "debian"}, {"score": 0.00481495049065317, "phrase": "large_software_compilation"}, {"score": 0.0047689174754929195, "phrase": "software_evolution_studies"}, {"score": 0.004655742198075387, "phrase": "individual_products"}, {"score": 0.004416079619543104, "phrase": "software_evolution"}, {"score": 0.004352876088312741, "phrase": "software_compilations"}, {"score": 0.004270003565426343, "phrase": "large_quantity"}, {"score": 0.004229158339021651, "phrase": "independently_developed_products"}, {"score": 0.003750260412839128, "phrase": "software_distributions"}, {"score": 0.0036261282565554507, "phrase": "software_applications"}, {"score": 0.0035399770257915466, "phrase": "integrated_system"}, {"score": 0.0034392837410790293, "phrase": "exploratory_case_study"}, {"score": 0.0032777653153451265, "phrase": "significant_results"}, {"score": 0.0029343925814926787, "phrase": "mean_size"}, {"score": 0.0024206046096694554, "phrase": "java"}, {"score": 0.0023857603808363527, "phrase": "python_languages"}, {"score": 0.0021049977753042253, "phrase": "mature_libre_software_systems"}], "paper_keywords": ["Mining software repositories", " Large software collections", " Software evolution", " Software integrators"], "paper_abstract": "Software evolution studies have traditionally focused on individual products. In this study we scale up the idea of software evolution by considering software compilations composed of a large quantity of independently developed products, engineered to work together. With the success of libre (free, open source) software, these compilations have become common in the form of 'software distributions', which group hundreds or thousands of software applications and libraries into an integrated system. We have performed an exploratory case study on one of them, Debian GNU/Linux, finding some significant results. First, Debian has been doubling in size every 2 years, totalling about 300 million lines of code as of 2007. Second, the mean size of packages has remained stable over time. Third, the number of dependencies between packages has been growing quickly. Finally, while C is still by far the most commonly used programming language for applications, use of the C++, Java, and Python languages have all significantly increased. The study helps not only to understand the evolution of Debian, but also yields insights into the evolution of mature libre software systems in general.", "paper_title": "Macro-level software evolution: a case study of a large software compilation", "paper_id": "WOS:000267294500002"}