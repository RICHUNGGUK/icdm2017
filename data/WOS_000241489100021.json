{"auto_keywords": [{"score": 0.04842456838190479, "phrase": "region_merging"}, {"score": 0.00481495049065317, "phrase": "dynamic_border"}, {"score": 0.0041102032028337366, "phrase": "special_attention"}, {"score": 0.00376409764683147, "phrase": "wide_range"}, {"score": 0.0035082436540296406, "phrase": "dissimilarity_criteria"}, {"score": 0.0033277936960179892, "phrase": "novel_method"}, {"score": 0.0031845067058084613, "phrase": "common_borders"}, {"score": 0.002967931416941965, "phrase": "main_part"}, {"score": 0.0027660443371695024, "phrase": "efficient_data_structures"}, {"score": 0.002555247330102505, "phrase": "fast_region"}, {"score": 0.0025328377393370642, "phrase": "merging_algorithm"}, {"score": 0.0023192471808039746, "phrase": "segment_topology"}, {"score": 0.0021613897794439227, "phrase": "detailed_report"}, {"score": 0.0021049977753042253, "phrase": "execution_times"}], "paper_keywords": [""], "paper_abstract": "In this paper we present our region merging algorithm that is built with special attention on speed but still includes all the necessary functionality to use a wide range of both region based and border based dissimilarity criteria. The algorithm includes a novel method to dynamically link the common borders between two segments during the region merging. The main part of the paper will concentrate on the efficient data structures and functions that are needed to obtain a fast region merging algorithm. Also, all the special situations that can occur in the segment topology are completely covered. We give a detailed report on the execution times of the algorithm and show some of the segmentation results we obtained.", "paper_title": "Fast dynamic border linking algorithm for region merging", "paper_id": "WOS:000241489100021"}