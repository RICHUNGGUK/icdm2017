{"auto_keywords": [{"score": 0.029773546685011323, "phrase": "program_modifications"}, {"score": 0.025948790611858036, "phrase": "modification_patterns"}, {"score": 0.00481495049065317, "phrase": "refactoring_activities"}, {"score": 0.004698514007994158, "phrase": "program_modification"}, {"score": 0.004501453956464956, "phrase": "promising_techniques"}, {"score": 0.004419538941706716, "phrase": "program_design"}, {"score": 0.004312622975366676, "phrase": "program_transformation"}, {"score": 0.0036107898615445797, "phrase": "proper_knowledge"}, {"score": 0.003501846136829077, "phrase": "high_order"}, {"score": 0.0027741761880779535, "phrase": "developers'_intentions"}, {"score": 0.0026091594819333654, "phrase": "suitable_refactoring_guides"}, {"score": 0.002409188797323273, "phrase": "suitable_refactoring_operations"}, {"score": 0.002336414425972225, "phrase": "automated_supporting_tool"}, {"score": 0.0021441057555396013, "phrase": "eclipse_ide."}, {"score": 0.0021049977753042253, "phrase": "refactoring_operations"}], "paper_keywords": ["refactoring", " software development environment", " modification history", " pattern matching"], "paper_abstract": "Refactoring is one of the promising techniques for improving program design by means of program transformation with preserving behavior, and is widely applied in practice. However, it is difficult for engineers to identify how and where to refactor programs, because proper knowledge and skills of a high order are required of them. In this paper, we propose the technique to instruct how and where to refactor a program by using a sequence of its modifications. We consider that the histories of program modifications reflect developers' intentions, and focusing on them allows us to provide suitable refactoring guides. Our technique can be automated by storing the correspondence of modification patterns to suitable refactoring operations. By implementing an automated supporting tool, we show its feasibility. The tool is implemented as a plug-in for Eclipse IDE. It selects refactoring operations by matching between a sequence of program modifications and modification patterns.", "paper_title": "Supporting refactoring activities using histories of program modification", "paper_id": "WOS:000237203100010"}