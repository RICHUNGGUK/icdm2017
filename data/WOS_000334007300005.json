{"auto_keywords": [{"score": 0.02918183980722893, "phrase": "hamming"}, {"score": 0.00481495049065317, "phrase": "local_search"}, {"score": 0.004735254735115024, "phrase": "string_problems"}, {"score": 0.004143196873246147, "phrase": "brute-force_procedure"}, {"score": 0.004040688646993605, "phrase": "local_improvement_step"}, {"score": 0.003940706575253453, "phrase": "local_search_algorithm"}, {"score": 0.003685972800046028, "phrase": "classical_np-hard_string_problems"}, {"score": 0.0028446460307503343, "phrase": "arguably_the_most_fundamental_string_distance_measure"}, {"score": 0.0025730425700096365, "phrase": "practical_local_search_implementations"}, {"score": 0.0023079225317714815, "phrase": "brute-force_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Local search", " Parameterized complexity", " Parameterized intractability", " Closest String", " Longest Common Subsequence", " Shortest Common Supersequence", " Shortest Common Superstring"], "paper_abstract": "We address the problem of whether the brute-force procedure for the local improvement step in a local search algorithm can substantially be improved when applied to classical NP-hard string problems. We examine four of the more prominent problems in this domain: CLOSEST STRING, LONGEST COMMON SUBSEQUENCE, SHORTEST COMMON SUPERSEQUENCE, and SHORTEST COMMON SUPERSTRING. Herein, we consider arguably the most fundamental string distance measure, namely the Hamming distance, which has been applied in practical local search implementations for string problems. Our results indicate that for all four problems, the brute-force algorithm cannot be considerably improved. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Local search for string problems: Brute-force is essentially optimal", "paper_id": "WOS:000334007300005"}