{"auto_keywords": [{"score": 0.047001232576733214, "phrase": "cloud_computing"}, {"score": 0.03682946028466765, "phrase": "cloud_resources"}, {"score": 0.03640197784168314, "phrase": "auto-scaling_methods"}, {"score": 0.030179437448611204, "phrase": "application_types"}, {"score": 0.004815032728139235, "phrase": "vm"}, {"score": 0.004643839937761046, "phrase": "high_throughput"}, {"score": 0.004560568143816105, "phrase": "hybrid_infrastructure"}, {"score": 0.004398457709182882, "phrase": "demand_resource_provisioning"}, {"score": 0.004216566615939546, "phrase": "efficient_use"}, {"score": 0.004165987300206134, "phrase": "computing_resources"}, {"score": 0.004116012194714212, "phrase": "scientific_applications"}, {"score": 0.003969640975997097, "phrase": "loosely_coupled_tasks"}, {"score": 0.0037597491055035895, "phrase": "current_computing_environments"}, {"score": 0.0036700484729006136, "phrase": "heterogeneous_resources"}, {"score": 0.0033929894721242367, "phrase": "diverse_metrics"}, {"score": 0.003332072426367186, "phrase": "cpu_utilization"}, {"score": 0.003252542052430779, "phrase": "resource_usage"}, {"score": 0.0028823939507764238, "phrase": "deadline_violation"}, {"score": 0.0026326249204932733, "phrase": "specific_conditions"}, {"score": 0.0025542617599268323, "phrase": "task_dependency"}, {"score": 0.0025235718883452585, "phrase": "user-defined_deadlines"}, {"score": 0.0024932498388507084, "phrase": "data_transfer_times"}, {"score": 0.002448446849997207, "phrase": "hybrid_computing_infrastructure"}, {"score": 0.0023470051993423483, "phrase": "local_cluster"}, {"score": 0.0022497569011987587, "phrase": "noticeable_improvements"}, {"score": 0.0021049977753042253, "phrase": "workflow_applications"}], "paper_keywords": ["Auto-scaling", " Hybrid infrastructure", " Cloud computing", " Bag-of-tasks", " Workflows"], "paper_abstract": "Cloud computing provides on-demand resource provisioning and scalable resources dynamically for the efficient use of computing resources. Scientific applications recently need a very large number of loosely coupled tasks to be handled efficiently. In response, current computing environments often consist of heterogeneous resources such as cloud computing. To effectively use cloud resources, auto-scaling methods that consider diverse metrics such as CPU utilization and costs of resource usage have been studied widely. However it still remains a challenge to automatically and timely allocate resources such that deadline violation and application types are considered. In this paper, we propose auto-scaling methods that consider specific conditions such as application types, task dependency, user-defined deadlines and data transfer times within a hybrid computing infrastructure. Our hybrid computing infrastructure consists of local cluster and cloud resources using HTCaaS. We observe noticeable improvements in performance when our auto-scaling methods for bag-of-tasks and workflow applications is applied.", "paper_title": "VM auto-scaling methods for high throughput computing on hybrid infrastructure", "paper_id": "WOS:000361897200005"}