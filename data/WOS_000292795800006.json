{"auto_keywords": [{"score": 0.041765365816587144, "phrase": "log-space_machines"}, {"score": 0.009306845976693996, "phrase": "multiple_passes"}, {"score": 0.009044806618990191, "phrase": "nisan's_prg"}, {"score": 0.0046253989970108985, "phrase": "classical_pseudo-random_generator"}, {"score": 0.004494578595800554, "phrase": "nisan"}, {"score": 0.0042928648367867835, "phrase": "space-bounded_machines"}, {"score": 0.0026955672787561742, "phrase": "general_nisan's_prg"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Computational complexity", " Nisan's pseudo-random generator", " Derandomization", " Space bounded"], "paper_abstract": "We study the resilience of the classical pseudo-random generator (PRG) of Nisan (1992) [6] against space-bounded machines that make multiple passes over the input. Nisan's PRG is known to fool log-space machines that read the input once. We ask what are the limits of this PRG regarding log-space machines that make multiple passes over the input. We show that for every constant k Nisan's PRG fools log-space machines that make log(k) n passes over the input, using a seed of length log(k)' n, for some k' > k. We complement this result by showing that in general Nisan's PRG cannot fool log-space machines that make n(O(1)) passes even for a seed of length 2(Theta(root logn)). The observations made in this note outline a more general approach in understanding the difficulty of derandomizing BPNC1. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "How strong is Nisan's pseudo-random generator?", "paper_id": "WOS:000292795800006"}