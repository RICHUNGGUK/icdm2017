{"auto_keywords": [{"score": 0.026653699480159356, "phrase": "tara"}, {"score": 0.00481495049065317, "phrase": "data-intensive_workloads"}, {"score": 0.0045726187330434025, "phrase": "optimized_resource_allocation"}, {"score": 0.004204459295724526, "phrase": "current_iaas_systems"}, {"score": 0.004044645056447888, "phrase": "hosted_application's_requirements"}, {"score": 0.0036710872046569532, "phrase": "distributed_data-intensive_applications"}, {"score": 0.0035543706594585076, "phrase": "resource_allocation_problem"}, {"score": 0.003289117944111902, "phrase": "\"_methodology"}, {"score": 0.0032259472087775138, "phrase": "allocation_decisions"}, {"score": 0.0030435998319355883, "phrase": "prediction_engine"}, {"score": 0.002985130390111069, "phrase": "lightweight_simulator"}, {"score": 0.0027982016314450717, "phrase": "genetic_algorithm"}, {"score": 0.002726740692380339, "phrase": "optimized_solution"}, {"score": 0.0026743419827100225, "phrase": "large_search_space"}, {"score": 0.0025394700487126414, "phrase": "topology-aware_resource_allocation"}, {"score": 0.0022312377180023282, "phrase": "job_completion_time"}, {"score": 0.0021049977753042253, "phrase": "application-independent_allocation_policies"}], "paper_keywords": ["Design", " Management", " Performance", " Virtualization", " Performance", " Modeling", " MapReduce", " Hadoop", " Topology Awareness", " Infrastructure-as-a-Service", " IaaS"], "paper_abstract": "This paper proposes an architecture for optimized resource allocation in Infrastructure-as-a-Service (IaaS)-based cloud systems. Current IaaS systems are usually unaware of the hosted application's requirements and therefore allocate resources independently of its needs, which can significantly impact performance for distributed data-intensive applications. To address this resource allocation problem, we propose an architecture that adopts a \"what if\" methodology to guide allocation decisions taken by the IaaS. The architecture uses a prediction engine with a lightweight simulator to estimate the performance of a given resource allocation and a genetic algorithm to find an optimized solution in the large search space. We have built a prototype for Topology-Aware Resource Allocation (TARA) and evaluated it on a 80 server cluster with two representative MapReduce-based benchmarks. Our results show that TARA reduces the job completion time of these applications by up to 59% when compared to application-independent allocation policies.", "paper_title": "Topology-Aware Resource Allocation for Data-Intensive Workloads", "paper_id": "WOS:000289780800017"}