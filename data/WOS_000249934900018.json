{"auto_keywords": [{"score": 0.039434146520232714, "phrase": "circuit_area"}, {"score": 0.03883386896303636, "phrase": "pipeline_latency"}, {"score": 0.004639712384096822, "phrase": "pipelined_computation"}, {"score": 0.004330941610682453, "phrase": "long_pipeline_latency"}, {"score": 0.004195418010131832, "phrase": "base-e_exponential_algorithm"}, {"score": 0.0041074234667687875, "phrase": "exponential_computation"}, {"score": 0.003957833102043277, "phrase": "pipeline_stages"}, {"score": 0.003916098498242888, "phrase": "multiplication-and-accumulate_operations"}, {"score": 0.003375826910838081, "phrase": "base-e_exponential_algorithm_approach"}, {"score": 0.0030199761431186434, "phrase": "lns_computation"}, {"score": 0.0026168641536413978, "phrase": "hardware_cost"}, {"score": 0.002575526825728026, "phrase": "basic_lns_unit"}, {"score": 0.002316105585203396, "phrase": "proposed_approaches"}, {"score": 0.002219790619936024, "phrase": "previously_proposed_lns_unit"}, {"score": 0.0021616339773325704, "phrase": "significant_progress"}], "paper_keywords": ["logarithmic number system", " base-e exponential algorithm", " on-line logarithmic algorithm", " signed-digit arithmetic", " pipeline architecture"], "paper_abstract": "Pipelined computation of very large word-length logarithmic number system (LNS) addition/subtraction requires a lot of hardware and long pipeline latency. This paper proposes a base-e exponential algorithm to simplify the exponential computation and to replace half of the pipeline stages by multiplication-and-accumulate operations. By using this approach, the circuit area and the pipeline latency of the previously proposed 64-bit basic LNS addition/subtraction unit can be reduced by 42.4% and 39.22%, respectively. Based on the base-e exponential algorithm approach, we also develop signed-digit (SD) exponential, SD discretization, and SE) on-line logarithmic algorithms to further increase the throughput and to reduce the pipeline latency of the LNS computation. From our synthesis results, the throughput of the 64-bit LNS unit can be increased by 61.9% and the pipeline latency can be reduced by 55.0%, without increasing the hardware cost of the basic LNS unit. The circuit area of the 64-bit hardware-reduced LNS unit is estimated to be only 6.89 times the circuit area of a comparable 64-bit floating-point unit. We conclude that the proposed approaches have significantly improved the performance of the previously proposed LNS unit and have made a significant progress towards the implementation of very large word-length LNS arithmetic.", "paper_title": "Performance-improved computation of very large word-length LNS addition/subtraction using signed-digit arithmetic", "paper_id": "WOS:000249934900018"}