{"auto_keywords": [{"score": 0.04926889079413175, "phrase": "schedulability_analysis"}, {"score": 0.004815475262771862, "phrase": "herschel"}, {"score": 0.004765889452740394, "phrase": "statistical_model_checking"}, {"score": 0.004685224205630963, "phrase": "main_concern"}, {"score": 0.004512512374933493, "phrase": "response_time_analysis"}, {"score": 0.004466519142879166, "phrase": "efficient_technique"}, {"score": 0.0044209926093642235, "phrase": "industrial_practice"}, {"score": 0.004287166497171827, "phrase": "conservative_assumptions"}, {"score": 0.0040452928361255445, "phrase": "deadline_violations"}, {"score": 0.0038563438670516127, "phrase": "previous_work"}, {"score": 0.0036636484123307605, "phrase": "uppaal"}, {"score": 0.003528458369404996, "phrase": "non-deterministic_computation_times"}, {"score": 0.0034450303951025704, "phrase": "bcet"}, {"score": 0.003386645324034521, "phrase": "computation_intervals"}, {"score": 0.0033635683594830158, "phrase": "preemptive_schedulers"}, {"score": 0.0032952735750239924, "phrase": "resulting_task_model"}, {"score": 0.0031845067058084583, "phrase": "model_checking_techniques"}, {"score": 0.002805989498127897, "phrase": "reachability_problem"}, {"score": 0.002730240935688002, "phrase": "over-approximation_technique"}, {"score": 0.002620424858132324, "phrase": "varying_values"}, {"score": 0.002602555367635598, "phrase": "bcet."}, {"score": 0.002364777610365689, "phrase": "statistical_model-checking"}, {"score": 0.0023490046101309154, "phrase": "smc"}, {"score": 0.002238767763626708, "phrase": "smc_technique"}, {"score": 0.0022083264126633085, "phrase": "performance_analysis"}, {"score": 0.0021932609696277937, "phrase": "schedulable_configurations"}, {"score": 0.0021049977753042253, "phrase": "complex_satellite_software_system"}], "paper_keywords": ["Statistical model checking", " Symbolic model checking", " Performance analysis", " Scheduling"], "paper_abstract": "Schedulability analysis is a main concern for several embedded applications due to their safety-critical nature. The classical method of response time analysis provides an efficient technique used in industrial practice. However, the method is based on conservative assumptions related to execution and blocking times of tasks. Consequently, the method may falsely declare deadline violations that will never occur during execution. This paper is a continuation of previous work of the authors in applying extended timed automata model checking (using the tool UPPAAL) to obtain more exact schedulability analysis, here in the presence of non-deterministic computation times of tasks given by intervals [BCET, WCET]. Computation intervals with preemptive schedulers make the schedulability analysis of the resulting task model undecidable. Our contribution is to propose a combination of model checking techniques to obtain some guarantee on the (un)schedulability of the model even in the presence of undecidability. Two methods are considered: symbolic model checking and statistical model checking. Since the model uses stop-watches, the reachability problem becomes undecidable so we are using an over-approximation technique. We can safely conclude that the system is schedulable for varying values of BCET. For the cases where deadlines are violated, we use polyhedra to try to confirm the witnesses. Our alternative method to confirm non-schedulability uses statistical model-checking (SMC) to generate counter-examples that are always realizable. Another use of the SMC technique is to do performance analysis on schedulable configurations to obtain, e.g., expected response times. The methods are demonstrated on a complex satellite software system yielding new insights useful for the company.", "paper_title": "Schedulability of Herschel revisited using statistical model checking", "paper_id": "WOS:000355682200005"}