{"auto_keywords": [{"score": 0.03358650795204998, "phrase": "pap"}, {"score": 0.009930853665286073, "phrase": "constituent_algorithms"}, {"score": 0.00481495049065317, "phrase": "numerical_optimization"}, {"score": 0.004632737164977336, "phrase": "population-based_algorithm"}, {"score": 0.004558855900816642, "phrase": "numerical_optimization_problem"}, {"score": 0.004358169586895055, "phrase": "wide_range"}, {"score": 0.0043302273768286905, "phrase": "population-based_algorithms"}, {"score": 0.0042748769561032325, "phrase": "evolutionary_algorithms"}, {"score": 0.004247466494836417, "phrase": "particle_swarm_optimizers"}, {"score": 0.004206678601411097, "phrase": "differential_evolution"}, {"score": 0.003819652968070514, "phrase": "inherent_risk"}, {"score": 0.0036279606700393794, "phrase": "existing_algorithm"}, {"score": 0.0035815545681927665, "phrase": "entire_time_budget"}, {"score": 0.0034237422623525937, "phrase": "multiple_different_algorithms"}, {"score": 0.00339083755411773, "phrase": "new_approach"}, {"score": 0.003369076363771074, "phrase": "population-based_algorithm_portfolio"}, {"score": 0.0032940025020351082, "phrase": "multiple_algorithms"}, {"score": 0.0031488204239389335, "phrase": "constituent_algorithm"}, {"score": 0.003000340083107413, "phrase": "migration_scheme"}, {"score": 0.002961938159281582, "phrase": "general_framework"}, {"score": 0.0029240263074648792, "phrase": "specific_algorithm"}, {"score": 0.002822245166926626, "phrase": "existing_population-based_search_algorithms"}, {"score": 0.002521317643120762, "phrase": "empirical_results"}, {"score": 0.0024413739512778136, "phrase": "solution_quality"}, {"score": 0.0021254512976941644, "phrase": "different_stages"}, {"score": 0.0021049977753042253, "phrase": "optimization_process"}], "paper_keywords": ["Algorithm portfolios", " global optimization", " metaheuristic algorithms", " numerical optimization", " population-based algorithms"], "paper_abstract": "In this paper, we consider the scenario that a population-based algorithm is applied to a numerical optimization problem and a solution needs to be presented within a given time budget. Although a wide range of population-based algorithms, such as evolutionary algorithms, particle swarm optimizers, and differential evolution, have been developed and studied under this scenario, the performance of an algorithm may vary significantly from problem to problem. This implies that there is an inherent risk associated with the selection of algorithms. We propose that, instead of choosing an existing algorithm and investing the entire time budget in it, it would be less risky to distribute the time among multiple different algorithms. A new approach named population-based algorithm portfolio (PAP), which takes multiple algorithms as its constituent algorithms, is proposed based upon this idea. PAP runs each constituent algorithm with a part of the given time budget and encourages interaction among the constituent algorithms with a migration scheme. As a general framework rather than a specific algorithm, PAP is easy to implement and can accommodate any existing population-based search algorithms. In addition, a metric is also proposed to compare the risks of any two algorithms on a problem set. We have comprehensively evaluated PAP via investigating 11 instantiations of it on 27 benchmark functions. Empirical results have shown that PAP outperforms its constituent algorithms in terms of solution quality, risk, and probability of finding the global optimum. Further analyses have revealed that the advantages of PAP are mostly credited to the synergy between constituent algorithms, which should complement each other either over a set of problems, or during different stages of an optimization process.", "paper_title": "Population-Based Algorithm Portfolios for Numerical Optimization", "paper_id": "WOS:000283371400009"}