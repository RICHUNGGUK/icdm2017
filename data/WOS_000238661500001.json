{"auto_keywords": [{"score": 0.049435104149514145, "phrase": "data_cache"}, {"score": 0.04553872154701427, "phrase": "smt_trace_processors"}, {"score": 0.00481495049065317, "phrase": "boosting_smt_trace_processors"}, {"score": 0.004707479285061122, "phrase": "sensitive_thread_scheduling_mechanism"}, {"score": 0.004300951511110487, "phrase": "increased_latency"}, {"score": 0.00414830454375092, "phrase": "missing_data"}, {"score": 0.004019171295196278, "phrase": "negative_impact"}, {"score": 0.003965061486705487, "phrase": "pe_resources_utilization_rate"}, {"score": 0.003415681637907093, "phrase": "pe_resources"}, {"score": 0.0031629800646754505, "phrase": "pe_execution_resources"}, {"score": 0.002942196368747418, "phrase": "sensitive_thread_scheduling_mechanisms"}, {"score": 0.002699889709390707, "phrase": "trace_dispatch"}, {"score": 0.0026157259734105, "phrase": "smt_trace_processors_performance"}, {"score": 0.0025456716198597627, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["SMT trace processors", " thread schedule", " data cache miss"], "paper_abstract": "The penalty associated with data cache misses is one of the obstacles to the performance of SMT trace processors. The increased latency is not only required to resolve the missing data, the miss will also have negative impact on the PE resources utilization rate of the SMT trace processors. When data cache miss occurs in SMT trace processors, all the completed traces following the data-miss-trace (a trace with at least one data cache miss) will be delayed to commit for the data cache miss event. PE resources occupied by those traces can not be released until traces are committed, which wastes the PE execution resources and hampers the performance of SMT trace processors. In this paper, we propose several data cache miss sensitive thread scheduling mechanisms with the aim to tolerate the penalties of data cache misses. By choosing the thread wisely in trace dispatch and trace commit stages, the SMT trace processors performance can be improved further. Simulation results show that when using L1-L2 thread scheduling mechanism, performance will be improved by 2.8% (2-thread SMT trace processors), 8.0% (4-thread SMT trace processors) and 18.2% (8-thread SMT trace processors) with 8-PE. 512 KB L2 cache configuration. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Boosting SMT trace processors performance with data cache miss sensitive thread scheduling mechanism", "paper_id": "WOS:000238661500001"}