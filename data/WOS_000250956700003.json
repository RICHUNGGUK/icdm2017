{"auto_keywords": [{"score": 0.049146612112995945, "phrase": "devs"}, {"score": 0.00481495049065317, "phrase": "devs_and_cell-devs_models"}, {"score": 0.004767826806287385, "phrase": "discrete_event_system_specification"}, {"score": 0.00462919213721188, "phrase": "sound_formalism"}, {"score": 0.004561386908745206, "phrase": "generic_dynamic_systems"}, {"score": 0.004494570360108983, "phrase": "hierarchical_and_modular_way"}, {"score": 0.004385367803204002, "phrase": "devs-based_formalism"}, {"score": 0.004299910946753963, "phrase": "complex_physical_systems"}, {"score": 0.004257806363128601, "phrase": "cell_spaces"}, {"score": 0.004154332348800334, "phrase": "new_techniques"}, {"score": 0.003916098498242888, "phrase": "distributed_environments"}, {"score": 0.0038397509389856625, "phrase": "warped_kernel"}, {"score": 0.003728000957725218, "phrase": "time_warp_protocol"}, {"score": 0.0036733470451885465, "phrase": "optimistic_simulator"}, {"score": 0.003566422652043389, "phrase": "new_simulation_engine"}, {"score": 0.0033617891884360606, "phrase": "cell-devs_formalisms"}, {"score": 0.003200230621987751, "phrase": "optimistic_simulations"}, {"score": 0.0031532895341013297, "phrase": "non-hierarchical_approach"}, {"score": 0.003091767402370757, "phrase": "communication_overhead"}, {"score": 0.0030464123943266673, "phrase": "message-passing_organization"}, {"score": 0.0029722900280316216, "phrase": "high-level_abstraction"}, {"score": 0.002914288956035066, "phrase": "wall_clock_time_slice"}, {"score": 0.002843372121209168, "phrase": "two-level_user-controlled_state-saving_mechanism"}, {"score": 0.0025262061502713683, "phrase": "risk-free_message_type-based_state-saving_strategy"}, {"score": 0.0023003498123420237, "phrase": "node_strategy"}, {"score": 0.0021049977753042253, "phrase": "considerable_speedups"}], "paper_keywords": ["parallel DEVS models", " Cell-DEVS models", " discrete event simulation", " optimistic synchronization techniques"], "paper_abstract": "Discrete Event System Specification (DEVS) is a sound formalism to describe generic dynamic systems in a hierarchical and modular way. Cell-DEVS is a DEVS-based formalism intended to model complex physical systems as cell spaces. This work presents new techniques for executing DEVS and Cell-DEVS models in parallel and distributed environments based on the WARPED kernel, an implementation of the Time Warp protocol. The optimistic simulator PCD++, built as a new simulation engine for CD++, is a toolkit that implements the DEVS and Cell-DEVS formalisms. We redesign algorithms in CD++ to carry out optimistic simulations using a non-hierarchical approach that reduces the communication overhead. The message-passing organization is analyzed using a high-level abstraction referred to as wall clock time slice. We propose a two-level user-controlled state-saving mechanism to achieve efficient and flexible state saving at runtime. Various optimization strategies are applied to PCD++ and their effects are analyzed quantitatively, including a risk-free message type-based state-saving strategy to reduce the number of states saved during the simulation significantly, and a one log file per node strategy to break the bottleneck caused by file I/O operations. It is shown that PCD++ markedly outperforms other alternatives and considerable speedups can be achieved in parallel and distributed simulations.", "paper_title": "Parallel environment for DEVS and cell-DEVS models", "paper_id": "WOS:000250956700003"}