{"auto_keywords": [{"score": 0.028380651048940126, "phrase": "mocca"}, {"score": 0.00481495049065317, "phrase": "mocca-ii"}, {"score": 0.004540126719762935, "phrase": "multiple_conflicting_objectives"}, {"score": 0.0042809216371527785, "phrase": "working_environment"}, {"score": 0.004207527897084009, "phrase": "multi-objective_optimization_algorithms"}, {"score": 0.004022515690178811, "phrase": "objective_functions"}, {"score": 0.0038456073694665, "phrase": "multi-objective_problem"}, {"score": 0.0037796484923665855, "phrase": "single_optimal_solution"}, {"score": 0.003576060405460302, "phrase": "efficient_solutions"}, {"score": 0.0035147084172295123, "phrase": "global_non-dominated_set"}, {"score": 0.0033484464719654105, "phrase": "final_solution"}, {"score": 0.0028852371404397862, "phrase": "previous_piece"}, {"score": 0.002845541839157798, "phrase": "multi-objective_cooperative_coevolution_algorithms"}, {"score": 0.002739165532192527, "phrase": "practical_problem"}, {"score": 0.002720254890261961, "phrase": "air_traffic_management"}, {"score": 0.002692132776447632, "phrase": "terminal_airspaces"}, {"score": 0.0025914765323897604, "phrase": "distributed_environment"}, {"score": 0.0024432508011008563, "phrase": "key_components"}, {"score": 0.0023600418563602303, "phrase": "better_design"}, {"score": 0.0023114798074455453, "phrase": "systematic_investigation"}, {"score": 0.002279660253812632, "phrase": "resultant_new_algorithm"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Co-operative co-evolution", " Multi-objective optimization", " Evolutionary optimization"], "paper_abstract": "Most real-world problems naturally involve multiple conflicting objectives, such as in the case of attempting to maximize both efficiency and safety of a working environment. The aim of multi-objective optimization algorithms is to find those solutions that optimize several components of a vector of objective functions simultaneously. However, when objectives conflict with each other, the multi-objective problem does not have a single optimal solution for all objectives simultaneously. Instead, algorithms attempt to search for the set of efficient solutions, known as the global non-dominated set, that provides solutions that optimally trade-off the objectives. The final solution to be adopted from this set would depend on the preferences of the decision-makers involved in the process. Hence, a decision-maker is typically interested in knowing as many potential solutions as possible. In this paper, we propose an extension to a previous piece of work on multi-objective cooperative coevolution algorithms (MOCCA). The idea was motivated with a practical problem in air traffic management to design terminal airspaces. MOCCA and a further study that was done on a distributed environment for MOCCA, were found to fit the need for the application. We systematically questioned key components of this algorithm and investigated variations to identify a better design. This paper summarizes this systematic investigation and present the resultant new algorithm: multi-objective co-operative co-evolutionary algorithm II (MOCCA-II). (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "MOCCA-II: A multi-objective co-operative co-evolutionary algorithm", "paper_id": "WOS:000341680000035"}