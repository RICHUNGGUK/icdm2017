{"auto_keywords": [{"score": 0.011491816720862615, "phrase": "update_request_dissemination"}, {"score": 0.004555217356295278, "phrase": "cloud_computing"}, {"score": 0.0042148594491580324, "phrase": "existent_cloud_systems"}, {"score": 0.004122351497440992, "phrase": "single_data_item"}, {"score": 0.0039433581938239926, "phrase": "convenient_functionality"}, {"score": 0.003814212645832246, "phrase": "large_number"}, {"score": 0.0037721073763702486, "phrase": "data_items"}, {"score": 0.0034134024569847264, "phrase": "computing_resources"}, {"score": 0.0027031706928674092, "phrase": "connection_maintenance"}, {"score": 0.002585638506308606, "phrase": "request_dissemination"}, {"score": 0.0025570607111118793, "phrase": "extensive_experiments"}, {"score": 0.0024732038734968567, "phrase": "real_web_applications"}, {"score": 0.0023920904611571783, "phrase": "service_requirement"}, {"score": 0.0023656467839555458, "phrase": "good_scalability"}, {"score": 0.002262756631083292, "phrase": "data_redistribution"}, {"score": 0.0022377394845878268, "phrase": "node_membership_dynamicity"}, {"score": 0.0022007302738063566, "phrase": "service_maintenance_cost"}, {"score": 0.0021049977753042253, "phrase": "underlying_system"}], "paper_keywords": ["Cloud", " Publish/subscribe", " Multicast", " Large-scale network infrastructure", " Peer-to-peer"], "paper_abstract": "Cloud computing is becoming increasingly popular for the scalability and availability it promises. As existent cloud systems support only update interface on single data item, users and applications may require a convenient functionality that applies updates to a large number of data items. We propose an approach towards this end and exploit publish/subscribe service in update request dissemination. To effectively utilize computing resources of all nodes in a cloud, we devise a publish/subscribe service called Ripple which achieves the following goals: (1) fast connecting nodes according to their subscriptions on topics to exploit nodes in update request dissemination; (2) low cost in connection maintenance; (3) short delay for request dissemination. Extensive experiments based upon data collected from real Web applications demonstrate that Ripple satisfying the service requirement has good scalability and performs well even under conditions of data redistribution and node membership dynamicity. The service maintenance cost does not cause over stress on the underlying system. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Ripple: A publish/subscribe service for multidata item updates propagation in the cloud", "paper_id": "WOS:000291846700004"}