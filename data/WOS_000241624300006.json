{"auto_keywords": [{"score": 0.049324540543845156, "phrase": "frequent_item-sets"}, {"score": 0.008244149810818143, "phrase": "incremental_updating"}, {"score": 0.00481495049065317, "phrase": "distributed_incremental_updating"}, {"score": 0.003885085477351673, "phrase": "massive_data"}, {"score": 0.0037935066882208235, "phrase": "main_contributions"}, {"score": 0.003503497128638099, "phrase": "interesting_support_threshold"}, {"score": 0.0032355864829403413, "phrase": "compact_structure"}, {"score": 0.003036040409062437, "phrase": "algorithm_fiiu."}, {"score": 0.0023346234464901978, "phrase": "extensive_experiments"}, {"score": 0.0022614266476954467, "phrase": "fiiu"}, {"score": 0.002225691463551672, "phrase": "dfiiu"}, {"score": 0.0021731423856364003, "phrase": "better_performance"}, {"score": 0.002138799283553239, "phrase": "traditional_algorithm"}, {"score": 0.0021049977753042253, "phrase": "massive_database"}], "paper_keywords": [""], "paper_abstract": "Incremental updating of frequent item-sets on a database includes three problems. In this paper, these problems are explored when database stores massive data. The main contributions include: (a) introduces the concept of Interesting Support Threshold; (b) proposes Frequent Item-sets Tree (FITr) with compact structure; (c) proposes and implements algorithm FIIU. for frequent item-sets incremental updating; (d) in order to further improve performance, proposes the algorithm DFIIU for distributed incremental updating of frequent Item-sets on massive database; (e) gives extensive experiments to show that FIIU and DFIIU algorithms have better performance than traditional algorithm on massive database when the number of items is less.", "paper_title": "An efficient algorithm for distributed incremental updating of frequent item-sets on massive database", "paper_id": "WOS:000241624300006"}