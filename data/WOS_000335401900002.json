{"auto_keywords": [{"score": 0.0334546270936539, "phrase": "concept_descriptions"}, {"score": 0.00481495049065317, "phrase": "expressive_descriptive_logics._forgetting"}, {"score": 0.004760765880314089, "phrase": "important_tool"}, {"score": 0.00463668357590034, "phrase": "redundant_concepts"}, {"score": 0.0045158206186680224, "phrase": "complete_reasoning"}, {"score": 0.004283423748543866, "phrase": "relatively_simple_description_logics"}, {"score": 0.002671263324230699, "phrase": "special_case"}, {"score": 0.0026311731359714204, "phrase": "tboxes"}, {"score": 0.002279011030331704, "phrase": "computing_approximations"}, {"score": 0.0021778895748464045, "phrase": "ontology_editor"}], "paper_keywords": ["forgetting", " DLs", " ontology"], "paper_abstract": "Forgetting is an important tool for reducing ontologies by eliminating some redundant concepts and roles while preserving sound and complete reasoning. Attempts have previously been made to address the problem of forgetting in relatively simple description logics (DLs), such as DL-Lite and extended . However, the issue of forgetting for ontologies in more expressive DLs, such as and OWL DL, is largely unexplored. In particular, the problem of characterizing and computing forgetting for such logics is still open. In this paper, we first define semantic forgetting about concepts and roles in ontologies and state several important properties of forgetting in this setting. We then define the result of forgetting for concept descriptions in , state the properties of forgetting for concept descriptions, and present algorithms for computing the result of forgetting for concept descriptions. Unlike the case of DL-Lite, the result of forgetting for an ontology does not exist in general, even for the special case of forgetting in TBoxes. This makes the problem of computing the result of forgetting in more challenging. We address this problem by defining a series of approximations to the result of forgetting for ontologies and studying their properties. Our algorithms for computing approximations can be directly implemented as a plug-in of an ontology editor to enhance its ability of managing and reasoning in (large) ontologies.", "paper_title": "ELIMINATING CONCEPTS AND ROLES FROM ONTOLOGIES IN EXPRESSIVE DESCRIPTIVE LOGICS", "paper_id": "WOS:000335401900002"}