{"auto_keywords": [{"score": 0.03421376944965005, "phrase": "method's_efficiency"}, {"score": 0.004815316573636744, "phrase": "gpu"}, {"score": 0.004438250823243621, "phrase": "novel_method"}, {"score": 0.004386887374401584, "phrase": "fast_lossy"}, {"score": 0.004211731831120046, "phrase": "regular_height_fields"}, {"score": 0.004043541331944951, "phrase": "simd_parallel_implementation"}, {"score": 0.003904713104101532, "phrase": "modern_gpu_architectures"}, {"score": 0.003859500298805362, "phrase": "lossy_compression"}, {"score": 0.003726967166630923, "phrase": "height_field"}, {"score": 0.003619993477999133, "phrase": "quadratic_bezier_surfaces"}, {"score": 0.003516079377293321, "phrase": "lossless_compression"}, {"score": 0.003336468343971626, "phrase": "lossy_approximation"}, {"score": 0.0031845067058084583, "phrase": "cuda_implementation"}, {"score": 0.0031111332159761344, "phrase": "decompression_algorithms"}, {"score": 0.003021781956684419, "phrase": "independent_decompression"}, {"score": 0.0029867619862229853, "phrase": "individual_data_points"}, {"score": 0.0029009722548088306, "phrase": "progressive_decompression"}, {"score": 0.00278497898719426, "phrase": "lossy_decompression"}, {"score": 0.002736694413701639, "phrase": "decompressed_surface"}, {"score": 0.0025967927629150715, "phrase": "gpu-oriented_state-of-the-art_method"}, {"score": 0.0024640253074497114, "phrase": "widely_available_lossless_compression_method"}, {"score": 0.002407212534478918, "phrase": "deflate"}, {"score": 0.002351705899181029, "phrase": "comparable_compression_ratios"}, {"score": 0.0021049977753042253, "phrase": "lower_workloads"}], "paper_keywords": ["Height field", " Lossy and lossless compression", " Progressive decompression", " Bezier surface", " SIMD parallelism"], "paper_abstract": "In this paper, we present a novel method for fast lossy or lossless compression and decompression of regular height fields. The method is suitable for SIMD parallel implementation and thus inherently suitable for modern GPU architectures. Lossy compression is achieved by approximating the height field with a set of quadratic Bezier surfaces. In addition, lossless compression is achieved by superimposing the residuals over the lossy approximation. We validated the method's efficiency through a CUDA implementation of compression and decompression algorithms. The method allows independent decompression of individual data points, as well as progressive decompression. Even in the case of lossy decompression, the decompressed surface is inherently seamless. In comparison with the GPU-oriented state-of-the-art method, the proposed method, combined with a widely available lossless compression method (such as DEFLATE), achieves comparable compression ratios. The method's efficiency slightly outperforms the state-of-the-art method for very high workloads and considerably for lower workloads.", "paper_title": "HFPaC: GPU friendly height field parallel compression", "paper_id": "WOS:000313367300007"}