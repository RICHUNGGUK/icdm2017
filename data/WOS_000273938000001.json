{"auto_keywords": [{"score": 0.048339607507904336, "phrase": "ajsp"}, {"score": 0.014432669699445318, "phrase": "jsp"}, {"score": 0.008366810722877656, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "assembly_job_shop"}, {"score": 0.004697655699119423, "phrase": "assembly_job_shop_problem"}, {"score": 0.004471530397729526, "phrase": "classical_job_shop_problem"}, {"score": 0.004101579688745222, "phrase": "assembly_stage"}, {"score": 0.00405127920820053, "phrase": "job_completion"}, {"score": 0.003693103542455806, "phrase": "successive_operation"}, {"score": 0.0034720284451902083, "phrase": "previous_study"}, {"score": 0.0034295418385881936, "phrase": "ls"}, {"score": 0.0032240802202623316, "phrase": "distinct_products"}, {"score": 0.0030686679245324837, "phrase": "simple_dispatching_rules"}, {"score": 0.0029570303644956128, "phrase": "evolutionary_approach"}, {"score": 0.0029207251108325006, "phrase": "genetic_algorithm"}, {"score": 0.002779894844207706, "phrase": "research_problem"}, {"score": 0.0026953359825383624, "phrase": "test_problems"}, {"score": 0.002518227743688769, "phrase": "computational_results"}, {"score": 0.0023967582707115354, "phrase": "previous_one"}, {"score": 0.0022531089868518235, "phrase": "objective_function"}, {"score": 0.0021845387990972543, "phrase": "inherent_conflicting_relationship"}, {"score": 0.002144400314994328, "phrase": "primary_objective"}, {"score": 0.0021049977753042253, "phrase": "system_measurements"}], "paper_keywords": ["Assembly job shop", " Lot streaming", " Part sharing", " Dispatching rules", " Genetic algorithm"], "paper_abstract": "Assembly job shop problem (AJSP) is an extension of classical job shop problem (JSP). AJSP first starts with a JSP and appends an assembly stage after job completion. Lot Streaming (LS) technique is defined as the process of splitting lots into sub-lots such that successive operation can be overlapped. In this paper, the previous study of LS to AJSP is extended by allowing part sharing among distinct products. In addition to the use of simple dispatching rules (SDRs), an evolutionary approach with genetic algorithm (GA) is proposed to solve the research problem. A number of test problems were conducted to examine the performance of the proposed algorithm. Computational results suggested that the proposed algorithm can outperform the previous one, and can work well with respect to the objective function. Also, the inherent conflicting relationship between the primary objective and the system measurements can be addressed. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "An evolutionary algorithm for assembly job shop with part sharing", "paper_id": "WOS:000273938000001"}