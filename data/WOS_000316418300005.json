{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "linear_octree_finite_element_mesh_generation_scheme"}, {"score": 0.004437613070853689, "phrase": "performance_analysis"}, {"score": 0.004303830426772906, "phrase": "linear_octree-based_mesh_generation_scheme"}, {"score": 0.003966388754366831, "phrase": "geometry-adapted_unstructured_hexahedral"}, {"score": 0.003807684498435389, "phrase": "triangulated_surface_models"}, {"score": 0.003334309053314909, "phrase": "large_linear_octrees"}, {"score": 0.0031360786664165093, "phrase": "efficient_computer_graphics_algorithms"}, {"score": 0.002860546817196148, "phrase": "complex_geometries"}, {"score": 0.0027741761880779535, "phrase": "isogranular_analysis"}, {"score": 0.002718045523483502, "phrase": "good_scalability"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["parallel mesh generation", " finite element", " octrees", " performance analysis"], "paper_abstract": "We show a parallel implementation and performance analysis of a linear octree-based mesh generation scheme designed to create reasonable-quality, geometry-adapted unstructured hexahedral meshes automatically from triangulated surface models. We present algorithms for the construction, 2:1 balancing and meshing large linear octrees on supercomputers. Our scheme uses efficient computer graphics algorithms for surface detection, allowing us to represent complex geometries. An isogranular analysis demonstrates good scalability. Our implementation is able to execute the 2:1 balancing operations over 3.4 billion octants in less than 10s per 1.6 million octants per CPU core. Copyright (c) 2012 John Wiley & Sons, Ltd.", "paper_title": "Parallel implementation and performance analysis of a linear octree finite element mesh generation scheme", "paper_id": "WOS:000316418300005"}