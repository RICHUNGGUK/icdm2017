{"auto_keywords": [{"score": 0.04102155612877039, "phrase": "feature_models"}, {"score": 0.011211987679562501, "phrase": "goal_models"}, {"score": 0.008713768692145006, "phrase": "non-functional_properties"}, {"score": 0.004440780432053927, "phrase": "systematic_reuse-based_software_development_approach"}, {"score": 0.004437146369810299, "phrase": "feature_model"}, {"score": 0.004215677131963292, "phrase": "software_products"}, {"score": 0.004095567486538121, "phrase": "core_assets"}, {"score": 0.004001938457469328, "phrase": "individual_software_systems"}, {"score": 0.0038210283935447473, "phrase": "widely_used_artefacts"}, {"score": 0.003777088546146369, "phrase": "spl_development"}, {"score": 0.0036907133026806327, "phrase": "functional_and_operational_variability"}, {"score": 0.0034832884999421374, "phrase": "intentional_variability_models"}, {"score": 0.0033839745649214548, "phrase": "feature_variability_models"}, {"score": 0.0033257460346754687, "phrase": "target_domain"}, {"score": 0.0032309093154028663, "phrase": "valuable_quality"}, {"score": 0.0031937337757356526, "phrase": "non-functional_information"}, {"score": 0.003156984631072011, "phrase": "interrelating_goal_models"}, {"score": 0.002945175711537758, "phrase": "nonfunctional_properties"}, {"score": 0.002911278281894321, "phrase": "software_product_lines"}, {"score": 0.00282822695516646, "phrase": "manual_integration_process"}, {"score": 0.0025044454602720597, "phrase": "standard_ontologies"}, {"score": 0.002418923027024191, "phrase": "goal_model_elements"}, {"score": 0.002363532907211947, "phrase": "semantic_similarity"}, {"score": 0.0021049977753042253, "phrase": "domain_engineers"}], "paper_keywords": ["Software product lines", " feature models", " goal models"], "paper_abstract": "Software Product Line (SPL) engineering is a systematic reuse-based software development approach which is founded on the idea of building software products using a set of core assets rather than developing individual software systems from scratch. Feature models are among the widely used artefacts for SPL development that mostly capture functional and operational variability of a system. Researchers have argued that connecting intentional variability models such as goal models with feature variability models in a target domain can enrich feature models with valuable quality and non-functional information. Interrelating goal models and feature models has already been proposed in the literature for capturing nonfunctional properties in software product lines; however, this manual integration process is cumbersome and tedious. In this paper, we propose a (semi) automated approach that systematically integrates feature models and goal models through standard ontologies. Our proposed approach connects feature model and goal model elements through measuring the semantic similarity of their annotated ontological concepts. Our work not only provides the means to systematically interrelate feature models and goal models but also allows domain engineers to identify and model the role and significance of non-functional properties in the domain represented by the feature model.", "paper_title": "Addressing Non-Functional Properties in Feature Models: A Goal-Oriented Approach", "paper_id": "WOS:000351877500004"}