{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "skyline_objects"}, {"score": 0.03747627866976929, "phrase": "stream_environments"}, {"score": 0.02904640062099643, "phrase": "full_space_skyline"}, {"score": 0.004690305164360866, "phrase": "data_streams"}, {"score": 0.00450933377534525, "phrase": "k-dimensional_objects"}, {"score": 0.004421471944783611, "phrase": "skyline_query"}, {"score": 0.0040334640350288, "phrase": "different_users"}, {"score": 0.003903269701018361, "phrase": "different_dimensions"}, {"score": 0.003607630811220324, "phrase": "k_dimensions"}, {"score": 0.003400640983719424, "phrase": "concurrent_and_unpredictable_subspace_skyline_queries"}, {"score": 0.0030017207229983385, "phrase": "expensive_update_cost"}, {"score": 0.00290473242917264, "phrase": "query_cost"}, {"score": 0.0025807396931129926, "phrase": "efficient_maintenance_algorithm"}, {"score": 0.002464709648714996, "phrase": "efficient_and_scalable_two-phase_algorithm"}, {"score": 0.0023694065215394593, "phrase": "skyline_queries"}, {"score": 0.0023384629381463054, "phrase": "different_subspaces"}, {"score": 0.0021753413850499467, "phrase": "theoretical_analyses"}, {"score": 0.002146926767291475, "phrase": "extensive_experiments"}], "paper_keywords": ["Skyline query", " Sliding window", " Query optimization", " Performance evaluation", " Regular grid"], "paper_abstract": "Given a set of k-dimensional objects, the skyline query finds the objects that are not dominated by others. In practice, different users may be interested in different dimensions of the data, and issue queries on any subset of k dimensions in stream environments. This paper focuses on supporting concurrent and unpredictable subspace skyline queries over data streams. Simply to compute and store the skyline objects of every subspace in stream environments will incur expensive update cost. To balance the query cost and update cost, we only maintain the full space skyline in this paper. We first propose an efficient maintenance algorithm and several novel pruning techniques. Then, an efficient and scalable two-phase algorithm is proposed to process the skyline queries in different subspaces based on the full space skyline. Furthermore, we present the theoretical analyses and extensive experiments that demonstrate our method is both efficient and effective.", "paper_title": "Efficient mining of skyline objects in subspaces over data streams", "paper_id": "WOS:000274853200002"}