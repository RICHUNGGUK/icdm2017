{"auto_keywords": [{"score": 0.03694396280494385, "phrase": "shared_memory_model"}, {"score": 0.008385422260670666, "phrase": "wait-free_task_solvability"}, {"score": 0.00481495049065317, "phrase": "failure_detectors"}, {"score": 0.004689650818647484, "phrase": "iterated_immediate_snapshot_model"}, {"score": 0.004487995503597403, "phrase": "iis"}, {"score": 0.004371160978838441, "phrase": "ail_asynchronous_computation_model"}, {"score": 0.004074212307838049, "phrase": "one-shot_immediate_snapshot"}, {"score": 0.0034168317227203206, "phrase": "wait-free_task"}, {"score": 0.002717750004930131, "phrase": "iis_model"}], "paper_keywords": ["Asynchronous shared memory system", " Atomic read/write register", " Distributed computing", " Distributed computability", " Failure detector", " Iterated immediate snapshot model", " Process crash", " Snapshot operation"], "paper_abstract": "The Iterated Immediate Snapshot model (IIS) is ail asynchronous computation model where processes communicate through a sequence of one-shot Immediate Snapshot (IS) objects. It is known that this model is equivalent to the usual asynchronous read/write shared memory model, for wait-free task solvability. Its interest lies in the fact that its runs are more structured and easier to analyze than the runs in the shared memory model. As the IIS model and the shared memory model are equivalent for wait-free task solvability, a natural question is the following: Are they still equivalent for wait-free task solvability, when they are enriched with the same failure detector? The paper shows that the answer to this question is \"no\". (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "An impossibility about failure detectors in the iterated immediate snapshot model", "paper_id": "WOS:000259955300016"}