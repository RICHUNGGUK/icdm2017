{"auto_keywords": [{"score": 0.03700385809508465, "phrase": "syntactic_criteria"}, {"score": 0.00481495049065317, "phrase": "satisfiability_modulo_theories"}, {"score": 0.004739773204474094, "phrase": "state-of-the-art_theory_solvers"}, {"score": 0.0037133478610481994, "phrase": "generic_instantiation_scheme"}, {"score": 0.003626626504149897, "phrase": "smt_problems"}, {"score": 0.00314708280192844, "phrase": "instantiation_scheme"}, {"score": 0.002259883463607508, "phrase": "smt_community"}, {"score": 0.0021049977753042253, "phrase": "last_section"}], "paper_keywords": ["Satisfiability modulo theories", " Instantiation-based theorem proving", " Decision procedures"], "paper_abstract": "State-of-the-art theory solvers generally rely on an instantiation of the axioms of the theory, and depending on the solvers, this instantiation is more or less explicit. This paper introduces a generic instantiation scheme for solving SMT problems, along with syntactic criteria to identify the classes of clauses for which it is complete. The instantiation scheme itself is simple to implement, and we have produced an implementation of the syntactic criteria that guarantee a given set of clauses can be safely instantiated. We used our implementation to test the completeness of our scheme for several theories of interest in the SMT community, some of which are listed in the last section of this paper.", "paper_title": "An Instantiation Scheme for Satisfiability Modulo Theories", "paper_id": "WOS:000300494700001"}