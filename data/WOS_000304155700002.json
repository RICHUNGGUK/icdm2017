{"auto_keywords": [{"score": 0.03376770815591125, "phrase": "prediction_quality"}, {"score": 0.015356921034374593, "phrase": "software_projects"}, {"score": 0.010153500810127183, "phrase": "prediction_models"}, {"score": 0.004837531808291194, "phrase": "time"}, {"score": 0.004415675459182871, "phrase": "concept_drift"}, {"score": 0.004261998281333649, "phrase": "software_manager"}, {"score": 0.004081385289516914, "phrase": "bug_prediction_model"}, {"score": 0.0040334640350288, "phrase": "wrong_prediction"}, {"score": 0.003908396188878932, "phrase": "future_bugs"}, {"score": 0.003757480190200645, "phrase": "project's_goals"}, {"score": 0.003555902292752528, "phrase": "bug_prediction_model's_accuracy"}, {"score": 0.003134705849154561, "phrase": "decision_procedure"}, {"score": 0.0028630535573013686, "phrase": "defect_prediction_quality"}, {"score": 0.002407078478216306, "phrase": "project_manager"}, {"score": 0.0023415390666563177, "phrase": "prediction_model"}], "paper_keywords": ["Time variance", " Mining software repository", " Defect prediction", " Decision tree learner", " Concept drift"], "paper_abstract": "It is crucial for a software manager to know whether or not one can rely on a bug prediction model. A wrong prediction of the number or the location of future bugs can lead to problems in the achievement of a project's goals. In this paper we first verify the existence of variability in a bug prediction model's accuracy over time both visually and statistically. Furthermore, we explore the reasons for such a high variability over time, which includes periods of stability and variability of prediction quality, and formulate a decision procedure for evaluating prediction models before applying them. To exemplify our findings we use data from four open source projects and empirically identify various project features that influence the defect prediction quality. Specifically, we observed that a change in the number of authors editing a file and the number of defects fixed by them influence the prediction quality. Finally, we introduce an approach to estimate the accuracy of prediction models that helps a project manager decide when to rely on a prediction model. Our findings suggest that one should be aware of the periods of stability and variability of prediction quality and should use approaches such as ours to assess their models' accuracy in advance.", "paper_title": "Time variance and defect prediction in software projects Towards an exploitation of periods of stability and change as well as a notion of concept drift in software projects", "paper_id": "WOS:000304155700002"}