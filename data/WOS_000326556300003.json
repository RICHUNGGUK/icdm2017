{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "executable_formal_specifications"}, {"score": 0.004739056045644449, "phrase": "complex_distributed_systems"}, {"score": 0.004664352260912174, "phrase": "coreasm._formal_specifications"}, {"score": 0.004554488671294504, "phrase": "crucial_role"}, {"score": 0.004377077848734575, "phrase": "reliable_complex_software_systems"}, {"score": 0.0041074234667687875, "phrase": "early_validation"}, {"score": 0.003916098498242888, "phrase": "static_analysis_techniques"}, {"score": 0.00385431710959668, "phrase": "accurate_simulation"}, {"score": 0.0037634608487353183, "phrase": "runtime_behavior"}, {"score": 0.00347574024760684, "phrase": "increasing_complexity"}, {"score": 0.0034208822062692127, "phrase": "software-intensive_computer-based_systems"}, {"score": 0.0031845067058084583, "phrase": "abstract_software_models"}, {"score": 0.002988101395789399, "phrase": "interactive_software_tools"}, {"score": 0.0026518169452004465, "phrase": "coreasm"}, {"score": 0.002488183412451029, "phrase": "executable_specifications"}, {"score": 0.0024101837218440834, "phrase": "asm_method"}, {"score": 0.002208035721125305, "phrase": "innovative_extensible_language_architecture"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Formal methods", " Specification and modeling environment", " Extensible language", " Abstract state machines", " CoreASM"], "paper_abstract": "Formal specifications play a crucial role in the design of reliable complex software systems. Executable formal specifications allow the designer to attain early validation and verification of design using static analysis techniques and accurate simulation of the runtime behavior of the system-to-be. With increasing complexity of software-intensive computer-based systems and the challenges of validation and verification of abstract software models prior to coding, the need for interactive software tools supporting executable formal specifications is even more evident. In this paper, we discuss how CoreASM, an environment for writing and running executable specifications according to the ASM method, provides flexibility and manages the complexity by using an innovative extensible language architecture. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Executable formal specifications of complex distributed systems with CoreASM", "paper_id": "WOS:000326556300003"}