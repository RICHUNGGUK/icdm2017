{"auto_keywords": [{"score": 0.04314658848168205, "phrase": "smplearner"}, {"score": 0.02448221454249327, "phrase": "single_class-level_metrics"}, {"score": 0.00481495049065317, "phrase": "software_maintainability"}, {"score": 0.004722254884093624, "phrase": "accurate_and_practical_software_maintainability_prediction"}, {"score": 0.004326624385772596, "phrase": "maintenance-related_decision_making"}, {"score": 0.0037392451233558234, "phrase": "maintainability_predictors"}, {"score": 0.0035965032173588753, "phrase": "actual_average_maintenance_effort"}, {"score": 0.003459191419478298, "phrase": "code_change_history"}, {"score": 0.003107935254560724, "phrase": "static_code_analysis_tools"}, {"score": 0.0027651847105654363, "phrase": "eight_large_scale_open_source_software_systems"}, {"score": 0.002389276641014013, "phrase": "recent_learning-based_maintainability_predictors"}, {"score": 0.0021049977753042253, "phrase": "maintainability_prediction"}], "paper_keywords": ["Software Maintainability", " Maintenance effort", " Software metric", " Machine learning"], "paper_abstract": "Accurate and practical software maintainability prediction enables organizations to effectively manage their maintenance resources and guide maintenance-related decision making. This paper presents SMPLearner, an automated learning-based approach to train maintainability predictors by harvesting the actual average maintenance effort computed from the code change history as well as employing a much richer set of 44 four-level hierarchical code metrics collected by static code analysis tools. We systematically evaluated SMPLearner on 150 observations partitioned from releases of eight large scale open source software systems. Our evaluation showed that SMPLearner not only outperformed the traditional 4-metric MI model but also the recent learning-based maintainability predictors constructed based on single Class-level metrics, demonstrating that single Class-level metrics were not sufficient for maintainability prediction.", "paper_title": "SMPLearner: learning to predict software maintainability", "paper_id": "WOS:000351476800005"}