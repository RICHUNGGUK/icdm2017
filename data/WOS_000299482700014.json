{"auto_keywords": [{"score": 0.048161342566218714, "phrase": "balanced_workloads"}, {"score": 0.0372211825631821, "phrase": "clairvoyant"}, {"score": 0.03408658377630783, "phrase": "conflict_graph"}, {"score": 0.00481495049065317, "phrase": "balanced_transactional_memory_workloads"}, {"score": 0.0047283116134926645, "phrase": "transactional_memory_contention_management"}, {"score": 0.004377077848734575, "phrase": "write_operations"}, {"score": 0.004278807087784626, "phrase": "constant_fraction"}, {"score": 0.0041074234667687875, "phrase": "theoretical_performance_boundaries"}, {"score": 0.004070276454809864, "phrase": "contention_management"}, {"score": 0.003978866233891427, "phrase": "worst-case_perspective"}, {"score": 0.0037506567448470163, "phrase": "contention_management_algorithm"}, {"score": 0.0036663981146086103, "phrase": "optimal_offline_contention_management_algorithm"}, {"score": 0.003600351201298387, "phrase": "competitive_ratio"}, {"score": 0.0035515951985356374, "phrase": "first_algorithm"}, {"score": 0.0033630629374009607, "phrase": "shared_resources"}, {"score": 0.0030988045934942587, "phrase": "second_algorithm"}, {"score": 0.003084746601773484, "phrase": "non-clairvoyant"}, {"score": 0.0023694065215394593, "phrase": "polynomial_time_contention_management_algorithm"}, {"score": 0.0023372808856170386, "phrase": "balanced_transaction_scheduling_problem"}, {"score": 0.0022039159190674128, "phrase": "np"}, {"score": 0.0021731427092578815, "phrase": "zpp."}, {"score": 0.0021049977753042253, "phrase": "significant_improvements"}], "paper_keywords": ["Transactional memory", " Contention management", " Balanced workloads", " Transaction scheduling", " Competitive ratios", " Concurrency control"], "paper_abstract": "We consider transactional memory contention management in the context of balanced workloads, where if a transaction is writing, the number of write operations it performs is a constant fraction of its total reads and writes. We explore the theoretical performance boundaries of contention management in balanced workloads from the worst-case perspective by presenting and analyzing two new polynomial time contention management algorithms. We analyze the performance of a contention management algorithm by comparison with an optimal offline contention management algorithm to provide a competitive ratio. The first algorithm Clairvoyant is O(root s)-competitive, where s is the number of shared resources. This algorithm depends on explicitly knowing the conflict graph at each time step of execution. The second algorithm Non-Clairvoyant is O(root s.log n)-competitive, with high probability, which is only a O( log n) factor worse, but does not require knowledge of the conflict graph, where n is the number of transactions. Both of these algorithms are greedy. We also prove that the performance of Clairvoyant is close to optimal, since there is no polynomial time contention management algorithm for the balanced transaction scheduling problem that is better than O((root s)(1-epsilon))-competitive for any constant epsilon > 0, unless NP subset of ZPP. To our knowledge, these results are significant improvements over the best previously known O(s) competitive ratio bound.", "paper_title": "A Competitive Analysis for Balanced Transactional Memory Workloads", "paper_id": "WOS:000299482700014"}