{"auto_keywords": [{"score": 0.049496721057450455, "phrase": "arithmetic_circuits"}, {"score": 0.00458488025289647, "phrase": "encoding_multivariate_polynomials"}, {"score": 0.003769006950727621, "phrase": "turing_machine"}, {"score": 0.0031553611552558986, "phrase": "strong_nondeterministic_turing_reductions"}, {"score": 0.002913650880082273, "phrase": "polynomial_hierarchy"}, {"score": 0.002424012799998538, "phrase": "upper_bound"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["arithmetic circuits", " polynomials", " counting classes", " algorithms"], "paper_abstract": "By using arithmetic circuits, encoding multivariate polynomials may be drastically more efficient than writing down the list of monomials. Via the study of two examples, we show however that such an encoding can be hard to handle with a Turing machine even if the degree of the polynomial is low. Namely we show that deciding whether the coefficient of a given monomial is zero is hard for Pop under strong nondeterministic Turing reductions. As a result, this problem does not belong to the polynomial hierarchy unless this hierarchy collapses. For polynomials over fields of characteristic k > 0, this problem is Mod(k)P-complete. This gives a coNP(k)(Mod)P algorithm for deciding an upper bound on the degree of a polynomial given by a circuit in fields of characteristic k > 0. (c) 2007 Elsevier B.V. All rights reserved.", "paper_title": "The complexity of two problems on arithmetic circuits", "paper_id": "WOS:000251695800016"}