{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "spare_aborts"}, {"score": 0.004747429622531595, "phrase": "transactional_memory"}, {"score": 0.004270178957872099, "phrase": "transactional_memory_systems"}, {"score": 0.004121960535174029, "phrase": "existing_tms"}, {"score": 0.002640114583897493, "phrase": "inherent_tradeoff"}, {"score": 0.0025303964480791843, "phrase": "tm"}, {"score": 0.0022434880661725493, "phrase": "efficient_example_tm_algorithm"}], "paper_keywords": ["Transactional memory"], "paper_abstract": "This paper takes a step toward developing a theory for understanding aborts in transactional memory systems (TMs). Existing TMs may abort many transactions that could, in fact, commit without violating correctness. We call such unnecessary aborts spare aborts. We classify what kinds of spare aborts can be eliminated, and which cannot. We further study what kinds of spare aborts can be avoided efficiently. Specifically, we show that some spare aborts cannot be avoided, and that there is an inherent tradeoff between the overhead of a TM and the extent to which it reduces the number of spare aborts. We also present an efficient example TM algorithm that avoids certain kinds of spare aborts, and analyze its properties and performance.", "paper_title": "On Avoiding Spare Aborts in Transactional Memory", "paper_id": "WOS:000358741300010"}