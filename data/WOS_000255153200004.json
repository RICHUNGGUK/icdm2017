{"auto_keywords": [{"score": 0.046353538186752134, "phrase": "mda"}, {"score": 0.028614861351348622, "phrase": "mdd"}, {"score": 0.00481495049065317, "phrase": "full_benefits"}, {"score": 0.0047292449487169345, "phrase": "model-driven_development"}, {"score": 0.003951453722517865, "phrase": "core_functionality"}, {"score": 0.0035473867669654174, "phrase": "programming_language"}, {"score": 0.0034841647157189985, "phrase": "implementation_platform"}, {"score": 0.0031559919178954644, "phrase": "wide_variety"}, {"score": 0.003099723664407622, "phrase": "different_environments"}, {"score": 0.002833035775182696, "phrase": "uml_class_diagrams"}, {"score": 0.0027825094419000637, "phrase": "state_machines"}, {"score": 0.0026126405272417783, "phrase": "precise_and_platform-independent_specification_language"}, {"score": 0.0024093494406195386, "phrase": "uml-rsds"}, {"score": 0.002366361492754389, "phrase": "tool_support"}, {"score": 0.002262209824105154, "phrase": "executable_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["UML", " MDD", " OCL", " UML-RSDS", " verification"], "paper_abstract": "To obtain the full benefits of model-driven development (MDD) approaches such as MDA a suitable level of abstraction needs to be chosen which enables the core functionality and properties of a system to be expressed, independent of programming language or implementation platform, so that this specification can be reused for a wide variety of different environments. This paper describes how constraints, together with UML class diagrams and state machines, can be used as a precise and platform-independent specification language. We describe the use of constraints in UML-RSDS and tool support for the synthesis of executable systems from constraints. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Constraint-driven development", "paper_id": "WOS:000255153200004"}