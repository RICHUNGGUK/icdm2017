{"auto_keywords": [{"score": 0.04418786219761908, "phrase": "composite_service"}, {"score": 0.036411438909228155, "phrase": "best_composition_solution"}, {"score": 0.02862735460136937, "phrase": "atc"}, {"score": 0.00481495049065317, "phrase": "current_service-oriented_applications"}, {"score": 0.00453144352814823, "phrase": "real_world_applications"}, {"score": 0.004304574865291508, "phrase": "different_web_services"}, {"score": 0.004146716743362567, "phrase": "users'_service_requests"}, {"score": 0.003976007772514762, "phrase": "web_service_composition"}, {"score": 0.0038661089070527424, "phrase": "efficient_approach"}, {"score": 0.003812299519486331, "phrase": "basic_services"}, {"score": 0.0037242701420971062, "phrase": "individual_service"}, {"score": 0.0036553070575015344, "phrase": "users'_requests"}, {"score": 0.003570889780957037, "phrase": "general_strategies"}, {"score": 0.0033761303704612734, "phrase": "qos-aware_service_composition_approach"}, {"score": 0.003313592421224647, "phrase": "top_k_solutions"}, {"score": 0.0030604342671868836, "phrase": "presented_approach"}, {"score": 0.002787181295054319, "phrase": "succinct_binary_tree_data_structure"}, {"score": 0.0026474076254702525, "phrase": "top-k_composite_services_retrieval"}, {"score": 0.0025384432352162953, "phrase": "qos"}, {"score": 0.002422249273477746, "phrase": "heuristic-based_search_method"}, {"score": 0.0023662411481713704, "phrase": "top_k_composite_service"}, {"score": 0.002333258365963463, "phrase": "extensive_experiments"}, {"score": 0.0022475295254231714, "phrase": "performance_study"}, {"score": 0.0022161977759646693, "phrase": "experimental_results"}, {"score": 0.0021750990136123367, "phrase": "proposed_approach"}, {"score": 0.0021447748132703078, "phrase": "high_precision"}, {"score": 0.0021049977753042253, "phrase": "composite_service_search"}], "paper_keywords": ["web service", " service composition", " top k retrieval"], "paper_abstract": "For current service-oriented applications, individual web service usually cannot meet the requirements arising from real world applications, so it is necessary to combine the functionalities of different web services to obtain a composite service in response to users' service requests. In order to address the problem of web service composition, this paper proposes an efficient approach to composing basic services in case no any individual service can fully satisfy users' requests. Compared with the general strategies adopted in most previously proposed approaches where only the best composition solution is produced, the QoS-aware service composition approach is given and top k solutions in the framework are provided, rather than focusing on obtaining the best composition solution, since the presented approach allows more candidates that are likely to meet the requirements of the users. The approach is based on a succinct binary tree data structure, and a system, named ATC (Approach to Top-k Composite services retrieval) system is implemented. In ATC, QoS is taken into account for composite service, and a heuristic-based search method is proposed to retrieve top k composite service. Some extensive experiments are designed and two web service benchmarks are used for performance study. The experimental results show that the proposed approach can assure high precision and efficiency for composite service search.", "paper_title": "QoS-aware composite services retrieval", "paper_id": "WOS:000239255200012"}