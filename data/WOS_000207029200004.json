{"auto_keywords": [{"score": 0.03588915745850245, "phrase": "arc"}, {"score": 0.00481495049065317, "phrase": "open_distributed"}, {"score": 0.004656871909510407, "phrase": "main_characteristics"}, {"score": 0.004485200522202792, "phrase": "involved_entities"}, {"score": 0.004160531596936783, "phrase": "dynamic_entities"}, {"score": 0.004007083686875716, "phrase": "large_classes"}, {"score": 0.0039737570920809215, "phrase": "open_embedded_systems"}, {"score": 0.003924284136338428, "phrase": "high_availability_and_dependability_requirements"}, {"score": 0.003535165233011893, "phrase": "coordination_model"}, {"score": 0.003265365666305185, "phrase": "fault_localization"}, {"score": 0.0032381878248821383, "phrase": "open_distributed_embedded_software_systems"}, {"score": 0.0031579997262619758, "phrase": "actor_model"}, {"score": 0.003092690568543981, "phrase": "concurrent_embedded_entities"}, {"score": 0.0030414140732789186, "phrase": "system's_reconfigurability_and_dependability_requirements"}, {"score": 0.0027510752634224726, "phrase": "key_thrust"}, {"score": 0.0027167830773160203, "phrase": "arc_model"}, {"score": 0.0023665766694993535, "phrase": "coordination_responsibilities"}, {"score": 0.002337066031028783, "phrase": "member_actors"}, {"score": 0.0022601535748259785, "phrase": "analytical_and_empirical_perspectives"}, {"score": 0.0021049977753042253, "phrase": "actor_level_reconfiguration"}], "paper_keywords": ["Design", " Performance", " Reliability", " Security", " Coordination", " open distributed embedded systems", " actors", " roles", " coordinators"], "paper_abstract": "One of the main characteristics of open distributed embedded systems is that the involved entities are often very dynamic-different individual entities may join or leave the systems frequently. Therefore, systems built of these dynamic entities must be runtime reconfigurable. In addition, large classes of open embedded systems often have high availability and dependability requirements. However, the openness makes these requirements more difficult to achieve and the system more vulnerable to attacks. This article presents a coordination model, the Actor, Role and Coordinator (ARC) model, that aims to support reconfigurability and fault localization for open distributed embedded software systems. In particular, the actor model is used to model concurrent embedded entities, while the system's reconfigurability and dependability requirements are encapsulated within coordination objects: roles and coordinators, and are achieved through coordination among the actors. Roles, as a key thrust in the ARC model not only represent an abstraction for a set of behaviors shared by a group of actors so that reconfiguration within the roles becomes transparent to entities outside the roles, but also assume coordination responsibilities among the member actors. The article also argues from both analytical and empirical perspectives that with the support of the role, faults can be localized within actors, and actor level reconfiguration becomes transparent to the system.", "paper_title": "The Role of Roles in Supporting Reconfigurability and Fault Localizations for Open Distributed and Embedded Systems", "paper_id": "WOS:000207029200004"}