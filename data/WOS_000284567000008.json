{"auto_keywords": [{"score": 0.033083373157928184, "phrase": "bsp_fec"}, {"score": 0.02294489945682571, "phrase": "fec"}, {"score": 0.010612387000973441, "phrase": "byte_level"}, {"score": 0.010546805826185057, "phrase": "sub-packet"}, {"score": 0.010416844009851033, "phrase": "harq_mechanism"}, {"score": 0.010320413702793976, "phrase": "error_recovery_overhead"}, {"score": 0.009790431621619406, "phrase": "uniform_bit_errors"}, {"score": 0.009550440965269436, "phrase": "burst_bit_errors"}, {"score": 0.007589420313568733, "phrase": "sp-fec"}, {"score": 0.007266138191046475, "phrase": "bsp-fec"}, {"score": 0.004609301940749165, "phrase": "wireless_networks"}, {"score": 0.004580646169804186, "phrase": "byte_level_forward_error_correction"}, {"score": 0.004317109072311102, "phrase": "conversely_sub_packet"}, {"score": 0.004303664701305258, "phrase": "level_forward_error_correction"}, {"score": 0.004132635240234246, "phrase": "packet_level_forward_error_correction"}, {"score": 0.003968375473736599, "phrase": "large_error_recovery_overhead"}, {"score": 0.003834476721674575, "phrase": "dynamic_combination"}, {"score": 0.0037633479183921677, "phrase": "forward_error_correction"}, {"score": 0.0036477167658183632, "phrase": "harq"}, {"score": 0.0032599633778910516, "phrase": "sp_fec_checksum"}, {"score": 0.0032094634756436595, "phrase": "automatic_repeat_request"}, {"score": 0.003149891887446744, "phrase": "network_condition"}, {"score": 0.0030817834479425535, "phrase": "overhead_cost_model"}, {"score": 0.0030340353187232947, "phrase": "sp_fec_parameter"}, {"score": 0.0030057412068719646, "phrase": "bfec_bit_rate"}, {"score": 0.0029777101656842803, "phrase": "network_conditions"}, {"score": 0.002931569771634119, "phrase": "time_constraint_model"}, {"score": 0.002895182034149899, "phrase": "arq"}, {"score": 0.0028237205895435733, "phrase": "fec_redundancy"}, {"score": 0.0027540309904740957, "phrase": "dfr"}, {"score": 0.002711344582144154, "phrase": "noise_ratio"}, {"score": 0.0026609940110902666, "phrase": "delivered_video"}, {"score": 0.0026115760183617947, "phrase": "multimedia_communication_performance"}, {"score": 0.002579140290642792, "phrase": "network_congestion"}, {"score": 0.002499798127196099, "phrase": "effective_packet_loss_rate"}, {"score": 0.0024842242921857705, "phrase": "packet_recovery_overhead"}, {"score": 0.0024533663799762707, "phrase": "low_packet_recovery"}, {"score": 0.0023630680726174627, "phrase": "limited_bandwidth"}, {"score": 0.0022975271236026014, "phrase": "application_layer"}, {"score": 0.0022760856906838814, "phrase": "end-to-end_protection_method"}, {"score": 0.002158301441463052, "phrase": "better_recovery_efficiency"}, {"score": 0.0021381565332182773, "phrase": "minimum_error_recovery_overhead"}, {"score": 0.0021050011192089513, "phrase": "elsevier"}], "paper_keywords": ["Hybrid", " Forward Error Correction", " Automatic Repeat reQuest", " Sub Packet level", " Byte level"], "paper_abstract": "Byte level Forward Error Correction (B FEC) is efficient for recovery from uniform bit errors but not suitable to handle recovery from burst bit errors Conversely Sub Packet level Forward Error Correction (SP-FEC) can alleviate the problem of large encoding/decoding delay jitter in Packet level Forward Error Correction (P FEC) to efficiently handle recovery from burst bit errors but has large error recovery overhead as P-FEC for recovery from uniform bit errors This paper proposes a dynamic combination of byte level and Sub-Packet level Forward Error Correction (BSP-FEC) in the Hybrid Automatic Repeat reQuest (HARQ) mechanism to reduce the error recovery overhead BSP FEC not only can solve the problems appearing in B-FEC and SP-FEC but also can get the advantages of B-FEC and SP-FEC in the HARQ mechanism BSP-FEC replaces the SP FEC checksum with B-FEC and uses Automatic Repeat reQuest (ARQ) when the network condition deteriorates BSP FEC not only utilizes an overhead cost model to dynamically decide the SP FEC parameter and the BFEC bit rate according to network conditions but also utilizes a time constraint model to decide the ARQ retry limit BSP FEC dynamically adjusts the FEC redundancy to save bandwidth and improves the Decodable Frame Rate (DFR) and the Peak Signal to Noise Ratio (PSNR) of the delivered video streaming Accordingly BSP FEC can improve multimedia communication performance to both avoid network congestion and shorten end-to end delay by decreasing effective packet loss rate and packet recovery overhead Because of the low packet recovery overhead furthermore BSP-FEC allows applications to transmit more application data in networks with limited bandwidth Considering the compatibility BSP FEC is implemented in the application layer as the end-to-end protection method to protect packets from errors in wired/wireless networks Numerical and simulation experimental results show that BSP FEC obtains better recovery efficiency with the minimum error recovery overhead (C) 2010 Elsevier B V All rights reserved", "paper_title": "Dynamical combination of byte level and Sub-Packet level FEC in HARQ mechanism to reduce error recovery overhead on video streaming over wireless networks", "paper_id": "WOS:000284567000008"}