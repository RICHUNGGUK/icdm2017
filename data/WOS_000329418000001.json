{"auto_keywords": [{"score": 0.043912828461661745, "phrase": "software_process_modeling_languages"}, {"score": 0.017834182413376587, "phrase": "future_research"}, {"score": 0.00481495049065317, "phrase": "software_process"}, {"score": 0.00461802698572959, "phrase": "software_development"}, {"score": 0.004363536354756615, "phrase": "well-defined_processes"}, {"score": 0.004286109357236311, "phrase": "software_product_development"}, {"score": 0.004160092647083038, "phrase": "important_support"}, {"score": 0.004098474819777767, "phrase": "software_processes"}, {"score": 0.0040740829470571425, "phrase": "software-intensive_organizations"}, {"score": 0.0037473971885087433, "phrase": "current_state"}, {"score": 0.0036263171149449997, "phrase": "systematic_literature_review"}, {"score": 0.0035301568867729576, "phrase": "manual_search"}, {"score": 0.0032958023701245022, "phrase": "concrete_purpose"}, {"score": 0.003246944366436126, "phrase": "different_base_technologies"}, {"score": 0.0030042843107651847, "phrase": "base_technology"}, {"score": 0.0028811996609231626, "phrase": "later_languages"}, {"score": 0.0026578445199569893, "phrase": "different_software_process"}, {"score": 0.0025642012084841886, "phrase": "relevant_fact"}, {"score": 0.0024961348944169616, "phrase": "current_trend"}, {"score": 0.0024081753091661396, "phrase": "particular_motivation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software process modeling", " Software process language", " Systematic literature review"], "paper_abstract": "Context: Organizations working in software development are aware that processes are very important assets as well as they are very conscious of the need to deploy well-defined processes with the goal of improving software product development and, particularly, quality. Software process modeling languages are an important support for describing and managing software processes in software-intensive organizations. Objective: This paper seeks to identify what software process modeling languages have been defined in last decade, the relationships and dependencies among them and, starting from the current state, to define directions for future research. Method: A systematic literature review was developed. 1929 papers were retrieved by a manual search in 9 databases and 46 primary studies were finally included. Results: Since 2000 more than 40 languages have been first reported, each of which with a concrete purpose. We show that different base technologies have been used to define software process modeling languages. We provide a scheme where each language is registered together with the year it was created, the base technology used to define it and whether it is considered a starting point for later languages. This scheme is used to illustrate the trend in software process modeling languages. Finally, we present directions for future research. Conclusion: This review presents the different software process modeling languages that have been developed in the last ten years, showing the relevant fact that model-based SPMLs (Software Process Modeling Languages) are being considered as a current trend. Each one of these languages has been designed with a particular motivation, to solve problems which had been detected. However, there are still several problems to face, which have become evident in this review. This let us provide researchers with some guidelines for future research on this topic. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Software process modeling languages: A systematic literature review", "paper_id": "WOS:000329418000001"}