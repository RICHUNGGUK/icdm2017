{"auto_keywords": [{"score": 0.04896471011804604, "phrase": "constraint_problems"}, {"score": 0.03788952838179798, "phrase": "cp"}, {"score": 0.00481495049065317, "phrase": "effective_solving_technology"}, {"score": 0.004211069233133584, "phrase": "sat_technology"}, {"score": 0.0035216195857272403, "phrase": "different_sat"}, {"score": 0.003293142761521425, "phrase": "declarative_modelling_language_npspec"}, {"score": 0.0028795712616923462, "phrase": "npspec_specifications"}, {"score": 0.002815864555488112, "phrase": "sat_instances"}, {"score": 0.0025461386232786356, "phrase": "reformulation_techniques"}, {"score": 0.002302287519246882, "phrase": "sat"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "In this paper we investigate the use of SAT technology for solving constraint problems. In particular, we solve many instances of several common benchmark problems for CP with different SAT solvers, by exploiting the declarative modelling language NPSPEC, and SPEc2SAT, an application that allows us to compile NPSPEC specifications into SAT instances. Furthermore, we start investigating whether some reformulation techniques already used in CP are effective when using SAT as solving engine. We present encouraging experimental results in this direction, showing that this approach can be appealing.", "paper_title": "SAT as an effective solving technology for constraint problems", "paper_id": "WOS:000241647800061"}