{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "transaction-consistent_global_checkpoints"}, {"score": 0.046888273895838106, "phrase": "distributed_systems"}, {"score": 0.04166660066361688, "phrase": "necessary_and_sufficient_conditions"}, {"score": 0.036653305954379496, "phrase": "distributed_database_systems"}, {"score": 0.02998999927405984, "phrase": "transaction-consistent_global_checkpoint"}, {"score": 0.004744437370338926, "phrase": "distributed_database_system"}, {"score": 0.004652016085325825, "phrase": "rollback_recovery"}, {"score": 0.004606479650820579, "phrase": "well-known_techniques"}, {"score": 0.004257806363128601, "phrase": "efficient_checkpointing"}, {"score": 0.004216112320418982, "phrase": "recovery_techniques"}, {"score": 0.00376488621224566, "phrase": "consistent_global_checkpoint"}, {"score": 0.0036733470451885465, "phrase": "distributed_computations"}, {"score": 0.0035141291835319682, "phrase": "analogous_question"}, {"score": 0.003200230621987751, "phrase": "audit_purposes"}, {"score": 0.0031377955308198634, "phrase": "data_item"}, {"score": 0.003091767402370757, "phrase": "distributed_database"}, {"score": 0.0030017207229983385, "phrase": "separate_transaction"}, {"score": 0.0027605398374811667, "phrase": "individual_data_items"}, {"score": 0.002706659627293686, "phrase": "independently_results"}, {"score": 0.002680114113899346, "phrase": "non-intrusive_checkpointing"}, {"score": 0.002464709648714996, "phrase": "data_items"}, {"score": 0.0022113879114507577, "phrase": "non-intrusive_checkpointing_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Checkpointing", " Recovery", " Distributed databases"], "paper_abstract": "Checkpointing and rollback recovery are well-known techniques for handling failures in distributed systems. The issues related to the design and implementation of efficient checkpointing and recovery techniques for distributed systems have been thoroughly understood. For example, the necessary and sufficient conditions for a set of checkpoints to be part of a consistent global checkpoint has been established for distributed computations. In this paper, we address the analogous question for distributed database systems. In distributed database systems, transaction-consistent global checkpoints are useful not only for recovery from failure but also for audit purposes. If each data item of a distributed database is checkpointed independently by a separate transaction, none of the checkpoints taken may be part of any transaction-consistent global checkpoint. However, allowing individual data items to be checkpointed independently results in non-intrusive checkpointing. In this paper, we establish the necessary and sufficient conditions for the checkpoints of a set of data items to be part of a transaction-consistent global checkpoint of the distributed database. Such conditions can also help in the design and implementation of non-intrusive checkpointing algorithms for distributed database systems. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Necessary and sufficient conditions for transaction-consistent global checkpoints in a distributed database system", "paper_id": "WOS:000269429100013"}