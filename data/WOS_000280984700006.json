{"auto_keywords": [{"score": 0.02884330215148211, "phrase": "multiobjective_problem"}, {"score": 0.00481495049065317, "phrase": "multicast_overlays"}, {"score": 0.0047784273577245505, "phrase": "collaborative_applications"}, {"score": 0.004742179945772899, "phrase": "current_real-time_collaborative_application_implementations"}, {"score": 0.00459990650330792, "phrase": "communication_and_synchronization_activities"}, {"score": 0.004478907336898875, "phrase": "end_nodes"}, {"score": 0.00434449804021954, "phrase": "central_server"}, {"score": 0.003934795713147731, "phrase": "end_users"}, {"score": 0.0038166522763373434, "phrase": "communication_characteristics"}, {"score": 0.00378767277402891, "phrase": "real-time_collaboration"}, {"score": 0.00373036974937097, "phrase": "existing_multicast_mechanisms"}, {"score": 0.003673930454794753, "phrase": "collaborative_editing_sessions"}, {"score": 0.003327253821888569, "phrase": "communication_links"}, {"score": 0.0031422859551159506, "phrase": "multicast_tree"}, {"score": 0.002867425368894356, "phrase": "optimal_communication_topologies"}, {"score": 0.002824005136794786, "phrase": "approximate_algorithms"}, {"score": 0.002616544154458438, "phrase": "good_trade-off"}, {"score": 0.0025867643733794724, "phrase": "sometimes_conflicting_measures"}, {"score": 0.0025282151875392817, "phrase": "numerous_graphs"}, {"score": 0.0024150528983695446, "phrase": "optimal_solutions"}, {"score": 0.002229043128610864, "phrase": "communication_library"}, {"score": 0.0021952683716334478, "phrase": "proposed_algorithms"}, {"score": 0.0021537671245615286, "phrase": "dissemination_tree"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Communication topology", " Multicast", " Collaborative applications", " Multiobjective optimization"], "paper_abstract": "Current real-time collaborative application implementations use dedicated infrastructure to carry out all communication and synchronization activities. Specifically, they require all end nodes to communicate directly with and through the central server. In this paper, we investigate scenarios in which the most resource intensive functionality of continuous communication among collaborators to disseminate changes is decentralized, utilizing the end users themselves as relays. We observe that communication characteristics of real-time collaboration makes use of existing multicast mechanisms unsuitable. As collaborative editing sessions are typically long and repeated, it is possible to gather and leverage node behavior (their instabilities and frequency of sending updates) and communication links (latencies and average costs). Several criteria to determine the quality of a multicast tree can be identified: cost, latency and instability. In this paper, we analyze the complexity of the problem of finding optimal communication topologies, and propose approximate algorithms to optimize the same. We also consider the multiobjective problem in which we search for a topology that provides good trade-off between these sometimes conflicting measures. Validation of our proposed algorithms on numerous graphs shows that it is important to consider the multiobjective problem, as optimal solutions for one performance measure can be far from optimal for the other metrics. Finally, we briefly present an implementation of a communication library that uses the proposed algorithms to periodically adjust the dissemination tree. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Multi-objective optimization of multicast overlays for collaborative applications", "paper_id": "WOS:000280984700006"}