{"auto_keywords": [{"score": 0.04028465982960715, "phrase": "pcm"}, {"score": 0.03166800746598431, "phrase": "mlc_pcm"}, {"score": 0.00481495049065317, "phrase": "high_performance"}, {"score": 0.004789021572564387, "phrase": "low_power_volatile_pcm._micro-controller_units"}, {"score": 0.004611369021812453, "phrase": "ubiquitous_computing_devices"}, {"score": 0.004512814529823301, "phrase": "tight_cost"}, {"score": 0.004229556887896042, "phrase": "flash_storage"}, {"score": 0.004139335252016411, "phrase": "flash"}, {"score": 0.003964007795174772, "phrase": "short_system_lifetime"}, {"score": 0.003879234831701853, "phrase": "phase_change_memory"}, {"score": 0.0037554497046697432, "phrase": "promising_approach"}, {"score": 0.0036159990127332315, "phrase": "long_write_endurance"}, {"score": 0.003210446135114967, "phrase": "large_write_energy"}, {"score": 0.003057910095857785, "phrase": "traditional_flash"}, {"score": 0.002656650588033728, "phrase": "volatile_state"}, {"score": 0.0025440911575156755, "phrase": "non-volatile_state"}, {"score": 0.002295463032589125, "phrase": "best_write_mode"}, {"score": 0.002258485755625332, "phrase": "write_operation"}, {"score": 0.0022101055924375725, "phrase": "overall_performance"}, {"score": 0.0021863046959469863, "phrase": "energy_efficiency"}, {"score": 0.0021279170076271446, "phrase": "cddw"}, {"score": 0.0021049977753042253, "phrase": "dynamic_energy"}], "paper_keywords": ["phase change memory", " multi-level cell", " compiler", " worst case execution time"], "paper_abstract": "Micro-Controller Units (MCUs) are widely adopted ubiquitous computing devices. Due to tight cost and energy constraints, MCUs often integrate very limited internal RAM memory on top of Flash storage, which exposes Flash to heavy write traffic and results in short system lifetime. Architecting emerging Phase Change Memory (PCM) is a promising approach for MCUs due to its fast read speed and long write endurance. However, PCM, especially multi-level cell (MLC) PCM, has long write latency and requires large write energy, which diminishes the benefits of its replacement of traditional Flash. By studying MLC PCM write operations, we observe that writing MLC PCM can take advantages of two write modes - fast write leaves cells in volatile state, and slow write leaves cells in non-volatile state. In this paper, we propose a compiler directed dual-write (CDDW) scheme that selects the best write mode for each write operation to maximize the overall performance and energy efficiency. Our experimental results show that CDDW reduces dynamic energy by 32.4%(33.8%) and improves performance by 6.3%(35.9%) compared with an all fast(slow) write approach.", "paper_title": "Compiler Directed Write-Mode Selection for High Performance Low Power Volatile PCM", "paper_id": "WOS:000321865100012"}