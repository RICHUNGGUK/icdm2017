{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "process_engine"}, {"score": 0.004671932143798307, "phrase": "key_factors"}, {"score": 0.004533142516832776, "phrase": "successful_deployment"}, {"score": 0.004345706062641742, "phrase": "service-oriented_architecture"}, {"score": 0.004267757384195032, "phrase": "novel_service_process_engine"}, {"score": 0.0038054151244558123, "phrase": "jini_platform"}, {"score": 0.003692271726952282, "phrase": "jini_services"}, {"score": 0.003626000977962191, "phrase": "key_functionalities"}, {"score": 0.003496994062890991, "phrase": "global_performance"}, {"score": 0.0034342161742428666, "phrase": "load_balancing"}, {"score": 0.003352256019007896, "phrase": "system_structure"}, {"score": 0.0032722454818973853, "phrase": "heuristic_algorithm"}, {"score": 0.003155784719225786, "phrase": "client's_request"}, {"score": 0.0030991131563500446, "phrase": "workload_tag"}, {"score": 0.0030434561939032597, "phrase": "service_process_model"}, {"score": 0.0029351141718104725, "phrase": "workload_tags"}, {"score": 0.002899861600151726, "phrase": "client_requests"}, {"score": 0.002813566267090177, "phrase": "available_services"}, {"score": 0.0024932498388507084, "phrase": "fuzzy_control_algorithms"}, {"score": 0.0022497569011987587, "phrase": "performance_experiments"}, {"score": 0.0021049977753042253, "phrase": "proposed_approach"}], "paper_keywords": ["service process", " service process engine", " autonomic computing", " workload tag.", " fuzzy control"], "paper_abstract": "The performance of a process engine is one of the key factors that contribute to the successful deployment of systems, based on a service-oriented architecture. A novel service process engine that can be self-configured dynamically is introduced in the paper. It is based on the Jini platform, and leverages of Jini services to provide key functionalities. It automatically maintains the global performance by performing load balancing and configuring the system structure dynamically. A heuristic algorithm is applied to indicate every client's request with a workload tag after a service process model is designed. Based on workload tags of client requests and the status of available services in the engine, a controller allocates the requests to appropriate services and dynamically reconfigures the engine based on fuzzy control algorithms. Algorithms and the architecture for the engine are discussed in detail; in addition, performance experiments are performed to show the effectiveness and feasibility of the proposed approach.", "paper_title": "A dynamically self-configurable service process engine", "paper_id": "WOS:000281394200004"}