{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "velocity_updating_rule"}, {"score": 0.04652752924301262, "phrase": "random_diagonal_matrices"}, {"score": 0.042097100042760245, "phrase": "personal_and_social_influence_vectors"}, {"score": 0.027225990300735404, "phrase": "normal_distribution"}, {"score": 0.00477924690801092, "phrase": "particle_swarm"}, {"score": 0.004720325508575183, "phrase": "particle_swarm_optimization_algorithm"}, {"score": 0.0045591640444711465, "phrase": "social_influence_vectors"}, {"score": 0.004525348532095125, "phrase": "personal_and_social_influence"}, {"score": 0.003737934295442975, "phrase": "quality_solutions"}, {"score": 0.0034097050491050385, "phrase": "particle_movement"}, {"score": 0.003367611042980526, "phrase": "premature_convergence"}, {"score": 0.0032686865485199806, "phrase": "randomly_generated_rotation_matrices"}, {"score": 0.0031726587374218277, "phrase": "particle_swarm_optimizer"}, {"score": 0.003071799739677974, "phrase": "random_components"}, {"score": 0.002851081645311127, "phrase": "euclidean_rotation_matrices"}, {"score": 0.0026005239482219324, "phrase": "euclidean_matrices"}, {"score": 0.0024743598785371772, "phrase": "different_algorithms"}, {"score": 0.0024620842899061614, "phrase": "different_numbers"}, {"score": 0.002419596184576419, "phrase": "adaptive_approach"}, {"score": 0.0021850254717637172, "phrase": "proposed_method"}, {"score": 0.002136651746284283, "phrase": "particle_swarm_optimization_algorithms"}, {"score": 0.0021154967589989537, "phrase": "convergence_speed"}, {"score": 0.0021049977753042253, "phrase": "solution_quality"}], "paper_keywords": ["Continuous optimization", " Swarm intelligence", " Particle swarm optimization", " Rotation matrices"], "paper_abstract": "The particle swarm optimization algorithm includes three vectors associated with each particle: inertia, personal, and social influence vectors. The personal and social influence vectors are typically multiplied by random diagonal matrices (often referred to as random vectors) resulting in changes in their lengths and directions. This multiplication, in turn, influences the variation of the particles in the swarm. In this paper we examine several issues associated with the multiplication of personal and social influence vectors by such random matrices, these include: (1) Uncontrollable changes in the length and direction of these vectors resulting in delay in convergence or attraction to locations far from quality solutions in some situations (2) Weak direction alternation for the vectors that are aligned closely to coordinate axes resulting in preventing the swarm from further improvement in some situations, and (3) limitation in particle movement to one orthant resulting in premature convergence in some situations. To overcome these issues, we use randomly generated rotation matrices (rather than the random diagonal matrices) in the velocity updating rule of the particle swarm optimizer. This approach makes it possible to control the impact of the random components (i.e. the random matrices) on the direction and length of personal and social influence vectors separately. As a result, all the above mentioned issues are effectively addressed. We propose to use the Euclidean rotation matrices for rotation because it preserves the length of the vectors during rotation, which makes it easier to control the effects of the randomness on the direction and length of vectors. The direction of the Euclidean matrices is generated randomly by a normal distribution. The mean and variance of the distribution are investigated in detail for different algorithms and different numbers of dimensions. Also, an adaptive approach for the variance of the normal distribution is proposed which is independent from the algorithm and the number of dimensions. The method is adjoined to several particle swarm optimization variants. It is tested on 18 standard optimization benchmark functions in 10, 30 and 60 dimensional spaces. Experimental results show that the proposed method can significantly improve the performance of several types of particle swarm optimization algorithms in terms of convergence speed and solution quality.", "paper_title": "An analysis of the velocity updating rule of the particle swarm optimization algorithm", "paper_id": "WOS:000339822400004"}