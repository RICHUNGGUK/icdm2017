{"auto_keywords": [{"score": 0.04957786067961377, "phrase": "mapreduce"}, {"score": 0.015719439430799245, "phrase": "threshold-based_filtering"}, {"score": 0.009178952022177746, "phrase": "tmfr-join"}, {"score": 0.004544127927346964, "phrase": "heterogeneous_data"}, {"score": 0.004311109608629196, "phrase": "different_sources"}, {"score": 0.004111584914709491, "phrase": "large-scale_data_processing"}, {"score": 0.003962779958955344, "phrase": "multiple_datasets"}, {"score": 0.0037793152987497286, "phrase": "large_number"}, {"score": 0.0037397086147485897, "phrase": "redundant_intermediate_results"}, {"score": 0.0035853745478488254, "phrase": "joined_records"}, {"score": 0.0033656930865509547, "phrase": "bloom_filters"}, {"score": 0.0032437952431945724, "phrase": "large_portions"}, {"score": 0.0030935140058168885, "phrase": "distinct_keys"}, {"score": 0.0029038817737006405, "phrase": "join_processing_method"}, {"score": 0.0026830601040919166, "phrase": "threshold-based_map-filter-reduce_join"}, {"score": 0.0024659480471085405, "phrase": "false-positive_rates"}, {"score": 0.0023891283748647416, "phrase": "general_framework"}, {"score": 0.0022783523466965187, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "existing_join_processing_techniques"}], "paper_keywords": ["Join processing", " Threshold-based filtering", " MapReduce", " Hadoop"], "paper_abstract": "Data analytics, in particular those involving heterogeneous data, often require join operations on datasets collected from different sources. MapReduce, one of the most popular frameworks for large-scale data processing, is not suited for joining multiple datasets. This is because MapReduce often produces a large number of redundant intermediate results, irrespective of the size of the joined records. Although several existing approaches attempt to reduce the number of such redundant results using Bloom filters, they may be inefficient if large portions of records are joined or the number of distinct keys is large. To alleviate this problem, we propose a join processing method with threshold-based filtering in MapReduce, called TMFR-Join, which is an abbreviation for \"Threshold-based Map-Filter-Reduce Join\". TMFR-Join applies filters according to their performance, which is estimated in terms of false-positive rates. It also provides a general framework for exploiting various filtering techniques that support certain desired operations. The experimental results indicate that the performance of TMFR-Join is close to that of the better of existing join processing techniques, both with and without filters.", "paper_title": "Join processing with threshold-based filtering in MapReduce", "paper_id": "WOS:000339826700015"}