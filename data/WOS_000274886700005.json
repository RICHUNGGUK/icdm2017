{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sum_selection_problem"}, {"score": 0.04961049691122095, "phrase": "k_maximum_sums_problem"}, {"score": 0.03511498344372032, "phrase": "deterministic_algorithm"}, {"score": 0.003107034833468438, "phrase": "previously_best_known_result"}, {"score": 0.003016544840824688, "phrase": "randomized_algorithm"}, {"score": 0.0026020254041372723, "phrase": "k_largest_sum_segments"}, {"score": 0.002464709648714996, "phrase": "previously_best_known_randomized_and_deterministic_algorithms"}, {"score": 0.002255431275670053, "phrase": "worst_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["k maximum sums problem", " Sum selection problem", " Maximum sum problem", " Maximum sum subarray problem"], "paper_abstract": "Given a sequence of It real numbers A = a(1), a(2), ... , a(n) and a positive integer k, the SUM SELECTION PROBLEM is to find the segment A(i*,j*) = a(i)*, a(i*+1), ... ,a(j*) such that the rank of the sum s(i*,j*) = Sigma(j*)(t=i*) a(t) is k over all n(n-1)/2 segments. We present a deterministic algorithm for this problem that runs in O(n log n) time. The previously best known result for this problem is a randomized algorithm that runs in expected O(n log n) time. Applying this algorithm we can obtain a deterministic algorithm for the K MAXIMUM SUMS PROBLEM, i.e., the problem of enumerating the k largest sum segments, that runs in O(n log n+k) time. The previously best known randomized and deterministic algorithms for the K MAXIMUM SUMS PROBLEM run respectively in expected O(n log n + k) time and in worst case O(n log(2) n + k) time. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Efficient algorithms for the sum selection problem and k maximum sums problem", "paper_id": "WOS:000274886700005"}