{"auto_keywords": [{"score": 0.02974860053496238, "phrase": "epea"}, {"score": 0.010017246717929515, "phrase": "large_number"}, {"score": 0.00920157404062153, "phrase": "open_list"}, {"score": 0.004653339900995785, "phrase": "large_branching_factor"}, {"score": 0.004375928080972614, "phrase": "optimal_solution"}, {"score": 0.0042579795015449005, "phrase": "generating_surplus_nodes"}, {"score": 0.0040040425282442125, "phrase": "recently_introduced_variant"}, {"score": 0.0039362209515303795, "phrase": "partial_expansion_a"}, {"score": 0.0038170129089059013, "phrase": "memory_aspect"}, {"score": 0.003564934079629989, "phrase": "open"}, {"score": 0.003306559295382181, "phrase": "best_discarded_child"}, {"score": 0.00325051332556486, "phrase": "surplus_nodes"}, {"score": 0.003195414285736136, "phrase": "open."}, {"score": 0.0031091858573262265, "phrase": "novel_variant"}, {"score": 0.003056475095474338, "phrase": "enhanced_partial_expansion_a"}, {"score": 0.0028937142757436683, "phrase": "time_aspect"}, {"score": 0.002854392852477005, "phrase": "priori_domain"}, {"score": 0.002825251837733693, "phrase": "heuristic-specific_knowledge"}, {"score": 0.002293051006249274, "phrase": "pattern_databases"}, {"score": 0.002254145085288829, "phrase": "experimental_studies"}, {"score": 0.002238767763626708, "phrase": "significant_improvements"}, {"score": 0.0021049977753042253, "phrase": "new_algorithm"}], "paper_keywords": [""], "paper_abstract": "When solving instances of problem domains that feature a large branching factor, A* may generate a large number of nodes whose cost is greater than the cost of the optimal solution. We designate such nodes as surplus. Generating surplus nodes and adding them to the OPEN list may dominate both time and memory of the search. A recently introduced variant of A* called Partial Expansion A* (PEA*) deals with the memory aspect of this problem. When expanding a node n, PEA* generates all of its children and puts into OPEN only the children with f = f (n). n is reinserted in the OPEN list with the f -cost of the best discarded child. This guarantees that surplus nodes are not inserted into OPEN. In this paper, we present a novel variant of A* called Enhanced Partial Expansion A* (EPEA*) that advances the idea of PEA* to address the time aspect. Given a priori domain-and heuristic-specific knowledge, EPEA* generates only the nodes with f = f (n). Although EPEA* is not always applicable or practical, we study several variants of EPEA*, which make it applicable to a large number of domains and heuristics. In particular, the ideas of EPEA* are applicable to IDA* and to the domains where pattern databases are traditionally used. Experimental studies show significant improvements in run-time and memory performance for several standard benchmark applications. We provide several theoretical studies to facilitate an understanding of the new algorithm.", "paper_title": "Enhanced Partial Expansion A*", "paper_id": "WOS:000339310500001"}