{"auto_keywords": [{"score": 0.04867447329166622, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "gasoline_puzzle"}, {"score": 0.004502943680955863, "phrase": "additional_complicating_constraint"}, {"score": 0.004242546312843817, "phrase": "feasible_solutions"}, {"score": 0.0034695189961509625, "phrase": "first_polynomial-time_approximation_schemes"}, {"score": 0.0032444113660668743, "phrase": "related_problems"}, {"score": 0.00307944332532505, "phrase": "lagrangian_relaxation"}, {"score": 0.002836942411239067, "phrase": "near-optimal_solution"}, {"score": 0.00269263690712392, "phrase": "richer_combinatorial_structure"}, {"score": 0.0025556529150386168, "phrase": "standard_patching_techniques"}, {"score": 0.0023021895404322767, "phrase": "adjacency_relations"}, {"score": 0.002251227801482381, "phrase": "solution_polytope"}, {"score": 0.0021049977753042253, "phrase": "old_combinatorial_puzzle"}], "paper_keywords": ["Matching", " Matroid intersection", " Budgeted optimization", " Lagrangian relaxation"], "paper_abstract": "Many polynomial-time solvable combinatorial optimization problems become NP-hard if an additional complicating constraint is added to restrict the set of feasible solutions. In this paper, we consider two such problems, namely maximum-weight matching and maximum-weight matroid intersection with one additional budget constraint. We present the first polynomial-time approximation schemes for these problems. Similarly to other approaches for related problems, our schemes compute two solutions to the Lagrangian relaxation of the problem and patch them together to obtain a near-optimal solution. However, due to the richer combinatorial structure of the problems considered here, standard patching techniques do not apply. To circumvent this problem, we crucially exploit the adjacency relations on the solution polytope and, surprisingly, the solution to an old combinatorial puzzle.", "paper_title": "Budgeted matching and budgeted matroid intersection via the gasoline puzzle", "paper_id": "WOS:000290588600014"}