{"auto_keywords": [{"score": 0.04672583002462709, "phrase": "programming_languages"}, {"score": 0.01505781179124599, "phrase": "programming_language_research"}, {"score": 0.01394819087783496, "phrase": "new_data_models"}, {"score": 0.004700027722284931, "phrase": "hugely_productive_interaction"}, {"score": 0.004521803560561489, "phrase": "type_systems"}, {"score": 0.004413846562278824, "phrase": "central_role"}, {"score": 0.004308455856718928, "phrase": "relational_database_systems"}, {"score": 0.0040656296649390486, "phrase": "best_concrete_examples"}, {"score": 0.0039685202936462815, "phrase": "concurrency_theory"}, {"score": 0.003855034057431947, "phrase": "high-level_optimization"}, {"score": 0.0038179283509963695, "phrase": "functional_programming_languages"}, {"score": 0.0037267132967205136, "phrase": "driving_ambitions"}, {"score": 0.0035852640843794252, "phrase": "database_access"}, {"score": 0.0032077057805891627, "phrase": "programming_language"}, {"score": 0.002925899335792914, "phrase": "data_storage"}, {"score": 0.002883718207958817, "phrase": "data_exchange"}, {"score": 0.002828418443899226, "phrase": "depressing_regularity"}, {"score": 0.0027341763737751467, "phrase": "inevitable_query_language"}, {"score": 0.0026049517737353365, "phrase": "new_languages"}, {"score": 0.0024224481033945943, "phrase": "conventional_languages"}, {"score": 0.0023417010799384524, "phrase": "interesting_new_connections"}, {"score": 0.0021987994275190314, "phrase": "scientific_databases"}, {"score": 0.0021049977753042253, "phrase": "new_opportunities"}], "paper_keywords": [""], "paper_abstract": "The 1990s saw a hugely productive interaction between database and programming language research. Ideas about type systems from programming languages played a central role in generalizing and adapting relational database systems to new data models. At the same time databases provided some of the best concrete examples of the application of concurrency theory and of the benefits of high-level optimization in functional programming languages. One of the driving ambitions behind this research was the idea that database access should be properly embedded in programming languages: one should not have to be bilingual in order to use a database from a programming language; and that goal has to some extent been realized. In the past fifteen years, new data models, both for data storage and for data exchange have appeared with depressing regularity and with each such model, the inevitable query language. Does programming language research have anything to contribute to these new languages? Should we take the time to to worry about embedding these models in conventional languages? Over the same period, some interesting new connections between databases and programming languages have emerged, notably in the areas of scientific databases, annotation and provenance. Will this provide new opportunities for cross-fertilization?", "paper_title": "Databases and Programming: Two Subjects Divided by a Common Language?", "paper_id": "WOS:000354800500039"}