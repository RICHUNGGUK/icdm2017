{"auto_keywords": [{"score": 0.04119081773848916, "phrase": "closed_patterns"}, {"score": 0.028198276166246455, "phrase": "adjacency_matrix"}, {"score": 0.010435409021063343, "phrase": "maximal_bicliques"}, {"score": 0.007962071236422126, "phrase": "maximal_biclique_subgraphs"}, {"score": 0.005286519670447252, "phrase": "high_efficiency"}, {"score": 0.004693887748239161, "phrase": "mining_algorithms"}, {"score": 0.0045888223900501695, "phrase": "complete_bipartite"}, {"score": 0.004498812433096501, "phrase": "web_mining"}, {"score": 0.004324031677173549, "phrase": "computationally_challenging_problem"}, {"score": 0.004132546937996706, "phrase": "vertex_number"}, {"score": 0.003817548980308163, "phrase": "undirected_graph"}, {"score": 0.0035065523764817143, "phrase": "precisely_double_the_number"}, {"score": 0.0033989591226986447, "phrase": "maximal_biclique_subgraph"}, {"score": 0.0033416652198400986, "phrase": "unique_pair"}, {"score": 0.0031308163228919773, "phrase": "efficient_algorithms"}, {"score": 0.0031131208154718867, "phrase": "mining_closed_patterns"}, {"score": 0.0030347168513348835, "phrase": "data_mining_field"}, {"score": 0.0029920129598858545, "phrase": "direct_use"}, {"score": 0.002975099633631871, "phrase": "existing_algorithms"}, {"score": 0.0029499082104788806, "phrase": "duplicated_enumeration"}, {"score": 0.002859345731792013, "phrase": "time_delay_algorithm"}, {"score": 0.0028351316586279407, "phrase": "nonduplicated_enumeration"}, {"score": 0.0027480831196871093, "phrase": "large_size"}, {"score": 0.0025311573083044545, "phrase": "state-of-the-_art_algorithms"}], "paper_keywords": ["maximal biclique subgraphs", " closed patterns", " mining methods and algorithms", " bioinformatics (genome or protein) database"], "paper_abstract": "Maximal biclique (also known as complete bipartite) subgraphs can model many applications in Web mining, business, and bioinformatics. Enumerating maximal biclique subgraphs from a graph is a computationally challenging problem, as the size of the output can become exponentially large with respect to the vertex number when the graph grows. In this paper, we efficiently enumerate them through the use of closed patterns of the adjacency matrix of the graph. For an undirected graph G without self-loops, we prove that 1) the number of closed patterns in the adjacency matrix of G is even, 2) the number of the closed patterns is precisely double the number of maximal biclique subgraphs of G, and 3) for every maximal biclique subgraph, there always exists a unique pair of closed patterns that matches the two vertex sets of the subgraph. Therefore, the problem of enumerating maximal bicliques can be solved by using efficient algorithms for mining closed patterns, which are algorithms extensively studied in the data mining field. However, this direct use of existing algorithms causes a duplicated enumeration. To achieve high efficiency, we propose an O(mn) time delay algorithm for a nonduplicated enumeration, in particular, for enumerating those maximal bicliques with a large size, where m and n are the number of edges and vertices of the graph, respectively. We evaluate the high efficiency of our algorithm by comparing it to state-of-the- art algorithms on three categories of graphs: randomly generated graphs, benchmarks, and a real-life protein interaction network. In this paper, we also prove that if self-loops are allowed in a graph, then the number of closed patterns in the adjacency matrix is not necessarily even, but the maximal bicliques are exactly the same as those of the graph after removing all the self-loops.", "paper_title": "Maximal biclique subgraphs and closed pattern pairs of the adjacency matrix: A one-to-one correspondence and mining algorithms", "paper_id": "WOS:000250216200003"}