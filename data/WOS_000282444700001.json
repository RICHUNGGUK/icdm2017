{"auto_keywords": [{"score": 0.049081938632360274, "phrase": "petri"}, {"score": 0.00481495049065317, "phrase": "protocol-level_service_composition"}, {"score": 0.004568108391981922, "phrase": "protocol-level_mismatch"}, {"score": 0.004402854153653114, "phrase": "service_composition"}, {"score": 0.004111584914709491, "phrase": "protocol_mismatch"}, {"score": 0.00388016972840459, "phrase": "reach-ability_graph"}, {"score": 0.0037005154613244363, "phrase": "generation_process"}, {"score": 0.0035853745478488254, "phrase": "deadlock_state"}, {"score": 0.0034555479218891638, "phrase": "main_drawback"}, {"score": 0.003226744277130179, "phrase": "future_deadlock_state"}, {"score": 0.0029814443878969973, "phrase": "low_efficiency"}, {"score": 0.0027547408718334603, "phrase": "petri_net"}, {"score": 0.0025994945418484935, "phrase": "protocol-level_mismatch_problem"}, {"score": 0.0025318431634446426, "phrase": "empty_siphon_problem"}, {"score": 0.0024272350606639147, "phrase": "future_deadlock_states"}, {"score": 0.0023025177990160487, "phrase": "optimal_solution"}, {"score": 0.002266364679369248, "phrase": "fewest_interactions"}, {"score": 0.0021957487795963666, "phrase": "proposed_method"}, {"score": 0.0021385822825864425, "phrase": "higher_efficiency"}, {"score": 0.0021049977753042253, "phrase": "protocol-level_mismatch_issues"}], "paper_keywords": ["Deadlock", " Multiple Web Service Interaction", " Petri Nets", " Protocol-Level Mismatch", " Service Composition"], "paper_abstract": "Protocol-level mismatch is one of the most important problems in service composition. The state-of-the-art method to deal with protocol mismatch is to generate adaptors to check deadlock-freeness based on a reach-ability graph. When this property is violated, the generation process will repeat itself until no deadlock state is found; however, the main drawback of this method is that it does not take into account the future deadlock state and requires many interactions with a developer. In this regard, it suffers from low efficiency. In this paper, the authors model multiple web service interaction with a Petri net called Composition net (C-net). The protocol-level mismatch problem is transformed into the empty siphon problem of a C-net. The authors take future deadlock states into consideration through this model, while finding the optimal solution that involves fewest interactions with a developer. The proposed method is proved to achieve higher efficiency for resolving protocol-level mismatch issues than traditional ones.", "paper_title": "Protocol-Level Service Composition Mismatches: A Petri Net Siphon Based Solution", "paper_id": "WOS:000282444700001"}