{"auto_keywords": [{"score": 0.040484668400291746, "phrase": "t-approximate_shortest_path"}, {"score": 0.00481495049065317, "phrase": "approximate_shortest_paths"}, {"score": 0.004718897469501381, "phrase": "failed_vertex"}, {"score": 0.004502126088469323, "phrase": "undirected_unweighted_graphs"}, {"score": 0.004237925318473508, "phrase": "undirected_unweighted_graph"}, {"score": 0.0039891678464998555, "phrase": "vav"}, {"score": 0.0035823043879169153, "phrase": "shortest_path"}, {"score": 0.0033045378860812403, "phrase": "compact_data_structure"}, {"score": 0.002811770047652563, "phrase": "vertex_x"}, {"score": 0.0027187231747900814, "phrase": "data_structures"}, {"score": 0.002664375650349975, "phrase": "single_source"}, {"score": 0.0025935941070969575, "phrase": "all-pairs_versions"}, {"score": 0.0024909230668523825, "phrase": "query_time"}, {"score": 0.002344468886431959, "phrase": "constant_factor"}, {"score": 0.0021049977753042253, "phrase": "corresponding_data_structure"}], "paper_keywords": ["Shortest path", " Distance", " Approximate distance", " Oracle"], "paper_abstract": "Let G=(V,E) be an undirected unweighted graph. A path between any two vertices u,vaV is said to be t-approximate shortest path if its length is at most t times the length of the shortest path between u and v. We address the problem of building a compact data structure which can efficiently answer the following query for any u,v,xaV and t > 1: Report t-approximate shortest path between u and v when vertex x fails. We present data structures for the single source as well as all-pairs versions of this problem. The query time guaranteed by our data structures is optimal up to a constant factor. Moreover, the size of each of them nearly matches the size of the corresponding data structure with no failures.", "paper_title": "Approximate Shortest Paths Avoiding a Failed Vertex: Near Optimal Data Structures for Undirected Unweighted Graphs", "paper_id": "WOS:000315446700002"}