{"auto_keywords": [{"score": 0.04177569747328366, "phrase": "different_cores"}, {"score": 0.03679418729719719, "phrase": "united_cores"}, {"score": 0.00481495049065317, "phrase": "unitable_computing_architecture"}, {"score": 0.004775531918452571, "phrase": "chip_multiprocessors"}, {"score": 0.004659192888931046, "phrase": "unitable_multi-core_architecture"}, {"score": 0.004434910775034831, "phrase": "larger_superscalar_processor"}, {"score": 0.004186799638538032, "phrase": "virtual_shared_register_files"}, {"score": 0.0039040344230094164, "phrase": "uniform_set"}, {"score": 0.0038720442355114045, "phrase": "register_files"}, {"score": 0.0037776319581225046, "phrase": "instruction_analyzer"}, {"score": 0.0036703791815812328, "phrase": "dependence_information"}, {"score": 0.003625347557965931, "phrase": "newly_fetched_instructions"}, {"score": 0.0033664873319204027, "phrase": "vsrf."}, {"score": 0.00313894917464766, "phrase": "extended_instructions"}, {"score": 0.002938821840519756, "phrase": "available_instruction_level_parallelism"}, {"score": 0.0028670988845838296, "phrase": "reconfigurable_feature"}, {"score": 0.002740109776120878, "phrase": "high_single-thread_performance"}, {"score": 0.0025865737375898538, "phrase": "tlp"}, {"score": 0.002544296663333569, "phrase": "simulation_results"}, {"score": 0.0024017007954518065, "phrase": "eight-core-united_configurations"}, {"score": 0.002285839246740627, "phrase": "monolithic_two-"}, {"score": 0.002139986159978777, "phrase": "lower_area_costs"}, {"score": 0.0021224200236681498, "phrase": "better_support"}, {"score": 0.0021049977753042253, "phrase": "software_diversity"}], "paper_keywords": ["reconfigurable hardwares", " MIMD processors", " dynamic multi-core", " superscalar", " CMP", " chip multiprocessors"], "paper_abstract": "This paper proposes a unitable multi-core architecture, called hyperscalar, that can dynamically unite many scalar cores as a larger superscalar processor to accelerate a thread. To accomplish this, this paper proposes the virtual shared register files (VSRFs) that help the instructions of a thread in different cores can logically face a uniform set of register files. We also propose an instruction analyzer that can detect and tag the dependence information to the newly fetched instructions. With the tags, instructions in the united cores can issue requests to obtain their remote operands via the VSRF. Thus, the dependences arising among instructions in different cores can be resolved. Moreover, some extended instructions are defined for programmers to grow or shrink the number of united cores to match the available instruction level parallelism for different applications. The reconfigurable feature of hyperscalar covers a spectrum of workloads well, providing high single-thread performance when thread level parallelism (TLP) is low and high throughput when TLP is high. Simulation results show that the eight-core hyperscalar chip multiprocessor's two-, four-and eight-core-united configurations archive 93, 80 and 76% of the performance of the monolithic two-, four-and eight-issue out-of-order superscalar processors with lower area costs and better support for software diversity.", "paper_title": "A Unitable Computing Architecture for Chip Multiprocessors", "paper_id": "WOS:000298386300009"}