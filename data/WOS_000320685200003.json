{"auto_keywords": [{"score": 0.03885697133034368, "phrase": "object-oriented_metrics"}, {"score": 0.00481495049065317, "phrase": "fault_prediction_models"}, {"score": 0.004746065479362881, "phrase": "software_quality"}, {"score": 0.0046781613377273774, "phrase": "fault_location"}, {"score": 0.004480196733208298, "phrase": "software_metrics"}, {"score": 0.004352876088312741, "phrase": "software_fault_prediction"}, {"score": 0.004168618849008299, "phrase": "metrics'_selection"}, {"score": 0.004030695216899165, "phrase": "systematic_literature_review"}, {"score": 0.0038973170902076707, "phrase": "selected_papers"}, {"score": 0.0037683358267785435, "phrase": "context_properties"}, {"score": 0.0034892684482068347, "phrase": "traditional_source_code_metrics"}, {"score": 0.003277768240822245, "phrase": "kemerer"}, {"score": 0.0030642636185693054, "phrase": "selected_studies"}, {"score": 0.0030203487665054806, "phrase": "significant_differences"}, {"score": 0.0029343925814926787, "phrase": "fault_prediction_performance"}, {"score": 0.0029062860108533374, "phrase": "object-oriented_and_process_metrics"}, {"score": 0.002730023736069673, "phrase": "traditional_size"}, {"score": 0.00266510562382701, "phrase": "process_metrics"}, {"score": 0.0025767987652419054, "phrase": "post-release_faults"}, {"score": 0.002527654365712841, "phrase": "static_code_metrics"}, {"score": 0.00242047093248845, "phrase": "large_industrial_software_systems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software metric", " Software fault prediction", " Systematic literature review"], "paper_abstract": "Context: Software metrics may be used in fault prediction models to improve software quality by predicting fault location. Objective: This paper aims to identify software metrics and to assess their applicability in software fault prediction. We investigated the influence of context on metrics' selection and performance. Method: This systematic literature review includes 106 papers published between 1991 and 2011. The selected papers are classified according to metrics and context properties. Results: Object-oriented metrics (49%) were used nearly twice as often compared to traditional source code metrics (27%) or process metrics (24%). Chidamber and Kemerer's (CK) object-oriented metrics were most frequently used. According to the selected studies there are significant differences between the metrics used in fault prediction performance. Object-oriented and process metrics have been reported to be more successful in finding faults compared to traditional size and complexity metrics. Process metrics seem to be better at predicting post-release faults compared to any static code metrics. Conclusion: More studies should be performed on large industrial software systems to find metrics more relevant for the industry and to answer the question as to which metrics should be used in a given context. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Software fault prediction metrics: A systematic literature review", "paper_id": "WOS:000320685200003"}