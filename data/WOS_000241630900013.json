{"auto_keywords": [{"score": 0.04900031007413473, "phrase": "mobile_code"}, {"score": 0.012542674126456873, "phrase": "runtime_environment"}, {"score": 0.012331725458587305, "phrase": "remote_host"}, {"score": 0.00481495049065317, "phrase": "remote_policy_enforcement"}, {"score": 0.004760394308239882, "phrase": "runtime_protection"}, {"score": 0.004653120760786245, "phrase": "trusted_computing"}, {"score": 0.004128192012388041, "phrase": "\"mobile_policy"}, {"score": 0.003989351600022163, "phrase": "mobile_code_originator"}, {"score": 0.0033427754823819157, "phrase": "security_properties"}, {"score": 0.003193606324727067, "phrase": "policy_specification"}, {"score": 0.0031573626285069157, "phrase": "implementation_mechanism"}, {"score": 0.0031215289677725693, "phrase": "existing_mobile_computing_platform"}, {"score": 0.003068537223324389, "phrase": "java_runtime_environment"}, {"score": 0.0030337085953063125, "phrase": "jre"}, {"score": 0.002881793492919646, "phrase": "current_security_technologies"}, {"score": 0.0028328599839713866, "phrase": "main_difference"}, {"score": 0.0027689017918347755, "phrase": "existing_runtime_security_models"}, {"score": 0.002527150892127982, "phrase": "mobile_applications"}, {"score": 0.0024700776739384977, "phrase": "local_system_resources"}, {"score": 0.0024005409468262203, "phrase": "remote_runtime_environment"}, {"score": 0.0023196699954340437, "phrase": "application_originator"}, {"score": 0.0022672718785099666, "phrase": "remote_user"}, {"score": 0.0021908807203548345, "phrase": "emerging_tc_technologies"}, {"score": 0.002104999499520222, "phrase": "tcg"}], "paper_keywords": [""], "paper_abstract": "We present an approach to protect mobile code and agents at runtime using Trusted Computing (TC) technologies. For this purpose, a \"mobile policy\" is defined by the mobile code originator, and is enforced by the runtime environment in a remote host to control which users can run the mobile code and what kind of results a user can observe, depending on the security properties of the user. The separation of policy specification and implementation mechanism in existing mobile computing platform such as Java Runtime Environment (JRE) enables the implementation of our approach by leveraging current security technologies. The main difference between our approach and existing runtime security models is that the policies enforced in our model are intended to protect the resources of the mobile applications instead of the local system resources. This requires the remote runtime environment to be trusted by the application originator to authenticate the remote user and enforce the policy. Emerging TC technologies such as specified by the Trusted Computing Group (TCG) provide assurance of the runtime environment of a remote host.", "paper_title": "Towards remote policy enforcement for runtime protection of mobile code using trusted computing", "paper_id": "WOS:000241630900013"}