{"auto_keywords": [{"score": 0.035533772426587416, "phrase": "sis"}, {"score": 0.00481495049065317, "phrase": "sequential_gaussian"}, {"score": 0.004550469496119256, "phrase": "new_high-performance_parallel_computing_architectures"}, {"score": 0.004346266306175988, "phrase": "large_amount"}, {"score": 0.004240116703465252, "phrase": "sequential_simulation_algorithms"}, {"score": 0.0042102651938187114, "phrase": "good_candidates"}, {"score": 0.004021267064832957, "phrase": "fluid_flow_simulators"}, {"score": 0.003978866233891427, "phrase": "sequential_simulation_software"}, {"score": 0.0037073529462522403, "phrase": "inverse_modelling_approaches"}, {"score": 0.0035659724303237937, "phrase": "parallel_version"}, {"score": 0.0033250130178851247, "phrase": "gaussian"}, {"score": 0.003287516622710122, "phrase": "sgs"}, {"score": 0.00316206336164649, "phrase": "gslib"}, {"score": 0.0031176485976102688, "phrase": "entire_code"}, {"score": 0.0030199761431186434, "phrase": "parallelization_approach"}, {"score": 0.002946122903079259, "phrase": "c_programming_language"}, {"score": 0.002853808773854451, "phrase": "parallelization_strategy"}, {"score": 0.0028236828952575735, "phrase": "main_modifications"}, {"score": 0.002764379205581817, "phrase": "secondary_information"}, {"score": 0.002735194789581153, "phrase": "dss_algorithm"}, {"score": 0.002687235334499192, "phrase": "simple_kriging"}, {"score": 0.0026682872124177233, "phrase": "local_means"}, {"score": 0.0026214978443388653, "phrase": "external_drift"}, {"score": 0.002530359917257626, "phrase": "local_correction"}, {"score": 0.002468450551616404, "phrase": "brief_comparison"}, {"score": 0.002433754579432554, "phrase": "simulation_results"}, {"score": 0.0023742031943872464, "phrase": "performance_tests"}, {"score": 0.0023079225317714793, "phrase": "source_code"}, {"score": 0.00229164285862567, "phrase": "completely_open_source"}, {"score": 0.0021501863832966966, "phrase": "microsoft_visual_c"}], "paper_keywords": ["Parallel processing", " Direct sequential simulation", " Sequential indicator simulation", " Sequential Gaussian simulation"], "paper_abstract": "Improving the performance and robustness of algorithms on new high-performance parallel computing architectures is a key issue in efficiently performing 2D and 3D studies with large amount of data. In geostatistics, sequential simulation algorithms are good candidates for parallelization. When compared with other computational applications in geosciences (such as fluid flow simulators), sequential simulation software is not extremely computationally intensive, but parallelization can make it more efficient and creates alternatives for its integration in inverse modelling approaches. This paper describes the implementation and benchmarking of a parallel version of the three classic sequential simulation algorithms: direct sequential simulation (DSS), sequential indicator simulation (SIS) and sequential Gaussian simulation (SGS). For this purpose, the source used was GSLIB, but the entire code was extensively modified to take into account the parallelization approach and was also rewritten in the C programming language. The paper also explains in detail the parallelization strategy and the main modifications. Regarding the integration of secondary information, the DSS algorithm is able to perform simple kriging with local means, kriging with an external drift and collocated cokriging with both local and global correlations. SIS includes a local correction of probabilities. Finally, a brief comparison is presented of simulation results using one, two and four processors. All performance tests were carried out on 2D soil data samples. The source code is completely open source and easy to read. It should be noted that the code is only fully compatible with Microsoft Visual C and should be adapted for other systems/compilers. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Parallelization of sequential Gaussian, indicator and direct simulation algorithms", "paper_id": "WOS:000280981100005"}