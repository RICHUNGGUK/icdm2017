{"auto_keywords": [{"score": 0.049561472167574526, "phrase": "web_services"}, {"score": 0.015719716506582538, "phrase": "automated_choreography"}, {"score": 0.015220669263409325, "phrase": "large_scale_service_repositories"}, {"score": 0.004437910956996051, "phrase": "prominent_paradigm"}, {"score": 0.004318881178805575, "phrase": "distributed_applications"}, {"score": 0.0042489946866108895, "phrase": "composed_service"}, {"score": 0.004024072318264299, "phrase": "service_orchestration"}, {"score": 0.003958937342925219, "phrase": "centralized_controller"}, {"score": 0.003811010743703935, "phrase": "composite_service"}, {"score": 0.003728966994353039, "phrase": "service_choreography"}, {"score": 0.0036091892088392775, "phrase": "participating_services"}, {"score": 0.0034554281349858836, "phrase": "globally_shared_task"}, {"score": 0.003362660648932247, "phrase": "great_attention"}, {"score": 0.003201890266327127, "phrase": "data_efficiency"}, {"score": 0.0030157628075954588, "phrase": "extensive_research"}, {"score": 0.0028715299874549245, "phrase": "automated_design"}, {"score": 0.0028404241985421096, "phrase": "choreography_plans"}, {"score": 0.0028096544129939277, "phrase": "especially_distributed_plans"}, {"score": 0.002779217021776702, "phrase": "multiple_roles"}, {"score": 0.0025334249463305875, "phrase": "novel_planning-based_approach"}, {"score": 0.0024386325347607674, "phrase": "stateful_actions"}, {"score": 0.002412204754253618, "phrase": "dependency_analysis"}, {"score": 0.002386062690026682, "phrase": "communication_control"}, {"score": 0.0022595316565074304, "phrase": "distributed_choreography_specification"}, {"score": 0.0022228943786652914, "phrase": "experimental_results"}], "paper_keywords": ["Service choreography", " Automated planning", " Service composition", " Service orchestration"], "paper_abstract": "Automated composition of Web services is becoming a prominent paradigm for implementing and delivering distributed applications. A composed service can be described either by orchestration or choreography. Service orchestration has a centralized controller which coordinates the services in a composite service. Differently, service choreography assumes that all of the participating services collaborate with each other to achieve a globally shared task. Choreography has received great attention and demonstrated a few key advantages over orchestration such as data efficiency, distributed control, and scalability. Although there is extensive research on the languages and protocols of choreography, automated design of choreography plans, especially distributed plans for multiple roles, is more complex and not studied before. In this paper, we propose a novel planning-based approach, including compilation of contingencies, stateful actions, dependency analysis and communication control, which can automatically convert a given composition task to a distributed choreography specification. The experimental results conducted on large scale service repositories show the effectiveness and efficiency of our approach for automated choreography of Web services.", "paper_title": "Towards automated choreography of Web services using planning in large scale service repositories", "paper_id": "WOS:000341094000004"}