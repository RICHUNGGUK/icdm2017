{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "internal_popularity_distribution"}, {"score": 0.004441359373498799, "phrase": "entire_video"}, {"score": 0.004071249707923223, "phrase": "large_size"}, {"score": 0.00402094658848301, "phrase": "video_objects"}, {"score": 0.003802135020791801, "phrase": "different_parts"}, {"score": 0.0033159224502739247, "phrase": "efficient_cache_mechanisms"}, {"score": 0.0031944286166257466, "phrase": "internal_popularity_characteristics"}, {"score": 0.0028917056916949744, "phrase": "rtsp_video_requests"}, {"score": 0.0028382152567141784, "phrase": "different_streaming_video_servers"}, {"score": 0.0027857115172243226, "phrase": "entertainment_video-on-demand_provider"}, {"score": 0.0026013505538490223, "phrase": "internal_popularity"}, {"score": 0.0024595996811420566, "phrase": "k-transformed_zipf-like_distribution"}, {"score": 0.0023546984428119864, "phrase": "caching_algorithm"}, {"score": 0.0022967713922705, "phrase": "empirical_internal_popularity_distribution"}, {"score": 0.0021851480717840484, "phrase": "similar_performance"}, {"score": 0.0021446993452098597, "phrase": "fine-grained_caching"}, {"score": 0.0021049977753042253, "phrase": "significantly_less_state_information"}], "paper_keywords": ["proxy caching", " streaming video", " internal popularity", " Zipf-like distribution", " segment-based caching"], "paper_abstract": "Most proxy caches for streaming videos do not cache the entire video but only a portion of it. This is partly due to the large size of video objects. Another reason is that the popularity of different parts of a video can be different, e.g., the prefix is generally more popular. Therefore, the development of efficient cache mechanisms requires an understanding of the internal popularity characteristics of streaming videos. This paper has two major contributions. Firstly, we analyze two 6-month long traces of RTSP video requests recorded at different streaming video servers of an entertainment video-on-demand provider, and show that the traces provide evidence that the internal popularity of the majority of the most popular videos obeys a k-transformed Zipf-like distribution. Secondly, we propose a caching algorithm which exploits this empirical internal popularity distribution. We find that this algorithm has similar performance compared with fine-grained caching but requires significantly less state information.", "paper_title": "A dynamic caching algorithm based on internal popularity distribution of streaming media", "paper_id": "WOS:000241949100006"}