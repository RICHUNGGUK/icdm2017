{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "custom_instructions"}, {"score": 0.04898285994723954, "phrase": "reconfigurable_functional_unit"}, {"score": 0.0410023520788353, "phrase": "extensible_processor"}, {"score": 0.004632597963417253, "phrase": "extensible_processors"}, {"score": 0.0043215158337835706, "phrase": "core_instruction_set_architecture"}, {"score": 0.004222515162635615, "phrase": "appropriate_custom_instructions"}, {"score": 0.004125773078637226, "phrase": "important_phase"}, {"score": 0.003534889186471058, "phrase": "critical_portions"}, {"score": 0.0032972747743006603, "phrase": "ci_generation"}, {"score": 0.00317221667574882, "phrase": "rfu_constraints"}, {"score": 0.0028687545730861665, "phrase": "adaptive_dynamic_extensible_processor"}, {"score": 0.0028247360425642043, "phrase": "amber"}, {"score": 0.002675797331220082, "phrase": "integrated_temporal_partitioning"}, {"score": 0.0024010535322709033, "phrase": "rfu."}, {"score": 0.002292097733181405, "phrase": "mapping_aware_temporal_partitioning_algorithm"}, {"score": 0.0021049977753042253, "phrase": "rfu._temporal"}], "paper_keywords": [""], "paper_abstract": "Extensible processors allow customization for an application by extending the core instruction set architecture. Extracting appropriate custom instructions is an important phase for implementing an application on an extensible processor with a reconfigurable functional unit. Custom instructions (CIs) usually are extracted from critical portions of applications. This paper presents approaches for CI generation with respect to the RFU constraints to improve speedup of the extensible processor. First, our proposed RFU architecture for an adaptive dynamic extensible processor called AMBER is described. Then, an integrated temporal partitioning and mapping framework is presented to partition and map the CIs on the RFU. In this framework, a mapping aware temporal partitioning algorithm is used to generate CIs which are mappable on the RFU. Temporal partitioning iterates and modifies partitions incrementally to generate CIs. In addition, a mapping algorithm", "paper_title": "An integrated temporal partitioning and mapping framework for handling custom instructions on a reconfigurable functional unit", "paper_id": "WOS:000241449500017"}