{"auto_keywords": [{"score": 0.044079538984485474, "phrase": "aspectj-like_languages"}, {"score": 0.0363505910819361, "phrase": "conceptual_integrity"}, {"score": 0.00481495049065317, "phrase": "programming_language_model"}, {"score": 0.003314591878914152, "phrase": "language_model"}, {"score": 0.002641621667026613, "phrase": "specialized_constructs"}, {"score": 0.0025042115651986332, "phrase": "uniform_orthogonal_constructs"}, {"score": 0.002220551141101661, "phrase": "better_modularization"}, {"score": 0.0021049977753042253, "phrase": "higher-order_crosscutting_concerns"}], "paper_keywords": ["Design", " Human Factors", " Languages", " Classpect", " unified aspect language model", " binding", " Eos", " aspect-oriented programming", " instance-level advising", " first class aspect instances"], "paper_abstract": "The contribution of this work is the design and evaluation of a programming language model that unifies aspects and classes as they appear in AspectJ-like languages. We show that our model preserves the capabilities of AspectJ-like languages, while improving the conceptual integrity of the language model and the compositionality of modules. The improvement in conceptual integrity is manifested by the reduction of specialized constructs in favor of uniform orthogonal constructs. The enhancement in compositionality is demonstrated by better modularization of integration and higher-order crosscutting concerns.", "paper_title": "Unifying Aspect- and Object-Oriented Design", "paper_id": "WOS:000269266700003"}