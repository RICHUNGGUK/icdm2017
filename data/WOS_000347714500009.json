{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "embedded_multiprocessor_system"}, {"score": 0.004712065638657606, "phrase": "manufacturing_variability"}, {"score": 0.004636340567075841, "phrase": "increasingly_significant_problem"}, {"score": 0.004586531354697466, "phrase": "silicon_devices"}, {"score": 0.004229556887896042, "phrase": "power_use"}, {"score": 0.0041840994704406866, "phrase": "supported_clock_frequencies"}, {"score": 0.00394264312173188, "phrase": "particular_concern"}, {"score": 0.003900257249255497, "phrase": "embedded_systems"}, {"score": 0.0035386420095120706, "phrase": "manufacturing_yields"}, {"score": 0.0032806521851034766, "phrase": "novel_approach"}, {"score": 0.003193129886123359, "phrase": "variability-mitigation_techniques"}, {"score": 0.0031417377608722, "phrase": "model-driven_engineering"}, {"score": 0.002992456421856034, "phrase": "development_process"}, {"score": 0.0028043588777213533, "phrase": "variability_effects"}, {"score": 0.002714779217561487, "phrase": "higher_yields"}, {"score": 0.002685558057339722, "phrase": "lower_costs"}, {"score": 0.002656650588033728, "phrase": "greater_reliability"}, {"score": 0.0025857324180891526, "phrase": "code_generation"}, {"score": 0.0025578967205807843, "phrase": "code_transformation"}, {"score": 0.0025167026017217926, "phrase": "design-space_exploration"}, {"score": 0.002295463032589125, "phrase": "audio_processing"}, {"score": 0.002258485755625332, "phrase": "complex_multiprocessor_soc"}, {"score": 0.002234165013865669, "phrase": "simulated_variability"}, {"score": 0.0021049977753042253, "phrase": "system_variability"}], "paper_keywords": [""], "paper_abstract": "Manufacturing variability is an increasingly significant problem. Silicon devices that are designed to be identical will display widely ranging characteristics after manufacture. Power use, supported clock frequencies and lifespan may all vary considerably. This is of particular concern for embedded systems because of their extensive use of complex system-on-chip (SoC)-based architectures. If this variability is not tolerated by the software, then manufacturing yields are reduced and devices are not used efficiently. This study discusses a novel approach to the integration of variability-mitigation techniques that uses model-driven engineering to explicitly consider variability as part of the development process. Developers can build systems that are much more resilient to variability effects, allowing systems to have higher yields, lower costs and greater reliability. The approach uses code generation and code transformation to simplify design-space exploration and reduce time-to-market. The approach is illustrated with an example of audio processing on a complex multiprocessor SoC with simulated variability, and it is shown to be increasingly effective as system variability becomes more significant.", "paper_title": "Toolchain-based approach to handling variability in embedded multiprocessor system on chips", "paper_id": "WOS:000347714500009"}