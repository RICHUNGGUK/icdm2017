{"auto_keywords": [{"score": 0.036828180880018095, "phrase": "goldberg"}, {"score": 0.00481495049065317, "phrase": "np-hard_maximum_monomial_agreement_problem"}, {"score": 0.004698000536608171, "phrase": "single_logical_conjunction"}, {"score": 0.004428728205625129, "phrase": "weighted_data"}, {"score": 0.004363846362238565, "phrase": "\"positive\"_and_\"negative\"_binary_vectors"}, {"score": 0.004133940019630129, "phrase": "maximum_agreement"}, {"score": 0.003858697684681798, "phrase": "heuristic_methods"}, {"score": 0.003728000957725218, "phrase": "exact_branch-and-bound_method"}, {"score": 0.003637600316455747, "phrase": "boolean"}, {"score": 0.003531474887552889, "phrase": "earlier_work"}, {"score": 0.0032639039638211347, "phrase": "optimal_logical_patterns"}, {"score": 0.0030615827066962933, "phrase": "siam"}, {"score": 0.0030314469070503755, "phrase": "philadelphia"}, {"score": 0.0028574164693918433, "phrase": "tighter_upper_bounding_function"}, {"score": 0.0028154895878702633, "phrase": "improved_branching_procedure"}, {"score": 0.0026020254041372723, "phrase": "lower_branching_factor"}, {"score": 0.002576503437739865, "phrase": "experimental_results"}, {"score": 0.0025262061502713683, "phrase": "new_method"}, {"score": 0.002464709648714996, "phrase": "larger_problem_instances"}, {"score": 0.0023928819778638055, "phrase": "linear_programming"}, {"score": 0.0023346234464901978, "phrase": "medium-sized_data_sets"}, {"score": 0.0022777800735119405, "phrase": "new_algorithm"}, {"score": 0.0021896891011033105, "phrase": "commercial_mixed-integer_programming_solver"}, {"score": 0.002146926767291475, "phrase": "linear_programming_relaxation-based_bounds"}, {"score": 0.0021049977753042253, "phrase": "integer_linear_programming_formulation"}], "paper_keywords": ["branch and bound", " combinatorial optimization", " machine learning"], "paper_abstract": "The NP-hard maximum monomial agreement problem consists of finding a single logical conjunction that is most consistent with or \"best fits\" a weighted data set of \"positive\" and \"negative\" binary vectors. Computing weighted voting classifiers using boosting methods involves a maximum agreement subproblem at each iteration, although such subproblems are typically solved in practice by heuristic methods. Here, we describe an exact branch-and-bound method for maximum agreement over Boolean monomials, improving on the earlier work of Goldberg and Shan [Goldberg, N., C. Shan. 2007. Boosting optimal logical patterns. Proc. 7th SIAM Internat. Conf. Data Mining, SIAM, Philadelphia, 228-236]. Specifically, we develop a tighter upper bounding function and an improved branching procedure that exploits knowledge of the bound and the particular data set, while having a lower branching factor. Experimental results show that the new method is able to solve larger problem instances and runs faster within a linear programming boosting procedure applied to medium-sized data sets from the UCI Machine Learning Repository. The new algorithm also runs much faster than applying a commercial mixed-integer programming solver, which uses linear programming relaxation-based bounds, to an integer linear programming formulation of the problem.", "paper_title": "An Improved Branch-and-Bound Method for Maximum Monomial Agreement", "paper_id": "WOS:000303924600010"}