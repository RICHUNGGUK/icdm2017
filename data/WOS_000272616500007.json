{"auto_keywords": [{"score": 0.04872101245158561, "phrase": "esc"}, {"score": 0.00481495049065317, "phrase": "complete_extended_static"}, {"score": 0.00471700544744796, "phrase": "extended_static_checking"}, {"score": 0.004602085616330634, "phrase": "fully_automated_formal_verification_technique"}, {"score": 0.004362564831572539, "phrase": "verification_conditions"}, {"score": 0.004221462068972551, "phrase": "vc"}, {"score": 0.0039362878637371574, "phrase": "traditional_extended_static_checking"}, {"score": 0.003746673633703251, "phrase": "toy_examples"}, {"score": 0.0035515148917169173, "phrase": "formal_methods"}, {"score": 0.003479180627368156, "phrase": "esc_component"}, {"score": 0.003230723298995081, "phrase": "novel_techniques"}, {"score": 0.0031910685060552485, "phrase": "multiple_theorem_provers"}, {"score": 0.0031004173389196387, "phrase": "offline_user-assisted_esc"}, {"score": 0.0026953359825383646, "phrase": "verification_tools"}, {"score": 0.002565345470805401, "phrase": "simple_compilation"}, {"score": 0.0024215727801940434, "phrase": "small_classes"}, {"score": 0.0023430556582539805, "phrase": "larger_programs"}, {"score": 0.002239225269052105, "phrase": "added_cost"}, {"score": 0.0022117133940361025, "phrase": "multiple_provers"}, {"score": 0.0021224200236681498, "phrase": "multi-threaded_version"}], "paper_keywords": ["Extended static checking", " Static verification", " Theorem provers", " Java Modeling Language", " JML4", " ESC", " ESC4"], "paper_abstract": "Extended Static Checking (ESC) is a fully automated formal verification technique. Verification in ESC is achieved by translating programs and their specifications into verification conditions (VCs). Proof of a VC establishes the correctness of the program. The implementations of many seemingly simple algorithms are beyond the ability of traditional Extended Static Checking (ESC) tools to verify. Not being able to verify toy examples is often enough to turn users off of the idea of using formal methods. ESC4, the ESC component of the JML4 project, is able to verify many more kinds of methods in part because of its use of novel techniques which apply multiple theorem provers. In particular, we present Offline User-Assisted ESC (OUA-ESC), a new form of verification that lies between ESC and Full Static Program Verification (FSPV). ESC is generally quite efficient, as far as verification tools go, but it is still orders of magnitude slower than simple compilation. As can be imagined, proving VCs is computationally expensive: While small classes can be verified in seconds, verifying larger programs of 50 KLOC can take hours. To help address the added cost of using multiple provers and this lack of scalability, we present the multi-threaded version of ESC4 and its distributed prover back-end.", "paper_title": "Faster and More Complete Extended Static Checking for the Java Modeling Language", "paper_id": "WOS:000272616500007"}