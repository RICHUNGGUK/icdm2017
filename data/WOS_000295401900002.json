{"auto_keywords": [{"score": 0.04019863307529151, "phrase": "data_sources"}, {"score": 0.027644687877895265, "phrase": "workflow_system"}, {"score": 0.015629834988561766, "phrase": "computational_workflows"}, {"score": 0.014843335069010085, "phrase": "large-scale_distributed_scientific_data_analysis"}, {"score": 0.00481495049065317, "phrase": "automatic_generation"}, {"score": 0.004759442693862545, "phrase": "distributed_data"}, {"score": 0.004731928080086235, "phrase": "component_catalogues"}, {"score": 0.004663832186991562, "phrase": "powerful_paradigm"}, {"score": 0.004596711717456095, "phrase": "complex_applications"}, {"score": 0.004426664694837159, "phrase": "individual_computations"}, {"score": 0.004189337956225294, "phrase": "workflow_creation"}, {"score": 0.004081385289516914, "phrase": "automatic_assignment"}, {"score": 0.004057774582761155, "phrase": "execution_resources"}, {"score": 0.003941746077126688, "phrase": "new_aspect"}, {"score": 0.0038513073787989054, "phrase": "application_components"}, {"score": 0.0037738708560271354, "phrase": "novel_approach"}, {"score": 0.0037087324991876727, "phrase": "varying_degrees"}, {"score": 0.003613119346373748, "phrase": "workflow_request"}, {"score": 0.0034291991359158827, "phrase": "abstract_workflow_component_classes"}, {"score": 0.003399466007862412, "phrase": "specific_component_implementations"}, {"score": 0.0033699898113395328, "phrase": "generic_reusable_workflow_templates"}, {"score": 0.003331084078553706, "phrase": "pre-defined_combination"}, {"score": 0.0032546105164772995, "phrase": "user_request"}, {"score": 0.00320770578058916, "phrase": "fully_ground_workflows"}, {"score": 0.003189133102243104, "phrase": "specific_choices"}, {"score": 0.002957222630196853, "phrase": "possible_candidate_workflows"}, {"score": 0.002931569771634119, "phrase": "increasingly_more_specialized_versions"}, {"score": 0.002906138793910919, "phrase": "original_template"}, {"score": 0.0027421300566115416, "phrase": "novel_feature"}, {"score": 0.0026791410961432677, "phrase": "distributed_architecture"}, {"score": 0.002542642270762272, "phrase": "external_catalogues"}, {"score": 0.002357632753637638, "phrase": "wings_workflow_system"}, {"score": 0.0021670777282518424, "phrase": "artificial_intelligence_techniques"}, {"score": 0.0021049977753042253, "phrase": "scientific_community"}], "paper_keywords": ["computational workflows", " semantic workflows", " workflow generation", " workflow systems", " planning", " semantic web", " OWL", " distributed reasoning"], "paper_abstract": "Computational workflows are a powerful paradigm to represent and manage complex applications, particularly in large-scale distributed scientific data analysis. Workflows represent application components that result in individual computations as well as their interdependences in terms of dataflow. Workflow systems use these representations to manage various aspects of workflow creation and execution for users, such as the automatic assignment of execution resources. This article describes an approach to automating a new aspect of the process: the selection of application components and data sources. We present a novel approach that enables users to specify varying degrees of detail and amount of constraints in a workflow request, including the specification of constraints on input, intermediate or output data in the workflow, abstract workflow component classes rather than specific component implementations, and generic reusable workflow templates that express a pre-defined combination of components. The algorithm elaborates the user request into a set of fully ground workflows with specific choices of data sources and codes to be used so that they can be submitted for mapping and execution. The algorithm searches through the space of possible candidate workflows by creating increasingly more specialized versions of the original template and eliminating candidates that violate constraints cumulated in the candidate workflow as components and data sources are selected. A novel feature of our approach is that it assumes a distributed architecture where data and component catalogues are separate from the workflow system. The algorithm explicitly poses queries to external catalogues, and therefore any reasoning regarding data or component properties is not assumed to occur within the workflow system. We describe our implementation of this approach in the Wings workflow system. This implementation uses the W3C Web Ontology Language and associated reasoners to implement the workflow system as well as the data and component catalogues. This research demonstrates the use of artificial intelligence techniques to support the kinds of automation envisioned by the scientific community for large-scale distributed scientific data analysis.", "paper_title": "A semantic framework for automatic generation of computational workflows using distributed data and component catalogues", "paper_id": "WOS:000295401900002"}