{"auto_keywords": [{"score": 0.04804050199975018, "phrase": "incremental_validation_method"}, {"score": 0.015719716506582538, "phrase": "knowledge-based_systems"}, {"score": 0.01424698826013824, "phrase": "lifecycle_model"}, {"score": 0.008858654283051971, "phrase": "test_cases"}, {"score": 0.004305481798183612, "phrase": "system_development"}, {"score": 0.0037551444630619015, "phrase": "lifecycle_models"}, {"score": 0.0036857412768922827, "phrase": "formal_framework"}, {"score": 0.0034420211080526094, "phrase": "validation_process"}, {"score": 0.003399466260673459, "phrase": "commonkads"}, {"score": 0.0031549249117721946, "phrase": "de_facto_standard"}, {"score": 0.002855934865505357, "phrase": "case_testing"}, {"score": 0.002803104254950008, "phrase": "strict_guidelines"}, {"score": 0.0025373711401047772, "phrase": "validation_method"}, {"score": 0.002444333100610621, "phrase": "prior_test_cases"}, {"score": 0.0023546984428119864, "phrase": "later_test_cases"}, {"score": 0.002325554982412043, "phrase": "subsequent_development_iterations"}, {"score": 0.002212535878761148, "phrase": "efficient_set"}, {"score": 0.0021446993452098597, "phrase": "effective_system_coverage"}, {"score": 0.0021049977753042253, "phrase": "proposed_incremental_validation_method"}], "paper_keywords": ["Lifecycle", " methods for SQA and V&V", " test execution", " validation"], "paper_abstract": "This paper introduces an incremental validation method for knowledge-based systems (KBSs) based on a lifecycle model of system development. Although many validation methods have been proposed for KBSs, there remains a need for an incremental validation method based on a lifecycle model. Lifecycle models provide a formal framework for the developer that can be highly beneficial for the validation process. CommonKADS is the most commonly accepted of such lifecycle models. It offers a de facto standard for building KBSs. Moreover, the incremental validation method introduced in this paper is based on case testing and provides strict guidelines to selecting a set of test cases to validate the system. Most importantly, this validation method makes use of results of prior test cases to guide the use of later test cases in subsequent development iterations. This facilitates the definition of an efficient set of test cases that provides effective system coverage. The proposed incremental validation method is evaluated, and the results are reported.", "paper_title": "Incremental Lifecycle Validation of Knowledge-Based Systems Through CommonKADS", "paper_id": "WOS:000323495900013"}