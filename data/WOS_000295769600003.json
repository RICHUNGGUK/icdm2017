{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "progressive-iteration_approximation"}, {"score": 0.013590104421949765, "phrase": "limit_curve"}, {"score": 0.012245747956051302, "phrase": "data_points"}, {"score": 0.009767368034409694, "phrase": "control_points"}, {"score": 0.004681971826924847, "phrase": "new_data_fitting_technique"}, {"score": 0.004457995891964028, "phrase": "initial_control_points"}, {"score": 0.004426886216925984, "phrase": "pia"}, {"score": 0.004350040802144489, "phrase": "fitting_curves"}, {"score": 0.003943636379643578, "phrase": "local_property"}, {"score": 0.003651039356522665, "phrase": "corresponding_control_points"}, {"score": 0.003525291235622844, "phrase": "current_pia_format"}, {"score": 0.00330972235893118, "phrase": "pia_technique"}, {"score": 0.003275093899046286, "phrase": "fitting_large_scale_data_points"}, {"score": 0.0031182092708983184, "phrase": "extended_pia"}, {"score": 0.0028464607144683247, "phrase": "main_computations"}, {"score": 0.0028265625216338875, "phrase": "epia"}, {"score": 0.0025352969524471496, "phrase": "parallel_computing_capability"}, {"score": 0.0025087506382067536, "phrase": "epia_technique"}, {"score": 0.0024912073108138613, "phrase": "great_potential"}, {"score": 0.002473786357109046, "phrase": "large_scale_data"}, {"score": 0.0024137645015872952, "phrase": "epia_format"}, {"score": 0.002371783323468861, "phrase": "incremental_data_fitting_algorithm"}, {"score": 0.0022110183535859374, "phrase": "parallel_computing_toolbox"}, {"score": 0.002195608506565805, "phrase": "matlab"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Progressive-iteration approximation", " Data fitting", " Progressive interpolation", " Geometric design", " Parallel computing"], "paper_abstract": "Progressive-iteration approximation (PIA) is a new data fitting technique developed recently for blending curves and surfaces. Taking the given data points as the initial control points, PIA constructs a series of fitting curves (surfaces) by adjusting the control points iteratively, while the limit curve (surface) interpolates the data points. More importantly, progressive-iteration approximation has the local property, that is, the limit curve (surface) can interpolate a subset of data points by just adjusting a part of corresponding control points, and remaining others unchanged. However, the current PIA format requires that the number of the control points equals that of the data points, thus making the PIA technique inappropriate to fitting large scale data points. To overcome this drawback, in this paper, we develop an extended PIA (EPIA) format, which allows that the number of the control points is less than that of the given data points. Moreover, since the main computations of EPIA are independent, they can be performed in parallel efficiently, with storage requirement O(n), where n is the number of the control points. Therefore, due to its local property and parallel computing capability, the EPIA technique has great potential in large scale data fitting. Specifically, by the EPIA format, we develop an incremental data fitting algorithm in this paper. In addition, some examples are demonstrated in this paper, all implemented by the parallel computing toolbox of Matlab, and run on a PC with a four-core CPU. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "An extended iterative format for the progressive-iteration approximation", "paper_id": "WOS:000295769600003"}