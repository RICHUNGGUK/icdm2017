{"auto_keywords": [{"score": 0.045701947504313264, "phrase": "publish-subscribe_infrastructures"}, {"score": 0.02820466592593928, "phrase": "application_components"}, {"score": 0.00481495049065317, "phrase": "fine-grained_automated_verification"}, {"score": 0.004749646583168342, "phrase": "publish-subscribe_architectures"}, {"score": 0.004527947981009528, "phrase": "distributed_applications"}, {"score": 0.004287166497171827, "phrase": "open_problem"}, {"score": 0.00422899036681456, "phrase": "previous_efforts"}, {"score": 0.00417160036938041, "phrase": "finite_automata"}, {"score": 0.0040591367766929344, "phrase": "components'_behavior"}, {"score": 0.0038695436922618876, "phrase": "global_properties"}, {"score": 0.0037651925588909783, "phrase": "existing_proposals"}, {"score": 0.0035892794633115227, "phrase": "real_contexts"}, {"score": 0.003516417950483685, "phrase": "strong_simplifications"}, {"score": 0.0033982429092938764, "phrase": "underlying_publish-subscribe_infrastructure"}, {"score": 0.00332924643541238, "phrase": "automatic_verification"}, {"score": 0.0030879936732269293, "phrase": "novel_approach"}, {"score": 0.003004655258223784, "phrase": "asynchronous_communication_mechanisms"}, {"score": 0.002903628734069691, "phrase": "model_checker"}, {"score": 0.002786858120570499, "phrase": "-subscribe_primitives"}, {"score": 0.0023810183846557486, "phrase": "fine-grained_model"}, {"score": 0.002332626862738603, "phrase": "publish-subscribe_infrastructure"}, {"score": 0.0022696277881969896, "phrase": "state_space_explosion_problems"}, {"score": 0.0021932609696277937, "phrase": "automated_verification"}, {"score": 0.0021049977753042253, "phrase": "realistic_communication_infrastructures"}], "paper_keywords": [""], "paper_abstract": "The design and validation of distributed applications built on top of Publish-Subscribe infrastructures remain an open problem. Previous efforts adopted finite automata to specify the components' behavior, and model checking to verify global properties. However, existing proposals are far from being applicable in real contexts, as strong simplifications are needed on the underlying Publish-Subscribe infrastructure to make automatic verification feasible. To face this challenge, we propose a novel approach that embeds the asynchronous communication mechanisms of Publish-Subscribe infrastructures within the model checker. This way, Publish-Subscribe primitives become available to the specification of application components as additional, domain-specific, constructs of the modeling language. With this approach, one can develop a fine-grained model of the Publish-Subscribe infrastructure without incurring in state space explosion problems, thus enabling the automated verification of application components on top of realistic communication infrastructures.", "paper_title": "Towards fine-grained automated verification of publish-subscribe architectures", "paper_id": "WOS:000241691900010"}