{"auto_keywords": [{"score": 0.03906597166738946, "phrase": "dapper"}, {"score": 0.015333564623053231, "phrase": "dap"}, {"score": 0.01433184427475409, "phrase": "input_shape"}, {"score": 0.012788572178275651, "phrase": "printing_volume"}, {"score": 0.004595263305771512, "phrase": "shape_decomposition"}, {"score": 0.004338530593157634, "phrase": "small_number"}, {"score": 0.0038671299350540554, "phrase": "support_material"}, {"score": 0.003611751858608048, "phrase": "dap_problem"}, {"score": 0.0033011569787033297, "phrase": "coarse_decomposition"}, {"score": 0.002931569771634119, "phrase": "search_space"}, {"score": 0.002889672003089062, "phrase": "prioritized_and_bounded_beam_search"}, {"score": 0.002797572252783356, "phrase": "local_and_global_dap_objectives"}, {"score": 0.00267931029131157, "phrase": "pyramidal_primitives"}, {"score": 0.0025752890978323873, "phrase": "pyramidal_shapes"}, {"score": 0.0024399036842105205, "phrase": "suitable_level"}, {"score": 0.002396371892825691, "phrase": "dap_optimization"}, {"score": 0.002362105010110277, "phrase": "printing_efficiency_gains"}, {"score": 0.0022138542785562444, "phrase": "fabrication_criteria"}, {"score": 0.002190064650401852, "phrase": "cut_area"}], "paper_keywords": ["Decompose-and-pack", " 3D printing", " pyramidal shape"], "paper_abstract": "We pose the decompose-and-pack or DAP problem, which tightly combines shape decomposition and packing. While in general, DAP seeks to decompose an input shape into a small number of parts which can be efficiently packed, our focus is geared towards 3D printing. The goal is to optimally decompose-and-pack a 3D object into a printing volume to minimize support material, build time, and assembly cost. We present Dapper, a global optimization algorithm for the DAP problem which can be applied to both powder-and FDM-based 3D printing. The solution search is top-down and iterative. Starting with a coarse decomposition of the input shape into few initial parts, we progressively pack a pile in the printing volume, by iteratively docking parts, possibly while introducing cuts, onto the pile. Exploration of the search space is via a prioritized and bounded beam search, with breadth and depth pruning guided by local and global DAP objectives. A key feature of Dapper is that it works with pyramidal primitives, which are packing-and printing-friendly. Pyramidal shapes are also more general than boxes to reduce part counts, while still maintaining a suitable level of simplicity to facilitate DAP optimization. We demonstrate printing efficiency gains achieved by Dapper, compare to state-of-the-art alternatives, and show how fabrication criteria such as cut area and part size can be easily incorporated into our solution framework to produce more physically plausible fabrications.", "paper_title": "Dapper: Decompose-and-Pack for 3D Printing", "paper_id": "WOS:000363671200050"}