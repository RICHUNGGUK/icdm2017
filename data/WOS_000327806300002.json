{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_computing"}, {"score": 0.004766090327062509, "phrase": "memory_models"}, {"score": 0.004506048850130758, "phrase": "distributed_system"}, {"score": 0.004437613070853689, "phrase": "complex_function"}, {"score": 0.00437021209960886, "phrase": "system's_communication_model"}, {"score": 0.004238452771031322, "phrase": "failure_model"}, {"score": 0.004152818376630929, "phrase": "canonical_distributed_system_model"}, {"score": 0.003906116922372891, "phrase": "shared_memory"}, {"score": 0.0036553070575015344, "phrase": "fundamental_role"}, {"score": 0.003545024951402821, "phrase": "distributed_computability_theory"}, {"score": 0.003438058620195309, "phrase": "different_types"}, {"score": 0.003403122817578447, "phrase": "additional_assumptions"}, {"score": 0.003351381374975648, "phrase": "impossibility_results"}, {"score": 0.0031682817605340028, "phrase": "names_failure_detectors"}, {"score": 0.003025915966640355, "phrase": "powerful_simulation_technique"}, {"score": 0.002949598537993663, "phrase": "name_bg_simulation"}, {"score": 0.0027883885425383534, "phrase": "computability_point"}, {"score": 0.0022961534630650347, "phrase": "synthetic_view"}, {"score": 0.002272794656458419, "phrase": "important_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Adversary", " Agreement", " Asynchronous system", " Borowsky-Gafni (BG) simulation", " Concurrency", " Crash failure", " Distributed computability", " Distributed computing model", " Failure detector", " Fault-tolerance", " Iterated model", " Liveness", " Model equivalence", " Recursion Resilience", " Shared memory system", " Snapshot", " Task", " Topology", " Wait-freedom"], "paper_abstract": "What can and cannot be computed in a distributed system is a complex function of the system's communication model, timing model, and failure model. Considering a canonical distributed system model, where processes execute asynchronously, communicate by reading and writing shared memory, and fail by crashing, this paper surveys important results about computability, and explains the fundamental role that topology plays in the distributed computability theory. The paper also considers different types of additional assumptions that allow impossibility results to be circumvented. These assumptions are known under the names failure detectors and adversaries. Finally, it presents a powerful simulation technique (known under the name BG simulation), which allows to show that, from a computability point of view, t-resilience is not different from wait-freedom. When pieced together, the aim of all the concepts, notions, models, and algorithms presented in the paper, is to provide the reader with a synthetic view of important results on the distributed asynchronous read/write shared-memory model, its power and its limits. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Power and limits of distributed computing shared memory models", "paper_id": "WOS:000327806300002"}