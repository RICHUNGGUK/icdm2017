{"auto_keywords": [{"score": 0.04876768085416924, "phrase": "surface_point"}, {"score": 0.02998999927405984, "phrase": "sample_thread"}, {"score": 0.00481495049065317, "phrase": "noiseless_gpu"}, {"score": 0.0047650691627251825, "phrase": "isotropic_brdf_surfaces"}, {"score": 0.004507594400447103, "phrase": "incident_radiance"}, {"score": 0.0044608829094248985, "phrase": "hemisphere_domain"}, {"score": 0.004414653335578912, "phrase": "popular_method"}, {"score": 0.004323620278409076, "phrase": "monte_carlo_integration"}, {"score": 0.004249188865832993, "phrase": "surface_illumination"}, {"score": 0.0040899006497687115, "phrase": "stochastically_sampled_rays"}, {"score": 0.003936560022538905, "phrase": "serious_drawback"}, {"score": 0.003909301559145041, "phrase": "noise_artifacts"}, {"score": 0.00386876598761639, "phrase": "estimator_variance"}, {"score": 0.0037236852537136547, "phrase": "monte_carlo"}, {"score": 0.0036595438031512217, "phrase": "real_time"}, {"score": 0.0036216504850269267, "phrase": "gpu."}, {"score": 0.0035965032173588753, "phrase": "main_contribution"}, {"score": 0.003559199464487982, "phrase": "novel_importance_sampling_scheme"}, {"score": 0.0035100601949451028, "phrase": "spatially_continuous_sample_rays"}, {"score": 0.00342568771304873, "phrase": "evenly_spaced_polar_angle"}, {"score": 0.003390149669470349, "phrase": "eye_ray"}, {"score": 0.0033201720993656734, "phrase": "incident_rays"}, {"score": 0.0032067276476968032, "phrase": "target_brdf_lobe"}, {"score": 0.0031514627590375354, "phrase": "force-based_update_method"}, {"score": 0.003086396772496527, "phrase": "consistent_ray_sets"}, {"score": 0.00301217724562369, "phrase": "corresponding_rays"}, {"score": 0.0029602552900111407, "phrase": "ray_sets"}, {"score": 0.0028890603352364273, "phrase": "continuous_ray_curve"}, {"score": 0.0025490131630603757, "phrase": "sample_ray"}, {"score": 0.0024704333220467393, "phrase": "random_variance"}, {"score": 0.002419393934835993, "phrase": "visual_noise"}, {"score": 0.0023942700905678735, "phrase": "monte_carlo_rendering_process"}, {"score": 0.002296353502380933, "phrase": "brdf"}, {"score": 0.0022647797232322265, "phrase": "gpu"}, {"score": 0.0022101055924375725, "phrase": "real-time_rendering"}, {"score": 0.0021795515361987144, "phrase": "extensive_experiments"}, {"score": 0.002119702106867801, "phrase": "acceptable_rendering_quality"}, {"score": 0.0021049977753042253, "phrase": "interactive_applications"}], "paper_keywords": ["BRDF", " Monte Carlo rendering", " Importance sampling", " Filtering"], "paper_abstract": "Illumination at a surface point is formulated as an integral of a BRDF using the incident radiance over the hemisphere domain. A popular method to compute the integral is Monte Carlo integration, in which the surface illumination is computed as the sum of the integrand evaluated with stochastically sampled rays. Although its simple nature is practically attractive, it incurs the serious drawback of noise artifacts due to estimator variance. In this paper, we propose a novel noiseless Monte Carlo rendering algorithm running in real time on a GPU. The main contribution is a novel importance sampling scheme, which constructs spatially continuous sample rays over a surface. For each evenly spaced polar angle of the eye ray, denoted by theta, incident rays are sampled with a PDF (probability density function) derived from a target BRDF lobe. We develop a force-based update method to create a sequence of consistent ray sets along theta's. Finally, corresponding rays in the sequence of ray sets are linearly connected to form a continuous ray curve, referred to as a sample thread. When rendering, illumination at a surface point is computed with rays, each of which is given as a point on a sample thread. Because a thread provides a sample ray that continuously varies on a surface, the random variance of the illumination, causing visual noise during the Monte Carlo rendering process, is eliminated. A thread set is precomputed for each BRDF to free the GPU from the burden of sampling during real-time rendering. According to extensive experiments, approximately 100 threads are sufficient for most measured BRDFs with acceptable rendering quality for interactive applications.", "paper_title": "Noiseless GPU rendering of isotropic BRDF surfaces", "paper_id": "WOS:000298995000011"}