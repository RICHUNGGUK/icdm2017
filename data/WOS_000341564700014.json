{"auto_keywords": [{"score": 0.04586846484671967, "phrase": "energy_efficiency"}, {"score": 0.01525106038432682, "phrase": "sram"}, {"score": 0.013925952393145423, "phrase": "hybrid_cache"}, {"score": 0.011556961989391318, "phrase": "stt-ram-based_hybrid_cache"}, {"score": 0.01135797807583316, "phrase": "migration_overheads"}, {"score": 0.00481495049065317, "phrase": "cache_for_energy_efficient_embedded_systems"}, {"score": 0.004167982855788402, "phrase": "management_strategies"}, {"score": 0.0041316803676012155, "phrase": "hybrid_caches"}, {"score": 0.004095692768056685, "phrase": "migration-based_techniques"}, {"score": 0.004024651422626329, "phrase": "write-intensive_data"}, {"score": 0.003989592624217763, "phrase": "stt-ram"}, {"score": 0.0038862297330905836, "phrase": "additional_access_operations"}, {"score": 0.0037855348847339655, "phrase": "extra_overheads"}, {"score": 0.003423042581201533, "phrase": "first_approach"}, {"score": 0.0031775430407770026, "phrase": "data_layout"}, {"score": 0.0031360786664165093, "phrase": "second_approach"}, {"score": 0.002923876831533028, "phrase": "migration-intensive_memory_blocks"}, {"score": 0.002359046870732839, "phrase": "write_operations"}, {"score": 0.0021801135036476136, "phrase": "total_dynamic_energy"}, {"score": 0.0021049977753042253, "phrase": "total_access_latency"}], "paper_keywords": ["Cache", " compiler", " hybrid cache", " NVM", " spin-torque transfer (STT)-RAM"], "paper_abstract": "Hybrid caches consisting of static RAM (SRAM) and spin-torque transfer (STT)-RAM have been proposed recently for energy efficiency. To explore the advantages of hybrid cache, most of the management strategies for hybrid caches employ migration-based techniques to dynamically move write-intensive data from STT-RAM to SRAM. These techniques involve additional access operations, and thus lead to extra overheads. In this paper, we propose two compilation-based approaches to improve the energy efficiency and performance of STT-RAM-based hybrid cache by reducing the migration overheads. The first approach, migration-aware data layout, is proposed to reduce the migrations by rearranging the data layout. The second approach, migration-aware cache locking, is proposed to reduce the migrations by locking migration-intensive memory blocks into SRAM part of hybrid cache. Furthermore, experiments show that these two methods can be combined to reduce more migrations. The reduction of migration overheads can improve the energy efficiency and performance of STT-RAM-based hybrid cache. Experimental results show that, combining these two methods, on average, the number of write operations on STT-RAM is reduced by 17.6%, the number of migrations is reduced by 38.9%, the total dynamic energy is reduced by 15.6%, and the total access latency is reduced by 13.8%.", "paper_title": "Compiler-Assisted STT-RAM-Based Hybrid Cache for Energy Efficient Embedded Systems", "paper_id": "WOS:000341564700014"}