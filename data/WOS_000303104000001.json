{"auto_keywords": [{"score": 0.03743638784778741, "phrase": "heavy_intercommunication_overheads"}, {"score": 0.004549242970806199, "phrase": "extended_systemc_framework"}, {"score": 0.004435885269134359, "phrase": "software_simulation"}, {"score": 0.0043802673706851425, "phrase": "systemc."}, {"score": 0.004164644263639545, "phrase": "system-level_simulation"}, {"score": 0.003788444178071508, "phrase": "additional_instruction_set_simulator"}, {"score": 0.003741016954377844, "phrase": "iss"}, {"score": 0.0036707250689857348, "phrase": "software_execution"}, {"score": 0.0033814348757887232, "phrase": "simulation_performance"}, {"score": 0.0031544754107802413, "phrase": "high-speed_and_equivalent_systemc_models"}, {"score": 0.0029427043216782604, "phrase": "hardware_models"}, {"score": 0.0027106334164712057, "phrase": "efficient_os_model"}, {"score": 0.002626317051411829, "phrase": "accurate_preemptive_scheduling"}, {"score": 0.002449915958738505, "phrase": "systemc_modules"}, {"score": 0.0022709326810964386, "phrase": "conventional_iss-systemc_approach"}, {"score": 0.0022423971916457684, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "accurate_simulation_results"}], "paper_keywords": ["Performance", " Verification", " SystemC", " OS modeling", " software simulation", " virtual prototyping"], "paper_abstract": "In this article, we propose an extended SystemC framework that directly enables software simulation in SystemC. Although SystemC has been widely adopted for system-level simulation of hardware designs nowadays, to complete HW/SW co-simulation, it still requires an additional instruction set simulator (ISS) for software execution. However, the heavy intercommunication overheads between the two heterogeneous simulators would significantly slow down simulation performance. To deal with this issue, our proposed approach automatically generates high-speed and equivalent SystemC models for target software applications that can be directly integrated with hardware models for complete HW/SW co-simulation. In addition, to properly handle multitasking, an efficient OS model is devised to support accurate preemptive scheduling. Since both the generated application model and the OS model are constructed in SystemC modules, our approach avoids heavy intercommunication overheads and achieves over 1,000 times faster simulation than that of the conventional ISS-SystemC approach. Experimental results demonstrate that our extended SystemC approach can perform at 50 to 220 MIPS while offering accurate simulation results.", "paper_title": "An Extended SystemC Framework for Efficient HW/SW Co-Simulation", "paper_id": "WOS:000303104000001"}