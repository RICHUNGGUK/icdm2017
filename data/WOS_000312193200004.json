{"auto_keywords": [{"score": 0.049447946898790056, "phrase": "network_transmission_cost"}, {"score": 0.04805655360322431, "phrase": "high_performance"}, {"score": 0.047000142584588775, "phrase": "analytical_databases"}, {"score": 0.00481495049065317, "phrase": "mint-olap"}, {"score": 0.004720043307726269, "phrase": "olap_cluster"}, {"score": 0.004688823162073856, "phrase": "main_memory_analytical_database"}, {"score": 0.004286931271697226, "phrase": "higher_performance"}, {"score": 0.004092240621596351, "phrase": "larger_scale"}, {"score": 0.004038249989123055, "phrase": "powerful_storage"}, {"score": 0.003998223112665124, "phrase": "high_performance_processing_engine"}, {"score": 0.003906357144047631, "phrase": "teradata"}, {"score": 0.0038420287603415566, "phrase": "advanced_hardware_supports"}, {"score": 0.0037913267098534887, "phrase": "asterdata"}, {"score": 0.003704196857903231, "phrase": "high_scalability_framework"}, {"score": 0.003679758600046554, "phrase": "mapreduce"}, {"score": 0.003352825186671963, "phrase": "future_large_scale_analytical_processing"}, {"score": 0.0032975819773787985, "phrase": "moderate_clusters"}, {"score": 0.003264872488939969, "phrase": "expensive_hardware_dependency"}, {"score": 0.0032004205378150354, "phrase": "simple_software_framework"}, {"score": 0.003095806891672679, "phrase": "hardware_technologies"}, {"score": 0.0028966970007550824, "phrase": "snowflake_schema"}, {"score": 0.00286795254228461, "phrase": "olap_model"}, {"score": 0.0028394925080958205, "phrase": "whole_process"}, {"score": 0.002746644177161797, "phrase": "next_stage"}, {"score": 0.0026834578825190407, "phrase": "output_data"}, {"score": 0.0026217213613095322, "phrase": "central_processing"}, {"score": 0.002604343990620731, "phrase": "clustered_processing"}, {"score": 0.0024776238724770524, "phrase": "netmemory"}, {"score": 0.002453027723284009, "phrase": "broadcasting_protocol_based_dimension_mirror_synchronizing_buffer"}, {"score": 0.0024125742420201, "phrase": "predicate-vector_based_ddta-olap_cluster_model"}, {"score": 0.0023336530061840244, "phrase": "bitmap_vectors"}, {"score": 0.0022348937352254343, "phrase": "olap_clusters"}, {"score": 0.0021907299375981356, "phrase": "simple_distributed_storagemodel"}, {"score": 0.0021762030438262046, "phrase": "large_scale_clustering_processing"}, {"score": 0.0021403049512708494, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "scalability_performance"}], "paper_keywords": ["OLAP cluster", " MiNT", " NetMemory", " schema-aware OLAP"], "paper_abstract": "Powerful storage, high performance and scalability are the most important issues for analytical databases. These three factors interact with each other, for example, powerful storage needs less scalability but higher performance, high performance means less consumption of indexes and other materializations for storage and fewer processing nodes, larger scale relieves stress on powerful storage and the high performance processing engine. Some analytical databases (ParAccel, Teradata) bind their performance with advanced hardware supports, some (Asterdata, Greenplum) rely on the high scalability framework of MapReduce, some (MonetDB, Sybase IQ, Vertica) highlight performance on processing engine and storage engine. All these approaches can be integrated into an storage-performance-scalability (S-P-S) model, and future large scale analytical processing can be built on moderate clusters to minimize expensive hardware dependency. The most important thing is a simple software framework is fundamental to maintain pace with the development of hardware technologies. In this paper, we propose a schema-aware on-line analytical processing (OLAP) model with deep optimization from native features of the star or snowflake schema. The OLAP model divides the whole process into several stages, each stage pipes its output to the next stage, we minimize the size of output data in each stage, whether in central processing or clustered processing. We extend this mechanism to cluster processing using two major techniques, one is using NetMemory as a broadcasting protocol based dimension mirror synchronizing buffer, the other is predicate-vector based DDTA-OLAP cluster model which can minimize the data dependency of star-join using bitmap vectors. Our OLAP model aims to minimize network transmission cost (MiNT in short) for OLAP clusters and support a scalable but simple distributed storagemodel for large scale clustering processing. Finally, the experimental results show the speedup and scalability performance.", "paper_title": "MiNT-OLAP cluster: minimizing network transmission cost in OLAP cluster for main memory analytical database", "paper_id": "WOS:000312193200004"}