{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "weighted_tardiness"}, {"score": 0.03720707411991549, "phrase": "rl_problems"}, {"score": 0.004758053266234474, "phrase": "unrelated_parallel_machine_scheduling"}, {"score": 0.0045370785151713396, "phrase": "unrelated_parallel_machine_scheduling_problem"}, {"score": 0.004199680223367478, "phrase": "rl"}, {"score": 0.004100851549096203, "phrase": "different_types"}, {"score": 0.003957078581524691, "phrase": "independent_poisson_processes"}, {"score": 0.0038640303886081444, "phrase": "arrival_time"}, {"score": 0.003795677450778112, "phrase": "due_date"}, {"score": 0.003576416581189716, "phrase": "scheduling_problems"}, {"score": 0.0034715658596258018, "phrase": "elaborate_state_features"}, {"score": 0.0033497809969621267, "phrase": "reward_function"}, {"score": 0.0031374619658664843, "phrase": "prior_domain_knowledge"}, {"score": 0.0030273620861817055, "phrase": "decision_time"}, {"score": 0.002903771635043968, "phrase": "schedule_objective"}, {"score": 0.0027522340188241446, "phrase": "on-line_r-learning_algorithm"}, {"score": 0.002608583927848071, "phrase": "computational_experiments"}, {"score": 0.00248718591918233, "phrase": "optimal_or_near-optimal_policy"}, {"score": 0.0022881443200668886, "phrase": "wmdd"}, {"score": 0.002261042690668193, "phrase": "atc"}, {"score": 0.002234252028553481, "phrase": "wcovert"}, {"score": 0.002181626277903721, "phrase": "test_problems"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Scheduling", " Unrelated parallel machines", " Reinforcement learning", " Tardiness"], "paper_abstract": "We address an unrelated parallel machine scheduling problem with R-learning, an average-reward reinforcement learning (RL) method. Different types of jobs dynamically arrive in independent Poisson processes. Thus the arrival time and the due date of each job are stochastic. We convert the scheduling problems into RL problems by constructing elaborate state features, actions, and the reward function. The state features and actions are defined fully utilizing prior domain knowledge. Minimizing the reward per decision time step is equivalent to minimizing the schedule objective, i.e. mean weighted tardiness. We apply an on-line R-learning algorithm with function approximation to solve the RL problems. Computational experiments demonstrate that R-learning learns an optimal or near-optimal policy in a dynamic environment from experience and outperforms four effective heuristic priority rules (i.e. WSPT, WMDD, ATC and WCOVERT) in all test problems. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "Minimizing mean weighted tardiness in unrelated parallel machine scheduling with reinforcement learning", "paper_id": "WOS:000298532900002"}