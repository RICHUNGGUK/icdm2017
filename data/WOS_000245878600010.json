{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "core-edge_design"}, {"score": 0.0047707093928203, "phrase": "storage_area_networks"}, {"score": 0.004555499634179394, "phrase": "optimal_network_design"}, {"score": 0.004492841495994535, "phrase": "storage_area_network"}, {"score": 0.004172874316207784, "phrase": "core-edge_storage_area_network_design_problem"}, {"score": 0.0038756055612167942, "phrase": "currently_available_heuristics"}, {"score": 0.0036496814103475174, "phrase": "multiple_disjoint_paths"}, {"score": 0.0035010071030752883, "phrase": "generic_component_types"}, {"score": 0.0031625006830124512, "phrase": "solution_process"}, {"score": 0.002991823455621222, "phrase": "preprocessing_method"}, {"score": 0.002950608985750058, "phrase": "suboptimal_switches"}, {"score": 0.0028042741141125712, "phrase": "randomly_generated_set"}, {"score": 0.002498053212249228, "phrase": "test_problems"}, {"score": 0.0024750474634399797, "phrase": "good_time"}, {"score": 0.002225196379204285, "phrase": "re-configured_network"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["mixed-integer programming", " storage area network", " Core-Edge design"], "paper_abstract": "In this paper we address the problem of optimal network design for a storage area network. We consider the Core-Edge reference topology and present two formulations for the Core-Edge storage area network design problem. One formulation excludes explicit host/device connections to the edge (as is common in currently available heuristics), the other includes these connections to allow the modeling of multiple disjoint paths between hosts and devices. These formulations include generic component types to reduce the number of constraints and variables, with the properties of these components being determined as part of the solution process. The size of the formulation is further reduced by a preprocessing method that removes suboptimal switches and links from consideration. We test our formulations on a randomly generated set of problems, all of which are of a size consistent with those encountered in industry. We generate solutions using our two formulations for all test problems in good time. Finally we apply a relaxation of one of our formulations to re-configure the Cecil back-end network, which is currently used across the University of Auckland. We present two designs for the re-configured network to significantly increase reliability and scalability. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "A mixed-integer approach to Core-Edge design of storage area networks", "paper_id": "WOS:000245878600010"}