{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "db-ir_integration"}, {"score": 0.014890878024236208, "phrase": "structured_data"}, {"score": 0.014744873135853806, "phrase": "text_data"}, {"score": 0.01180868994319943, "phrase": "tight-coupling_architecture"}, {"score": 0.011407105885889487, "phrase": "ir_index"}, {"score": 0.004696608876994947, "phrase": "odysseus_dbms."}, {"score": 0.004272724011826495, "phrase": "major_challenges"}, {"score": 0.004126349202545883, "phrase": "active_discussions"}, {"score": 0.004065156038847781, "phrase": "system_architecture"}, {"score": 0.003945467978172845, "phrase": "clear_agreement"}, {"score": 0.0035358770665604657, "phrase": "novel_structure"}, {"score": 0.0034146585649631692, "phrase": "tightly-coupled_query_processing_algorithms"}, {"score": 0.003281186608301359, "phrase": "text_data_type"}, {"score": 0.0032004205378150354, "phrase": "storage_system"}, {"score": 0.0031372369299648203, "phrase": "built-in_data_type"}, {"score": 0.003075296862372287, "phrase": "query_processor"}, {"score": 0.0028394925080958205, "phrase": "archival_purposes"}, {"score": 0.0027420820738468577, "phrase": "non-regular_publications"}, {"score": 0.002634830238219976, "phrase": "greater_details"}, {"score": 0.0025571463140118805, "phrase": "query_processing_algorithms"}, {"score": 0.002420611343093316, "phrase": "odysseus_dbms"}, {"score": 0.002337537705795997, "phrase": "kaist"}, {"score": 0.002257307804296162, "phrase": "odysseus"}, {"score": 0.0021049977753042253, "phrase": "db-ir_integration_queries"}], "paper_keywords": ["Tight-coupling", " Information retrieval", " DB-IR integration", " Odysseus"], "paper_abstract": "As many recent applications require integration of structured data and text data, unifying database (DB) and information retrieval (IR) technologies has become one of major challenges in our field. There have been active discussions on the system architecture for DB-IR integration, but a clear agreement has not been reached yet. Along this direction, we have advocated the use of the tight-coupling architecture and developed a novel structure of the IR index as well as tightly-coupled query processing algorithms. In tight-coupling, the text data type is supported from the storage system just like a built-in data type so that the query processor can efficiently handle queries involving both structured data and text data. In this paper, for archival purposes, we consolidate our achievements reported at non-regular publications over the last ten years or so, extending them by adding greater details on the IR index and the query processing algorithms. All the features in this paper are fully implemented in the Odysseus DBMS that has been under development at KAIST for over 23 years. We show that Odysseus significantly outperforms two open-source DBMSs and one open-source search engine (with some exceptional cases) in processing DB-IR integration queries. These results indeed demonstrate superiority of the tight-coupling architecture for DB-IR integration.", "paper_title": "DB-IR integration using tight-coupling in the Odysseus DBMS", "paper_id": "WOS:000354386500001"}