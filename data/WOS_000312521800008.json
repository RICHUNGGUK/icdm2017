{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "monadic_second-order_graph_properties"}, {"score": 0.004579780586951551, "phrase": "monadic_second-order_logic"}, {"score": 0.0040916230716372265, "phrase": "finite_automata"}, {"score": 0.004040688646993605, "phrase": "monadic_second-order_sentences"}, {"score": 0.0038431888954930083, "phrase": "fixed_finite_signatures"}, {"score": 0.0034984340449789745, "phrase": "hyper-exponential_sizes"}, {"score": 0.002431797888365548, "phrase": "graph_theory"}, {"score": 0.002371531125700046, "phrase": "explicit_constructions"}, {"score": 0.0022696277881969896, "phrase": "bounded_clique-width"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Graph algorithm", " Automaton", " Monadic second-order logic", " Clique-width", " Fixed-parameter tractability", " Fly-automaton"], "paper_abstract": "The model-checking problem for monadic second-order logic on graphs is fixed-parameter tractable with respect to tree-width and clique-width. The proof constructs finite automata from monadic second-order sentences. These automata recognize the terms over fixed finite signatures that define graphs satisfying the given sentences. However, this construction produces automata of hyper-exponential sizes, and is thus impossible to use in practice in many cases. To overcome this difficulty, we propose to specify the transitions of automata by programs instead of tables. Such automata are called fly-automata. By using them, we can check certain monadic second-order graph properties with limited quantifier alternation depth, that are nevertheless interesting for Graph Theory. We give explicit constructions of automata relative to graphs of bounded clique-width, and we report on experiments. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "Automata for the verification of monadic second-order graph properties", "paper_id": "WOS:000312521800008"}