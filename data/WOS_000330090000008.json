{"auto_keywords": [{"score": 0.03551413386874933, "phrase": "ca"}, {"score": 0.015438642732186699, "phrase": "streaming_applications"}, {"score": 0.01151441158251265, "phrase": "efficient_and_predictable_way"}, {"score": 0.00481495049065317, "phrase": "predictable_heterogeneous_mpsoc_designs"}, {"score": 0.004677965073019951, "phrase": "important_class"}, {"score": 0.004610934029355486, "phrase": "emerging_embedded_systems"}, {"score": 0.0045612889352793584, "phrase": "smart_camera_network"}, {"score": 0.004528488165249491, "phrase": "unmanned_vehicles"}, {"score": 0.004479726755921316, "phrase": "industrial_printing"}, {"score": 0.004305364955542171, "phrase": "real-time_constraints"}, {"score": 0.004228359613476549, "phrase": "increasing_demand"}, {"score": 0.004034504342397309, "phrase": "specific_ip_cores"}, {"score": 0.0038634281440398355, "phrase": "key_challenges"}, {"score": 0.003808024029417427, "phrase": "ip_cores"}, {"score": 0.0036597104126905437, "phrase": "inter-core_communication"}, {"score": 0.003392363211686023, "phrase": "predictable_high-performance_communication_assist"}, {"score": 0.003283830127906969, "phrase": "design_challenges"}, {"score": 0.0032134045046357876, "phrase": "zero_throughput_overhead"}, {"score": 0.003190265467214105, "phrase": "negligible_latency_overhead"}, {"score": 0.0031558679589831287, "phrase": "significantly_less_resource_usage"}, {"score": 0.0031218401638802053, "phrase": "existing_ca_designs"}, {"score": 0.0030328769643087066, "phrase": "unified_abstract_interface"}, {"score": 0.0029785631356166594, "phrase": "accelerator_ip_cores"}, {"score": 0.0029571101238632783, "phrase": "flexible_data_access_support"}, {"score": 0.0029041492019217033, "phrase": "proposed_ca_design"}, {"score": 0.002852134080296829, "phrase": "predictable_heterogeneous_multi-processor_platform_template"}, {"score": 0.0027409477035216195, "phrase": "predictable_design_flow"}, {"score": 0.0027113815712365924, "phrase": "synchronous_data_flow"}, {"score": 0.0026918597485438285, "phrase": "sdf"}, {"score": 0.0026532001044943117, "phrase": "design_time_analysis"}, {"score": 0.002624577999455744, "phrase": "accurate_sdf_model"}, {"score": 0.00251313643823856, "phrase": "heterogeneous_mpsocs"}, {"score": 0.0024503217593801587, "phrase": "case_study"}, {"score": 0.002406415352892016, "phrase": "complete_high-speed_vision_processing_pipeline"}, {"score": 0.002354762471810519, "phrase": "organic_light_emitting_diode"}, {"score": 0.002320943211698446, "phrase": "screen_printing"}, {"score": 0.0022711207841260767, "phrase": "proposed_platform"}, {"score": 0.002198380879018061, "phrase": "analysis_effort"}, {"score": 0.002151183757599893, "phrase": "proposed_ca-based_design_flow"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Streaming application", " MPSoCs", " Communication assist", " SDF", " Predictability", " Architecture template", " Design flow"], "paper_abstract": "Streaming applications are an important class of applications in emerging embedded systems such as smart camera network, unmanned vehicles, and industrial printing. These applications are usually very computationally intensive and have real-time constraints. To meet the increasing demand for performance and efficiency in these applications, the use of application specific IP cores in heterogeneous Multi-Processor System-on-Chips (MPSoCs) becomes inevitable. However, two of the key challenges in integrating these IP cores into MPSoCs are (i) how to properly handle inter-core communication; (ii) how to map streaming applications in an efficient and predictable way. In this paper, we first present a predictable high-performance communication assist (CA) that helps to tackle these design challenges. The proposed CA has zero throughput overhead, negligible latency overhead, and significantly less resource usage compared to existing CA designs. The proposed CA also provides a unified abstract interface for both processors and accelerator IP cores with flexible data access support. Based on the proposed CA design, we present a predictable heterogeneous multi-processor platform template for streaming applications. The template is used in a predictable design flow that uses Synchronous Data Flow (SDF) graphs for design time analysis. An accurate SDF model of our CA is introduced, enabling the mapping of applications onto heterogeneous MPSoCs in an efficient and predictable way. As a case study, we map the complete high-speed vision processing pipeline of an industrial application, Organic Light Emitting Diode (OLED) screen printing, onto one instance of the proposed platform. The result demonstrates that system design and analysis effort is greatly reduced with the proposed CA-based design flow. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Efficient communication support in predictable heterogeneous MPSoC designs for streaming applications", "paper_id": "WOS:000330090000008"}