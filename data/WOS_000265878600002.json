{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed-memory_quantum_multicomputer"}, {"score": 0.004618720776729413, "phrase": "quantum_arithmetic_algorithms"}, {"score": 0.004510184935928004, "phrase": "distributed_quantum_computer"}, {"score": 0.004249825947483216, "phrase": "node_capacity"}, {"score": 0.0037731618765688584, "phrase": "teleported_gates"}, {"score": 0.003706410380455668, "phrase": "entangled_pairs"}, {"score": 0.0034922880300145283, "phrase": "relevant_qubits"}, {"score": 0.003450966222451678, "phrase": "quantum_teleportation"}, {"score": 0.0033101397746161843, "phrase": "local_gates"}, {"score": 0.0030819219279832224, "phrase": "teledata_approach"}, {"score": 0.0029561107046138136, "phrase": "-ripple_adders"}, {"score": 0.0028693932802982417, "phrase": "teleportation_block"}, {"score": 0.002768674345336861, "phrase": "key_quantum_operations"}, {"score": 0.0026714812866037584, "phrase": "node_size"}, {"score": 0.002472412920623605, "phrase": "linear_network_topology"}, {"score": 0.002399850604120431, "phrase": "broad_range"}, {"score": 0.002371424085814217, "phrase": "system_sizes"}, {"score": 0.0023433334920926713, "phrase": "performance_parameters"}, {"score": 0.002142970278347126, "phrase": "shor's_algorithm"}, {"score": 0.0021049977753042253, "phrase": "large_numbers"}], "paper_keywords": ["Quantum computing", " quantum computer architecture"], "paper_abstract": "We evaluate the performance of quantum arithmetic algorithms run on a distributed quantum computer (a quantum multicomputer). We vary the node capacity and I/O capabilities, and the network topology. The tradeoff of choosing between gates executed remotely, through \"teleported gates\" on entangled pairs of qubits (telegate), versus exchanging the relevant qubits via quantum teleportation, then executing the algorithm using local gates (teledata), is examined. We show that the teledata approach performs better, and that carry-ripple adders perform well when the teleportation block is decomposed so that the key quantum operations can be parallelized. A node size of only a few logical qubits performs adequately provided that the nodes have two transceiver qubits. A linear network topology performs acceptably for a broad range of system sizes and performance parameters. We therefore recommend pursuing small, high-I/O bandwidth nodes and a simple network. Such a machine will run Shor's algorithm for factoring large numbers efficiently.", "paper_title": "Arithmetic on a Distributed-Memory Quantum Multicomputer", "paper_id": "WOS:000265878600002"}