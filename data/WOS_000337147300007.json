{"auto_keywords": [{"score": 0.03208723958700832, "phrase": "previous_algorithms"}, {"score": 0.00481495049065317, "phrase": "efficient_exact_algorithms"}, {"score": 0.004263972370406983, "phrase": "length_l"}, {"score": 0.0038375280115736958, "phrase": "\"quorum\"_version"}, {"score": 0.0033433365160336842, "phrase": "input_strings"}, {"score": 0.0028425481299483254, "phrase": "search_tree"}, {"score": 0.002751751956416832, "phrase": "l-length_substring"}, {"score": 0.002685558057339722, "phrase": "input_string"}, {"score": 0.00235843888868088, "phrase": "computation_time"}, {"score": 0.002246292543825748, "phrase": "computational_experiments"}, {"score": 0.0021049977753042253, "phrase": "proposed_algorithms"}], "paper_keywords": ["Planted (l, d)-motif search problem", " closest substring problem", " exact enumerative algorithm", " tree search"], "paper_abstract": "In this paper efficient exact algorithms are proposed for the planted (l, d)-motif search problem. This problem is to find all motifs of length l that are planted in each input string with at most d mismatches. The \"quorum\" version of this problem is also treated in this paper to find motifs planted not in all input strings but in at least q input strings. The proposed algorithms are based on the previous algorithms called qPMSPruneI and qPMS7 that traverse a search tree starting from a l-length substring of an input string. To improve these previous algorithms, several techniques are introduced, which contribute to reducing the computation time for the traversal. In computational experiments, it will be shown that the proposed algorithms outperform the previous algorithms.", "paper_title": "Improved Exact Enumerative Algorithms for the Planted (l, d)-Motif Search Problem", "paper_id": "WOS:000337147300007"}