{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "concurrent_heap_buffer_overflow_monitoring"}, {"score": 0.004229556887896042, "phrase": "severe_threat"}, {"score": 0.004061584718427419, "phrase": "previous_solutions"}, {"score": 0.0035965032173588753, "phrase": "target_programs"}, {"score": 0.003398015125667192, "phrase": "considerable_performance_overhead"}, {"score": 0.0028890603352364273, "phrase": "multi-core_technology"}, {"score": 0.0027295084882654917, "phrase": "existing_programs"}, {"score": 0.002578745296475411, "phrase": "heap_buffer"}, {"score": 0.002436289099444074, "phrase": "latest_heap_protection_systems"}, {"score": 0.002320449502337321, "phrase": "stronger_security_guarantees"}, {"score": 0.0021745003291048356, "phrase": "heap_buffer_overflow_attacks"}], "paper_keywords": ["heap buffer overflow", " multi-core technology"], "paper_abstract": "Heap buffer overflow has been extensively studied for many years, but it remains a severe threat to software security. Previous solutions suffer from limitations in that: 1) Some methods need to modify the target programs; 2) Most methods could impose considerable performance overhead. In this paper, we present iCruiser, an efficient heap buffer overflow monitoring system that uses the multi-core technology. Our system is compatible with existing programs, and it can detect the heap buffer overflows concurrently. Compared with the latest heap protection systems, our approach can achieves stronger security guarantees. Experiments show that iCruiser can detect heap buffer overflow attacks effectively with a little performance overhead.", "paper_title": "iCruiser: An Improved Approach for Concurrent Heap Buffer Overflow Monitoring", "paper_id": "WOS:000332590900026"}