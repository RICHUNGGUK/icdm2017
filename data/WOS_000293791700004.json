{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "planted_clique_and_biclique_problems"}, {"score": 0.004602773636967002, "phrase": "maximum_clique"}, {"score": 0.004444203710097837, "phrase": "maximum-edge_biclique"}, {"score": 0.004377921202912336, "phrase": "bipartite_graph"}, {"score": 0.004271369169067377, "phrase": "np"}, {"score": 0.004081385289516914, "phrase": "matrix-rank_minimization"}, {"score": 0.003940706575253453, "phrase": "nuclear_norm"}, {"score": 0.0036921366375716005, "phrase": "compressive_sensing"}, {"score": 0.0035292625231068517, "phrase": "effective_way"}, {"score": 0.00347657813672945, "phrase": "rank_optimization_problems"}, {"score": 0.003407549468745519, "phrase": "special_case"}, {"score": 0.003356675879109443, "phrase": "input_graph"}, {"score": 0.003306559295382181, "phrase": "planted_clique"}, {"score": 0.002976019715894587, "phrase": "exact_solution"}, {"score": 0.002931569771634119, "phrase": "original_instance"}, {"score": 0.0027054473441439422, "phrase": "first_analysis"}, {"score": 0.002665027876903159, "phrase": "diversionary_edges"}, {"score": 0.002398464540102246, "phrase": "random_edges"}, {"score": 0.002362620540317279, "phrase": "planted_clique_problem"}, {"score": 0.002269685237458784, "phrase": "alon"}, {"score": 0.0022469703184050953, "phrase": "krivelevich"}, {"score": 0.0022245676786957417, "phrase": "sudakov"}, {"score": 0.002180308335855816, "phrase": "feige"}, {"score": 0.0021585087815701124, "phrase": "krauthgamer"}, {"score": 0.0021049977753042253, "phrase": "different_techniques"}], "paper_keywords": [""], "paper_abstract": "We consider the problems of finding a maximum clique in a graph and finding a maximum-edge biclique in a bipartite graph. Both problems are NP-hard. We write both problems as matrix-rank minimization and then relax them using the nuclear norm. This technique, which may be regarded as a generalization of compressive sensing, has recently been shown to be an effective way to solve rank optimization problems. In the special case that the input graph has a planted clique or biclique (i.e., a single large clique or biclique plus diversionary edges), our algorithm successfully provides an exact solution to the original instance. For each problem, we provide two analyses of when our algorithm succeeds. In the first analysis, the diversionary edges are placed by an adversary. In the second, they are placed at random. In the case of random edges for the planted clique problem, we obtain the same bound as Alon, Krivelevich and Sudakov as well as Feige and Krauthgamer, but we use different techniques.", "paper_title": "Nuclear norm minimization for the planted clique and biclique problems", "paper_id": "WOS:000293791700004"}