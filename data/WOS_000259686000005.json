{"auto_keywords": [{"score": 0.04007336527380684, "phrase": "commercial_softwares"}, {"score": 0.0312965909163108, "phrase": "abaqus"}, {"score": 0.00481495049065317, "phrase": "finite_element_commercial_software_abaqus"}, {"score": 0.0047602693158272655, "phrase": "academic_research_code"}, {"score": 0.004530371221172796, "phrase": "efficient_method"}, {"score": 0.004377719094086111, "phrase": "best_qualities"}, {"score": 0.004278807087784626, "phrase": "complex_problem"}, {"score": 0.00421410521089045, "phrase": "finite_element_emethod"}, {"score": 0.003934795713147731, "phrase": "new_models"}, {"score": 0.0038900709793274484, "phrase": "academic_softwares"}, {"score": 0.0035230711775515854, "phrase": "commercial_fem_applications"}, {"score": 0.003456554957885269, "phrase": "additional_features"}, {"score": 0.0034303002275695446, "phrase": "physical_models"}, {"score": 0.003404244237372396, "phrase": "boundary_conditions"}, {"score": 0.003365529624506815, "phrase": "programing_interface"}, {"score": 0.003314591878914152, "phrase": "user_routines"}, {"score": 0.003276893480994257, "phrase": "internal_data_structures"}, {"score": 0.0032027739752274, "phrase": "subroutine_parameters"}, {"score": 0.0031784407245606704, "phrase": "global_variables"}, {"score": 0.003130325700934738, "phrase": "internal_modules"}, {"score": 0.0029675701595142656, "phrase": "commercial_software"}, {"score": 0.002867425368894356, "phrase": "user-defined_mechanical_material"}, {"score": 0.0027286918886186245, "phrase": "mechanical_behaviour"}, {"score": 0.0026771333996253783, "phrase": "code_coupling"}, {"score": 0.002646665861584495, "phrase": "communication_procedure"}, {"score": 0.0025089940342989227, "phrase": "easily_original_behaviour_law"}, {"score": 0.0023424328921363585, "phrase": "proposed_implementations"}, {"score": 0.0023157656212149367, "phrase": "computational_time"}, {"score": 0.002263336340041527, "phrase": "industrial_test"}, {"score": 0.0022120914337992034, "phrase": "original_behaviour_model"}], "paper_keywords": ["code coupling", " interprocess communication", " ABAQUS", " HEREZH plus", " Umat", " object-oriented programming", " finite element analysis"], "paper_abstract": "The aim of this paper is to describe an efficient method to connect two independent softwares so as to jointly use best qualities of each software around a complex problem solved by the finite element emethod (FEM). This connection makes it possible to extend quickly and easily the applicability of new models developed in academic softwares, by their simultaneous use with commercial softwares. This is particularly interesting when these models are vey difficult to implement directly in commercial softwares. Most of the commercial FEM applications allow users to add additional features, physical models or boundary conditions via a programing interface. Within these user routines, access to internal data structures is possible, either through subroutine parameters and global variables, or via internal modules for reading and storing data. We use these capabilities to link the commercial software ABAQUS and an academic object-oriented C++ software HEREZH++, via the user-defined mechanical material behaviour (Umat). In this interface, HEREZH++ computes the mechanical behaviour of material and the code coupling performs a communication procedure between ABAQUS and HEREZH++. This paper describes this architecture which allows to implement easily original behaviour law and an interface written in c/C++. Several test samples are presented to show the efficiency and accuracy of the proposed implementations concernning the computational time. In particular, an industrial test is carried out with an original behaviour model of clasto-viscohysteresis which would have been very difficult to implement directly in ABAQUS. (c) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Asynchronous interface between a finite element commercial software ABAQUS and an academic research code HEREZH plus", "paper_id": "WOS:000259686000005"}