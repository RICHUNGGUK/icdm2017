{"auto_keywords": [{"score": 0.049795191973436195, "phrase": "web_services"}, {"score": 0.014194740210616142, "phrase": "composition_framework"}, {"score": 0.010612387000973441, "phrase": "web_service_composition"}, {"score": 0.007732388625924075, "phrase": "composition_process"}, {"score": 0.0053523712145144885, "phrase": "sawsdl"}, {"score": 0.005073698526778285, "phrase": "nfsl"}, {"score": 0.004758053266234474, "phrase": "application-to-application_interactions"}, {"score": 0.004510184935928004, "phrase": "existing_web_services"}, {"score": 0.004470141828110505, "phrase": "new_web_services"}, {"score": 0.004352123742308589, "phrase": "novel_architecture"}, {"score": 0.004287903986946197, "phrase": "proposed_architecture"}, {"score": 0.004249825947483216, "phrase": "standard_web_services_business_model"}, {"score": 0.0041995784967999985, "phrase": "web_services_composition"}, {"score": 0.0038069853794502353, "phrase": "formal_methods"}, {"score": 0.0032612451286025555, "phrase": "business_model"}, {"score": 0.0030273620861817055, "phrase": "web_service_composer"}, {"score": 0.003000444353938951, "phrase": "overall_responsibility"}, {"score": 0.0028354207806133153, "phrase": "assembly_techniques"}, {"score": 0.002793518637161653, "phrase": "actual_composition"}, {"score": 0.0027034948760997564, "phrase": "description_framework"}, {"score": 0.002532035301903554, "phrase": "common_semantic_domain"}, {"score": 0.0025169985845388096, "phrase": "hol"}, {"score": 0.0022077827041801193, "phrase": "simple_new_language"}, {"score": 0.002155783775582723, "phrase": "msc"}, {"score": 0.002142970278347126, "phrase": "existing_languages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Web service composition", " Web service business model", " Description framework", " Composition framework", " Matchmaking technique"], "paper_abstract": "Web services enable application-to-application interactions over networks. They have functional, behavioral, non-functional, and semantic characteristics. Web service composition is the mechanism for combining and reusing existing Web services to create new Web services. In this paper, we propose a novel architecture for Web service composition. The proposed architecture extends the standard Web services business model to explicitly support Web services composition. It also enables the description of Web services with all four of their characteristics (i.e. functional, behavioral, non-functional, and semantic characteristics). Furthermore, it uses formal methods (that take into account all of these characteristics) to enable the matching, selection, and assembling of the Web services that are needed in the composition process. The architecture is made up of three components: a business model, a composition framework, and a description framework. The business model introduces three new entities: a Web service composer, a Web service composition registry, and a third-party Web service provider. The Web service composer has the overall responsibility of the composition process and is realized by the composition framework. The composition framework uses matchmaking, categorization, and assembly techniques to carry out the actual composition, taking into account all of the characteristics. The description framework provides the languages required to describe the Web services in both the business model and the composition framework. It also integrates the languages in a common semantic domain of HOL (an expressive high-level logic). These languages are SAWSDL (a semantic and functional language), MSC (a formal behavioral language), and NFSL (an XML-based nonfunctional language). NFSL is a simple new language that we propose, while SAWSDL and MSC are existing languages. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "A novel architecture for Web service composition", "paper_id": "WOS:000300862900026"}