{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "real-time_distributed_control_system_benchmarking"}, {"score": 0.004293840838533456, "phrase": "simulation-agent_interface"}, {"score": 0.0037360045780015804, "phrase": "agent-based_systems"}, {"score": 0.0036453427552753533, "phrase": "physical_device_level"}, {"score": 0.002898127432512101, "phrase": "planning_and_scheduling_level"}, {"score": 0.002583931950389087, "phrase": "proxy_design_pattern"}, {"score": 0.002380534385718454, "phrase": "resulting_software_design_pattern"}, {"score": 0.0023418133729330303, "phrase": "distributed_control_system_benchmarking"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["distributed control", " IEC 61499", " object-oriented programming", " discrete-event simulation"], "paper_abstract": "In this paper, we describe the design and development of a simulation-agent interface for real-time distributed control system benchmarking. This work is motivated by the need to test the feasibility of extending agent-based systems to the physical device level in manufacturing and other industrial automation systems. Our work focuses on the development of hybrid physical/simulation environment that can be used to perform tests at both the physical device level, as well as the planning and scheduling level of control. As part of this work, we have extended the proxy design pattern for this application. This paper focuses on the resulting software design pattern for distributed control system benchmarking and provides examples of its use in our hybrid physical/simulation environment. (c) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "Design patterns for real-time distributed control system benchmarking", "paper_id": "WOS:000258627900003"}