{"auto_keywords": [{"score": 0.03856823703871945, "phrase": "crawler"}, {"score": 0.01157822955510738, "phrase": "system_monitoring"}, {"score": 0.00481495049065317, "phrase": "wireless_and_mobile_systems"}, {"score": 0.004690694501758065, "phrase": "volatile_environmental_conditions"}, {"score": 0.004569630374630379, "phrase": "packet_loss"}, {"score": 0.004428452434981208, "phrase": "cross-layer_information"}, {"score": 0.004314127287770832, "phrase": "system_components"}, {"score": 0.004051595625804513, "phrase": "application_and_protocol_developers"}, {"score": 0.003988487841970088, "phrase": "convenient_way"}, {"score": 0.003373334961160647, "phrase": "wireless_protocols"}, {"score": 0.003251920460276645, "phrase": "complicated_access"}, {"score": 0.0032180376288035296, "phrase": "relevant_system_information"}, {"score": 0.0031513240597392843, "phrase": "unified_interface"}, {"score": 0.0029905104479072482, "phrase": "versatile_design"}, {"score": 0.0028828348726682965, "phrase": "convenient_and_declarative_way"}, {"score": 0.0027645030021576926, "phrase": "cross-layer_optimizations"}, {"score": 0.0026096659285441384, "phrase": "necessary_support"}, {"score": 0.00256895975568914, "phrase": "cross-layer_conflicts"}, {"score": 0.0025025186963415, "phrase": "performance_degradation"}, {"score": 0.002476424729269258, "phrase": "multiple_optimizations"}, {"score": 0.002412371116984224, "phrase": "protocol_stack"}, {"score": 0.0021951623041245897, "phrase": "different_areas"}, {"score": 0.002172266188075892, "phrase": "wireless_networking"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Cross-layer design", " Cross-layer conflict detection", " Software architecture", " Runtime adaptive systems", " Cross-layer interactions"], "paper_abstract": "Applications and protocols for wireless and mobile systems have to deal with volatile environmental conditions such as interference, packet loss, and mobility. Utilizing cross-layer information from other protocols and system components such as sensors can improve their performance and responsiveness. However, application and protocol developers lack a convenient way of specifying, monitoring, and experimenting with optimizations to evaluate their cross-layer ideas. We present CRAWLER, a novel experimentation architecture for system monitoring and cross-layer-coordination that facilitates evaluation of applications and wireless protocols. It alleviates the problem of complicated access to relevant system information by providing a unified interface to application, protocol and system information. The versatile design of this interface further enables a convenient and declarative way to specify and experiment with compositions of cross-layer optimizations and their adaptions at runtime. CRAWLER also provides the necessary support to detect cross-layer conflicts, and hence prevents performance degradation when multiple optimizations are enabled across the protocol stack. We demonstrate the usability of CRAWLER for system monitoring and cross-layer optimizations with three use cases from different areas of wireless networking. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Harnessing cross-layer-design", "paper_id": "WOS:000329595000015"}