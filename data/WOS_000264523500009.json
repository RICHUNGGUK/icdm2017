{"auto_keywords": [{"score": 0.027849952347318373, "phrase": "phsd"}, {"score": 0.00481495049065317, "phrase": "parallel_dram"}, {"score": 0.004774530554776604, "phrase": "scale_router_buffers"}, {"score": 0.0046161999598320486, "phrase": "high-performance_buffers"}, {"score": 0.004577440795549049, "phrase": "high-end_internet_routers"}, {"score": 0.00436999693004875, "phrase": "sram"}, {"score": 0.004333283735537634, "phrase": "dram_technologies"}, {"score": 0.004207230913063179, "phrase": "routers'_high_speed_and_capacity_requirements"}, {"score": 0.004084829853870028, "phrase": "router_buffers"}, {"score": 0.004016485454498076, "phrase": "multiple_flow_queues"}, {"score": 0.003916098498242888, "phrase": "computer_memory_buffers"}, {"score": 0.0037701851296383405, "phrase": "major_objective"}, {"score": 0.003660452313567116, "phrase": "expensive_but_fast_sram"}, {"score": 0.0036144035798673967, "phrase": "acceptable_delay_guarantees"}, {"score": 0.0032800186243040663, "phrase": "architectural_limitations"}, {"score": 0.0031845067058084613, "phrase": "required_sram_size"}, {"score": 0.002914288956035066, "phrase": "large_number"}, {"score": 0.0026782279715171866, "phrase": "memory_management_algorithms"}, {"score": 0.0024405312482831646, "phrase": "order_delivery"}, {"score": 0.0023395610923736595, "phrase": "detailed_analysis"}, {"score": 0.0023100907305651872, "phrase": "proposed_algorithms"}, {"score": 0.002280990744438186, "phrase": "extensive_simulations"}, {"score": 0.002122866345896679, "phrase": "sram_requirements"}, {"score": 0.0021049977753042253, "phrase": "packet_delay"}], "paper_keywords": ["Router memory", " SRAM/DRAM", " packet scheduling"], "paper_abstract": "This paper addresses the design of high-performance buffers for high-end Internet routers. The buffers are typically implemented using a combination of SRAM and DRAM technologies in order to simultaneously meet the routers' high speed and capacity requirements. The major challenge in designing router buffers is to maintain multiple flow queues in the memory, unlike computer memory buffers (i.e., memory system). The major objective is to minimize the use of expensive but fast SRAM while providing acceptable delay guarantees to packets. In this paper, we first investigate hybrid SRAM/DRAM solutions proposed in the past. We show that one of the architectural limitations of these solutions is that the required SRAM size grows linearly with the number of flows in the system. This prevents the solutions from scaling to support a large number of flows. We then break down this shortcoming by proposing a parallel hybrid SRAM/DRAM (PHSD) architecture. We design a series of memory management algorithms (MMAs) for PHSD, based on tradeoffs between the complexity of the MMAs and the guarantee of in-order delivery of packets (segmentations). We perform a detailed analysis of the proposed algorithms and conduct extensive simulations to show that PHSD can significantly outperform solutions proposed in the past in terms of the SRAM requirements and packet delay.", "paper_title": "Using Parallel DRAM to Scale Router Buffers", "paper_id": "WOS:000264523500009"}