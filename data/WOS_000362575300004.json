{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "heterogeneous_multiprocessors"}, {"score": 0.015692133998434013, "phrase": "optimal_solutions"}, {"score": 0.008021551755409998, "phrase": "first_phase"}, {"score": 0.004631099806015235, "phrase": "mainstream_computing_platforms"}, {"score": 0.004492950096237056, "phrase": "critical_applications"}, {"score": 0.004415857432588371, "phrase": "heterogeneous_systems"}, {"score": 0.0043213410601860985, "phrase": "homogeneous_systems"}, {"score": 0.00415625929636759, "phrase": "system_failures"}, {"score": 0.003980191398041843, "phrase": "reliability-guaranteed_task_assignment"}, {"score": 0.0037623642073222547, "phrase": "two-phase_approach"}, {"score": 0.003480230347985338, "phrase": "reliability_requirement"}, {"score": 0.0033471722682967046, "phrase": "minimum_total_system_cost"}, {"score": 0.003177615880037735, "phrase": "tree-structured_task_graphs"}, {"score": 0.00308269056870936, "phrase": "input_graph"}, {"score": 0.0030428787018636147, "phrase": "directed_acyclic_graph"}, {"score": 0.0029647862293448895, "phrase": "task_assignment_problem"}, {"score": 0.0029392122272953606, "phrase": "np-complete"}, {"score": 0.0028145455182562807, "phrase": "integer_linear_programming"}, {"score": 0.0026488343783448273, "phrase": "polynomial-time_heuristic_algorithm"}, {"score": 0.0025585490847951703, "phrase": "second_phase"}, {"score": 0.0024078737745407614, "phrase": "minimum_resource_scheduling_algorithm"}, {"score": 0.002335889180060105, "phrase": "feasible_configuration"}, {"score": 0.0022562464662197867, "phrase": "experimental_results"}, {"score": 0.0022174469839432013, "phrase": "proposed_algorithms"}, {"score": 0.002188784900536406, "phrase": "ilp_formulation"}, {"score": 0.0021418339161425994, "phrase": "total_cost"}, {"score": 0.0021049977753042253, "phrase": "previous_work"}], "paper_keywords": ["Task assignment", " Scheduling", " Heterogeneous", " Multiprocessor", " System reliability"], "paper_abstract": "Heterogeneous multiprocessors have become the mainstream computing platforms nowadays and are increasingly employed for critical applications. Inherently, heterogeneous systems are more complex than homogeneous systems. The added complexity increases the potential of system failures. This paper addresses this problem by proposing a reliability-guaranteed task assignment and scheduling approach for heterogeneous multiprocessors considering timing constraint. We propose a two-phase approach to solve this problem. In the first phase, we determine assignments for heterogeneous multiprocessors such that both reliability requirement and timing constraint can be satisfied with the minimum total system cost. Efficient algorithms are proposed to produce optimal solutions for simple-path and tree-structured task graphs in polynomial time. When the input graph is a directed acyclic graph (DAG), the task assignment problem is NP-Complete. In this situation, we first develop an Integer Linear Programming (ILP) formulation to generate optimal solutions. Then, we propose a polynomial-time heuristic algorithm to find near optimal solutions. In the second phase, based on the assignments obtained in the first phase, we propose a minimum resource scheduling algorithm to generate a schedule and a feasible configuration that uses as little resource as possible. Experimental results show that the proposed algorithms and the ILP formulation can effectively reduce the total cost compared with the previous work.", "paper_title": "Reliability-Guaranteed Task Assignment and Scheduling for Heterogeneous Multiprocessors Considering Timing Constraint", "paper_id": "WOS:000362575300004"}