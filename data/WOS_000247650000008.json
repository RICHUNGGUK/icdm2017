{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "genetic_programming"}, {"score": 0.04927872927155838, "phrase": "code_bloat"}, {"score": 0.004539005582217309, "phrase": "main_issues"}, {"score": 0.004171891198117439, "phrase": "search_process"}, {"score": 0.004067635935640407, "phrase": "program_structures"}, {"score": 0.003932654396285872, "phrase": "computer_resources"}, {"score": 0.0036144035798673967, "phrase": "neutral_offspring"}, {"score": 0.003584025547693836, "phrase": "controlling_operators"}, {"score": 0.0027819985260847577, "phrase": "new_operators"}, {"score": 0.002735392281320413, "phrase": "experimental_results"}, {"score": 0.00266693888510356, "phrase": "nlno"}, {"score": 0.0023895163231632717, "phrase": "nno"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["genetic programming", " neutral offspring code bloat", " parsimony pressure"], "paper_abstract": "Code bloat, one of the main issues of genetic programming (GP), slows down the search process, destroys program structures, and exhausts computer resources. To deal with these issues, two kinds of neutral offspring controlling operators are proposed-non-neutral offspring (NNO) operators and non-larger neutral offspring (NLNO) operators. Two GP benchmark problems-symbolic regression and 11-multiplexer-are used to test the new operators. Experimental results indicate that NLNO is able to confine code bloat significantly and improve performance simultaneously, which NNO cannot do. (c) 2006 Pattern Recognition Society. Published by Elsevier Ltd. All rights reserved.", "paper_title": "Neutral offspring controlling operators in genetic programming", "paper_id": "WOS:000247650000008"}