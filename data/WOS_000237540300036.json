{"auto_keywords": [{"score": 0.04164228196739029, "phrase": "root_set"}, {"score": 0.004815315858763141, "phrase": "distributed"}, {"score": 0.004707188147442449, "phrase": "mobile_actor_systems"}, {"score": 0.004524348699657099, "phrase": "automatic_distributed_garbage_collection"}, {"score": 0.004473916666940813, "phrase": "gc"}, {"score": 0.004324031677173549, "phrase": "application_development"}, {"score": 0.004251210982670317, "phrase": "code_quality"}, {"score": 0.00417961150804265, "phrase": "resource_management"}, {"score": 0.004086010164600727, "phrase": "active_objects"}, {"score": 0.003882970272082245, "phrase": "sufficient_condition"}, {"score": 0.003817548980308163, "phrase": "actor_garbage"}, {"score": 0.0037532257703888315, "phrase": "passive_object"}, {"score": 0.0035869274480340727, "phrase": "actor_systems"}, {"score": 0.003526476304712492, "phrase": "practical_actor_languages"}, {"score": 0.003148612096891635, "phrase": "standard_input_or_output_streams"}, {"score": 0.0029920129598858545, "phrase": "pseudo_roots"}, {"score": 0.0027480831196871093, "phrase": "pseudo_roots_use"}, {"score": 0.002398382089724878, "phrase": "new_direction"}, {"score": 0.0023713273141757326, "phrase": "actor_gc"}, {"score": 0.0022661190184053628, "phrase": "distributed_cc_framework"}, {"score": 0.002153316680437517, "phrase": "automatic_life_time_management"}, {"score": 0.002129020447793464, "phrase": "mobile_reactive_processes"}, {"score": 0.0021049977753042253, "phrase": "unordered_asynchronous_communication"}], "paper_keywords": [""], "paper_abstract": "Automatic distributed garbage collection (GC) gives abstraction to grid application development, promoting code quality and improving resource management. Unreachability of active objects or actors from the root set is not a sufficient condition to collect actor garbage, making passive object CC algorithms unsafe when directly used on actor systems. In practical actor languages, all actors have references to the root set since they can interact with users, e.g., through standard input or output streams. Based on this observation, we introduce pseudo roots: a dynamic set of actors that can be viewed as the root set. Pseudo roots use protected (undeletable) references to ensure that no actors are erroneously collected even with messages in transit. Following this idea, we introduce a new direction of actor GC, and demonstrate it by developing a distributed CC framework. The framework can thus be used for automatic life time management of mobile reactive processes with unordered asynchronous communication.", "paper_title": "Distributed garbage collection for mobile actor systems: The pseudo root approach", "paper_id": "WOS:000237540300036"}