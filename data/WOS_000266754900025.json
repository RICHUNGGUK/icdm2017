{"auto_keywords": [{"score": 0.04593635631868283, "phrase": "bottleneck_stage"}, {"score": 0.020846807616382364, "phrase": "bottleneck-based_heuristics"}, {"score": 0.007581397819257637, "phrase": "total_tardiness"}, {"score": 0.0074513032532259734, "phrase": "unrelated_parallel_machines"}, {"score": 0.007146874517976882, "phrase": "basic_tabu_search_algorithm"}, {"score": 0.006201469826290589, "phrase": "flow_line"}, {"score": 0.006010972223017405, "phrase": "upstream_stages"}, {"score": 0.005398258826638249, "phrase": "new_approach"}, {"score": 0.004815008549960207, "phrase": "bottleneck"}, {"score": 0.00466684417181804, "phrase": "flexible_flow_line"}, {"score": 0.004539005582217309, "phrase": "flexible_flow_line_problem"}, {"score": 0.0034615969985956866, "phrase": "downstream_stages"}, {"score": 0.003285725064532174, "phrase": "arrival_times"}, {"score": 0.0030971473486283664, "phrase": "iteratively_schedule"}, {"score": 0.002723186210025975, "phrase": "comparison_purposes"}, {"score": 0.002704306866425829, "phrase": "seven_experimental_factors"}, {"score": 0.002630085891013006, "phrase": "ten_test_problems"}, {"score": 0.002566811158487033, "phrase": "computational_results"}, {"score": 0.002479043701859468, "phrase": "test_problems"}, {"score": 0.0024447807655923926, "phrase": "effective_performance"}, {"score": 0.0022963507669678815, "phrase": "tabu_search_algorithm"}, {"score": 0.0022101055924375725, "phrase": "experimental_factors"}, {"score": 0.0021871503075921537, "phrase": "dispatching_rules"}, {"score": 0.0021049977753042253, "phrase": "interesting_insights"}], "paper_keywords": ["Bottleneck", " Flexible flow line", " Unrelated parallel machines", " Dispatching rules", " Tabu search algorithm", " Total tardiness"], "paper_abstract": "This paper considers the flexible flow line problem with unrelated parallel machines at each stage and with a bottleneck stage on the line. The objective of the problem is to minimize the total tardiness. Two bottleneck-based heuristics with three machine selection rules are proposed to solve the problem. The heuristics first develop an indicator to identify a bottleneck stage in the flow line, and then separate the flow line into the upstream stages, the bottleneck stage, and the downstream stages. The upstream stages are the stages ahead of the bottleneck stage and the downstream stages are the stages behind the bottleneck stage. A new approach is developed to find the arrival times of the jobs at the bottleneck stage. Using the new approach, the bottleneck-based heuristics develop two decision rules to iteratively schedule the jobs at the bottleneck stage, the upstream stages, and the downstream stages. In order to evaluate the performance of the bottleneck-based heuristics, seven commonly used dispatching rules and a basic tabu search algorithm are investigated for comparison Purposes. Seven experimental factors are used to design 128 production scenarios, and ten test problems are generated for each scenario. Computational results show that the bottleneck-based heuristics significantly outperform all the dispatching rules for the test problems. Although the effective performance of the bottleneck-based heuristics is inferior to the basic tabu search algorithm, the bottleneck-based heuristics are much more efficient than the tabu search algorithm. Also, a test of the effect of the experimental factors on the dispatching rules, the bottleneck-based heuristics, and the basic tabu search algorithm is performed, and some interesting insights are discovered. (C) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Bottleneck-based heuristics to minimize total tardiness for the flexible flow line with unrelated parallel machines", "paper_id": "WOS:000266754900025"}