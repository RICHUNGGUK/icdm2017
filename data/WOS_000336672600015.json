{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "stochastic_flow_networks"}, {"score": 0.015543934667232707, "phrase": "stochastic_flow_network"}, {"score": 0.01363082903722394, "phrase": "output_edges"}, {"score": 0.008448308059003245, "phrase": "target_distributions"}, {"score": 0.004706699397060569, "phrase": "directed_graph"}, {"score": 0.004671156704912419, "phrase": "incoming_edges"}, {"score": 0.004412965940679449, "phrase": "input_edges"}, {"score": 0.0038498211283780484, "phrase": "incoming_edge"}, {"score": 0.0036924762294207633, "phrase": "predefined_probability_distribution"}, {"score": 0.0035820833812158035, "phrase": "beam_splitters"}, {"score": 0.0035281264325950556, "phrase": "dna-based_chemical_reactions"}, {"score": 0.003448705829033573, "phrase": "optical_computing"}, {"score": 0.0034226302212225206, "phrase": "molecular_computing"}, {"score": 0.0033967510986397946, "phrase": "stochastic_computing"}, {"score": 0.0032826873794020253, "phrase": "fundamental_synthesis_question"}, {"score": 0.0032332256013507072, "phrase": "finite_set"}, {"score": 0.0032087739900195232, "phrase": "possible_splitters"}, {"score": 0.0031724417545242315, "phrase": "arbitrary_rational_probability_distribution"}, {"score": 0.002996840657035727, "phrase": "input_edge"}, {"score": 0.0029182434479165884, "phrase": "prescribed_probability_distribution"}, {"score": 0.00286336417751658, "phrase": "probability_transformation"}, {"score": 0.0027254665058249103, "phrase": "knuth"}, {"score": 0.0027048408332260585, "phrase": "yao"}, {"score": 0.002497470177389344, "phrase": "optimal-sized_stochastic_flow_networks"}], "paper_keywords": ["Probabilistic computation", " stochastic flow network", " random-walk graph", " probability transformer"], "paper_abstract": "A stochastic flow network is a directed graph with incoming edges (inputs) and outgoing edges (outputs), tokens enter through the input edges, travel stochastically in the network, and can exit the network through the output edges. Each node in the network is a splitter, namely, a token can enter a node through an incoming edge and exit on one of the output edges according to a predefined probability distribution. Stochastic flow networks can be easily implemented by beam splitters, or by DNA-based chemical reactions, with promising applications in optical computing, molecular computing and stochastic computing. In this paper, we address a fundamental synthesis question: Given a finite set of possible splitters and an arbitrary rational probability distribution, design a stochastic flow network, such that every token that enters the input edge will exit the outputs with the prescribed probability distribution. The problem of probability transformation dates back to von Neumann's 1951 work and was followed, among others, by Knuth and Yao in 1976. Most existing works have been focusing on the \"simulation\" of target distributions. In this paper, we design optimal-sized stochastic flow networks for \"synthesizing\" target distributions. It shows that when each splitter has two outgoing edges and is unbiased, an arbitrary rational probability a/b with a <= b <= 2(n) can be realized by a stochastic flow network of size that is optimal. Compared to the other stochastic systems, feedback (cycles in networks) strongly improves the expressibility of stochastic flow networks.", "paper_title": "Synthesis of Stochastic Flow Networks", "paper_id": "WOS:000336672600015"}