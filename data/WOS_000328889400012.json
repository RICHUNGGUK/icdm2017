{"auto_keywords": [{"score": 0.031196686331594288, "phrase": "high_multiplicity"}, {"score": 0.004737579882204798, "phrase": "randomness_extraction"}, {"score": 0.0046399189011469425, "phrase": "kakeya_set"}, {"score": 0.004575927446976542, "phrase": "n-dimensional_vector_space"}, {"score": 0.004512814529823301, "phrase": "q_elements"}, {"score": 0.004190563478825626, "phrase": "improved_\"randomness_mergers"}, {"score": 0.004132743580000062, "phrase": "input_l"}, {"score": 0.00403813731349151, "phrase": "short_random_seed"}, {"score": 0.0040009015617797974, "phrase": "single_random_variable"}, {"score": 0.003793337700359517, "phrase": "l_input_variables"}, {"score": 0.00357987591728672, "phrase": "previous_construction"}, {"score": 0.0035059959012385127, "phrase": "improved_randomness_extractors"}, {"score": 0.003401954670986958, "phrase": "randomness_extractors"}, {"score": 0.003378385493203297, "phrase": "logarithmic_length_seeds"}, {"score": 0.0032781186735181904, "phrase": "previous_results"}, {"score": 0.003210446135114967, "phrase": "logarithmic_seed_length"}, {"score": 0.0031368864859254294, "phrase": "prior_work"}, {"score": 0.0031151479942176795, "phrase": "combinatorial_parameters"}, {"score": 0.003100739163165018, "phrase": "\"algebraically_nice\"_subsets"}, {"score": 0.0030650070965891653, "phrase": "finite_fields"}, {"score": 0.003015670816975797, "phrase": "somewhat_low-degree_interpolating_polynomials"}, {"score": 0.002926137369158196, "phrase": "typical_use"}, {"score": 0.002879029968532794, "phrase": "\"algebraic_niceness"}, {"score": 0.0028392545452904762, "phrase": "interpolating_polynomial"}, {"score": 0.0027549443169851305, "phrase": "simple_bounds"}, {"score": 0.0027105854326185566, "phrase": "low-degree_polynomials"}, {"score": 0.002685558057339722, "phrase": "combinatorial_parameter"}, {"score": 0.002599763359352916, "phrase": "appropriate_conditions"}, {"score": 0.002499251183102489, "phrase": "significantly_tighter_analyses"}, {"score": 0.0024704333220467393, "phrase": "extended_method"}, {"score": 0.002419393934835993, "phrase": "basic_technical_results"}, {"score": 0.00235843888868088, "phrase": "general_use"}, {"score": 0.00231507251558324, "phrase": "schwartz-zippel_lemma"}, {"score": 0.002288373472756928, "phrase": "expected_multiplicity"}, {"score": 0.002261981643943578, "phrase": "nonzero_degree_d_polynomial"}, {"score": 0.002246292543825748, "phrase": "random_point"}, {"score": 0.0022049837314436307, "phrase": "finite_subset_s"}, {"score": 0.0021896891011033105, "phrase": "underlying_field"}, {"score": 0.0021049977753042253, "phrase": "cs_literature"}], "paper_keywords": ["finite fields", " list-decoding", " polynomial method", " randomness extraction"], "paper_abstract": "We extend the \"method of multiplicities\" to get the following results, of interest in combinatorics and randomness extraction. (i) We show that every Kakeya set in F-q(n), the n-dimensional vector space over the finite field on q elements, must be of size at least q(n)/2(n). This bound is tight to within a 2 + o(1) factor for every n as q -> infinity. (ii) We give improved \"randomness mergers\": Mergers are seeded functions that take as input l (possibly correlated) random variables in {0, 1}(N) and a short random seed and output a single random variable in {0, 1}(N) that is statistically close to having entropy (1-delta) . N when one of the l input variables is distributed uniformly. The seed we require is only (1/delta) . log l-bits long, which significantly improves upon previous construction of mergers. (iii) We give improved randomness extractors, based on our improved mergers. Specifically, we show how to construct randomness extractors that use logarithmic length seeds while extracting 1 - o(1) fraction of the min-entropy of the source. Previous results could extract only a constant fraction of the entropy while maintaining logarithmic seed length. The \"method of multiplicitie\" was used in prior work to analyze combinatorial parameters of \"algebraically nice\" subsets of vector spaces over finite fields. The method works by constructing somewhat low-degree interpolating polynomials that vanish on every point in the subset with high multiplicity. The typical use of this method involves using the \"algebraic niceness\" to show that the interpolating polynomial also vanishes on some points outside the subset. It then uses simple bounds on the number of zeroes of low-degree polynomials to bound the combinatorial parameter of interest. Our augmentation to this technique is that we prove, under appropriate conditions, that the interpolating polynomial vanishes with high multiplicity outside the set. This novelty leads to significantly tighter analyses. To develop the extended method of multiplicities, we provide a number of basic technical results about multiplicity of zeroes of polynomials that may be of general use. For instance, we strengthen the Schwartz-Zippel lemma to show that the expected multiplicity of zeroes of a nonzero degree d polynomial at a random point in S-n, for any finite subset S of the underlying field, is at most d/vertical bar S vertical bar (a fact that does not seem to have been noticed in the CS literature before).", "paper_title": "EXTENSIONS TO THE METHOD OF MULTIPLICITIES, WITH APPLICATIONS TO KAKEYA SETS AND MERGERS", "paper_id": "WOS:000328889400012"}