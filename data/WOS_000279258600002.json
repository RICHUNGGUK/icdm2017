{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "component-based_systems"}, {"score": 0.004509919457793852, "phrase": "compositional_method"}, {"score": 0.004021689117050817, "phrase": "behaviour-interaction-priority_language"}, {"score": 0.003797690272118125, "phrase": "data_transfer"}, {"score": 0.003386301445203068, "phrase": "component_invariants"}, {"score": 0.003277140908834426, "phrase": "components'_reachability_sets"}, {"score": 0.003145609726536791, "phrase": "global_constraints"}, {"score": 0.0027365364488693656, "phrase": "d-finder_tool"}, {"score": 0.0025211567863488962, "phrase": "experimental_results"}, {"score": 0.002480154140902474, "phrase": "non-trivial_examples"}, {"score": 0.0021049977753042253, "phrase": "state-space_exploration"}], "paper_keywords": [""], "paper_abstract": "The authors present a compositional method for the veri. cation of component-based systems described in a subset of the behaviour-interaction-priority language encompassing multi-party interaction without data transfer. The method is based on the use of two kinds of invariants. Component invariants are over-approximations of components' reachability sets. Interaction invariants are global constraints on the states of components involved in interactions. The method has been implemented in the D-Finder tool and has been applied for checking deadlock-freedom. The experimental results on non-trivial examples show that this method allows either to prove deadlock-freedom or to identify very few deadlock configurations that can be analysed by using state-space exploration.", "paper_title": "Compositional verification for component-based systems and application", "paper_id": "WOS:000279258600002"}