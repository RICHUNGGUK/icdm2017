{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_resources"}, {"score": 0.004760017604908536, "phrase": "computation_time"}, {"score": 0.004678785623021003, "phrase": "fundamental_concern"}, {"score": 0.0045464538515249085, "phrase": "real_time"}, {"score": 0.004443276312972159, "phrase": "complex_scenes"}, {"score": 0.004342430078306461, "phrase": "previous_works"}, {"score": 0.0042928648367867835, "phrase": "automatic_failure_detection"}, {"score": 0.004219571240696568, "phrase": "situ_evaluation"}, {"score": 0.003961330917648707, "phrase": "adaptive_tracking_algorithm"}, {"score": 0.0038936755823756226, "phrase": "pattern_recognition_techniques"}, {"score": 0.0034512514926836667, "phrase": "supervised_classifier"}, {"score": 0.003221316290858497, "phrase": "ground_truth_data"}, {"score": 0.002938317647182056, "phrase": "tracking_algorithm"}, {"score": 0.0028715299874549245, "phrase": "predefined_way"}, {"score": 0.0025449518236394103, "phrase": "potential_risk_situation"}, {"score": 0.0023079225317714815, "phrase": "experimental_work"}, {"score": 0.002166421738415464, "phrase": "substantial_reduction"}, {"score": 0.0021416404045850224, "phrase": "processing_time"}], "paper_keywords": ["computational complexity", " pattern recognition", " target tracking", " ground truth data", " tracking quality", " pattern recognition techniques", " automatic failure detection", " computation time", " computing resources", " adaptive tracking algorithms"], "paper_abstract": "Computation time is a fundamental concern when tracking objects in real time, especially in complex scenes. Inspired by previous works on automatic failure detection and in situ evaluation of tracking, the authors propose in this study an adaptive tracking algorithm based on pattern recognition techniques, which uses more computing resources only when tracking is likely to fail. Tracking quality is discretised into two binary values and a supervised classifier is trained using some features obtained from the tracking itself and ground truth data. During the operation of the classifier, whenever the tracking quality diminishes, the tracking algorithm reacts in a predefined way in order to avoid the failure. Two specific examples are presented, in which the action taken is different when a potential risk situation is detected: either the number of particles increases or the algorithm used to track changes. The experimental work shows that these methods can be easily implemented with a substantial reduction of processing time but with little tracking performance loss.", "paper_title": "Adaptive tracking algorithms to improve the use of computing resources", "paper_id": "WOS:000328326400001"}