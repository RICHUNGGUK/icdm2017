{"auto_keywords": [{"score": 0.049193598318116316, "phrase": "clock_mesh"}, {"score": 0.007685313970463468, "phrase": "mesh_buffers"}, {"score": 0.00481495049065317, "phrase": "fast_clock"}, {"score": 0.004552648949390462, "phrase": "clock_signal"}, {"score": 0.004344965512058521, "phrase": "top-level_tree"}, {"score": 0.004108161406159407, "phrase": "combinatorial_algorithms"}, {"score": 0.0040133278382101885, "phrase": "candidate_locations"}, {"score": 0.003689628075766217, "phrase": "better_solution"}, {"score": 0.003604421041893448, "phrase": "uniform_size"}, {"score": 0.003472149546470424, "phrase": "high_redundancy"}, {"score": 0.0034238045290210534, "phrase": "mesh_architecture"}, {"score": 0.0033919477901198716, "phrase": "high_tolerance"}, {"score": 0.003329117824699891, "phrase": "clock_skew"}, {"score": 0.0031770714776989282, "phrase": "mesh_wire_length"}, {"score": 0.0031475032122226, "phrase": "power_dissipation"}, {"score": 0.0030891871245908665, "phrase": "survivable_network_theory"}, {"score": 0.002598333022293788, "phrase": "efficient_postprocessing_techniques"}, {"score": 0.0024912073108138613, "phrase": "mesh_reduction"}, {"score": 0.00246800641971897, "phrase": "experimental_results"}, {"score": 0.002388487669097511, "phrase": "power_savings"}, {"score": 0.002154835714714195, "phrase": "near-hspice_accuracy"}, {"score": 0.0021049977753042253, "phrase": "run_time"}], "paper_keywords": ["Circuit simulation", " clock distribution", " low power", " variation"], "paper_abstract": "Clock mesh has been widely used to distribute the clock signal across the chip. Clock mesh is driven by a top-level tree and a set of mesh buffers. We present fast and efficient combinatorial algorithms to simultaneously identify the candidate locations as well as sizes of the buffers driving the clock mesh. We show that such a sizing offers a better solution than inserting buffers of uniform size across the mesh. Due to the high redundancy, a mesh architecture offers high tolerance toward variations in clock skew. However, such a redundancy comes at the expense of mesh wire length and power dissipation. Based on survivable network theory, we formulate the problem to reduce the clock mesh by retaining only those edges that are critical to maintain redundancy. Such a formulation offers designer the option to tradeoff between power and tolerance to process variations. We present efficient postprocessing techniques to reduce the size of the mesh buffers after mesh reduction. Experimental results indicate that our techniques can result in power savings up to 28% with less than 3.3% delay penalty. We also present driver models that can help in simulating the clock mesh. Such models achieve near-HSPICE accuracy with significant speedup in run time.", "paper_title": "Combinatorial Algorithms for Fast Clock Mesh Optimization", "paper_id": "WOS:000273092000012"}