{"auto_keywords": [{"score": 0.026164860660277314, "phrase": "seadoc"}, {"score": 0.022050147081597055, "phrase": "application_developers"}, {"score": 0.008356708382244981, "phrase": "necessary_documents"}, {"score": 0.006508114504885608, "phrase": "valid_document_version"}, {"score": 0.00637192393146597, "phrase": "relevant_necessary_documents"}, {"score": 0.00481495049065317, "phrase": "framework_extension_tasks"}, {"score": 0.00469740813902244, "phrase": "object-oriented_frameworks"}, {"score": 0.004377077848734575, "phrase": "framework-based_development_process"}, {"score": 0.00422516469733364, "phrase": "new_components"}, {"score": 0.004195418010131832, "phrase": "framework_extension"}, {"score": 0.004092937456065441, "phrase": "framework_extension_task"}, {"score": 0.0036682498811430623, "phrase": "example_adaptation_information"}, {"score": 0.003150900886669123, "phrase": "time_reduction"}, {"score": 0.003095674983836725, "phrase": "new_criterion"}, {"score": 0.002853808773854451, "phrase": "first_issue"}, {"score": 0.002764379205581817, "phrase": "framework_version"}, {"score": 0.0027255350933549703, "phrase": "retrieved_example"}, {"score": 0.002677744558540711, "phrase": "second_one"}, {"score": 0.002575526825728026, "phrase": "specific_necessary_document"}, {"score": 0.0023325586335885104, "phrase": "document_links"}, {"score": 0.0023079225317714815, "phrase": "corresponding_valid_document_version"}, {"score": 0.0022276618873985445, "phrase": "highly_relevant_document_links"}, {"score": 0.0022041312401435346, "phrase": "experimental_results"}], "paper_keywords": ["Self adaptation", " Document link", " Framework extension task", " Software reuse"], "paper_abstract": "It has been demonstrated that object-oriented frameworks can bring all kinds of advantages to application developers. To gain the advantages, application developers have to follow the framework-based development process. One step of the process is to integrate new components for framework extension. This is defined as a framework extension task in this work. In this task, application developers have to (1) retrieve examples, (2) acquire necessary documents, which are defined as the documents containing example adaptation information, and (3) adapt examples. Currently, acquiring necessary documents requires a lot of time because it is achieved through manually searching the Internet. Although there are many approaches to correctly acquiring those documents, the focus is never on time reduction. To satisfy the new criterion, we find the following challenging issues: (1) the dynamics of the valid document version, and (2) the uncertainty of the relevant necessary documents. The first issue is that the valid document version varies according to the framework version under which the retrieved example is workable. The second one is that the relevant necessary documents cannot be decided until a specific necessary document is specified. To resolve those two issues, a <Emphasis Type=\"BoldUnderline\">Self-<Emphasis Type=\"BoldUnderline\">adaptive <Emphasis Type=\"BoldUnderline\">Document link provision system, named SeaDoc, is provided in this work. SeaDoc resolves the dynamics by dynamically constructing document links with the corresponding valid document version. SeaDoc also resolves the uncertainty by adaptively selecting highly relevant document links. The experimental results show that SeaDoc reduces the time by 73 and 83 % compared with other two approaches.", "paper_title": "SeaDoc: a self-adaptive document link provision system for framework extension tasks", "paper_id": "WOS:000331811400003"}