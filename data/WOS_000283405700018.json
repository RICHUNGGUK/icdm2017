{"auto_keywords": [{"score": 0.041722662073551436, "phrase": "proposed_amr_data_structure"}, {"score": 0.031124752967457727, "phrase": "connectivity_information"}, {"score": 0.027439542212205213, "phrase": "amr_data"}, {"score": 0.004717723626157272, "phrase": "csamr"}, {"score": 0.004653993775422955, "phrase": "cartesian-like_indices"}, {"score": 0.004498393285602365, "phrase": "stored_indices"}, {"score": 0.0040619911719900976, "phrase": "computer_memory"}, {"score": 0.0038336889370744662, "phrase": "conventional_oct-tree"}, {"score": 0.003769006950727621, "phrase": "km._olson"}, {"score": 0.003743439610143464, "phrase": "c._mobary"}, {"score": 0.003718045060236861, "phrase": "r._defainchtein"}, {"score": 0.0036928221419965253, "phrase": "c._packer"}, {"score": 0.0036677697040669957, "phrase": "paramesh"}, {"score": 0.003545186255247511, "phrase": "comput"}, {"score": 0.0032668821950788502, "phrase": "tree_algorithms"}, {"score": 0.003244709961388234, "phrase": "adaptive_mesh_fluid_dynamics_simulations"}, {"score": 0.003222687723450745, "phrase": "j._comput"}, {"score": 0.0026359661683150984, "phrase": "previous_approaches"}, {"score": 0.0025217522723800204, "phrase": "new_data_structure"}, {"score": 0.0023960878466674773, "phrase": "entry_keys"}, {"score": 0.0023717148226629105, "phrase": "hash_table"}, {"score": 0.002331641523873951, "phrase": "explicitly_stored_cell_indices"}, {"score": 0.002245842206945282, "phrase": "amr_code"}, {"score": 0.0021705796895687864, "phrase": "computational_performance"}, {"score": 0.0021484955960643167, "phrase": "new_csamr_data_structure"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Adaptive mesh refinement/derefinement", " Inviscid compressible flow", " Detonation", " Cell-based AMR data structure", " Structured grid"], "paper_abstract": "A new Cell-based Structured Adaptive Mesh Refinement (CSAMR) data structure is developed. In our CSAMR data structure, Cartesian-like indices are used to identify each cell. With these stored indices, the information on the parent, children and neighbors of a given cell can be accessed simply and efficiently. Owing to the usage of these indices, the computer memory required for storage of the proposed AMR data structure is only word per cell, in contrast to the conventional oct-tree [P. MacNeice, KM. Olson, C. Mobary, R. deFainchtein, C. Packer, PARAMESH: a parallel adaptive mesh refinement community toolkit, Comput. Phys. Commun. 330 (2000) 126] and the fully threaded tree (FTT) [A.M. Khokhlov, Fully threaded tree algorithms for adaptive mesh fluid dynamics simulations, J. Comput. Phys. 143 (1998) 519] data structures which require, respectively, 19 and 2 words per cell for storage of the connectivity information. Because the connectivity information (e.g., parent, children and neighbors) of a cell in our proposed AMR data structure can be accessed using only the cell indices, a tree structure which was required in previous approaches for the organization of the AMR data is no longer needed for this new data structure. Instead, a much simpler hash table structure is used to maintain the AMR data, with the entry keys in the hash table obtained directly from the explicitly stored cell indices. The proposed AMR data structure simplifies the implementation and parallelization of an AMR code. Two three-dimensional test cases are used to illustrate and evaluate the computational performance of the new CSAMR data structure. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "A new adaptive mesh refinement data structure with an application to detonation", "paper_id": "WOS:000283405700018"}