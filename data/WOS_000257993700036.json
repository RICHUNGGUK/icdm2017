{"auto_keywords": [{"score": 0.04508162406013035, "phrase": "software_development_efforts"}, {"score": 0.015719716506582538, "phrase": "neural_network_model"}, {"score": 0.004769182299692333, "phrase": "software_effort_estimation"}, {"score": 0.0041522059428827345, "phrase": "prominent_impact"}, {"score": 0.003958439439112026, "phrase": "numerous_methods"}, {"score": 0.0036669760226536977, "phrase": "function_point-based_regression_model"}, {"score": 0.0036321755846725756, "phrase": "fp"}, {"score": 0.0034790978593553794, "phrase": "case-based_reasoning"}, {"score": 0.0033806943112103397, "phrase": "recent_research"}, {"score": 0.0032382660477699695, "phrase": "function_points"}, {"score": 0.00305762327908599, "phrase": "precise_estimation"}, {"score": 0.002739001004969201, "phrase": "development_environment"}, {"score": 0.002537097217899195, "phrase": "development_environments"}, {"score": 0.002512926336312949, "phrase": "recent_software_development_cases"}, {"score": 0.0024771000236931836, "phrase": "primary_purpose"}, {"score": 0.0023840346303791032, "phrase": "precise_method"}, {"score": 0.002166349705365602, "phrase": "neural_network-based_software_development_estimation_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["software effort estimation", " neural networks", " function points", " variable selection strategy"], "paper_abstract": "As software becomes more complex and its scope dramatically increases, the importance of research on developing methods for estimating software development efforts has perpetually increased. Such accurate estimation has a prominent impact on the success of projects. Out of the numerous methods for estimating software development efforts that have been proposed, line of code (LOC)-based constructive cost model (COCOMO), function point-based regression model (FP), neural network model (NN), and case-based reasoning (CBR) arc among the most popular models. Recent research has tended to focus on the rise of function points (FPs) in estimating the software development efforts, however, a precise estimation should not only consider the FPs, which represent the size of the software, but should also include various elements of the development environment for its estimation. Therefore, this study is designed to analyze the FPs and the development environments of recent software development cases. The primary purpose of this study is to propose a precise method of estimation that takes into account and places emphasis on the various software development elements. This research proposes and evaluates a neural network-based software development estimation model. (C) 2007 Elsevier Ltd. All rights reserved.", "paper_title": "An empirical validation of a neural network model for software effort estimation", "paper_id": "WOS:000257993700036"}