{"auto_keywords": [{"score": 0.050076896843435144, "phrase": "deduplication-based_storage_systems"}, {"score": 0.03906194616597635, "phrase": "read_performance"}, {"score": 0.03191153768439655, "phrase": "vm"}, {"score": 0.028710132352931843, "phrase": "sar"}, {"score": 0.004748445601622725, "phrase": "data_deduplication"}, {"score": 0.004656871909510407, "phrase": "effective_technique"}, {"score": 0.004605335502605577, "phrase": "total_data"}, {"score": 0.004516509161825942, "phrase": "storage_space"}, {"score": 0.0044914449177247545, "phrase": "cloud_backup"}, {"score": 0.004429388453288922, "phrase": "primary_storage_systems"}, {"score": 0.004248294537944227, "phrase": "deduplicated_backup"}, {"score": 0.004120195741003221, "phrase": "main_reason"}, {"score": 0.0039737570920809215, "phrase": "multiple_small_data_chunks"}, {"score": 0.00390792986752692, "phrase": "different_disks"}, {"score": 0.0038218468784009035, "phrase": "subsequent_read_operation"}, {"score": 0.003769006950727621, "phrase": "multiple_disks"}, {"score": 0.003428495381847161, "phrase": "significant_attention"}, {"score": 0.0033622909109253616, "phrase": "emerging_cloud_storage_applications"}, {"score": 0.003334309053314909, "phrase": "increasing_popularity"}, {"score": 0.003306559295382181, "phrase": "vm_platform"}, {"score": 0.0032067651867042466, "phrase": "cloud_storage"}, {"score": 0.003188946047322158, "phrase": "vm_environment"}, {"score": 0.003162402233117859, "phrase": "simple_read_request"}, {"score": 0.0031360786664165093, "phrase": "client_side"}, {"score": 0.003092690568543981, "phrase": "restore_operation"}, {"score": 0.0028926147550022607, "phrase": "vm_storage_server"}, {"score": 0.0028367287190243355, "phrase": "network_bandwidth"}, {"score": 0.0028209599545587745, "phrase": "storage_capacity_concerns"}, {"score": 0.002587429107459106, "phrase": "high_random-read_performance_properties"}, {"score": 0.00246765655376112, "phrase": "unique_data_chunks"}, {"score": 0.002453934333239467, "phrase": "high_reference_count"}, {"score": 0.0024402882329924934, "phrase": "small_size"}, {"score": 0.0024199608896083276, "phrase": "nonsequential_characteristics"}, {"score": 0.0022507188208913394, "phrase": "deduplicationbased_storage_systems"}, {"score": 0.0021524941421636997, "phrase": "prototype_implementation"}, {"score": 0.0021049977753042253, "phrase": "traditional_deduplication-based_and_flash-based_cache_schemes"}], "paper_keywords": ["Storage systems", " data deduplication", " virtual machine", " solid-state drive", " read performance", " Design", " Performance"], "paper_abstract": "Data deduplication has been demonstrated to be an effective technique in reducing the total data transferred over the network and the storage space in cloud backup, archiving, and primary storage systems, such as VM ( virtual machine) platforms. However, the performance of restore operations from a deduplicated backup can be significantly lower than that without deduplication. The main reason lies in the fact that a file or block is split into multiple small data chunks that are often located in different disks after deduplication, which can cause a subsequent read operation to invoke many disk IOs involving multiple disks and thus degrade the read performance significantly. While this problem has been by and large ignored in the literature thus far, we argue that the time is ripe for us to pay significant attention to it in light of the emerging cloud storage applications and the increasing popularity of the VM platform in the cloud. This is because, in a cloud storage or VM environment, a simple read request on the client side may translate into a restore operation if the data to be read or a VM suspended by the user was previously deduplicated when written to the cloud or the VM storage server, a likely scenario considering the network bandwidth and storage capacity concerns in such an environment. To address this problem, in this article, we propose SAR, an SSD (solid-state drive)-Assisted Read scheme, that effectively exploits the high random-read performance properties of SSDs and the unique data-sharing characteristic of deduplication-based storage systems by storing in SSDs the unique data chunks with high reference count, small size, and nonsequential characteristics. In this way, many read requests to HDDs are replaced by read requests to SSDs, thus significantly improving the read performance of the deduplicationbased storage systems in the cloud. The extensive trace-driven and VM restore evaluations on the prototype implementation of SAR show that SAR outperforms the traditional deduplication-based and flash-based cache schemes significantly, in terms of the average response times.", "paper_title": "Read-Performance Optimization for Deduplication-Based Storage Systems in the Cloud", "paper_id": "WOS:000334521100002"}