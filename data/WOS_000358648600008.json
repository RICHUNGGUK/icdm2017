{"auto_keywords": [{"score": 0.03853250580865732, "phrase": "graphical_processing_units"}, {"score": 0.004742511243894382, "phrase": "graphics_processing_units"}, {"score": 0.004671156704912419, "phrase": "matrix_transposition"}, {"score": 0.004566123591480369, "phrase": "basic_operation"}, {"score": 0.004200724305692705, "phrase": "computer's_main_memory"}, {"score": 0.0038352452380298464, "phrase": "out-of-place_matrix_transposition"}, {"score": 0.003609644151670741, "phrase": "gpu"}, {"score": 0.003371066990851953, "phrase": "general_purpose_computing"}, {"score": 0.0031966173935538992, "phrase": "particular_architecture"}, {"score": 0.0030082398041055003, "phrase": "matrix_transposition_operation"}, {"score": 0.0027254466299651936, "phrase": "efficient_implementations"}, {"score": 0.002288519595829552, "phrase": "achieved_bandwidth"}, {"score": 0.002203200914130907, "phrase": "simple_array_copy"}], "paper_keywords": ["3D transposition", " GPU", " CUDA", " Heterogeneous systems"], "paper_abstract": "Matrix transposition is a basic operation for several computing tasks. Hence, transposing a matrix in a computer's main memory has been well studied since many years ago. More recently, the out-of-place matrix transposition has been performed efficiently in graphical processing units (GPU), which are broadly used today for general purpose computing. However, due to the particular architecture of GPUs, the adaptation of the matrix transposition operation to 3D arrays is not straightforward. In this paper, we describe efficient implementations for graphical processing units of the 5 possible out-of-place 3D transpositions. Moreover, we also include the transposition of the most basic in-place 3D transpositions. The results show that the achieved bandwidth is close to a simple array copy and is similar to the 2D transposition.", "paper_title": "Efficient 3D Transpositions in Graphics Processing Units", "paper_id": "WOS:000358648600008"}