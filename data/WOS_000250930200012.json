{"auto_keywords": [{"score": 0.027168877507671062, "phrase": "windows"}, {"score": 0.01644262048414487, "phrase": "java"}, {"score": 0.007883057483052354, "phrase": "rt"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_robotic_applications"}, {"score": 0.004661868629458321, "phrase": "robotic_applications"}, {"score": 0.0045765783794477505, "phrase": "large_robotic_projects"}, {"score": 0.0036454773994668895, "phrase": "babel"}, {"score": 0.003517223847512266, "phrase": "heterogeneous_robotic_software"}, {"score": 0.003468796799802612, "phrase": "software_engineering_approach"}, {"score": 0.0032665093519968083, "phrase": "main_phases"}, {"score": 0.0032215231177304513, "phrase": "application_lifecycle"}, {"score": 0.0030476702431093687, "phrase": "unavoidable_heterogeneity_conditions"}, {"score": 0.0028303313661029597, "phrase": "diverse_real_robotic_applications"}, {"score": 0.002706516116028134, "phrase": "corba"}, {"score": 0.002593614033480903, "phrase": "ms-"}, {"score": 0.0022878396720586044, "phrase": "hardware_components"}, {"score": 0.0021443262599352996, "phrase": "actuator_devices"}, {"score": 0.0021245712108461205, "phrase": "mobile_robots"}, {"score": 0.0021049977753042253, "phrase": "manipulator_arms"}], "paper_keywords": ["software engineering", " robotic software", " distributed programming"], "paper_abstract": "One of the most evident characteristics of robotic applications is heterogeneity: large robotic projects involve many different researchers with very different programming needs and areas of research, using a variety of hardware and software that must be integrated efficiently (i.e.: with a low development cost) to construct applications that satisfy not only classic robotic requirements (fault-tolerance, real-time specifications, intensive access to hardware, etc.) but also software engineering aspects (reusability, maintainability, etc.). Most existing solutions to this problem either do not deal with such heterogeneit, or do not cover specific robotic needs. In this paper we propose a framework for the integration of heterogeneous robotic software through a software engineering approach: the BABEL development system, which is aimed to cover the main phases of the application lifecycle (design, implementation, testing, and maintainance) when unavoidable heterogeneity conditions are present. The capabilities of our system are shown by its support for designing and implementing diverse real robotic applications that use several programming languages (C, C+ +, JAVA), execution platforms (RT-operating systems, MS-Windows, no operating system at all), communication middleware (CORBA, TCP/IP, USB), and also a variety of hardware components (Personal Computers, microcontrollers, and a wide diversity of sensor and actuator devices in mobile robots and manipulator arms). (c) 2006 Elsevier Ltd. All rights reserved.", "paper_title": "A software engineering approach for the development of heterogeneous robotic applications", "paper_id": "WOS:000250930200012"}