{"auto_keywords": [{"score": 0.038906160240873275, "phrase": "local_gpr"}, {"score": 0.03774727637677035, "phrase": "super_resolution"}, {"score": 0.00481495049065317, "phrase": "local_gaussian_process_regression"}, {"score": 0.004784909348794283, "phrase": "image_super-resolution"}, {"score": 0.004681226806682058, "phrase": "high-resolution_pixel_values"}, {"score": 0.004438642216475526, "phrase": "limited_generalization_ability"}, {"score": 0.004410938507689426, "phrase": "gaussian_processes"}, {"score": 0.004315324272986853, "phrase": "regression_techniques"}, {"score": 0.004288386935585756, "phrase": "explicit_uncertainty_models"}, {"score": 0.004248294537944227, "phrase": "gaussian_process_regression"}, {"score": 0.004169226023596022, "phrase": "significant_drawback"}, {"score": 0.004078829832634839, "phrase": "computational_complexity"}, {"score": 0.003965468669507077, "phrase": "training_examples"}, {"score": 0.0036667768092524576, "phrase": "sr._two_algorithms"}, {"score": 0.003553674679835236, "phrase": "data-driven_gpr_based_super-resolution_algorithm"}, {"score": 0.00347657813672945, "phrase": "local_gpr_model"}, {"score": 0.0034440491386068545, "phrase": "lr_patch"}, {"score": 0.0034118234596993836, "phrase": "input_oriented_training_dataset"}, {"score": 0.003296212583539166, "phrase": "running_speed"}, {"score": 0.003265365666305185, "phrase": "prototype_based_gpr_algorithm"}, {"score": 0.003194503900101423, "phrase": "proposed_algorithm"}, {"score": 0.003134986603941304, "phrase": "data-driven_gpr_solution"}, {"score": 0.003047776993499616, "phrase": "image_patches"}, {"score": 0.0030003766828110277, "phrase": "image_patch"}, {"score": 0.002953711377604328, "phrase": "local_regression_efforts"}, {"score": 0.0028805474861014722, "phrase": "nearest_prototype"}, {"score": 0.00285357934700279, "phrase": "lr_image_patch"}, {"score": 0.002748201169075936, "phrase": "greater_robustness"}, {"score": 0.002688532127821979, "phrase": "formularized_way"}, {"score": 0.0026055251533586804, "phrase": "covariance_function"}, {"score": 0.0024625017739528096, "phrase": "cross-verification_way"}, {"score": 0.00241658945942583, "phrase": "confidence_values"}, {"score": 0.0023939545398857518, "phrase": "test_points"}, {"score": 0.0023641033150042195, "phrase": "pixels'_post-processing"}, {"score": 0.0023127544795063263, "phrase": "popular_datasets"}, {"score": 0.002262518422441041, "phrase": "super-resolution_literature"}, {"score": 0.002234302459067969, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Super resolution", " Data-driven Gaussian process regression", " Prototype-based Gaussian process regression", " Covariance matrix", " Low resolution", " High resolution"], "paper_abstract": "Learning based super-resolution (SR) methods, which predict the high-resolution pixel values but not directly provide an estimation of uncertainty, are typically non-probabilistic and have limited generalization ability. Gaussian processes can provide a framework for deriving regression techniques with explicit uncertainty models, but Gaussian Process Regression (GPR) has a significant drawback in being time consuming. The computational complexity of GPR is cubic in the number of training examples, which is prohibitively expensive for a large-scale training set. In this article, we have proposed learning local GPR for image SR. Two algorithms are developed to support local GPR for super resolution. A data-driven GPR based super-resolution algorithm is first developed to learn a local GPR model for every LR patch on an input oriented training dataset with moderate size. In order to further improve the running speed, a prototype based GPR algorithm is developed for super resolution. The proposed algorithm is about one-order faster than the data-driven GPR solution because it makes models for the prototypes of image patches rather than for each image patch. Thus, the local regression efforts are greatly reduced to just finding the nearest prototype for each LR image patch and applying its corresponding pre-computed projective matrix for super-resolution prediction. Our algorithms have greater robustness and usability as they provide a formularized way to automatically learn the hyper-parameters introduced for optimizing the covariance function, while most of the state-of-the-art super-resolution methods could only utilize these parameters in a cross-verification way. Moreover, our algorithms offer confidence values at the test points which benefit the pixels' post-processing. Our algorithms are evaluated on popular datasets that are widely used in the super-resolution literature, and the experimental results have demonstrated that the efficiency and effectiveness of our proposed algorithms are comparative with several state-of-the-arts super-resolution methods. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Learning local Gaussian process regression for image super-resolution", "paper_id": "WOS:000350081900029"}