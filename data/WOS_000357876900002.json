{"auto_keywords": [{"score": 0.02447573633394193, "phrase": "xsb"}, {"score": 0.006903399249374086, "phrase": "hilog"}, {"score": 0.00481495049065317, "phrase": "large_rule-based_computations"}, {"score": 0.004641351004344458, "phrase": "well-founded_semantics"}, {"score": 0.004453488286477661, "phrase": "semantic_web_applications"}, {"score": 0.004352411290383643, "phrase": "expressive_semantic_features"}, {"score": 0.004253618550301311, "phrase": "frame-based_reasoning"}, {"score": 0.004195418010131832, "phrase": "defeasibility_theories"}, {"score": 0.004062682236016889, "phrase": "prolog_tabling_engines"}, {"score": 0.004007083686875716, "phrase": "good_support"}, {"score": 0.0039341294012600085, "phrase": "memory_management"}, {"score": 0.0037402558657576124, "phrase": "semantic_features"}, {"score": 0.0036721416244816455, "phrase": "declarative_style"}, {"score": 0.0036218682585355895, "phrase": "knowledge_representation_rules"}, {"score": 0.0035233696341819437, "phrase": "query_evaluation"}, {"score": 0.0033190180867511605, "phrase": "overall_structure"}, {"score": 0.0032287289440915187, "phrase": "problematic_portions"}, {"score": 0.002786964045867666, "phrase": "different_techniques"}, {"score": 0.002686284749214443, "phrase": "trace-based_analysis_technique"}, {"score": 0.0024956789310376635, "phrase": "critical_aspects"}, {"score": 0.002461472107682778, "phrase": "tabled_computation"}, {"score": 0.002276283303864666, "phrase": "forest_logging"}, {"score": 0.002224510044064184, "phrase": "practical_programs"}, {"score": 0.0021940118003312397, "phrase": "constant_factor"}, {"score": 0.0021049977753042253, "phrase": "tens_or_hundreds_of_millions"}], "paper_keywords": ["Scalable reasoning", " tabled resolution", " trace-based analysis"], "paper_abstract": "Knowledge representation systems based on the well-founded semantics can offer the degree of scalability required for semantic web applications and make use of expressive semantic features such as Hilog, frame-based reasoning, and defeasibility theories. Such features can be compiled into Prolog tabling engines that have good support for indexing and memory management. However, due both to the power of the semantic features and to the declarative style typical of knowledge representation rules, the resources needed for query evaluation can be unpredictable. In such a situation, users need to understand the overall structure of a computation and examine problematic portions of it. This problem, of profiling a computation, differs from debugging and justification which address why a given answer was or wasn't derived, and so profiling requires different techniques. In this paper we present a trace-based analysis technique called forest logging which has been used to profile large, heavily tabled computations. In forest logging, critical aspects of a tabled computation are logged; afterwards the log is loaded and analyzed. As implemented in XSB, forest logging slows down execution of practical programs by a constant factor that is often small; and logs containing tens or hundreds of millions of facts can be loaded and analyzed in minutes.", "paper_title": "Forest logging: A trace-based analysis of large rule-based computations", "paper_id": "WOS:000357876900002"}