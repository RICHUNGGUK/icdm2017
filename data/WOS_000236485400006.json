{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "hybrid_systems"}, {"score": 0.004758457292840376, "phrase": "predicate_abstraction"}, {"score": 0.004592905436175987, "phrase": "powerful_technique"}, {"score": 0.0045122922461952805, "phrase": "finite-state_models"}, {"score": 0.004459334186889869, "phrase": "infinite-state_systems"}, {"score": 0.004129873531628877, "phrase": "reachability_computation_techniques"}, {"score": 0.003986103192038901, "phrase": "hybrid_system"}, {"score": 0.003939296259436904, "phrase": "linear_dynamics"}, {"score": 0.0038246602895705643, "phrase": "linear_predicates"}, {"score": 0.003541923233726252, "phrase": "finite_discrete_quotient"}, {"score": 0.0034185505275141077, "phrase": "truth_assignments"}, {"score": 0.0033584796908285863, "phrase": "input_predicates"}, {"score": 0.0027961342030212353, "phrase": "spurious_counterexamples"}, {"score": 0.0026827569390113822, "phrase": "abstract_state-space"}, {"score": 0.0026045914281028473, "phrase": "basic_techniques"}, {"score": 0.0025587867729949037, "phrase": "new_predicates"}, {"score": 0.0024842242921857705, "phrase": "closely_related_spurious_counterexamples"}, {"score": 0.0023139986108451967, "phrase": "verification_tool"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["hybrid systems", " predicate abstraction", " model checking", " verification", " counterexample analysis"], "paper_abstract": "Predicate abstraction has emerged to be a powerful technique for extracting finite-state models from infinite-state systems, and has been recently shown to enhance the effectiveness of the reachability computation techniques for hybrid systems. Given a hybrid system with linear dynamics and a set of linear predicates, the verifier performs an on-the-fly search of the finite discrete quotient whose states correspond to the truth assignments to the input predicates. The success of this approach depends on the choice of the predicates used for abstraction. In this paper, we focus on identifying these predicates automatically by analyzing spurious counterexamples generated by the search in the abstract state-space. We present the basic techniques for discovering new predicates that will rule out closely related spurious counterexamples, optimizations of these techniques, implementation of these in the verification tool, and case studies demonstrating the promise of the approach. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Counterexample-guided predicate abstraction of hybrid systems", "paper_id": "WOS:000236485400006"}