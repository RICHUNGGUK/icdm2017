{"auto_keywords": [{"score": 0.04407253113473033, "phrase": "rc_applications"}, {"score": 0.00481495049065317, "phrase": "reconfigurable_computing_applications"}, {"score": 0.004693160925683425, "phrase": "rc"}, {"score": 0.004527371799277529, "phrase": "substantial_performance_benefits"}, {"score": 0.004367581653370531, "phrase": "traditional_microprocessors"}, {"score": 0.004256895619944631, "phrase": "experimental_performance_analysis"}, {"score": 0.003982011128052839, "phrase": "existing_methods"}, {"score": 0.003921129887153952, "phrase": "application_designers"}, {"score": 0.003782655283668953, "phrase": "appropriate_optimizations"}, {"score": 0.0037057255600764475, "phrase": "significant_designer_expertise"}, {"score": 0.0030640804704319255, "phrase": "performance_analysis_tool"}, {"score": 0.002955782731675529, "phrase": "higher_degree"}, {"score": 0.002895620643297197, "phrase": "diverse_fpga_systems"}, {"score": 0.0025202582748972122, "phrase": "common_rc_bottlenecks"}, {"score": 0.00248167018931442, "phrase": "associated_detection"}, {"score": 0.0023211517663846346, "phrase": "recap's_knowledge_base"}], "paper_keywords": ["Measurement", " Performance", " FPGA", " optimization", " performance analysis"], "paper_abstract": "Reconfigurable Computing (RC) has the potential to provide substantial performance benefits and yet simultaneously consume less power than traditional microprocessors or GPUs. While experimental performance analysis of RC applications has previously been shown crucial for achieving this potential, existing methods still require application designers to manually locate bottlenecks and determine appropriate optimizations, typically requiring significant designer expertise and effort. Worse, the diversity of platforms employed by RC applications further complicates the process of detecting bottlenecks and formulating optimizations. To address these shortcomings, we first discuss our platform-template system, which enables a performance analysis tool to perform more accurate bottleneck detection and achieve a higher degree of portability across diverse FPGA systems. We then provide details for our implementation of these concepts and techniques in the Reconfigurable Computing Application Performance (ReCAP) tool. Next, we present a taxonomy of common RC bottlenecks, providing associated detection and optimization strategies for each bottleneck, which we use to populate ReCAP's knowledge base for bottleneck detection. Finally, we demonstrate the utility of our approach via two application case studies across a total of three platforms.", "paper_title": "Platform-Aware Bottleneck Detection for Reconfigurable Computing Applications", "paper_id": "WOS:000299337400010"}