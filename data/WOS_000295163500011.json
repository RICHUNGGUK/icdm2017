{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "communication_traces"}, {"score": 0.010484970741791345, "phrase": "large-scale_parallel_applications"}, {"score": 0.0069479430298896435, "phrase": "program_slice"}, {"score": 0.004614483128885678, "phrase": "parallel_applications"}, {"score": 0.004476399615305783, "phrase": "application_performance"}, {"score": 0.004395532072377065, "phrase": "better_communication_subsystems"}, {"score": 0.004342430078306461, "phrase": "communication_patterns"}, {"score": 0.003939980614608312, "phrase": "entire_parallel_applications"}, {"score": 0.0038923605771735838, "phrase": "full-scale_systems"}, {"score": 0.003640516896245813, "phrase": "novel_technique"}, {"score": 0.003578689611537858, "phrase": "fact"}, {"score": 0.0034676182423067307, "phrase": "fast_communication_traces_collection"}, {"score": 0.003384262486955773, "phrase": "small-scale_systems"}, {"score": 0.003223494720348768, "phrase": "original_program"}, {"score": 0.003107935254560724, "phrase": "static_analysis"}, {"score": 0.002466139325703204, "phrase": "communication_trace_collection"}, {"score": 0.002320449502337321, "phrase": "npb_programs"}, {"score": 0.002183347623351868, "phrase": "resource_consumptions"}], "paper_keywords": ["Communication pattern", " communication trace", " message-passing program", " parallel application"], "paper_abstract": "Communication patterns of parallel applications are important to optimize application performance and design better communication subsystems. Communication patterns can be extracted from communication traces. However, existing approaches to generate communication traces need to execute the entire parallel applications on full-scale systems that are time consuming and expensive. We propose a novel technique, called FACT, which can perform FAst Communication Traces collection for large-scale parallel applications on small-scale systems. Our idea is to reduce the original program to obtain a program slice through static analysis, and to execute the program slice to acquire the communication traces. Our idea is based on an observation that most computation and message contents in parallel applications are not relevant to their spatial and volume communication attributes, and therefore can be removed for the purpose of communication trace collection. We have implemented FACT and evaluated it with NPB programs and Sweep3D. The results show that FACT can reduce resource consumptions by two orders of magnitude in most cases.", "paper_title": "Efficiently Acquiring Communication Traces for Large-Scale Parallel Applications", "paper_id": "WOS:000295163500011"}