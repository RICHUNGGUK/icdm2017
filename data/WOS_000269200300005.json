{"auto_keywords": [{"score": 0.035055092511816204, "phrase": "jitc"}, {"score": 0.006713938216429896, "phrase": "capsule-based_active_networks"}, {"score": 0.00481495049065317, "phrase": "-time_cache"}, {"score": 0.004715774022494594, "phrase": "network_device"}, {"score": 0.0046857508651690916, "phrase": "novel_programming_paradigm"}, {"score": 0.004333208536635007, "phrase": "active_networking"}, {"score": 0.004245667843980468, "phrase": "capsule-based_active_network"}, {"score": 0.003939487754302632, "phrase": "network_devices"}, {"score": 0.003820664678548735, "phrase": "space_limitations"}, {"score": 0.0037818557818203188, "phrase": "application_developments"}, {"score": 0.0035571129372263532, "phrase": "capsule_space_limitations"}, {"score": 0.003485196263406553, "phrase": "innovative_idea"}, {"score": 0.0032990581648373422, "phrase": "existing_solutions"}, {"score": 0.0030310732341527168, "phrase": "necessary_codes"}, {"score": 0.0030002605593597966, "phrase": "active_networks"}, {"score": 0.0029596622424171264, "phrase": "network_device_download_codes"}, {"score": 0.002764741440770032, "phrase": "cache_size"}, {"score": 0.002718045523483502, "phrase": "required_cache_placement_policy"}, {"score": 0.002653989719462843, "phrase": "optimal_performance"}, {"score": 0.0025914395870574787, "phrase": "six_canonical_cache_placement_policies"}, {"score": 0.0025303861182272465, "phrase": "windows"}, {"score": 0.00240426758768164, "phrase": "trivial_overheads"}, {"score": 0.00226892463779702, "phrase": "processing_delay"}, {"score": 0.0022535101994966907, "phrase": "resource_sensitivity"}, {"score": 0.002230584233627327, "phrase": "bandwidth_conservation"}, {"score": 0.0022078909877264884, "phrase": "cache-policy-free_situation"}, {"score": 0.0021338975690903014, "phrase": "six_cache_placement_policies"}, {"score": 0.0021049977753042253, "phrase": "performance_improvement"}], "paper_keywords": ["active networking", " capsule", " just-in-time cache", " programmable network"], "paper_abstract": "Active networking introduces a novel programming paradigm to applications by injecting codes into networks in order to program them. Among the approaches to injecting codes into networks, active networking attracts most research communities to explore the capsule-based active network, where the packet named the capsule can carry codes and data together to customize the processing of the packet in network devices with the codes. Because a capsule has space limitations that harm application developments in capsule-based active networks, the just-in-time cache (JITC) is proposed to alleviate capsule space limitations. The JITC is an innovative idea to introduce a cache into a capsule besides into a network device. The JITC automatically tailors codes to the need of a capsule while processing the capsule in a network device. The JITC allows a capsule merely to carry the necessary codes to traverse active networks and makes a network device download codes on behalf of the capsule on demand. The JITC allows applications to disable the cache, control the cache size, and specify the required cache placement policy in a capsule to achieve the optimal performance. Currently, the JITC supports six canonical cache placement policies. The JITC is implemented in Windows 2000 as a proof of concept. In the experiments, the JITC has trivial overheads in contrast to other common overheads in the existing solutions. The JITC outperforms the existing solutions in throughput, processing delay, resource sensitivity, and bandwidth conservation in the cache-policy-free situation. Besides, the JITC has examples for the six cache placement policies to demonstrate the performance improvement with each of them.", "paper_title": "Just-In-Time Cache for Capsule-Based Active Networks", "paper_id": "WOS:000269200300005"}