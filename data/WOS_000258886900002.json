{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "performance_prediction"}, {"score": 0.004772818068176176, "phrase": "workload_modeling"}, {"score": 0.0047310525657970615, "phrase": "computational_grids"}, {"score": 0.004689650818647484, "phrase": "great_promise"}, {"score": 0.004628223381645729, "phrase": "geographically_separated_heterogeneous_resources"}, {"score": 0.004567596860086148, "phrase": "large-scale_complex_problems"}, {"score": 0.004371160978838441, "phrase": "major_technical_hurdles"}, {"score": 0.00431388720289049, "phrase": "distributed_resource_management"}, {"score": 0.004276120412040056, "phrase": "effective_job_scheduling"}, {"score": 0.004220086640742953, "phrase": "main_focus"}, {"score": 0.004092168350316413, "phrase": "online_scheduling"}, {"score": 0.004056334733843591, "phrase": "real_time_applications"}, {"score": 0.004020813632357377, "phrase": "distributed_environments"}, {"score": 0.003698442219929622, "phrase": "prespecified_lifecycle"}, {"score": 0.003492840830999027, "phrase": "optimum_overall_time"}, {"score": 0.003447035529485425, "phrase": "specified_deadlines"}, {"score": 0.0031151864044353245, "phrase": "mathematical_neural_model"}, {"score": 0.0029548937818509656, "phrase": "main_contributions"}, {"score": 0.0028526276660691525, "phrase": "impatiency_factor"}, {"score": 0.002802825862847951, "phrase": "resource_fault"}, {"score": 0.0027782510491938315, "phrase": "performance_modeling"}, {"score": 0.002753891109273246, "phrase": "nondedicated_distributed_systems"}, {"score": 0.002682081928174866, "phrase": "efficient_and_fast_parallel_scheduling_algorithm"}, {"score": 0.002623669616798891, "phrase": "heterogeneous_resources"}, {"score": 0.0025892330566358503, "phrase": "proposed_model"}, {"score": 0.0025217065652145443, "phrase": "parallel_machines"}, {"score": 0.002434396049547248, "phrase": "new_model"}, {"score": 0.0023918783117166326, "phrase": "gridsim_toolkit"}, {"score": 0.0023294867572824147, "phrase": "different_parameters"}, {"score": 0.0022687189700002254, "phrase": "scheduling_algorithm"}, {"score": 0.002248816575548875, "phrase": "simulation_outcomes"}], "paper_keywords": ["scheduling", " grid computing", " neural networks", " parallel computing"], "paper_abstract": "Computational grids hold great promise in utilizing geographically separated heterogeneous resources to solve large-scale complex problems. However, they suffer from a number of major technical hurdles, including distributed resource management and effective job scheduling. The main focus of this work is devoted on online scheduling of real time applications in distributed environments such as grids. Specifically, we are interested in applications with several independent tasks, each task with a prespecified lifecycle called deadline. Here, our goal is to schedule applications within an optimum overall time considering the specified deadlines. To achieve this, the resource performance prediction based on workload modeling and with the help of queuing techniques is employed. Afterward, a mathematical neural model is used to schedule the subtasks of the application. The main contributions of this work is to incorporate the impatiency factor as well as resource fault in performance modeling of nondedicated distributed systems, and also presenting an efficient and fast parallel scheduling algorithm under time constraint and heterogeneous resources. The proposed model is appropriate for implementation on parallel machines and in O(1) time. The new model was implemented on GridSim toolkit and under various conditions and with different parameters to evaluate the performance of scheduling algorithm. Simulation outcomes have shown that approximately in 87.8% of cases, our model schedules the tasks in such a way that all constraints are satisfied.", "paper_title": "Fault-aware grid scheduling using performance prediction by workload modeling", "paper_id": "WOS:000258886900002"}