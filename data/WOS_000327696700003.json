{"auto_keywords": [{"score": 0.041469740173514014, "phrase": "hors"}, {"score": 0.00481495049065317, "phrase": "verifying_higher-order_programs"}, {"score": 0.004450568197899267, "phrase": "useful_abstraction"}, {"score": 0.004406994912939125, "phrase": "higher-order_functional_programs"}, {"score": 0.004299910946753963, "phrase": "new_verification_techniques"}, {"score": 0.004257806363128601, "phrase": "hors_model-checking"}, {"score": 0.004053362743156545, "phrase": "ongoing_quest"}, {"score": 0.003993958025223994, "phrase": "truly_scalable_model-checker"}, {"score": 0.0037834649508375544, "phrase": "first_practical_model-checking_algorithm"}, {"score": 0.003548905904860611, "phrase": "hors_called_collapsible_pushdown_systems"}, {"score": 0.0033950634506367235, "phrase": "substantial_modification"}, {"score": 0.0033452741392850523, "phrase": "recently_studied_saturation_algorithm"}, {"score": 0.003312486229143855, "phrase": "cpds."}, {"score": 0.0031223774204093713, "phrase": "approximate_forward_reachability_analysis"}, {"score": 0.002914291991717456, "phrase": "cpds"}, {"score": 0.0027605398374811667, "phrase": "negative_instances"}, {"score": 0.00266693888510356, "phrase": "state-of-the-art_verification_tools"}, {"score": 0.0024891269874339553, "phrase": "main_competition"}, {"score": 0.0023003498123420237, "phrase": "significantly_improved_performance"}, {"score": 0.0021049977753042253, "phrase": "additional_material"}], "paper_keywords": ["Higher-Order", " Verification", " Model-Checking", " Recursion Schemes", " Collapsible Pushdown Systems"], "paper_abstract": "Higher-order recursion schemes (HORS) have recently received much attention as a useful abstraction of higher-order functional programs with a number of new verification techniques employing HORS model-checking as their centrepiece. This paper contributes to the ongoing quest for a truly scalable model-checker for HORS by offering a different, automata theoretic perspective. We introduce the first practical model-checking algorithm that acts on a generalisation of pushdown automata equi-expressive with HORS called collapsible pushdown systems (CPDS). At its core is a substantial modification of a recently studied saturation algorithm for CPDS. In particular it is able to use information gathered from an approximate forward reachability analysis to guide its backward search. Moreover, we introduce an algorithm that prunes the CPDS prior to model-checking and a method for extracting counter-examples in negative instances. We compare our tool with the state-of-the-art verification tools for HORS and obtain encouraging results. In contrast to some of the main competition tackling the same problem, our algorithm is fixed-parameter tractable, and we also offer significantly improved performance over the only previously published tool of which we are aware that also enjoys this property. The tool and additional material are available from http://cshore.cs.rhul.ac.uk.", "paper_title": "C-SHORe A Collapsible Approach to Verifying Higher-Order Programs", "paper_id": "WOS:000327696700003"}