{"auto_keywords": [{"score": 0.04832675252243851, "phrase": "rlcs"}, {"score": 0.035513667076420063, "phrase": "weighted_length"}, {"score": 0.034460077388657424, "phrase": "rlcs."}, {"score": 0.0339446480212414, "phrase": "waq"}, {"score": 0.03343666110274871, "phrase": "proposed_method"}, {"score": 0.02831231797229379, "phrase": "filtering_algorithm"}, {"score": 0.00481495049065317, "phrase": "rough_longest_common_subsequence"}, {"score": 0.00469678464293492, "phrase": "music_matching_method"}, {"score": 0.004469042910390712, "phrase": "improved_version"}, {"score": 0.004427663921391487, "phrase": "lcs"}, {"score": 0.004332322079100859, "phrase": "global_alignment_matching"}, {"score": 0.004305481798183612, "phrase": "first_a_rough_equality"}, {"score": 0.003971262520692664, "phrase": "real_number"}, {"score": 0.0037318666008429014, "phrase": "matched_notes"}, {"score": 0.003336614511719501, "phrase": "corresponding_rlcs"}, {"score": 0.0032953582866530966, "phrase": "score_measurement"}, {"score": 0.0031944780380253677, "phrase": "war"}, {"score": 0.003135356056324338, "phrase": "dense_errors"}, {"score": 0.0031062294139798273, "phrase": "dynamic_programming_algorithm"}, {"score": 0.002777055546998579, "phrase": "better_and_simpler_manner"}, {"score": 0.002708766459414734, "phrase": "matching_process"}, {"score": 0.0026421521830403377, "phrase": "tarhio"}, {"score": 0.0026257562748624253, "phrase": "ukkonen"}, {"score": 0.002521623057264411, "phrase": "reference_areas"}, {"score": 0.0024519545383399773, "phrase": "proposed_algorithm"}, {"score": 0.002436735294813786, "phrase": "content-based_music_retrieval"}, {"score": 0.002362041061180632, "phrase": "retrieval_system"}, {"score": 0.002340081450249521, "phrase": "higher_retrieval_rate"}, {"score": 0.0023039337947957077, "phrase": "local_alignment_method"}, {"score": 0.0022825131641434964, "phrase": "suyoto_et_al"}, {"score": 0.0021580985506699105, "phrase": "computation_time"}, {"score": 0.0021446993452098597, "phrase": "exact_matching"}, {"score": 0.0021247560305587155, "phrase": "approximate_matching"}, {"score": 0.0021049977753042253, "phrase": "low_error_tolerance"}], "paper_keywords": ["content-based music retrieval", " rough longest common subsequence (RLCS)", " local alignment", " information retrieval", " musical similarity", " filtering algorithm"], "paper_abstract": "In this paper we proposed a music matching method, called the RLCS (rough longest common subsequence) method. It is an improved version of the LCS to avoid some problems occurring in global alignment matching. First a rough equality for two notes is defined for constructing the RLCS of two music fragments. The length of the RLCS of two music sequences defined in this work is a real number, called a weighted length. It is evaluated according to the degree of similarity of every pair of matched notes from the two sequences. This method takes into account both the width-across-query (WAQ) and the width-across-reference (WAR) and combines them with the weighted length of the corresponding RLCS to define a score measurement for the RLCS. The measurement associated with WAQ and WAR enables the proposed method to tolerate dense errors. A dynamic programming algorithm is presented for simultaneously calculating the weighted length of RLCS, the WAQ, the WAR, and the score to determine the RLCS. As a result, the proposed method can perform the matching in a better and simpler manner. In order to speed up the matching process, we use the filtering algorithm proposed by Tarhio and Ukkonen [22] to filter the reference and discard most of the reference areas that do not match. We applied the proposed algorithm to content-based music retrieval. The experimental results showed that with our proposed algorithm the retrieval system provides a higher retrieval rate than that with the local alignment method proposed by Suyoto et al. [20]. The use of the filtering algorithm has been shown to greatly reduce the computation time for exact matching and for approximate matching with a low error tolerance.", "paper_title": "Music Matching Based on Rough Longest Common Subsequence", "paper_id": "WOS:000286692500008"}