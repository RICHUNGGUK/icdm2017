{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "g-finder"}, {"score": 0.004996200796657175, "phrase": "programming_questions"}, {"score": 0.004768104290288521, "phrase": "routing_programming_questions_closer"}, {"score": 0.004652963867892925, "phrase": "programming_forums"}, {"score": 0.004562847483469705, "phrase": "primary_tools"}, {"score": 0.004323886831151445, "phrase": "popular_programming_forums"}, {"score": 0.004240116703465252, "phrase": "forum_users"}, {"score": 0.004057495982111461, "phrase": "small_number"}, {"score": 0.0038261310307416475, "phrase": "usage_experience"}, {"score": 0.003520687960750365, "phrase": "intelligent_routing_decisions"}, {"score": 0.0033524956061690868, "phrase": "particular_programming_question"}, {"score": 0.003239549357111286, "phrase": "source_code_information"}, {"score": 0.003192312493850036, "phrase": "software_systems"}, {"score": 0.003054681986032532, "phrase": "latent_relationships"}, {"score": 0.002937318465594425, "phrase": "concept_networks"}, {"score": 0.0028944757265206332, "phrase": "user_networks"}, {"score": 0.002852256089630964, "phrase": "program_source"}, {"score": 0.0028106505443369545, "phrase": "forum_data"}, {"score": 0.0026372419109713923, "phrase": "adaptive_ranking"}, {"score": 0.002598764579760562, "phrase": "potential_experts"}, {"score": 0.0024264776194357993, "phrase": "retrospective_view"}, {"score": 0.002232519579957707, "phrase": "evaluation_results"}, {"score": 0.0021678232353129472, "phrase": "prediction_precision"}, {"score": 0.0021049977753042253, "phrase": "related_approaches"}], "paper_keywords": ["Design", " Human Factors", " Expert Search", " Social Networks", " Programming Forums"], "paper_abstract": "Programming forums are becoming the primary tools for programmers to find answers for their programming problems. Our empirical study of popular programming forums shows that the forum users experience long waiting period for answers and a small number of experts are often overloaded with questions. To improve the usage experience, we have designed and implemented G-Finder, both an algorithm and a tool that makes intelligent routing decisions as to which participant is the expert for answering a particular programming question. Our main approach is to leverage the source code information of the software systems that forums are dedicated to, and discover latent relationships between forums users. Our algorithms construct the concept networks and the user networks from the program source and the forum data. We use programming questions to dynamically integrate these two networks and present an adaptive ranking of the potential experts. Our evaluation of G-Finder, using the data from three large programming forums, takes a retrospective view to check if G-Finder can correctly predict the experts who provided answers to programming questions. The evaluation results show that G-Finder improves the prediction precision by 25% to 74%, compared to related approaches.", "paper_title": "G-Finder: Routing Programming Questions Closer to the Experts", "paper_id": "WOS:000286595800005"}