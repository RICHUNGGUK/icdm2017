{"auto_keywords": [{"score": 0.04127223017199095, "phrase": "operations_languages"}, {"score": 0.00481495049065317, "phrase": "program_translation"}, {"score": 0.0047527118741586055, "phrase": "verification_tools"}, {"score": 0.004691273968935458, "phrase": "annotated_grammars"}, {"score": 0.004570759604335229, "phrase": "program_translators"}, {"score": 0.004511663118269957, "phrase": "source_and_target_language_specifications"}, {"score": 0.004424441580112395, "phrase": "non-trivial_problem"}, {"score": 0.0037112756920669593, "phrase": "satellite_operations_procedures"}, {"score": 0.003477264432055326, "phrase": "transformation_tools"}, {"score": 0.003194898129853895, "phrase": "annotated_context-free_grammars"}, {"score": 0.0030924870122337905, "phrase": "overall_translation_process"}, {"score": 0.002935393439834135, "phrase": "intermediate_representation"}, {"score": 0.0025934566395017424, "phrase": "verification_system"}, {"score": 0.002543224008253855, "phrase": "translation_process"}, {"score": 0.002336527289457915, "phrase": "real_world_operations_languages"}, {"score": 0.0022763657774198184, "phrase": "prototype_tool"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Annotated grammars", " Operations languages", " Language families", " Program translation", " Automated translation", " ASF plus SDF"], "paper_abstract": "Automatically generating program translators from source and target language specifications is a non-trivial problem. In this paper we focus on the problem of automating the process of building translators between operations languages, a family of DSLs used to program satellite operations procedures. We exploit their similarities to semi-automatically build transformation tools between these DSLs. The input to our method is a collection of annotated context-free grammars. To simplify the overall translation process even more, we also propose an intermediate representation common to all operations languages. Finally, we discuss how to enrich our annotated grammars model with more advanced semantic annotations to provide a verification system for the translation process. We validate our approach by semi-automatically deriving translators between some real world operations languages, using the prototype tool which we implemented for that purpose. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Automated generation of program translation and verification tools using annotated grammars", "paper_id": "WOS:000273230800002"}