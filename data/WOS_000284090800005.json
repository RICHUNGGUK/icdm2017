{"auto_keywords": [{"score": 0.04212056222373336, "phrase": "structure_summary"}, {"score": 0.01927377040262204, "phrase": "content_summary"}, {"score": 0.010612387000973441, "phrase": "hypercube_overlay_network"}, {"score": 0.010200825376532219, "phrase": "xcube"}, {"score": 0.00942451270215518, "phrase": "d-bit_vector"}, {"score": 0.007206543805611547, "phrase": "bit_vector"}, {"score": 0.004501453956464956, "phrase": "xml_data"}, {"score": 0.004339108074589307, "phrase": "d-dimensional_hypercube"}, {"score": 0.004195418010131832, "phrase": "smaller_hypercube"}, {"score": 0.004093901605219401, "phrase": "xml_document"}, {"score": 0.0038624981944755813, "phrase": "distinct_tag_names"}, {"score": 0.003644126753595137, "phrase": "bit_map"}, {"score": 0.0035997452281985465, "phrase": "document_content"}, {"score": 0.003459191419478298, "phrase": "document_identifier"}, {"score": 0.003050750896241337, "phrase": "document's_bit_vector"}, {"score": 0.003022825806274343, "phrase": "xpath_query"}, {"score": 0.002665770884424872, "phrase": "anchor_peers"}, {"score": 0.002641360377825228, "phrase": "matching_synopses"}, {"score": 0.002585266023089103, "phrase": "anchor_peer"}, {"score": 0.0025615908073796027, "phrase": "related_synopsis"}, {"score": 0.0025148871904409095, "phrase": "related_bit_maps"}, {"score": 0.002461472107682778, "phrase": "related_owner_peers"}, {"score": 0.0024018107447434022, "phrase": "owner_peers"}, {"score": 0.002358013394257883, "phrase": "xml_documents"}, {"score": 0.002315012841166354, "phrase": "querying_peer"}, {"score": 0.002157302200451323, "phrase": "partition_history"}, {"score": 0.002137537770621167, "phrase": "redundant_messages"}, {"score": 0.0021049977753042253, "phrase": "comprehensive_experimental_study"}], "paper_keywords": ["XML", " Query processing", " Distributed databases", " Data communications"], "paper_abstract": "In this paper, we present the design and performance of XCube, a tag-based system for managing XML data in a hypercube overlay network. In XCube, each node in a d-dimensional hypercube is identified by a d-bit vector. A peer manages a smaller hypercube with dimension d' < d. An XML document is compactly represented as a structure summary and a content summary. The structure summary comprises a d-bit vector derived from the distinct tag names in the document and a synopsis capturing the structure of the document. The content summary consists of a bit map that summarizes the document content. The metadata of a document, i.e., owner IP, document identifier, structure summary and content summary, is indexed at its anchor peer (the peer that manages the node with matching bit vector). In addition, the structure summary is further indexed at all peers that manages nodes whose bit vectors are covered by the document's bit vector. An XPath query is processed in four phases. In phase 1, the query is routed to its anchor peer according to the bit vector of the query. In phase 2, the query is evaluated against all the synopses stored in its anchor peer and forwarded to the anchor peers of the matching synopses. In phase 3, the anchor peer of each related synopsis examines the query on the related bit maps and forwards the query to the related owner peers. Finally in phase 4, the owner peers evaluate the query on the XML documents and return answers to the querying peer. We also present a scheme that dynamically partitions the hypercube to balance the load across peers. We further exploit the partition history to remove redundant messages. We conduct a comprehensive experimental study and the results show the efficiency of XCube.", "paper_title": "XCube: Processing XPath queries in a hypercube overlay network", "paper_id": "WOS:000284090800005"}