{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "abstract_interpretation"}, {"score": 0.004704495156558224, "phrase": "static_analyzers"}, {"score": 0.00466102244911872, "phrase": "abstract_domains"}, {"score": 0.0045119929871912405, "phrase": "pre-calculated_property_transformers"}, {"score": 0.004228016636379321, "phrase": "property_transformers"}, {"score": 0.00372965096877929, "phrase": "sweet_spot"}, {"score": 0.003644001325962353, "phrase": "specific_application_domain"}, {"score": 0.0034947408949397127, "phrase": "new_formalization"}, {"score": 0.003446353878654566, "phrase": "proof_theoretic_approach"}, {"score": 0.0033986345279488476, "phrase": "abstract_interpretation_framework"}, {"score": 0.0032898346872897383, "phrase": "multiple_interpretations"}, {"score": 0.0028882701690741467, "phrase": "key_observation"}, {"score": 0.0028350413546400703, "phrase": "nelson-oppen_procedure"}, {"score": 0.0027188259793109264, "phrase": "logical_theories"}, {"score": 0.002607362103727335, "phrase": "reduced_product"}, {"score": 0.002500456462028735, "phrase": "new_\"observations"}, {"score": 0.0024543571925896073, "phrase": "alien_terms"}, {"score": 0.0021445492649196955, "phrase": "application_scope"}, {"score": 0.0021246816854197732, "phrase": "logical_abstractions"}, {"score": 0.0021049977753042253, "phrase": "static_analysis"}], "paper_keywords": ["Languages", " Performance", " Reliability", " Theory", " Verification", " Abstract interpretation", " decision procedures", " program logics", " program verification", " Sat modulo theory", " Smt solver", " semantics", " static analysis", " theorem proving"], "paper_abstract": "The algebraic/model theoretic design of static analyzers uses abstract domains based on representations of properties and pre-calculated property transformers. It is very efficient. The logical/proof theoretic approach uses SMT solvers/theorem provers and computation of property transformers on-the-fly. It is very expressive. We propose to unify both approaches, so that they can be combined to reach the sweet spot best adapted to a specific application domain in the precision/cost spectrum. We first give a new formalization of the proof theoretic approach in the abstract interpretation framework, introducing a semantics based on multiple interpretations to deal with the soundness of such approaches. Then we describe how to combine them with any other abstract interpretation-based analysis using an iterated reduction to combine abstractions. The key observation is that the Nelson-Oppen procedure, which decides satisfiability in a combination of logical theories by exchanging equalities and disequalities, computes a reduced product (after the state is enhanced with some new \"observations\" corresponding to alien terms). By abandoning restrictions ensuring completeness (such as disjointness, convexity, stably-infiniteness, or shininess, etc.), we can even broaden the application scope of logical abstractions for static analysis (which is incomplete anyway).", "paper_title": "Theories, Solvers and Static Analysis by Abstract Interpretation", "paper_id": "WOS:000313350000004"}