{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "dynamic_optimization_problems"}, {"score": 0.03596176205294269, "phrase": "learning_scheme"}, {"score": 0.00462919213721188, "phrase": "prestigious_journal"}, {"score": 0.004608900405451377, "phrase": "science"}, {"score": 0.004561386908745206, "phrase": "algorithm_portfolios"}, {"score": 0.00447251540886613, "phrase": "popular_approach"}, {"score": 0.004406994912939125, "phrase": "static_problems"}, {"score": 0.0037834649508375544, "phrase": "powerful_tool"}, {"score": 0.003728000957725218, "phrase": "combinatorial_dops"}, {"score": 0.003566422652043389, "phrase": "new_algorithm_portfolio"}, {"score": 0.00307657476125683, "phrase": "search_stage"}, {"score": 0.0029142950273859888, "phrase": "onemax"}, {"score": 0.002886174472026169, "phrase": "plateau"}, {"score": 0.0028574164693918433, "phrase": "royalroad"}, {"score": 0.002829397026920481, "phrase": "deceptive"}, {"score": 0.0028016849228129402, "phrase": "knapsack"}, {"score": 0.002404706573379854, "phrase": "good_design"}, {"score": 0.0023003498123420237, "phrase": "algorithm_portfolio"}, {"score": 0.0022665781920241245, "phrase": "isolated_version"}, {"score": 0.0021049977753042253, "phrase": "reference_algorithms"}], "paper_keywords": ["learning", " algorithm portfolio", " algorithm selection problem", " combinatorial problems", " dynamic optimization problems"], "paper_abstract": "Since their first appearance in 1997 in the prestigious journal Science, algorithm portfolios have become a popular approach to solve static problems. Nevertheless and despite that success, they have not received much attention in Dynamic Optimization Problems (DOPs). In this work, we aim at showing these methods as a powerful tool to solve combinatorial DOPs. To this end, we propose a new algorithm portfolio for this type of problems that incorporates a learning scheme to select, among the metaheuristics that compose it, the most appropriate solver or solvers for each problem, configuration and search stage. This method was tested over 5 binary-coded problems (dynamic variants of OneMax, Plateau, RoyalRoad, Deceptive and Knapsack) and compared versus two reference algorithms for these problems (Adaptive Hill Climbing Memetic Algorithm and Self Organized Random Immigrants Genetic Algorithm). The results showed the importance of a good design of the learning scheme, the superiority of the algorithm portfolio against the isolated version of the metaheuristics that integrate it, and the competitiveness of its performance versus the reference algorithms.", "paper_title": "Algorithm portfolio based scheme for dynamic optimization problems", "paper_id": "WOS:000353952500003"}