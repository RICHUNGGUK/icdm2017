{"auto_keywords": [{"score": 0.01555484061708084, "phrase": "succinct_data_structures"}, {"score": 0.009510670276450313, "phrase": "runtime_performance"}, {"score": 0.00481495049065317, "phrase": "massive_data"}, {"score": 0.004259293347851015, "phrase": "basic_building_blocks"}, {"score": 0.0036100762867678415, "phrase": "recent_result"}, {"score": 0.00357177694433128, "phrase": "navarro"}, {"score": 0.0034963129868796033, "phrase": "compressed_bitvectors"}, {"score": 0.003108911488613549, "phrase": "existing_methods"}, {"score": 0.002824005136794786, "phrase": "data_sets"}, {"score": 0.002578880352208335, "phrase": "basic_operations"}, {"score": 0.002497531381123025, "phrase": "compression_effectiveness"}, {"score": 0.0024447258861321685, "phrase": "small_and_large_data_sets"}, {"score": 0.002220551141101661, "phrase": "current_state"}, {"score": 0.002185235873435714, "phrase": "art_implementations"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["succinct data structures", " binary sequences", " FM-index", " algorithm engineering", " massive data sets", " rank", " select", " SSE", " hugepages"], "paper_abstract": "Succinct data structures provide the same functionality as their corresponding traditional data structure in compact space. We improve on functions rank and select, which are the basic building blocks of FM-indexes and other succinct data structures. First, we present a cache-optimal, uncompressed bitvector representation that outperforms all existing approaches. Next, we improve, in both space and time, on a recent result by Navarro and Providel on compressed bitvectors. Last, we show techniques to perform rank and select on 64-bit words that are up to three times faster than existing methods. In our experimental evaluation, we first show how our improvements affect cache and runtime performance of both operations on data sets larger than commonly used in the evaluation of succinct data structures. Our experiments show that our improvements to these basic operations significantly improve the runtime performance and compression effectiveness of FM-indexes on small and large data sets. To our knowledge, our improvements result in FM-indexes that are either smaller or faster than all current state of the art implementations. Copyright (C) 2013 John Wiley & Sons, Ltd.", "paper_title": "Optimized succinct data structures for massive data", "paper_id": "WOS:000344733400001"}