{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "domain-specific_languages"}, {"score": 0.03695661745574251, "phrase": "domain_analysis"}, {"score": 0.0033015555065209865, "phrase": "common_reason"}, {"score": 0.003265090934183249, "phrase": "formal_methodologies"}, {"score": 0.0027333769432036905, "phrase": "previously_existing_analysis"}, {"score": 0.002643753276264565, "phrase": "particularly_suitable_form"}, {"score": 0.002486987042061596, "phrase": "ontology-based_domain_analysis"}, {"score": 0.0023656467839555458, "phrase": "dsl_design_phase"}, {"score": 0.0022880528191813083, "phrase": "preliminary_results"}, {"score": 0.0021049977753042253, "phrase": "dsl_grammar"}], "paper_keywords": ["domain-specific language", " domain analysis", " ontology"], "paper_abstract": "Domain-specific languages (DSLs) are computer (programming, modeling, specification) languages devoted to solving problems in a specific domain. The development of a DSL includes the following phases: decision, analysis, design, implementation, testing, deployment, and maintenance. The least-known and least examined are analysis and design. Although various formal methodologies exist, domain analysis is still done informally most of the time. A common reason why formal methodologies are not used as often as they could be is that they are very demanding. Instead of developing a new, less complex methodology, we propose that domain analysis could be replaced with a previously existing analysis in another form. A particularly suitable form is the use of ontologies. This paper focuses on ontology-based domain analysis and how it can be incorporated into the DSL design phase. We will present the preliminary results of the Ontology2DSL framework, which can be used to help transform ontology to a DSL grammar incorporating concepts from a domain.", "paper_title": "Ontology Driven Development of Domain-Specific Languages", "paper_id": "WOS:000292705700005"}