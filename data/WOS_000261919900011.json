{"auto_keywords": [{"score": 0.035920003474671114, "phrase": "association_rule_mining"}, {"score": 0.014473227223235205, "phrase": "causal_analysis"}, {"score": 0.013554333923770055, "phrase": "reported_defects"}, {"score": 0.009292569296357597, "phrase": "discovered_patterns"}, {"score": 0.008978410279613045, "phrase": "subsequent_actions"}, {"score": 0.00826198348337358, "phrase": "proposed_approach"}, {"score": 0.00481495049065317, "phrase": "software_defect_prediction"}, {"score": 0.004787309936374976, "phrase": "association_mining"}, {"score": 0.00474614491353724, "phrase": "defect_pattern"}, {"score": 0.004638085752617182, "phrase": "early_stage"}, {"score": 0.004571795959568108, "phrase": "defect_prevention"}, {"score": 0.004391159805197013, "phrase": "common_approach"}, {"score": 0.004278807087784626, "phrase": "corrective_actions"}, {"score": 0.0041693170015901235, "phrase": "large_amounts"}, {"score": 0.004062617218035532, "phrase": "significant_effort"}, {"score": 0.003935892934907777, "phrase": "defect_prediction_approach"}, {"score": 0.0038796001080826778, "phrase": "performed_actions"}, {"score": 0.0035995531116064395, "phrase": "action-based_defect_prediction"}, {"score": 0.003487222504700868, "phrase": "decision_tree_technique"}, {"score": 0.0034472469397869463, "phrase": "prediction_model"}, {"score": 0.003263511910710557, "phrase": "basic_operation"}, {"score": 0.003216804708106142, "phrase": "software_project"}, {"score": 0.0031434552452869156, "phrase": "software_flaws"}, {"score": 0.0030629282276491403, "phrase": "software_process"}, {"score": 0.003010389418340144, "phrase": "maximum_rule"}, {"score": 0.0029844579234112466, "phrase": "specific_minimum_support"}, {"score": 0.0029332611651817528, "phrase": "discovered_knowledge"}, {"score": 0.0028746373686059238, "phrase": "prediction_models"}, {"score": 0.002858103326172894, "phrase": "software_process_behaviors"}, {"score": 0.0027134999393695542, "phrase": "necessary_corrective_actions"}, {"score": 0.00266693888510356, "phrase": "proposed_defect_prediction_approach"}, {"score": 0.002628747284714371, "phrase": "defect_patterns"}, {"score": 0.002553992825810561, "phrase": "continuous_attributes"}, {"score": 0.002481358892606969, "phrase": "business_project"}, {"score": 0.00245997322259401, "phrase": "excellent_prediction_results"}, {"score": 0.002390006740266194, "phrase": "main_benefit"}, {"score": 0.002335465722613665, "phrase": "discovered_defect_patterns"}, {"score": 0.002282166507956957, "phrase": "in-process_projects"}, {"score": 0.0022365262201954643, "phrase": "reported_data"}, {"score": 0.002217245958060308, "phrase": "different_projects"}, {"score": 0.0021049977753042253, "phrase": "software_process_improvement"}], "paper_keywords": ["Software defect prediction", " Association rule", " Multi-interval discretization"], "paper_abstract": "Rather than detecting defects at an early stage to reduce their impact, defect prevention means that defects are prevented from occurring in advance. Causal analysis is a common approach to discover the causes of defects and take corrective actions. However, selecting defects to analyze among large amounts of reported defects is time consuming, and requires significant effort. To address this problem, this study proposes a defect prediction approach where the reported defects and performed actions are utilized to discover the patterns of actions which are likely to cause defects. The approach proposed in this study is adapted from the Action-Based Defect Prediction (ABDP), an approach uses the classification with decision tree technique to build a prediction model, and performs association rule mining on the records of actions and defects. An action is defined as a basic operation used to perform a software project, while a defect is defined as software flaws and can arise at any stage of the software process. The association rule mining finds the maximum rule set with specific minimum support and confidence and thus the discovered knowledge can be utilized to interpret the prediction models and software process behaviors. The discovered patterns then can be applied to predict the defects generated by the subsequent actions and take necessary corrective actions to avoid defects. The proposed defect prediction approach applies association rule mining to discover defect patterns, and multi-interval discretization to handle the continuous attributes of actions. The proposed approach is applied to a business project, giving excellent prediction results and revealing the efficiency of the proposed approach. The main benefit of using this approach is that the discovered defect patterns can be used to evaluate subsequent actions for in-process projects, and reduce variance of the reported data resulting from different projects. Additionally, the discovered patterns can be used in causal analysis to identify the causes of defects for software process improvement. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Integrating in-process software defect prediction with association mining to discover defect pattern", "paper_id": "WOS:000261919900011"}