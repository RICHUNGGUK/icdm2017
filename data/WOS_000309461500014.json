{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "procedural_texturing"}, {"score": 0.0047267100475487595, "phrase": "procedural_pattern_generation_process"}, {"score": 0.00428257928723, "phrase": "multi-scale_composition"}, {"score": 0.004230068512904886, "phrase": "multi-variate_statistical_figures"}, {"score": 0.004001593118269276, "phrase": "noise-like_texture_basis_functions"}, {"score": 0.0037854112749311844, "phrase": "structured_procedural_textures"}, {"score": 0.003145417398038261, "phrase": "spatial_dependencies"}, {"score": 0.0030123335878664064, "phrase": "multi-variate_approach"}, {"score": 0.0029027394930867902, "phrase": "finite_sets"}, {"score": 0.0028670988845838296, "phrase": "constant_figures"}, {"score": 0.002762774046280398, "phrase": "nearly_infinite_variations"}, {"score": 0.0025338369486914364, "phrase": "statistical_shape_model"}, {"score": 0.002426566352219338, "phrase": "shape_variations"}, {"score": 0.0023527296826339225, "phrase": "direct_gpu_implementation"}, {"score": 0.002323826502178581, "phrase": "assemblage_textures"}, {"score": 0.002239225269052105, "phrase": "new_classes"}, {"score": 0.0022117133940361025, "phrase": "procedural_textures"}, {"score": 0.0021845387990972543, "phrase": "real-time_rendering"}, {"score": 0.0021049977753042253, "phrase": "usual_procedural_textures"}], "paper_keywords": ["procedural texturing", " noise", " procedural object distribution function", " GPU shader"], "paper_abstract": "A procedural pattern generation process, called multi-scale assemblage is introduced. An assemblage is defined as a multi-scale composition of multi-variate statistical figures, that can be kernel functions for defining noise-like texture basis functions, or that can be patterns for defining structured procedural textures. This paper presents two main contributions: 1) a new procedural random point distribution function, that, unlike point jittering, allow us to take into account some spatial dependencies among figures and 2) a multi-variate approach that, instead of defining finite sets of constant figures, allows us to generate nearly infinite variations of figures on-the-fly. For both, we use a statistical shape model, which is a representation of shape variations. Thanks to a direct GPU implementation, assemblage textures can be used to generate new classes of procedural textures for real-time rendering by preserving all characteristics of usual procedural textures, namely: infinity, definition independency (provided the figures are also definition independent) and extreme compactness.", "paper_title": "Multi-scale Assemblage for Procedural Texturing", "paper_id": "WOS:000309461500014"}