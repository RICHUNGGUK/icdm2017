{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_itemsets"}, {"score": 0.02775564236899546, "phrase": "data_stream"}, {"score": 0.013390013101296276, "phrase": "closed_frequent_itemsets"}, {"score": 0.0071209878915792545, "phrase": "jumping_window"}, {"score": 0.004790346684299193, "phrase": "proposed_algorithm"}, {"score": 0.004512814529823301, "phrase": "novel_methodology"}, {"score": 0.003453584878128719, "phrase": "reduced_memory_space"}, {"score": 0.003057910095857785, "phrase": "different_time_intervals"}, {"score": 0.002456148932305311, "phrase": "execution_time"}, {"score": 0.002264607102799332, "phrase": "widely_known_moment_algorithm"}, {"score": 0.0022101055924375725, "phrase": "ibm_synthetic_data_sets"}, {"score": 0.0021745003291048356, "phrase": "benchmark_data_sets"}, {"score": 0.0021049977753042253, "phrase": "uci_machine_learning_repository"}], "paper_keywords": [""], "paper_abstract": "The paper proposes a novel methodology of finding frequent itemsets in data stream. Fuzzification of support of the closed frequent itemsets in conjunction with a jumping window has been used for finding frequent itemsets. Closed frequent itemsets help in retaining all frequent itemsets in a reduced memory space. Fuzzifying the support of the closed frequent itemsets helps in preserving information regarding frequent itemsets at different time intervals in the data stream. The use of the jumping window over the data stream improves the speed of the proposed algorithm. Effectiveness of the proposed algorithm in terms of execution time and accuracy is shown by comparing its performance with the widely known MOMENT algorithm on both IBM synthetic data sets and benchmark data sets taken from the UCI Machine Learning Repository.", "paper_title": "A Novel Approach for Finding Frequent Itemsets in Data Stream", "paper_id": "WOS:000313992600003"}