{"auto_keywords": [{"score": 0.04789568572973002, "phrase": "implicit_surfaces"}, {"score": 0.004815072515236847, "phrase": "gpu"}, {"score": 0.004299228562179176, "phrase": "graphics_applications"}, {"score": 0.00421410521089045, "phrase": "efficient_solution"}, {"score": 0.003942299471749811, "phrase": "modern_gpus"}, {"score": 0.0035669891404642015, "phrase": "practical_gpu-based_approach"}, {"score": 0.0032272929113113203, "phrase": "new_schemes"}, {"score": 0.00312138530097218, "phrase": "parallel_features"}, {"score": 0.0030595112110658675, "phrase": "gpu_hardware"}, {"score": 0.002421975107313603, "phrase": "significant_improvement"}, {"score": 0.0023739321566540682, "phrase": "resultant_mesh_quality"}], "paper_keywords": ["Implicit surface", " Polygonization", " Mesh optimization", " GPU parallelization"], "paper_abstract": "Despite the popularity of polygonization of implicit surfaces in graphics applications, an efficient solution to both polygonize and optimize meshes from implicit surfaces on modern GPUs has not been developed to date. In this paper, we introduce a practical GPU-based approach to efficiently polygonize and optimize iso-surface meshes for implicit surfaces. Specifically, we design new schemes to maximally exploit the parallel features of the GPU hardware, by optimizing both the geometry (vertex position, vertex distribution, triangle shape, and triangle normal) and the topology (connectivity) aspects of a mesh. Our experimental results show that, besides significant improvement on the resultant mesh quality, our GPU-based approach is approximately an order of magnitude faster than its CPU counterpart and faster than or comparable to other GPU iso-surface extraction methods. Furthermore, the achieved speedup becomes even higher if the resolution of the iso-surface is increased.", "paper_title": "GPU-based polygonization and optimization for implicit surfaces", "paper_id": "WOS:000348310800003"}