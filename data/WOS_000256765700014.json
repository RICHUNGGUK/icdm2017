{"auto_keywords": [{"score": 0.04378545184645282, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "large_spatial_datasets"}, {"score": 0.004760518730536645, "phrase": "traditional_domains"}, {"score": 0.004514491994233911, "phrase": "medoid_computation"}, {"score": 0.004480394224548146, "phrase": "related_problems"}, {"score": 0.004412965940679449, "phrase": "important_role"}, {"score": 0.004379631619412168, "phrase": "numerous_emerging_fields"}, {"score": 0.004313713204732449, "phrase": "location_based_services"}, {"score": 0.004281125387210667, "phrase": "sensor_networks"}, {"score": 0.00421668332357505, "phrase": "k-medoid_problem"}, {"score": 0.0040444053843446326, "phrase": "approximate_solutions"}, {"score": 0.004013843843250455, "phrase": "relatively_small_datasets"}, {"score": 0.003923532450854754, "phrase": "efficient_methods"}, {"score": 0.003650687199498576, "phrase": "improved_services"}, {"score": 0.0036093693971289754, "phrase": "proposed_solutions"}, {"score": 0.0035685175471526823, "phrase": "intrinsic_grouping_properties"}, {"score": 0.0035281264325950556, "phrase": "data_partition_index"}, {"score": 0.003371066990851953, "phrase": "previous_approaches"}, {"score": 0.0032951702142329357, "phrase": "comparable_or_better_quality"}, {"score": 0.0032578629307203097, "phrase": "small_fraction"}, {"score": 0.002951673109860487, "phrase": "medoid-aggregate_queries"}, {"score": 0.0027671619871474764, "phrase": "medoid_set"}, {"score": 0.0027151161550531206, "phrase": "average_distance"}, {"score": 0.0026741832921475667, "phrase": "user-specified_value"}, {"score": 0.0026338658998573752, "phrase": "medoid-optimization_queries"}, {"score": 0.0024227171881502636, "phrase": "aforementioned_problems"}, {"score": 0.002203200914130907, "phrase": "bichromatic_and_weighted_medoid_versions"}, {"score": 0.0021210562503816287, "phrase": "maximum_capacity"}, {"score": 0.0021049977753042253, "phrase": "dynamic_medoids"}], "paper_keywords": ["spatial databases", " query processing", " medoid queries"], "paper_abstract": "Besides traditional domains (e.g., resource allocation, data mining applications), algorithms for medoid computation and related problems will play an important role in numerous emerging fields, such as location based services and sensor networks. Since the k-medoid problem is NP-hard, all existing work deals with approximate solutions on relatively small datasets. This paper aims at efficient methods for very large spatial databases, motivated by: (1) the high and ever increasing availability of spatial data, and (2) the need for novel query types and improved services. The proposed solutions exploit the intrinsic grouping properties of a data partition index in order to read only a small part of the dataset. Compared to previous approaches, we achieve results of comparable or better quality at a small fraction of the CPU and I/O costs (seconds as opposed to hours, and tens of node accesses instead of thousands). In addition, we study medoid-aggregate queries, where k is not known in advance, but we are asked to compute a medoid set that leads to an average distance close to a user-specified value. Similarly, medoid-optimization queries aim at minimizing both the number of medoids k and the average distance. We also consider the max version for the aforementioned problems, where the goal is to minimize the maximum (instead of the average) distance between any object and its closest medoid. Finally, we investigate bichromatic and weighted medoid versions for all query types, as well as, maximum capacity and dynamic medoids.", "paper_title": "Tree-based partition querying: a methodology for computing medoids in large spatial datasets", "paper_id": "WOS:000256765700014"}