{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "python"}, {"score": 0.004589763483242731, "phrase": "variable_structure"}, {"score": 0.004535124351828787, "phrase": "common_simulation_environments"}, {"score": 0.004348936976349555, "phrase": "model_complexity"}, {"score": 0.004195418010131832, "phrase": "real_systems"}, {"score": 0.00407161650109722, "phrase": "unfeasibly_long_simulation_times"}, {"score": 0.004023120753104693, "phrase": "variable-structure_models"}, {"score": 0.003611751858608048, "phrase": "object-oriented_approach"}, {"score": 0.0034633412134999425, "phrase": "simulation_environment"}, {"score": 0.0032036590920314725, "phrase": "python_framework"}, {"score": 0.0030353401945270755, "phrase": "dymola"}, {"score": 0.0029991500396912923, "phrase": "openmodelica"}, {"score": 0.0028586409810976367, "phrase": "existing_models"}, {"score": 0.002692200353719145, "phrase": "different_simulation_tools"}, {"score": 0.0025202582748972122, "phrase": "simple_satellite_launch_example"}, {"score": 0.0023311233166534214, "phrase": "main_aim"}, {"score": 0.0022352169832099153, "phrase": "complex_models"}, {"score": 0.002143247921132179, "phrase": "simulation_time"}], "paper_keywords": ["variable-structure models", " physical models", " computer simulation"], "paper_abstract": "In modelling and simulation, model complexity increases with the complexity of real systems, often resulting in unfeasibly long simulation times. Variable-structure models, which can change their equation set during run-time, offer a solution. This article introduces an object-oriented approach that describes such models independent of a simulation environment. The problem of changing equations during run-time is addressed using a Python framework. Three tools are already integrated, namely, Dymola, OpenModelica and Matlab/Simulink. With this framework, existing models can be easily reused, and the advantages of different simulation tools can be leveraged. The framework is illustrated using a simple satellite launch example, along with instructions for how to use the framework. The main aim of the framework is to simulate complex models with a few mode changes and thus save simulation time. With two real-world examples and a scalability analysis, it is shown that the framework fulfils these requirements.", "paper_title": "A Python framework to create and simulate models with variable structure in common simulation environments", "paper_id": "WOS:000340371800004"}