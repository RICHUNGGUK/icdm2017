{"auto_keywords": [{"score": 0.030591655132464837, "phrase": "outfix-free_regular_languages"}, {"score": 0.023484779388791937, "phrase": "prime_outfix-free_decomposition"}, {"score": 0.00481495049065317, "phrase": "string_x"}, {"score": 0.004399905285945236, "phrase": "string_w"}, {"score": 0.0038721890530859578, "phrase": "set_x"}, {"score": 0.0032085525502105836, "phrase": "outfix_strings"}, {"score": 0.0030901063954739375, "phrase": "polynomial-time_algorithm"}, {"score": 0.002976019715894587, "phrase": "regular_languages"}, {"score": 0.0025409639091476363, "phrase": "finite_set"}, {"score": 0.0023214774334744713, "phrase": "finite-state_automaton"}, {"score": 0.0021049977753042253, "phrase": "linear-time_algorithm"}], "paper_keywords": ["regular languages", " outfix-freeness", " prime decomposition"], "paper_abstract": "A string x is an outfix of a string y if there is a string w such that x(1) wx (2) = y and x = x(1) x(2). A set X of strings is outfix-free if no string in X is an outfix of any other string in X. Based on the properties of outfix strings, we develop a polynomial-time algorithm that determines outfix-freeness of regular languages. Note that outfix-free regular languages are always finite. We consider two cases: 1) a language is given as a finite set of strings and 2) a language is given by a finite-state automaton. Furthermore, we investigate the prime outfix-free decomposition of outfix-free regular languages and design a linear-time algorithm that computes prime outfix-free decomposition for outfix-free regular languages. We also demonstrate the uniqueness of prime outfix-free decomposition.", "paper_title": "Outfix-free regular languages and prime outfix-free decomposition", "paper_id": "WOS:000252979800004"}