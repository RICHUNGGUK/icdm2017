{"auto_keywords": [{"score": 0.03817717905827684, "phrase": "network_design_problems"}, {"score": 0.026255405704328664, "phrase": "degree_constraints"}, {"score": 0.00481495049065317, "phrase": "degree_bounded_network_design"}, {"score": 0.004747429622531595, "phrase": "complete_undirected_graph"}, {"score": 0.004534428070512318, "phrase": "minimum_cost_simple_subgraph"}, {"score": 0.004361644989356558, "phrase": "simple_connectivity_requirement"}, {"score": 0.004285289574869884, "phrase": "spanning_tree"}, {"score": 0.00422516469733364, "phrase": "feasible_solution"}, {"score": 0.004151188559520802, "phrase": "network_design_problem"}, {"score": 0.0041090963724432494, "phrase": "np"}, {"score": 0.003978866233891427, "phrase": "polynomial_factor_approximation_algorithm"}, {"score": 0.0037868092509097404, "phrase": "cost_function"}, {"score": 0.003746871277361436, "phrase": "triangle_inequality"}, {"score": 0.0036942726653704213, "phrase": "constant_factor_approximation_algorithms"}, {"score": 0.003591272267478512, "phrase": "global_edge-connectivity"}, {"score": 0.0034911335714333507, "phrase": "minimum_bounded_degree_k-edge-connected_subgraph_problem"}, {"score": 0.003322540556404882, "phrase": "minimum_bounded_degree_steiner_network_problem"}, {"score": 0.0030847461428168614, "phrase": "maximum_connectivity_requirement"}, {"score": 0.0030521898646210413, "phrase": "global_vertex-connectivity"}, {"score": 0.0029670381308395505, "phrase": "minimum_bounded_degree_k-vertex-connected_subgraph_problem"}, {"score": 0.0027255350933549703, "phrase": "minimum_bounded_degree"}, {"score": 0.0027063176464371115, "phrase": "tree_problem"}, {"score": 0.002677744558540711, "phrase": "approximation_algorithms"}, {"score": 0.0026307897899760383, "phrase": "smallest_possible_maximum_degree"}, {"score": 0.002575526825728026, "phrase": "cost_guarantee"}, {"score": 0.0025125151618810523, "phrase": "optimal_cost"}, {"score": 0.002365815362517737, "phrase": "metric_costs"}, {"score": 0.0022835460368487233, "phrase": "christofides'_algorithm"}, {"score": 0.002259426425685765, "phrase": "metric_traveling_salesman_problem"}, {"score": 0.0022355610034493225, "phrase": "main_technical_tool"}, {"score": 0.002211947103318718, "phrase": "simplicity-preserving_edge"}, {"score": 0.0022041312401435346, "phrase": "splitting-off_operation"}, {"score": 0.0021501863832966966, "phrase": "short-cut\"_vertices"}, {"score": 0.0021049977753042253, "phrase": "connectivity_requirements"}], "paper_keywords": ["network design", " edge splitting-off", " graph connectivity"], "paper_abstract": "Given a complete undirected graph, a cost function on edges, and a degree bound B, the degree bounded network design problem is to find a minimum cost simple subgraph with maximum degree B satisfying given connectivity requirements. Even for a simple connectivity requirement such as finding a spanning tree, computing a feasible solution for the degree bounded network design problem is already NP-hard, and thus there is no polynomial factor approximation algorithm for this problem. In this paper, we show that when the cost function satisfies the triangle inequality, there are constant factor approximation algorithms for various degree bounded network design problems. In global edge-connectivity, there is a (2 + 1/k)-approximation algorithm for the minimum bounded degree k-edge-connected subgraph problem. In local edge-connectivity, there is a 4-approximation algorithm for the minimum bounded degree Steiner network problem when r(max) is even, and a 5.5-approximation algorithm when r(max) is odd, where r(max) is the maximum connectivity requirement. In global vertex-connectivity, there is a (2 + k-1/n+ 1/k)-approximation algorithm for the minimum bounded degree k-vertex-connected subgraph problem when n >= 2k, where n is the number of vertices. For spanning tree, there is a (1 + 1/B-1)-approximation algorithm for the minimum bounded degree spanning tree problem. These approximation algorithms return solutions with the smallest possible maximum degree, and in most cases the cost guarantee is obtained by comparing to the optimal cost when there are no degree constraints. This demonstrates that degree constraints can be incorporated into network design problems with metric costs. Our algorithms can be seen as a generalization of Christofides' algorithm for the metric traveling salesman problem. The main technical tool is a simplicity-preserving edge splitting-off operation, which is used to \"short-cut\" vertices with high degree while maintaining connectivity requirements and preserving simplicity of the solutions.", "paper_title": "DEGREE BOUNDED NETWORK DESIGN WITH METRIC COSTS", "paper_id": "WOS:000294296100001"}