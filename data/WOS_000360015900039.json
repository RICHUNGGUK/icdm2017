{"auto_keywords": [{"score": 0.035923713457127915, "phrase": "privacy-preserving_optimization"}, {"score": 0.00481495049065317, "phrase": "convex_programs_with_sharp_guarantees"}, {"score": 0.004773040022691547, "phrase": "random_projection"}, {"score": 0.004649474569983707, "phrase": "classical_technique"}, {"score": 0.004548939310612501, "phrase": "computational_costs"}, {"score": 0.004470071518923524, "phrase": "rp-based_approximations"}, {"score": 0.004316396683332752, "phrase": "original_optimization_problem"}, {"score": 0.004204602964512469, "phrase": "lower_dimensional_problem"}, {"score": 0.004095692768056685, "phrase": "computation-limited_settings"}, {"score": 0.00398959232769596, "phrase": "general_convex_programming"}, {"score": 0.003818807671883534, "phrase": "quadratic_programs"}, {"score": 0.0037198532511087566, "phrase": "semidefinite_programs"}, {"score": 0.003623453648863547, "phrase": "computational_savings"}, {"score": 0.0035919644127571353, "phrase": "rp"}, {"score": 0.003498782065781398, "phrase": "memory_usage"}, {"score": 0.003438058620195309, "phrase": "useful_properties"}, {"score": 0.0033197446406648626, "phrase": "approximation_ratio"}, {"score": 0.0031223774204093713, "phrase": "constraint_set"}, {"score": 0.003068166587650604, "phrase": "broad_class"}, {"score": 0.002898378776839434, "phrase": "hadamard_and"}, {"score": 0.002886987481898556, "phrase": "fourier"}, {"score": 0.002835599469639296, "phrase": "data_matrix"}, {"score": 0.0027985846558073457, "phrase": "cost_function"}, {"score": 0.0026786469998321062, "phrase": "squared_gaussian_width"}, {"score": 0.0026436755508085223, "phrase": "tangent_cone"}, {"score": 0.0025638362414466278, "phrase": "original_solution"}, {"score": 0.002530359917257626, "phrase": "effective_dimension"}, {"score": 0.002497319603143104, "phrase": "convex_program"}, {"score": 0.0024218895273910943, "phrase": "original_dimension"}, {"score": 0.0022480304016499605, "phrase": "low-rank_matrix_estimation"}, {"score": 0.0021049977753042253, "phrase": "compressed_sensing"}], "paper_keywords": ["Random projection", " convex optimization", " compressed sensing", " sparsity", " l(1)-regularization", " low-rank matrix recovery", " privacy", " randomized algorithms"], "paper_abstract": "Random projection (RP) is a classical technique for reducing storage and computational costs. We analyze RP-based approximations of convex programs, in which the original optimization problem is approximated by solving a lower dimensional problem. Such dimensionality reduction is essential in computation-limited settings, since the complexity of general convex programming can be quite high (e.g., cubic for quadratic programs, and substantially higher for semidefinite programs). In addition to computational savings, RP is also useful for reducing memory usage, and has useful properties for privacy-preserving optimization. We prove that the approximation ratio of this procedure can be bounded in terms of the geometry of the constraint set. For a broad class of RPs, including those based on various sub-Gaussian distributions as well as randomized Hadamard and Fourier transforms, the data matrix defining the cost function can be projected to a dimension proportional to the squared Gaussian width of the tangent cone of the constraint set at the original solution. This effective dimension of the convex program is often substantially smaller than the original dimension. We illustrate consequences of our theory for various cases, including unconstrained and l(1)-constrained least squares, support vector machines, low-rank matrix estimation, and discuss implications for privacy-preserving optimization, as well as connections with denoising and compressed sensing.", "paper_title": "Randomized Sketches of Convex Programs With Sharp Guarantees", "paper_id": "WOS:000360015900039"}