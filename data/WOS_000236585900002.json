{"auto_keywords": [{"score": 0.04925795561529137, "phrase": "maximum_clique_problem"}, {"score": 0.041552086294390715, "phrase": "generic_aco_algorithm"}, {"score": 0.03774847234753957, "phrase": "pheromone_trails"}, {"score": 0.029214194347970613, "phrase": "solution_process"}, {"score": 0.00481495049065317, "phrase": "aco_capabilities"}, {"score": 0.004551647527068771, "phrase": "ant_colony_optimization"}, {"score": 0.004210576688291019, "phrase": "largest_set"}, {"score": 0.004174287115855492, "phrase": "pairwise_adjacent_vertices"}, {"score": 0.0037786899855446, "phrase": "maximal_cliques"}, {"score": 0.0037299231609021783, "phrase": "repeated_addition"}, {"score": 0.003665874747419775, "phrase": "partial_cliques"}, {"score": 0.003525744120930142, "phrase": "greedy_heuristic"}, {"score": 0.0033909518548844047, "phrase": "next_vertex"}, {"score": 0.0028762004595878714, "phrase": "representative_benchmark_instance"}, {"score": 0.0024928553725344933, "phrase": "run_time"}, {"score": 0.002387083859537412, "phrase": "local_search_procedure"}, {"score": 0.0023562342764987254, "phrase": "proposed_aco_algorithm"}, {"score": 0.002207851585508636, "phrase": "aco_performance"}, {"score": 0.0021049977753042253, "phrase": "competitive_results"}], "paper_keywords": ["Ant Colony Optimization", " maximum clique problem", " metaheuristic"], "paper_abstract": "This paper investigates the capabilities of the Ant Colony Optimization (ACO) meta-heuristic for solving the maximum clique problem, the goal of which is to find a largest set of pairwise adjacent vertices in a graph. We propose and compare two different instantiations of a generic ACO algorithm for this problem. Basically, the generic ACO algorithm successively generates maximal cliques through the repeated addition of vertices into partial cliques, and uses \"pheromone trails\" as a greedy heuristic to choose, at each step, the next vertex to enter the clique. The two instantiations differ in the way pheromone trails are laid and exploited, i.e., on edges or on vertices of the graph. We illustrate the behavior of the two ACO instantiations on a representative benchmark instance and we study the impact of pheromone on the solution process. We consider two measures-the re-sampling and the dispersion ratio-for providing an insight into the performance at run time. We also study the benefit of integrating a local search procedure within the proposed ACO algorithm, and we show that this improves the solution process. Finally, we compare ACO performance with that of three other representative heuristic approaches, showing that the former obtains competitive results.", "paper_title": "A study of ACO capabilities for solving the maximum clique problem", "paper_id": "WOS:000236585900002"}