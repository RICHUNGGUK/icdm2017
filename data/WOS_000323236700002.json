{"auto_keywords": [{"score": 0.04568107674629595, "phrase": "rpu"}, {"score": 0.00481495049065317, "phrase": "mapping_loop_nests"}, {"score": 0.0047006879240764935, "phrase": "coarse-grained_reconfigurable_architecture"}, {"score": 0.004567129988306349, "phrase": "hybrid_architecture"}, {"score": 0.004416079619543104, "phrase": "reconfigurable_processing_unit"}, {"score": 0.003750260412839128, "phrase": "loop_nests"}, {"score": 0.00334144503360907, "phrase": "loop_transformations"}, {"score": 0.0029914213495838998, "phrase": "joint_loop_transformation_approach"}, {"score": 0.0028784478769295204, "phrase": "pe_utilization_rate"}, {"score": 0.002850875630787708, "phrase": "communication_cost"}, {"score": 0.0028235667474151714, "phrase": "reconfiguration_cost"}, {"score": 0.0027697290872182477, "phrase": "joint_consideration"}, {"score": 0.002601727192945944, "phrase": "operating_performance"}, {"score": 0.0025398521156505425, "phrase": "communication-minimal_approach"}, {"score": 0.0023857603808363527, "phrase": "execution_time"}, {"score": 0.002156301969685775, "phrase": "run-time_complexity"}, {"score": 0.0021049977753042253, "phrase": "practical_cases"}], "paper_keywords": ["reconfigurable computing", " loop transformation", " polyhedra model", " compiling"], "paper_abstract": "A coarse-grained reconfigurable architecture (CGRA) is typically hybrid architecture, which is composed of a reconfigurable processing unit (RPU) and a host microprocessor. Many computation-intensive kernels (e.g., loop nests) are often mapped onto RPUs to speed up the execution of programs. Thus, mapping optimization of loop nests is very important to improve the performance of CGRA. Processing element (PE) utilization rate, communication volume and reconfiguration cost are three crucial factors for the performance of RPUs. Loop transformations can affect these three performance influencing factors greatly, and would be of much significance when mapping loops onto RPUs. In this paper, a joint loop transformation approach for RPUs is proposed, where the PE utilization rate, communication cost and reconfiguration cost are under a joint consideration. Our approach could be integrated into compilers for CGRAs to improve the operating performance. Compared with the communication-minimal approach, experimental results show that our scheme can improve 5.8% and 13.6% of execution time on motion estimation (ME) and partial differential equation (PDE) solvers kernels, respectively. Also, run-time complexity is acceptable for the practical cases.", "paper_title": "Affine Transformations for Communication and Reconfiguration Optimization of Mapping Loop Nests on CGRAs", "paper_id": "WOS:000323236700002"}