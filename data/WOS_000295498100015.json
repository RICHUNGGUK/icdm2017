{"auto_keywords": [{"score": 0.04622076352597457, "phrase": "regular_expression"}, {"score": 0.040960371287930286, "phrase": "follow_automaton"}, {"score": 0.00481495049065317, "phrase": "regular_expressions"}, {"score": 0.004757643419056999, "phrase": "smaller_nfas"}, {"score": 0.004535124351828787, "phrase": "lambda-free_automata"}, {"score": 0.004195418010131832, "phrase": "position_automaton"}, {"score": 0.004145456919456456, "phrase": "glushkov"}, {"score": 0.004047296286849109, "phrase": "partial_derivatives_automaton"}, {"score": 0.003999090829499616, "phrase": "antimirov"}, {"score": 0.0038578754211737085, "phrase": "ilie"}, {"score": 0.0038120579686248615, "phrase": "yu"}, {"score": 0.003633464433320317, "phrase": "quadratic_time_complexity"}, {"score": 0.003526186748088922, "phrase": "comparison_criterion"}, {"score": 0.0033812801309408514, "phrase": "resulting_automaton"}, {"score": 0.0032423089921154503, "phrase": "smallest_automata"}, {"score": 0.0031465436619697385, "phrase": "general_expressions"}, {"score": 0.002910545717767559, "phrase": "partial_derivatives_methods"}, {"score": 0.002692200353719145, "phrase": "lambda-free_automaton"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Regular expression", " Finite automata", " Position automata quotients"], "paper_abstract": "Several methods have been developed to construct lambda-free automata that represent a regular expression. Among the most widely known are the position automaton (Glushkov), the partial derivatives automaton (Antimirov) and the follow automaton (Ilie and Yu). All these automata can be obtained with quadratic time complexity, thus, the comparison criterion is usually the size of the resulting automaton. The methods that obtain the smallest automata (although, for general expressions, they are not comparable), are the follow and the partial derivatives methods. In this paper, we propose another method to obtain a lambda-free automaton from a regular expression. The number of states of the automata we obtain is bounded above by the size of both the partial derivatives automaton and of the follow automaton. Our algorithm also runs with the same time complexity of these methods. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "From regular expressions to smaller NFAs", "paper_id": "WOS:000295498100015"}