{"auto_keywords": [{"score": 0.05007852962010534, "phrase": "n-queens_problem"}, {"score": 0.011807556882100735, "phrase": "hica"}, {"score": 0.004757366891541805, "phrase": "tuned_hybrid_imperialist_competitive_algorithm"}, {"score": 0.004644247838681628, "phrase": "classical_combinatorial_optimization_problem"}, {"score": 0.004516114718371721, "phrase": "np"}, {"score": 0.004234884779773412, "phrase": "nxn_chessboard"}, {"score": 0.004003511299646736, "phrase": "recent_evolutionary_metaheuristic_method"}, {"score": 0.003694652993546994, "phrase": "local_search_method"}, {"score": 0.003635790924434452, "phrase": "hybrid_ica"}, {"score": 0.0034926916198124484, "phrase": "heuristic_and_metaheuristic_algorithms"}, {"score": 0.0034508665218929745, "phrase": "great_influence"}, {"score": 0.0033417571465258, "phrase": "parameter_tuning"}, {"score": 0.0032231139180761183, "phrase": "efficient_manner"}, {"score": 0.0031590250068577867, "phrase": "topsis-based_parameters"}, {"score": 0.003010347277067459, "phrase": "fitness_function_evaluations"}, {"score": 0.002880196765572443, "phrase": "running_time"}, {"score": 0.0028456853685842293, "phrase": "presented_heuristics"}, {"score": 0.002722634472231842, "phrase": "suggested_approach"}, {"score": 0.0026900059414552823, "phrase": "computational_analysis"}, {"score": 0.002615381301695394, "phrase": "extensive_experimental_results"}, {"score": 0.0025326211341475903, "phrase": "basic_ica"}, {"score": 0.0024922258873137093, "phrase": "average_runtimes"}, {"score": 0.002472269923319476, "phrase": "average_number"}, {"score": 0.002452473450836468, "phrase": "ffe."}, {"score": 0.002432834929068545, "phrase": "developed_algorithms"}, {"score": 0.002327594516681507, "phrase": "best_algorithm"}, {"score": 0.0022630008787375435, "phrase": "first_valid_solution"}, {"score": 0.0021391301739299637, "phrase": "cpso"}, {"score": 0.0021049977753042253, "phrase": "fitness_function"}], "paper_keywords": ["n-queens problem", " ICA", " local search", " parameter tuning", " TOPSIS method"], "paper_abstract": "The n-queens problem is a classical combinatorial optimization problem which has been proved to be NP-hard. The goal is to place n non-attacking queens on an nxn chessboard. In this paper, the Imperialist Competitive Algorithm (ICA), which is a recent evolutionary metaheuristic method, has been applied for solving the n-queens problem. As another variation, the ICA was combined with a local search method, resulting the Hybrid ICA (HICA). Since, the parameters of heuristic and metaheuristic algorithms have a great influence on the performance of the search, parameter tuning is used for handling the problems in an efficient manner. Hence, a TOPSIS-based parameters tuning is proposed, which not only considers the number of Fitness Function Evaluations (FFE), but also aims to minimize the running time of the presented heuristics. In order to, investigate the performance of the suggested approach, a computational analysis on the n-queens problem was performed. Extensive experimental results showed that the proposed HICA outperformed the basic ICA in terms of average runtimes and average number of FFE. The developed algorithms were also compared to the Cooperative PSO (CPSO) algorithm, which is currently the best algorithm in the literature for finding the first valid solution to the n-queens problem, and the results showed that the HICA dominates the CPSO by evaluating the fitness function fewer times.", "paper_title": "Solving the n-Queens Problem Using a Tuned Hybrid Imperialist Competitive Algorithm", "paper_id": "WOS:000346394100005"}