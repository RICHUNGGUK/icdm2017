{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "efficient_communications"}, {"score": 0.015430452414822798, "phrase": "multiprocessor_systems"}, {"score": 0.01399569084598924, "phrase": "communication_patterns"}, {"score": 0.01019466688461892, "phrase": "persistent_communications"}, {"score": 0.004769958800452922, "phrase": "circuit_switched_networks"}, {"score": 0.004551199992546761, "phrase": "compiler_techniques"}, {"score": 0.00444559516711374, "phrase": "circuit_switching_interconnection_networks"}, {"score": 0.004342430078306461, "phrase": "compilation_framework"}, {"score": 0.004162703509434786, "phrase": "network_configuration_directives"}, {"score": 0.004009175817816061, "phrase": "significant_performance_benefits"}, {"score": 0.003789395499639015, "phrase": "actual_communications"}, {"score": 0.003684048704119722, "phrase": "flexible_and_powerful_communication_pattern_representation_scheme"}, {"score": 0.0033851984021896287, "phrase": "communication_phases"}, {"score": 0.003154701855951328, "phrase": "static_and_dynamic_communications"}, {"score": 0.0030097975788892896, "phrase": "dynamic_communications"}, {"score": 0.002939853413763817, "phrase": "large_segments"}, {"score": 0.0028986672783671147, "phrase": "application_execution"}, {"score": 0.0028580564897994175, "phrase": "experimental_compiler"}, {"score": 0.0025409639091476363, "phrase": "nas_parallel_benchmarks"}, {"score": 0.0021652891317252994, "phrase": "is._simulation-based_performance_analysis"}], "paper_keywords": ["Compiled communication", " high-performance computing", " multiprocessor systems", " MPI", " circuit-switching networks", " communication patterns"], "paper_abstract": "In this paper, we explore compiler techniques for achieving efficient communications on circuit switching interconnection networks. We propose a compilation framework for identifying communication patterns and compiling these patterns as network configuration directives. This has the potential of providing significant performance benefits when connections can be established in the network prior to the actual communications. The framework includes a flexible and powerful communication pattern representation scheme that captures the property of communication patterns and allows manipulation of these patterns. In this way, communication phases can be identified within the application. Additionally, we extend the classification of static and dynamic communications to include persistent communications. Persistent communications are a subclass of dynamic communications that remain unchanged for large segments of the application execution. An experimental compiler has been developed to implement the framework. This compiler is capable of detecting both static and persistent communications within an application. We show that for the NAS Parallel Benchmarks, 100 percent of the point-to-point communications can be classified as either static or persistent, and 100 percent of the collectives are either static or persistent with the exception of IS. Simulation-based performance analysis demonstrates the benefit of using our compiler techniques for achieving efficient communications in multiprocessor systems.", "paper_title": "Compiler Techniques for Efficient Communications in Circuit Switched Networks for Multiprocessor Systems", "paper_id": "WOS:000265089500004"}