{"auto_keywords": [{"score": 0.04883476672708338, "phrase": "grid"}, {"score": 0.007037034392434859, "phrase": "grid_users"}, {"score": 0.006641985487678417, "phrase": "coarse-grained_level"}, {"score": 0.005739890341624078, "phrase": "resource_provider"}, {"score": 0.00481495049065317, "phrase": "grid_security"}, {"score": 0.004783358523770212, "phrase": "fine-grained_behavioral_control"}, {"score": 0.004751972849082626, "phrase": "negotiation-based_authorization"}, {"score": 0.00462846651646366, "phrase": "leading_technology"}, {"score": 0.00459809245936039, "phrase": "distributed_computing"}, {"score": 0.00452302256811929, "phrase": "seamless_sharing"}, {"score": 0.004499414299380518, "phrase": "computational_service"}, {"score": 0.0044933373574179624, "phrase": "heterogeneous_computational_resources"}, {"score": 0.0044491728131708505, "phrase": "different_domains"}, {"score": 0.004405440436639404, "phrase": "efficient_collaborations"}, {"score": 0.00433350214927936, "phrase": "core_grid_functionality"}, {"score": 0.004305055407631358, "phrase": "computational_services"}, {"score": 0.004262733542795058, "phrase": "computational_resources"}, {"score": 0.004138237651024009, "phrase": "vast_models"}, {"score": 0.004057258742593542, "phrase": "grid_system"}, {"score": 0.00384894851099016, "phrase": "existing_authorization_models"}, {"score": 0.0037364921305658395, "phrase": "service_invocations"}, {"score": 0.0037119497772861165, "phrase": "behavioral_monitoring"}, {"score": 0.003463754811167655, "phrase": "local_account"}, {"score": 0.0032858160838749196, "phrase": "serious_security_threats"}, {"score": 0.003264224201388006, "phrase": "breach_system_functionality"}, {"score": 0.0031272833420309685, "phrase": "flexible_and_expressive_policy-driven_credential-based_authorization_system"}, {"score": 0.002927705457700311, "phrase": "authorization_process"}, {"score": 0.0025155632965105533, "phrase": "fine-grained_level"}, {"score": 0.002441969502075509, "phrase": "fine-grained_access_decisions"}, {"score": 0.002402016201299179, "phrase": "trust_negotiations"}, {"score": 0.002362715032126801, "phrase": "scalability_problem"}, {"score": 0.0023011632163055166, "phrase": "security_policies"}, {"score": 0.0021470954708827125, "phrase": "comprehensive_performance_evaluation"}, {"score": 0.002125942645854997, "phrase": "practical_scope"}, {"score": 0.0021049977753042253, "phrase": "proposed_system"}], "paper_keywords": ["Grid security", " Authorization", " Access control", " Trust negotiation", " Behavioral control"], "paper_abstract": "Nowadays, Grid has become a leading technology in distributed computing. Grid poses a seamless sharing of heterogeneous computational resources belonging to different domains and conducts efficient collaborations between Grid users. The core Grid functionality defines computational services which allocate computational resources and execute applications submitted by Grid users. The vast models of collaborations and openness of Grid system require a secure, scalable, flexible and expressive authorization model to protect these computational services and Grid resources. Most of the existing authorization models for Grid have granularity to manage access to service invocations while behavioral monitoring of applications executed by these services remains a responsibility of a resource provider. The resource provider executes an application under a local account, and acknowledges all permissions granted to this account to the application. Such approach poses serious security threats to breach system functionality since applications submitted by users could be malicious. We propose a flexible and expressive policy-driven credential-based authorization system to protect Grid computational services against a malicious behavior of applications submitted for the execution. We split an authorization process into two levels: a coarse-grained level that manages access to a computational service; and a fine-grained level that monitors the behavior of applications executed by the computational service. Our framework guarantees that users authorized on a coarse-grained level behave as expected on the fine-grained level. Credentials obtained on the coarse-grained level reflect on fine-grained access decisions. The framework defines trust negotiations on coarse-grained level to overcome scalability problem, and preserves privacy of credentials and security policies of, both, Grid users and providers. Our authorization system was implemented to control access to the Globus Computational GRAM service. A comprehensive performance evaluation shows the practical scope of the proposed system.", "paper_title": "Enhancing grid security by fine-grained behavioral control and negotiation-based authorization", "paper_id": "WOS:000268979700005"}