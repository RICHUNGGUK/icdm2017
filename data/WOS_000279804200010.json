{"auto_keywords": [{"score": 0.03712948918190359, "phrase": "cppc-g"}, {"score": 0.00481495049065317, "phrase": "application-level_checkpointing_solution"}, {"score": 0.004550029253278477, "phrase": "significant_effort"}, {"score": 0.004275347843870176, "phrase": "grid_infrastructures"}, {"score": 0.004132546937996706, "phrase": "fault-tolerant_execution"}, {"score": 0.003971938976270902, "phrase": "cppc-g_framework"}, {"score": 0.0039050245929822354, "phrase": "service-based_architecture"}, {"score": 0.003817548980308163, "phrase": "efficient_fault-tolerant_mechanisms"}, {"score": 0.0037109446302945903, "phrase": "sequential_and_parallel_applications"}, {"score": 0.0033893426032054366, "phrase": "cppc"}, {"score": 0.0033511469200347907, "phrase": "compiler_for_portable_checkpointing"}, {"score": 0.0032026066791743866, "phrase": "portable_checkpoint_instrumentation"}, {"score": 0.0031131208154718867, "phrase": "parallel_applications"}, {"score": 0.003009022147559257, "phrase": "existing_globus_services"}, {"score": 0.002975099633631871, "phrase": "cppc-g_services"}, {"score": 0.002843180211561427, "phrase": "cppc_applications"}, {"score": 0.0027794243746094905, "phrase": "checkpoint_files"}, {"score": 0.002671263324230699, "phrase": "failed_executions"}, {"score": 0.0023445770108033288, "phrase": "application_performance"}, {"score": 0.0022405528759521856, "phrase": "overall_throughput"}, {"score": 0.0021778895748464024, "phrase": "minor_performance_degradation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Fault tolerance", " Checkpointing", " Grid computing", " Globus", " MPI"], "paper_abstract": "In recent years there has been a significant effort to develop middleware that facilitates the execution of applications on Grid infrastructures. However, support for fault-tolerant execution continues to be scarce. The CPPC-G framework is a service-based architecture designed to provide efficient fault-tolerant mechanisms for the execution of sequential and parallel applications on grids. Applications to be managed by CPPC-G are expected to be preprocessed with CPPC (ComPiler for Portable Checkpointing), a tool for automatically inserting portable checkpoint instrumentation into the code of parallel applications. Built on top of existing Globus services, CPPC-G services are in charge of submitting and monitoring CPPC applications, managing generated checkpoint files, detecting failures and automatically restarting failed executions. In this paper the feasibility of this approach is assessed by measuring the performance of CPPC-G, quantitatively addressing its impact on application performance. Results show that the increase in overall throughput and availability comes with minor performance degradation. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Performance evaluation of an application-level checkpointing solution on grids", "paper_id": "WOS:000279804200010"}