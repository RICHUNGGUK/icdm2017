{"auto_keywords": [{"score": 0.02428489495146662, "phrase": "ish"}, {"score": 0.00481495049065317, "phrase": "multiprocessor_task_scheduling_algorithms"}, {"score": 0.004760765880314089, "phrase": "multiprocessor_task_scheduling"}, {"score": 0.004680624753255133, "phrase": "important_and_computationally_difficult_problem"}, {"score": 0.00417961150804265, "phrase": "computational_complexity"}, {"score": 0.0040171817997972335, "phrase": "previous_comparison_studies"}, {"score": 0.0038034772734852613, "phrase": "dsh"}, {"score": 0.0037959868107895053, "phrase": "independent_tasks"}, {"score": 0.0036073064072936626, "phrase": "zero_communication_delay"}, {"score": 0.0034279721355412285, "phrase": "comparison_study"}, {"score": 0.0033893426032054366, "phrase": "realistic_assumptions"}, {"score": 0.0031665087019813244, "phrase": "gauss-jordan"}, {"score": 0.0029920129598858545, "phrase": "heavy_data_dependencies"}, {"score": 0.002941558420246247, "phrase": "communication_delay"}, {"score": 0.0027170943110836425, "phrase": "nine_scheduling_algorithms"}, {"score": 0.002305014991156598, "phrase": "hlfet"}, {"score": 0.002215274527909304, "phrase": "task_duplication"}, {"score": 0.0021655683497137234, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "detailed_analysis"}], "paper_keywords": ["task scheduling", " parallel computing", " Heuristic algorithms", " communication delay"], "paper_abstract": "Multiprocessor task scheduling is an important and computationally difficult problem. A large number of algorithms were proposed which represent various tradeoffs between the quality of the solution and the computational complexity and scalability of the algorithm. Previous comparison studies have frequently operated with simplifying assumptions, such as independent tasks, artificially generated problems or the assumption of zero communication delay. In this paper, we propose a comparison study with realistic assumptions. Our target problems are two well known problems of linear algebra: LU decomposition and Gauss-Jordan elimination. Both algorithms are naturally parallelizable but have heavy data dependencies. The communication delay will be explicitly considered in the comparisons. In our study, we consider nine scheduling algorithms which are frequently used to the best of our knowledge: min-min, chaining, A*, genetic algorithms, simulated annealing, tabu search, HLFET, ISH, and DSH with task duplication. Based on experimental results, we present a detailed analysis of the scalability, advantages and disadvantages of each algorithm.", "paper_title": "A performance study of multiprocessor task scheduling algorithms", "paper_id": "WOS:000251972500005"}