{"auto_keywords": [{"score": 0.037496423981350724, "phrase": "loading_applications"}, {"score": 0.031748393184199586, "phrase": "software_architecture"}, {"score": 0.028562217216475897, "phrase": "loading_time"}, {"score": 0.00481495049065317, "phrase": "time-critical_partitioned_systems"}, {"score": 0.0042446888127531945, "phrase": "isolated_partition"}, {"score": 0.004170996594527844, "phrase": "fault_containment"}, {"score": 0.004141877689172017, "phrase": "independent_development"}, {"score": 0.004027412633636142, "phrase": "current_partitioned_systems"}, {"score": 0.00379452936798156, "phrase": "dynamic_loading"}, {"score": 0.003651039356522665, "phrase": "on-board_software_updates"}, {"score": 0.0034519236629123903, "phrase": "higher_performance"}, {"score": 0.0033800778203837726, "phrase": "different_single-core_chips"}, {"score": 0.0033447157263095223, "phrase": "single_multiprocessor_chip"}, {"score": 0.0033213460816510685, "phrase": "power_consumption"}, {"score": 0.00314015410819199, "phrase": "multiprocessor_platforms"}, {"score": 0.0031182092708983184, "phrase": "time-critical_systems"}, {"score": 0.002937745193225725, "phrase": "multiprocessor_partitions"}, {"score": 0.0028564621282167685, "phrase": "composable_dynamic_loading"}, {"score": 0.0028364942193465194, "phrase": "uniprocessor_and_multiprocessor_platforms"}, {"score": 0.0027483472371835865, "phrase": "running_applications"}, {"score": 0.002729133029776093, "phrase": "vice_versa"}, {"score": 0.0025175684590726796, "phrase": "loading_process"}, {"score": 0.002422249273477746, "phrase": "minimum_required_resources"}, {"score": 0.002380120876826732, "phrase": "system_partition"}, {"score": 0.00231423064137482, "phrase": "allocated_application_partitions"}, {"score": 0.0022110183535859374, "phrase": "soc_prototype"}, {"score": 0.002187860013180247, "phrase": "fpga_board"}, {"score": 0.002149799391146313, "phrase": "predictability_properties"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Composable", " Predictable", " Loading", " MPSOC"], "paper_abstract": "Time-critical systems for instance in avionics, isolate applications from each other to provide safety and timing guarantees. Resources are partitioned in time and space to create an isolated partition per application which facilitates fault containment and independent development, testing and verification of applications. Current partitioned systems do not allow dynamically adding applications. Applications are statically loaded in their respective partitions. However, dynamic loading can be useful or even necessary for scenarios such as on-board software updates, dynamic reconfiguration or re-loading applications in case of a fault. Multiprocessors offer higher performance and by integrating applications on different single-core chips onto a single multiprocessor chip, power consumption and weight of the system can be reduced. For these reasons, interest in using multiprocessor platforms for time-critical systems has recently increased. In this paper we propose a software architecture to dynamically create and manage multiprocessor partitions. We also propose a method for composable dynamic loading in uniprocessor and multiprocessor platforms which ensures that loading applications do not affect the running applications and vice versa. Furthermore the loading time is also predictable i.e. the loading time can be bounded a priori. We achieve this by splitting the loading process into parts, wherein only a small part which reserves minimum required resources is executed in the system partition and the other parts are executed in the allocated application partitions which ensures isolation from other applications. We implement the software architecture for a SoC prototype on an FPGA board and demonstrate its composability and predictability properties. (c) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Composable and predictable dynamic loading for time-critical partitioned systems on multiprocessor architectures", "paper_id": "WOS:000366879500046"}