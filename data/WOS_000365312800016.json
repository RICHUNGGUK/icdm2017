{"auto_keywords": [{"score": 0.03273511056674688, "phrase": "squared_hinge_loss"}, {"score": 0.030217177021691695, "phrase": "base_algorithm"}, {"score": 0.004708152527097594, "phrase": "generalization_performance"}, {"score": 0.004673079747693193, "phrase": "multiple_tasks"}, {"score": 0.0046037124365759215, "phrase": "shared_factors"}, {"score": 0.004518442937844318, "phrase": "important_line"}, {"score": 0.004434783313448561, "phrase": "mtl"}, {"score": 0.004385270183517169, "phrase": "robust_mtl"}, {"score": 0.004256005669252138, "phrase": "trace-norm_regularization"}, {"score": 0.004208515754292201, "phrase": "task_relatedness"}, {"score": 0.004161553532799662, "phrase": "low-rank_structure"}, {"score": 0.0041151131903594445, "phrase": "existing_algorithms"}, {"score": 0.0040691889755318155, "phrase": "rmtl_optimization_problems"}, {"score": 0.004008749730113699, "phrase": "accelerated_proximal_gradient"}, {"score": 0.003719705944877787, "phrase": "time_complexity"}, {"score": 0.0036781781340563748, "phrase": "full_svd"}, {"score": 0.003543059748318891, "phrase": "rmtl_problem"}, {"score": 0.003412887952564431, "phrase": "real-world_mtl_applications"}, {"score": 0.0033496005635637316, "phrase": "large_number"}, {"score": 0.003299813878412728, "phrase": "high-dimensional_features"}, {"score": 0.003190474123738408, "phrase": "scalable_solution"}, {"score": 0.0031666711243198992, "phrase": "large-scale_rmtl"}, {"score": 0.0030502854924662837, "phrase": "divide-and-conquer_method"}, {"score": 0.0029713625496165944, "phrase": "original_rmtl_problem"}, {"score": 0.0029053368919259985, "phrase": "cheaper_subproblems"}, {"score": 0.002809034688486911, "phrase": "apg"}, {"score": 0.0027776426202891433, "phrase": "rmtl"}, {"score": 0.002675516297446243, "phrase": "final_solution"}, {"score": 0.002606264765409507, "phrase": "high_probability"}, {"score": 0.0025771355599741915, "phrase": "recovery_errors"}, {"score": 0.002548331088496964, "phrase": "proposed_divide-and-conquer_algorithm"}, {"score": 0.002373214852820709, "phrase": "least_squares_loss"}, {"score": 0.0022773736136311056, "phrase": "linearized_alternating_direction_method"}, {"score": 0.0022434880661725493, "phrase": "experimental_results"}, {"score": 0.0021208374456760447, "phrase": "state-of-the-art_apg_algorithms"}, {"score": 0.0021049980887993046, "phrase": "rmtl."}], "paper_keywords": ["Divide-and-conquer method", " linearized alternating direction method (LADM)", " low-rank matrices", " multitask learning (MTL)"], "paper_abstract": "Multitask learning (MTL) aims at improving the generalization performance of multiple tasks by exploiting the shared factors among them. An important line of research in the MTL is the robust MTL (RMTL) methods, which use trace-norm regularization to capture task relatedness via a low-rank structure. The existing algorithms for the RMTL optimization problems rely on the accelerated proximal gradient (APG) scheme that needs repeated full singular value decomposition (SVD) operations. However, the time complexity of a full SVD is O(min(md(2), m(2)d)) for an RMTL problem with m tasks and d features, which becomes unaffordable in real-world MTL applications that often have a large number of tasks and high-dimensional features. In this paper, we propose a scalable solution for large-scale RMTL, with either the least squares loss or the squared hinge loss, by a divide-and-conquer method. The proposed method divides the original RMTL problem into several size-reduced subproblems, solves these cheaper subproblems in parallel by any base algorithm (e.g., APG) for RMTL, and then combines the results to obtain the final solution. Our theoretical analysis indicates that, with high probability, the recovery errors of the proposed divide-and-conquer algorithm are bounded by those of the base algorithm. Furthermore, in order to solve the subproblems with the least squares loss or the squared hinge loss, we propose two efficient base algorithms based on the linearized alternating direction method, respectively. Experimental results demonstrate that, with little loss of accuracy, our method is substantially faster than the state-of-the-art APG algorithms for RMTL.", "paper_title": "A Divide-and-Conquer Method for Scalable Robust Multitask Learning", "paper_id": "WOS:000365312800016"}