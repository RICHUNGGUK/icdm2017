{"auto_keywords": [{"score": 0.0456315961504987, "phrase": "gpu"}, {"score": 0.00481495049065317, "phrase": "spline_surface_intersections"}, {"score": 0.004542158659382197, "phrase": "commodity-type_graphics_card"}, {"score": 0.003527181559366122, "phrase": "single_spline_surface"}, {"score": 0.0032629585038738856, "phrase": "fast_and_efficient_subdivision"}, {"score": 0.0031690434364310435, "phrase": "box_testing"}, {"score": 0.003107935254560724, "phrase": "smaller_spline_patches"}, {"score": 0.0027651847105654363, "phrase": "prescribed_level"}, {"score": 0.0026566135129464747, "phrase": "cpu."}, {"score": 0.002436289099444074, "phrase": "main_computer"}], "paper_keywords": [""], "paper_abstract": "A commodity-type graphics card with its graphics processing unit (GPU) is used to detect, compute and visualize the intersection of two spline surfaces, or the self-intersection of a single spline surface. The parallelism of the CPU facilitates fast and efficient subdivision and bounding box testing of smaller spline patches and their corresponding normal subpatches. This subdivision and testing is iterated until a prescribed level of accuracy is reached, after which results are returned to the main computer. We observe speedups up to 17 times relative to a contemporary 64 bit CPU.", "paper_title": "Spline surface intersections optimized for GPUs", "paper_id": "WOS:000238417500032"}