{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_processes"}, {"score": 0.004662705558154439, "phrase": "staff_turnover"}, {"score": 0.004556901872357751, "phrase": "important_issue"}, {"score": 0.004195418010131832, "phrase": "organization's_knowledge"}, {"score": 0.0039522429946090174, "phrase": "knowledge_accessibility"}, {"score": 0.0038271712887391015, "phrase": "knowledge_employees"}, {"score": 0.0034911335714333507, "phrase": "knowledge-based_process_asset_libraries"}, {"score": 0.0033961782274326948, "phrase": "software_engineering_best_practices"}, {"score": 0.003140888248194296, "phrase": "agile_development"}, {"score": 0.0026616868981501006, "phrase": "learning_process"}, {"score": 0.0025655216052760093, "phrase": "software_process_knowledge"}, {"score": 0.0024389277933858054, "phrase": "junior_software_engineers"}, {"score": 0.002405496949144104, "phrase": "greater_degree"}, {"score": 0.002297327670408112, "phrase": "knowledge_repository"}, {"score": 0.00226583335721762, "phrase": "software_engineers"}, {"score": 0.002224510044064184, "phrase": "development_processes"}, {"score": 0.002163930783583212, "phrase": "agile_processes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software engineering", " Software process technology", " Knowledge management", " Agile development", " Web 2.0", " Wiki"], "paper_abstract": "Context: Staff turnover in organizations is an important issue that should be taken into account mainly for two reasons: Context: 1. Employees carry an organization's knowledge in their heads and take it with them wherever they go 2. Knowledge accessibility is limited to the amount of knowledge employees want to share Objective: The aim of this work is to provide a set of guidelines to develop knowledge-based Process Asset Libraries (PAL) to store software engineering best practices, implemented as a wiki. Method: Fieldwork was carried out in a 2-year training course in agile development. This was validated in two phases (with and without PAL), which were subdivided into two stages: Training and Project. Results: The study demonstrates that, on the one hand, the learning process can be facilitated using PAL to transfer software process knowledge, and on the other hand, products were developed by junior software engineers with a greater degree of independence. Conclusion: PAL, as a knowledge repository, helps software engineers to learn about development processes and improves the use of agile processes. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Design guidelines for software processes knowledge repository development", "paper_id": "WOS:000292176300003"}