{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "integer_programming"}, {"score": 0.004377077848734575, "phrase": "probabilistic_satisfiability"}, {"score": 0.004240116703465252, "phrase": "coherence_checking"}, {"score": 0.0036167509502276294, "phrase": "probabilistic_assessments"}, {"score": 0.0034299649219748513, "phrase": "standard_probability_measures"}, {"score": 0.0031845067058084613, "phrase": "full_conditional_probabilities"}, {"score": 0.0030847461428168614, "phrase": "finettian"}, {"score": 0.002658863179011018, "phrase": "integer_programming_techniques"}, {"score": 0.0025214217930287003, "phrase": "empirical_evaluation"}, {"score": 0.0022434880661725493, "phrase": "phase_transitions"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Probabilistic logic", " Probabilistic satisfiability", " Coherence", " Integer programming", " Phase transitions"], "paper_abstract": "This paper presents algorithms, both for probabilistic satisfiability and for coherence checking, that rely on reduction to integer programming. That is, we verify whether probabilistic assessments can be satisfied by standard probability measures (Kolmogorovian setting) or by full conditional probabilities (de Finettian coherence setting), and in both cases verify satisfiability or coherence using integer programming techniques. We present an empirical evaluation of our method, the results of which show evidence of phase transitions. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Probabilistic satisfiability and coherence checking through integer programming", "paper_id": "WOS:000350516100005"}