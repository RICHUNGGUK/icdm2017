{"auto_keywords": [{"score": 0.03883196830268189, "phrase": "mmsnp"}, {"score": 0.007272525520169924, "phrase": "csp"}, {"score": 0.006875777366218948, "phrase": "feder"}, {"score": 0.006821742469643764, "phrase": "vardi"}, {"score": 0.006636817407553411, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "constraint_satisfaction"}, {"score": 0.00450198136261303, "phrase": "large_subclass"}, {"score": 0.003982500388997765, "phrase": "candidate_class"}, {"score": 0.0035507457285983268, "phrase": "strong_candidate"}, {"score": 0.0032289419984035954, "phrase": "constraint_satisfaction_problems"}, {"score": 0.003066945490483524, "phrase": "new_class"}, {"score": 0.003042752533935891, "phrase": "combinatorial_problems"}, {"score": 0.0029830992938695007, "phrase": "forbidden_patterns"}, {"score": 0.0028786467218197245, "phrase": "finite_unions"}, {"score": 0.002833401831849256, "phrase": "fpp."}, {"score": 0.0027668603377225564, "phrase": "exactly_those_problems"}, {"score": 0.002437425029824563, "phrase": "whole_process"}, {"score": 0.0021049977753042253, "phrase": "counter_example"}], "paper_keywords": ["finite model theory", " constraint satisfaction", " existential monadic second-order logic"], "paper_abstract": "In the 1990s, Feder and Vardi attempted to find a large subclass of NP which exhibits a dichotomy, that is, where every problem in the subclass is either solvable in polynomial-time or NP-complete. Their studies resulted in a candidate class of problems, namely, those definable in the logic MMSNP. While it remains open as to whether MMSNP exhibits a dichotomy, for various reasons it remains a strong candidate. Feder and Vardi added to the significance of MMSNP by proving that, although MMSNP strictly contains CSP, the class of constraint satisfaction problems, MMSNP and CSP are computationally equivalent. We introduce here a new class of combinatorial problems, the class of forbidden patterns problems FPP, and characterize MMSNP as the finite unions of problems from FPP. We use our characterization to detail exactly those problems that are in MMSNP but not in CSP. Furthermore, given a problem in MMSNP, we are able to decide whether the problem is in CSP or not (this whole process is effective). If the problem is in CSP, then we can construct a template for this problem; otherwise, for any given candidate for the role of template, we can build a counter example (again, this process is effective).", "paper_title": "Constraint satisfaction, logic and forbidden patterns", "paper_id": "WOS:000246923400006"}