{"auto_keywords": [{"score": 0.04749366502827167, "phrase": "flash_disks"}, {"score": 0.00481495049065317, "phrase": "efficient_transaction_recovery"}, {"score": 0.004761850836420121, "phrase": "flash-based_dbmss"}, {"score": 0.004657393640152439, "phrase": "recent_advances"}, {"score": 0.004606023493393774, "phrase": "semiconductor_technologies"}, {"score": 0.004455272634364756, "phrase": "competitive_alternative"}, {"score": 0.004406121974246201, "phrase": "traditional_magnetic_disks"}, {"score": 0.004357511171877593, "phrase": "external_storage_media"}, {"score": 0.004145287175409325, "phrase": "transaction_recovery"}, {"score": 0.004009555045206973, "phrase": "database_management_systems"}, {"score": 0.0038782499819752423, "phrase": "slc_flash_disks"}, {"score": 0.0037721073763702486, "phrase": "classical_shadow-paging_approach"}, {"score": 0.003668859054928118, "phrase": "new_commit_scheme"}, {"score": 0.003509487090932835, "phrase": "unique_characteristics"}, {"score": 0.003319939715683536, "phrase": "out-place_updating"}, {"score": 0.003265090934183249, "phrase": "partial_page_programming"}, {"score": 0.003123203316511694, "phrase": "log_records"}, {"score": 0.0030376623293574905, "phrase": "transaction_status"}, {"score": 0.003004103583782076, "phrase": "flash_pages"}, {"score": 0.002921815042028607, "phrase": "commit_flags"}, {"score": 0.0023265270905455334, "phrase": "-force_buffer_management"}, {"score": 0.00230080652063411, "phrase": "fine-grained_concurrency_control"}, {"score": 0.0022007302738063566, "phrase": "tpc-c_benchmark"}, {"score": 0.0021049977753042253, "phrase": "state-of-the-art_recovery_protocols"}], "paper_keywords": ["Flash memory", " database", " transaction recovery"], "paper_abstract": "Owing to recent advances in semiconductor technologies, flash disks have been a competitive alternative to traditional magnetic disks as external storage media. In this paper, we study how transaction recovery can be efficiently supported in database management systems (DBMSs) running on SLC flash disks. Inspired by the classical shadow-paging approach, we propose a new commit scheme, called flagcommit, to exploit the unique characteristics of flash disks such as fast random read access, out-place updating, and partial page programming. To minimize the need of writing log records, we embed the transaction status into flash pages through a chain of commit flags. Based on flagcommit, we develop two recovery protocols, namely commit-based flag commit (CFC) and abort-based flag commit (AFC), to meet different performance needs. They are flexible to support no-force buffer management and fine-grained concurrency control. Our performance evaluation based on the TPC-C benchmark shows that both CFC and AFC outperform the state-of-the-art recovery protocols.", "paper_title": "Flag Commit: Supporting Efficient Transaction Recovery in Flash-Based DBMSs", "paper_id": "WOS:000306557800007"}