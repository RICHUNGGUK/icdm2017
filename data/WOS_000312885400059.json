{"auto_keywords": [{"score": 0.028788178808423496, "phrase": "dadaboost"}, {"score": 0.0181010112239047, "phrase": "adaboost"}, {"score": 0.010578150154524577, "phrase": "large_negative_margins"}, {"score": 0.005908013955992735, "phrase": "traditional_schemes"}, {"score": 0.00481495049065317, "phrase": "dynamic_adaboost_algorithm"}, {"score": 0.004781215097314411, "phrase": "adaptive_changes"}, {"score": 0.004751494656848434, "phrase": "training_samples"}, {"score": 0.0045232643339124246, "phrase": "reliable_samples"}, {"score": 0.004491563382207921, "phrase": "temporary_unreliable_samples"}, {"score": 0.00440976345264104, "phrase": "significant_advantages"}, {"score": 0.004287415750101536, "phrase": "smallest_margin"}, {"score": 0.0042126709243529275, "phrase": "good_generalization_ability"}, {"score": 0.003996133359116611, "phrase": "maximized_margin"}, {"score": 0.003940286428597882, "phrase": "\"hard_margin"}, {"score": 0.003885216927966404, "phrase": "adaptive_feature"}, {"score": 0.003804046908915231, "phrase": "sampling_fluctuations"}, {"score": 0.0031124451011241496, "phrase": "high_generalization_performance"}, {"score": 0.0030047427137652218, "phrase": "statistical_analysis"}, {"score": 0.0029109914689364465, "phrase": "hoeffding_inequality"}, {"score": 0.0028601736602156033, "phrase": "statistical_tool"}, {"score": 0.002761176640988626, "phrase": "new_boosting_algorithm"}, {"score": 0.0025733173062050018, "phrase": "weighting_scheme"}, {"score": 0.002537303919584199, "phrase": "loss_function"}, {"score": 0.0024066745849759706, "phrase": "nonconvex_functions"}, {"score": 0.002290814637620121, "phrase": "virtual_classifier"}, {"score": 0.0022667208478315323, "phrase": "dynamic_adjusted_weighting_scheme"}, {"score": 0.00217284779477444, "phrase": "upper_bound"}, {"score": 0.002157583854640276, "phrase": "training_error"}], "paper_keywords": ["AdaBoost", " dynamic weighting scheme", " overfitting", " statistical analysis", " variable loss function"], "paper_abstract": "AdaBoost is a method to improve a given learning algorithm's classification accuracy by combining its hypotheses. Adaptivity, one of the significant advantages of AdaBoost, makes AdaBoost maximize the smallest margin so that AdaBoost has good generalization ability. However, when the samples with large negative margins are noisy or atypical, the maximized margin is actually a \"hard margin.\" The adaptive feature makes AdaBoost sensitive to the sampling fluctuations, and prone to overfitting. Therefore, the traditional schemes prevent AdaBoost from overfitting by heavily damping the influences of samples with large negative margins. However, the samples with large negative margins are not always noisy or atypical; thus, the traditional schemes of preventing overfitting may not be reasonable. In order to learn a classifier with high generalization performance and prevent overfitting, it is necessary to perform statistical analysis for the margins of training samples. Herein, Hoeffding inequality is adopted as a statistical tool to divide training samples into reliable samples and temporary unreliable samples. A new boosting algorithm, which is named DAdaBoost, is introduced to deal with reliable samples and temporary unreliable samples separately. Since DAdaBoost adjusts weighting scheme dynamically, the loss function of DAdaBoost is not fixed. In fact, it is a series of nonconvex functions that gradually approach the 0-1 function as the algorithm evolves. By defining a virtual classifier, the dynamic adjusted weighting scheme is well unified into the progress of DAdaBoost, and the upper bound of training error is deduced. The experiments on both synthetic and real world data show that DAdaBoost has many merits. Based on the experiments, we conclude that DAdaBoost can effectively prevent AdaBoost from overfitting.", "paper_title": "A Dynamic AdaBoost Algorithm With Adaptive Changes of Loss Function", "paper_id": "WOS:000312885400059"}