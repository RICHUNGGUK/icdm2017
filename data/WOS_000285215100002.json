{"auto_keywords": [{"score": 0.04565075825073447, "phrase": "dprs"}, {"score": 0.0067763110652094925, "phrase": "hardware_virtualization_mechanism"}, {"score": 0.00481495049065317, "phrase": "dynamically_partially_reconfigurable_systems"}, {"score": 0.0041488110506566825, "phrase": "model-based_verification"}, {"score": 0.004027031316965272, "phrase": "model-driven_architecture"}, {"score": 0.0038798015183611275, "phrase": "dprs_design"}, {"score": 0.00383668723824441, "phrase": "inherent_characteristics"}, {"score": 0.003779943062894615, "phrase": "real-time_system_requirements"}, {"score": 0.003737934295442975, "phrase": "semi-automatic_model_translator"}, {"score": 0.0036964040379936646, "phrase": "uml"}, {"score": 0.0036281710561308377, "phrase": "timed_automata_models"}, {"score": 0.003601235776892337, "phrase": "transition_urgency_semantics"}, {"score": 0.0035744997458371335, "phrase": "model_checking"}, {"score": 0.003418186564522323, "phrase": "direct_interaction"}, {"score": 0.0033801845720347118, "phrase": "uml_models"}, {"score": 0.0033426036530090205, "phrase": "real_hardware_architecture"}, {"score": 0.003280891942617853, "phrase": "existing_estimation_methods"}, {"score": 0.0032565265733842594, "phrase": "ucop"}, {"score": 0.003220315882881027, "phrase": "accurate_and_efficient_platform-specific_verification"}, {"score": 0.0031257046538823354, "phrase": "hierarchical_design"}, {"score": 0.0030113280682863234, "phrase": "device_nodes"}, {"score": 0.0029889584492584073, "phrase": "kernel_modules"}, {"score": 0.00295571428544335, "phrase": "on-demand_reconfigurable_hardware_functions"}, {"score": 0.002826383890518307, "phrase": "hardware_resources"}, {"score": 0.0028053842615436706, "phrase": "unit_time"}, {"score": 0.0027331033178323145, "phrase": "dynamically_partially_reconfigurable_network_security_system"}, {"score": 0.002613487968156893, "phrase": "mpc_methodology"}, {"score": 0.0025844090835070986, "phrase": "dprnss"}, {"score": 0.0024620842899061614, "phrase": "different_system_requirements"}, {"score": 0.00229361668293267, "phrase": "overall_system_execution_time"}, {"score": 0.0021526564019119466, "phrase": "reconfiguration-based_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["UML", " Dynamically partially reconfigurable system", " Hardware/software co-design"], "paper_abstract": "To facilitate the development of the dynamically partially reconfigurable system (DPRS), we propose a model-based platform-specific co-design (MPC) methodology for DPRS with hardware virtualization and preemption. For DPRS analysis and validation, a model-based verification and estimation framework is proposed to make model-driven architecture (MDA) more realistic and applicable to the DPRS design. Considering inherent characteristics of DPRS and real-time system requirements, a semi-automatic model translator converts the UML models of DPRS into timed automata models with transition urgency semantics for model checking. Furthermore, a UML-based hardware/software co-design platform (UCoP) can support the direct interaction between the UML models and the real hardware architecture. Compared to the existing estimation methods. UCoP can provide accurate and efficient platform-specific verification and estimation. We also propose a hierarchical design that consists of a hardware virtualization mechanism for dynamically linking the device nodes, kernel modules, and on-demand reconfigurable hardware functions and a hardware preemption mechanism for further increasing the utilization of hardware resources per unit time. Further, we realize a dynamically partially reconfigurable network security system (DPRNSS) to show the applicability and practicability of the MPC methodology. The DPRNSS cannot only dynamically adapt some of its hardware functions at run-time to meet different system requirements, but also determine which mechanism will be used. Our experiments also demonstrate that the hardware virtualization mechanism can save the overall system execution time up to 12.8% and the hardware preemption mechanism can reduce up to 41.3% of the time required by reconfiguration-based methods. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Model-based platform-specific co-design methodology for dynamically partially reconfigurable systems with hardware virtualization and preemption", "paper_id": "WOS:000285215100002"}