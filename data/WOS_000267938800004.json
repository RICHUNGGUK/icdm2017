{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "joint_task_migration_and_power_management"}, {"score": 0.004776297980616768, "phrase": "wireless_computing"}, {"score": 0.004681012408089219, "phrase": "wireless_computing_architecture"}, {"score": 0.004624751696958501, "phrase": "mobile_terminals"}, {"score": 0.004424160689087029, "phrase": "terminal's_processor"}, {"score": 0.004249332848326785, "phrase": "network_infrastructure"}, {"score": 0.0041144374213500715, "phrase": "former_two_options"}, {"score": 0.004081385289516914, "phrase": "remote_execution"}, {"score": 0.003920049436883885, "phrase": "computation_server"}, {"score": 0.0038728990904778678, "phrase": "wireless_network"}, {"score": 0.003431384878608803, "phrase": "energy_savings"}, {"score": 0.0030278017562213265, "phrase": "terminal_server_wireless_communication"}, {"score": 0.0029913511336659327, "phrase": "net_gains"}, {"score": 0.002896274285996145, "phrase": "network_connectivity"}, {"score": 0.002872979681637667, "phrase": "server_load"}, {"score": 0.002759279370360986, "phrase": "user_mobility"}, {"score": 0.0027041233221381756, "phrase": "server_congestion"}, {"score": 0.0025866199378466754, "phrase": "local_execution"}, {"score": 0.0025554669315362424, "phrase": "wireless_terminal"}, {"score": 0.002395530243993313, "phrase": "low_energy_consumption"}, {"score": 0.002319346861878611, "phrase": "markovian_dynamic_control_framework"}, {"score": 0.002263799931018574, "phrase": "optimal_execution_policies"}, {"score": 0.002218526133566788, "phrase": "associated_energy"}, {"score": 0.0022006705963260433, "phrase": "delay_trade-off"}, {"score": 0.002165388556451298, "phrase": "performance_gains"}, {"score": 0.0021049977753042253, "phrase": "conventional_benchmark_policies"}], "paper_keywords": ["Task migration", " power management", " processor power management", " mobile computing", " energy efficiency"], "paper_abstract": "We investigate a wireless computing architecture, where mobile terminals can execute their computation tasks either 1) locally, at the terminal's processor, or 2) remotely, assisted by the network infrastructure, or even 3) combining the former two options. Remote execution involves: 1) sending the task to a computation server via the wireless network, 2) executing the task at the server, and 3) downloading the results of the computation back to the terminal. Hence, it results to energy savings at the terminal (sparing its processor from computations) and execution speed gains due to (typically) faster server processor(s), as well as overheads due to the terminal server wireless communication. The net gains (or losses) are contingent on network connectivity and server load. These may vary in time, depending on user mobility, network, and server congestion (due to the concurrent sessions/connections from other terminals). In local execution, the wireless terminal faces the dilemma of power managing the processor, trading-off fast execution versus low energy consumption. We model the system within a Markovian dynamic control framework, allowing the computation of optimal execution policies. We study the associated energy versus delay trade-off and assess the performance gains attained in various test cases in comparison to conventional benchmark policies.", "paper_title": "Joint Task Migration and Power Management in Wireless Computing", "paper_id": "WOS:000267938800004"}