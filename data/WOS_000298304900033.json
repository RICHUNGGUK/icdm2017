{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hybrid_parallel_extraction_of_isosurface_components"}, {"score": 0.004576763709613412, "phrase": "efficient_algorithm"}, {"score": 0.004445961412092278, "phrase": "connected_component"}, {"score": 0.0036026484429137998, "phrase": "rectilinear_grids"}, {"score": 0.0033748847621075536, "phrase": "multi-core_cpu"}, {"score": 0.0033021988455635403, "phrase": "active_cells"}, {"score": 0.0030267296900520217, "phrase": "many-core_cpu"}, {"score": 0.002876747208161839, "phrase": "contour_surface"}, {"score": 0.002814759530655965, "phrase": "active_cell"}, {"score": 0.0027741761880779535, "phrase": "cuda._experimental_results"}, {"score": 0.002598652897946253, "phrase": "existing_methods"}, {"score": 0.002542642270762272, "phrase": "ordinary_pc."}, {"score": 0.0024519545383399773, "phrase": "contour_tree_framework"}], "paper_keywords": ["isosurface", " contour tree", " contour propagation", " multi-core"], "paper_abstract": "We describe an efficient algorithm that extracts a connected component of an isosurface, or a contour, from a 3D rectilinear volume data. The efficiency of the algorithm is achieved by three factors: (i) directly working with rectilinear grids, (ii) parallel utilization of a multi-core CPU for extracting active cells, the cells containing the contour, and (iii) parallel utilization of a many-core CPU for computing the geometries of a contour surface in each active cell using CUDA. Experimental results show that our hybrid parallel implementation achieved up to 20x speedup over existing methods on an ordinary PC. Our work coupled with the Contour Tree framework is useful for quickly segmenting, displaying, and analyzing a feature of interest in 3D rectilinear volume data without being distracted by other features.", "paper_title": "Hybrid Parallel Extraction of Isosurface Components from 3D Rectilinear Volume Data", "paper_id": "WOS:000298304900033"}