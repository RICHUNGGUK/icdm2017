{"auto_keywords": [{"score": 0.042188392869170255, "phrase": "grid_behavior"}, {"score": 0.00481495049065317, "phrase": "whole_grid"}, {"score": 0.0047135086583390585, "phrase": "grid_computing"}, {"score": 0.004575053987970206, "phrase": "new_level"}, {"score": 0.004536244367689415, "phrase": "large-scale-distributed_systems"}, {"score": 0.004440648141548589, "phrase": "new_step"}, {"score": 0.004402973626416765, "phrase": "distributed_computing"}, {"score": 0.004310173770196077, "phrase": "completely_new_level"}, {"score": 0.0042373381286051354, "phrase": "grid_management_mechanisms"}, {"score": 0.0041835168653521, "phrase": "key_role"}, {"score": 0.004112812699639956, "phrase": "correct_analysis"}, {"score": 0.003958049372486465, "phrase": "traditional-distributed_computing_management_mechanisms"}, {"score": 0.003841699919521703, "phrase": "specific_parameters"}, {"score": 0.003557924423642353, "phrase": "vast_complexity"}, {"score": 0.003409399407390298, "phrase": "grid_complexity"}, {"score": 0.003157455511069507, "phrase": "single_system"}, {"score": 0.0029744042270542655, "phrase": "deeper_understanding"}, {"score": 0.002899229492461335, "phrase": "large-scale_behavior"}, {"score": 0.0026620655619396263, "phrase": "specific_methodology"}, {"score": 0.002550842302473891, "phrase": "global_behavior_model"}, {"score": 0.0024547103576350233, "phrase": "single_entity"}, {"score": 0.0024234763342790852, "phrase": "real_and_simulated_case_studies"}, {"score": 0.0023221983158528163, "phrase": "proper_validation"}, {"score": 0.002187473998261153, "phrase": "crown"}, {"score": 0.0021413295662617467, "phrase": "canada"}], "paper_keywords": ["large-scale dsitributed systems", " grid computing", " modelling", " data mining", " grid behavior"], "paper_abstract": "Over the last decade, grid computing has paved the way for a new level of large-scale-distributed systems. However, this new step in distributed computing comes along with a completely new level of complexity. Grid management mechanisms play a key role, and a correct analysis and understanding of the grid behavior is needed. Traditional-distributed computing management mechanisms analyze each resource separately and adjust specific parameters of each one of them. When trying to adapt the same procedures to grid computing, the vast complexity of the system can complicate this task. But grid complexity could only be a matter of perspective. It is possible to understand the grid behavior as a single system, instead of a set of resources. This abstraction could provide a deeper understanding of the system, describing large-scale behavior and global events that probably would not be detected while analyzing each resource separately. In this paper a specific methodology is presented and described in order to create a global behavior model of the grid, analyzing it as a single entity. Both real and simulated case studies are also presented, in order to provide a proper validation and illustrate the benefits of this approach. Copyright (C) 2009 Crown in the right of Canada. Published by John Wiley & Sons, Ltd.", "paper_title": "Finding order in chaos: a behavior model of the whole grid", "paper_id": "WOS:000280431500004"}