{"auto_keywords": [{"score": 0.012621704080042285, "phrase": "reference_data"}, {"score": 0.01109570959600637, "phrase": "processing_nodes"}, {"score": 0.004606219233601922, "phrase": "rate-distortion_optimization"}, {"score": 0.004420472010542188, "phrase": "computational_complexity"}, {"score": 0.004337276328199398, "phrase": "computation_time"}, {"score": 0.004255639740735269, "phrase": "rate-distortion_cost"}, {"score": 0.004202067185873954, "phrase": "optimal_coding_mode"}, {"score": 0.004136044939878838, "phrase": "intra_coding_modes"}, {"score": 0.004109926210263146, "phrase": "parallel_computation"}, {"score": 0.003919201391494096, "phrase": "rate-distortion_costs"}, {"score": 0.0038821277513157973, "phrase": "great_amount"}, {"score": 0.00382111305629386, "phrase": "coded_adjacent_macrob_locks"}, {"score": 0.003749155155531426, "phrase": "coding_efficiency"}, {"score": 0.003643741834170836, "phrase": "undesirable_property"}, {"score": 0.0036092644587974953, "phrase": "parallel_computing"}, {"score": 0.003313236365209158, "phrase": "entire_encoding_process"}, {"score": 0.0024747842618794255, "phrase": "psnr_performance"}, {"score": 0.002435834440131485, "phrase": "speedup_results"}, {"score": 0.002359759876402679, "phrase": "considerable_reduction"}, {"score": 0.0023448318062933527, "phrase": "coding_gain"}, {"score": 0.0022715929119140194, "phrase": "lower_bit_rate_cases"}, {"score": 0.0021454671611847507, "phrase": "good_reference"}, {"score": 0.0021049977753042253, "phrase": "cluster_computing_system"}], "paper_keywords": ["H.264/AVC", " rate-distortion optimization", " distributed shared memory system", " parallel video encoder", " cluster computing system"], "paper_abstract": "A H.264/AVC encoder can incorporate many coding schemes, such as rate-distortion optimization (RDO), into its design to improve its compression performance, dramatically raising computational complexity. With the H.264/AVC RDO encoder, computation time is primarily spent calculating the rate-distortion cost in choosing the optimal coding mode for both inter and intra coding modes. Parallel computation is one of the ways to speed up the encoder. However, calculating rate-distortion costs requires a great amount of reference data obtained from coded adjacent macrob locks in order to maintain the coding efficiency established by the H.264/AVC RDO encoder. This is an undesirable property for any parallel computing. strategy. The transmission of such a large amount of reference data, as well as the frequency of transmission between processing nodes, reduces the speed of the entire encoding process. Thus, it may become necessary to drop part of the reference data and decrease the frequency of transmission in order to reduce the traffic. In the investigation of this problem, this study uses three different parallel schemes for the implementation of the H.264/AVC RDO encoder. These schemes are each run over a software DSM-based (distributed shared memory) PC cluster system consisting of 1 to 5 PC computers (one master node, with or without one to several slave processing nodes). The amount of data to be exchanged among processing nodes is analyzed for each scheme. In addition, the PSNR performance and the number of speedup results are provided for each scheme. Experiments show that considerable reduction in coding gain is expected, as more information is dropped. In lower bit rate cases, performance is reduced to the level of a regular H.264 encoder. Nevertheless, this paper provides a good reference for implementing such an encoder utilizing a cluster computing system.", "paper_title": "On Parallelizing H.264/AVC Rate-Distortion Optimization Baseline Profile Encoder", "paper_id": "WOS:000276057900006"}