{"auto_keywords": [{"score": 0.05007843022623741, "phrase": "multi-core_clusters"}, {"score": 0.036817037816123374, "phrase": "ahs"}, {"score": 0.004546755482549647, "phrase": "dynamic_task_scheduling"}, {"score": 0.004418287966422041, "phrase": "adaptive_and_hierarchical_task_scheduling_scheme"}, {"score": 0.004034841146538891, "phrase": "load_balancing"}, {"score": 0.0038834787946979863, "phrase": "task-based_parallel_programing_languages"}, {"score": 0.003773680962197766, "phrase": "shared_memory_systems"}, {"score": 0.003702206069379459, "phrase": "high_inter-node_communication_costs"}, {"score": 0.003529364798514874, "phrase": "distributed_memory_systems"}, {"score": 0.003222814590544802, "phrase": "inter-node_task_migrations"}, {"score": 0.0029147869733574844, "phrase": "node_boundary"}, {"score": 0.00276534038425712, "phrase": "inter-node_level"}, {"score": 0.002623536040408411, "phrase": "inter-node_task_migration"}, {"score": 0.002537097217899195, "phrase": "victim_selection"}, {"score": 0.002512926336312949, "phrase": "termination_detection"}, {"score": 0.0022725931637071852, "phrase": "existing_schemes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Work-stealing, Multi-core cluster", " Task scheduling", " Work-sharing"], "paper_abstract": "Work-stealing and work-sharing are two basic paradigms for dynamic task scheduling. This paper introduces an adaptive and hierarchical task scheduling scheme (AHS) for multi-core clusters, in which work-stealing and work-sharing are adaptively used to achieve load balancing. Work-stealing has been widely used in task-based parallel programing languages and models, especially on shared memory systems. However, high inter-node communication costs hinder work-stealing from being directly performed on distributed memory systems. AHS addresses this issue with the following techniques: (1) initial partitioning, which reduces the inter-node task migrations; (2) hierarchical scheduling scheme, which performs work-stealing inside a node before going across the node boundary and adopts work-sharing to overlap computation and communication at the inter-node level; and (3) hierarchical and centralized control for inter-node task migration, which improves the efficiency of victim selection and termination detection. We evaluated AHS and existing work-stealing schemes on a 16-nodes multi-core cluster. Experimental results show that AHS outperforms existing schemes by 11-21.4%, for the benchmarks studied in this paper. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "An adaptive and hierarchical task scheduling scheme for multi-core clusters", "paper_id": "WOS:000347018800004"}