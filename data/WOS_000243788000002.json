{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "state_diagrams"}, {"score": 0.004740476936977635, "phrase": "formal_datatypes"}, {"score": 0.004250302819248558, "phrase": "increasing_complexity"}, {"score": 0.004087756756529841, "phrase": "separate_design"}, {"score": 0.00396218934254591, "phrase": "different_aspects"}, {"score": 0.0038404642251010797, "phrase": "better_reusability_level"}, {"score": 0.003693533648584145, "phrase": "important_issue"}, {"score": 0.003389704997952315, "phrase": "global_model"}, {"score": 0.0032599633778910516, "phrase": "formal_and_tool-equipped_approach"}, {"score": 0.0031351720217878917, "phrase": "dynamic_models"}, {"score": 0.0029453365339797933, "phrase": "static_models"}, {"score": 0.002366763442497185, "phrase": "data_types"}, {"score": 0.0022407927161620855, "phrase": "generic_way"}, {"score": 0.0021049977753042253, "phrase": "different_static_specification_languages"}], "paper_keywords": ["formal methods", " languages", " integrated environments", " state diagrams", " specification techniques", " operational semantics", " tools"], "paper_abstract": "Separation of concerns or aspects is a way to deal with the increasing complexity of systems. The separate design of models for different aspects also promotes a better reusability level. However, an important issue is then to define means to integrate them into a global model. We present a formal and tool-equipped approach for the integration of dynamic models (behaviors expressed using state diagrams) and static models (formal data types) with the benefit to share advantages of both: graphical user-friendly models for behaviors, formal and abstract models for data types. Integration is achieved in a generic way so that it can deal with both different static specification languages (algebraic specifications, Z, B) and different dynamic specification semantics.", "paper_title": "A formal and tool-equipped approach for the integration of state diagrams and formal datatypes", "paper_id": "WOS:000243788000002"}