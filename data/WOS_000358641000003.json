{"auto_keywords": [{"score": 0.03166407174619395, "phrase": "genetic_programming"}, {"score": 0.03131725108108424, "phrase": "tree_representation"}, {"score": 0.004814952636065881, "phrase": "hyper-heuristic"}, {"score": 0.004796821104414893, "phrase": "evolution_of_dispatching_rules"}, {"score": 0.004707188147442449, "phrase": "rule_representations"}, {"score": 0.004671803485255806, "phrase": "dispatching_rules"}, {"score": 0.004498812433096501, "phrase": "complex_manufacturing_systems"}, {"score": 0.004299621153829837, "phrase": "time_consuming_trial-and-error_process"}, {"score": 0.004109212945115815, "phrase": "design_process"}, {"score": 0.003956971099850658, "phrase": "hyper-heuristic_search"}, {"score": 0.003853757393357659, "phrase": "search_neighborhood"}, {"score": 0.0036691380448651443, "phrase": "suitable_choice"}, {"score": 0.0035734052458933547, "phrase": "successful_evolutionary_algorithm"}, {"score": 0.003363830908814182, "phrase": "automated_rule_design"}, {"score": 0.003214730261140886, "phrase": "artificial_neural_networks"}, {"score": 0.0031190082119319272, "phrase": "appropriate_evolutionary_algorithms"}, {"score": 0.0030375852871252934, "phrase": "neural_network"}, {"score": 0.003014713272570927, "phrase": "linear_representations"}, {"score": 0.0028164399450837465, "phrase": "dynamic_stochastic_job_shop_scenario"}, {"score": 0.0026511422582578027, "phrase": "underlying_job_shop_scenario"}, {"score": 0.002514464610980629, "phrase": "intuitive_understanding"}, {"score": 0.0024120247307686084, "phrase": "improved_version"}, {"score": 0.002366847878952636, "phrase": "best_results"}, {"score": 0.00227040825063645, "phrase": "neural_network_representation"}, {"score": 0.0022278779300543548, "phrase": "good_results"}, {"score": 0.0021944267528581094, "phrase": "moderate_computational_budgets"}, {"score": 0.002169667676959813, "phrase": "linear_representation"}, {"score": 0.0021049977753042253, "phrase": "extremely_small_computational_budgets"}], "paper_keywords": ["Job shop scheduling", " dispatching rule", " representation", " genetic programming", " CMA-ES", " artificial neural network"], "paper_abstract": "Dispatching rules are frequently used for real-time, online scheduling in complex manufacturing systems. Design of such rules is usually done by experts in a time consuming trial-and-error process. Recently, evolutionary algorithms have been proposed to automate the design process. There are several possibilities to represent rules for this hyper-heuristic search. Because the representation determines the search neighborhood and the complexity of the rules that can be evolved, a suitable choice of representation is key for a successful evolutionary algorithm. In this paper we empirically compare three different representations, both numeric and symbolic, for automated rule design: A linear combination of attributes, a representation based on artificial neural networks, and a tree representation. Using appropriate evolutionary algorithms (CMA-ES for the neural network and linear representations, genetic programming for the tree representation), we empirically investigate the suitability of each representation in a dynamic stochastic job shop scenario. We also examine the robustness of the evolved dispatching rules against variations in the underlying job shop scenario, and visualize what the rules do, in order to get an intuitive understanding of their inner workings. Results indicate that the tree representation using an improved version of genetic programming gives the best results if many candidate rules can be evaluated, closely followed by the neural network representation that already leads to good results for small to moderate computational budgets. The linear representation is found to be competitive only for extremely small computational budgets.", "paper_title": "Hyper-heuristic Evolution of Dispatching Rules: A Comparison of Rule Representations", "paper_id": "WOS:000358641000003"}