{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "non-uniform_vcpu-pcpu_mapping"}, {"score": 0.04432627141643825, "phrase": "virtualization_system"}, {"score": 0.0046079260641779755, "phrase": "better_isolation"}, {"score": 0.004527619017250708, "phrase": "traditional_servers"}, {"score": 0.004429195722108934, "phrase": "vmm"}, {"score": 0.004146510711518748, "phrase": "traditional_software_stack"}, {"score": 0.0040385352882334235, "phrase": "resource_allocating"}, {"score": 0.0037973594873521596, "phrase": "virtual_machines"}, {"score": 0.003747575730190958, "phrase": "dynamic_runtime_feature"}, {"score": 0.0036499505265403377, "phrase": "different_percentage"}, {"score": 0.0036179751816682454, "phrase": "processor_allocation"}, {"score": 0.0034168317227203206, "phrase": "asymmetric_performance"}, {"score": 0.003372019835750424, "phrase": "guest_os"}, {"score": 0.00304737045343781, "phrase": "sub-optimal_policies"}, {"score": 0.003007389443770562, "phrase": "virtual_resource"}, {"score": 0.0029289895726382653, "phrase": "application_runtime_system"}, {"score": 0.0027417911324611917, "phrase": "performance_implications"}, {"score": 0.0026121403051734744, "phrase": "real_measurements"}, {"score": 0.0025328377393370642, "phrase": "art_multi-core_processors"}, {"score": 0.0024776677004255104, "phrase": "emerging_applications"}, {"score": 0.002381365139274329, "phrase": "non-uniform_mapping"}, {"score": 0.0023294867572824147, "phrase": "application's_performance_predictability"}, {"score": 0.002258745901862197, "phrase": "timely_and_practical_insights"}, {"score": 0.0022095328812245852, "phrase": "non-uniform_vcpu_mapping"}, {"score": 0.0021049977753042253, "phrase": "emerging_cloud"}], "paper_keywords": ["Virtualization", " Non-uniform VCPU-PCPU mapping", " Predictability", " Scalability", " Deployment", " Dynamic runtime feature"], "paper_abstract": "Virtualization technology promises to provide better isolation and consolidation in traditional servers. However, with VMM (virtual machine monitor) layer getting involved, virtualization system changes the architecture of traditional software stack, bringing about limitations in resource allocating. The non-uniform VCPU (virtual CPU)-PCPU (physical CPU) mapping, deriving from both the configuration or the deployment of virtual machines and the dynamic runtime feature of applications, causes the different percentage of processor allocation in the same physical machine,and the VCPUs mapped these PCPUs will gain asymmetric performance. The guest OS, however, is agnostic to the non-uniformity. With assumption that all VCPUs have the same performance, it can carry out sub-optimal policies when allocating virtual resource for applications. Likewise, application runtime system can also make the same mistakes. Our focus in this paper is to understand the performance implications of the non-uniform VCPU-PCPU mapping in a virtualization system. Based on real measurements of a virtualization system with state of art multi-core processors running different commercial and emerging applications, we demonstrate that the presence of the non-uniform mapping has negative impacts on application's performance predictability. This study aims to provide timely and practical insights on the problem of non-uniform VCPU mapping, when virtual machines being deployed and configured, in emerging cloud.", "paper_title": "Performance implications of non-uniform VCPU-PCPU mapping in virtualization environment", "paper_id": "WOS:000322775400003"}