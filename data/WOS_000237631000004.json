{"auto_keywords": [{"score": 0.043113908496203925, "phrase": "real-time_system"}, {"score": 0.03724062504758168, "phrase": "propositional_formula"}, {"score": 0.00481495049065317, "phrase": "real-time_systems"}, {"score": 0.004750873844061641, "phrase": "incremental_satisfiability_counting"}, {"score": 0.00470862827326028, "phrase": "real-time_logic"}, {"score": 0.00466676768736952, "phrase": "rtl"}, {"score": 0.004267896572751978, "phrase": "safety_assertion"}, {"score": 0.004045068727683462, "phrase": "satisfiability_problem"}, {"score": 0.003920476803132283, "phrase": "systematic_debugging"}, {"score": 0.0037827603118271757, "phrase": "first_step"}, {"score": 0.003474694300991964, "phrase": "verification_condition"}, {"score": 0.003397866151093552, "phrase": "truth_assignments"}, {"score": 0.0032638170723261538, "phrase": "specific_constraints"}, {"score": 0.0031210475158175432, "phrase": "expected_solutions"}, {"score": 0.00303839203670705, "phrase": "even_more_challenging_problem"}, {"score": 0.002997886346903894, "phrase": "future_work"}, {"score": 0.0027907771648224273, "phrase": "autonomous_systems"}, {"score": 0.0027535633837592597, "phrase": "real-time_control_plans"}, {"score": 0.002621297299343551, "phrase": "timing_constraints"}, {"score": 0.002574788013427524, "phrase": "human_interaction"}, {"score": 0.002418393046947528, "phrase": "designer's_guidance"}, {"score": 0.002251227801482381, "phrase": "automatic_debugging"}, {"score": 0.0021239335561699106, "phrase": "adrtl"}], "paper_keywords": ["real-time system", " system development tools", " automatic debugging", " formal methods", " timing constraint", " counting SAT problem", " incremental computation"], "paper_abstract": "Real-time logic (RTL) [ 2], [ 3], [ 4] is useful for the verification of a safety assertion with respect to the specification of a real-time system. Since the satisfiability problem for RTL is undecidable, the systematic debugging of a real-time system appears impossible. A first step toward this challenge was presented in [ 1]. With RTL, each propositional formula corresponds to a verification condition. The number of truth assignments of a propositional formula can help us determine the specific constraints which should be added or modified to get the expected solutions. This paper solves an even more challenging problem specified as future work in [ 1], namely, the embedding and the integration of our debugger in autonomous systems which generate real-time control plans on-the-fly, since these specifications must meet timing constraints, but without human interaction. The idea is to consider in advance all the necessary information, such as the designer's guidance. We have implemented a tool ( called ADRTL) that is able to perform automatic debugging. The confidence of our approach is high as we have successfully evaluated ADRTL on several existing industrial-based applications.", "paper_title": "Automatic debugging of real-time systems based on incremental satisfiability counting", "paper_id": "WOS:000237631000004"}