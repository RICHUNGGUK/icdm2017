{"auto_keywords": [{"score": 0.04907983841155353, "phrase": "large-scale_graphs"}, {"score": 0.03607419095412168, "phrase": "adjacent_nodes"}, {"score": 0.013441016835282179, "phrase": "scan"}, {"score": 0.008684310469144951, "phrase": "density_evaluations"}, {"score": 0.00481495049065317, "phrase": "finding_clusters"}, {"score": 0.004583686207645165, "phrase": "key_techniques"}, {"score": 0.004425299304063172, "phrase": "cluster_detection"}, {"score": 0.004287415750101536, "phrase": "key_task"}, {"score": 0.0042126709243529275, "phrase": "important_roles"}, {"score": 0.004153810449519519, "phrase": "graph_data_mining"}, {"score": 0.004124688058533477, "phrase": "structural_clustering_algorithm"}, {"score": 0.004052768605308453, "phrase": "xu_et_al"}, {"score": 0.0038715697646612766, "phrase": "densely_connected_nodes"}, {"score": 0.0037906837773782, "phrase": "sparsely_connected_nodes"}, {"score": 0.0032697235411641695, "phrase": "novel_graph_clustering_algorithm"}, {"score": 0.0031901183059524804, "phrase": "time_complexity"}, {"score": 0.0031455000569352454, "phrase": "new_data_structure"}, {"score": 0.0031234247639701134, "phrase": "directly_two-hop-away_reachable_node_set"}, {"score": 0.0030689098754563982, "phrase": "dtar"}, {"score": 0.0030153435879168634, "phrase": "two-hop-away_nodes"}, {"score": 0.0028003586585812097, "phrase": "efficient_clustering"}, {"score": 0.0027417911324611917, "phrase": "clustering_quality"}, {"score": 0.0023897719795915, "phrase": "efficient_density_evaluations"}, {"score": 0.0023070189467375374, "phrase": "exactly_the_same_clusters"}, {"score": 0.002157583854640276, "phrase": "synthetic_graphs"}, {"score": 0.002134888329742086, "phrase": "performance_superiority"}, {"score": 0.0021049977753042253, "phrase": "existing_approaches"}], "paper_keywords": [""], "paper_abstract": "Graph clustering is one of the key techniques for understanding the structures present in graphs. Besides cluster detection, identifying hubs and outliers is also a key task, since they have important roles to play in graph data mining The structural clustering algorithm SCAN, proposed by Xu et al., is successfully used in many application because it not only detects densely connected nodes as clusters but also identifies sparsely connected nodes as hubs or outliers. However, it is difficult to apply SCAN to large-scale graphs due to its high time complexity. This is because it evaluates the density for all adjacent nodes included in the given graphs. In this paper, we propose a novel graph clustering algorithm named SCAN++. In order to reduce time complexity, we introduce new data structure of directly two-hop-away reachable node set (DTAR). DTAR is the set of two-hop-away nodes from a given node that are likely to be in the same cluster as the given node. SCAN++ employs two approaches for efficient clustering by using DTARs without sacrificing clustering quality. First, it reduces the number of the density evaluations by computing the density only for the adjacent nodes such as indicated by DTARs. Second, by sharing a part of the density evaluations for DTARs, it offers efficient density evaluations of adjacent nodes. As a result, SCAN++ detects exactly the same clusters, hubs, and outliers from large-scale graphs as SCAN with much shorter computation time. Extensive experiments on both real-world and synthetic graphs demonstrate the performance superiority of SCAN++ over existing approaches.", "paper_title": "SCAN++: Efficient Algorithm for Finding Clusters, Hubs and Outliers on Large-scale Graphs", "paper_id": "WOS:000362283300006"}