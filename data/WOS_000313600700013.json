{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "model_transformations"}, {"score": 0.004518442937844318, "phrase": "central_element"}, {"score": 0.004404994123834589, "phrase": "model-driven_development"}, {"score": 0.004294575121482893, "phrase": "mod"}, {"score": 0.003459191419478298, "phrase": "practical_software_development"}, {"score": 0.0030071857666598193, "phrase": "automated_derivation"}, {"score": 0.002931569771634119, "phrase": "correct-by-construction_transformation_implementations"}, {"score": 0.002421726275597666, "phrase": "model_transformation_case_studies"}, {"score": 0.0021049977753042253, "phrase": "quality_improvement"}], "paper_keywords": ["Model transformations", " Model-driven development", " Software synthesis"], "paper_abstract": "Model transformations are a central element of model-driven development (MOD) approaches. The correctness, modularity and flexibility of model transformations is critical to their effective use in practical software development. In this paper we describe an approach for the automated derivation of correct-by-construction transformation implementations from high-level specifications. We illustrate this approach on a range of model transformation case studies of different kinds (re-expression, refinement, quality improvement and abstraction transformations) and describe ways in which transformations can be composed and evolved using this approach. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Constraint-based specification of model transformations", "paper_id": "WOS:000313600700013"}