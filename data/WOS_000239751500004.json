{"auto_keywords": [{"score": 0.046273829908275756, "phrase": "constituent_objects"}, {"score": 0.00481495049065317, "phrase": "composite_object_replication_schemes"}, {"score": 0.004768378525561471, "phrase": "dependable_server_applications"}, {"score": 0.004722254884093624, "phrase": "object_oriented_dependable_server_applications"}, {"score": 0.004631335513513859, "phrase": "fault-tolerance_schemes"}, {"score": 0.004498213310668266, "phrase": "different_replication_policies"}, {"score": 0.004202223763361474, "phrase": "simulation-based_evaluation_approach"}, {"score": 0.004081385289516914, "phrase": "fault-tolerance_overhead"}, {"score": 0.003983334573043943, "phrase": "composite_replication_schemes"}, {"score": 0.0037030390595465673, "phrase": "well-known_reliability_blocks"}, {"score": 0.0035965032173588753, "phrase": "hybrid_reliability"}, {"score": 0.0035616743422949766, "phrase": "system's_traffic_simulation"}, {"score": 0.00342568771304873, "phrase": "clear_distinction"}, {"score": 0.003310951184365485, "phrase": "fault-affected_service_response_times"}, {"score": 0.003215659239270654, "phrase": "fault-unaffected_ones"}, {"score": 0.0031690434364310435, "phrase": "first_mentioned_feature"}, {"score": 0.003092842645798083, "phrase": "additional_concerns"}, {"score": 0.0028890603352364273, "phrase": "second_feature"}, {"score": 0.0028471655497661528, "phrase": "proposed_approach"}, {"score": 0.0028058765785670546, "phrase": "design_studies"}, {"score": 0.0025578967205807843, "phrase": "perceived_service_response_times"}, {"score": 0.00247215300812495, "phrase": "case_system_model"}, {"score": 0.002424450174817922, "phrase": "different_assumptions"}, {"score": 0.0022756672722130424, "phrase": "presented_results"}, {"score": 0.002199363362666037, "phrase": "composite_method"}, {"score": 0.0021886732310288128, "phrase": "request-retry_schemes"}, {"score": 0.0021674482571326283, "phrase": "appropriate_request_timeouts"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["fault-tolerance", " performance", " quality of service", " distributed objects", " simulation"], "paper_abstract": "Object oriented dependable server applications often rely on fault-tolerance schemes, which are comprised of different replication policies for the constituent objects (composite replication schemes). This paper introduces a simulation-based evaluation approach for quantifying the tradeoffs between fault-tolerance overhead and fault-tolerance effectiveness in composite replication schemes. Compared to other evaluation approaches: (a) we do not use the well-known reliability blocks based simulation, but a hybrid reliability and system's traffic simulation and (b) we make a clear distinction between the measures used for the fault-affected service response times from those used for the fault-unaffected ones. The first mentioned feature allows taking into account additional concerns other than fault-tolerance, like for example load balancing and multithreading. The second feature renders the proposed approach suitable for design studies that aim to determine either optimal replication properties for the constituent objects or quality of service (QoS) guarantees for the perceived service response times. We obtain results for a case system model, based on different assumptions on what happens when server-objects fail (loss scenarios). The presented results give insight in the design of composite method request-retry schemes with appropriate request timeouts. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Evaluation of composite object replication schemes for dependable server applications", "paper_id": "WOS:000239751500004"}