{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_peer-to-peer_networks"}, {"score": 0.004614483128885678, "phrase": "robust_and_fast_distributed_computation"}, {"score": 0.004186926251483987, "phrase": "fundamental_distributed_agreement_problem"}, {"score": 0.004036968488559984, "phrase": "heavy_node_churn"}, {"score": 0.0035100601949451028, "phrase": "high_probability"}, {"score": 0.0034465894339710864, "phrase": "high_adversarial_churn"}, {"score": 0.00316518932828897, "phrase": "stable_network_size"}, {"score": 0.0029066973917258655, "phrase": "time_step"}, {"score": 0.0025423706961391034, "phrase": "algorithm's_random_choices"}], "paper_keywords": ["Dynamic networks", " Distributed computation", " Fault-tolerance", " P2P networks", " Agreement", " Churn", " Randomization"], "paper_abstract": "Motivated by the need for robust and fast distributed computation in highly dynamic Peer-to-Peer (P2P) networks, we present first-known, fully-distributed algorithms for the fundamental distributed agreement problem in dynamic networks that experience heavy node churn (i.e., nodes join and leave the network continuously over time). Our algorithms guarantee stable almost-everywhere agreement with high probability even under high adversarial churn and run in time that is polylogarithmic in n (which is the stable network size). Our first algorithm can tolerate a churn of up to epsilon n per time step, sends only polylogarithmic number of bits per node per time step, and works under an adversary that is oblivious to the algorithm's random choices. Our second algorithm, designed for the more challenging adaptive adversary, can tolerate a churn of up to epsilon root n. Being easy to implement, our algorithms could serve as building blocks for other non-trivial distributed computation in dynamic networks. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Distributed agreement in dynamic peer-to-peer networks", "paper_id": "WOS:000356644600002"}