{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "optimization_criterion"}, {"score": 0.00424779023663186, "phrase": "common_connected_components"}, {"score": 0.004214637810698362, "phrase": "cograph_sandwich"}, {"score": 0.0041653916552844535, "phrase": "first_problem"}, {"score": 0.0038817197332605647, "phrase": "coarsest_partition"}, {"score": 0.0037471850931318942, "phrase": "connected_subgraphs"}, {"score": 0.003703380599999214, "phrase": "input_graphs"}, {"score": 0.0036600862989330106, "phrase": "second_problem"}, {"score": 0.003589046900483573, "phrase": "sandwich_problems"}, {"score": 0.0035332058983966424, "phrase": "partial_subgraph"}, {"score": 0.0034107088717109857, "phrase": "partial_subgraph_g"}, {"score": 0.0033314049082500794, "phrase": "partial_supergraph"}, {"score": 0.003128798520531889, "phrase": "former_problem"}, {"score": 0.003056029284235528, "phrase": "current_best_known_performance"}, {"score": 0.0028143720888311537, "phrase": "planar_graphs"}, {"score": 0.002748895580860912, "phrase": "intervals_graphs"}, {"score": 0.00268493828558848, "phrase": "recent_result"}, {"score": 0.0026431267487109543, "phrase": "latter_problem"}, {"score": 0.002551409948440577, "phrase": "common_connected_components_problem"}, {"score": 0.0025215486544004134, "phrase": "cograph_sandwich_problem"}, {"score": 0.002405549400304955, "phrase": "cograph_sandwiches"}, {"score": 0.0021551702945512494, "phrase": "total_edges"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["graph search", " divide-and-conquer algorithm", " common connected graph component", " sandwich graph problem"], "paper_abstract": "We exemplify an optimization criterion for divide-and-conquer algorithms with a technique called generic competitive graph search. The technique is then applied to solve two problems arising from biocomputing, so-called Common Connected Components and Cograph Sandwich. The first problem can be defined as follows: given two graphs on the same set of n vertices, find the coarsest partition of the vertex set into subsets which induce connected subgraphs in both input graphs. The second problem is an instance of sandwich problems: given a partial subgraph G(1) of G(2), find a partial subgraph G of G(2) that is partial supergraph of G(1) (sandwich), and that is a cograph. For the former problem our generic algorithm not only achieves the current best known performance on arbitrary graphs and forests, but also improves by a log it factor when the input is made of planar graphs. However, our complexity for intervals graphs is slightly lower than a recent result. For the latter problem, we first study the relationship between the common connected components problem and the cograph sandwich problem, then, using our competitive graph search paradigm, we improve the computation of cograph sandwiches from O(n (n + m)) down to O(n + m log(2) n), where n is the number of vertices and m of total edges. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "Competitive graph searches", "paper_id": "WOS:000254543900006"}