{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "event_definitions"}, {"score": 0.04960770684597511, "phrase": "inductive_logic_programming"}, {"score": 0.004720606036240263, "phrase": "event_recognition_systems"}, {"score": 0.004651057147690674, "phrase": "knowledge_bases"}, {"score": 0.004361276005140776, "phrase": "logical_framework"}, {"score": 0.00419195822011581, "phrase": "direct_connections"}, {"score": 0.004150661689086371, "phrase": "machine_learning"}, {"score": 0.0038919354605673104, "phrase": "tedious_and_error-prone_task"}, {"score": 0.0037222908218253054, "phrase": "temporal_logical_formalisms"}, {"score": 0.0035954555250614197, "phrase": "logic-based_event_recognition_systems"}, {"score": 0.0033214855341753544, "phrase": "event-based_data"}, {"score": 0.00320826350799124, "phrase": "different_times"}, {"score": 0.003038066486989815, "phrase": "temporal_data"}, {"score": 0.0029199689963238726, "phrase": "incremental_mode"}, {"score": 0.002834409847642238, "phrase": "prior_constructed_knowledge"}, {"score": 0.0027650234530228923, "phrase": "new_evidence"}, {"score": 0.002657511557782469, "phrase": "incremental_method"}, {"score": 0.0025924443774713473, "phrase": "event-based_knowledge"}, {"score": 0.002516457934208144, "phrase": "event_calculus_programs"}, {"score": 0.0024793019587009035, "phrase": "proposed_algorithm"}, {"score": 0.002442693254693416, "phrase": "abductive-inductive_learning"}, {"score": 0.0023947191132328233, "phrase": "scalable_clause_refinement_methodology"}, {"score": 0.002336071138145897, "phrase": "compressive_summarization"}, {"score": 0.0023130151703068444, "phrase": "clause_coverage"}, {"score": 0.0022010965931147735, "phrase": "empirical_evaluation"}, {"score": 0.002157857111130435, "phrase": "real_and_synthetic_data"}, {"score": 0.0021049977753042253, "phrase": "city_transport_applications"}], "paper_keywords": ["Incremental learning", " Abductive-Inductive Logic Programming", " Event Calculus", " Event recognition"], "paper_abstract": "Event recognition systems rely on knowledge bases of event definitions to infer occurrences of events in time. Using a logical framework for representing and reasoning about events offers direct connections to machine learning, via Inductive Logic Programming (ILP), thus allowing to avoid the tedious and error-prone task of manual knowledge construction. However, learning temporal logical formalisms, which are typically utilized by logic-based event recognition systems is a challenging task, which most ILP systems cannot fully undertake. In addition, event-based data is usually massive and collected at different times and under various circumstances. Ideally, systems that learn from temporal data should be able to operate in an incremental mode, that is, revise prior constructed knowledge in the face of new evidence. In this work we present an incremental method for learning and revising event-based knowledge, in the form of Event Calculus programs. The proposed algorithm relies on abductive-inductive learning and comprises a scalable clause refinement methodology, based on a compressive summarization of clause coverage in a stream of examples. We present an empirical evaluation of our approach on real and synthetic data from activity recognition and city transport applications.", "paper_title": "Incremental learning of event definitions with Inductive Logic Programming", "paper_id": "WOS:000359747100016"}