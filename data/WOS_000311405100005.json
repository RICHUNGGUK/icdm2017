{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "counterfeit_coins"}, {"score": 0.004544770921520536, "phrase": "n_coins"}, {"score": 0.004308791766002289, "phrase": "remaining_n_-_k"}, {"score": 0.00408501512749186, "phrase": "good_coins"}, {"score": 0.003977505904363489, "phrase": "defective_ones"}, {"score": 0.003737485125097945, "phrase": "spring_scale"}, {"score": 0.003606866938661143, "phrase": "exactly_the_number"}, {"score": 0.003434662174045939, "phrase": "counterfeit_coins_problem"}, {"score": 0.003314591878914152, "phrase": "defective_coins"}, {"score": 0.0029263562233195423, "phrase": "non-adaptive_algorithms"}, {"score": 0.0027741761880779535, "phrase": "natural_interesting_generalization"}, {"score": 0.0021620042653528846, "phrase": "non-adaptive_deterministic_algorithm"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["algorithms", " randomized algorithms", " adaptive algorithms", " combinatorial search", " counterfeit coins"], "paper_abstract": "We are given n coins of which k are heavy (defective), while the remaining n - k are light (good). We know both the weight of the good coins and the weight of the defective ones. Therefore, if we weigh a subset Q ? S with a spring scale, then the outcome will tell us exactly the number of defectives contained in Q. The problem, known as Counterfeit Coins problem, is to identify the set of defective coins by minimizing the number of weighings, also called queries. It is well known that T(klog k +1(n/k)) queries are enough, even for non-adaptive algorithms, in case k = cn for some constant 0 < c < 1. A natural interesting generalization arises when we are required to identify any subset of m = k defectives. We show that while for randomized algorithms \\documentclass{article}\\usepackage{mathrsfs, amsmath, amssymb}\\pagestyle{empty}\\begin{document}\\begin{align*}\\tilde{\\Theta}(m)\\end{align*} \\end{document} queries are sufficient, the deterministic non-adaptive counterpart still requires T(klog k +1(n/k)) queries, in case k = n/28; therefore, finding any subset of defectives is not easier than finding all of them by a non-adaptive deterministic algorithm. (C) 2012 Wiley Periodicals, Inc. Random Struct. Alg., 2012", "paper_title": "Searching for a subset of counterfeit coins: Randomization vs determinism and adaptiveness vs non-adaptiveness", "paper_id": "WOS:000311405100005"}