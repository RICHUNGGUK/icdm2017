{"auto_keywords": [{"score": 0.045458312844898874, "phrase": "heller"}, {"score": 0.00481495049065317, "phrase": "lazy_concurrent_list-based_set_algorithm"}, {"score": 0.004463096299091981, "phrase": "recent_concurrent_list-based_set_algorithm"}, {"score": 0.003407026489727146, "phrase": "contains_operation"}, {"score": 0.0027819985260847603, "phrase": "simple_coarse-grained_locking_algorithms"}, {"score": 0.0026713690473288555, "phrase": "pvs."}, {"score": 0.0023694065215394593, "phrase": "abstract_set"}, {"score": 0.0022145052062614514, "phrase": "simulation_proof_obligations"}], "paper_keywords": [""], "paper_abstract": "We describe a formal verification of a recent concurrent list-based set algorithm due to Heller et al. The algorithm is optimistic: the add and remove operations traverse the list without locking, and lock only the nodes affected by the operation; the contains operation uses no locks and is wait-free. These properties make the algorithm challenging to prove correct, much more so than simple coarse-grained locking algorithms. We have proved that the algorithm is linearisable using simulation between input/output automata modelling the behaviour of an abstract set and the implementation. The automata and simulation proof obligations are specified and verified using PVS.", "paper_title": "Formal verification of a lazy concurrent list-based set algorithm", "paper_id": "WOS:000240257000042"}