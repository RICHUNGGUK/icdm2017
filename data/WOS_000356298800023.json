{"auto_keywords": [{"score": 0.04470745167061017, "phrase": "centralized_server"}, {"score": 0.014321521649271965, "phrase": "new_channel"}, {"score": 0.00481495049065317, "phrase": "social-network-aided_efficient_peer-to-peer_live_streaming_system"}, {"score": 0.004601606675066839, "phrase": "streaming_systems"}, {"score": 0.004522080178250592, "phrase": "channel_form"}, {"score": 0.004459445258869177, "phrase": "video_sharing"}, {"score": 0.004115697805448384, "phrase": "today's_live_streaming_applications"}, {"score": 0.003974597387549594, "phrase": "users'_desire"}, {"score": 0.003933214459874487, "phrase": "multiple_channels"}, {"score": 0.0037719307016238998, "phrase": "current_applications"}, {"score": 0.0036809089768350496, "phrase": "different_channel_overlays"}, {"score": 0.0034931650881768286, "phrase": "heavy_burden"}, {"score": 0.0033851312604425516, "phrase": "higher_efficiency"}, {"score": 0.003303412571939195, "phrase": "social-network-aided_efficient_live_streaming_system"}, {"score": 0.0032236602306747637, "phrase": "users'_channel"}, {"score": 0.0031900709094621975, "phrase": "multichannel_watching"}, {"score": 0.003069867656852932, "phrase": "channel_interactions"}, {"score": 0.003048502724695561, "phrase": "nodes'_interests"}, {"score": 0.0029438813080245544, "phrase": "frequent_interactions"}, {"score": 0.0027356847952125433, "phrase": "similar_interests"}, {"score": 0.002395571076685383, "phrase": "channel-closeness-based_chunk-pushing_strategy"}, {"score": 0.002297193869719679, "phrase": "system_performance"}, {"score": 0.002281194103324554, "phrase": "extensive_experimental_results"}, {"score": 0.0022574026832458344, "phrase": "peersim_simulator"}, {"score": 0.0022416826076241472, "phrase": "planetlab"}, {"score": 0.0021875036343988806, "phrase": "system_efficiency"}, {"score": 0.002172266188075892, "phrase": "server_load_reduction"}], "paper_keywords": ["Peer-to-peer (P2P) live streaming", " P2P networks", " social networks"], "paper_abstract": "In current peer-to-peer (P2P) live streaming systems, nodes in a channel form a P2P overlay for video sharing. To watch a new channel, a node depends on the centralized server to join in the overlay of the channel. In today's live streaming applications, the increase in the number of channels triggers users' desire of watching multiple channels successively or simultaneously. However, the support of such watching modes in current applications is no better than joining in different channel overlays successively or simultaneously through the centralized server, which if widely used, poses a heavy burden on the server. In order to achieve higher efficiency and scalability, we propose a Social-network-Aided efficient liVe strEaming system (SAVE). SAVE regards users' channel switching or multichannel watching as interactions between channels. By collecting the information of channel interactions, nodes' interests, and watching times, SAVE forms nodes in multiple channels with frequent interactions into an overlay, constructs bridges between overlays of channels with less frequent interactions, and enables nodes to identify friends sharing similar interests and watching times. Thus, a node can connect to a new channel while staying in its current overlay, using bridges or relying on its friends, reducing the need to contact the centralized server. We further propose the channel-closeness-based chunk-pushing strategy and capacity-based chunk provider selection strategy to enhance the system performance. Extensive experimental results from the PeerSim simulator and PlanetLab verify that SAVE outperforms other systems in system efficiency and server load reduction, as well as the effectiveness of the two proposed strategies.", "paper_title": "A Social-Network-Aided Efficient Peer-to-Peer Live Streaming System", "paper_id": "WOS:000356298800023"}