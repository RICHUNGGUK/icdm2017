{"auto_keywords": [{"score": 0.04409969247376604, "phrase": "sql"}, {"score": 0.03744499119190587, "phrase": "indrex"}, {"score": 0.00481495049065317, "phrase": "relation_extraction"}, {"score": 0.004726970265271088, "phrase": "text_data"}, {"score": 0.004674952036988355, "phrase": "long-standing_history"}, {"score": 0.004623503587186056, "phrase": "human_mankind"}, {"score": 0.0045726187330434025, "phrase": "particular_common_task"}, {"score": 0.004123781267600542, "phrase": "analytical_tasks"}, {"score": 0.004063348730077936, "phrase": "iterative_analytical_workflow"}, {"score": 0.003705130724701598, "phrase": "end_users"}, {"score": 0.0036508108698357932, "phrase": "single_system"}, {"score": 0.0036105923401756126, "phrase": "analytical_and_relation_extraction_tasks"}, {"score": 0.003466865016432561, "phrase": "single_and_comprehensive_view"}, {"score": 0.003428665921276366, "phrase": "whole_process"}, {"score": 0.003378385493203297, "phrase": "later_exploitation"}, {"score": 0.003292156638306418, "phrase": "data_warehouse_style_extract-transform-load"}, {"score": 0.003161065111494053, "phrase": "additional_text_mining_analysis_libraries"}, {"score": 0.0031032109441552287, "phrase": "generic_relations"}, {"score": 0.0030128319827595314, "phrase": "sql_queries"}, {"score": 0.0029796206196589115, "phrase": "extracted_relations"}, {"score": 0.0029467742734417255, "phrase": "higher_level_semantics"}, {"score": 0.0028293966058473476, "phrase": "powerful_task"}, {"score": 0.002777595758483679, "phrase": "sql-based_analytical_capabilities"}, {"score": 0.0027469703311742647, "phrase": "columnar-based_massively_parallel_query_processing_engine"}, {"score": 0.0026867260506696455, "phrase": "user-defined_functions"}, {"score": 0.0026570998719084153, "phrase": "data_model"}, {"score": 0.002551231163230566, "phrase": "built-in_query_optimization"}, {"score": 0.002495268931035983, "phrase": "underlaying_query_execution_engine"}, {"score": 0.0024405312482831646, "phrase": "text_mining"}, {"score": 0.002422552850701705, "phrase": "analytical_workflows"}, {"score": 0.002404706573379854, "phrase": "new_analytical_platforms"}, {"score": 0.0023694065215394593, "phrase": "mapreduce_framework"}, {"score": 0.0023433057016637956, "phrase": "hadoop"}, {"score": 0.0022749744354271834, "phrase": "base_line"}, {"score": 0.0022168460543913787, "phrase": "common_workflows"}, {"score": 0.002176235362654451, "phrase": "magnitude_improvement"}, {"score": 0.0021601997088758957, "phrase": "execution_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Iterative text mining in a RDBMS", " Ad-hoc reports from text data", " Information extraction"], "paper_abstract": "The management of text data has a long-standing history in the human mankind. A particular common task is extracting relations from text Typically, the user performs this task with two separate systems, a relation extraction system and an SQL-based query engine for analytical tasks. During this iterative analytical workflow, the user must frequently ship data between these systems. Worse, the user must learn to manage both systems. Therefore, end users often desire a single system for both analytical and relation extraction tasks. We propose INDREX, a system that provides a single and comprehensive view of the whole process combining both relation extraction and later exploitation with SQL The system permits a data warehouse style extract-transform-load of generic relations extracted from text documents and can support additional text mining analysis libraries or systems. Once generic relations are loaded, the user can define SQL queries on the extracted relations to discover higher level semantics or to join them with other relational data. For executing this powerful task, our system extends the SQL-based analytical capabilities of a columnar-based massively parallel query processing engine with a broad set of user-defined functions and a data model that supports this task Our white-box approach permits INDREX to benefit from built-in query optimization and indexing techniques of the underlaying query execution engine. Applications that support both text mining and analytical workflows leverage new analytical platforms based on the MapReduce framework and its open source Hadoop implementation. We compare our system against this base line. We measure execution times for common workflows and demonstrate orders of magnitude improvement in execution time using INDREX. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "INDREX: In-database relation extraction", "paper_id": "WOS:000358700800008"}