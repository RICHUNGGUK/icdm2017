{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "cascading_failures"}, {"score": 0.004700027722284931, "phrase": "continuous-time_markov_chain_model"}, {"score": 0.004521803560561489, "phrase": "randomly_changing_environment"}, {"score": 0.004435230698216773, "phrase": "probabilistic_cascading_failures"}, {"score": 0.0043713857434347254, "phrase": "cascading_failure"}, {"score": 0.004225950334493496, "phrase": "rooted_tree"}, {"score": 0.0038737214010638745, "phrase": "root's_failure"}, {"score": 0.0037811784409635023, "phrase": "next_generation"}, {"score": 0.0035507457285983268, "phrase": "root's_children"}, {"score": 0.0030267296900520217, "phrase": "type_j"}, {"score": 0.0027474453262607834, "phrase": "infinitesimal_generator_matrix"}, {"score": 0.002707829887747594, "phrase": "markov_chain"}, {"score": 0.0026817365934071486, "phrase": "significant_challenges"}, {"score": 0.002630299922281955, "phrase": "exponential_growth"}, {"score": 0.0024107449502335583, "phrase": "cascade_increases"}, {"score": 0.0023530698447434308, "phrase": "recursive_algorithm"}, {"score": 0.002319127685733821, "phrase": "possible_trees"}, {"score": 0.0022202042044679984, "phrase": "experimental_study"}, {"score": 0.0021049977753042253, "phrase": "numerical_results"}], "paper_keywords": ["Availability", " reliability modeling", " Markov processes", " trees", " cascading failures"], "paper_abstract": "We develop a continuous-time Markov chain model of a dependability system operating in a randomly changing environment and subject to probabilistic cascading failures. A cascading failure can be thought of as a rooted tree. The root is the component whose failure triggers the cascade, its children are those components that the root's failure immediately caused, the next generation are those components whose failures were immediately caused by the failures of the root's children, and so on. The amount of cascading is unlimited. We consider probabilistic cascading in the sense that the failure of a component of type i causes a component of type j to fail simultaneously with a given probability, with all failures in a cascade being mutually independent. Computing the infinitesimal generator matrix of the Markov chain poses significant challenges because of the exponential growth in the number of trees one needs to consider as the number of components failing in the cascade increases. We provide a recursive algorithm generating all possible trees corresponding to a given transition, along with an experimental study of an implementation of the algorithm on two examples. The numerical results highlight the effects of cascading on the dependability of the models.", "paper_title": "A Markovian Dependability Model with Cascading Failures", "paper_id": "WOS:000268162600007"}