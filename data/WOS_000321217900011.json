{"auto_keywords": [{"score": 0.04791490314295839, "phrase": "hard_latency_constraints"}, {"score": 0.00481495049065317, "phrase": "best_effort"}, {"score": 0.004440780432053927, "phrase": "quality_of_service"}, {"score": 0.004264697351852424, "phrase": "system_interconnect"}, {"score": 0.0038654774211631564, "phrase": "hardware_support"}, {"score": 0.0037989951856280423, "phrase": "noc_fabric"}, {"score": 0.0035855066449812273, "phrase": "novel_noc_synthesis_framework"}, {"score": 0.003306559295382181, "phrase": "traffic_streams"}, {"score": 0.0032496585171039797, "phrase": "specialized_hardware"}, {"score": 0.0031937337757356526, "phrase": "network_components"}, {"score": 0.0030141556259370675, "phrase": "noc_topology"}, {"score": 0.002945175711537758, "phrase": "appropriate_routes"}, {"score": 0.002877769867854964, "phrase": "lean_best-effort_network_components"}, {"score": 0.00265373679629359, "phrase": "topology_synthesis_method"}, {"score": 0.0025780134737796085, "phrase": "real-time_constraints"}, {"score": 0.0024899850926034567, "phrase": "proposed_method"}, {"score": 0.002391067964886602, "phrase": "significantly_tighter_worst_case"}, {"score": 0.0022048406330100697, "phrase": "tightest_worst_case"}, {"score": 0.0021049977753042253, "phrase": "power_consumption"}], "paper_keywords": ["Design", " Algorithms", " NoC", " topology", " worst case latency", " topology synthesis"], "paper_abstract": "Many classes of applications require Quality of Service (QoS) guarantees from the system interconnect. In Networks-on-Chip (NoC) QoS guarantees usually translate into bandwidth and latency constraints for the traffic flows and require hardware support in the NoC fabric and its interfaces. In this article we present a novel NoC synthesis framework to automatically build networks that meet hard latency constraints of end-to-end traffic streams without requiring specialized hardware for the network components. The hard latency constraints are met by carefully designing the NoC topology and selecting the appropriate routes for flow using lean best-effort network components. We perform experiments on several System on Chip (SoC) benchmarks. We compared against a topology synthesis method with no support for real-time constraints and we show that the proposed method can produce topologies that can meet significantly tighter worst case latency constraints (on average 44%). We also show that the tightest worst case latency can be provided with little overhead on power consumption (on average 8.5%).", "paper_title": "Designing Best Effort Networks-on-Chip to Meet Hard Latency Constraints", "paper_id": "WOS:000321217900011"}