{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "java"}, {"score": 0.004655397432994768, "phrase": "whiteoak"}, {"score": 0.00437302709192313, "phrase": "structural_type_equivalence"}, {"score": 0.003939748053452577, "phrase": "common_software_design_problems"}, {"score": 0.0037244390953401533, "phrase": "loosely_coupled_modules"}, {"score": 0.0036357909244344486, "phrase": "type_safety"}, {"score": 0.0035208552733545463, "phrase": "language_design_issues"}, {"score": 0.0033283624928018146, "phrase": "self-referencing_structural_types"}, {"score": 0.0032753168662834516, "phrase": "compile-time_operators"}, {"score": 0.003171740347925348, "phrase": "new_types"}, {"score": 0.003121183062764093, "phrase": "existing_ones"}, {"score": 0.0029268619875960715, "phrase": "non-abstract_methods"}, {"score": 0.0027667539384678814, "phrase": "implementation_techniques"}, {"score": 0.0026792166577171476, "phrase": "compile-time_and_run-time_challenges"}, {"score": 0.0022268964676199292, "phrase": "structural_dispatching"}, {"score": 0.0021049977753042253, "phrase": "jvm's_standard_invocation_mechanisms"}], "paper_keywords": ["Languages", " Performance", " Java", " Structural Subtyping", " Abstraction"], "paper_abstract": "This paper presents WHITEOAK: a JAVA extension that introduces structural type equivalence and subtyping into the language. We argue that structural subtyping addresses common software design problems, and promotes the development of loosely coupled modules without compromising type safety. We discuss language design issues, including subtyping in face of self-referencing structural types, compile-time operators for computing the new types from existing ones, and the semantics of constructors and non-abstract methods in structural types. We describe implementation techniques, including the compile-time and run-time challenges that we faced (in particular, preserving the identity of objects). Measurement indicate that the performance of our implementation of structural dispatching is comparable to that of the JVM's standard invocation mechanisms.", "paper_title": "Whiteoak: Introducing Structural Typing into Java", "paper_id": "WOS:000262035900005"}