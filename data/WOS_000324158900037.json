{"auto_keywords": [{"score": 0.048778468893892986, "phrase": "relational"}, {"score": 0.00481495049065317, "phrase": "multi-bulk-synchronous_processors"}, {"score": 0.00443308765153716, "phrase": "important_application_infrastructure"}, {"score": 0.004138010495069077, "phrase": "massive_volumes"}, {"score": 0.0037060428445111694, "phrase": "processor_architectures"}, {"score": 0.003459191419478298, "phrase": "multi-bulk-synchronous_processor"}, {"score": 0.0033651019362620866, "phrase": "multi-bsp"}, {"score": 0.0031845067058084583, "phrase": "throughput-optimized_memory_systems"}, {"score": 0.002931569771634119, "phrase": "single-instruction_multiple-data"}, {"score": 0.0027741761880779535, "phrase": "core_organizations"}, {"score": 0.0024842242921857705, "phrase": "primitive_relational_algebra_operations"}, {"score": 0.0021940118003312397, "phrase": "data_warehousing_applications"}, {"score": 0.0021049977753042253, "phrase": "relational_databases"}], "paper_keywords": ["Relational Algebra", " GPGPU"], "paper_abstract": "Relational databases remain an important application infrastructure for organizing and analyzing massive volumes of data. At the same time, processor architectures are increasingly gravitating towards Multi-Bulk-Synchronous processor (Multi-BSP) architectures employing throughput-optimized memory systems, lightweight multithreading, and Single-Instruction Multiple-Data (SIMD) core organizations. This paper explores the mapping of primitive relational algebra operations onto such architectures to improve the throughput of data warehousing applications built on relational databases.", "paper_title": "Relational Algorithms for Multi-Bulk-Synchronous Processors", "paper_id": "WOS:000324158900037"}