{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "temporal_violations"}, {"score": 0.015565713277217837, "phrase": "scientific_workflows"}, {"score": 0.01135084965762365, "phrase": "temporal_consistency_states"}, {"score": 0.004558414405811025, "phrase": "dynamic_nature"}, {"score": 0.004490842671590769, "phrase": "underlying_high-performance_infrastructures"}, {"score": 0.004209369306023422, "phrase": "timely_completion"}, {"score": 0.004167653403322565, "phrase": "important_scientific_activities"}, {"score": 0.003945467978172845, "phrase": "conventional_exception"}, {"score": 0.0038869467872381957, "phrase": "functional_failures"}, {"score": 0.003848413823574867, "phrase": "nonfunctional_qos_failures"}, {"score": 0.0035358770665604657, "phrase": "dynamically_monitoring"}, {"score": 0.0033306180744375616, "phrase": "current_research"}, {"score": 0.0032975819773787985, "phrase": "workflow_temporal_verification"}, {"score": 0.0032324864013225166, "phrase": "runtime_monitoring"}, {"score": 0.0031686717525002935, "phrase": "adjusting_strategy"}, {"score": 0.002797329638474873, "phrase": "temporal_adjustment"}, {"score": 0.0024327171018928458, "phrase": "innovative_genetic-algorithm-based_effective_and_efficient_local_rescheduling_strategy"}, {"score": 0.0022799458141165587, "phrase": "large-scale_simulation_experiments"}, {"score": 0.002223770196464436, "phrase": "specific_real-world_applications"}, {"score": 0.0021049977753042253, "phrase": "local_and_global_temporal_constraints"}], "paper_keywords": ["Workflow management", " exception handling", " reliability", " software verification", " statistical methods"], "paper_abstract": "Due to the dynamic nature of the underlying high-performance infrastructures for scientific workflows such as grid and cloud computing, failures of timely completion of important scientific activities, namely, temporal violations, often take place. Unlike conventional exception handling on functional failures, nonfunctional QoS failures such as temporal violations cannot be passively recovered. They need to be proactively prevented through dynamically monitoring and adjusting the temporal consistency states of scientific workflows at runtime. However, current research on workflow temporal verification mainly focuses on runtime monitoring, while the adjusting strategy for temporal consistency states, namely, temporal adjustment, has so far not been thoroughly investigated. For this issue, two fundamental problems of temporal adjustment, namely, where and how, are systematically analyzed and addressed in this paper. Specifically, a novel minimum probability time redundancy-based necessary and sufficient adjustment point selection strategy is proposed to address the problem of where and an innovative genetic-algorithm-based effective and efficient local rescheduling strategy is proposed to tackle the problem of how. The results of large-scale simulation experiments with generic workflows and specific real-world applications demonstrate that our temporal adjustment strategy can remarkably prevent the violations of both local and global temporal constraints in scientific workflows.", "paper_title": "Preventing Temporal Violations in Scientific Workflows: Where and How", "paper_id": "WOS:000297513700004"}