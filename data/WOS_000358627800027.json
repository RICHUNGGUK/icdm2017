{"auto_keywords": [{"score": 0.04765077338073387, "phrase": "dimensional_analysis"}, {"score": 0.00481495049065317, "phrase": "evolving_fortran"}, {"score": 0.004732215871738028, "phrase": "inferred_units"}, {"score": 0.004492406361795448, "phrase": "well_known_technique"}, {"score": 0.004289419884432487, "phrase": "physical_quantities"}, {"score": 0.004143196873246147, "phrase": "type_system"}, {"score": 0.003463196032143783, "phrase": "units-of-measure_system"}, {"score": 0.0034234551924999766, "phrase": "fortran"}, {"score": 0.003138768436081888, "phrase": "existing_code_base"}, {"score": 0.0027159094186967247, "phrase": "critical_variables"}, {"score": 0.002548331088496964, "phrase": "maximum_amount"}, {"score": 0.002518989593177879, "phrase": "unit_information"}, {"score": 0.0024756080101497086, "phrase": "minimal_number"}, {"score": 0.002447101794397243, "phrase": "explicit_declarations"}, {"score": 0.0024049552650867935, "phrase": "aids_adoption"}, {"score": 0.002349884235026956, "phrase": "existing_code_bases"}, {"score": 0.0022434880661725493, "phrase": "computational_science_projects"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Units-of-measure", " Dimension typing", " Type systems", " Verification", " Code base evolution", " Fortran", " Language design"], "paper_abstract": "Dimensional analysis is a well known technique for checking the consistency of equations involving physical quantities, constituting a kind of type system. Various type systems for dimensional analysis, and its refinement to units-of-measure, have been proposed. In this paper, we detail the design and implementation of a units-of-measure system for Fortran, provided as a pre-processor. Our system is designed to aid adding units to existing code base: units may be polymorphic and can be inferred. Furthermore, we introduce a technique for reporting to the user a set of critical variables which should be explicitly annotated with units to get the maximum amount of unit information with the minimal number of explicit declarations. This aids adoption of our type system to existing code bases, of which there are many in computational science projects. (C) 2015 The Authors. Published by Elsevier B.V.", "paper_title": "Evolving Fortran types with inferred units-of-measure", "paper_id": "WOS:000358627800027"}