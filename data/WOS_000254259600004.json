{"auto_keywords": [{"score": 0.004462663711734448, "phrase": "keystream_generator"}, {"score": 0.004316722156877335, "phrase": "systematic_and_simple_method"}, {"score": 0.004195418010131832, "phrase": "fsm_output_sequences"}, {"score": 0.004038943596016986, "phrase": "upper_bound"}, {"score": 0.003307988966112615, "phrase": "data_complexity"}, {"score": 0.0031845067058084583, "phrase": "performance_comparison"}, {"score": 0.003094920033010818, "phrase": "multi-bias-based_distinguisher"}, {"score": 0.003051073364818384, "phrase": "uni-bias-based_distinguisher"}, {"score": 0.0029511579080222137, "phrase": "largest_biases"}, {"score": 0.002868116925014397, "phrase": "keystream_distinguisher"}, {"score": 0.0027610089418453614, "phrase": "key-recovery_attack"}, {"score": 0.002657890175649468, "phrase": "well-known_maximum_likelihood"}, {"score": 0.002486589906779091, "phrase": "fast_walsh_transform"}, {"score": 0.0024051153560799335, "phrase": "mld_problem"}, {"score": 0.002371018116266096, "phrase": "linear_code"}, {"score": 0.0023485549678832628, "phrase": "dimension_l"}, {"score": 0.002186712881521657, "phrase": "design_criterion"}, {"score": 0.0021049977753042253, "phrase": "proposed_attacks"}], "paper_keywords": ["stream cipher", " combiner", " Bluetooth", " E0", " correlation"], "paper_abstract": "In this paper, we study an E0-like combiner with memory as the keystream generator. First, we formulate a systematic and simple method to compute correlations of the FSM output sequences (up to certain bits). An upper bound of the correlations is given, which is useful to the designer. Second, we show how to build either a uni-bias-based or multi-bias-based distinguisher to distinguish the keystream produced by the combiner from a truly random sequence, once correlations are found. The data complexity of both distinguishers is carefully analyzed for performance comparison. We show that the multi-bias-based distinguisher outperforms the uni-bias-based distinguisher only when the patterns of the largest biases are linearly dependent. The keystream distinguisher is then upgraded for use in the key-recovery attack. The latter actually reduces to the well-known Maximum Likelihood Decoding (MLD) problem given the keystream long enough. We devise an algorithm based on Fast Walsh Transform (FWT) to solve the MLD problem for any linear code with dimension L and length n within time O(n+L.2(L)). Meanwhile, we summarize a design criterion for our E0-like combiner with memory to resist the proposed attacks.", "paper_title": "Cryptanalysis of an E0-like combiner with memory", "paper_id": "WOS:000254259600004"}