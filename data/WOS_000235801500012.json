{"auto_keywords": [{"score": 0.0493653882313026, "phrase": "prolog"}, {"score": 0.00481495049065317, "phrase": "description_logic_queries"}, {"score": 0.004466519142879166, "phrase": "novel_approach"}, {"score": 0.004269630481719451, "phrase": "description_logic_concepts"}, {"score": 0.004205940624913343, "phrase": "huge_amounts"}, {"score": 0.004143196873246147, "phrase": "underlying_data"}, {"score": 0.0039308449157320815, "phrase": "traditional_description_logic_theorem"}, {"score": 0.003673675864705682, "phrase": "performance_problems"}, {"score": 0.003485304124598714, "phrase": "concept_description"}, {"score": 0.003407549468745519, "phrase": "prolog_program"}, {"score": 0.003043957650600757, "phrase": "particular_data"}, {"score": 0.0028661330049356186, "phrase": "normal_prolog_execution"}, {"score": 0.0028021527740710508, "phrase": "generated_program"}, {"score": 0.0023566987138026285, "phrase": "original_problem"}, {"score": 0.0023040642263522505, "phrase": "database_friendly_way"}], "paper_keywords": ["description logics", " reasoning", " instance retrieval", " query-plan", " Prolog"], "paper_abstract": "In this paper we present a novel approach for determining the instances of description logic concepts when huge amounts of underlying data are expected. In such cases, traditional description logic theorem proving techniques cannot be used due to performance problems. Our idea is to transform a concept description into a Prolog program which represents a query-plan. This transformation is done without any knowledge of the particular data. Data are accessed dynamically during the normal Prolog execution of the generated program. With this technique only those pieces of data are accessed which are indeed important for answering the query, i.e. we solve the original problem in a database friendly way. We evaluate the performance of our approach and compare it to several description logic reasoners.", "paper_title": "Translating description logic queries to Prolog", "paper_id": "WOS:000235801500012"}