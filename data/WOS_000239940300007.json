{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "typed_object_calculus"}, {"score": 0.004428452434981208, "phrase": "term_rewriting_systems"}, {"score": 0.004115697805448384, "phrase": "model_implementations"}, {"score": 0.003629882559085245, "phrase": "cyclic_data_structures"}, {"score": 0.003554661425339528, "phrase": "addressed_term_rewriting_systems"}, {"score": 0.003303412571939192, "phrase": "object-based_languages"}, {"score": 0.002387214876538434, "phrase": "atrs_formalism"}, {"score": 0.0022653055209664284, "phrase": "type_system"}, {"score": 0.0021049977753042253, "phrase": "type_soundness_result"}], "paper_keywords": [""], "paper_abstract": "We present a formalism called addressed term rewriting systems, which can be used to model implementations of theorem proving, symbolic computation and programming languages, especially aspects of sharing, recursive computations and cyclic data structures. Addressed Term Rewriting Systems are therefore well suited to describing object-based languages, and as an example we present a language called lambda CbJ(alpha), incorporating both functional and object-based features. As a case study in how reasoning about languages is supported in the ATRS formalism, we define a type system for lambda CbJ(alpha) and prove a type soundness result.", "paper_title": "Addressed term rewriting systems: application to a typed object calculus", "paper_id": "WOS:000239940300007"}