{"auto_keywords": [{"score": 0.042630188250273066, "phrase": "solid_codes"}, {"score": 0.011503085499124993, "phrase": "regular_solid_codes"}, {"score": 0.00481495049065317, "phrase": "overlap-free_languages_and_solid_codes._solid_codes"}, {"score": 0.004395984840790689, "phrase": "data_transmission"}, {"score": 0.003689628075766217, "phrase": "formal_language_viewpoint"}, {"score": 0.003206916619690171, "phrase": "solid_code_decidability_problem"}, {"score": 0.0030532878377173885, "phrase": "polynomial_time_algorithm"}, {"score": 0.0028265625216338875, "phrase": "overlap-freeness_property"}, {"score": 0.0026722904884984348, "phrase": "regular_languages"}, {"score": 0.0025801648787263662, "phrase": "context-free_languages"}, {"score": 0.002456486927713543, "phrase": "prime_solid_code_decomposition"}, {"score": 0.0023551955270737215, "phrase": "efficient_algorithm"}, {"score": 0.002306123367679187, "phrase": "prime_solid_code_decomposition_problem"}, {"score": 0.002195552442011313, "phrase": "solid_code"}, {"score": 0.0021049977753042253, "phrase": "unique_prime_solid_code_decomposition"}], "paper_keywords": ["Solid codes", " overlap-freeness", " primality", " regular languages"], "paper_abstract": "Solid codes have a nice property called synchronization property, which is useful in data transmission. The property is derived from infix-freeness and overlap-freeness of solid codes. Since a code is a language, we look at solid codes from formal language viewpoint. In particular, we study regular solid codes (that are solid codes and regular). We first tackle the solid code decidability problem for regular languages and propose a polynomial time algorithm. We, then, investigate the decidability of the overlap-freeness property and show that it is decidable for regular languages but is undecidable for context-free languages. Then, we study the prime solid code decomposition of regular solid codes and propose an efficient algorithm for the prime solid code decomposition problem. We also demonstrate that a solid code does not always have a unique prime solid code decomposition.", "paper_title": "OVERLAP-FREE LANGUAGES AND SOLID CODES", "paper_id": "WOS:000293753200012"}