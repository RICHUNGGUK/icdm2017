{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "general_cost_functions."}, {"score": 0.004650330504968421, "phrase": "general_online_scheduling_problem"}, {"score": 0.0038401488612789963, "phrase": "f-j"}, {"score": 0.0037411604449359794, "phrase": "flow_time"}, {"score": 0.0033699898113395328, "phrase": "arbitrary_nondecreasing_cost_function"}, {"score": 0.003311799410921826, "phrase": "numerous_natural_scheduling_objectives"}, {"score": 0.0031431690368229443, "phrase": "general_framework"}, {"score": 0.0029830992938695007, "phrase": "scheduling_algorithm"}, {"score": 0.002957222630196853, "phrase": "highest_density"}, {"score": 0.0027104531025934865, "phrase": "cost_functions"}, {"score": 0.0025723630851105304, "phrase": "lower_bounds"}, {"score": 0.002462664392109308, "phrase": "hdf_algorithm"}, {"score": 0.0021987994275190314, "phrase": "scalable_algorithms"}, {"score": 0.0021049977753042253, "phrase": "special_cases"}], "paper_keywords": ["online scheduling", " simultaneous optimization", " general cost functions", " speed augmentation"], "paper_abstract": "We consider a general online scheduling problem where the goal is to minimize Sigma(j) w(j)g(F-j), where w(j) is the weight/importance of job J(j), F-j is the flow time of the job in the schedule, and g is an arbitrary nondecreasing cost function. Numerous natural scheduling objectives are special cases of this general framework. We show that the scheduling algorithm Highest Density First (HDF) is (2 + epsilon)-speed O(1)-competitive for all cost functions g simultaneously. We give lower bounds that show that the HDF algorithm and this analysis are essentially optimal. Finally, we show that scalable algorithms are achievable in some special cases.", "paper_title": "ONLINE SCHEDULING WITH GENERAL COST FUNCTIONS", "paper_id": "WOS:000333538300006"}