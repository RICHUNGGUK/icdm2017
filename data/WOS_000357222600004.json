{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "time-varying_graphs"}, {"score": 0.004781357546476652, "phrase": "highly_dynamic_systems"}, {"score": 0.004736929514776812, "phrase": "wireless_mobile_ad_hoc_networks"}, {"score": 0.004681971826924847, "phrase": "vehicular_networks"}, {"score": 0.0042446888127531945, "phrase": "intermediate_nodes"}, {"score": 0.0037768417338850274, "phrase": "indirect_and_direct_journeys"}, {"score": 0.0036297752039064685, "phrase": "feasible_journeys"}, {"score": 0.003472149546470424, "phrase": "indirect_journeys"}, {"score": 0.0033919477901198716, "phrase": "direct_journeys"}, {"score": 0.0031919592786945126, "phrase": "general_result"}, {"score": 0.0030248681019630166, "phrase": "computable_languages"}, {"score": 0.0027483472371835865, "phrase": "algebraic_properties"}, {"score": 0.002538263784314365, "phrase": "accepting_automaton"}, {"score": 0.00246800641971897, "phrase": "turing_machine"}, {"score": 0.0024279223109308244, "phrase": "finite-state_machine"}, {"score": 0.002410942838102255, "phrase": "large_gap"}, {"score": 0.0023278060023572103, "phrase": "bounded_waiting"}, {"score": 0.0021447748132703078, "phrase": "waiting_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Time-varying graphs", " Dynamic networks", " Buffering", " Expressivity of TVGs", " Automata", " Language"], "paper_abstract": "In highly dynamic systems (such as wireless mobile ad hoc networks, robotic swarms, vehicular networks, etc.) connectivity does not necessarily hold at a given time but temporal paths, or journeys, may still exist over time and space, rendering computing possible; some of these systems allow waiting (i.e., pauses at intermediate nodes, also referred to as store-carry-forward strategies) while others do not. These systems are naturally modeled as time-varying graphs, where the presence of an edge and its latency vary as a function of time; in these graphs, the distinction between waiting and not waiting corresponds to the one between indirect and direct journeys. We consider the expressivity of time-varying graphs, in terms of the languages generated by the feasible journeys. We examine the impact of waiting by studying the difference in the type of language expressed by indirect journeys (i.e., waiting is allowed) and by direct journeys (i.e., waiting is unfeasible), under various assumptions on the functions that control the presence and latency of edges. We prove a general result which implies that, if waiting is not allowed, then the set of languages L-nowait that can be generated contains all computable languages when the presence and latency functions are computable. On the other end, we prove that, if waiting is allowed, then the set of languages L-wait contains all and only regular languages; this result, established using algebraic properties of quasi-orders, holds even if the presence and latency are unrestricted (e.g., possibly non-computable) functions of time. In other words, we prove that, when waiting is allowed, the power of the accepting automaton can drop drastically from being at least as powerful as a Turing machine, to becoming that of a Finite-State Machine. This large gap provides an insight on the impact of waiting in time-varying graphs. We also study bounded waiting, in which waiting is allowed at a node for at most d time units, and prove that L-wait[d] = L-nowait; that is, the power of the accepting automaton decreases only if waiting time is unbounded. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "On the expressivity of time-varying graphs", "paper_id": "WOS:000357222600004"}