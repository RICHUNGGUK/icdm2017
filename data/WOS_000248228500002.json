{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "openmp_memory_model"}, {"score": 0.04876888835803513, "phrase": "openmp_application_program_interface"}, {"score": 0.004583205112737672, "phrase": "important_api"}, {"score": 0.004555028829645471, "phrase": "shared_memory_programming"}, {"score": 0.004513087388483271, "phrase": "shared_memory's_potential"}, {"score": 0.004444037594955185, "phrase": "simple_programming_interface"}, {"score": 0.0043895835488175425, "phrase": "openmp"}, {"score": 0.004349131361255114, "phrase": "critical_tool"}, {"score": 0.003989266720020083, "phrase": "openmp_architecture_review_board"}, {"score": 0.0038442670949832523, "phrase": "informal_prose"}, {"score": 0.0037159680715717056, "phrase": "openmp_applications"}, {"score": 0.003614175930699828, "phrase": "formal_consistency_model"}, {"score": 0.003515162360861593, "phrase": "different_threads"}, {"score": 0.003397809453525626, "phrase": "formal_verification"}, {"score": 0.0033768959341690524, "phrase": "openmp_programs"}, {"score": 0.0033457659530207306, "phrase": "formal_memory_model"}, {"score": 0.0033251716926666437, "phrase": "greg_bronevetsky"}, {"score": 0.0033047037762521984, "phrase": "bronis_de_supinski"}, {"score": 0.003244050414264445, "phrase": "memory_model"}, {"score": 0.0032141411226372704, "phrase": "international_workshop"}, {"score": 0.002984554267578035, "phrase": "existing_prose_model"}, {"score": 0.002849442549612025, "phrase": "two-step_process"}, {"score": 0.002805774617782258, "phrase": "observed_openmp_execution"}, {"score": 0.0027036751290702406, "phrase": "entire_specification"}, {"score": 0.0025732834751685803, "phrase": "current_prose-based_memory_model_description"}, {"score": 0.002494993595618653, "phrase": "current_informal_memory_model"}, {"score": 0.0023819914954155905, "phrase": "informal_model's_intent"}, {"score": 0.0021913010538173825, "phrase": "openmp_community"}, {"score": 0.0021246078976621093, "phrase": "formal_model"}, {"score": 0.0021049977753042253, "phrase": "later_openmp_specifications"}], "paper_keywords": ["OpenMP", " parallel programming", " formal systems", " theorem proving"], "paper_abstract": "OpenMP [OpenMP Architecture Review Board. OpenMP application program interface, version 2.5] is an important API for shared memory programming, combining shared memory's potential for performance with a simple programming interface. Unfortunately, OpenMP lacks a critical tool for demonstrating whether programs are correct: a formal memory model. Instead, the current official definition of the OpenMP memory model (the OpenMP 2.5 specification [OpenMP Architecture Review Board. OpenMP application program interface, version 2.5]) is in terms of informal prose. As a result, it is impossible to verify OpenMP applications formally since the prose does not provide a formal consistency model that precisely describes how reads and writes on different threads interact. We expand on our previous work that focused on the formal verification of OpenMP programs through a formal memory model [Greg Bronevetsky and Bronis de Supinski. Formal specification of the memory model. In International Workshop on OpenMP (IWOMP), (2006)]. As in that work, our formalization, which is derived from the existing prose model [OpenMP Architecture Review Board. OpenMP application program interface, version 2.5], provides a two-step process to verify whether an observed OpenMP execution is conformant. This paper extends the model to cover the entire specification. In addition to this formalization, our contributions include a discussion of ambiguities in the current prose-based memory model description. Although our formal model may not capture the current informal memory model perfectly, in part due to these ambiguities, our model reflects our understanding of the informal model's intent. We conclude with several examples that may indicate areas of the OpenMP memory model that need further refinement, however it is specified. Our goal is to motivate the OpenMP community to adopt those refinements eventually, ideally through a formal model, in later OpenMP specifications.", "paper_title": "Complete formal specification of the OpenMP memory model", "paper_id": "WOS:000248228500002"}