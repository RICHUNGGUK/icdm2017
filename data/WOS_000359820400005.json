{"auto_keywords": [{"score": 0.03440280541527891, "phrase": "stm"}, {"score": 0.00481495049065317, "phrase": "optimal_level"}, {"score": 0.004689321062844586, "phrase": "transactional_memory_applications"}, {"score": 0.004303127794432684, "phrase": "\"natural\"_degree"}, {"score": 0.0041084684278314305, "phrase": "software_transactional_memory"}, {"score": 0.0037203741725514126, "phrase": "application's_performance"}, {"score": 0.0035052810710060893, "phrase": "concurrency_level"}, {"score": 0.0029903851294825023, "phrase": "considered_scenarios"}, {"score": 0.002931569771634119, "phrase": "shared-memory_stm"}, {"score": 0.0027619548979328154, "phrase": "on-line_exploration"}, {"score": 0.002636828502928141, "phrase": "distributed_stms"}, {"score": 0.0025509294021449254, "phrase": "novel_hybrid_approach"}, {"score": 0.00250073564820402, "phrase": "model-driven_performance_forecasting_techniques"}, {"score": 0.0021903801614787423, "phrase": "model's_inaccuracies"}, {"score": 0.0021330830123432614, "phrase": "convergence_speed"}, {"score": 0.0021049977753042253, "phrase": "optimum_solutions"}], "paper_keywords": ["Transactional memory", " Self-tuning", " Multi-programming level", " Analytical modelling", " Machine learning", " Gradient descent"], "paper_abstract": "In this paper we investigate the issue of automatically identifying the \"natural\" degree of parallelism of an application using software transactional memory (STM), i.e., the workload-specific multiprogramming level that maximizes application's performance. We discuss the importance of adapting the concurrency level in two different scenarios, a shared-memory and a distributed STM infrastructure. We propose and evaluate two alternative self-tuning methodologies, explicitly tailored for the considered scenarios. In shared-memory STM, we show that lightweight, black-box approaches relying solely on on-line exploration can be extremely effective. For distributed STMs , we introduce a novel hybrid approach that combines model-driven performance forecasting techniques and on-line exploration in order to take the best of the two techniques, namely enhancing robustness despite model's inaccuracies, and maximizing convergence speed towards optimum solutions.", "paper_title": "Identifying the optimal level of parallelism in transactional memory applications", "paper_id": "WOS:000359820400005"}