{"auto_keywords": [{"score": 0.0493653882313026, "phrase": "openmp_programs"}, {"score": 0.010223425915680075, "phrase": "openuh_compiler"}, {"score": 0.008869887524063905, "phrase": "openuh"}, {"score": 0.00481495049065317, "phrase": "global_optimizations"}, {"score": 0.004466519142879166, "phrase": "new_parallel_architectures"}, {"score": 0.004269630481719451, "phrase": "parallel_optimizing_compilers"}, {"score": 0.004081385289516914, "phrase": "efficient_code"}, {"score": 0.0039308449157320815, "phrase": "state-of-the-art_optimizing_compiler"}, {"score": 0.003729335910488339, "phrase": "limited_set"}, {"score": 0.003485304124598714, "phrase": "shared_memory_programming"}, {"score": 0.003306559295382181, "phrase": "openmp_applications"}, {"score": 0.0028661330049356186, "phrase": "parallel_data_flow_framework"}, {"score": 0.0027602925235474317, "phrase": "parallel_control_flow_graph"}, {"score": 0.0027190564412279553, "phrase": "pcfg"}, {"score": 0.002447101794397243, "phrase": "model_data_flow"}, {"score": 0.00223570488212345, "phrase": "classical_scalar_optimizations"}, {"score": 0.0021049977753042253, "phrase": "openmp_specific_optimizations"}], "paper_keywords": ["Language", " Performance", " Theory", " Compiler Analysis", " OpenMP", " Parallel SSA"], "paper_abstract": "The advent of new parallel architectures has increased the need for parallel optimizing compilers to assist developers in creating efficient code. OpenUH is a state-of-the-art optimizing compiler, but it only performs a limited set of optimizations for OpenMP programs due to its conservative assumptions of shared memory programming. These limitations may prevent some OpenMP applications from being fully optimized to the extent of its sequential counterpart. This paper describes our design and implementation of a parallel data flow framework, consisting of a Parallel Control Flow Graph (PCFG) and a Parallel SSA (PSSA) representation in OpenUH, to model data flow for OpenMP programs. This framework enables the OpenUH compiler to perform all classical scalar optimizations for OpenMP programs, in addition to conducting OpenMP specific optimizations.", "paper_title": "Exploiting Global Optimizations for OpenMP Programs in the OpenUH Compiler", "paper_id": "WOS:000272014600034"}