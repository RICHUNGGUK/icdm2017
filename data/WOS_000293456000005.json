{"auto_keywords": [{"score": 0.03217160122346607, "phrase": "flowtalk"}, {"score": 0.00481495049065317, "phrase": "long-latency_operations"}, {"score": 0.0046937237797352515, "phrase": "wireless_sensor_networks"}, {"score": 0.004622450915803531, "phrase": "programming_model"}, {"score": 0.004460309246062286, "phrase": "desktop_applications"}, {"score": 0.003788296551609616, "phrase": "efficient_mechanisms"}, {"score": 0.003711723285313348, "phrase": "implicit_asynchronous_nature"}, {"score": 0.0036740168936985314, "phrase": "sensor_sampling"}, {"score": 0.003636692152882991, "phrase": "c_applications"}, {"score": 0.003120099687922751, "phrase": "software_development"}, {"score": 0.003088384809415812, "phrase": "wireless_embedded_sensor_devices"}, {"score": 0.0029951555610569225, "phrase": "object-oriented_programming_language"}, {"score": 0.0027459678326877744, "phrase": "memory_consumption"}, {"score": 0.0027041907335656782, "phrase": "event_model"}, {"score": 0.0025433263646920364, "phrase": "controlled_disruption"}, {"score": 0.0025046245057922557, "phrase": "light-weight_continuation_mechanism"}, {"score": 0.002392008392892289, "phrase": "asynchronous_long-latency_operations"}, {"score": 0.002367676766637248, "phrase": "synchronous_and_blocking_method_calls"}, {"score": 0.002126635713519053, "phrase": "large_number"}, {"score": 0.0021049977753042253, "phrase": "wireless_sensor_devices"}], "paper_keywords": ["Embedded systems", " object-based programming"], "paper_abstract": "Wireless sensor networks necessitate a programming model different from those used to develop desktop applications. Typically, resources in terms of power and memory are constrained. C is the most common programming language used to develop applications on very small embedded sensor devices. We claim that C does not provide efficient mechanisms to address the implicit asynchronous nature of sensor sampling. C applications for these devices suffer from a disruption in their control flow. In this paper, we present FlowTalk, a new object-oriented programming language aimed at making software development for wireless embedded sensor devices easier. FlowTalk is an object-oriented programming language in which dynamicity (e.g., object creation) has been traded for a reduction in memory consumption. The event model that traditionally comes from using sensors is adapted in FlowTalk with controlled disruption, a light-weight continuation mechanism. The essence of our model is to turn asynchronous long-latency operations into synchronous and blocking method calls. FlowTalk is built for TinyOS and can be used to develop applications that can fit in 4 KB of memory for a large number of wireless sensor devices.", "paper_title": "FlowTalk: Language Support for Long-Latency Operations in Embedded Devices", "paper_id": "WOS:000293456000005"}