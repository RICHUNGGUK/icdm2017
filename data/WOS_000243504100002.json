{"auto_keywords": [{"score": 0.042173734042574865, "phrase": "laplacian_matrix"}, {"score": 0.033526711272271845, "phrase": "pca"}, {"score": 0.00481495049065317, "phrase": "collaborative_recommendation"}, {"score": 0.004716520738331953, "phrase": "new_perspective"}, {"score": 0.004479120557712926, "phrase": "weighted_and_undirected_graph"}, {"score": 0.004372442291178139, "phrase": "markov-chain_model"}, {"score": 0.0037704502704526996, "phrase": "nice_property"}, {"score": 0.0036427316134070007, "phrase": "elements_increases"}, {"score": 0.003531474887552889, "phrase": "square_root"}, {"score": 0.0034951469511975346, "phrase": "average_commute_time"}, {"score": 0.003459191419478298, "phrase": "euclidean_distance"}, {"score": 0.0033419808453225516, "phrase": "kernel_matrix"}, {"score": 0.003296212583539166, "phrase": "inner_products"}, {"score": 0.00319550533852219, "phrase": "principal_component_analysis"}, {"score": 0.0030659842174709656, "phrase": "subspace_projection"}, {"score": 0.0030344301563232944, "phrase": "node_vectors"}, {"score": 0.0029013950320185573, "phrase": "euclidean_commute-time_distance"}, {"score": 0.0028321862184182913, "phrase": "nice_interpretation"}, {"score": 0.002803031561019101, "phrase": "\"fiedler_vector"}, {"score": 0.0027456170444204895, "phrase": "graph_partitioning"}, {"score": 0.002670884656785558, "phrase": "collaborative-recommendation_task"}, {"score": 0.0025014259919355453, "phrase": "experimental_results"}, {"score": 0.0024756677425317474, "phrase": "movielens_database_show"}, {"score": 0.0024501740852758505, "phrase": "laplacian-based_similarities"}, {"score": 0.002318566141177149, "phrase": "so-called_\"_statistical_relational_learning\"_framework"}, {"score": 0.002126907587540404, "phrase": "pattern-recognition_tasks"}, {"score": 0.0021049977753042253, "phrase": "relational_database"}], "paper_keywords": ["graph analysis", " graph and database mining", " collaborative recommendation", " graph kernels", " spectral clustering", " Fiedler vector", " proximity measures", " statistical relational learning"], "paper_abstract": "This work presents a new perspective on characterizing the similarity between elements of a database or, more generally, nodes of a weighted and undirected graph. It is based on a Markov-chain model of random walk through the database. More precisely, we compute quantities (the average commute time, the pseudoinverse of the Laplacian matrix of the graph, etc.) that provide similarities between any pair of nodes, having the nice property of increasing when the number of paths connecting those elements increases and when the \"length\" of paths decreases. It turns out that the square root of the average commute time is a Euclidean distance and that the pseudoinverse of the Laplacian matrix is a kernel matrix (its elements are inner products closely related to commute times). A principal component analysis (PCA) of the graph is introduced for computing the subspace projection of the node vectors in a manner that preserves as much variance as possible in terms of the Euclidean commute-time distance. This graph PCA provides a nice interpretation to the \"Fiedler vector,\" widely used for graph partitioning. The model is evaluated on a collaborative-recommendation task where suggestions are made about which movies people should watch based upon what they watched in the past. Experimental results on the MovieLens database show that the Laplacian-based similarities perform well in comparison with other methods. The model, which nicely fits into the so-called \" statistical relational learning\" framework, could also be used to compute document or word similarities, and, more generally, it could be applied to machine-learning and pattern-recognition tasks involving a relational database.", "paper_title": "Random-walk computation of similarities between nodes of a graph with application to collaborative recommendation", "paper_id": "WOS:000243504100002"}