{"auto_keywords": [{"score": 0.02522607067724401, "phrase": "behaviour_preservation"}, {"score": 0.004506968388996092, "phrase": "different_aspects"}, {"score": 0.004178935413340453, "phrase": "platform-specific_models"}, {"score": 0.0036610702290043387, "phrase": "target_models"}, {"score": 0.003525220627709056, "phrase": "target_model"}, {"score": 0.0029594318330247614, "phrase": "model_transformations"}, {"score": 0.0029454679553901613, "phrase": "migrating_aspects"}, {"score": 0.002917736974519881, "phrase": "state-based_views"}, {"score": 0.0027567336518542858, "phrase": "protocol-based_views"}, {"score": 0.002555761854502478, "phrase": "specification_languages"}, {"score": 0.002437645786158106, "phrase": "formal_semantics"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Model-based design", " Model transformations", " Z", " CSP", " Multiple views", " Refinement"], "paper_abstract": "Models of software often describe systems by a number of (partially) orthogonal views: a state machine, a class diagram, a scenario might specify different aspects of the one system to be built. Such abstract, multi-view models are the starting point for transformations into platform-specific models and finally the code. However, during these transformations it is usually not possible to keep such a neat separation into different views: the specification language of the target models might not support all such views. The target model, however, still needs to preserve the behaviour of the abstract, multi-view model. Therefore, model transformations have to be capable of moving aspects of the behaviour across views. In this paper, we study model transformations migrating aspects from state-based views (i.e., class specifications with data and methods) to protocol-based views (i.e., process specifications on orderings of methods) and vice versa. The specification languages for these two views are equipped with a joint, formal semantics which enables a proof of behaviour preservation. We consequently derive conditions for our transformations to be behaviour-preserving, where behaviour preservation is characterised by refinement. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Model transformations across views", "paper_id": "WOS:000274977800005"}