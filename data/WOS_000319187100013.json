{"auto_keywords": [{"score": 0.05007830243554293, "phrase": "static_analysis"}, {"score": 0.043960221020330516, "phrase": "rtl"}, {"score": 0.00436890075128947, "phrase": "data_mining"}, {"score": 0.0040027552011993005, "phrase": "design's_dynamic_behavior"}, {"score": 0.0039447744176901054, "phrase": "generated_data"}, {"score": 0.003831310632470526, "phrase": "candidate_assertions"}, {"score": 0.0036493838225192883, "phrase": "data_mining_algorithm"}, {"score": 0.0035965032173588753, "phrase": "decision-tree-based_supervised_learning_algorithm"}, {"score": 0.00342568771304873, "phrase": "formal_verification_engine"}, {"score": 0.0033433365160336842, "phrase": "spurious_candidates"}, {"score": 0.0031690434364310435, "phrase": "formal_engine"}, {"score": 0.0031383410838018953, "phrase": "system_invariants"}, {"score": 0.002989220655735981, "phrase": "designer_ranking"}, {"score": 0.002875027551180213, "phrase": "data_mining_engine"}, {"score": 0.0027383842769094354, "phrase": "assertion_generation"}, {"score": 0.0025331002386232014, "phrase": "sequential_as_well_as_combinational_designs"}, {"score": 0.0024601402359002056, "phrase": "human_effort"}, {"score": 0.002400944221804575, "phrase": "goldmine_assertions"}, {"score": 0.002366110899738696, "phrase": "random_input_stimulus_space"}, {"score": 0.002297949552105756, "phrase": "calibrating_directed_tests"}, {"score": 0.0022101055924375725, "phrase": "regression_test_suite"}, {"score": 0.0021780349459687622, "phrase": "evolving_rtl."}, {"score": 0.0021049977753042253, "phrase": "differing_perspectives"}], "paper_keywords": ["Assertion generation", " data mining", " logic verification", " static analysis", " validation"], "paper_abstract": "We present GoldMine, a methodology for generating assertions automatically in hardware. Our method involves a combination of data mining and static analysis of the register transfer level (RTL) design. The RTL design is first simulated to generate data about the design's dynamic behavior. The generated data is then mined for \"candidate assertions\" that are likely to be invariants. The data mining algorithm is a decision-tree-based supervised learning algorithm. These candidate assertions are then passed through a formal verification engine to filter out the spurious candidates. The assertions that are attested as true by the formal engine are system invariants. These are then evaluated by a process of designer ranking that is provided as feedback to the data mining engine. We demonstrate the scalability of GoldMine by showing assertion generation of the RTL of Sun's OpenSparc T2 many-threaded processor. Our results show that GoldMine can generate complex, high coverage assertions for sequential as well as combinational designs in RTL, thereby minimizing human effort in this process. GoldMine assertions distill the random input stimulus space and can be used for calibrating directed tests. They can be used in a regression test suite of an evolving RTL. They are also useful in providing differing perspectives from the designer, as well as hints to designers for manually writing assertions.", "paper_title": "Mining Hardware Assertions With Guidance From Static Analysis", "paper_id": "WOS:000319187100013"}