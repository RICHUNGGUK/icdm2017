{"auto_keywords": [{"score": 0.04786470499024875, "phrase": "constant_number"}, {"score": 0.03768529849428759, "phrase": "local_port_numbers"}, {"score": 0.034977158447149485, "phrase": "efficient_deterministic_algorithm"}, {"score": 0.03099848340583146, "phrase": "lecture_notes"}, {"score": 0.0304242490196952, "phrase": "springer"}, {"score": 0.030319807637576836, "phrase": "berlin"}, {"score": 0.028609513958495023, "phrase": "port_numbers"}, {"score": 0.00481495049065317, "phrase": "constant_memory"}, {"score": 0.0047563159985702375, "phrase": "periodic_exploration"}, {"score": 0.004714869813251479, "phrase": "undirected_graphs"}, {"score": 0.004681971826924847, "phrase": "finite_state_automaton"}, {"score": 0.0044814738854601945, "phrase": "unknown_anonymous_graph"}, {"score": 0.004200319352919505, "phrase": "consecutive_integers"}, {"score": 0.004069963083642548, "phrase": "v._periodic_graph_exploration"}, {"score": 0.003964416290774626, "phrase": "periodic_manner"}, {"score": 0.0038548365797312443, "phrase": "exploration_period"}, {"score": 0.0037878868556482505, "phrase": "maximum_number"}, {"score": 0.0037746365626708423, "phrase": "edge_traversals"}, {"score": 0.003715579364728729, "phrase": "generic_node"}, {"score": 0.0035376693476114733, "phrase": "l._budach"}, {"score": 0.003218180455135933, "phrase": "traversal_route"}, {"score": 0.0029792474431139067, "phrase": "structural_information"}, {"score": 0.002801884724277248, "phrase": "oblivious_robots"}, {"score": 0.0027628463697413224, "phrase": "ilcinkas"}, {"score": 0.0027483472371835865, "phrase": "port_labelling_algorithm"}, {"score": 0.0026863894582719616, "phrase": "fast_graph_exploration"}, {"score": 0.002653606593103781, "phrase": "colloquium_on_structural_information"}, {"score": 0.0025984513598427345, "phrase": "comput"}, {"score": 0.002380120876826732, "phrase": "larger_memory"}, {"score": 0.0022383457200545634, "phrase": "traversal_period"}, {"score": 0.0021994087705010184, "phrase": "existing_upper_bound"}, {"score": 0.0021687463916644774, "phrase": "lower_bound"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["finite automaton", " period", " port number", " penalty", " full degree"], "paper_abstract": "We consider the problem of periodic exploration of all nodes in undirected graphs by using a finite state automaton called later a robot. The robot, using a constant number of states (memory bits), must be able to explore any unknown anonymous graph. The nodes in the graph are neither labelled nor coloured. However, while visiting a node v the robot can distinguish between edges incident to it. The edges are ordered and labelled by consecutive integers 1,..., d(nu) called port numbers, where d(nu) is the degree of v. Periodic graph exploration requires that the automaton has to visit every node infinitely many times in a periodic manner. In this paper, we are interested in minimisation of the length of the exploration period. In other words, we want to minimise the maximum number of edge traversals performed by the robot between two consecutive visits of a generic node, in the same state and entering the node by the same port. Note that the problem is unsolvable if the local port numbers are set arbitrarily, see [L. Budach, Automata and labyrinths, Math. Nachr. 86 (1978) 195-282]. In this context, we are looking for the minimum function pi(n), such that, there exists an efficient deterministic algorithm for setting the local port numbers allowing the robot to explore all graphs of size it along a traversal route with the period pi(n). Dol rev et al. proved in [S. Dobrev, J. Jansson, K. Sadakane, W.-K. Sung, Finding short right-hand-on-the-wall walks in graphs, in: Proc. 12th Colloquium on Structural Information and Communication Complexity, SIROCCO 2005, in: Lecture Notes in Comput. Sci., vol. 3499, Springer, Berlin, 2005, pp. 127-139] that for oblivious robots pi(n) <= 10n. Recently Ilcinkas proposed another port labelling algorithm for robots equipped with two extra memory bits, see [D. Ilcinkas, Setting port numbers for fast graph exploration, in: Proc. 13th Colloquium on Structural Information and Communication Complexity, SIROCCO 2006, in: Lecture Notes in Comput. Sci., vol. 4056, Springer, Berlin, 2006, pp. 59-69], where the exploration period pi(n) <= 4n - 2. In the same paper, it is conjectured that the bound 4n - O(1) is tight even if the use of larger memory is allowed. In this paper, we disprove this conjecture presenting an efficient deterministic algorithm arranging the port numbers, such that, the robot equipped with a constant number of bits is able to complete the traversal period in pi(n) < 3.75n - 2 steps hence decreasing the existing upper bound. This reduces the gap with the lower bound of pi(n) >= 2n - 2 holding for any robot. (c) 2007 Elsevier Inc. All rights reserved.", "paper_title": "Fast periodic graph exploration with constant memory", "paper_id": "WOS:000256462000009"}