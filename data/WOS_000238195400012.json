{"auto_keywords": [{"score": 0.0478525486920875, "phrase": "software_reliability_growth_models"}, {"score": 0.038707198070606866, "phrase": "failure_rate"}, {"score": 0.037906660451188796, "phrase": "optimal_software_release_time"}, {"score": 0.02933770923431727, "phrase": "simulation_framework"}, {"score": 0.00481495049065317, "phrase": "fault_debugging_activities"}, {"score": 0.004773476989344654, "phrase": "software_reliability_models"}, {"score": 0.004631099806015235, "phrase": "large_number"}, {"score": 0.004396790930873782, "phrase": "software_application"}, {"score": 0.0043213410601860985, "phrase": "failure_data"}, {"score": 0.004247180402119585, "phrase": "testing_phase"}, {"score": 0.004120435930514554, "phrase": "analytical_tractability"}, {"score": 0.00374610869916551, "phrase": "residual_number"}, {"score": 0.0034204548167213545, "phrase": "realistic_estimates"}, {"score": 0.002990592465417758, "phrase": "rate-based_simulation_framework"}, {"score": 0.0029519664912853938, "phrase": "explicit_debugging_activities"}, {"score": 0.0028390477456009568, "phrase": "different_debugging_policies"}, {"score": 0.0026835045963349647, "phrase": "imperfect_debugging"}, {"score": 0.0026033013834547507, "phrase": "debugging_policies"}, {"score": 0.0023460397258997525, "phrase": "explicit_debugging"}, {"score": 0.002315719347244451, "phrase": "economic_cost_model"}, {"score": 0.002227083991228041, "phrase": "debugging_activities"}], "paper_keywords": ["debugging", " imperfect debugging", " software reliability growth models"], "paper_abstract": "A large number of software reliability growth models have been proposed to analyse the reliability of a software application based on the failure data collected during the testing phase of the application. To ensure analytical tractability, most of these models are based on simplifying assumptions of instantaneous & perfect debugging. As a result, the estimates of the residual number of faults, failure rate, reliability, and optimal software release time obtained from these models tend to be optimistic. To obtain realistic estimates, it is desirable that the assumptions of instantaneous & perfect debugging be amended. In this paper we discuss the various policies according to which debugging may be conducted. We then describe a rate-based simulation framework to incorporate explicit debugging activities, which may be conducted according to the different debugging policies, into software reliability growth models. The simulation framework can also consider the possibility of imperfect debugging in conjunction with any of the debugging policies. Further, we also present a technique to compute the failure rate, and the reliability of the software, taking into consideration explicit debugging. An economic cost model to determine the optimal software release time in the presence of debugging activities is also described. We illustrate the potential of the simulation framework using two case studies.", "paper_title": "Incorporating fault debugging activities into software reliability models: A simulation approach", "paper_id": "WOS:000238195400012"}