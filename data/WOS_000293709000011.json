{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "mapping_flow"}, {"score": 0.004764859786310636, "phrase": "dynamically_reconfigurable_multi-core_system-on-chip_design"}, {"score": 0.0043367547691560175, "phrase": "multiple_complex_applications"}, {"score": 0.004224786847720058, "phrase": "large_set"}, {"score": 0.004180809918117248, "phrase": "heterogeneous_hardware_cores"}, {"score": 0.004137288854115515, "phrase": "different_sizes"}, {"score": 0.003946960862020283, "phrase": "dynamically_reconfigurable_platforms"}, {"score": 0.0037261429556468217, "phrase": "initial_design"}, {"score": 0.0036489343475053187, "phrase": "future_modifications"}, {"score": 0.0035361001070845677, "phrase": "design_flow"}, {"score": 0.0034628156490003775, "phrase": "multiple_multi-core_applications"}, {"score": 0.0034088473318056537, "phrase": "dynamically_reconfigurable_soc."}, {"score": 0.003373334961160647, "phrase": "proposed_methodology"}, {"score": 0.0032861588691414667, "phrase": "reconfigurable_hardware_architecture"}, {"score": 0.0032180376288035296, "phrase": "flexible_communication_infrastructure"}, {"score": 0.0031513240597392843, "phrase": "applications_similarities"}, {"score": 0.003085989256759819, "phrase": "effective_mapping"}, {"score": 0.0029905104479072482, "phrase": "run-time_mapper"}, {"score": 0.002897977113538355, "phrase": "new_applications"}, {"score": 0.0027071661844502992, "phrase": "original_system"}, {"score": 0.0026096659285441384, "phrase": "real-world_multimedia_case_study"}, {"score": 0.0025288869172313674, "phrase": "synthetic_benchmarks"}, {"score": 0.002289180040240783, "phrase": "average_improvement"}, {"score": 0.002218299213266519, "phrase": "reconfiguration_latency"}, {"score": 0.0021609076467365247, "phrase": "communication-oriented_approach"}], "paper_keywords": ["Field programmable gate arrays", " platform-based design", " reconfigurable architectures", " run-time adaptability"], "paper_abstract": "Nowadays, multi-core systems-on-chip (SoCs) are typically required to execute multiple complex applications, which demand a large set of heterogeneous hardware cores with different sizes. In this context, the popularity of dynamically reconfigurable platforms is growing, as they increase the ability of the initial design to adapt to future modifications. This paper presents a design flow to efficiently map multiple multi-core applications on a dynamically reconfigurable SoC. The proposed methodology is tailored for a reconfigurable hardware architecture based on a flexible communication infrastructure, and exploits applications similarities to obtain an effective mapping. We also introduce a run-time mapper that is able to introduce new applications that were not known at design-time, preserving the mapping of the original system. We apply our design flow to a real-world multimedia case study and to a set of synthetic benchmarks, showing that it is actually able to extract similarities among the applications, as it achieves an average improvement of 29% in terms of reconfiguration latency with respect to a communication-oriented approach, while preserving the same communication performance.", "paper_title": "A Mapping Flow for Dynamically Reconfigurable Multi-Core System-on-Chip Design", "paper_id": "WOS:000293709000011"}