{"auto_keywords": [{"score": 0.03719939501796298, "phrase": "sampling_rates"}, {"score": 0.009254139404106082, "phrase": "sensor_nodes"}, {"score": 0.00481495049065317, "phrase": "dynamic_data_driven_applications_systems"}, {"score": 0.004774324145784758, "phrase": "dddas"}, {"score": 0.004615202066192795, "phrase": "applications_systems"}, {"score": 0.004499334809770281, "phrase": "hazard_management"}, {"score": 0.004461359547152617, "phrase": "target_tracking"}, {"score": 0.004404994123834589, "phrase": "battlefield_monitoring"}, {"score": 0.004349337717774093, "phrase": "multiple_heterogeneous_sensors"}, {"score": 0.004276216827737399, "phrase": "huge_volume"}, {"score": 0.003639835714755229, "phrase": "execution_environment"}, {"score": 0.0033865859510157238, "phrase": "significant_load_imbalance"}, {"score": 0.0033579708256295847, "phrase": "back-end_servers"}, {"score": 0.003301461490509176, "phrase": "performance_degradation"}, {"score": 0.0031777570808834213, "phrase": "closed-loop_integrated_solution"}, {"score": 0.0030586736004285216, "phrase": "centralized_algorithm"}, {"score": 0.0029817668105720924, "phrase": "overall_quality"}, {"score": 0.0029191527226078286, "phrase": "whole_network"}, {"score": 0.0028822153400215973, "phrase": "utility_functions"}, {"score": 0.0028457440091791252, "phrase": "importance_rankings"}, {"score": 0.002658863179011018, "phrase": "highly_important_nodes"}, {"score": 0.0026363807171515255, "phrase": "critical_times"}, {"score": 0.0025810006125483835, "phrase": "proactive_resource_optimization_framework"}, {"score": 0.002421726275597666, "phrase": "changed_sampling_rates"}, {"score": 0.0024012441367538434, "phrase": "extensive_evaluation"}, {"score": 0.002380934815435267, "phrase": "cloud_platform"}, {"score": 0.002215081186105616, "phrase": "changed_importance"}, {"score": 0.002168531704054597, "phrase": "data_loss"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Resource allocation", " DDDAS", " Cloud computing"], "paper_abstract": "Various dynamic data driven applications systems (DDDAS) such as hazard management, target tracking, and battlefield monitoring often leverage multiple heterogeneous sensors, and generate huge volume of data. Not surprisingly, researchers are investigating ways to support such applications on the cloud. However, in such applications, the importance of a subset of sensors may change quickly due to changes in the execution environment, which often require adaptation of sampling rates accordingly. Additionally, such variations in sampling rates can create significant load imbalance on back-end servers, leading toward performance degradation. To address this, we investigate a closed-loop integrated solution as follows. First, we develop a centralized algorithm that attempts to maximize the overall quality of information for the whole network given the utility functions and the importance rankings of sensor nodes. Next, we present a threshold based heuristic that prevents omission of highly important nodes at critical times. Finally, a proactive resource optimization framework is investigated that adaptively allocate resources (e.g., servers) in response to changed sampling rates. Extensive evaluation on cloud platform for various scenarios shows that our approach can quickly adapt sampling rates and reallocate resources in response to the changed importance of sensor nodes, minimizing data loss significantly. (C) 2015 Elsevier Inc. All rights reserved.", "paper_title": "A closed-loop context aware data acquisition and resource allocation framework for dynamic data driven applications systems (DDDAS) on the cloud", "paper_id": "WOS:000362137700007"}