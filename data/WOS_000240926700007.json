{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automated_static_approach"}, {"score": 0.004740476936977635, "phrase": "bit_widths"}, {"score": 0.004691465925553365, "phrase": "fixed-point_feedforward_designs"}, {"score": 0.004547438494330851, "phrase": "minibit"}, {"score": 0.004317109072311102, "phrase": "fraction_parts"}, {"score": 0.004272456401437226, "phrase": "fixed-point_signals"}, {"score": 0.004119762981892093, "phrase": "circuit_area"}, {"score": 0.003993216345115755, "phrase": "range_analysis"}, {"score": 0.003771185758226876, "phrase": "integer_bits"}, {"score": 0.003693533648584145, "phrase": "range_requirements"}, {"score": 0.0036363418376496484, "phrase": "precision_analysis"}, {"score": 0.003580032420161922, "phrase": "semianalytical_approach"}, {"score": 0.003542976343910816, "phrase": "analytical_error_models"}, {"score": 0.0034700069041302003, "phrase": "adaptive_simulated_annealing"}, {"score": 0.0033285306462537884, "phrase": "fraction_bits"}, {"score": 0.0032769720645483102, "phrase": "analytical_models"}, {"score": 0.003143341238802547, "phrase": "numerical_accuracy"}, {"score": 0.0030466955629231047, "phrase": "user-specified_input_intervals"}, {"score": 0.002983916676307492, "phrase": "stream_compiler"}, {"score": 0.0029530125680590413, "phrase": "field-programmable_gate_arrays"}, {"score": 0.002759769970554556, "phrase": "polynomial_approximation"}, {"score": 0.0027311809666295565, "phrase": "rgb-to-ycbcr_conversion"}, {"score": 0.002619748321217153, "phrase": "discrete_cosine_transform"}, {"score": 0.0022760856906838814, "phrase": "optimum_uniform_fraction_bit_widths"}, {"score": 0.0022175679453857473, "phrase": "minibit-optimized_designs"}, {"score": 0.0021049977753042253, "phrase": "integer_linear_programming_approach"}], "paper_keywords": ["field-programmable gate arrays (FPGAs)", " finite word-length effects", " fixed-point arithmetic", " optimization methods", " simulated annealing (SA)"], "paper_abstract": "An automated static approach for optimizing bit widths of fixed-point feedforward designs with guaranteed accuracy, called MiniBit, is presented. Methods to minimize both the integer and fraction parts of fixed-point signals with the aim of minimizing the circuit area,are described. For range analysis, the technique in this paper identifies the number of integer bits necessary to meet range requirements. For precision analysis, a semianalytical approach with analytical error models in conjunction with adaptive simulated annealing is employed to optimize the number of fraction bits. The analytical models make it possible to guarantee overflow/underflow protection and numerical accuracy for all inputs over the user-specified input intervals. Using a stream compiler for field-programmable gate arrays (FPGAs), the approach in this paper is demonstrated with polynomial approximation, RGB-to-YCbCr conversion, matrix multiplication, B-splines, and discrete cosine transform placed and routed on a Xilinx Virtex-4 FPGA. Improvements for a given design reduce the area and the latency by up to 26% and 12%, respectively, over a design using optimum uniform fraction bit widths. Studies show that MiniBit-optimized designs are within 1% of the area produced from the integer linear programming approach.", "paper_title": "Accuracy-guaranteed bit-width optimization", "paper_id": "WOS:000240926700007"}