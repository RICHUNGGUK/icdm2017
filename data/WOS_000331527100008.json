{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "timed_automata"}, {"score": 0.004570491683870396, "phrase": "new_approach"}, {"score": 0.004087469540575263, "phrase": "finite_frequency"}, {"score": 0.0036826452656927877, "phrase": "parametric_shrinking"}, {"score": 0.0036281710561308377, "phrase": "clock_constraints"}, {"score": 0.003367611042980526, "phrase": "symbolic_procedures"}, {"score": 0.0030113280682863234, "phrase": "shrunk_version"}, {"score": 0.00269263690712392, "phrase": "exact_semantics"}, {"score": 0.002574788013427524, "phrase": "implementation_semantics"}, {"score": 0.002480520548392772, "phrase": "digital_clock"}, {"score": 0.002443784721651744, "phrase": "positive_reaction_times"}, {"score": 0.0023368018449680295, "phrase": "shrinkable_timed_automata"}, {"score": 0.002268088741853586, "phrase": "time-abstract_simulation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": [""], "paper_abstract": "We define and study a new approach to the implementability of timed automata, where the semantics is perturbed by imprecisions and finite frequency of the hardware. In order to circumvent these effects, we introduce parametric shrinking of clock constraints, which corresponds to tightening these. We propose symbolic procedures to decide the existence of (and then compute) parameters under which the shrunk version of a given timed automaton is non-blocking and can time-abstract simulate the exact semantics. We then define an implementation semantics for timed automata with a digital clock and positive reaction times, and show that for shrinkable timed automata, non-blockingness and time-abstract simulation are preserved in implementation. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Shrinking timed automata", "paper_id": "WOS:000331527100008"}