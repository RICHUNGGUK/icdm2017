{"auto_keywords": [{"score": 0.04586846484671967, "phrase": "proposed_approach"}, {"score": 0.028465349653037635, "phrase": "early_bug_detection"}, {"score": 0.00481495049065317, "phrase": "online_bug_detection"}, {"score": 0.004722791767189843, "phrase": "new_kernel_method"}, {"score": 0.004587835274176236, "phrase": "new_online_bug_detection_approach"}, {"score": 0.004521803560561489, "phrase": "critical_software_systems"}, {"score": 0.004287680323820891, "phrase": "support_vector_machine"}, {"score": 0.004165105357908494, "phrase": "customised_kernel_function"}, {"score": 0.0038179283509963695, "phrase": "new_kernel_function"}, {"score": 0.0037087324991876727, "phrase": "novel_sequence-matching_technique"}, {"score": 0.0034491650585057754, "phrase": "program_predicates"}, {"score": 0.003399466007862412, "phrase": "svm_method"}, {"score": 0.003270396852243212, "phrase": "program_execution_space"}, {"score": 0.002925899335792914, "phrase": "program_execution"}, {"score": 0.002828418443899226, "phrase": "rhythmbox"}, {"score": 0.002707829887747594, "phrase": "proposed_method"}, {"score": 0.002655894070657161, "phrase": "small_overhead"}, {"score": 0.0026175952455594277, "phrase": "program_execution_time"}, {"score": 0.00237597495309731, "phrase": "siemens"}, {"score": 0.0021049977753042253, "phrase": "latest_approaches"}], "paper_keywords": [""], "paper_abstract": "This study presents a new online bug detection approach for safety critical software systems. The novelty of the proposed approach is the use of support vector machine (SVM) with a customised kernel function to accelerate the detection of bugs early before they could cause the program to fail. The new kernel function is built based on a novel sequence-matching technique to measure the similarities between passing and failing executions, represented as sequences of the program predicates. The SVM method constructs a hyperplane that optimally divides the program execution space into two regions of failing and passing executions. The hyperplane could be further applied to detect the symptoms of failure during the program execution. Here the experiments with the Rhythmbox and SPEC2000 test programs, demonstrate the ability of the proposed method in early bug detection with small overhead on the program execution time. Moreover, the proposed approach in this study has revealed 83 out of 132 bugs (i.e. 63%) in Siemens while only 10% of code is required to be manually examined to locate the origins of failure. This is the most promising result compared with the latest approaches to early bug detection.", "paper_title": "Software online bug detection: applying a new kernel method", "paper_id": "WOS:000308233300005"}