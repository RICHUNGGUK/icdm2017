{"auto_keywords": [{"score": 0.0241871045823026, "phrase": "running_time"}, {"score": 0.00481495049065317, "phrase": "novel_general_approach"}, {"score": 0.004695900553353526, "phrase": "np-hard_optimization_problems"}, {"score": 0.004466519142879166, "phrase": "fast_matrix_multiplication"}, {"score": 0.0039737570920809215, "phrase": "matrix_multiplication"}, {"score": 0.0036553070575015344, "phrase": "usual_dynamic_programming_solution"}, {"score": 0.0035648266669315943, "phrase": "vertex_subset_problem"}, {"score": 0.0034476484413811987, "phrase": "bounded_branchwidth"}, {"score": 0.0032246835734680377, "phrase": "fastest_algorithms"}, {"score": 0.0031712256091350316, "phrase": "planar_independent_set"}, {"score": 0.002966084234963723, "phrase": "planar_dominating_set"}, {"score": 0.0024883835349005863, "phrase": "planar_hamiltonian_cycle"}, {"score": 0.0021049977753042253, "phrase": "fastest_matrix_multiplication_algorithm"}], "paper_keywords": [""], "paper_abstract": "We give a novel general approach for solving NP-hard optimization problems that combines dynamic programming and fast matrix multiplication. The technique is based on reducing much of the computation involved to matrix multiplication. We show that our approach works faster than the usual dynamic programming solution for any vertex subset problem on graphs of bounded branchwidth. In particular, we obtain the fastest algorithms for PLANAR INDEPENDENT SET of runtime O(2(2.52 root n)), for PLANAR DOMINATING SET of runtime exact O(2(3.99 root n)) and parameterized O(2(11.98 root k)) . n(O(1)), and for PLANAR HAMILTONIAN CYCLE of runtime O(2(5.58 root n)). The exponent of the running time is depending heavily on the running time of the fastest matrix multiplication algorithm that is currently o(n(2.376)).", "paper_title": "Dynamic programming and fast matrix multiplication", "paper_id": "WOS:000241478200025"}