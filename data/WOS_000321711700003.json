{"auto_keywords": [{"score": 0.02814111202666654, "phrase": "hammer"}, {"score": 0.00481495049065317, "phrase": "efficient_support"}, {"score": 0.0047555023078686386, "phrase": "coherence_protocols"}, {"score": 0.00469678464293492, "phrase": "future_chip_multiprocessors"}, {"score": 0.004441359373498799, "phrase": "tile-based_design_pattern"}, {"score": 0.004252296935371162, "phrase": "shared_memory_programming_model"}, {"score": 0.004122179528285764, "phrase": "coherence_protocol"}, {"score": 0.0038737214010638745, "phrase": "cache_hierarchy"}, {"score": 0.003778566972399296, "phrase": "invalidation-based_protocol"}, {"score": 0.003662892058072211, "phrase": "shared_copies"}, {"score": 0.0035507457285983268, "phrase": "write_operation"}, {"score": 0.003336614511719501, "phrase": "noc_re-organisation"}, {"score": 0.003254610516477302, "phrase": "small_and_fast_dedicated_control_network"}, {"score": 0.0031549249117721946, "phrase": "acknowledgement_messages"}, {"score": 0.003077372515276563, "phrase": "invalidation_process"}, {"score": 0.0029279232349513724, "phrase": "considerable_percentage"}, {"score": 0.0028382152567141784, "phrase": "dedicated_control_network"}, {"score": 0.0027512482368183596, "phrase": "full_map_directories"}, {"score": 0.0026835920552084488, "phrase": "broadcast-based_protocol"}, {"score": 0.0026013505538490223, "phrase": "experimental_evaluation"}, {"score": 0.0025691622090542304, "phrase": "significant_gains"}, {"score": 0.002474961375646351, "phrase": "low_area_overhead"}, {"score": 0.0023694065215394593, "phrase": "control_network"}, {"score": 0.002340081450249521, "phrase": "noc_traffic"}, {"score": 0.0022402661832994094, "phrase": "execution_time"}, {"score": 0.0021715812867126884, "phrase": "simulation_results"}, {"score": 0.0021049977753042253, "phrase": "network_traffic"}], "paper_keywords": [""], "paper_abstract": "Future chip multiprocessors will include hundreds of cores organised in a tile-based design pattern. These systems commonly employ a shared memory programming model, thus needing a coherence protocol to keep data consistent on the various levels of the cache hierarchy. Usually an invalidation-based protocol is used, where shared copies are invalidated before a write operation. In this study, the authors propose a NoC re-organisation in which a small and fast dedicated control network is used to transmit acknowledgement messages related to the invalidation process, thus relieving the NoC from a considerable percentage of traffic. The dedicated control network is evaluated both with full map directories and with a broadcast-based protocol (Hammer). Experimental evaluation shows significant gains in performance. With a low area overhead (<2.5%), the control network reduces NoC traffic and miss latency, thus reducing execution time up to 16%. Simulation results show a reduction of network traffic up to 80% and a reduction of store and load miss latency up to 70 and 40%, respectively.", "paper_title": "Built-in fast gather control network for efficient support of coherence protocols", "paper_id": "WOS:000321711700003"}