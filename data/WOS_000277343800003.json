{"auto_keywords": [{"score": 0.034044071654861695, "phrase": "different_execution_semantics"}, {"score": 0.00481495049065317, "phrase": "formal_analysis"}, {"score": 0.00438955582974973, "phrase": "standard_architecture"}, {"score": 0.00428257928723, "phrase": "function_blocks"}, {"score": 0.004178198896815672, "phrase": "distributed_control"}, {"score": 0.0041269626762569095, "phrase": "measurement_applications"}, {"score": 0.0039281997063335735, "phrase": "formal_semantics"}, {"score": 0.003880017219275826, "phrase": "different_interpretations"}, {"score": 0.0034720284451902083, "phrase": "different_standard_compliant_platforms"}, {"score": 0.0033457659530207306, "phrase": "formal_framework"}, {"score": 0.0033047037762521984, "phrase": "mathematical_modeling"}, {"score": 0.0029937855454238507, "phrase": "execution_semantics"}, {"score": 0.002518227743688769, "phrase": "mathematical_model"}, {"score": 0.0022811346113905295, "phrase": "runtime_environment"}, {"score": 0.0021845387990972543, "phrase": "software_tool"}, {"score": 0.002144400314994328, "phrase": "formal_models"}, {"score": 0.0021049977753042253, "phrase": "formal_verification"}], "paper_keywords": ["Manufacturing automation software", " modeling", " software verification and validation"], "paper_abstract": "IEC 61499 is a standard architecture, based on function blocks, for developing distributed control and measurement applications. However, the standard has no formal semantics and different interpretations of the standard have emerged. As a consequence, it is harder to transfer applications between different standard compliant platforms. This paper presents a formal framework for mathematical modeling and comparison of different execution semantics. The framework provides definitions that allow modeling of applications and execution semantics separately. Together, the models can be used to analyze and compare how an application would behave when executed using different execution semantics. In addition, a mathematical model made possible by the framework has been used as a basis for implementation of a runtime environment that can execute applications and a software tool that generates formal models suitable for formal verification, both assuming different execution semantics.", "paper_title": "On Formal Analysis of IEC 61499 Applications, Part A: Modeling", "paper_id": "WOS:000277343800003"}