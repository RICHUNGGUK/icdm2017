{"auto_keywords": [{"score": 0.04869658238235114, "phrase": "gost"}, {"score": 0.00481495049065317, "phrase": "low-complexity_key_recovery"}, {"score": 0.0047310525657970615, "phrase": "gost_block_cipher"}, {"score": 0.004594443767709888, "phrase": "well-known_russian_government"}, {"score": 0.0039449104968131655, "phrase": "quite_a_few_distinct_key_recovery_attacks"}, {"score": 0.0034268702387746106, "phrase": "so-called_complexity_reduction"}, {"score": 0.0030295361111006866, "phrase": "gost."}, {"score": 0.002725740264152553, "phrase": "new_meet-in-the-middle_attack"}, {"score": 0.002570296816631395, "phrase": "previous_attack"}, {"score": 0.0024813081174066653, "phrase": "guess-then-determine_attack"}, {"score": 0.002409503258044183, "phrase": "sat_solver"}], "paper_keywords": ["black-box reductions", " block ciphers", " key scheduling", " low-data complexity attacks", " meet in the middle", " Russian GOST cipher", " SAT solvers", " self-similarity"], "paper_abstract": "GOST is a well-known Russian government block cipher. Until 2010, there was no attack on GOST used in encryption, cf. [9]. More recently, quite a few distinct key recovery attacks on full GOST have been found: [1-4, 6, 7]. Most of these attacks work by so-called complexity reduction [1]; they reduce the problem of breaking the full 32-round GOST to an attack with 2,3,4 KP for 8 rounds of GOST. In this article, we develop an alternative last step for these attacks. We present a new meet-in-the-middle attack for eight rounds, which is faster than any previous attack. Then we present a guess-then-determine attack with software using an SAT solver, which, for the same running time, requires much less memory. As a result we are able to improve by a factor of up to 226 various attacks from [1, 3].", "paper_title": "Low-Complexity Key Recovery Attacks on GOST Block Cipher", "paper_id": "WOS:000315984900001"}