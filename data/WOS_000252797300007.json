{"auto_keywords": [{"score": 0.039555265291375964, "phrase": "projectit_approach"}, {"score": 0.03142889696830305, "phrase": "code_generation_techniques"}, {"score": 0.00481495049065317, "phrase": "mde_paradigms"}, {"score": 0.004404994123834589, "phrase": "project_management"}, {"score": 0.004116139569480336, "phrase": "production_activities"}, {"score": 0.004046923261950549, "phrase": "traditional_software_programming"}, {"score": 0.003639835714755229, "phrase": "model-driven_engineering_communities"}, {"score": 0.0035183910023550246, "phrase": "requirement_specification"}, {"score": 0.0034299649219748513, "phrase": "textual_specifications"}, {"score": 0.0033295966773779174, "phrase": "consistent_requirements_document"}, {"score": 0.0032321559007422087, "phrase": "domain-specific_language"}, {"score": 0.003071682293903262, "phrase": "design_and_development_activities"}, {"score": 0.0027978304423349246, "phrase": "proof-of-concept_case_study"}, {"score": 0.002658863179011018, "phrase": "concrete_components"}, {"score": 0.0024527767211457046, "phrase": "projectit-studio_case_tool"}, {"score": 0.0024012441367538434, "phrase": "practical_demonstration"}, {"score": 0.0023111922860677672, "phrase": "system_requirements"}, {"score": 0.0021049977753042253, "phrase": "software_engineering_lifecycle"}], "paper_keywords": [""], "paper_abstract": "The suggestion that in software development projects the emphasis must be on the project management (RE), requirements engineering, and design activities, and consequently efforts in production activities - such as traditional software programming and testing - should be minimised and performed as automatically as possible is discussed. The ProjectIT approach that integrates contributions from the RE and model-driven engineering communities is also discussed. The goal with requirement specification is not just in managing textual specifications, but also to obtain a consistent requirements document that is in conformance with a domain-specific language, and that can be re-used to increase the design and development activities in the context of model driven and code generation techniques. Furthermore, the feasibility and benefits of this approach by presenting a proof-of-concept case study are discussed, in which the orchestration of the concepts and concrete components related with the ProjectIT approach, the PIT-RSL, XIS and PIT-TSL languages and the ProjectIT-Studio CASE tool is emphasised. A practical demonstration of the approach including the description of the system requirements, the design of the system, the use of code generation techniques, and how they integrate to improve and accelerate the software engineering lifecycle is presented.", "paper_title": "Integration of RE and MDE paradigms: the projectIT approach and tools", "paper_id": "WOS:000252797300007"}