{"auto_keywords": [{"score": 0.04579831249542828, "phrase": "power_modes"}, {"score": 0.00481495049065317, "phrase": "innovative_dvs_technique"}, {"score": 0.00467855218490191, "phrase": "energy_dissipation"}, {"score": 0.004261268957001927, "phrase": "idle_periods"}, {"score": 0.0042004472903194616, "phrase": "functional_units"}, {"score": 0.004140490129683107, "phrase": "instruction_scheduling"}, {"score": 0.003965684670332574, "phrase": "control_flow_graph"}, {"score": 0.0035858673522839407, "phrase": "power_information"}, {"score": 0.002747676657869163, "phrase": "idle_functional_units"}, {"score": 0.0024311346712789553, "phrase": "power_model"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": [""], "paper_abstract": "This paper presents an innovative DVS technique to reduce the energy dissipation. Our objective is to minimize the transitions between power modes by maximizing the idle periods of functional units with instruction scheduling. Our work first analyzes the control flow graph of the application, which contains many regions. Second, we collect the power information and build its power model for each region. Then two regions with the same functional units will be merged if no dependencies exist between them. The process is repeated until no further mergings can be performed. Next, the idle functional units will be turned off and each region will be assigned a power mode based on the power model. Finally, the application is rescheduled to merge the regions to reduce the transitions between power modes. The experimental results show that our work can save the energy by 26%.", "paper_title": "Power-aware instruction scheduling", "paper_id": "WOS:000239570300005"}