{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "regular_register"}, {"score": 0.04132712815039597, "phrase": "modern_distributed_systems"}, {"score": 0.004743164872278112, "phrase": "eventually_synchronous_distributed_system_prone"}, {"score": 0.004291073117901643, "phrase": "shared_objects"}, {"score": 0.004184921610672245, "phrase": "main_abstractions"}, {"score": 0.004081385289516914, "phrase": "distributed_applications"}, {"score": 0.0037480753312398754, "phrase": "almost_all_services"}, {"score": 0.0036370297611938796, "phrase": "distributed_infrastructures"}, {"score": 0.0031448288291084, "phrase": "continuous_arrival"}, {"score": 0.002931569771634119, "phrase": "register_object"}, {"score": 0.0028877818105020434, "phrase": "fundamental_one"}, {"score": 0.0027741761880779535, "phrase": "fault_resilient_registers"}, {"score": 0.002719055901632759, "phrase": "message-passing_system"}, {"score": 0.002534596206835737, "phrase": "new_issues"}, {"score": 0.002315658491366464, "phrase": "eventually_synchronous_distributed_system"}, {"score": 0.0021802872319258977, "phrase": "general_protocol"}, {"score": 0.0021049977753042253, "phrase": "feasibility_conditions"}], "paper_keywords": ["Regular register", " dynamic distributed systems", " churn", " distributed algorithms"], "paper_abstract": "Due to their capability to hide the complexity generated by the messages exchanged between processes, shared objects are one of the main abstractions provided to developers of distributed applications. Implementations of such objects, in modern distributed systems, have to take into account the fact that almost all services, implemented on top of distributed infrastructures, are no longer fully managed due to either their size or their maintenance cost. Therefore, these infrastructures exhibit several autonomic behaviors in order to, for example, tolerate failures and continuous arrival and departure of nodes (churn phenomenon). Among all the shared objects, the register object is a fundamental one. Several protocols have been proposed to build fault resilient registers on top of message-passing system, but, unfortunately, failures are not the only challenge in modern distributed systems and new issues arise in the presence of churn. This paper addresses the construction of a multiwriter/multireader regular register in an eventually synchronous distributed system affected by the continuous arrival/departure of participants. In particular, a general protocol implementing a regular register is proposed and feasibility conditions associated with the arrival and departure of the processes are given. The protocol is proved correct under the assumption that a constraint on the churn is satisfied.", "paper_title": "Implementing a Regular Register in an Eventually Synchronous Distributed System Prone to Continuous Churn", "paper_id": "WOS:000297352200013"}