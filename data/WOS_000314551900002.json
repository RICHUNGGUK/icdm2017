{"auto_keywords": [{"score": 0.04827794640391151, "phrase": "collaborative_systems"}, {"score": 0.03007904096220623, "phrase": "visual_language"}, {"score": 0.00481495049065317, "phrase": "collaborative_modeling_tools"}, {"score": 0.004575053987970206, "phrase": "increasingly_popular_thanks"}, {"score": 0.0043842558719324526, "phrase": "software_tools"}, {"score": 0.004273601449537163, "phrase": "collaborative_modeling_systems"}, {"score": 0.004219321533320583, "phrase": "collaborative_paradigm"}, {"score": 0.003542786326740931, "phrase": "time_organization"}, {"score": 0.0033804443117334535, "phrase": "collaboration_protocol"}, {"score": 0.002801935384649699, "phrase": "collaboration_protocols"}, {"score": 0.0025183881730011597, "phrase": "different_coordination_relationships"}, {"score": 0.002332133125576037, "phrase": "development_method"}, {"score": 0.002253826965566618, "phrase": "eclipse_platform"}, {"score": 0.0022062235065459274, "phrase": "model-driven_graphical_editors"}, {"score": 0.002159623311924437, "phrase": "collaboration_capabilities"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Collaboration protocols", " Visual languages", " Model-driven software development", " Groupware"], "paper_abstract": "Over the last two decades, collaborative Systems have become increasingly popular thanks to the many advances made in networks, communications and software tools. Within this field, Collaborative Modeling Systems apply the collaborative paradigm to the construction of (often visual) models, where users build diagrams from building blocks and the relationships between them. In these kinds of applications, the work is usually arranged into sessions, with the definition of some kind of time organization between those sessions. This organization is known as a collaboration protocol. Unfortunately, it is not usually easy to define these protocols, and many applications do not allow users to make any use of them. In an effort to overcome these difficulties, in this paper we propose a visual language for defining collaboration protocols for these systems. As such, in our language, sessions, artifacts and the transformations between them can be specified visually, and different coordination relationships (such as fork and join) can be defined. The visual language is included in a development method for collaborative systems that take advantage of the Eclipse platform in order to develop model-driven graphical editors that are enhanced with collaboration capabilities. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Modeling collaboration protocols for collaborative modeling tools: Experiences and applications", "paper_id": "WOS:000314551900002"}