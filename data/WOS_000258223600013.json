{"auto_keywords": [{"score": 0.025556462361816745, "phrase": "gpu."}, {"score": 0.00481495049065317, "phrase": "existing_solid_texture_synthesis_algorithms"}, {"score": 0.00465944657565638, "phrase": "color_content"}, {"score": 0.00441130431691048, "phrase": "new_algorithm"}, {"score": 0.004339459955098738, "phrase": "unique_ability"}, {"score": 0.004041359131062721, "phrase": "spatial_determinism"}, {"score": 0.003602302241898501, "phrase": "major_difficulty"}, {"score": 0.0035049738376240567, "phrase": "dependency_chain"}, {"score": 0.003466780226380516, "phrase": "neighborhood_matching"}, {"score": 0.0032819448594643853, "phrase": "small_number"}, {"score": 0.0028460640294160383, "phrase": "efficient_algorithm"}, {"score": 0.002709045632654716, "phrase": "consistent_triples"}, {"score": 0.0026213749921120623, "phrase": "search_space"}, {"score": 0.002592784882557155, "phrase": "subsequent_synthesis"}, {"score": 0.002508867228980776, "phrase": "new_parallel"}, {"score": 0.0024815011359381692, "phrase": "spatially_deterministic_solid_texture_synthesis_algorithm"}, {"score": 0.002361992359512022, "phrase": "high_resolution_solid_textures"}, {"score": 0.002285527382381719, "phrase": "memory_usage"}, {"score": 0.002260591903283384, "phrase": "synthesis_time"}, {"score": 0.0021994343316143125, "phrase": "output_textured_surface_area"}, {"score": 0.002163535133532765, "phrase": "gpu_implementation"}, {"score": 0.0021049977753042253, "phrase": "new_textures"}], "paper_keywords": [""], "paper_abstract": "Existing solid texture synthesis algorithms generate a full volume of color content from a set of 2D example images. We introduce a new algorithm with the unique ability to restrict synthesis to a subset of the voxels, while enforcing spatial determinism. This is especially useful when texturing objects, since only a thick layer around the surface needs to be synthesized. A major difficulty lies in reducing the dependency chain of neighborhood matching, so that each voxel only depends on a small number of other voxels. Our key idea is to synthesize a volume from a set of pre-computed 3D candidates, each being a triple of interleaved 2D neighborhoods. We present an efficient algorithm to carefully select in a pre-process only those candidates forming consistent triples. This significantly reduces the search space during subsequent synthesis. The result is a new parallel, spatially deterministic solid texture synthesis algorithm which runs efficiently on the GPU. Our approach generates high resolution solid textures on surfaces within seconds. Memory usage and synthesis time only depend on the output textured surface area. The GPU implementation of our method rapidly synthesizes new textures for the surfaces appearing when interactively breaking or cutting objects.", "paper_title": "Lazy solid texture synthesis", "paper_id": "WOS:000258223600013"}