{"auto_keywords": [{"score": 0.04556476958191059, "phrase": "cache"}, {"score": 0.00481495049065317, "phrase": "cache_sharing"}, {"score": 0.004740476936977635, "phrase": "multi-core_processors"}, {"score": 0.0046429592670444945, "phrase": "cloud_computing"}, {"score": 0.004407813106104401, "phrase": "shared_cache_environment"}, {"score": 0.003931402465972151, "phrase": "previous_work"}, {"score": 0.0036553070575015344, "phrase": "accurate_measurement"}, {"score": 0.0035614563596982306, "phrase": "complete_measurement"}, {"score": 0.0035245918797629804, "phrase": "counting_data_access"}, {"score": 0.0034700069041302003, "phrase": "execution_windows"}, {"score": 0.0030946423142739813, "phrase": "off-line_use"}, {"score": 0.002968424524565369, "phrase": "guaranteed_precision"}, {"score": 0.002674885993329912, "phrase": "composable_model"}, {"score": 0.002512850690695835, "phrase": "all-window_footprint"}, {"score": 0.0021381565332182773, "phrase": "footprint_interference_model"}, {"score": 0.0021049977753042253, "phrase": "miss-rate_based_model"}], "paper_keywords": ["data footprint", " cache interference", " reuse distance", " composable models", " measurement", " performance"], "paper_abstract": "As multi-core processors become commonplace and cloud computing is gaining acceptance, more applications are run in a shared cache environment. Cache sharing depends on a concept called footprint, which depends on all cache accesses not just cache misses. Previous work has recognized the importance of footprint but has not provided a method for accurate measurement, mainly because the complete measurement requires counting data access in all execution windows, which takes time quadratic in the length of a trace. The paper first presents an algorithm efficient enough for off-line use to approximately measure the footprint with a guaranteed precision. The cost of the analysis can be adjusted by changing the precision. Then the paper presents a composable model. For a set of programs, the model uses the all-window footprint of each program to predict its cache interference with other programs without running these programs together. The paper evaluates the efficiency of all-window profiling using the SPEC 2000 benchmarks and compares the footprint interference model with a miss-rate based model and with exhaustive testing.", "paper_title": "All-Window Profiling and Composable Models of Cache Sharing", "paper_id": "WOS:000296264900010"}