{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "class-level_testing"}, {"score": 0.04409251033766781, "phrase": "algebraic_specifications"}, {"score": 0.03861529053005001, "phrase": "ground_terms"}, {"score": 0.026814687154430927, "phrase": "software_testing"}, {"score": 0.004769444094319619, "phrase": "object-oriented_software"}, {"score": 0.00452670409375785, "phrase": "object-oriented_programs"}, {"score": 0.004077508669922702, "phrase": "equivalent_and_nonequivalent_ground_terms"}, {"score": 0.00398177607914381, "phrase": "intuitive_examples"}, {"score": 0.0032922964156452696, "phrase": "equivalent_ground_terms"}, {"score": 0.0032149396890830575, "phrase": "nonequivalent_ground_terms"}, {"score": 0.002923214590192792, "phrase": "innovative_finding"}, {"score": 0.002854505078275351, "phrase": "canonical_specification"}, {"score": 0.002787406053363446, "phrase": "proper_imports"}, {"score": 0.0027479040199262393, "phrase": "complete_implementation"}, {"score": 0.0023485549678832628, "phrase": "deeper_understanding"}, {"score": 0.0021251363422701446, "phrase": "important_practical_implications"}], "paper_keywords": ["Software testing", " equivalence criterion", " nonequivalence criterion", " algebraic specification", " object-oriented software"], "paper_abstract": "Algebraic specifications have been used in the testing of object-oriented programs and received much attention since the 1990s. It is generally believed that class-level testing based on algebraic specifications involves two independent aspects: the testing of equivalent and nonequivalent ground terms. Researchers have cited intuitive examples to illustrate the philosophy that even if an implementation satisfies all the requirements specified by the equivalence of ground terms, it may still fail to satisfy some of the requirements specified by the nonequivalence of ground terms. Thus, both the testing of equivalent ground terms and the testing of nonequivalent ground terms have been considered as significant and cannot replace each other. In this paper, we present an innovative finding that, given any canonical specification of a class with proper imports, a complete implementation satisfies all the observationally equivalent ground terms if and only if it satisfies all the observationally nonequivalent ground terms. As a result, these two aspects of software testing cover each other and can therefore replace each other. These findings provide a deeper understanding of software testing based on algebraic specifications, rendering the theory more elegant and complete. We also highlight a couple of important practical implications of our theoretical results.", "paper_title": "Equality to Equals and Unequals: A Revisit of the Equivalence and Nonequivalence Criteria in Class-Level Testing of Object-Oriented Software", "paper_id": "WOS:000326501200006"}