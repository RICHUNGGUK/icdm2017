{"auto_keywords": [{"score": 0.027718847915881126, "phrase": "xor-encoding_scheme"}, {"score": 0.012600296283853764, "phrase": "obfuscation_schemes"}, {"score": 0.00481495049065317, "phrase": "program_obfuscation_schemes"}, {"score": 0.004772137871562584, "phrase": "variable_encoding_technique"}, {"score": 0.004729704116022601, "phrase": "program_analysis_techniques"}, {"score": 0.004563691742821759, "phrase": "software_obfuscation_schemes"}, {"score": 0.004364310576600359, "phrase": "software_obfuscation_scheme"}, {"score": 0.004306205029641728, "phrase": "original_program"}, {"score": 0.004248869786808024, "phrase": "binary_file"}, {"score": 0.00419229472352669, "phrase": "obfuscated_program"}, {"score": 0.003293142761521425, "phrase": "five_types"}, {"score": 0.0032638170723261538, "phrase": "attack_models"}, {"score": 0.0031490944606172152, "phrase": "quantitative_resistance"}, {"score": 0.002905454531687249, "phrase": "encoding_variables"}, {"score": 0.0028411768240129585, "phrase": "sato_et_al"}, {"score": 0.002778317177178732, "phrase": "linear_transformation"}, {"score": 0.0023968383387667404, "phrase": "data-dependency_attack"}, {"score": 0.002364865100579589, "phrase": "brute_force_attack"}, {"score": 0.0022613292987262177, "phrase": "information-collecting_attack"}, {"score": 0.0022311596751824416, "phrase": "inverse_transformation_attack"}, {"score": 0.0021049977753042253, "phrase": "calculable_ranges"}], "paper_keywords": ["program obfuscation", " variable encoding technique", " analysis"], "paper_abstract": "Program analysis techniques have improved steadily over the past several decades, and software obfuscation schemes have come to be used in many commercial programs. A software obfuscation scheme transforms an original program or a binary file into an obfuscated program that is more complicated and difficult to analyze, while preserving its functionality. However, the security of obfuscation schemes has not been properly evaluated. In this paper, we analyze obfuscation schemes in order to clarify the advantages of our scheme, the XOR-encoding scheme. First, we more clearly define five types of attack models that we defined previously, and define quantitative resistance to these attacks. Then, we compare the security, functionality and efficiency of three obfuscation schemes with encoding variables: (1) Sato et al.'s scheme with linear transformation, (2) our previous scheme with affine transformation, and (3) the XOR-encoding scheme. We show that the XOR-encoding scheme is superior with regard to the following two points: (1) the XOR-encoding scheme is more secure against a data-dependency attack and a brute force attack than our previous scheme, and is as secure against an information-collecting attack and an inverse transformation attack as our previous scheme, (2) the XOR-encoding scheme does not restrict the calculable ranges of programs and the loss of efficiency is less than in our previous scheme.", "paper_title": "Analysis of program obfuscation schemes with variable encoding technique", "paper_id": "WOS:000252617400034"}