{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "scientific_applications"}, {"score": 0.004147523799581407, "phrase": "python-based_framework"}, {"score": 0.004007083686875716, "phrase": "rapid_prototyping"}, {"score": 0.0037834649508375544, "phrase": "case_study"}, {"score": 0.0035722806911457545, "phrase": "problem_specification"}, {"score": 0.0034512520059814603, "phrase": "marmot"}, {"score": 0.0030414140732789186, "phrase": "standard_physics_codes"}, {"score": 0.0029722900280316216, "phrase": "reusable_and_extensible_components"}, {"score": 0.0027743231537932915, "phrase": "python"}, {"score": 0.002649548449308076, "phrase": "fortran"}, {"score": 0.002472822097373027, "phrase": "marmot_component_design"}, {"score": 0.0021049977753042253, "phrase": "single-language_version"}], "paper_keywords": ["components", " CCA", " python"], "paper_abstract": "In this paper, we describe a Python-based framework for the rapid prototyping of scientific applications. A case study was performed using a problem specification developed for Marmot, a project at the Los Alamos National Laboratory aimed at re-factoring standard physics codes into reusable and extensible components. Components were written in Python, ZPL, Fortran, and C++ following the Marmot component design. We evaluate our solution both qualitatively and quantitatively by comparing it to a single-language version written in C.", "paper_title": "Rapid prototyping frameworks for developing scientific applications: A case study", "paper_id": "WOS:000237506300003"}