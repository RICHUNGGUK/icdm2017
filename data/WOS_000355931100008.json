{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "particle_filter"}, {"score": 0.004761850836420121, "phrase": "randomized_multiscale"}, {"score": 0.004504969093304219, "phrase": "powerful_tool"}, {"score": 0.004455272634364756, "phrase": "state_tracking"}, {"score": 0.004406121974246201, "phrase": "non-linear_observations"}, {"score": 0.004285594361623147, "phrase": "multiscale_based_method"}, {"score": 0.004191540451296395, "phrase": "tracking_computation"}, {"score": 0.004145287175409325, "phrase": "particle_filters"}, {"score": 0.004054299982508618, "phrase": "conventional_way"}, {"score": 0.003668859054928118, "phrase": "small_subset"}, {"score": 0.003608266640131664, "phrase": "source_particles"}, {"score": 0.0035684266744407485, "phrase": "matrix_decomposition_methods"}, {"score": 0.0034324073240680213, "phrase": "function_extension_algorithm"}, {"score": 0.0033570147767493746, "phrase": "particle_subset"}, {"score": 0.003283272764794988, "phrase": "density_function"}, {"score": 0.003105905142768581, "phrase": "chosen_subset"}, {"score": 0.0030545815929619306, "phrase": "computational_effort"}, {"score": 0.002970914475538276, "phrase": "multiple_objects"}, {"score": 0.002873524721802591, "phrase": "proposed_algorithm"}, {"score": 0.002810373366887749, "phrase": "computational_load"}, {"score": 0.0026584843838039166, "phrase": "particle_selection_step"}, {"score": 0.002585638506308606, "phrase": "linear_time"}, {"score": 0.0022880528191813083, "phrase": "selected_subset"}, {"score": 0.002164331818029166, "phrase": "real_data"}, {"score": 0.0021285340816566906, "phrase": "object_tracking"}, {"score": 0.0021049977753042253, "phrase": "video_sequences"}], "paper_keywords": ["Particle filter", " multiscale methods", " nonlinear tracking", " fast multipole method"], "paper_abstract": "Particle filter is a powerful tool for state tracking using non-linear observations. We present a multiscale based method that accelerates the tracking computation by particle filters. Unlike the conventional way, which calculates weights over all particles in each cycle of the algorithm, we sample a small subset from the source particles using matrix decomposition methods. Then, we apply a function extension algorithm that uses a particle subset to recover the density function for all the rest of the particles not included in the chosen subset. The computational effort is substantial especially when multiple objects are tracked concurrently. The proposed algorithm significantly reduces the computational load. By using the Fast Gaussian Transform, the complexity of the particle selection step is reduced to a linear time in n and k, where n is the number of particles and k is the number of particles in the selected subset. We demonstrate our method on both simulated and on real data such as object tracking in video sequences.", "paper_title": "Accelerating Particle Filter Using Randomized Multiscale and Fast Multipole Type Methods", "paper_id": "WOS:000355931100008"}