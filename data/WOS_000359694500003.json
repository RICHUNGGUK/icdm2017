{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "partial_models"}, {"score": 0.004410938507689426, "phrase": "particular_stage"}, {"score": 0.004328856052035968, "phrase": "software_development_process"}, {"score": 0.003795335309109018, "phrase": "model_refinements"}, {"score": 0.0035648266669315943, "phrase": "refining_transformation"}, {"score": 0.002756832447586547, "phrase": "general_approach"}, {"score": 0.0024625017739528096, "phrase": "formal_conditions"}, {"score": 0.002371531125700046, "phrase": "individual_models"}, {"score": 0.002327310963701377, "phrase": "model_transformations"}], "paper_keywords": ["Partial Models", " Uncertainty", " Refinement", " Model Transformation"], "paper_abstract": "Models are typically used for expressing information that is known at a particular stage in the software development process. Yet, it is also important to express what information a modeler is still uncertain about and to ensure that model refinements actually reduce this uncertainty. Furthermore, when a refining transformation is applied to a model containing uncertainty, it is natural to consider the effect that the transformation has on the level of uncertainty, e.g., whether it always reduces it. In our previous work, we have presented a general approach for precisely expressing uncertainty within models. In this paper, we use these foundations and define formal conditions for uncertainty reducing refinement between individual models and within model transformations. We describe tooling for automating the verification of these conditions within transformations and describe its application to example transformations.", "paper_title": "A Methodology for Verifying Refinements of Partial Models", "paper_id": "WOS:000359694500003"}