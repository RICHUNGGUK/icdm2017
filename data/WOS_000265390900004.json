{"auto_keywords": [{"score": 0.049106469259210486, "phrase": "java_programs"}, {"score": 0.0112363976458987, "phrase": "trace-level_parallelism"}, {"score": 0.00481495049065317, "phrase": "potential_parallelism"}, {"score": 0.004278807087784626, "phrase": "novel_approach"}, {"score": 0.00421340730888561, "phrase": "automatic_parallelization"}, {"score": 0.0033096502887394233, "phrase": "jupiter_java_virtual_machine"}, {"score": 0.003192700856094016, "phrase": "abstract_parallel_system"}, {"score": 0.0028221322455573624, "phrase": "trace_window_size"}, {"score": 0.0027789349951704177, "phrase": "communication_type"}, {"score": 0.00263965046277432, "phrase": "dependence_characteristics"}, {"score": 0.0023816257768353344, "phrase": "modest_number"}, {"score": 0.0022738775158524793, "phrase": "trace-based_parallelization"}, {"score": 0.0022390533383717715, "phrase": "potentially_viable_approach"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Traces", " Parallelism", " Code optimization", " Java", " Benchmark characterization"], "paper_abstract": "The exploitation of parallelism among traces, i.e. hot paths of execution in programs, is a novel approach to the automatic parallelization of Java programs and it has many advantages. However, to date, the extent to which parallelism exists among traces in programs has not been made clear. The goal of this study is to measure the amount of trace-level parallelism in several Java programs. We extend the Jupiter Java Virtual Machine with a simulator that models an abstract parallel system. We use this simulator to measure trace-level parallelism. We further use it to examine the effects of the number of processors, trace window size, and communication type and cost on performance. We also analyze the dependence characteristics of the benchmarks and see how they relate to parallelism. The results indicate that enough trace-level parallelism exists for a modest number of processors. Thus, we conclude that trace-based parallelization is a potentially viable approach to improve the performance of Java programs. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "A study of potential parallelism among traces in Java programs", "paper_id": "WOS:000265390900004"}