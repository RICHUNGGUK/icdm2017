{"auto_keywords": [{"score": 0.031653507648654204, "phrase": "behavior_refinement"}, {"score": 0.00481495049065317, "phrase": "modeling_and_refining_behaviors"}, {"score": 0.004579780586951551, "phrase": "model-driven_development"}, {"score": 0.004466519142879166, "phrase": "traditional_methods"}, {"score": 0.0044219992735047954, "phrase": "unified_modeling_language"}, {"score": 0.004334280585565239, "phrase": "based_methods"}, {"score": 0.004291073117901643, "phrase": "formal_methods"}, {"score": 0.004248294537944227, "phrase": "recently_integrated_methods"}, {"score": 0.004184921610672245, "phrase": "full_advantages"}, {"score": 0.004060986196931943, "phrase": "increasing_attention"}, {"score": 0.003901407184706592, "phrase": "effective_formal_modeling"}, {"score": 0.0038624981944755813, "phrase": "automatic_refinement_methods"}, {"score": 0.0034940519373446335, "phrase": "existing_approaches"}, {"score": 0.003339886795391701, "phrase": "b-notations_based_framework"}, {"score": 0.002873331232538783, "phrase": "automatic_behavior_modeling"}, {"score": 0.0027881294891497115, "phrase": "based_automatic_modeling_method"}, {"score": 0.0026252106881752067, "phrase": "refinement_theory"}, {"score": 0.002534596206835737, "phrase": "behavior_refinement_problem"}, {"score": 0.002496722870659199, "phrase": "search_problem"}, {"score": 0.002459414063407306, "phrase": "automatic_behavior_refinement"}, {"score": 0.002398464540102246, "phrase": "automatic_refinement_approach"}, {"score": 0.002362620540317279, "phrase": "top-down_logic_reduction"}, {"score": 0.0022133711375320244, "phrase": "explicit_loop_structures"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Behavior modeling", " Formal refinement", " Automatic refinement", " Formal method", " Model-Driven Development"], "paper_abstract": "Modeling and refining behaviors of software systems are two crucial issues in the methodology of Model-Driven Development (MDD). Traditional methods include Unified Modeling Language (UML) based methods and formal methods. Recently integrated methods by taking full advantages of these two methods have received increasing attention. Unfortunately, there are still no effective formal modeling and automatic refinement methods for behaviors. Besides, difficulties exist in generating some structures, e.g., explicit loop structures, via existing approaches. In this paper, we propose a B-notations based framework for formal modeling and automatically refining behaviors. In our framework, three issues are involved: automatic behavior modeling, theory of behavior refinement, and automatic behavior refinement. For automatic behavior modeling, we propose a B-notation based automatic modeling method for behaviors. For theory of behavior refinement, we propose a refinement theory focusing on behaviors that regards the behavior refinement problem as a search problem. For automatic behavior refinement, we propose an automatic refinement approach by combining top-down logic reduction based method and bottom-up local search based method, where explicit loop structures can be well generated. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Formal behavior modeling and effective automatic refinement", "paper_id": "WOS:000281174800005"}