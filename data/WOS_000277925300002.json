{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "compositional_reasoning_methods"}, {"score": 0.03867062669566473, "phrase": "compositional_reasoning"}, {"score": 0.004779085953614184, "phrase": "hardware_systems"}, {"score": 0.00474348728309194, "phrase": "reactive_software_systems"}, {"score": 0.00448477700778838, "phrase": "checking_algorithms"}, {"score": 0.00436890075128947, "phrase": "overall_reliability"}, {"score": 0.004287961675700099, "phrase": "direct_methods"}, {"score": 0.004208515754292201, "phrase": "concurrent_composition"}, {"score": 0.004008749730113699, "phrase": "program_states"}, {"score": 0.003876010646939676, "phrase": "individual_processes"}, {"score": 0.0035965032173588753, "phrase": "assume-guarantee_reasoning_paradigm"}, {"score": 0.002625866440129899, "phrase": "reasoning_rule"}, {"score": 0.0024916819803100635, "phrase": "auxiliary_assertions"}, {"score": 0.002373214852820709, "phrase": "component_processes"}, {"score": 0.0022773736136311056, "phrase": "noncircular_reasoning"}, {"score": 0.0021448202319775634, "phrase": "straightforward_manner"}], "paper_keywords": ["Verification", " Algorithms", " Theory", " Compositional reasoning", " syntactically circular reasoning", " assume-guarantee reasoning", " automated reasoning", " concurrent systems"], "paper_abstract": "Hardware systems and reactive software systems can be described as the composition of several concurrently active processes. Automated reasoning based on model checking algorithms can substantially increase confidence in the overall reliability of a system. Direct methods for model checking a concurrent composition, however, usually suffer from the explosion in the number of program states that arises from concurrency. Reasoning compositionally about individual processes helps mitigate this problem. A number of rules have been proposed for compositional reasoning, typically based on an assume-guarantee reasoning paradigm. Reasoning with these rules can be delicate, as some are syntactically circular in nature, in that assumptions and guarantees are mutually dependent. This is known to be a source of unsoundness. In this article, we investigate rules for compositional reasoning from the viewpoint of completeness. We show that several rules are incomplete: that is, there are properties whose validity cannot be established using ( only) these rules. We derive a new, circular, reasoning rule and show it to be sound and complete. We show that the auxiliary assertions needed for completeness need be defined only on the interface of the component processes. We also show that the two main paradigms of circular and noncircular reasoning are closely related, in that a proof of one type can be transformed in a straightforward manner to one of the other type. These results give some insight into the applicability of compositional reasoning methods.", "paper_title": "On the Completeness of Compositional Reasoning Methods", "paper_id": "WOS:000277925300002"}