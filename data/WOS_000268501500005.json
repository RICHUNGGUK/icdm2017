{"auto_keywords": [{"score": 0.03758827602955699, "phrase": "task_model"}, {"score": 0.00481495049065317, "phrase": "arbitrary_anchor_points"}, {"score": 0.00478163886605204, "phrase": "target_sensitive_real-time_applications"}, {"score": 0.004683073921949839, "phrase": "real-time_systems"}, {"score": 0.004634552430216732, "phrase": "execution_windows"}, {"score": 0.004602483094756597, "phrase": "earliest_start_times"}, {"score": 0.004234456398783788, "phrase": "uniform_utility"}, {"score": 0.0041184131734368825, "phrase": "target_demands"}, {"score": 0.003964007795174772, "phrase": "specific_target_point"}, {"score": 0.0037889466472096284, "phrase": "lower_utility"}, {"score": 0.003685067218455088, "phrase": "media_processing"}, {"score": 0.0035222812668916736, "phrase": "gravitational_analogy"}, {"score": 0.003308649946463136, "phrase": "single_task"}, {"score": 0.0031624392548836654, "phrase": "target_point"}, {"score": 0.0028890603352364273, "phrase": "tasks'_importance"}, {"score": 0.002849146732780381, "phrase": "target_points"}, {"score": 0.002584733102974067, "phrase": "arbitrary_point"}, {"score": 0.0025313382638451776, "phrase": "whole_execution"}, {"score": 0.0023776656246300063, "phrase": "scheduling_algorithm"}, {"score": 0.0022963507669678815, "phrase": "best_compromise"}, {"score": 0.002280423827531483, "phrase": "tasks'_interests"}, {"score": 0.002248899833549883, "phrase": "equilibrium_state"}, {"score": 0.0021419510072373756, "phrase": "particular_scheduling_algorithm"}, {"score": 0.0021049977753042253, "phrase": "simulation_study"}], "paper_keywords": ["Utility function", " Task model", " Adaptive", " Target sensitivity"], "paper_abstract": "Classic task models for real-time systems focus on execution windows expressing earliest start times and deadlines of tasks for feasibility. Only within these windows the execution of tasks is feasible, and it is considered of uniform utility. Some tasks, however, have target demands in addition: a task should preferably execute at a specific target point within its execution window, but can execute around this point, albeit at lower utility. Examples of such applications include control and media processing. In this paper, we present a task model based on a gravitational analogy to address these issues. Tasks are considered as massive bobs hanging on a pendulum: a single task, left to itself, will execute at the bottom, the target point. If a force, such as the weight of other tasks, is applied, it can be shifted around this point. Thus, tasks' importance and their utility around target points can be expressed. Since the execution of a task cannot be mapped to a point in time, the model allows tasks to express an arbitrary point with its execution to represent the whole execution. This point is called the anchor point. Moreover, we show an example of a scheduling algorithm for this model which finds an approximation to the best compromise of tasks' interests based on the equilibrium state of a pendulum. Nonetheless, this task model is not restricted to a particular scheduling algorithm. Results from a simulation study show the effectiveness of the approach.", "paper_title": "A gravitational task model with arbitrary anchor points for target sensitive real-time applications", "paper_id": "WOS:000268501500005"}