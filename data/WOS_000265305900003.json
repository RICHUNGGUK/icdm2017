{"auto_keywords": [{"score": 0.039898883497906455, "phrase": "single_software_repository"}, {"score": 0.033148814747548876, "phrase": "monolithic_software_repository"}, {"score": 0.0307997635923216, "phrase": "analysis_technique"}, {"score": 0.00481495049065317, "phrase": "large_software_repository"}, {"score": 0.004742730438544081, "phrase": "future_software_evolution-an_industrial_experience_report"}, {"score": 0.004695183699894267, "phrase": "philips_medical_systems"}, {"score": 0.0044870272550540415, "phrase": "magnetic_resonance"}, {"score": 0.004397487039229447, "phrase": "computed_tomography_systems"}, {"score": 0.003995876175614403, "phrase": "multi-mloc_monolithic_software_repository"}, {"score": 0.00376127170364341, "phrase": "multiple_smaller_repositories"}, {"score": 0.003558294449586273, "phrase": "software's_evolution"}, {"score": 0.003332440548684892, "phrase": "well-known_analysis_techniques"}, {"score": 0.0032989853590079153, "phrase": "namely_formal_concept_analysis"}, {"score": 0.0031845067058084583, "phrase": "sheer_size"}, {"score": 0.003012560489169148, "phrase": "'leveled_approach"}, {"score": 0.0025892330566358503, "phrase": "analysis_techniques"}, {"score": 0.002524688179363081, "phrase": "acceptable_partitioning"}, {"score": 0.0023053339328456234, "phrase": "valuable_lessons"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["formal concept analysis", " software clustering", " reengineering", " industrial", " experience"], "paper_abstract": "Philips Medical Systems produces medical diagnostic imaging products, such as magnetic resonance, X-ray and computed tomography systems. The software of these devices is complex, has been evolving for several decades and is currently a multi-MLOC monolithic software repository. In this paper we report on splitting a single software repository into multiple smaller repositories so that these can be developed independently, easing the software's evolution. For splitting the single software repository, we set up two experiments that involve well-known analysis techniques, namely formal concept analysis and clustering. Because of the sheer size of the monolithic software repository, we also propose to use a 'leveled approach', which implies that the analysis technique is applied in several iterations, whereby in some iterations only part of the application is subjected to the analysis technique. Unfortunately, both analysis techniques failed to produce an acceptable partitioning of the monolithic software repository, even if they are combined with our newly proposed leveled approach. We provide a number of valuable lessons learned, which might prevent others from falling into the same pitfalls. Copyright (C) 2009 John Wiley & Sons, Ltd.", "paper_title": "Splitting a large software repository for easing future software evolution-an industrial experience report", "paper_id": "WOS:000265305900003"}