{"auto_keywords": [{"score": 0.04939815249833027, "phrase": "mass_properties"}, {"score": 0.010916805146275434, "phrase": "surface_integrals"}, {"score": 0.00481495049065317, "phrase": "gpu_computation"}, {"score": 0.004678940805063634, "phrase": "general_shape"}, {"score": 0.00459039896577789, "phrase": "buoyancy_simulation"}, {"score": 0.004503525064934708, "phrase": "solid_dynamics"}, {"score": 0.003939565240409143, "phrase": "mass_property_computations"}, {"score": 0.003791763445590174, "phrase": "rigid_bodies"}, {"score": 0.0036669760226536977, "phrase": "body_changes"}, {"score": 0.003580355398511932, "phrase": "gpu-friendly_algorithm"}, {"score": 0.0034625012596827334, "phrase": "arbitrarily_shaped_body"}, {"score": 0.0033806943112103397, "phrase": "necessary_volume"}, {"score": 0.0032850648549389025, "phrase": "projected_plane"}, {"score": 0.002999695606175278, "phrase": "gpu."}, {"score": 0.002942811795757911, "phrase": "non-convex_shapes"}, {"score": 0.002873247913129334, "phrase": "depth-peeling_algorithm"}, {"score": 0.002648768009464535, "phrase": "mathematical_or_geometric_representation"}, {"score": 0.002372649454733251, "phrase": "graphics_hardware"}, {"score": 0.0022401855403251653, "phrase": "analytic_algorithm"}, {"score": 0.002166349705365602, "phrase": "hydrostatic_buoyancy_simulation"}, {"score": 0.002145703330831668, "phrase": "real-time_applications"}, {"score": 0.0021049977753042253, "phrase": "interactive_games"}], "paper_keywords": ["general-purpose computation on GPUs", " mass property computation", " physics-based animation", " rigid-body dynamics", " buoyancy simulation"], "paper_abstract": "To simulate solid dynamics, we must compute the mass, the center of mass, and the products of inertia about the axes of the body of interest. These mass property computations must be continuously repeated for certain simulations with rigid bodies or as the shape of the body changes. We introduce a GPU-friendly algorithm to approximate the mass properties for an arbitrarily shaped body. Our algorithm converts the necessary volume integrals into surface integrals on a projected plane. It then maps the plane into a framebuffer in order to perform the surface integrals rapidly on the GPU. To deal with non-convex shapes, we use a depth-peeling algorithm. Our approach is image-based; hence, it is not restricted by the mathematical or geometric representation of the body, which means that it can efficiently compute the mass properties of any object that can be rendered on the graphics hardware. We compare the speed and accuracy of our algorithm with an analytic algorithm, and demonstrate it in a hydrostatic buoyancy simulation for real-time applications, such as interactive games.", "paper_title": "Fast GPU computation of the mass properties of a general shape and its application to buoyancy simulation", "paper_id": "WOS:000240381000028"}