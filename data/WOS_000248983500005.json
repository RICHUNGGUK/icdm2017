{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "high_interoperability"}, {"score": 0.043539190163733234, "phrase": "interaction_mismatches"}, {"score": 0.04311955273909451, "phrase": "multiple_levels"}, {"score": 0.004671588539217021, "phrase": "agent-based_approach"}, {"score": 0.004036369952624852, "phrase": "interaction_behaviors"}, {"score": 0.0038964032225585117, "phrase": "architectural_styles"}, {"score": 0.003469676666252421, "phrase": "mismatching_interactions"}, {"score": 0.0033156708990372047, "phrase": "different_architectural_styles"}, {"score": 0.003152531962718477, "phrase": "formal_foundation"}, {"score": 0.0027370835853738626, "phrase": "wrapper-based_solution"}, {"score": 0.002628747284714371, "phrase": "mismatching_assumptions"}, {"score": 0.0024493494346360415, "phrase": "agent-based_implementation"}, {"score": 0.002137137933768807, "phrase": "simple_example"}], "paper_keywords": ["interoperability", " component", " wrapper", " agent", " pi-calculus"], "paper_abstract": "While integrating components into systems, we will be confronted with problems concerned with the interoperability of components due to the interaction mismatches at multiple levels, such as interaction behaviors between components and features imposed by architectural styles. In this paper, we studied the interoperability of components and explored the approach to supporting high interoperability of components involved in mismatching interactions. First, we formalized components involved in different architectural styles in the pi-calculus. Next, we studied the formal foundation of the interoperability of components for reasoning about the conditions under which two heterogeneous components are possible to interoperate and interconnect together properly. Then, we described a wrapper-based solution for integrating components into systems that impose mismatching assumptions about usage of the components. In the end, we presented an agent-based implementation for the solution, in which agents are used to wrap components and can automatically resolve multiple levels of interaction mismatches between components. We also gave a simple example to illustrate our approach.", "paper_title": "Supporting high interoperability of components by adopting an agent-based approach", "paper_id": "WOS:000248983500005"}