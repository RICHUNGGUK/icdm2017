{"auto_keywords": [{"score": 0.025928190174589298, "phrase": "bp"}, {"score": 0.00481495049065317, "phrase": "protograph-based_spatially_coupled_low-density_parity-check"}, {"score": 0.004579147045265106, "phrase": "l_disjoint"}, {"score": 0.004435112270935294, "phrase": "single_coupled_chain"}, {"score": 0.004374772264092067, "phrase": "varying_l"}, {"score": 0.004276016541197123, "phrase": "flexible_family"}, {"score": 0.004237138632255772, "phrase": "code_ensembles"}, {"score": 0.00419861271409079, "phrase": "varying_rates"}, {"score": 0.004160435626849478, "phrase": "frame_lengths"}, {"score": 0.003974673997871831, "phrase": "arbitrary_l."}, {"score": 0.0038849148160362257, "phrase": "resulting_codes"}, {"score": 0.003832031470970347, "phrase": "best_features"}, {"score": 0.0037971749182744334, "phrase": "optimized_irregular_and_regular_codes"}, {"score": 0.0036776458116294986, "phrase": "iterative_belief_propagation"}, {"score": 0.003561865840737996, "phrase": "linear_growth"}, {"score": 0.0035294580355761506, "phrase": "minimum_distance"}, {"score": 0.00349734405943853, "phrase": "block_length"}, {"score": 0.0033410898465226417, "phrase": "sufficiently_large_l"}, {"score": 0.0032955848190195343, "phrase": "bp_thresholds"}, {"score": 0.0031506594873656384, "phrase": "gaussian"}, {"score": 0.003063123420705719, "phrase": "particular_value"}, {"score": 0.002993887707344862, "phrase": "bp_decoding_threshold"}, {"score": 0.0029128614098881253, "phrase": "optimal_maximum"}, {"score": 0.0028863414975346512, "phrase": "posteriori_decoding_threshold"}, {"score": 0.0028470123663391126, "phrase": "uncoupled_ldpc_code"}, {"score": 0.0027954035431845344, "phrase": "variable_nodes"}, {"score": 0.0027573101010593863, "phrase": "coupled_chain"}, {"score": 0.0026461080202599694, "phrase": "error_probability"}, {"score": 0.0024819522818492284, "phrase": "asymptotically_good_ldpc_codes"}, {"score": 0.0024593458703463474, "phrase": "fast_convergence_rates"}, {"score": 0.0023818288346547692, "phrase": "shannon_limit"}, {"score": 0.0021735249249471614, "phrase": "new_way"}, {"score": 0.0021049977753042253, "phrase": "memoryless_binary-input_symmetric-output_channels"}], "paper_keywords": ["Low-density parity-check (LDPC) codes", " LDPC convolutional codes", " spatially coupled codes", " iterative decoding", " belief propagation", " density evolution", " decoding thresholds", " minimum distance", " capacity achieving codes"], "paper_abstract": "In this paper, we construct protograph-based spatially coupled low-density parity-check (LDPC) codes by coupling together a series of L disjoint, or uncoupled, LDPC code Tanner graphs into a single coupled chain. By varying L, we obtain a flexible family of code ensembles with varying rates and frame lengths that can share the same encoding and decoding architecture for arbitrary L. We demonstrate that the resulting codes combine the best features of optimized irregular and regular codes in one design: capacity approaching iterative belief propagation (BP) decoding thresholds and linear growth of minimum distance with block length. In particular, we show that, for sufficiently large L, the BP thresholds on both the binary erasure channel and the binary-input additive white Gaussian noise channel saturate to a particular value significantly better than the BP decoding threshold and numerically indistinguishable from the optimal maximum a posteriori decoding threshold of the uncoupled LDPC code. When all variable nodes in the coupled chain have degree greater than two, asymptotically the error probability converges at least doubly exponentially with decoding iterations and we obtain sequences of asymptotically good LDPC codes with fast convergence rates and BP thresholds close to the Shannon limit. Further, the gap to capacity decreases as the density of the graph increases, opening up a new way to construct capacity achieving codes on memoryless binary-input symmetric-output channels with low-complexity BP decoding.", "paper_title": "Spatially Coupled LDPC Codes Constructed From Protographs", "paper_id": "WOS:000360015900021"}