{"auto_keywords": [{"score": 0.026162434113774377, "phrase": "sdp"}, {"score": 0.00481495049065317, "phrase": "semi-definite_programming"}, {"score": 0.004606023493393774, "phrase": "learning_models"}, {"score": 0.004285594361623147, "phrase": "existing_techniques"}, {"score": 0.004054299982508618, "phrase": "extra_memory_usage"}, {"score": 0.004009555045206973, "phrase": "computational_costs"}, {"score": 0.0039433581938239926, "phrase": "occasional_decreases"}, {"score": 0.0037931018103829427, "phrase": "ensemble_pruning"}, {"score": 0.003668859054928118, "phrase": "good_subset"}, {"score": 0.003628352506247126, "phrase": "ensemble_members"}, {"score": 0.0033945024593626675, "phrase": "original_ensemble"}, {"score": 0.0033384259516301223, "phrase": "subset_selection_problem"}, {"score": 0.003283272764794988, "phrase": "combinatorial_optimization_problem"}, {"score": 0.0031933617014256676, "phrase": "exact_optimal_solution"}, {"score": 0.002987463078971627, "phrase": "approximate_solution"}, {"score": 0.002873524721802591, "phrase": "existing_heuristics"}, {"score": 0.0028417741269408194, "phrase": "simple_greedy_search"}, {"score": 0.002794802975530612, "phrase": "optimization_method"}, {"score": 0.00262910358108176, "phrase": "ensemble_subset_selection_problem"}, {"score": 0.0025570607111118793, "phrase": "quadratic_integer_programming_problem"}, {"score": 0.002486987042061596, "phrase": "-definite_programming"}, {"score": 0.0024054226746197706, "phrase": "solution_technique"}, {"score": 0.0023136311468961125, "phrase": "better_approximate_solutions"}, {"score": 0.0022880528191813083, "phrase": "computational_experiments"}, {"score": 0.0022377394845878268, "phrase": "sdp-based_pruning_algorithm"}, {"score": 0.0021049977753042253, "phrase": "classifier-sharing_study"}], "paper_keywords": ["ensemble pruning", " semi-definite programming", " heuristics", " knowledge sharing"], "paper_abstract": "An ensemble is a group of learning models that jointly solve a problem. However, the ensembles generated by existing techniques are sometimes unnecessarily large, which can lead to extra memory usage, computational costs, and occasional decreases in effectiveness. The purpose of ensemble pruning is to search for a good subset of ensemble members that performs as well as, or better than, the original ensemble. This subset selection problem is a combinatorial optimization problem and thus finding the exact optimal solution is computationally prohibitive. Various heuristic methods have been developed to obtain an approximate solution. However, most of the existing heuristics use simple greedy search as the optimization method, which lacks either theoretical or empirical quality guarantees. In this paper, the ensemble subset selection problem is formulated as a quadratic integer programming problem. By applying semi-definite programming (SDP) as a solution technique, we are able to get better approximate solutions. Computational experiments show that this SDP-based pruning algorithm outperforms other heuristics in the literature. Its application in a classifier-sharing study also demonstrates the effectiveness of the method.", "paper_title": "Ensemble pruning via semi-definite programming", "paper_id": "WOS:000245388800007"}