{"auto_keywords": [{"score": 0.03321547894243722, "phrase": "tabular_expression"}, {"score": 0.01838308384577214, "phrase": "tabular_expressions"}, {"score": 0.010551394903834187, "phrase": "mathematical_expressions"}, {"score": 0.009593685532601062, "phrase": "conventional_mathematical_expressions"}, {"score": 0.00735507717408423, "phrase": "previously_defined_type"}, {"score": 0.006494848226492878, "phrase": "indexed_set"}, {"score": 0.00481495049065317, "phrase": "tabular_mathematical_expressions"}, {"score": 0.004759442693862545, "phrase": "tabular_form"}, {"score": 0.0044653418703126365, "phrase": "software_systems"}, {"score": 0.004046020290832207, "phrase": "trustworthy_tools"}, {"score": 0.0038624981944755813, "phrase": "new_method"}, {"score": 0.0036872695974989565, "phrase": "expression's_constituents"}, {"score": 0.0036341522077780897, "phrase": "restriction_schema"}, {"score": 0.0035199624440843892, "phrase": "well-formed_expressions"}, {"score": 0.0034192594083899026, "phrase": "well-formed_tabular_expression"}, {"score": 0.0033602211267167435, "phrase": "mathematical_expression"}, {"score": 0.00320770578058916, "phrase": "equivalent_expression"}, {"score": 0.002469830206270585, "phrase": "older_approaches"}, {"score": 0.002343970440509428, "phrase": "new_ones"}, {"score": 0.002303455608777205, "phrase": "new_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Tabular expressions", " Software documentation", " Mathematical documentation", " Expression semantics", " Software engineering"], "paper_abstract": "Mathematical expressions in tabular form (also called \"tabular expressions\" or \"tables\") have been shown to be useful for documenting and analysing software systems. They are usually easier to read than conventional mathematical expressions but are no less precise. They can be used wherever mathematical expressions are used. To avoid misunderstandings, and to support users with trustworthy tools, the meaning of these expressions must be fully defined. This paper presents a new method for defining the meaning of tabular expressions. Each definition of an expression type names the expression's constituents, and provides a restriction schema and one or more evaluation schemas. The restriction schema defines the class of well-formed expressions of the type. An evaluation schema maps a well-formed tabular expression of the type to a mathematical expression of a previously defined type. Since the meaning of conventional mathematical expressions is well known, describing an equivalent expression fully defines the meaning of a tabular expression. In this approach, indexation is used to decouple the appearance of a tabular expression from its semantics. A tabular expression is an indexed set of grids; a grid is an indexed set of expressions. The expressions in a grid can be either conventional expressions or tabular expressions of a previously defined type. Defining the meaning of a tabular expression in this way facilitates the building of tools that faithfully implement the semantics. The decoupling of syntax and semantics by means of indices overcomes some limitations of older approaches. The method presented in the paper is illustrated by defining several previously known types of tabular expressions and some new ones. The use of the new model to build a suite of tools for the input, presentation, validation, evaluation, simplification, conversion and composition of tabular expressions is discussed. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Defining the meaning of tabular mathematical expressions", "paper_id": "WOS:000281129600004"}