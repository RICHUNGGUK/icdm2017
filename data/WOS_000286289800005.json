{"auto_keywords": [{"score": 0.0403836663569968, "phrase": "prime_number_encoding"}, {"score": 0.00481495049065317, "phrase": "shorter_length"}, {"score": 0.004329630571352367, "phrase": "finite_alphabet_sigma"}, {"score": 0.0040334640350288, "phrase": "prime_number_encoding_scheme"}, {"score": 0.004001828274595483, "phrase": "chaim_linhart"}, {"score": 0.003970439654470374, "phrase": "ron_shamir"}, {"score": 0.003939344862528468, "phrase": "faster"}, {"score": 0.003877737556673229, "phrase": "character_classes"}, {"score": 0.003817137134650275, "phrase": "j._comput"}, {"score": 0.0037876791115590224, "phrase": "syst"}, {"score": 0.003757772319879594, "phrase": "sci"}, {"score": 0.003527998934981411, "phrase": "new_integer_encoding"}, {"score": 0.0034607182835151218, "phrase": "fourier"}, {"score": 0.003432044343307207, "phrase": "based_algorithm"}, {"score": 0.0030135741897058844, "phrase": "shorter_code_words"}, {"score": 0.0028293966058473476, "phrase": "prime_number_encoding_vertical_bar_sigma_vertical_bar"}, {"score": 0.0026148807877309417, "phrase": "sigma_vertical_bar"}, {"score": 0.0025638362414466278, "phrase": "code_word"}, {"score": 0.0024951623708216134, "phrase": "sigma"}, {"score": 0.002407078478216306, "phrase": "perpendicular_bits"}, {"score": 0.0023694065215394593, "phrase": "prime_encoding"}, {"score": 0.002332322771009122, "phrase": "sigma_vertical_bar_lgm_bits"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Algorithms", " Pattern matching", " Wildcards"], "paper_abstract": "The problem of pattern matching with wildcards is to find all the occurrences of a pattern of length in in a text of length n over a finite alphabet Sigma (both the text and the pattern are allowed to contain wildcards). Based on the prime number encoding scheme (Chaim Linhart, Ron Shamir, Faster pattern matching with character classes using prime number encoding, J. Comput. Syst. Sci. 75 (3) (2009) 155-162), we present a new integer encoding and an efficient fast Fourier transforms based algorithm for this problem. The algorithm takes O(n logm) time to search the pattern in the text by computing one convolution. For matching with wildcards, our encoding uses fewer prime numbers and has shorter code words comparing with the prime number encoding. We use at most 2lg vertical bar Sigma vertical bar prime numbers to encode the symbols while in the prime number encoding vertical bar Sigma vertical bar prime numbers are required. This number reduces to 1.5 lg vertical bar E vertical bar when vertical bar Sigma vertical bar > 40. The code word used in the algorithm is at most 2left perpendicularlg vertical bar Sigma vertical bar right perpendicular inverted right perpendicularlg(5m)inverted left perpendicular bits while in the prime encoding it is at least vertical bar Sigma vertical bar lgm bits. We also show that the length of words can be further reduced by increasing the number of convolutions computed. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Pattern matching with wildcards using words of shorter length", "paper_id": "WOS:000286289800005"}