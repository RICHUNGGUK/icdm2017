{"auto_keywords": [{"score": 0.03486354724889791, "phrase": "web_navigation"}, {"score": 0.03282512993798411, "phrase": "independent_paths"}, {"score": 0.00481495049065317, "phrase": "web_browsing_automation"}, {"score": 0.004777744121315302, "phrase": "applications_quality_control."}, {"score": 0.0042035670399069485, "phrase": "development_process"}, {"score": 0.004075053556360943, "phrase": "final_software_product"}, {"score": 0.0038296485293910026, "phrase": "quality_control"}, {"score": 0.003800026771283179, "phrase": "web_applications"}, {"score": 0.0036695284042874395, "phrase": "functional_and_non-functional_requirements"}, {"score": 0.0034484600692786097, "phrase": "first_step"}, {"score": 0.0032786537599187125, "phrase": "existing_software_artifacts"}, {"score": 0.002952146666681891, "phrase": "real_browsers"}, {"score": 0.0029292922955739963, "phrase": "different_kinds"}, {"score": 0.002668420182908979, "phrase": "reference_architecture"}, {"score": 0.0026477564788515984, "phrase": "open_source_tools"}, {"score": 0.002617059777997427, "phrase": "laboratory_experiment"}, {"score": 0.0025867180355950816, "phrase": "industrial_case_study"}, {"score": 0.0024307237540684076, "phrase": "navigation_paths"}, {"score": 0.0024025371556472557, "phrase": "rich_approach"}, {"score": 0.00238392747425758, "phrase": "model_web_applications"}, {"score": 0.002248863090203165, "phrase": "chinese_postman_problem"}, {"score": 0.002231459689342751, "phrase": "cpp"}, {"score": 0.0021970000365512227, "phrase": "optimal_way"}, {"score": 0.0021049977753042253, "phrase": "directed_graph"}], "paper_keywords": ["Automated Software Testing", " Web Applications", " Web Navigation", " Functional Assessment", " Non-Functional Assessment", " Graph Theory"], "paper_abstract": "Context: Quality control comprises the set of activities aimed to evaluate that software meets its specification and delivers the functionality expected by the consumers. These activities are often removed in the development process and, as a result, the final software product usually lacks quality. Objective: We propose a set of techniques to automate the quality control for web applications from the client-side, guiding the process by functional and non-functional requirements (performance, security, compatibility, usability and accessibility). Method: The first step to achieve automation is to define the structure of the web navigation. Existing software artifacts in the phase of analysis and design are reused. Then, the independent paths of navigation are found, and each path is traversed automatically using real browsers while different kinds of assessments are carried out. Results: The processes and methods proposed in this paper have been implemented by means of a reference architecture and open source tools. A laboratory experiment and an industrial case study have been performed in order to validate the proposal. Conclusion: The definition of navigation paths is a rich approach to model web applications. Grey-box (black-box and white-box) methods have been proved to be very valuable for web assessment. The Chinese Postman Problem (CPP) is an optimal way to find the independent paths in a web navigation modeled as a directed graph.", "paper_title": "WEB BROWSING AUTOMATION FOR APPLICATIONS QUALITY CONTROL", "paper_id": "WOS:000359178000006"}