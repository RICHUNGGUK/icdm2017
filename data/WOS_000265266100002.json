{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "transactional_memory_systems"}, {"score": 0.00447251540886613, "phrase": "run-time_performance_losses"}, {"score": 0.004185108816866677, "phrase": "starvation_effects"}, {"score": 0.003974349782102708, "phrase": "unordered_transactions"}, {"score": 0.003830312347175889, "phrase": "demand-driven_basis"}, {"score": 0.003584025547693836, "phrase": "design_issues"}, {"score": 0.003531474887552889, "phrase": "commit_arbitration_policies"}, {"score": 0.0032558762499901727, "phrase": "wasted_computation"}, {"score": 0.002706659627293686, "phrase": "transactional_coherence"}, {"score": 0.00266693888510356, "phrase": "consistency_protocol"}, {"score": 0.002570162055835289, "phrase": "scalable_version"}, {"score": 0.0024768883044869023, "phrase": "proposed_schemes"}, {"score": 0.002317423416027688, "phrase": "common-case_performance"}, {"score": 0.0022665781920241245, "phrase": "quite_modest_complexity"}, {"score": 0.0022168460543913787, "phrase": "baseline_protocol"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["multiprocessors", " transactional memory", " starvation"], "paper_abstract": "Transactional memory systems trade ease of programming with run-time performance losses in handling transactions. This paper focuses on starvation effects that show up in systems where unordered transactions are committed on a demand-driven basis. Such simple commit arbitration policies are prone to starvation. The design issues for commit arbitration policies are analyzed and novel policies that reduce the amount of wasted computation due to roll-back and, most important, that avoid starvation are proposed. We analyze in detail how to incorporate them in the transactional coherence and consistency protocol as well as a scalable version of it. The proposed schemes are shown to have no impact on the common-case performance and add quite modest complexity to the baseline protocol. Copyright (C) 2008 John Wiley & Sons, Ltd.", "paper_title": "Schemes for avoiding starvation in transactional memory systems", "paper_id": "WOS:000265266100002"}