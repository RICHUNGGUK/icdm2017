{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "external_memory_planar_point_location"}, {"score": 0.004736045157669388, "phrase": "logarithmic_updates"}, {"score": 0.004658426838467567, "phrase": "point_location"}, {"score": 0.0045443671106012405, "phrase": "extremely_well-studied_problem"}, {"score": 0.00443308765153716, "phrase": "internal_memory_models"}, {"score": 0.004218602458288531, "phrase": "external_memory_model"}, {"score": 0.003757480190200645, "phrase": "general_planar_subdivisions"}, {"score": 0.0036352070472201086, "phrase": "linear_space"}, {"score": 0.003459191419478298, "phrase": "n_segments"}, {"score": 0.0026543514413663893, "phrase": "previous_best_known_linear_space_dynamic_structure"}, {"score": 0.0021049977753042253, "phrase": "previous_structures"}], "paper_keywords": ["Planar point location", " External memory model", " I/O model", " Vertical ray shooting query", " Dynamic data structure"], "paper_abstract": "Point location is an extremely well-studied problem both in internal memory models and recently also in the external memory model. In this paper, we present an I/O-efficient dynamic data structure for point location in general planar subdivisions. Our structure uses linear space to store a subdivision with N segments. Insertions and deletions of segments can be performed in amortized O(log(B) N) I/Os and queries can be answered in O(log(B)(2) N) I/Os in the worst-case. The previous best known linear space dynamic structure also answers queries in O(log(B)(2) N) I/Os, but only supports insertions in amortized O(log(B)(2) N) I/Os. Our structure is also considerably simpler than previous structures.", "paper_title": "External Memory Planar Point Location with Logarithmic Updates", "paper_id": "WOS:000299482700021"}