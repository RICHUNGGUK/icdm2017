{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "software_development_process."}, {"score": 0.004074212307838049, "phrase": "software_system"}, {"score": 0.003633927813203731, "phrase": "system_behaviour"}, {"score": 0.0030206579994328975, "phrase": "underlying_xml_language"}, {"score": 0.002600661525224505, "phrase": "test_cases"}, {"score": 0.0024667783849055634, "phrase": "intermediate_models"}, {"score": 0.002339771435910601, "phrase": "semi-formal_approaches"}, {"score": 0.0021049977753042253, "phrase": "practical_case_studies"}], "paper_keywords": ["System Behaviour", " Modelling Formal Language", " Automatic Artifact Derivation", " XML Technologies", " Knowledge Representation"], "paper_abstract": "In this paper we present SyBeL (System Behaviour modelling Language), an XML based formalism for software system modelling. In particular, SyBeL focuses on the description of the system behaviour in order to capture its functional requirements and has been designed to fulfill some of the most trendy software engineering issues. The use of the underlying XML language makes the artifacts generated by SyBeL immediately available to further automatic manipulation (e.g., to automatically generate test cases) without the need of intermediate models, as usually done in semi-formal approaches. Moreover, we are experimenting SyBeL on a variety of practical case studies.", "paper_title": "SyBeL: A SYSTEM MODELLING LANGUAGE ENHANCING AUTOMATIC SUPPORT IN THE SOFTWARE DEVELOPMENT PROCESS", "paper_id": "WOS:000320617500006"}