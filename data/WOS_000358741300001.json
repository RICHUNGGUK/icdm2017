{"auto_keywords": [{"score": 0.042274501183610966, "phrase": "bisection"}, {"score": 0.00481495049065317, "phrase": "parameterized_complexity"}, {"score": 0.004775531918452571, "phrase": "computing_balanced_partitions"}, {"score": 0.004743389980349277, "phrase": "graphs"}, {"score": 0.004678384952779725, "phrase": "balanced_partition"}, {"score": 0.004471530397729526, "phrase": "equal-sized_parts"}, {"score": 0.004362564831572539, "phrase": "bisection_problem"}, {"score": 0.004256243266481051, "phrase": "k_edges"}, {"score": 0.003920128102807887, "phrase": "constant_cliquewidth"}, {"score": 0.003746673633703251, "phrase": "fpt_algorithms"}, {"score": 0.003700709435644458, "phrase": "well-studied_parameters"}, {"score": 0.0036553070575015344, "phrase": "cluster_vertex_deletion_number"}, {"score": 0.003625347557965931, "phrase": "feedback_vertex_set"}, {"score": 0.003464890914694523, "phrase": "polynomial-size_kernels"}, {"score": 0.0033664873319204027, "phrase": "vertex_bisection_problem"}, {"score": 0.0030497740719977835, "phrase": "removed_vertices"}, {"score": 0.00292674497467906, "phrase": "constant_number_c"}, {"score": 0.0029027394930867902, "phrase": "connected_components"}, {"score": 0.0028670988845838296, "phrase": "latter_condition"}, {"score": 0.002762774046280398, "phrase": "vertex_bisection"}, {"score": 0.0024821782596371536, "phrase": "additional_running_time_factors"}, {"score": 0.0023819914954155905, "phrase": "substantial_speed-up"}, {"score": 0.002333421318779658, "phrase": "corresponding_task"}, {"score": 0.002239225269052105, "phrase": "maximum_degree"}, {"score": 0.0021049977753042253, "phrase": "vertex_cover_number"}], "paper_keywords": ["Bisection", " NP-hard problems", " Problem kernelization", " Cliquewidth", " Treewidth reduction"], "paper_abstract": "A balanced partition is a clustering of a graph into a given number of equal-sized parts. For instance, the BISECTION problem asks to remove at most k edges in order to partition the vertices into two equal-sized parts. We prove that BISECTION is FPT for the distance to constant cliquewidth if we are given the deletion set. This implies FPT algorithms for some well-studied parameters such as cluster vertex deletion number and feedback vertex set. However, we show that BISECTION does not admit polynomial-size kernels for these parameters. For the VERTEX BISECTION problem, vertices need to be removed in order to obtain two equal-sized parts. We show that this problem is FPT for the number of removed vertices k if the solution cuts the graph into a constant number c of connected components. The latter condition is unavoidable, since we also prove that VERTEX BISECTION is W[1]-hard w.r.t. (k, c). Our algorithms for finding bisections can easily be adapted to finding partitions into d equal-sized parts, which entails additional running time factors of n(O(d)). We show that a substantial speed-up is unlikely since the corresponding task is W[1]-hard w.r.t. d, even on forests of maximum degree two. We can, however, show that it is FPT for the vertex cover number.", "paper_title": "On the Parameterized Complexity of Computing Balanced Partitions in Graphs", "paper_id": "WOS:000358741300001"}