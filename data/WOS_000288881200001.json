{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "file_access_control"}, {"score": 0.021640301872690476, "phrase": "osd"}, {"score": 0.004523455475492876, "phrase": "object-based_storage_devices"}, {"score": 0.004394910907549057, "phrase": "powerful_storage_security"}, {"score": 0.004352876088312741, "phrase": "rich_semantics"}, {"score": 0.0035741900278634616, "phrase": "vital_challenges"}, {"score": 0.002677964894127131, "phrase": "different_access_permissions"}, {"score": 0.0026268961477241026, "phrase": "file's_internal_structure"}, {"score": 0.002527654365712841, "phrase": "finer-grained_access_control"}, {"score": 0.00242047093248845, "phrase": "osd_standard"}, {"score": 0.002198242191529977, "phrase": "osd_reference_implementation"}, {"score": 0.0021667202816508264, "phrase": "intel"}, {"score": 0.002145942273032774, "phrase": "testing_results"}, {"score": 0.0021049977753042253, "phrase": "extra_overheads"}], "paper_keywords": ["object-based storage", " access control", " intrusion detection"], "paper_abstract": "This paper presents a proposal to embed the file access control into object-based storage devices (OSD) to achieve powerful storage security with rich semantics; and two application prototypes, the OSD-based intrusion detection (ID) and the finer-grained (than the file-level) access control, are implemented to show its feasibility. To embed file access control into storage, one of vital challenges is how to connect a file with its corresponding storage units and its access control rule. In this design, OSD itself can complete the connection-for ID, the one (file) to one (object) relationship is used to link files and their storage objects/access rules together by tie storage. As the relationship is extended to one to more, one file can be divided into several objects in accordance with its access control semantics; then assigning users with different access permissions based on the file's internal structure (which is the meaning of the finer-grained access control) is feasible. In addition, the OSD standard is discussed to extend to define new object attributes for file access control. Both prototypes are built based on the OSD reference implementation provided by Intel. Testing results show that the extra overheads introduced by this design are acceptable.", "paper_title": "EMPLOYING OBJECT-BASED STORAGE DEVICES TO EMBED FILE ACCESS CONTROL IN STORAGE", "paper_id": "WOS:000288881200001"}