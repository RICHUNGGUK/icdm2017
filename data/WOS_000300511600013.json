{"auto_keywords": [{"score": 0.03897200869072899, "phrase": "k-lut"}, {"score": 0.00481495049065317, "phrase": "fpga_logic_density"}, {"score": 0.004773904938276846, "phrase": "synthesis-inspired_architecture"}, {"score": 0.004632968695963776, "phrase": "logic_synthesis"}, {"score": 0.004307700591183651, "phrase": "associated_technology_mapping_algorithm"}, {"score": 0.004234532601573088, "phrase": "improved_logic_density"}, {"score": 0.004127094600862448, "phrase": "\"extended\"_logic_element"}, {"score": 0.00409188863874203, "phrase": "slightly_modified_k-input_lookup_tables"}, {"score": 0.0037719988989298983, "phrase": "silicon_area"}, {"score": 0.003629291866667764, "phrase": "half_the_area"}, {"score": 0.003447349911141396, "phrase": "non-inverting_paths"}, {"score": 0.003388745581055085, "phrase": "circuit's_and-inverter_graph"}, {"score": 0.0033598193155738453, "phrase": "aig"}, {"score": 0.003232653376857698, "phrase": "proposed_logic_element_architectures"}, {"score": 0.0031640918630415566, "phrase": "general_family"}, {"score": 0.003137074867443131, "phrase": "logic_element_architectures"}, {"score": 0.0030969799559421806, "phrase": "present_results"}, {"score": 0.002553382046204689, "phrase": "depth_reduction"}, {"score": 0.00249919111154604, "phrase": "k-input"}, {"score": 0.0024148618915672353, "phrase": "considerably_less_area"}, {"score": 0.0023942269247089277, "phrase": "extended_k-luts"}, {"score": 0.002274059352027924, "phrase": "small_fraction"}, {"score": 0.0021049977753042253, "phrase": "heterogeneous_logic_block_architecture"}], "paper_keywords": ["Architecture", " area", " field-programmable gate arrays (FPGAs)", " logic synthesis", " optimization"], "paper_abstract": "We leverage properties of the logic synthesis netlist to define both a new field-programmable gate-array (FPGA) logic element (function generator) architecture and an associated technology mapping algorithm that together provide improved logic density. We demonstrate that an \"extended\" logic element with slightly modified K-input lookup tables (LUTs) achieves much of the benefit of an architecture with K + 1-input LUTs, while consuming silicon area close to a K-LUT (a K-LUT requires half the area of a K + 1-LUT). We introduce the notion of \"non-inverting paths\" in a circuit's AND-inverter graph (AIG) and show their utility in mapping into the proposed logic element architectures. We propose a general family of logic element architectures, and present results showing that they offer a variety of area/performance tradeoffs. One of our key results demonstrates that while circuits mapped to a traditional 5-LUT architecture need 15% more LUTs and have 14% more depth than a 6-LUT architecture, our extended 5-LUT architecture requires only 7% more LUTs and 5% more depth than 6-LUTs, on average. Nearly all of the depth reduction associated with moving from K-input to K + 1-input LUTs can be achieved with considerably less area using extended K-LUTs. We further show that 6-LUT optimal mapping depths can be achieved with a small fraction of the LUTs in hardware being 6-LUTs and the remainder being extended 5-LUTs, suggesting that a heterogeneous logic block architecture may prove to be advantageous.", "paper_title": "Raising FPGA Logic Density Through Synthesis-Inspired Architecture", "paper_id": "WOS:000300511600013"}