{"auto_keywords": [{"score": 0.04959913342990779, "phrase": "run_length_encoding"}, {"score": 0.00481495049065317, "phrase": "optimal_paths"}, {"score": 0.00464811139983244, "phrase": "novel_approach"}, {"score": 0.004601508848655033, "phrase": "compressed_path_databases"}, {"score": 0.004555371402128666, "phrase": "space_efficient_oracles"}, {"score": 0.004397487039229447, "phrase": "first_edge"}, {"score": 0.004331501320993783, "phrase": "shortest_path"}, {"score": 0.004245051445971095, "phrase": "query_running_times"}, {"score": 0.004056769841308405, "phrase": "state-of-the-art_first-move_oracles"}, {"score": 0.003799397093447221, "phrase": "compression_approach"}, {"score": 0.0036491673002304326, "phrase": "first-move_matrix"}, {"score": 0.003540398603661584, "phrase": "rle"}, {"score": 0.0032658649336454923, "phrase": "convincing_margin"}, {"score": 0.003073988343893906, "phrase": "first_tractability_analysis"}, {"score": 0.0030278017562213265, "phrase": "compression_scheme"}, {"score": 0.002821247621250663, "phrase": "minimum_size"}, {"score": 0.0027929100418926725, "phrase": "general_directed_and_undirected_graphs"}, {"score": 0.0026431295553554558, "phrase": "np"}, {"score": 0.002437012847684331, "phrase": "articulation_points"}, {"score": 0.0023405257495466352, "phrase": "independent_parts"}, {"score": 0.0022937210378944457, "phrase": "corresponding_reduction"}, {"score": 0.002158836285985314, "phrase": "simple_and_tractable_algorithms"}, {"score": 0.002137137933768807, "phrase": "linear_running_time"}, {"score": 0.0021049977753042253, "phrase": "optimal_compression_results"}], "paper_keywords": [""], "paper_abstract": "We introduce a novel approach to Compressed Path Databases, space efficient oracles used to very quickly identify the first edge on a shortest path. Our algorithm achieves query running times on the 100 nanosecond scale, being significantly faster than state-of-the-art first-move oracles from the literature. Space consumption is competitive, due to a compression approach that rearranges rows and columns in a first-move matrix and then performs run length encoding (RLE) on the contents of the matrix. One variant of our implemented system was, by a convincing margin, the fastest entry in the 2014 Grid-Based Path Planning Competition. We give a first tractability analysis for the compression scheme used by our algorithm. We study the complexity of computing a database of minimum size for general directed and undirected graphs. We find that in both cases the problem is NP-complete. We also show that, for graphs which can be decomposed along articulation points, the problem can be decomposed into independent parts, with a corresponding reduction in its level of difficulty. In particular, this leads to simple and tractable algorithms with linear running time which yield optimal compression results for trees.", "paper_title": "Compressing Optimal Paths with Run Length Encoding", "paper_id": "WOS:000370577800001"}