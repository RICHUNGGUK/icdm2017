{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "symmetric_tridiagonal_eigensolvers"}, {"score": 0.0047657990129472355, "phrase": "lapack"}, {"score": 0.004621279527317074, "phrase": "positive_example"}, {"score": 0.004550669123303854, "phrase": "software_library"}, {"score": 0.004278807087784626, "phrase": "installation_time"}, {"score": 0.003861175855298779, "phrase": "installation_process"}, {"score": 0.003782655283668953, "phrase": "algorithm_developer's_side"}, {"score": 0.0035932440062595252, "phrase": "algorithm_behavior"}, {"score": 0.0035021127041237887, "phrase": "problem_settings"}, {"score": 0.00332670230152448, "phrase": "difficult_test_cases"}, {"score": 0.003209152260950748, "phrase": "particular_challenges"}, {"score": 0.0030798711656591948, "phrase": "extreme_behavior"}, {"score": 0.002940626369102927, "phrase": "comprehensive_collection"}, {"score": 0.0028221322455573624, "phrase": "new_or_competing_algorithm"}, {"score": 0.0027363971333961967, "phrase": "similar_way"}, {"score": 0.002546316721939373, "phrase": "lapack."}, {"score": 0.0024311346712789553, "phrase": "carefully_chosen_test_matrices"}, {"score": 0.002357249810661667, "phrase": "portable_testing_framework"}, {"score": 0.002309242063033298, "phrase": "easy_testing"}, {"score": 0.0022856052476424344, "phrase": "data_processing"}, {"score": 0.0022047613106966723, "phrase": "algorithmic_choices"}, {"score": 0.002159852420283463, "phrase": "threshold_studies"}, {"score": 0.0021267708018655493, "phrase": "performance_comparisons"}, {"score": 0.0021049977753042253, "phrase": "different_architectures"}], "paper_keywords": ["algorithms", " design", " eigenvalues", " eigenvectors", " symmetric matrix", " LAPACK", " accuracy", " performance", " test matrices", " numerical software", " design", " implementation", " testing"], "paper_abstract": "LAPACK is often mentioned as a positive example of a software library that encapsulates complex, robust, and widely used numerical algorithms for a wide range of applications. At installation time, the user has the option of running a ( limited) number of test cases to verify the integrity of the installation process. On the algorithm developer's side, however, more exhaustive tests are usually performed to study algorithm behavior on a variety of problem settings and also computer architectures. In this process, difficult test cases need to be found that reflect particular challenges of an application or push algorithms to extreme behavior. These tests are then assembled into a comprehensive collection, therefore making it possible for any new or competing algorithm to be stressed in a similar way. This article describes an infrastructure for exhaustively testing the symmetric tridiagonal eigensolvers implemented in LAPACK. It consists of two parts: a selection of carefully chosen test matrices with particular idiosyncrasies and a portable testing framework that allows for easy testing and data processing. The tester facilitates experiments with algorithmic choices, parameter and threshold studies, and performance comparisons on different architectures.", "paper_title": "Algorithm 880: A testing infrastructure for symmetric tridiagonal eigensolvers", "paper_id": "WOS:000259432800008"}