{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "model-driven_automation_for_simulation-based_functional_verification"}, {"score": 0.004755054742217193, "phrase": "developing_testbenches"}, {"score": 0.004695900553353526, "phrase": "dynamic_functional_verification"}, {"score": 0.004637478829869904, "phrase": "hardware_designs"}, {"score": 0.004551199992546761, "phrase": "software-intensive_process"}, {"score": 0.004410938507689426, "phrase": "critical_path"}, {"score": 0.0043560464825349275, "phrase": "electronic_system_design"}, {"score": 0.004274981117736524, "phrase": "increasing_capabilities"}, {"score": 0.00422177384286051, "phrase": "electronic_components"}, {"score": 0.004040688646993605, "phrase": "complex_verification_environments"}, {"score": 0.0036324746826127997, "phrase": "model-driven_software_engineering"}, {"score": 0.0034332736827447654, "phrase": "code_quality"}, {"score": 0.003327349929456035, "phrase": "high-level_system_models"}, {"score": 0.0031646057802503526, "phrase": "verification_testbench_decomposition"}, {"score": 0.0030862341714020694, "phrase": "higher_levels"}, {"score": 0.002935248513348432, "phrase": "aspect-oriented_paradigm"}, {"score": 0.0028268629720802772, "phrase": "model_level"}, {"score": 0.002493592357827492, "phrase": "aspect-oriented_model-driven_engineering_process"}, {"score": 0.0023864566654035924, "phrase": "hardware_verification_testbenches"}, {"score": 0.0022413233627905696, "phrase": "modularized_design"}, {"score": 0.0022133711375320244, "phrase": "automatic_transformation"}, {"score": 0.0021857667493036786, "phrase": "verification_environment-specific_models"}, {"score": 0.0021049977753042253, "phrase": "industry_case_study"}], "paper_keywords": ["Design", " Languages", " Verification", " Model-based software engineering", " theme/UML", " code generation", " aspect-oriented", " e hardware verification language", " function verification"], "paper_abstract": "Developing testbenches for dynamic functional verification of hardware designs is a software-intensive process that lies on the critical path of electronic system design. The increasing capabilities of electronic components is contributing to the construction of complex verification environments that are increasingly difficult to understand, maintain, extend, and reuse across projects. Model-driven software engineering addresses issues of complexity, productivity, and code quality through the use of high-level system models and subsequent automatic transformations. Reasoning about verification testbench decomposition becomes simpler at higher levels of abstraction. In particular, the aspect-oriented paradigm, when applied at the model level, can minimize the overlap in functionality between modules, improving maintainability and reusability. This article presents an aspect-oriented model-driven engineering process and toolset for the development of hardware verification testbenches. We illustrate how this process and toolset supports modularized design and automatic transformation to verification environment-specific models and source code through an industry case study.", "paper_title": "Model-Driven Automation for Simulation-Based Functional Verification", "paper_id": "WOS:000307079000013"}