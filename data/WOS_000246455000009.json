{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "comprehensive_architecture"}, {"score": 0.004413846562278824, "phrase": "nested_transactions"}, {"score": 0.004046020290832207, "phrase": "transactional_handlers"}, {"score": 0.0035507457285983268, "phrase": "two-phase_commit"}, {"score": 0.0027341763737751467, "phrase": "seamless_integration"}, {"score": 0.0025059724686541263, "phrase": "transactional_memory"}, {"score": 0.0022967713922705, "phrase": "modern_programming_languages"}, {"score": 0.0021049977753042253, "phrase": "runtime_environments"}], "paper_keywords": [""], "paper_abstract": "This comprehensive architecture supports nested transactions, transactional handlers, and two-phase commit. The result is a seamless integration of transactional memory with modern programming languages and runtime environments.", "paper_title": "Transactional memory: The hardware-software interface", "paper_id": "WOS:000246455000009"}