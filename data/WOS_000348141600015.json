{"auto_keywords": [{"score": 0.03962728690878925, "phrase": "window_resources"}, {"score": 0.03454205138659384, "phrase": "instruction_window"}, {"score": 0.013658824459335982, "phrase": "memory_wall"}, {"score": 0.010454414298606548, "phrase": "ilp"}, {"score": 0.01037892456047311, "phrase": "mlp."}, {"score": 0.00481495049065317, "phrase": "superscalar_processors"}, {"score": 0.004745362527093198, "phrase": "available_parallelism"}, {"score": 0.004710944813540894, "phrase": "single-thread_performance"}, {"score": 0.00454254773622547, "phrase": "ever_increasing_transistor_budget"}, {"score": 0.004332559296185432, "phrase": "speed_gap"}, {"score": 0.004254393078576148, "phrase": "main_memory"}, {"score": 0.004132237700479874, "phrase": "promising_method"}, {"score": 0.004028220740657591, "phrase": "out-of-order_execution"}, {"score": 0.003955523458325766, "phrase": "instruction_window_resources"}, {"score": 0.003912533878506028, "phrase": "memory-level_parallelism"}, {"score": 0.0037315599283579593, "phrase": "clock_cycle_time"}, {"score": 0.0035459819741057836, "phrase": "instruction-level_parallelism"}, {"score": 0.0034066464009965425, "phrase": "multiple_clock_cycles"}, {"score": 0.0033329590158056935, "phrase": "dynamic_scheme"}, {"score": 0.0032253960472377356, "phrase": "predicted_available_parallelism"}, {"score": 0.003076128045172553, "phrase": "mlp"}, {"score": 0.0026878636586288363, "phrase": "improved_performance"}, {"score": 0.002535492891830764, "phrase": "ilp._our_evaluation_results"}, {"score": 0.0024715695446993107, "phrase": "proposed_scheme"}, {"score": 0.002453602802736223, "phrase": "nearly_the_best_performance"}, {"score": 0.0024268966855267153, "phrase": "fixed-size_resources"}, {"score": 0.0023570895666021664, "phrase": "performance_improvement"}, {"score": 0.0022976536579329514, "phrase": "conventional_processor"}, {"score": 0.002272641094287882, "phrase": "additional_cost"}, {"score": 0.0022072611570187334, "phrase": "conventional_processor_core"}, {"score": 0.0021515951441422082, "phrase": "entire_processor_chip"}, {"score": 0.002128169201317242, "phrase": "evaluation_results"}], "paper_keywords": ["microprocessor", " superscalar processor", " memory-level parallelism", " instruction-level parallelism"], "paper_abstract": "Single-thread performance has not improved much over the past few years, despite an ever increasing transistor budget. One of the reasons for this is that there is a speed gap between the processor and main memory, known as the memory wall. A promising method to overcome this memory wall is aggressive out-of-order execution by extensively enlarging the instruction window resources to exploit memory-level parallelism (MLP). However, simply enlarging the window resources lengthens the clock cycle time. Although pipelining the resources solves this problem, it in turn prevents instruction-level parallelism (ILP) from being exploited because issuing instructions requires multiple clock cycles. This paper proposed a dynamic scheme that adaptively resizes the instruction window based on the predicted available parallelism, either ILP or MLP. Specifically, if the scheme predicts that MLP is available during execution, the instruction window is enlarged and the window resources are pipelined, thereby exploiting MLP. Conversely, if the scheme predicts that less MLP is available, that is, ILP is exploitable for improved performance, the instruction window is shrunk and the window resources are de-pipelined, thereby exploiting ILP. Our evaluation results using the SPEC2006 benchmark programs show that the proposed scheme achieves nearly the best performance possible with fixed-size resources. On average, our scheme realizes a performance improvement of 21% over that of a conventional processor, with additional cost of only 6% of the area of the conventional processor core or 3% of that of the entire processor chip. The evaluation results also show 8% better energy efficiency in terms of 1/EDP (energy-delay product).", "paper_title": "MLP-Aware Dynamic Instruction Window Resizing in Superscalar Processors for Adaptively Exploiting Available Parallelism", "paper_id": "WOS:000348141600015"}