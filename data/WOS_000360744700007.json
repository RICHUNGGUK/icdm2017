{"auto_keywords": [{"score": 0.0458078008187391, "phrase": "mantis"}, {"score": 0.00481495049065317, "phrase": "execution_time"}, {"score": 0.0044968982227349625, "phrase": "smart_mobile_devices"}, {"score": 0.004199766284749713, "phrase": "computational_resource_consumption"}, {"score": 0.004147891319525806, "phrase": "crc"}, {"score": 0.004071249707923223, "phrase": "android_applications"}, {"score": 0.003849711329589429, "phrase": "key_insight"}, {"score": 0.0037318666008429014, "phrase": "program_codes"}, {"score": 0.0032546105164772995, "phrase": "program_analysis"}, {"score": 0.0032143649757754595, "phrase": "machine_learning"}, {"score": 0.003135356056324338, "phrase": "concise_crc_models"}, {"score": 0.003039311963787733, "phrase": "program_execution"}, {"score": 0.0028737647829311587, "phrase": "program's_crc_metric"}, {"score": 0.0027341763737751467, "phrase": "program's_input"}, {"score": 0.00266693888510356, "phrase": "program_slicing"}, {"score": 0.0026175952455594277, "phrase": "evaluation_time"}, {"score": 0.0025059724686541263, "phrase": "executable_code_snippets"}, {"score": 0.00231111848128734, "phrase": "seven_android_apps"}, {"score": 0.0022825131641434964, "phrase": "estimation_error"}, {"score": 0.0021715812867126884, "phrase": "predictor_code_spending"}, {"score": 0.0021049977753042253, "phrase": "galaxy_nexus"}], "paper_keywords": ["Prediction", " program analysis", " machine learning", " slicing", " smartphone", " computational resource consumption"], "paper_abstract": "We present Mantis, a framework for predicting the computational resource consumption (CRC) of Android applications on given inputs accurately, and efficiently. A key insight underlying Mantis is that program codes often contain features that correlate with performance and these features can be automatically computed efficiently. Mantis synergistically combines techniques from program analysis and machine learning. It constructs concise CRC models by choosing from many program execution features only a handful that are most correlated with the program's CRC metric yet can be evaluated efficiently from the program's input. We apply program slicing to reduce evaluation time of a feature and automatically generate executable code snippets for efficiently evaluating features. Our evaluation shows that Mantis predicts four CRC metrics of seven Android apps with estimation error in the range of 0-11.1 percent by executing predictor code spending at most 1.3 percent of their execution time on Galaxy Nexus.", "paper_title": "Mantis: Efficient Predictions of Execution Time, Energy Usage, Memory Usage and Network Usage on Smart Mobile Devices", "paper_id": "WOS:000360744700007"}