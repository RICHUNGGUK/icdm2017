{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "matrix_multiplication"}, {"score": 0.004658426838467567, "phrase": "peano's_space_filling_curve"}, {"score": 0.004557055535845745, "phrase": "cache"}, {"score": 0.00327356326590461, "phrase": "cache_oblivious_algorithm"}, {"score": 0.00280496585980086, "phrase": "peano_space"}, {"score": 0.0026543514413663893, "phrase": "block_recursive_approach"}, {"score": 0.0024569466759289055, "phrase": "memory_access"}, {"score": 0.00240328454980006, "phrase": "matrix_elements"}, {"score": 0.0021049977753042253, "phrase": "cache_performance"}], "paper_keywords": [""], "paper_abstract": "Cache oblivious algorithms are algorithms that are designed to inherently exploit any kind of cache memory-regardless of its size or architecture. In this article, we discuss a cache oblivious algorithm for matrix multiplication. The elements of the matrices are stored according to a Peano space filling curve. A block recursive approach then leads to an algorithm where memory access to matrix elements is strictly local. Consequently, the algorithm shows several interesting properties considering cache performance, prefetching strategies, or even parallelization.", "paper_title": "A cache oblivious algorithm for matrix multiplication based on Peano's space filling curve", "paper_id": "WOS:000238107100126"}