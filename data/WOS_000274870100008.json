{"auto_keywords": [{"score": 0.04791490314295839, "phrase": "dem"}, {"score": 0.015567044334248294, "phrase": "cuda"}, {"score": 0.00481495049065317, "phrase": "parallel_drainage_network_computation"}, {"score": 0.004759635663291431, "phrase": "cuda._drainage"}, {"score": 0.004650896226390719, "phrase": "digital_elevation_models"}, {"score": 0.004466519142879166, "phrase": "widely_studied_problem"}, {"score": 0.004264697351852424, "phrase": "satellite_technology"}, {"score": 0.004119313626110943, "phrase": "digitalized_images"}, {"score": 0.003777088546146369, "phrase": "rapid_growth"}, {"score": 0.0037336520904376687, "phrase": "cpu_power"}, {"score": 0.0036907133026806327, "phrase": "memory_size"}, {"score": 0.0035648266669315943, "phrase": "dem_algorithms"}, {"score": 0.003306559295382181, "phrase": "improved_running_times"}, {"score": 0.0032309093154028663, "phrase": "dem_dimensions"}, {"score": 0.003138768436081888, "phrase": "parallel_computation"}, {"score": 0.003031650815900696, "phrase": "run_times"}, {"score": 0.0029967610945411593, "phrase": "recently_developed_graphics_processing_units"}, {"score": 0.00282822695516646, "phrase": "computer_graphics"}, {"score": 0.0027795345823932406, "phrase": "general_purpose_computation"}, {"score": 0.00273167822885383, "phrase": "so-called_gpgpu."}, {"score": 0.002623184850933423, "phrase": "parallel_characteristics"}, {"score": 0.002548331088496964, "phrase": "drainage_network_determination"}, {"score": 0.002528044326395535, "phrase": "nvidia."}, {"score": 0.0024899850926034567, "phrase": "c-oriented_language"}, {"score": 0.002363532907211947, "phrase": "simple_algorithms"}, {"score": 0.002309408211203032, "phrase": "low-cost_technology"}, {"score": 0.0022696277881969896, "phrase": "high_performance_response"}, {"score": 0.0022305310659333864, "phrase": "cpu_improvements"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["GPU", " GPGPU", " CUDA", " Drainage network", " D8 algorithm"], "paper_abstract": "Drainage networks determination from digital elevation models (DEM) has been a widely studied problem in the last three decades. During this time, satellite technology has been improving and optimizing digitalized images, and computers have been increasing their capabilities to manage such a huge quantity of information. The rapid growth of CPU power and memory size has concentrated the discussion of DEM algorithms on the accuracy of their results more than their running times. However, obtaining improved running times remains crucial when DEM dimensions and their resolutions increase. Parallel computation provides an opportunity to reduce run times. Recently developed graphics processing units (GPUs) are computationally fast not only in Computer Graphics but in General Purpose Computation, the so-called GPGPU. In this paper we explore the parallel characteristics of these GPUs for drainage network determination, using the C-oriented language of CUDA developed by NVIDIA. The results are simple algorithms that run on low-cost technology with a high performance response, obtaining CPU improvements of up to 8x. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Parallel drainage network computation on CUDA", "paper_id": "WOS:000274870100008"}