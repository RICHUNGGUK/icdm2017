{"auto_keywords": [{"score": 0.028301863114920358, "phrase": "dac_tree"}, {"score": 0.00481495049065317, "phrase": "based_algorithms"}, {"score": 0.0047895188927660525, "phrase": "low_latency_and_energy_efficient_data_aggregation"}, {"score": 0.004701556483912018, "phrase": "wireless_sensor_networks"}, {"score": 0.004615202066192795, "phrase": "battery-powered_sensor_nodes"}, {"score": 0.004365498117804683, "phrase": "sink_-_is_commonly_performed_operation"}, {"score": 0.004273951631010383, "phrase": "frequently_used_energy-conversing_technique"}, {"score": 0.004151188559520802, "phrase": "communicated_data"}, {"score": 0.004118321471664401, "phrase": "in-network_processing_capability"}, {"score": 0.003926490872364466, "phrase": "data_aggregation"}, {"score": 0.003844115022960397, "phrase": "energy_and_latency_efficient_manner"}, {"score": 0.0037336520904376687, "phrase": "data_item"}, {"score": 0.003569125172032853, "phrase": "useful_fraction"}, {"score": 0.0035408501923902477, "phrase": "total_data"}, {"score": 0.003101153870424188, "phrase": "com_algorithm"}, {"score": 0.0030602966787192745, "phrase": "energy_optimal_dac_tree"}, {"score": 0.003036040409062437, "phrase": "fixed_value"}, {"score": 0.0029565620771207003, "phrase": "data_growth_factor"}, {"score": 0.002879158342988017, "phrase": "collision-free_communication"}, {"score": 0.0028563336834865334, "phrase": "channel_allocation_algorithm"}, {"score": 0.002826181226538412, "phrase": "low_latency"}, {"score": 0.002744888626958772, "phrase": "soft_limit_oil"}, {"score": 0.0027303606813078255, "phrase": "maximum_number"}, {"score": 0.0026238177575230665, "phrase": "energy_phase"}, {"score": 0.0026099289298770023, "phrase": "tree_construction_algorithms"}, {"score": 0.002548331088496964, "phrase": "latency_minimizing_phase"}, {"score": 0.002481588370380518, "phrase": "increasing_energy_cost"}, {"score": 0.0024037949232582462, "phrase": "energy_efficiency"}, {"score": 0.002316105585203396, "phrase": "algorithms'_performance"}, {"score": 0.0022855675625223027, "phrase": "existing_data_aggregation_technique"}, {"score": 0.0022614266476954467, "phrase": "experimental_results"}, {"score": 0.002225691463551672, "phrase": "data_compression_factor_gamma"}, {"score": 0.0021789194955896102, "phrase": "appropriate_algorithm"}, {"score": 0.0021501863832966966, "phrase": "primary_goal"}, {"score": 0.0021049977753042253, "phrase": "energy_consumption"}], "paper_keywords": ["Convergecast", " Spanning trees", " Data aggregation", " Energy-efficiency", " Wireless sensor networks"], "paper_abstract": "Many wireless sensor networks (WSNs) employ battery-powered sensor nodes. Communication in such networks is very taxing on its scarce energy resources. Convergecast - process of routing data from many sources to a sink - is commonly performed operation in WSNs. Data aggregation is a frequently used energy-conversing technique in WSNs. The rationale is to reduce volume of communicated data by using in-network processing capability at sensor nodes. In this paper, we address the problem of performing the operation of data aggregation enhanced convergecast (DAC) in an energy and latency efficient manner. We assume that all the nodes in the network have a data item and there is an a priori known application dependent data compression factor (or compression factor), gamma, that approximates the useful fraction of the total data collected. The paper first presents two DAC tree construction algorithms. One is a variant of the Minimum Spanning Tree (MST) algorithm and the other is a variant of the Single Source Shortest Path Spanning Tree (SPT) algorithm. These two algorithms serve as a motivation for our Combined algorithm (COM) which generalized the SPT and MST based algorithm. The COM algorithm tries to construct an energy optimal DAC tree for any fixed value of x (= 1 - gamma), the data growth factor. The nodes of these trees are scheduled for collision-free communication using a channel allocation algorithm. To achieve low latency, these algorithms use the beta-constraint, which puts a soft limit oil the maximum number of children a node can have in a DAC tree. The DAC tree obtained from energy phase of tree construction algorithms is restructured using the beta-constraint (in the latency minimizing phase) to reduce latency (at the expense of increasing energy cost). The effectiveness of these algorithms is evaluated by using energy efficiency, latency and network lifetime as metrics. With these metrics, the algorithms' performance is compared with an existing data aggregation technique. From the experimental results, for a given network density and data compression factor gamma at intermediate nodes, one call choose an appropriate algorithm depending upon whether the primary goal is to minimize the latency or the energy consumption. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Spanning tree based algorithms for low latency and energy efficient data aggregation enhanced convergecast (DAC) in wireless sensor networks", "paper_id": "WOS:000206061000007"}