{"auto_keywords": [{"score": 0.03363896917055258, "phrase": "kernelet"}, {"score": 0.00481495049065317, "phrase": "dynamic_slicing"}, {"score": 0.004701015188740582, "phrase": "graphics_processors"}, {"score": 0.004348936976349555, "phrase": "shared_environments"}, {"score": 0.003951453722517865, "phrase": "different_users"}, {"score": 0.0038119123317396954, "phrase": "important_metric"}, {"score": 0.003611751858608048, "phrase": "recently_improved_runtime_support"}, {"score": 0.0035687137873965684, "phrase": "concurrent_gpu_kernel_executions"}, {"score": 0.003505379826013362, "phrase": "gpu"}, {"score": 0.0033409791799749403, "phrase": "suboptimal_throughput"}, {"score": 0.0029991500396912923, "phrase": "concurrent_kernel_executions"}, {"score": 0.002945669860541221, "phrase": "gpu._kernelet"}, {"score": 0.002910545717767559, "phrase": "transparent_memory_management"}, {"score": 0.0028758391869611374, "phrase": "pci-e_data_transfer_techniques"}, {"score": 0.0028245516301681713, "phrase": "dynamic_slicing_and_scheduling_techniques"}, {"score": 0.002644179117033107, "phrase": "gpu_kernel"}, {"score": 0.002612640527241776, "phrase": "multiple_sub-kernels"}, {"score": 0.00247529638625566, "phrase": "tunable_occupancy"}, {"score": 0.002373472641477602, "phrase": "high_gpu_utilization"}, {"score": 0.0023033100935570755, "phrase": "novel_markov_chain-based_performance_model"}], "paper_keywords": ["GPGPU", " performance modeling", " task scheduling", " Kernel slicing", " Markov chain"], "paper_abstract": "Graphics processors, or GPUs, have recently been widely used as accelerators in shared environments such as clusters and clouds. In such shared environments, many kernels are submitted to GPUs from different users, and throughput is an important metric for performance and total ownership cost. Despite recently improved runtime support for concurrent GPU kernel executions, the GPU can be severely underutilized, resulting in suboptimal throughput. In this paper, we propose Kernelet, a runtime system to improve the throughput of concurrent kernel executions on the GPU. Kernelet embraces transparent memory management and PCI-e data transfer techniques, and dynamic slicing and scheduling techniques for kernel executions. With slicing, Kernelet divides a GPU kernel into multiple sub-kernels (namely slices). Each slice has tunable occupancy to allow co-scheduling with other slices for high GPU utilization. We develop a novel Markov chain-based performance model to guide the scheduling decision. Our experimental results demonstrate up to 31 percent and 23 percent performance improvement on NVIDIA Tesla C2050 and GTX680 GPUs, respectively.", "paper_title": "Kernelet: High-Throughput GPU Kernel Executions with Dynamic Slicing and Scheduling", "paper_id": "WOS:000337966400013"}