{"auto_keywords": [{"score": 0.05007840182833427, "phrase": "bivariate_dependencies"}, {"score": 0.048506844221552735, "phrase": "boa"}, {"score": 0.015462311913261476, "phrase": "bayesian_optimization_algorithm"}, {"score": 0.010136646319412555, "phrase": "model_building"}, {"score": 0.009485210782179804, "phrase": "proposed_approach"}, {"score": 0.004774937143916685, "phrase": "speedup_structure_learning"}, {"score": 0.004541712637353326, "phrase": "successful_and_widely_used_estimation"}, {"score": 0.004301834610818624, "phrase": "different_optimization_problems"}, {"score": 0.004108742905942481, "phrase": "selected_population"}, {"score": 0.0040238512275833265, "phrase": "problem_variables"}, {"score": 0.003990385737207714, "phrase": "new_individuals"}, {"score": 0.0037795163893761027, "phrase": "different_probabilistic_models"}, {"score": 0.0036248955128033084, "phrase": "bayesian_network"}, {"score": 0.003535165233011893, "phrase": "well-known_graphical_model"}, {"score": 0.0034620831765465425, "phrase": "boa._learning"}, {"score": 0.0034332736827447654, "phrase": "proper_model"}, {"score": 0.003279039724748895, "phrase": "computationally_expensive_task"}, {"score": 0.0032517484445814334, "phrase": "different_methods"}, {"score": 0.002966084234963723, "phrase": "accurate_bns"}, {"score": 0.0028209599545587745, "phrase": "appropriate_pairwise_interaction-detection_metric"}, {"score": 0.002762601646452813, "phrase": "static_structure"}, {"score": 0.002728166176898541, "phrase": "underlying_problems"}, {"score": 0.0025730425700096365, "phrase": "accurate_network"}, {"score": 0.0024883835349005863, "phrase": "computational_cost"}, {"score": 0.0023079225317714815, "phrase": "experimental_results"}, {"score": 0.002149494537191303, "phrase": "significant_speedups"}, {"score": 0.0021049977753042253, "phrase": "model_building_procedure"}], "paper_keywords": ["evolutionary computation", " Bayesian optimization algorithm", " Bayesian network", " model building", " bivariate interaction"], "paper_abstract": "Bayesian optimization algorithm (BOA) is one of the successful and widely used estimation of distribution algorithms (EDAs) which have been employed to solve different optimization problems. In EDAs, a model is learned from the selected population that encodes interactions among problem variables. New individuals are generated by sampling the model and incorporated into the population. Different probabilistic models have been used in EDAs to learn interactions. Bayesian network (BN) is a well-known graphical model which is used in BOA. Learning a proper model in EDAs and particularly in BOA is distinguished as a computationally expensive task. Different methods have been proposed in the literature to improve the complexity of model building in EDAs. This paper employs bivariate dependencies to learn accurate BNs in BOA efficiently. The proposed approach extracts the bivariate dependencies using an appropriate pairwise interaction-detection metric. Due to the static structure of the underlying problems, these dependencies are used in each generation of BOA to learn an accurate network. By using this approach, the computational cost of model building is reduced dramatically. Various optimization problems are selected to be solved by the algorithm. The experimental results show that the proposed approach successfully finds the optimum in problems with different, types of interactions efficiently. Significant speedups are observed in the model building procedure as well.", "paper_title": "Exploiting Bivariate Dependencies to Speedup Structure Learning in Bayesian Optimization Algorithm", "paper_id": "WOS:000309193600013"}