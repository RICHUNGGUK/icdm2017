{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "k-tree"}, {"score": 0.048487387314215154, "phrase": "ad_hoc_wireless_networks"}, {"score": 0.004466519142879166, "phrase": "video_multicast"}, {"score": 0.0043999379736452795, "phrase": "multicasting"}, {"score": 0.004350594827104932, "phrase": "efficient_means"}, {"score": 0.004318027255281003, "phrase": "one-to-many_communication"}, {"score": 0.00419016653753787, "phrase": "multicast_tree"}, {"score": 0.004112175423546628, "phrase": "high_quality"}, {"score": 0.004035630066743877, "phrase": "continuous_delivery"}, {"score": 0.003901407184706592, "phrase": "existing_multicast_solutions"}, {"score": 0.0036324746826127997, "phrase": "error-resilient_nature"}, {"score": 0.0036052633308076933, "phrase": "recently_available_video_coding_techniques"}, {"score": 0.0035248419365839856, "phrase": "continuous_reachability"}, {"score": 0.0033315236647127734, "phrase": "multiple_tree_multicast_protocol"}, {"score": 0.0032941471167321408, "phrase": "maximally_node-disjoint_multicast_trees"}, {"score": 0.0031965070898750912, "phrase": "path_breaks"}, {"score": 0.003078504229140364, "phrase": "error-resilient_multiple_description_coding"}, {"score": 0.0030554454744457305, "phrase": "mdc"}, {"score": 0.003021141590548526, "phrase": "video_encoding"}, {"score": 0.002920561105784389, "phrase": "node-disjoint_multicast_trees"}, {"score": 0.0028233486762032616, "phrase": "np-hard"}, {"score": 0.0026986685585382347, "phrase": "maximal_node-disjointedness_property"}, {"score": 0.0025795066118838067, "phrase": "extensive_simulation_experiments"}, {"score": 0.0025219085140220773, "phrase": "proposed_protocol"}, {"score": 0.002493592357827492, "phrase": "video_quality"}, {"score": 0.0024196235355517827, "phrase": "single_tree"}, {"score": 0.002392453087295389, "phrase": "video_stream"}, {"score": 0.002218933616777076, "phrase": "high_quality_video"}, {"score": 0.0021775526153883355, "phrase": "existing_two_tree_video_multicast_protocol"}, {"score": 0.0021530945641993152, "phrase": "well_known_mesh-based_multicast_protocol"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Ad hoc wireless networks", " Video multicasting", " Multicast trees", " Path-diversity", " Multiple description coding"], "paper_abstract": "In this paper, we address the problem of video multicast over Ad hoc wireless networks. Multicasting is an efficient means of one-to-many communication and is typically implemented by creating a multicast tree. Video multicasting demands high quality of service with a continuous delivery to receivers. However, most of the existing multicast solutions do not guarantee this because they are not resilient to mobility of the nodes and do not exploit error-resilient nature of recently available video coding techniques. Uninterrupted video transmission requires continuous reachability to receivers which emphasizes the usage of path-diversity. Hence, we propose a multiple tree multicast protocol which maintains maximally node-disjoint multicast trees in the network to attain robustness against path breaks. We further enhance the robustness by using the error-resilient multiple description coding (MDC) for video encoding. We prove that finding a given number of node-disjoint multicast trees for a multicast session in a given network is NP-Hard. Then we propose a protocol called K-Tree which maintains the maximal node-disjointedness property of K trees by using a distributed online heuristic. Through extensive simulation experiments, we show how the proposed protocol improves the video quality as we use two or three trees instead of a single tree for multicasting video stream. We also show, through simulations, that the protocol efficiently, in terms of overhead, provides high quality video as compared to an existing two tree video multicast protocol and a well known mesh-based multicast protocol. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "K-Tree: A multiple tree video multicast protocol for Ad hoc wireless networks", "paper_id": "WOS:000280258300011"}