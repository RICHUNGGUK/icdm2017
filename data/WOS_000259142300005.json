{"auto_keywords": [{"score": 0.02522607067724401, "phrase": "euclidean"}, {"score": 0.00481495049065317, "phrase": "variable_neighborhood_search"}, {"score": 0.004739773204474094, "phrase": "integer_linear_programming"}, {"score": 0.00462919213721188, "phrase": "generalized_minimum"}, {"score": 0.004556901872357751, "phrase": "tree_problem"}, {"score": 0.00438105507792004, "phrase": "generalized_version"}, {"score": 0.004278807087784626, "phrase": "classical_minimum_spanning_tree_problem"}, {"score": 0.0038930368103015467, "phrase": "exactly_one_node"}, {"score": 0.0032223742018434856, "phrase": "complementary_ways"}, {"score": 0.003097865379563127, "phrase": "search_effectivity"}, {"score": 0.002752390133272192, "phrase": "efficient_polynomial-time_algorithms"}, {"score": 0.0026459927476753585, "phrase": "best_neighbors"}, {"score": 0.0025638362414466278, "phrase": "third_neighborhood_type"}, {"score": 0.0025038930574283174, "phrase": "mixed_integer_programming_to_optimize"}, {"score": 0.0024842242921857705, "phrase": "local_parts"}, {"score": 0.002445347925313158, "phrase": "candidate_solution_trees"}, {"score": 0.002332322771009122, "phrase": "random_instances"}, {"score": 0.0021384748235753425, "phrase": "significant_advantages"}, {"score": 0.0021049977753042253, "phrase": "previously_published_metaheuristic_approaches"}], "paper_keywords": ["generalized minimum spanning tree", " variable neighborhood search", " dynamic programming", " integer linear programming"], "paper_abstract": "We consider the generalized version of the classical Minimum Spanning Tree problem where the nodes of a graph are partitioned into clusters and exactly one node from each cluster must be connected. We present a Variable Neighborhood Search (VNS) approach which uses three different neighborhood types. Two of them work in complementary ways in order to maximize search effectivity. Both are large in the sense that they contain exponentially many candidate solutions, but efficient polynomial-time algorithms are used to identify best neighbors. For the third neighborhood type we apply Mixed Integer Programming to optimize local parts within candidate solution trees. Tests on Euclidean and random instances with up to 1280 nodes indicate especially on instances with many nodes per cluster significant advantages over previously published metaheuristic approaches.", "paper_title": "Combining variable neighborhood search with integer linear programming for the generalized minimum spanning tree problem", "paper_id": "WOS:000259142300005"}