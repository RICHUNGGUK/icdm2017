{"auto_keywords": [{"score": 0.04308614909448946, "phrase": "parallel_reduction"}, {"score": 0.00481495049065317, "phrase": "parallel_ll"}, {"score": 0.004658426838467567, "phrase": "deterministic_parallel_ll_parsing_algorithm"}, {"score": 0.00418387341007444, "phrase": "parsing_problem"}, {"score": 0.003948613642680196, "phrase": "nondeterministic_version"}, {"score": 0.0038518661517315533, "phrase": "parallel_ll_parser"}, {"score": 0.003516898780234098, "phrase": "deterministic_version"}, {"score": 0.0034306956380815074, "phrase": "llp"}, {"score": 0.003005271873916767, "phrase": "next_operation"}, {"score": 0.002789528662623221, "phrase": "k_symbols"}, {"score": 0.0027211030647461324, "phrase": "lookback_string"}, {"score": 0.0026107601878587816, "phrase": "q_symbols"}, {"score": 0.0025678829712650437, "phrase": "deterministic_parsing"}, {"score": 0.0024842242921857705, "phrase": "llp_grammars"}, {"score": 0.002305799666781492, "phrase": "presented_deterministic_and_nondeterministic_parallel_parsers"}], "paper_keywords": [""], "paper_abstract": "A deterministic parallel LL parsing algorithm is presented. The algorithm is based on a transformation from a parsing problem to parallel reduction. First, a nondeterministic version of a parallel LL parser is introduced. Then, it is transformed into the deterministic version-the LLP parser. The deterministic LLP(q,k) parser uses two kinds of information to select the next operation - a lookahead string of length up to k symbols and a lookback string of length up to q symbols. Deterministic parsing is available for LLP grammars, a subclass of LL grammars. Since the presented deterministic and nondeterministic parallel parsers are both based on parallel reduction, they are suitable for most parallel architectures.", "paper_title": "Parallel LL parsing", "paper_id": "WOS:000245291800001"}