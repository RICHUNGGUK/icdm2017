{"auto_keywords": [{"score": 0.046211774964878174, "phrase": "ui"}, {"score": 0.04060994489492246, "phrase": "ui_designers"}, {"score": 0.02804434562054863, "phrase": "mobile_phone_devices"}, {"score": 0.01554645989308037, "phrase": "template-based_approach"}, {"score": 0.00856911860041385, "phrase": "generic_software_framework"}, {"score": 0.007308495604997327, "phrase": "development_time"}, {"score": 0.006267113107058762, "phrase": "developed_ui_templates"}, {"score": 0.006094274406166359, "phrase": "ui_prototype"}, {"score": 0.00481495049065317, "phrase": "user_interface"}, {"score": 0.0046298096189358595, "phrase": "major_effort"}, {"score": 0.004514550005798812, "phrase": "system_software"}, {"score": 0.004451755800490286, "phrase": "user_interfaces"}, {"score": 0.004316655212692336, "phrase": "mmi"}, {"score": 0.00413897695636482, "phrase": "short_time"}, {"score": 0.004069963083642548, "phrase": "great_help"}, {"score": 0.0040133278382101885, "phrase": "application_software_system"}, {"score": 0.003946400753785508, "phrase": "software_engineering_area"}, {"score": 0.0039024014688338964, "phrase": "better_solutions"}, {"score": 0.0038373172311012265, "phrase": "ui."}, {"score": 0.0036484811192408714, "phrase": "ui_design_templates_generator"}, {"score": 0.0035080343502078394, "phrase": "mobile_phone"}, {"score": 0.003430211567320493, "phrase": "fine_tune"}, {"score": 0.0034014736691766957, "phrase": "visual_ui_authoring_tool"}, {"score": 0.00333534826677211, "phrase": "target_mobile_phone_system"}, {"score": 0.0032430998954652043, "phrase": "generated_ui_prototype"}, {"score": 0.0031889761655961345, "phrase": "program_generator"}, {"score": 0.003153394838045877, "phrase": "software_system_architecture"}, {"score": 0.0031357528589442915, "phrase": "associated_functions"}, {"score": 0.003092077180049586, "phrase": "target_application_system_code"}, {"score": 0.0029729850399529967, "phrase": "proposed_ui_design_templates_generator"}, {"score": 0.0028745530564286003, "phrase": "software_simulation"}, {"score": 0.0027024579924047193, "phrase": "target_ui_program"}, {"score": 0.0026722904884984348, "phrase": "textual_code"}, {"score": 0.002642458851766937, "phrase": "proposed_approach"}, {"score": 0.002477260798809435, "phrase": "target_ui_prototype"}, {"score": 0.002401935608502315, "phrase": "ui_design"}, {"score": 0.0023485928608213183, "phrase": "operating_system"}, {"score": 0.0023158555051565415, "phrase": "hardware_specifications"}, {"score": 0.002264420105254984, "phrase": "ui_redesign"}, {"score": 0.0021893963445354507, "phrase": "software_system_architectures"}, {"score": 0.0021049977753042253, "phrase": "os_or_hardware_device_changes"}], "paper_keywords": ["user interface", " UI design templates generator", " generic UI template", " UI prototype", " visual UI authoring tool", " program generator", " generic software framework", " simulator"], "paper_abstract": "It has been shown that the major effort spent on the design and implementation of the system software for mobile phone devices is the user interfaces (UI) (or man-machine interface, MMI) [15, 16]. If UI can be developed in a short time, it can be a great help to reduce development time for application software system. Therefore, many researchers in software engineering area have been seeking better solutions to aid UI designers to crate UI. In this paper, we propose a template-based approach to generate UI for mobile phone devices. Specifically, a UI design templates generator is purposed for UI designers to easily and quickly create the UI templates for mobile phone. Furthermore, the developed UI templates can be fine tune with a visual UI authoring tool to generate the UI prototype of the target mobile phone system under consideration. Then, the programmer takes the generated UI prototype as a guider for the program generator to glue the software system architecture and associated functions together to produce the target application system code. Finally, In order to demonstrate the feasibility and applicability of the proposed UI design templates generator, a simulator is designed and implemented for carrying out the software simulation The benefit of the template-based approach is that it enables UI designers to generate UI prototype easily and quickly, and produces automatically the target UI program without writing any textual code. Thus the proposed approach is very suitable for the UI designers (nonprogrammers). In addition, the developed UI templates can be reused by UI designers to generate target UI prototype. Therefore, it can reduce development time. Currently, UI design and implementation are tightly coupling under the operating system (OS) and hardware specifications; any modifications in either one require UI redesign and re-implementation. We also propose a generic software framework for designing the software system architectures of mobile phone devices, which reduces the need to re-design UI following OS or hardware device changes.", "paper_title": "Generating user interface for mobile phone devices using template-based approach and generic software framework", "paper_id": "WOS:000248237300016"}