{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "structured_environment"}, {"score": 0.004497762477097628, "phrase": "dynamic_element_retrieval"}, {"score": 0.004310173770196077, "phrase": "structured_documents"}, {"score": 0.004095323392273661, "phrase": "extended_vector_form"}, {"score": 0.0038253590626087237, "phrase": "basic_vector_space_model"}, {"score": 0.003728817151525167, "phrase": "fox"}, {"score": 0.0034532961266947734, "phrase": "dynamic_retrieval"}, {"score": 0.003394891095032025, "phrase": "xml_elements"}, {"score": 0.003038532168038565, "phrase": "basic_indexing_node"}, {"score": 0.0026507289852980512, "phrase": "rank_ordered_list"}, {"score": 0.0026058621464926826, "phrase": "retrieved_elements"}, {"score": 0.002332133125576037, "phrase": "all-element_index"}], "paper_keywords": ["design", " experimentation", " XML", " structured retrieval", " flexible retrieval", " dynamic element retrieval", " vector space model"], "paper_abstract": "This research examines the feasibility of dynamic element retrieval in a structured environment. Structured documents and queries are represented in extended vector form, based on a modification of the basic vector space model suggested by Fox [1983]. A method for the dynamic retrieval of XML elements, which requires only a single indexing of the documents at the level of the basic indexing node, is presented. This method, which we refer to as flexible retrieval, produces a rank ordered list of retrieved elements that is equivalent to the result produced by the same retrieval against an all-element index of the collection. Flexible retrieval obviates the need for storing either an all-element index or multiple indices of the collection.", "paper_title": "Dynamic element retrieval in a structured environment", "paper_id": "WOS:000242553000003"}