{"auto_keywords": [{"score": 0.03779142546586625, "phrase": "instance_classes"}, {"score": 0.03243236443257074, "phrase": "theoretical_analysis"}, {"score": 0.0312702430794085, "phrase": "ea"}, {"score": 0.030702475380135236, "phrase": "random_testing"}, {"score": 0.00481495049065317, "phrase": "unique_input_output_sequences"}, {"score": 0.004620093797504386, "phrase": "conformance_testing"}, {"score": 0.0045855181084455444, "phrase": "finite_state_machines"}, {"score": 0.00450020161335541, "phrase": "previous_experimental_research"}, {"score": 0.00443308765153716, "phrase": "evolutionary_algorithms"}, {"score": 0.0040508247605225214, "phrase": "practical_technique"}, {"score": 0.003382017342396959, "phrase": "random_search_strategies"}, {"score": 0.0033190180867511605, "phrase": "rigorous_theoretical_and_numerical_analyses"}, {"score": 0.0031606404966938568, "phrase": "random_search"}, {"score": 0.0028233196851239753, "phrase": "instance_class"}, {"score": 0.0026583500966092044, "phrase": "parametrised_instance_class"}, {"score": 0.0026384167183586015, "phrase": "tunable_difficulty"}, {"score": 0.0025892330566358503, "phrase": "numerical_study"}, {"score": 0.002531418327080538, "phrase": "asymptotic_expressions"}, {"score": 0.0024014759148123736, "phrase": "numerical_results"}, {"score": 0.0023566987138026285, "phrase": "theoretical_results"}, {"score": 0.0023214774334744713, "phrase": "small_problem_instance_sizes"}, {"score": 0.002252602622785975, "phrase": "first_theoretical_characterisation"}, {"score": 0.0022273034991008326, "phrase": "potential_and_limitations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Finite state machines", " Conformance testing", " Unique input output sequences", " Evolutionary algorithms", " Random search", " Runtime analysis"], "paper_abstract": "Computing unique input output (UIO) sequences is a fundamental and hard problem in conformance testing of finite state machines (FSM). Previous experimental research has shown that evolutionary algorithms (EAs) can be applied successfully to find UIOs for some FSMs. However, before EAs can be recommended as a practical technique for computing UIOs, it is necessary to better understand the potential and limitations of these algorithms on this problem. In particular, more research is needed in determining for what instance classes of the problem EAs are feasible, and for what instance classes EAs are provably better than random search strategies. This paper presents rigorous theoretical and numerical analyses of the runtime of the (1 + 1) EA and random search on several selected instance classes of this problem. The theoretical analysis shows firstly, that there are instance classes where the EA is efficient, while random testing fails completely. Secondly, an instance class that is difficult for both random testing and the EA is presented. Finally, a parametrised instance class with tunable difficulty is presented. The numerical study estimates the constants in the asymptotic expressions obtained in the theoretical analysis, and the variability of the runtime. The numerical results fit well with the theoretical results, even for small problem instance sizes. Together, these results provide a first theoretical characterisation of the potential and limitations of the (1 + 1) EA on the problem of computing UIOs. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Runtime analysis of the (1+1) EA on computing unique input output sequences", "paper_id": "WOS:000329597200037"}