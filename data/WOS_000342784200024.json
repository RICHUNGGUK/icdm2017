{"auto_keywords": [{"score": 0.04773866258910522, "phrase": "code_clones"}, {"score": 0.00481495049065317, "phrase": "merged_code"}, {"score": 0.004695900553353526, "phrase": "software_evolution"}, {"score": 0.004319830179921363, "phrase": "similar_or_identical_code_fragments"}, {"score": 0.0037795163893761027, "phrase": "software_maintenance"}, {"score": 0.003306559295382181, "phrase": "single_method"}, {"score": 0.002941389980674657, "phrase": "refactoring_tools"}, {"score": 0.0026384167183586015, "phrase": "clone_refactoring"}, {"score": 0.0024883835349005863, "phrase": "open_source_software_systems"}, {"score": 0.0021766418372878835, "phrase": "token_sequence_lengths"}, {"score": 0.0021049977753042253, "phrase": "refactoring_pattern"}], "paper_keywords": ["code clone", " refactoring", " open source software"], "paper_abstract": "Although code clones (i.e. code fragments that have similar or identical code fragments in the source code) are regarded as a factor that increases the complexity of software maintenance, tools for supporting clone refactoring (i.e. merging a set of code clones into a single method or function) are not commonly used. To promote the development of refactoring tools that can be more widely utilized, we present an investigation of clone refactoring carried out in the development of open source software systems. In the investigation, we identified the most frequently used refactoring patterns and discovered how merged code clone token sequences and differences in token sequence lengths vary for each refactoring pattern.", "paper_title": "An Investigation into the Characteristics of Merged Code Clones during Software Evolution", "paper_id": "WOS:000342784200024"}