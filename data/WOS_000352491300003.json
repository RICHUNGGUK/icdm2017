{"auto_keywords": [{"score": 0.04678178460605593, "phrase": "edf"}, {"score": 0.00481495049065317, "phrase": "deadline-floor_inheritance_protocol"}, {"score": 0.00459165923324494, "phrase": "resource_sharing"}, {"score": 0.00452670409375785, "phrase": "deadline_first"}, {"score": 0.004215397034321004, "phrase": "realistic_programs"}, {"score": 0.0038515000499988673, "phrase": "mutual_exclusion"}, {"score": 0.0035525230119401153, "phrase": "baker's_stack_resource_protocol"}, {"score": 0.003371508176308189, "phrase": "alternative_scheme"}, {"score": 0.00332375606483146, "phrase": "deadline_inheritance"}, {"score": 0.0032922964156452696, "phrase": "shared_resources"}, {"score": 0.0032302647179383915, "phrase": "relative_deadline"}, {"score": 0.0030802351224657673, "phrase": "relative_deadlines"}, {"score": 0.002868116925014397, "phrase": "task's_current_absolute_deadline"}, {"score": 0.0028006988338192375, "phrase": "immediately_reduction"}, {"score": 0.0027479040199262393, "phrase": "resource's_deadline_floor"}, {"score": 0.002683304054823427, "phrase": "original_deadline"}, {"score": 0.002546466113418944, "phrase": "worst-case_behaviour"}, {"score": 0.0025103699913760057, "phrase": "new_protocol"}, {"score": 0.0024747842618794255, "phrase": "dfp-deadline_floor"}, {"score": 0.0022824314760583834, "phrase": "scheduling_analysis"}, {"score": 0.0022181655497912796, "phrase": "new_scheme"}, {"score": 0.0021049977753042253, "phrase": "preemption_levels"}], "paper_keywords": ["Real-time systems", " embedded systems", " concurrency control"], "paper_abstract": "Earliest Deadline First (EDF) is the most widely studied optimal dynamic scheduling algorithm for uniprocessor real-time systems. For realistic programs, tasks must be allowed to exchange data and use other forms of resources that must be accessed under mutual exclusion. With EDF scheduled systems, access to such resources is usually controlled by the use of Baker's Stack Resource Protocol (SRP). In this paper we propose an alternative scheme based on deadline inheritance. Shared resources are assigned a relative deadline equal to the minimum (floor) of the relative deadlines of all tasks that use the resource. On entry to the resource a task's current absolute deadline is subject to an immediately reduction to reflect the resource's deadline floor. On exit the original deadline for the task is restored. We show that the worst-case behaviour of the new protocol (termed DFP-Deadline Floor inheritance Protocol) is the same as SRP. Indeed it leads to the same blocking term in the scheduling analysis. We argue that the new scheme is however more intuitive, removes the need to support preemption levels and we demonstrate that it can be implemented more efficiently.", "paper_title": "A Deadline-Floor Inheritance Protocol for EDF Scheduled Embedded Real-Time Systems with Resource Sharing", "paper_id": "WOS:000352491300003"}