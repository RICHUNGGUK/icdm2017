{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "source_code"}, {"score": 0.04467661766774399, "phrase": "source_artifacts"}, {"score": 0.03966963437554605, "phrase": "programming_language"}, {"score": 0.004673530058379246, "phrase": "software_development"}, {"score": 0.004536244367689415, "phrase": "current_software_systems"}, {"score": 0.004497762477097628, "phrase": "increasingly_more_elements"}, {"score": 0.004347057700479576, "phrase": "software_engineering_research"}, {"score": 0.0041835168653521, "phrase": "source_components"}, {"score": 0.0034977560416755726, "phrase": "end-user_applications"}, {"score": 0.0033804443117334535, "phrase": "interface_specifications"}, {"score": 0.0033232673019931206, "phrase": "localization_modules"}, {"score": 0.0032950412841674026, "phrase": "multimedia_data"}, {"score": 0.0026507289852980512, "phrase": "kde_software_versioning_repository"}, {"score": 0.002550842302473891, "phrase": "comprehensive_study"}, {"score": 0.0023123057299992587, "phrase": "related_behaviors"}, {"score": 0.0022731540640627307, "phrase": "different_profiles"}, {"score": 0.002187464225869713, "phrase": "'other'_source_artifacts"}, {"score": 0.0021504218042734677, "phrase": "great_deal"}, {"score": 0.0021049977753042253, "phrase": "software_system"}], "paper_keywords": ["mining software repositories", " source code analysis", " source code management systems"], "paper_abstract": "Current software systems contain increasingly more elements that have not usually been considered in software engineering research and studies. Source artifacts, understood as the source components needed to obtain a binary, ready to use version of a program, comprise in many systems more than just the elements written in a programming language (source code). Especially when we move apart from systems-programming and enter the realm of end-user applications, we find files for documentation, interface specifications, internationalization and localization modules and multimedia data. All of them are source artifacts in the sense that developers work directly with them, and that applications are built automatically using them as input. This paper discusses the differences and relationships between source code (usually written in a programming language) and these other files, by analyzing the KDE software versioning repository (with about 6,800,000 commits and 450,000 files). A comprehensive study of those files, and their evolution in time, is performed, looking for patterns and trying to infer from them the related behaviors of developers with different profiles, from where we conclude that studying those 'other' source artifacts can provide a great deal of insight on a software system. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Beyond source code: The importance of other artifacts in software development (a case study)", "paper_id": "WOS:000240480700003"}