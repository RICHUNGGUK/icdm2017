{"auto_keywords": [{"score": 0.03615886072545087, "phrase": "dino"}, {"score": 0.010330382321585167, "phrase": "intermittent_systems"}, {"score": 0.010192174638682843, "phrase": "energy_harvesting"}, {"score": 0.0048149562117020305, "phrase": "simpler"}, {"score": 0.004750178261675602, "phrase": "safer_programming_and_execution_model"}, {"score": 0.004561019117546361, "phrase": "novel_devices"}, {"score": 0.004349791059765796, "phrase": "intermittent_operation"}, {"score": 0.004233492114255375, "phrase": "new_challenges"}, {"score": 0.004176509019758331, "phrase": "memory_consistency"}, {"score": 0.003983016985197904, "phrase": "failed_states"}, {"score": 0.0038764861784138117, "phrase": "continuous_execution"}, {"score": 0.0037473054818679763, "phrase": "analytical_models"}, {"score": 0.0031629800646754505, "phrase": "execution_model"}, {"score": 0.0029959082125682918, "phrase": "volatile_and_nonvolatile_data_consistency"}, {"score": 0.002955533639862811, "phrase": "near-constant_interruptions"}, {"score": 0.0028569549040495163, "phrase": "first_system"}, {"score": 0.0027804579695873827, "phrase": "consistency_problems"}, {"score": 0.002687702958515561, "phrase": "intermittent_execution"}, {"score": 0.0021049977753042253, "phrase": "possible_failure-related_control_transfers"}], "paper_keywords": ["Intermittent computing"], "paper_abstract": "Energy harvesting enables novel devices and applications without batteries, but intermittent operation under energy harvesting poses new challenges to memory consistency that threaten to leave applications in failed states not reachable in continuous execution. This paper presents analytical models that aid in reasoning about intermittence. Using these, we develop DINO (Death Is Not an Option), a programming and execution model that simplifies programming for intermittent systems and ensures volatile and nonvolatile data consistency despite near-constant interruptions. DINO is the first system to address these consistency problems in the context of intermittent execution. We evaluate DINO on three energy-harvesting hardware platforms running different applications. The applications fail and exhibit error without DINO, but run correctly with DINO's modest 1.8-2.7x run-time overhead. DINO also dramatically simplifies programming, reducing the set of possible failure-related control transfers by 5-9x.", "paper_title": "A Simpler, Safer Programming and Execution Model for Intermittent Systems", "paper_id": "WOS:000361284200054"}