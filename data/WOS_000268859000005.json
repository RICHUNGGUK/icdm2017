{"auto_keywords": [{"score": 0.04785710122151868, "phrase": "maximum-weight_triangle"}, {"score": 0.004701985831087475, "phrase": "matrix_multiplication."}, {"score": 0.00452670409375785, "phrase": "undirected_graph"}, {"score": 0.004483909657713567, "phrase": "n_vertices"}, {"score": 0.004441517985511521, "phrase": "real_weights"}, {"score": 0.003962899903266524, "phrase": "fastest_matrix_multiplication_algorithm"}, {"score": 0.0037610536973798113, "phrase": "running_time"}, {"score": 0.0035525230119401153, "phrase": "previous_time-bounds"}, {"score": 0.003371508176308189, "phrase": "fastest_known_algorithm"}, {"score": 0.0029935730127943496, "phrase": "upper_bounds"}, {"score": 0.002895535087931938, "phrase": "sparse_graph"}, {"score": 0.0028274743316389437, "phrase": "maximum-weight_subgraph_isomorphic"}, {"score": 0.002657890175649468, "phrase": "vertex-weighted_graph"}, {"score": 0.0025954008219792337, "phrase": "asymptotic_time"}, {"score": 0.002546466113418944, "phrase": "fastest_algorithm"}, {"score": 0.0022933216359142736, "phrase": "maximum-weight_fixed_subgraph"}, {"score": 0.0022181655497912796, "phrase": "constant_size"}, {"score": 0.0021352776064254195, "phrase": "fastest_known_algorithms"}, {"score": 0.0021049977753042253, "phrase": "fixed_subgraph"}], "paper_keywords": ["time complexity", " graph algorithms", " vertex-weighted graph", " graph triangle", " matrix multiplication"], "paper_abstract": "We show that a maximum-weight triangle in an undirected graph with n vertices and real weights assigned to vertices can be found in time O(n(omega) + n(2+o(1))), where omega is the exponent of the fastest matrix multiplication algorithm. By the currently best bound on omega, the running time of our algorithm is O(n(2.376)). Our algorithm substantially improves the previous time-bounds for this problem, and its asymptotic time complexity matches that of the fastest known algorithm for finding any triangle (not necessarily a maximum-weight one) in a graph. We can extend our algorithm to improve the upper bounds on finding a maximum-weight triangle in a sparse graph and on finding a maximum-weight subgraph isomorphic to a fixed graph. We can find a maximum-weight triangle in a vertex-weighted graph with m edges in asymptotic time required by the fastest algorithm for finding any triangle in a graph with m edges, i.e., in time O(m(1.41)). Our algorithms for a maximum-weight fixed subgraph (in particular any clique of constant size) are asymptotically as fast as the fastest known algorithms for a fixed subgraph.", "paper_title": "FINDING A HEAVIEST VERTEX-WEIGHTED TRIANGLE IS NOT HARDER THAN MATRIX MULTIPLICATION", "paper_id": "WOS:000268859000005"}