{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "local_mutual_inclusion"}, {"score": 0.004417848254181138, "phrase": "process_synchronization_problem"}, {"score": 0.0032398798149196432, "phrase": "critical_section"}, {"score": 0.0029722900280316216, "phrase": "self-stabilizing_distributed_solution"}, {"score": 0.002822434555587263, "phrase": "local_mutual_inclusion_problem"}, {"score": 0.0025449518236394103, "phrase": "proposed_algorithm"}, {"score": 0.0023346234464901978, "phrase": "weakly_fair_distributed_daemon"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Distributed algorithm", " Mutual inclusion", " Mutual exclusion", " Process synchronization", " Self-stabilization"], "paper_abstract": "Local mutual inclusion is a process synchronization problem where, for each process, at least one of its processes and neighbors must be in the critical section. We propose a self-stabilizing distributed solution to the local mutual inclusion problem. Convergence time of the proposed algorithm is one round under the weakly fair distributed daemon. (c) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Self-stabilizing distributed algorithm for local mutual inclusion", "paper_id": "WOS:000353742700003"}