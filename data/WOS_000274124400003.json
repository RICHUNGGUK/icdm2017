{"auto_keywords": [{"score": 0.04194588365523172, "phrase": "key_tree_structure"}, {"score": 0.03971953615506405, "phrase": "communication_cost"}, {"score": 0.015544732910761031, "phrase": "secure_multicast_communication"}, {"score": 0.008997350386956964, "phrase": "proposed_protocol"}, {"score": 0.008665584209672617, "phrase": "computation_and_storage_costs"}, {"score": 0.00481495049065317, "phrase": "secure_multicast_communications"}, {"score": 0.004707188147442449, "phrase": "key_management"}, {"score": 0.004654210559456924, "phrase": "essential_role"}, {"score": 0.004567230180529598, "phrase": "data_confidentiality"}, {"score": 0.004481868017991508, "phrase": "communication_bandwidth"}, {"score": 0.00443141503046841, "phrase": "limited_resource"}, {"score": 0.004332199142914195, "phrase": "multicast_communications"}, {"score": 0.004203343568960231, "phrase": "update_messages"}, {"score": 0.004047628461126961, "phrase": "scalability_problem"}, {"score": 0.0033385105985286154, "phrase": "mobile_devices"}, {"score": 0.003313380246267812, "phrase": "limited_computation_power"}, {"score": 0.0032884384364324395, "phrase": "storage_space"}, {"score": 0.002958281631770322, "phrase": "computation-and-storage-efficient_key_tree_structure"}, {"score": 0.0028058141911641225, "phrase": "resource_information"}, {"score": 0.0027741761880779535, "phrase": "group_member's_device"}, {"score": 0.0024673738215365104, "phrase": "cost_metrics"}, {"score": 0.002253299769886694, "phrase": "total_members"}, {"score": 0.0021778895748464024, "phrase": "batch_update_interval"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Secure multicast", " Group key management", " Key tree management"], "paper_abstract": "In secure multicast communication, group key management plays an essential role for the guarantee of data confidentiality and integrity. Because communication bandwidth is a limited resource, most group key management schemes for scalable secure multicast communications have focused on reducing the number of update messages, i.e., communication cost. To alleviate the scalability problem, a key tree structure was proposed and many group key management schemes have since adopted this approach. Though a key tree structure reduces communication cost. it often requires, as a tradeoff, a more powerful computing capability for executing several cryptography algorithms and having enough storage for various kinds of keys, i.e., computation cost and storage cost, respectively. However, in mobile devices with limited computation power and storage space, it is crucial to minimize simultaneously the overheads of computation and storage as well as that of communication. In this paper, we propose a computation-and-storage-efficient key tree structure, and a key tree management protocol for secure multicast communication. By considering the resource information of each group member's device, the proposed protocol manages the key tree structure to maximize the efficiency of the computation and storage costs, and to minimize the increment of the communication cost. Through analysis and simulations using three kinds of cost metrics, it demonstrated that the proposed protocol saves computation and storage costs at the expense of a very small increase in communication cost as a tradeoff when the number of total members and the ratio of members leaving in a batch update interval are moderately large. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Computation-and-storage-efficient key tree management protocol for secure multicast communications", "paper_id": "WOS:000274124400003"}