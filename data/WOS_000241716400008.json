{"auto_keywords": [{"score": 0.04650812327873998, "phrase": "buffer_replacement"}, {"score": 0.00481495049065317, "phrase": "oodbms_performance"}, {"score": 0.004585433265422727, "phrase": "database_management_systems"}, {"score": 0.0035189057079817285, "phrase": "requested_object"}, {"score": 0.003490343299449249, "phrase": "memory_resident"}, {"score": 0.003419943984098415, "phrase": "effective_way"}, {"score": 0.0030262967460085366, "phrase": "buffer_replacement_cache_behaviour"}, {"score": 0.0028583875909257766, "phrase": "new_type"}, {"score": 0.0028351712509358997, "phrase": "clustering_algorithm"}, {"score": 0.0028121429464519733, "phrase": "cache_conscious_clustering"}, {"score": 0.002350152413458658, "phrase": "popular_buffer_replacement_algorithms"}, {"score": 0.0023215735613204666, "phrase": "lru"}, {"score": 0.00224701149477484, "phrase": "best_existing_clustering_algorithm"}, {"score": 0.0022196745041124888, "phrase": "buffer_size"}, {"score": 0.0021837406983565098, "phrase": "database_size"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["object-oriented databases", " clustering", " buffer replacement", " caching", " database optimisation"], "paper_abstract": "The two main techniques of improving I/O performance of Object Oriented Database Management Systems (OODBMS) are clustering and buffer replacement. Clustering is the placement of objects accessed near to each other in time into the same page. Buffer replacement involves the selection of a page to be evicted, when the buffer is full. The page evicted ideally should be the page needed least in the future. These two techniques both influence the likelihood of a requested object being memory resident. We believe an effective way of reducing disk I/O is to take advantage of the synergy that exists between clustering and buffer replacement. Hence, we design a framework, whereby clustering algorithms incorporating buffer replacement cache behaviour can be conveniently employed for enhancing the I/O performance of OODBMS. We call this new type of clustering algorithm, Cache Conscious Clustering (C3). In this paper, we present the C3 framework, and a C3 algorithm that we have developed, namely C3-GP. We have tested C3-GP against three well known clustering algorithms. The results show that C3-GP out performs them by up to 40% when using popular buffer replacement algorithms such as LRU and CLOCK. C3-GP offers the same performance as the best existing clustering algorithm when the buffer size compared to the database size is very small. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "On using cache conscious clustering for improving OODBMS performance", "paper_id": "WOS:000241716400008"}