{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "parallel_constraint-based_local_search"}, {"score": 0.004478308876320956, "phrase": "parallel_implementation"}, {"score": 0.004287680323820891, "phrase": "constraint-based_local_search_algorithm"}, {"score": 0.0038737214010638745, "phrase": "hard_combinatorial_optimization_problems"}, {"score": 0.0032077057805891627, "phrase": "classical_csps_benchmarks"}, {"score": 0.002469830206270585, "phrase": "hundred_cores"}, {"score": 0.0022967713922705, "phrase": "real-life_applications"}, {"score": 0.0021049977753042253, "phrase": "even_better_speedups"}], "paper_keywords": ["Experimentation", " Performance", " Algorithms", " combinatorial optimization", " meta-heuristics", " parallelism", " implementation", " Constraints", " local search"], "paper_abstract": "We present a parallel implementation of a constraint-based local search algorithm and investigate its performance results for hard combinatorial optimization problems on two different platforms up to several hundreds of cores. On a variety of classical CSPs benchmarks, speedups are very good for a few tens of cores, and good up to a hundred cores. More challenging problems derived from real-life applications (Costas array) shows even better speedups, nearly optimal up to 256 cores.", "paper_title": "Performance Analysis of Parallel Constraint-Based Local Search", "paper_id": "WOS:000309350200057"}