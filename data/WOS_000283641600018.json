{"auto_keywords": [{"score": 0.04728331461408166, "phrase": "flash_memory"}, {"score": 0.00547917414254411, "phrase": "hdd_storage"}, {"score": 0.004814959889246486, "phrase": "vertical"}, {"score": 0.004725385523804256, "phrase": "hdd_database_systems"}, {"score": 0.004690025569165577, "phrase": "recent_advances"}, {"score": 0.004654928974748418, "phrase": "flash_memory_technology"}, {"score": 0.004334280585565239, "phrase": "hard_disk_drive"}, {"score": 0.004096751549280256, "phrase": "random_read_patterns"}, {"score": 0.003687512797620773, "phrase": "common_addition"}, {"score": 0.0036461569988218267, "phrase": "average_computer"}, {"score": 0.0035248419365839856, "phrase": "larger_devices"}, {"score": 0.0031017521516279664, "phrase": "database_systems"}, {"score": 0.0030554300179552415, "phrase": "small_amount"}, {"score": 0.002942619810718864, "phrase": "fully_vertically_partitioned_storage_structure"}, {"score": 0.0028339635771956174, "phrase": "hdd"}, {"score": 0.0028127164941557812, "phrase": "ssd."}, {"score": 0.002719059948482915, "phrase": "ssd"}, {"score": 0.002550694001304365, "phrase": "np"}, {"score": 0.002493592357827492, "phrase": "optimal_dynamic_programming_solution"}, {"score": 0.002465593351432208, "phrase": "faster_greedy_heuristic_solution"}, {"score": 0.002437907960209364, "phrase": "system_simulator"}, {"score": 0.0022273034991008326, "phrase": "greedy_heuristic_solution"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Flash memory", " Database", " Vertical partitioning"], "paper_abstract": "Recent advances in flash memory technology have greatly enhanced the capability of flash memory to address the I/O bottleneck problem. Flash memory has exceptional I/O performance compared to the hard disk drive (HDD). The superiority of flash memory is especially visible when dealing with random read patterns. Even though the cost of flash memory is higher than that of HDD storage, the popularity of flash memory is increasing at such a pace that it is becoming a common addition to the average computer. Recently, flash memory has been made into larger devices called solid state drives (SSDs). Although these devices can offer capacities comparable to HDDs, they are considerably more expensive per byte. Our research aims to increase the I/O performance of database systems by using a small amount of flash memory alongside HDD storage. The system uses a fully vertically partitioned storage structure where each column is stored separately on either the HDD or SSD. Our approach is to assign the columns into the SSD which will benefit the most from the characteristics of flash memory. We prove this problem is NP-complete and propose an optimal dynamic programming solution and a faster greedy heuristic solution. A system simulator has been implemented and experiments show that the overall I/O costs can be greatly reduced using only a limited amount of flash memory. The results show the greedy heuristic solution performed similarly to the more expensive dynamic programming solution for the situations tested. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Vertical partitioning for flash and HDD database systems", "paper_id": "WOS:000283641600018"}