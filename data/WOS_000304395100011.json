{"auto_keywords": [{"score": 0.04500834869096091, "phrase": "remaining_graph"}, {"score": 0.029341422494504686, "phrase": "quadratic_kernel"}, {"score": 0.00481495049065317, "phrase": "pathwidth_one"}, {"score": 0.004506968388996092, "phrase": "integer_k"}, {"score": 0.004064548693812535, "phrase": "natural_variation"}, {"score": 0.0035461111918923117, "phrase": "philip_et_al"}, {"score": 0.003502406584002602, "phrase": "wg"}, {"score": 0.003473529187092258, "phrase": "lecture_notes"}, {"score": 0.003444912629614206, "phrase": "computer_science"}, {"score": 0.0031845067058084583, "phrase": "parameterized_complexity"}, {"score": 0.0031582637043009562, "phrase": "povd"}, {"score": 0.0031064226956732497, "phrase": "quartic_kernel"}, {"score": 0.002709862658377861, "phrase": "time_complexity"}, {"score": 0.0025678829712650437, "phrase": "almost_tight_kernelization_bounds"}, {"score": 0.002515272856011004, "phrase": "general_result"}, {"score": 0.002494535556675632, "phrase": "dell"}, {"score": 0.0024434484910569863, "phrase": "stoc"}, {"score": 0.0023638390639573255, "phrase": "acm"}, {"score": 0.002344311033783139, "phrase": "new_york"}, {"score": 0.002194017354584942, "phrase": "fvs"}, {"score": 0.0021579641460002523, "phrase": "thomass"}], "paper_keywords": ["Fixed parameter tractability", " Kernelization", " Pathwidth", " Caterpillar graph"], "paper_abstract": "The Pathwidth One Vertex Deletion (POVD) problem asks whether, given an undirected graph G and an integer k, one can delete at most k vertices from G so that the remaining graph has pathwidth at most 1. The question can be considered as a natural variation of the extensively studied Feedback Vertex Set (FVS) problem, where the deletion of at most k vertices has to result in the remaining graph having treewidth at most 1 (i.e., being a forest). Recently Philip et al. (WG, Lecture Notes in Computer Science, vol. 6410, pp. 196-207, 2010) initiated the study of the parameterized complexity of POVD, showing a quartic kernel and an algorithm which runs in time 7 (k) n (O(1)). In this article we improve these results by showing a quadratic kernel and an algorithm with time complexity 4.65 (k) n (O(1)), thus obtaining almost tight kernelization bounds when compared to the general result of Dell and van Melkebeek (STOC, pp. 251-260, ACM, New York, 2010). Techniques used in the kernelization are based on the quadratic kernel for FVS, due to Thomass, (ACM Trans. Algorithms 6(2), 2010).", "paper_title": "An Improved FPT Algorithm and a Quadratic Kernel for Pathwidth One Vertex Deletion", "paper_id": "WOS:000304395100011"}