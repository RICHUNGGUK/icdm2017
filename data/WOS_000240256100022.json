{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "probabilistic_systems"}, {"score": 0.0046739596755881185, "phrase": "protocol_verification"}, {"score": 0.004510184935928004, "phrase": "probabilistic_process_algebra"}, {"score": 0.004430452655732319, "phrase": "process_algebra"}, {"score": 0.004174677062711731, "phrase": "probabilistic_and_non-deterministic_choices"}, {"score": 0.003818326867123525, "phrase": "branching_bisimulation"}, {"score": 0.0037507793596022326, "phrase": "strictly_alternating_probabilistic_graph_model"}, {"score": 0.0034715658596258018, "phrase": "redundant_internal_activity"}, {"score": 0.0033299015941662302, "phrase": "verification_rules"}, {"score": 0.0031374619658664843, "phrase": "concurrent_alternating_bit_protocol"}, {"score": 0.0030454408569868347, "phrase": "simple_communication_protocol"}, {"score": 0.0028865314258560214, "phrase": "well-known_alternating_bit_protocol"}, {"score": 0.0027522340188241446, "phrase": "continuous_streams"}, {"score": 0.0025623821393275146, "phrase": "possible_loss"}, {"score": 0.0024577274522206436, "phrase": "considerable_level"}, {"score": 0.0021049977753042253, "phrase": "internal_activity"}], "paper_keywords": [""], "paper_abstract": "We consider abstraction in probabilistic process algebra. The process algebra can be employed for specifying processes that exhibit both probabilistic and non-deterministic choices in their behaviour. We give a set of axioms that completely axiomatises the branching bisimulation for the strictly alternating probabilistic graph model. In addition, several recursive verification rules are identified, allowing us to remove redundant internal activity. Using the axioms and the verification rules, we have successfully conducted a verification of the Concurrent Alternating Bit Protocol. This is a simple communication protocol, slightly more 'sophisticated' than the well-known Alternating Bit Protocol. As channels are lossy, sending continuous streams of data through the channels is a method to overcome this possible loss of data. This instigates a considerable level of parallelism (parallel activities) and as such requires more complex techniques for proving the protocol correct. Using our process algebra we show that after abstraction of internal activity, the protocol behaves as a buffer.", "paper_title": "A complete axiomatisation of branching bisimulation for probabilistic systems with an application in protocol verification", "paper_id": "WOS:000240256100022"}