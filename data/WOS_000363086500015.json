{"auto_keywords": [{"score": 0.03009738409236426, "phrase": "information_systems"}, {"score": 0.00481495049065317, "phrase": "software_design"}, {"score": 0.004725886853744007, "phrase": "information_system_security"}, {"score": 0.00466016686289196, "phrase": "increasing_attention"}, {"score": 0.004573953147933065, "phrase": "security_problem"}, {"score": 0.004510336430422002, "phrase": "serious_financial_loss"}, {"score": 0.004468415400599571, "phrase": "even_loss"}, {"score": 0.004324723240308028, "phrase": "security_problems"}, {"score": 0.004205226397573506, "phrase": "poor_design_practices"}, {"score": 0.004146716743362567, "phrase": "important_security_functionality"}, {"score": 0.003920674807745575, "phrase": "development_cycle"}, {"score": 0.0038661089070527424, "phrase": "unmethodical_way"}, {"score": 0.0037592362369401546, "phrase": "great_deal"}, {"score": 0.003407839062159497, "phrase": "developed_security_functionality"}, {"score": 0.0033603864623013733, "phrase": "utmost_importance"}, {"score": 0.002989714021608139, "phrase": "common_criteria"}, {"score": 0.0029206231857112305, "phrase": "widely_used_universal_frameworks"}, {"score": 0.0028664985822266344, "phrase": "security_functionality"}, {"score": 0.002722758109991685, "phrase": "new_framework"}, {"score": 0.0026974065918918275, "phrase": "model_driven_security_framework"}, {"score": 0.002562123444678208, "phrase": "security_properties"}, {"score": 0.00246800641971897, "phrase": "information_system_developers"}, {"score": 0.002289993730291136, "phrase": "formal_methods"}, {"score": 0.0022580713471027996, "phrase": "unified_modelling_language"}, {"score": 0.002195555057617628, "phrase": "promela"}, {"score": 0.00217400953860696, "phrase": "spin"}], "paper_keywords": ["security", " design tools and techniques", " requirements/specifications", " software engineering process", " software/program verification"], "paper_abstract": "Information system security is receiving increasing attention every day because a security problem can cause serious financial loss or even loss of lives. Some of these security problems occur as a result of poor design practices, where important security functionality is not designed properly and is directly implemented later in the development cycle in an unmethodical way. Researchers have put a great deal of effort into defining processes and tools to design and develop more secure information systems. However, verification of the designed and developed security functionality is of utmost importance. In some cases, designs and codes also need to be formally or semi-formally verified and certified by authorities. The Common Criteria is one of the widely used universal frameworks for evaluating the security functionality of information systems. In this paper, we propose a new framework, model driven security framework, for the analysis, design, and evaluation of security properties of information systems. Our aim is to support information system developers and evaluation authorities who implement the higher-level Common Criteria (levels 6 and 7) security assurance process using formal methods based on Unified Modelling Language, Object Constraint Language, Promela, and Spin. Copyright (c) 2015John Wiley & Sons, Ltd.", "paper_title": "Model driven security framework for software design and verification", "paper_id": "WOS:000363086500015"}