{"auto_keywords": [{"score": 0.02827799607698675, "phrase": "computation_time"}, {"score": 0.004690952711665194, "phrase": "dynamic_load-balancing"}, {"score": 0.004394688617163029, "phrase": "kinetic_models"}, {"score": 0.00428146713705618, "phrase": "space_weather_simulations"}, {"score": 0.004189337956225294, "phrase": "massively_parallel_particle-in-cell_codes"}, {"score": 0.004063664475797303, "phrase": "space_plasma_disturbances"}, {"score": 0.003993544228876303, "phrase": "realistic_particle-mesh_plasma_simulations"}, {"score": 0.003958937342925219, "phrase": "huge_data_sets"}, {"score": 0.003806866174028117, "phrase": "high_scalability"}, {"score": 0.003660614912817745, "phrase": "massively_parallel_plasma_simulations"}, {"score": 0.003613119346373748, "phrase": "space_weather_purposes"}, {"score": 0.0035662378173267647, "phrase": "particle-mesh_techniques"}, {"score": 0.0035199624440843892, "phrase": "pic_simulations"}, {"score": 0.0034894451015047875, "phrase": "computational_particles"}, {"score": 0.003384695931421288, "phrase": "fixed_grid_mesh"}, {"score": 0.0033262524445013303, "phrase": "important_inhomogeneity"}, {"score": 0.00321236577162671, "phrase": "imbalanced_work_load"}, {"score": 0.0031845067058084613, "phrase": "different_threads"}, {"score": 0.0030092017034068666, "phrase": "unified_parallel_c"}, {"score": 0.002918826667294298, "phrase": "gravitational_simulations"}, {"score": 0.002855934865505357, "phrase": "dynamic_load-balancing_capabilities"}, {"score": 0.002806595775343074, "phrase": "different_load-balancing_strategies"}, {"score": 0.0027341763737751467, "phrase": "particle_distribution"}, {"score": 0.0025389513338018414, "phrase": "classical_two-stream_instability"}, {"score": 0.002462664392109308, "phrase": "gravitational_clustering_experiment"}, {"score": 0.0024201029474586007, "phrase": "jeans_instability"}, {"score": 0.0021892345747666977, "phrase": "particle-mesh_simulations"}, {"score": 0.0021702292394814144, "phrase": "high_particle_inhomogeneities"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["PIC", " Particle-Mesh techniques", " UPC", " Plasma physics", " Space weather", " Gravitation", " CFD", " Load-balancing"], "paper_abstract": "The Particle-in-Cell (PIC) method is a Particle-Mesh technique that allows to efficiently simulate kinetic models. Among others applications, space weather simulations could be tackled by massively parallel Particle-in-Cell codes, to model the dynamics of space plasma disturbances. However, realistic Particle-Mesh plasma simulations require huge data sets and are computationally expensive. This is why high scalability must be achieved in order to perform the massively parallel plasma simulations required for space weather purposes. In Particle-Mesh techniques such as PIC simulations, computational particles are free to move on a fixed grid mesh and can show important inhomogeneity during computation. This results in an imbalanced work load between different threads that must be tackled. This paper reports on a 2D electrostatic PIC code in Unified Parallel C, developed for both plasma and gravitational simulations. The algorithm includes dynamic load-balancing capabilities. We compare different load-balancing strategies: one based on the particle distribution, and one based on computation time. We also present results of the simulation of the classical two-stream instability, and a simulation of a gravitational clustering experiment triggered by the Jeans instability. It is shown that both dynamic load-balancing based on computation time or on the number of particles are efficient for Particle-Mesh simulations where high particle inhomogeneities occur. (C) 2012 Elsevier Ltd. All rights reserved.", "paper_title": "Implementation of a 2D electrostatic Particle-in-Cell algorithm in unified parallel C with dynamic load-balancing", "paper_id": "WOS:000320427200002"}