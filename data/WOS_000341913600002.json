{"auto_keywords": [{"score": 0.04941343102175344, "phrase": "online_aggregation"}, {"score": 0.015719716506582538, "phrase": "two-level_sharing_strategy"}, {"score": 0.004649302313891199, "phrase": "attractive_sampling-based_technology"}, {"score": 0.004536735647938243, "phrase": "approximate_estimate"}, {"score": 0.004489327204473076, "phrase": "final_result"}, {"score": 0.004426882270402403, "phrase": "confidence_interval"}, {"score": 0.0042446888127531945, "phrase": "mapreduce-based_cloud_system"}, {"score": 0.004069963083642548, "phrase": "query_progress"}, {"score": 0.003943636379643578, "phrase": "early_once_sufficient_accuracy"}, {"score": 0.0038078492247427594, "phrase": "serious_limitation"}, {"score": 0.00372862478541075, "phrase": "ola"}, {"score": 0.0036767202303156854, "phrase": "sharing_issue"}, {"score": 0.003651039356522665, "phrase": "multiple_ola_queries_processing"}, {"score": 0.0035625556447293804, "phrase": "original_mapreduce_paradigm"}, {"score": 0.0034398445347109396, "phrase": "potential_sharing_opportunities"}, {"score": 0.0030855783418239392, "phrase": "overall_performance"}, {"score": 0.002937745193225725, "phrase": "mapreduce_framework"}, {"score": 0.0028464607144683247, "phrase": "large_scale_concurrent_query_processing"}, {"score": 0.002767696345005216, "phrase": "first-level_sharing"}, {"score": 0.002719576221177709, "phrase": "sample_buffer_management_mechanism"}, {"score": 0.00268168157806506, "phrase": "sampling_opportunities"}, {"score": 0.002662932198158107, "phrase": "multiple_ola_queries"}, {"score": 0.0025892330566358503, "phrase": "second-level_sharing"}, {"score": 0.002544207840990836, "phrase": "heuristic_algorithm"}, {"score": 0.0025087506382067536, "phrase": "good_scalability"}, {"score": 0.0024912073108138613, "phrase": "large_input"}, {"score": 0.002456486927713543, "phrase": "statistical_computation"}, {"score": 0.0024307637980373552, "phrase": "partial_statistics_calculation"}, {"score": 0.002380120876826732, "phrase": "final_aggregation_operations"}, {"score": 0.0023469450817019, "phrase": "statistical_computation_cost"}, {"score": 0.0022580879903603395, "phrase": "hadoop"}, {"score": 0.002187860013180247, "phrase": "tpc-h_benchmark"}, {"score": 0.0021725557397878565, "phrase": "skewed_data_distribution"}, {"score": 0.0021049977753042253, "phrase": "oats."}], "paper_keywords": ["Online aggregation", " MapReduce", " Cloud", " Two-level sharing"], "paper_abstract": "Online aggregation (OLA) is an attractive sampling-based technology to response aggregation queries by an approximate estimate to the final result, with the confidence interval becomes tighter over time. It has been built into the MapReduce-based cloud system for big data analytics, which allows users to monitor the query progress, and save money by killing the computation early once sufficient accuracy has been obtained. However, there is a serious limitation that restricts the performance of OLA that is the sharing issue of multiple OLA queries processing. Note that, in the original MapReduce paradigm, each query is processed independently without considering the potential sharing opportunities, leading to two major unnecessary additional execution costs: (1) the large redundant I/O cost, and (2) the replicative statistical computation cost. To eliminate such additional execution cost and improve the overall performance, we present online aggregation with two-level sharing strategy in cloud (OATS) based on MapReduce framework in this paper to effectively support online aggregation for large scale concurrent query processing in skewed data distribution. In the first-level sharing, we propose a sample buffer management mechanism to share the sampling opportunities among multiple OLA queries to reduce redundant I/O cost. While in the second-level sharing, we propose a heuristic algorithm (with a good scalability for large input) for the statistical computation to share partial statistics calculation to decrease the number of final aggregation operations, reducing the statistical computation cost. Based on such two-level sharing strategy, we have implemented OATS in Hadoop and conducted an extensive experiments study on the TPC-H benchmark for skewed data distribution. Our results demonstrate the efficiency and effectiveness of OATS.", "paper_title": "OATS: online aggregation with two-level sharing strategy in cloud", "paper_id": "WOS:000341913600002"}