{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "reverse_engineering"}, {"score": 0.004769182299692333, "phrase": "use_case_descriptions"}, {"score": 0.004678940805063634, "phrase": "use_case"}, {"score": 0.004546755482549647, "phrase": "use_case_model"}, {"score": 0.004439445472040688, "phrase": "development_team"}, {"score": 0.004355415885815204, "phrase": "object-oriented_software_system"}, {"score": 0.004192078165260057, "phrase": "use_case_models"}, {"score": 0.0038465304237380125, "phrase": "development_process"}, {"score": 0.003702206069379459, "phrase": "informal_use_case_models"}, {"score": 0.0033806943112103397, "phrase": "development_cycle"}, {"score": 0.0031018195951638882, "phrase": "potential_defects"}, {"score": 0.0029147869733574844, "phrase": "small_set"}, {"score": 0.002887028262617443, "phrase": "formal_constructs"}, {"score": 0.0028187792953857957, "phrase": "case_models"}, {"score": 0.0026742419973883134, "phrase": "large_degree"}, {"score": 0.002648768009464535, "phrase": "unstructured_natural_language"}, {"score": 0.002488985155689794, "phrase": "structured_use_cases"}, {"score": 0.002305468528385778, "phrase": "new_structure"}, {"score": 0.0022725931637071852, "phrase": "new_process"}, {"score": 0.0021560018573288666, "phrase": "simple_study"}, {"score": 0.0021049977753042253, "phrase": "mock_online_hockey_store_system"}], "paper_keywords": [""], "paper_abstract": "In a use case driven development process, a use case model is utilized by a development team to construct an object-oriented software system. The large degree of informality in use case models, coupled with the fact that use casemodels directly affect the quality of all aspects of the development process, is a very dangerous combination. Naturally, informal use case models are prone to contain problems, which lead to the injection of defects at a very early stage in the development cycle. In this paper, we propose a structure that will aid the detection and elimination of potential defects caused by inconsistencies present in use casemodels. The structure contains a small set of formal constructs that will allow use case models to be machine readable while retaining their readability by retaining a large degree of unstructured natural language. In this paper we also propose a process which utilizes the structured use cases to systematically generate their corresponding use case diagrams and vice versa. Finally a tool provides support for the new structure and the new process. To demonstrate the feasibility of this approach, a simple study is conducted using a mock online hockey store system.", "paper_title": "Producing robust use case diagrams via reverse engineering of use case descriptions", "paper_id": "WOS:000254668100005"}