{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "large_pattern_set"}, {"score": 0.004765482708043842, "phrase": "embedded_network_security"}, {"score": 0.004716520738331953, "phrase": "contemporary_network_security_applications"}, {"score": 0.004549063619065006, "phrase": "powerful_pattern_matching"}, {"score": 0.004297795905522757, "phrase": "traditional_hardware_solutions"}, {"score": 0.004209893377338457, "phrase": "firewall_routers"}, {"score": 0.0036616109902631293, "phrase": "ever-larger_pattern"}, {"score": 0.003441352119167824, "phrase": "systematic_virus_detection_hardware_solution"}, {"score": 0.003353521531649663, "phrase": "embedded_systems"}, {"score": 0.003267925215811654, "phrase": "entire_matching_patterns"}, {"score": 0.0031354779851351287, "phrase": "two-phase_dictionary-based_antivirus_processor"}, {"score": 0.0029928611380840757, "phrase": "important_filtering_information"}, {"score": 0.0028273061946184645, "phrase": "chip_data"}, {"score": 0.002769395841379498, "phrase": "matching_mechanism"}, {"score": 0.002726740692380339, "phrase": "large_pattern_sets"}, {"score": 0.002670884656785558, "phrase": "first_stage"}, {"score": 0.0026297428083782875, "phrase": "filtering_engine"}, {"score": 0.002471400498582011, "phrase": "merged_shift_table"}, {"score": 0.0023958326775913165, "phrase": "potentially_unsafe_data"}, {"score": 0.002310578855290687, "phrase": "second_stage"}, {"score": 0.0022749744354271816, "phrase": "exact-matching_engine"}, {"score": 0.002251542790734307, "phrase": "off-chip_memory"}, {"score": 0.0021601997088758957, "phrase": "memory_gap"}], "paper_keywords": ["Algorithmic attacks", " embedded system", " memory gap", " network security", " virus detection"], "paper_abstract": "Contemporary network security applications generally require the ability to perform powerful pattern matching to protect against attacks such as viruses and spam. Traditional hardware solutions are intended for firewall routers. However, the solutions in the literature for firewalls are not scalable, and they do not address the difficulty of an antivirus with an ever-larger pattern set. The goal of this work is to provide a systematic virus detection hardware solution for network security for embedded systems. Instead of placing entire matching patterns on a chip, our solution is a two-phase dictionary-based antivirus processor that works by condensing as much of the important filtering information as possible onto a chip and infrequently accessing off-chip data to make the matching mechanism scalable to large pattern sets. In the first stage, the filtering engine can filter out more than 93.1% of data as safe, using a merged shift table. Only 6.9% or less of potentially unsafe data must be precisely checked in the second stage by the exact-matching engine from off-chip memory. To reduce the impact of the memory gap, we also propose three enhancement algorithms to improve performance: 1) a skipping algorithm; 2) a cache method; and 3) a prefetching mechanism.", "paper_title": "A Scalable High-Performance Virus Detection Processor Against a Large Pattern Set for Embedded Network Security", "paper_id": "WOS:000302640200006"}