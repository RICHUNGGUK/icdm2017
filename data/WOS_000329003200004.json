{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "frequent_items"}, {"score": 0.028312317972293805, "phrase": "memory_requirement"}, {"score": 0.004744437370338926, "phrase": "data_stream"}, {"score": 0.00424734451992536, "phrase": "continuous_data_stream"}, {"score": 0.00388729255686046, "phrase": "frequency_counts"}, {"score": 0.003830312347175889, "phrase": "stream_data"}, {"score": 0.0036914757355166966, "phrase": "fading_model"}, {"score": 0.003557653536102669, "phrase": "r_hash_functions"}, {"score": 0.0034540850937966336, "phrase": "density_values"}, {"score": 0.0034034331737042363, "phrase": "stream_data_items"}, {"score": 0.0032319109979344184, "phrase": "recent_data_items"}, {"score": 0.003161065111494053, "phrase": "time_fading_factor"}, {"score": 0.0028715299874549245, "phrase": "approximate_frequent_items"}, {"score": 0.0027673496368158545, "phrase": "limited_number"}, {"score": 0.002726740692380339, "phrase": "memory_space"}, {"score": 0.0025324393547676623, "phrase": "different_data_items"}, {"score": 0.0024405312482831646, "phrase": "hash_functions"}, {"score": 0.0023869914500743083, "phrase": "experimental_results"}, {"score": 0.0023519508354777215, "phrase": "synthetic_and_real_data_sets"}, {"score": 0.0021049977753042253, "phrase": "processing_speed"}], "paper_keywords": ["Stream data mining", " Frequent data item", " Fading factor", " Hash function"], "paper_abstract": "We investigate the problem of finding frequent items in a continuous data stream, and present an algorithm named lambda-HCount for computing frequency counts of stream data based on a time fading model. The algorithm uses r hash functions to estimate the density values of stream data items. To emphasize the importance of recent data items, a time fading factor is' used. For a given error bound, our algorithm can detect approximate frequent items under a certain probability using limited number of memory space. The memory requirement only depends on the number of different data items and the number of hash functions used. Experimental results on synthetic and real data sets show that our algorithm outperforms other methods in terms of accuracy, memory requirement, and processing speed. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Mining frequent items in data stream using time fading model", "paper_id": "WOS:000329003200004"}