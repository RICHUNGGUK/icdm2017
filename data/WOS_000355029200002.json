{"auto_keywords": [{"score": 0.04951738916270167, "phrase": "multi-level_vector_quantization"}, {"score": 0.03814741522567492, "phrase": "compression_ratio"}, {"score": 0.00481495049065317, "phrase": "bidirectional_texture_function_compression"}, {"score": 0.0047026237903774895, "phrase": "opencl._bidirectional"}, {"score": 0.004485735417293941, "phrase": "effective_visual_fidelity_representation"}, {"score": 0.003986103192038901, "phrase": "btf_data_compression"}, {"score": 0.00384731849108269, "phrase": "novel_decompositions"}, {"score": 0.003757490804877677, "phrase": "btf"}, {"score": 0.003479692058963528, "phrase": "original_method"}, {"score": 0.003378385493203297, "phrase": "visual_quality"}, {"score": 0.0032414759269196493, "phrase": "highly_configurable_software_architecture"}, {"score": 0.003165739628969694, "phrase": "different_compression_pipelines"}, {"score": 0.0030195184114140063, "phrase": "offline_storage"}, {"score": 0.0028294151327771548, "phrase": "huffman"}, {"score": 0.0026355812883224203, "phrase": "vector_quantization_algorithm"}, {"score": 0.0026046108130007776, "phrase": "opencl"}, {"score": 0.002573965014439041, "phrase": "massively_parallel_architectures"}, {"score": 0.0024842242921857705, "phrase": "new_modular_design"}, {"score": 0.0024405312482831646, "phrase": "compression_pipeline"}, {"score": 0.0023554316787703137, "phrase": "new_compression_algorithm"}, {"score": 0.0023003498123420237, "phrase": "twelve_low_dynamic_range_btfs"}, {"score": 0.002259883463607508, "phrase": "publicly_available_btf_samples"}, {"score": 0.002181069180139225, "phrase": "real_time_synthesis"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Bidirectional texture function", " Data compression", " GPGPU computation", " Parallel algorithm", " Vector quantization"], "paper_abstract": "Bidirectional texture function (BTF) as an effective visual fidelity representation of surface appearance is becoming more and more widely used. In this paper we report on three contributions to BTF data compression. First, we propose novel decompositions for multi-level vector quantization in BTF data compression that improve the compression ratio by 12% in comparison with the original method, without loss of visual quality. This is achieved by a highly configurable software architecture that allows for different compression pipelines. Second, we show how for offline storage the compression ratio can be increased by 30% in total by Huffman coding. Third, we show how to efficiently parallelize this vector quantization algorithm in OpenCL for massively parallel architectures such as GPUs with a new modular design of the compression pipeline. The results for the new compression algorithm are shown on twelve low dynamic range BTFs and four high dynamic range publicly available BTF samples. Our method allows for real time synthesis on a GPU. (C) 2015 Elsevier Ltd. All rights reserved.", "paper_title": "Extensions to bidirectional texture function compression with multi-level vector quantization in OpenCL", "paper_id": "WOS:000355029200002"}