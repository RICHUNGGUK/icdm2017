{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "density-constrained_longest"}, {"score": 0.003256526411907174, "phrase": "path_problem"}, {"score": 0.0029447150254434842, "phrase": "maximum_path_length"}, {"score": 0.0026626797255348287, "phrase": "upper_bound"}, {"score": 0.002574788013427524, "phrase": "lower_bound_the_path_density"}, {"score": 0.002354302193867031, "phrase": "path_length"}], "paper_keywords": ["algorithms", " density constrained paths", " heaviest paths", " longest paths"], "paper_abstract": "Let T be a tree with n nodes in which each edge is associated with a length and a weight The density constrained longest (heaviest) path problem is to find a path of T with maximum path length (weight) whose path density is bounded by an upper bound and a lower bound The path density is the path weight divided by the path length We show that both problems can be solved in optimal 0(n log n) time", "paper_title": "Optimal Algorithms for Finding Density-Constrained Longest and Heaviest Paths in a Tree", "paper_id": "WOS:000284448100010"}