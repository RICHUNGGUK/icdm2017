{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "pen-and-ink_illustration"}, {"score": 0.004471978831302331, "phrase": "hatching_styles"}, {"score": 0.004412285905508977, "phrase": "line_drawings"}, {"score": 0.004237925318473508, "phrase": "single_hatching_illustration"}, {"score": 0.0034638476252104706, "phrase": "stroke_orientation"}, {"score": 0.0029672941061574375, "phrase": "hatching_properties"}, {"score": 0.0026823700218343506, "phrase": "artist's_style"}, {"score": 0.002524688179363081, "phrase": "new_view"}, {"score": 0.0024247382451294255, "phrase": "learned_mapping"}, {"score": 0.002344468886431959, "phrase": "target_stroke_properties"}, {"score": 0.002251637552201872, "phrase": "new_illustration"}, {"score": 0.0021624739899833868, "phrase": "hatching_strokes"}, {"score": 0.0021049977753042253, "phrase": "target_properties"}], "paper_keywords": ["Algorithms", " Learning surface hatching", " data-driven hatching", " hatching by example", " illustrations by example", " learning orientation fields"], "paper_abstract": "This article presents an algorithm for learning hatching styles from line drawings. An artist draws a single hatching illustration of a 3D object. Her strokes are analyzed to extract the following per-pixel properties: hatching level (hatching, cross-hatching, or no strokes), stroke orientation, spacing, intensity, length, and thickness. A mapping is learned from input geometric, contextual, and shading features of the 3D object to these hatching properties, using classification, regression, and clustering techniques. Then, a new illustration can be generated in the artist's style, as follows. First, given a new view of a 3D object, the learned mapping is applied to synthesize target stroke properties for each pixel. A new illustration is then generated by synthesizing hatching strokes according to the target properties.", "paper_title": "Learning Hatching for Pen-and-Ink Illustration of Surfaces", "paper_id": "WOS:000300622500001"}