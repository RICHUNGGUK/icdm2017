{"auto_keywords": [{"score": 0.03550532871137409, "phrase": "tool_building"}, {"score": 0.020404319812444234, "phrase": "reverse_engineering"}, {"score": 0.013293929116915031, "phrase": "reverse_engineering_tools"}, {"score": 0.004689650818647484, "phrase": "software_reverse_engineering"}, {"score": 0.004621447740470602, "phrase": "software_engineering"}, {"score": 0.004487989502479992, "phrase": "software_systems"}, {"score": 0.004448705308279165, "phrase": "suitable_representations"}, {"score": 0.004345613093011898, "phrase": "higher_level"}, {"score": 0.004195418010131832, "phrase": "tool_support"}, {"score": 0.0041102032028337366, "phrase": "low-level_facts"}, {"score": 0.0038647641000798135, "phrase": "reverse_engineers"}, {"score": 0.0036126731589251906, "phrase": "building_tools"}, {"score": 0.0035288860880035985, "phrase": "important_part"}, {"score": 0.0032410683344688625, "phrase": "engineering_research"}, {"score": 0.002950560605386499, "phrase": "critical_topic"}, {"score": 0.0028990540380955596, "phrase": "current_state-of-the-art_and_identifying_challenges"}, {"score": 0.002639121019710418, "phrase": "first_lens"}, {"score": 0.002600661525224505, "phrase": "generic_quality"}, {"score": 0.002570296816631395, "phrase": "engineering_tools"}, {"score": 0.0025180070278214613, "phrase": "second_lens"}, {"score": 0.0024379730432321656, "phrase": "key_activity"}, {"score": 0.0023674192513753996, "phrase": "effective_and_rather_predictable_manner"}, {"score": 0.00225212150259011, "phrase": "reverse_engineering_research"}, {"score": 0.0021805201234139475, "phrase": "different_perspective"}, {"score": 0.002136142919325754, "phrase": "holistic_picture"}, {"score": 0.0021049977753042253, "phrase": "reverse_engineering_domain"}], "paper_keywords": [""], "paper_abstract": "Software reverse engineering is a subdiscipline of software engineering, striving to provide support for the comprehension of software systems by creating suitable representations of the system in another form or higher level of abstraction. In order to be effective, reverse engineering needs tool support, which provides functionality to extract low-level facts from the systems, to analyze and generate knowledge about the systems, and to visualize that knowledge so that reverse engineers are able to comprehend the aspects of the system that they are interested in effectively. This chapter explores the issue of building tools for reverse engineering. Since tools are an important part of conducting research in reverse engineering, it is worthwhile to reflect upon the state of tool building with the goal to advance upon it and thus to advance reverse engineering research as a whole. We tackle this goal by looking at the issue of tools through a set of lenses. The purpose of each lens is to focus on a critical topic for tool building by surveying the current state-of-the-art and identifying challenges that need to be addressed. In this chapter we discuss three lenses, namely (1) requirements for reverse engineering tools, (2) construction of reverse engineering tools, and (3) evaluation of reverse engineering tools. The first lens identifies a number of generic quality attributes that reverse engineering tools should strive to meet. The second lens approaches tools from the observation that since tool building is a key activity in research, it should be conducted in an effective and rather predictable manner. The third lens looks at the role that tools play in supporting the evaluation of reverse engineering research. While each lens looks at the topic from a different perspective, taken together they provide a holistic picture of tool building in the reverse engineering domain.", "paper_title": "The Tools Perspective on Software Reverse Engineering: Requirements, Construction, and Evaluation", "paper_id": "WOS:000276405000005"}