{"auto_keywords": [{"score": 0.04969696622373375, "phrase": "multiparty_session_types"}, {"score": 0.04932812239171096, "phrase": "python"}, {"score": 0.04555585661617265, "phrase": "scribble"}, {"score": 0.03652455146747941, "phrase": "conversation_programming"}, {"score": 0.00481495049065317, "phrase": "dynamic_verification"}, {"score": 0.004683540676363745, "phrase": "rigorous_and_comprehensive_verification"}, {"score": 0.004646654984830476, "phrase": "communication-based_software"}, {"score": 0.00459186790405058, "phrase": "important_engineering_challenge"}, {"score": 0.0045557008859819234, "phrase": "distributed_systems"}, {"score": 0.004448892453489832, "phrase": "ocean_observatories_initative"}, {"score": 0.004413846562278824, "phrase": "jboss_savara_project"}, {"score": 0.004110568076703326, "phrase": "honda"}, {"score": 0.004014136398724741, "phrase": "popl"}, {"score": 0.0037978390554858766, "phrase": "dynamic_verification_framework"}, {"score": 0.0037679023889496885, "phrase": "structured_interruptible_conversation_programming"}, {"score": 0.0035789632444741056, "phrase": "asynchronously_interruptible_conversations"}, {"score": 0.0034949740315415043, "phrase": "concise_api"}, {"score": 0.003372658906684677, "phrase": "session_types_properties"}, {"score": 0.0032934951320964276, "phrase": "distributed_processes"}, {"score": 0.0032034752726003025, "phrase": "underlying_theory"}, {"score": 0.003066945490483524, "phrase": "mpst_theory"}, {"score": 0.0029362173680378624, "phrase": "global_safety"}, {"score": 0.0028110458014332187, "phrase": "independent_runtime_monitoring"}, {"score": 0.002701877448139625, "phrase": "local_execution_trace"}, {"score": 0.002669959049383929, "phrase": "specified_protocol"}, {"score": 0.002566255769251419, "phrase": "choreographic_communications"}, {"score": 0.002486193594641237, "phrase": "large_scientific_cyberinfrastructure"}, {"score": 0.002437425029824563, "phrase": "asynchronous_interrupts"}, {"score": 0.0023334673218688437, "phrase": "communication_patterns"}, {"score": 0.0021987994275190314, "phrase": "implicit_synchronisations"}], "paper_keywords": ["Session types", " Runtime monitoring", " Python", " Distributed systems"], "paper_abstract": "The rigorous and comprehensive verification of communication-based software is an important engineering challenge in distributed systems. Drawn from our industrial collaborations (Ocean Observatories Initative, JBoss Savara Project, on Scribble, a choreography description language based on multiparty session types, and its theoretical foundations (Honda et al., in POPL, pp 273-284, 2008), this article proposes a dynamic verification framework for structured interruptible conversation programming. We first present our extension of Scribble to support the specification of asynchronously interruptible conversations. We then implement a concise API for conversation programming with interrupts in Python that enables session types properties to be dynamically verified for distributed processes. Finally, we expose the underlying theory of our interrupt mechanism, studying its syntax and semantics, its integration in MPST theory and proving the correctness of our design. Our framework ensures the global safety of a system in the presence of asynchronous interrupts through independent runtime monitoring of each endpoint, checking the conformance of the local execution trace to the specified protocol. The usability of our framework for describing and verifying choreographic communications has been tested by integration into the large scientific cyberinfrastructure developed by the Ocean Observatories Initiative. Asynchronous interrupts have proven expressive enough to represent and verify their main classes of communication patterns, including asynchronous streaming and various timeout-based protocols, without introducing any implicit synchronisations. Benchmarks show conversation programming and monitoring can be realised with little overhead.", "paper_title": "Practical interruptible conversations: distributed dynamic verification with multiparty session types and Python", "paper_id": "WOS:000360940700001"}