{"auto_keywords": [{"score": 0.02246846748295755, "phrase": "metaheuristics"}, {"score": 0.00481495049065317, "phrase": "different_software_development_approaches"}, {"score": 0.004299621153829837, "phrase": "combinatorial_optimization_problems"}, {"score": 0.0040171817997972335, "phrase": "important_kind"}, {"score": 0.0033511469200347907, "phrase": "enormous_amount"}, {"score": 0.0030955250132409964, "phrase": "better_ways"}, {"score": 0.0030433302702291116, "phrase": "optimization_algorithms"}, {"score": 0.0028756028995504035, "phrase": "software_development_community"}, {"score": 0.002827105825163379, "phrase": "wide_spectrum"}, {"score": 0.002686454006979225, "phrase": "software_project"}, {"score": 0.002552781867125423, "phrase": "software_development"}, {"score": 0.0025097154697345096, "phrase": "knowledge_intensive_activity"}, {"score": 0.0024673738215365104, "phrase": "knowledge_creation"}, {"score": 0.0024120247307686084, "phrase": "crucial_parts"}, {"score": 0.0023713273141757326, "phrase": "software_development_processes"}, {"score": 0.0022919762167777427, "phrase": "comparative_analysis"}, {"score": 0.0022661190184053628, "phrase": "knowledge_sharing_approaches"}, {"score": 0.002202742267484358, "phrase": "software_development_teams"}], "paper_keywords": ["knowledge management", " agile development", " optimization algorithms", " metaheuristics", " reusability", " knowledge sharing"], "paper_abstract": "In this paper we present some ideas, concepts and experiences related with our work of implementing solvers to combinatorial optimization problems. We have been designing, implementing and using solvers for important kind of problems, and painfully, the process of developing them is not optimal at all. The most used practice, which is based on trial and error, often incurs an enormous amount of resources. Clearly, this is a Software Engineering problem, then to find better ways of developing optimization algorithms, solvers and metaheuristics is our interest too. The software development community has a wide spectrum of methodologies when it decides to implement a software project. From the more traditional Tayloristic practices to Agile methods. Software development is a knowledge intensive activity and the knowledge creation and sharing are crucial parts of the software development processes. This paper presents a comparative analysis between knowledge sharing approaches of Agile and Tayloristic software development teams sprinkled with concerns about the development of Metaheuristics.", "paper_title": "Knowledge management in different software development approaches", "paper_id": "WOS:000241754200032"}