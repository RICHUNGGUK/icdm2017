{"auto_keywords": [{"score": 0.03780083001021273, "phrase": "data_parallel_formulation"}, {"score": 0.00481495049065317, "phrase": "parallel_sequential_pattern_mining"}, {"score": 0.004769702911065878, "phrase": "massive_trajectory_data"}, {"score": 0.0047026237903774895, "phrase": "trajectory_pattern_mining_problem"}, {"score": 0.004528301408585875, "phrase": "rapid_development"}, {"score": 0.004485735417293941, "phrase": "location-acquisition_technologies"}, {"score": 0.004422632150619634, "phrase": "parallel_computing"}, {"score": 0.004339867166576126, "phrase": "alternative_method"}, {"score": 0.004081385289516914, "phrase": "parallel_mining"}, {"score": 0.004023947242621452, "phrase": "sequential_patterns"}, {"score": 0.003948613642680196, "phrase": "newly_proposed_concepts"}, {"score": 0.0038746849003761024, "phrase": "trajectory_pattern_mining"}, {"score": 0.003784209997115174, "phrase": "efficient_and_effective_parallel_sequential_patterns_mining"}, {"score": 0.003626626504149897, "phrase": "prefix_projection"}, {"score": 0.003525220627709056, "phrase": "parallel_formulation"}, {"score": 0.0034428776029411974, "phrase": "prefix_projection_technique"}, {"score": 0.0033465923623290034, "phrase": "search_space"}, {"score": 0.0032376465741070274, "phrase": "candidate_trajectory_sequences"}, {"score": 0.003015950477134494, "phrase": "trajectory_patterns"}, {"score": 0.0029454679553901613, "phrase": "task_parallel_formulation"}, {"score": 0.0029039692582303904, "phrase": "mapreduce_programming_model"}, {"score": 0.0025678829712650437, "phrase": "parallel_trajectory_sequences"}, {"score": 0.0025436978068459565, "phrase": "item_pruning"}, {"score": 0.002519739850807611, "phrase": "sequence_pruning_strategies"}, {"score": 0.002437645786158106, "phrase": "candidate_sequences"}, {"score": 0.0024146842687658467, "phrase": "extensive_experiments"}, {"score": 0.002281376328251423, "phrase": "parallel_computing_time"}, {"score": 0.002259883463607508, "phrase": "communication_cost"}, {"score": 0.0022175019341824603, "phrase": "experimental_results"}, {"score": 0.002155412043665635, "phrase": "previously_proposed_parallel_mining_strategy"}, {"score": 0.0021049977753042253, "phrase": "mining_massive_trajectory_data"}], "paper_keywords": ["parallel computing", " trajectory sequential patterns", " prefix projection", " data parallel formulation", " task parallel formulation", " massive trajectory data"], "paper_abstract": "The trajectory pattern mining problem has recently attracted much attention due to the rapid development of location-acquisition technologies, and parallel computing essentially provides an alternative method for handling this problem. This study precisely addresses the problem of parallel mining of trajectory sequential patterns based on the newly proposed concepts with regard to trajectory pattern mining. We propose an efficient and effective parallel sequential patterns mining (plute) algorithm that includes three essential techniques: prefix projection, data parallel formulation, and task parallel formulation. Firstly, the prefix projection technique is used to decompose the search space as well as greatly reduce the candidate trajectory sequences. Secondly, the data parallel formulation decomposes the computations associated with counting the support of trajectory patterns. Thirdly, the task parallel formulation employs the MapReduce programming model to assign the computations across a set of machines in a scalable and easy-to-use fashion. Based on the properties of parallel trajectory sequences, item pruning and sequence pruning strategies are applied to further prune the candidate sequences. Extensive experiments are conducted to evaluate the performance of plute in terms of parallel computing time and communication cost among processors. Experimental results show that plute outperforms the previously proposed parallel mining strategy (PartSpan) in mining massive trajectory data.", "paper_title": "Parallel Sequential Pattern Mining of Massive Trajectory Data", "paper_id": "WOS:000279365200010"}