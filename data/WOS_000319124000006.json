{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "connected_non-complete_graph"}, {"score": 0.004525629293824217, "phrase": "connected_components"}, {"score": 0.00446987606516801, "phrase": "vertex_connectivity"}, {"score": 0.00428892403807229, "phrase": "minimum_vertex_separator"}, {"score": 0.00418387341007444, "phrase": "vertex_connectivity_k"}, {"score": 0.0039813976794342, "phrase": "k-vertex_connected_graph"}, {"score": 0.0039649719120779066, "phrase": "c._vertex"}, {"score": 0.0038838500580958744, "phrase": "smallest_set"}, {"score": 0.003560807940070886, "phrase": "connectivity_augmentation"}, {"score": 0.003459191419478298, "phrase": "k-connected_chordal_graphs"}, {"score": 0.0033053159828082095, "phrase": "\"tree-like\"_graph"}, {"score": 0.0029805015010906013, "phrase": "equivalence_classes"}, {"score": 0.002931569771634119, "phrase": "equivalence_relation"}, {"score": 0.0025257081555100556, "phrase": "new_combinatorial_analysis"}, {"score": 0.002494531100339247, "phrase": "elegant_proof"}, {"score": 0.0024232694434408093, "phrase": "optimum_connectivity_augmentation"}, {"score": 0.0023540387251475615, "phrase": "data_structure"}, {"score": 0.002315367926547472, "phrase": "unified_framework"}, {"score": 0.0022306602656266545, "phrase": "run-time_analysis"}, {"score": 0.002175913488493802, "phrase": "associated_tree"}, {"score": 0.0021049977753042253, "phrase": "linear_time"}], "paper_keywords": ["Biconnectivity augmentation", " triconnectivity augmentation", " chordal augmentation"], "paper_abstract": "For a connected non-complete graph, a vertex separator is a subset of vertices whose deletion increases the number of connected components and the vertex connectivity of the graph refers to the size of a minimum vertex separator. A graph with the vertex connectivity k is said to be k-vertex connected. Given a k-vertex connected graph C. vertex connectivity augmentation determines a smallest set of edges whose augmentation to G makes it (k D-vertex connected. In this paper, we report our study on connectivity augmentation in 1-connected graphs, 2-connected graphs, and k-connected chordal graphs. We first represent the graph under consideration using a \"tree-like\" graph. This tree is unique and explicitly captures the connectivity in of the graph. Using this tree, our proposed data structure maintains the set of equivalence classes based on an equivalence relation on the set of leaves of the tree. This partition determines a set of edges to be augmented to increase the connectivity of the graph by one Based on our data structure, we present a new combinatorial analysis and an elegant proof of correctness of our linear-time algorithm for an optimum connectivity augmentation. The novelty is in the data structure which is a unified framework for all three augmentations. As far as the run-time analysis is concerned, given the associated tree, our approach yields an augmentation set in linear time", "paper_title": "A UNIFIED FRAMEWORK FOR BI(TRI)CONNECTIVITY AND CHORDAL AUGMENTATION", "paper_id": "WOS:000319124000006"}