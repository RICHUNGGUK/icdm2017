{"auto_keywords": [{"score": 0.04086521405807644, "phrase": "grid_systems"}, {"score": 0.032595291992496216, "phrase": "resource_allocation_mechanisms"}, {"score": 0.00481495049065317, "phrase": "grid_resource_allocation_mechanisms"}, {"score": 0.004774222240441731, "phrase": "grid"}, {"score": 0.00471193241675062, "phrase": "distributed_high_performance_computing_paradigm"}, {"score": 0.004396790930873782, "phrase": "resource-intensive_user_tasks"}, {"score": 0.004247180402119585, "phrase": "available_grid_resources"}, {"score": 0.004174287115855492, "phrase": "high_system_throughput"}, {"score": 0.004102639724186862, "phrase": "user_requirements"}, {"score": 0.004049709080817396, "phrase": "task_scheduling_problem"}, {"score": 0.003928834302530914, "phrase": "ever_increasing_size"}, {"score": 0.003795086335272422, "phrase": "efficient_resource_allocation_strategy"}, {"score": 0.00374610869916551, "phrase": "particular_task"}, {"score": 0.003665874747419775, "phrase": "desired_level"}, {"score": 0.0034953361767153285, "phrase": "suitable_technique"}, {"score": 0.0034204548167213545, "phrase": "existing_methods"}, {"score": 0.0032471982781283374, "phrase": "existing_resource_allocation_mechanisms"}, {"score": 0.0032191849045822415, "phrase": "resource_allocation_problems"}, {"score": 0.0030560920414081645, "phrase": "different_architectures"}, {"score": 0.0027781870000242004, "phrase": "time_complexity"}, {"score": 0.0025364615261136655, "phrase": "data-intensive_applications"}, {"score": 0.0025036862991477437, "phrase": "comprehensive_analysis"}, {"score": 0.0024820711838337713, "phrase": "cutting-edge_research"}, {"score": 0.002449997042686432, "phrase": "grid_domain"}, {"score": 0.002335889180060105, "phrase": "essential_concepts"}, {"score": 0.0022464835515931592, "phrase": "important_and_outstanding_issues"}], "paper_keywords": ["High performance computing", " Grid computing", " Resource allocation"], "paper_abstract": "Grid is a distributed high performance computing paradigm that offers various types of resources (like computing, storage, communication) to resource-intensive user tasks. These tasks are scheduled to allocate available Grid resources efficiently to achieve high system throughput and to satisfy user requirements. The task scheduling problem has become more complex with the ever increasing size of Grid systems. Even though selecting an efficient resource allocation strategy for a particular task helps in obtaining a desired level of service, researchers still face difficulties in choosing a suitable technique from a plethora of existing methods in literature. In this paper, we explore and discuss existing resource allocation mechanisms for resource allocation problems employed in Grid systems. The work comprehensively surveys Gird resource allocation mechanisms for different architectures (centralized, distributed, static or dynamic). The paper also compares these resource allocation mechanisms based on their common features such as time complexity, searching mechanism, allocation strategy, optimality, operational environment and objective function they adopt for solving computing- and data-intensive applications. The comprehensive analysis of cutting-edge research in the Grid domain presented in this work provides readers with an understanding of essential concepts of resource allocation mechanisms in Grid systems and helps them identify important and outstanding issues for further investigation. It also helps readers to choose the most appropriate mechanism for a given system/application.", "paper_title": "Survey on Grid Resource Allocation Mechanisms", "paper_id": "WOS:000339887600011"}