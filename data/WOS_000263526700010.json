{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "address_sets._hardware_signatures"}, {"score": 0.004539005582217309, "phrase": "support_such_operations_efficiently_and_with_low_complexity._softsig"}, {"score": 0.004033464035028803, "phrase": "hardware_signatures_to_software_through_instructions_that_control"}, {"score": 0.0025137856138000036, "phrase": "disambiguate_against."}, {"score": 0.0021049977753042253, "phrase": "demonstrates_softsig's_versatility"}], "paper_keywords": [""], "paper_abstract": "MANY CODE ANALYSIS TECHNIQUES FOR OPTIMIZATION, DEBUGGING, AND PARALLELIZATION MUST PERFORM RUNTIME DISAMBIGUATION OF ADDRESS SETS. HARDWARE SIGNATURES SUPPORT SUCH OPERATIONS EFFICIENTLY AND WITH LOW COMPLEXITY. SOFTSIG EXPOSES HARDWARE SIGNATURES TO SOFTWARE THROUGH INSTRUCTIONS THAT CONTROL WHICH ADDRESSES TO COLLECT AND WHICH TO DISAMBIGUATE AGAINST. THE MEMOISE ALGORITHM DEMONSTRATES SOFTSIG'S VERSATILITY BY DETECTING AND ELIMINATING REDUNDANT FUNCTION CALLS.", "paper_title": "SOFTSIG: SOFTWARE-EXPOSED HARDWARE SIGNATURES FOR CODE ANALYSIS AND OPTIMIZATION", "paper_id": "WOS:000263526700010"}