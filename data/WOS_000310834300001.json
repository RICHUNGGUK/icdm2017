{"auto_keywords": [{"score": 0.03976570402861194, "phrase": "parallel_disk_system"}, {"score": 0.015182398927516352, "phrase": "parallel_disk_systems"}, {"score": 0.008837761411787652, "phrase": "soap"}, {"score": 0.0048152364547294005, "phrase": "strip"}, {"score": 0.004594443767709888, "phrase": "sequential_prefetching_schemes"}, {"score": 0.004461761855323898, "phrase": "storage_servers"}, {"score": 0.00438399094249306, "phrase": "disk_latency"}, {"score": 0.004307569753106432, "phrase": "system_throughput"}, {"score": 0.004207734323806386, "phrase": "existing_schemes"}, {"score": 0.0038534477978822133, "phrase": "distinct_internal_characteristics"}, {"score": 0.0035082436540296406, "phrase": "premature_evictions"}, {"score": 0.0034673190692473903, "phrase": "prolonged_request_latencies"}, {"score": 0.0032889671598112023, "phrase": "strip-oriented_asynchronous_prefetching"}, {"score": 0.002994178996584381, "phrase": "above-mentioned_problems"}, {"score": 0.002941913249957503, "phrase": "multiple_novel_features"}, {"score": 0.0028069426877159664, "phrase": "physical_data_layout_awareness"}, {"score": 0.0027579362569638945, "phrase": "timely_prefetching"}, {"score": 0.002555247330102505, "phrase": "software_redundant_arrays"}, {"score": 0.0025254115243261875, "phrase": "inexpensive_disks"}, {"score": 0.0024959271197478716, "phrase": "raid"}, {"score": 0.002452361270267653, "phrase": "linux"}, {"score": 0.0024236964502593254, "phrase": "experimental_results"}, {"score": 0.002326068563512387, "phrase": "improved_average_response_time"}, {"score": 0.0022323643840655646, "phrase": "non-random_workloads"}, {"score": 0.0021941745908158634, "phrase": "step"}, {"score": 0.0021678037200816643, "phrase": "sp"}, {"score": 0.0021424492440209725, "phrase": "asp"}, {"score": 0.0021049977753042253, "phrase": "linux-like_seqps"}], "paper_keywords": ["Parallel disk system", " Strip", " Sequential prefetching", " Asynchronous scheduling"], "paper_abstract": "Sequential prefetching schemes are widely employed in storage servers to mask disk latency and improve system throughput. However, existing schemes cannot benefit parallel disk systems as expected due to the fact that they ignore the distinct internal characteristics of the parallel disk system, in particular, data striping. Moreover, their aggressive prefetching pattern suffers from premature evictions and prolonged request latencies. In this paper, we propose a strip-oriented asynchronous prefetching (SoAP) technique, which is dedicated to the parallel disk system. It settles the above-mentioned problems by providing multiple novel features, e.g., enhanced prediction accuracy, adaptive prefetching strength, physical data layout awareness, and timely prefetching. To validate SoAP, we implement a prototype by modifying the software redundant arrays of inexpensive disks (RAID) under Linux. Experimental results demonstrate that SoAP can consistently offer improved average response time and throughput to the parallel disk system under non-random workloads compared with STEP, SP, ASP, and Linux-like SEQPs.", "paper_title": "Strip-oriented asynchronous prefetching for parallel disk systems", "paper_id": "WOS:000310834300001"}