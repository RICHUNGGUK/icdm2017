{"auto_keywords": [{"score": 0.047610746948366554, "phrase": "ua"}, {"score": 0.00481495049065317, "phrase": "multiprocessor_embedded_systems"}, {"score": 0.004658426838467567, "phrase": "first_utility_accrual"}, {"score": 0.004331675965350876, "phrase": "multiprocessor_utility_accrual"}, {"score": 0.003922580121023413, "phrase": "real-time_activities"}, {"score": 0.0037699306119313154, "phrase": "variable_execution_time_demands"}, {"score": 0.0036958398682001015, "phrase": "resource_overloads"}, {"score": 0.003623199939953831, "phrase": "total_activity_utilization_demand"}, {"score": 0.0035519826240477444, "phrase": "total_capacity"}, {"score": 0.003368816076401138, "phrase": "scheduling_objective"}, {"score": 0.003216285378512588, "phrase": "lower_bounds"}, {"score": 0.003153041030690117, "phrase": "activity's_maximum_utility"}, {"score": 0.0028173769301594745, "phrase": "optimal_total_utility"}, {"score": 0.0027437235598539904, "phrase": "special_case"}, {"score": 0.002636828502928141, "phrase": "individual_activity_utility_lower_bounds"}, {"score": 0.00250073564820402, "phrase": "system-wide_total_accrued_utility"}, {"score": 0.00234043119560776, "phrase": "execution_time_demand_estimates"}, {"score": 0.0021903801614787423, "phrase": "algorithm's_effectiveness"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Time utility function", " Utility accrual", " Multiprocessor systems", " Statistical assurance", " Real-time", " Scheduling"], "paper_abstract": "We present the first Utility Accrual (or UA) real-time scheduling algorithm for multiprocessors, called the global Multiprocessor Utility Accrual scheduling algorithm (or gMUA). The algorithm considers an application model where real-time activities are subject to time/utility function time constraints, variable execution time demands, and resource overloads where the total activity utilization demand exceeds the total capacity of all processors. We consider the scheduling objective of (1) probabilistically satisfying lower bounds on each activity's maximum utility, and (2) maximizing the system-wide, total accrued utility. We establish several properties of gMUA including optimal total utility (for a special case), conditions under which individual activity utility lower bounds are satisfied, a lower bound on system-wide total accrued utility, and bounded sensitivity for assurances to variations in execution time demand estimates. Finally, our simulation experiments validate our analytical results and confirm the algorithm's effectiveness. (C) 2009 Elsevier Inc. All rights reserved.", "paper_title": "Utility accrual real-time scheduling for multiprocessor embedded systems", "paper_id": "WOS:000273835800004"}