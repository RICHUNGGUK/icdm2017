{"auto_keywords": [{"score": 0.04767539117299256, "phrase": "multi-disciplinary_domains"}, {"score": 0.00481495049065317, "phrase": "structural_and"}, {"score": 0.004746617697932655, "phrase": "efficient_retrieval"}, {"score": 0.004692647062494403, "phrase": "large_xml_data_repositories"}, {"score": 0.004626041906722018, "phrase": "xml_adoption"}, {"score": 0.004599664074521038, "phrase": "semi-structured_data_representation"}, {"score": 0.004444511815446334, "phrase": "complex_data_retrieval_processing"}, {"score": 0.00436890075128947, "phrase": "data_retrieval_processes"}, {"score": 0.004197418562098329, "phrase": "optimization_approach"}, {"score": 0.003841189987243716, "phrase": "xml_documents"}, {"score": 0.003775803846431323, "phrase": "twig_xml_query"}, {"score": 0.00373283028885057, "phrase": "branched_path_query"}, {"score": 0.0035657543501993443, "phrase": "join_operation"}, {"score": 0.003545400775645216, "phrase": "multiple_paths"}, {"score": 0.003475070660873518, "phrase": "structural_and_the_content_part"}, {"score": 0.0034553362042067286, "phrase": "xml"}, {"score": 0.003386685386000115, "phrase": "indexing_and_processing_xml_data"}, {"score": 0.0032723138659799945, "phrase": "semantic_connectivity"}, {"score": 0.0032536298009154052, "phrase": "xml_data_nodes"}, {"score": 0.0032165800743224645, "phrase": "object-based_data"}, {"score": 0.003125785288138378, "phrase": "frequently-accessed_data_subsets"}, {"score": 0.0030637534925896585, "phrase": "adjacent_partitions"}, {"score": 0.0030115611520215384, "phrase": "branched_queries"}, {"score": 0.002884925971272727, "phrase": "object-based_connection"}, {"score": 0.0028195727965553367, "phrase": "data_index"}, {"score": 0.0028034664949456527, "phrase": "value_index"}, {"score": 0.0027165079504297726, "phrase": "final_results"}, {"score": 0.002700988793510088, "phrase": "optimal_time"}, {"score": 0.002639791376760904, "phrase": "experimental_results"}, {"score": 0.002617200582408098, "phrase": "proposed_approach"}, {"score": 0.002579976948095233, "phrase": "real_and_synthetic_xml_data"}, {"score": 0.002536004981903211, "phrase": "comparative_study"}, {"score": 0.0024085241033716736, "phrase": "cpu_cost"}, {"score": 0.0022808906900615342, "phrase": "scanned_elements"}, {"score": 0.002229190333606617, "phrase": "proposed_index"}, {"score": 0.0022037803099076423, "phrase": "performance_speed"}, {"score": 0.0021415125224387914, "phrase": "large_data_repository"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Query optimization", " Index", " Query processing", " Objects", " Semantic", " XML", " Twig query"], "paper_abstract": "The emergence of XML adoption as semi-structured data representation in multi-disciplinary domains has highlighted the need to support the optimization of complex data retrieval processing. In a Big Data environment, the need to speed up data retrieval processes has further grown significantly. In this paper, we have adopted an optimization approach that takes into consideration the semantics of the dataset in order to deal with the complexity of multi-disciplinary domains in Big Data, in particular when the data is represented as XML documents. Our method particularly addresses a twig XML query (or a branched path query), as it is one of the most costly query tasks due to the complexity of the join operation between multiple paths. Our work focuses on optimizing the structural and the content part of XML queries by presenting a method for indexing and processing XML data based on the concept of objects that is formed from the semantic connectivity between XML data nodes. Our method performs object-based data partitioning, which aims at leveraging the notion of frequently-accessed data subsets and putting these subsets together into adjacent partitions. Then, it evaluates branched queries through two essential components: (i) Structural and Content indexing, which use an object-based connection to construct indices i.e. Schema Index, Data Index and Value Index; and (ii) query processing to produce the final results in optimal time. At the end of this paper, a set of experimental results for the proposed approach on a range of real and synthetic XML data, as well as a comparative study with other related work in the area, are presented to demonstrate the effectiveness of our proposed method in terms of CPU cost, matching and merging cost, scalability (size and number of branches) and total number of scanned elements. Our evaluation demonstrates the benefit of the proposed index in terms of performance speed as well as scalability which is critical in a large data repository. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Semantic-based Structural and Content indexing for the efficient retrieval of queries over large XML data repositories", "paper_id": "WOS:000337931200021"}