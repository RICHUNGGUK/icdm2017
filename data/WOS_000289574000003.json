{"auto_keywords": [{"score": 0.04551654538714715, "phrase": "system_reliability"}, {"score": 0.02854432966917363, "phrase": "dynamic_slack"}, {"score": 0.02723176794415051, "phrase": "online_g-rapm_schemes"}, {"score": 0.0263303348251954, "phrase": "proposed_schemes"}, {"score": 0.023162453715298414, "phrase": "better_energy_savings"}, {"score": 0.00481495049065317, "phrase": "based_reliability-aware_power_management"}, {"score": 0.004765482708043842, "phrase": "real-time_systems"}, {"score": 0.004732785510739708, "phrase": "reliability-aware_power_management"}, {"score": 0.004700312295936707, "phrase": "rapm"}, {"score": 0.004525629293824217, "phrase": "negative_effects"}, {"score": 0.004479120557712926, "phrase": "popular_power_management_technique_dynamic_voltage"}, {"score": 0.0044026695170689195, "phrase": "dvfs"}, {"score": 0.004195418010131832, "phrase": "uniprocessor_real-time_systems"}, {"score": 0.004053362743156545, "phrase": "frame-based_independent_real-time_tasks"}, {"score": 0.0039431758381711125, "phrase": "global_scheduling"}, {"score": 0.0038624981944755813, "phrase": "recovery_blocks"}, {"score": 0.0037704502704526996, "phrase": "individual-recovery_and_shared-recovery_based_g-rapm_schemes"}, {"score": 0.0036553070575015344, "phrase": "g-rapm_problem"}, {"score": 0.0035804980565263024, "phrase": "appropriate_subset"}, {"score": 0.0035072146967082083, "phrase": "reliability_management"}, {"score": 0.0033304797419738182, "phrase": "transient_faults"}, {"score": 0.003173545808843704, "phrase": "g-rapm"}, {"score": 0.0031313531076100016, "phrase": "np"}, {"score": 0.003044912038752554, "phrase": "individual-recovery_based_approach"}, {"score": 0.0029518598926717332, "phrase": "local_and_global_task_selections"}, {"score": 0.0028914057633212045, "phrase": "shared-recovery_based_approach"}, {"score": 0.0028616432465945097, "phrase": "linear_search_based_scheme"}, {"score": 0.002755104031926742, "phrase": "timing_constraints"}, {"score": 0.002643386043540555, "phrase": "early_completion"}, {"score": 0.0026071599759743833, "phrase": "unused_recoveries"}, {"score": 0.002527451565708784, "phrase": "slack-sharing_idea"}, {"score": 0.0025014259919355453, "phrase": "previous_work"}, {"score": 0.002441734529530325, "phrase": "extensive_simulations"}, {"score": 0.0023426936553484524, "phrase": "energy_savings"}, {"score": 0.002255431275670053, "phrase": "static_version"}, {"score": 0.0022092084106039834, "phrase": "shared-recovery_based_scheme"}, {"score": 0.0021416404045850224, "phrase": "individual-recovery_based_scheme"}], "paper_keywords": ["Energy management", " Dynamic voltage and frequency scaling", " Reliability management", " Multiprocessor real-time systems"], "paper_abstract": "Reliability-aware power management (RAPM) has been a recent research focus due to the negative effects of the popular power management technique dynamic voltage and frequency scaling (DVFS) on system reliability. As a result, several RAPM schemes have been studied for uniprocessor real-time systems. In this paper, for a set of frame-based independent real-time tasks running on multiprocessor systems, we study global scheduling based RAPM (G-RAPM) schemes. Depending on how recovery blocks are scheduled and utilized, both individual-recovery and shared-recovery based G-RAPM schemes are investigated. An important dimension of the G-RAPM problem is how to select the appropriate subset of tasks for energy and reliability management (i.e., scale down their executions while ensuring that they can be recovered from transient faults). We show that making such decision optimally (i.e., the static G-RAPM problem) is NP-hard. Then, for the individual-recovery based approach, we study two efficient heuristics, which rely on local and global task selections, respectively. For the shared-recovery based approach, a linear search based scheme is proposed. The schemes are shown to guarantee the timing constraints. Moreover, to reclaim the dynamic slack generated at runtime from early completion of tasks and unused recoveries, we also propose online G-RAPM schemes which exploit the slack-sharing idea studied in previous work. The proposed schemes are evaluated through extensive simulations. The results show the effectiveness of the proposed schemes in yielding energy savings while simultaneously preserving system reliability and timing constraints. For the static version of the problem, the shared-recovery based scheme is shown to provide better energy savings compared to the individual-recovery based scheme, in virtue of its ability to leave more slack for DVFS. Moreover, by reclaiming the dynamic slack generated at runtime, online G-RAPM schemes are shown to yield better energy savings.", "paper_title": "Global scheduling based reliability-aware power management for multiprocessor real-time systems", "paper_id": "WOS:000289574000003"}