{"auto_keywords": [{"score": 0.0330572420915156, "phrase": "ethom"}, {"score": 0.015719716506582538, "phrase": "computationally_hard_feature_models"}, {"score": 0.004686963264680882, "phrase": "feature_model"}, {"score": 0.0046242451772036145, "phrase": "compact_representation"}, {"score": 0.00450130420152996, "phrase": "software_product_line"}, {"score": 0.004441059405327222, "phrase": "automated_extraction"}, {"score": 0.0043619799095455415, "phrase": "feature_models"}, {"score": 0.004303591748086452, "phrase": "thriving_topic"}, {"score": 0.0042650992966174065, "phrase": "numerous_analysis_operations"}, {"score": 0.00415166680936294, "phrase": "performance_evaluations"}, {"score": 0.003969250376327401, "phrase": "random_feature_models"}, {"score": 0.0038290829316346654, "phrase": "rough_idea"}, {"score": 0.003693846909452865, "phrase": "average_problems"}, {"score": 0.0032863459256972896, "phrase": "optimization_problem"}, {"score": 0.0031845067058084613, "phrase": "novel_evolutionary_algorithm"}, {"score": 0.0031559919178954644, "phrase": "optimized_feature_models"}, {"score": 0.0030171910207671205, "phrase": "analysis_operation"}, {"score": 0.002963390095037466, "phrase": "input_models"}, {"score": 0.0029236680654022664, "phrase": "predefined_size"}, {"score": 0.0028458096625791625, "phrase": "execution_time"}, {"score": 0.0028076592725295646, "phrase": "memory_consumption"}, {"score": 0.0025202582748972122, "phrase": "pessimistic_cases"}, {"score": 0.0024864612830452254, "phrase": "better_idea"}, {"score": 0.0024311346712789553, "phrase": "performance_bugs"}, {"score": 0.0022318655527987846, "phrase": "higher_memory_consumption"}, {"score": 0.0021821915946356168, "phrase": "random_models"}, {"score": 0.00216263228969761, "phrase": "identical_or_even_larger_size"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Search-based testing", " Software product lines", " Evolutionary algorithms", " Feature models", " Performance testing", " Automated analysis"], "paper_abstract": "A feature model is a compact representation of the products of a software product line. The automated extraction of information from feature models is a thriving topic involving numerous analysis operations, techniques and tools. Performance evaluations in this domain mainly rely on the use of random feature models. However, these only provide a rough idea of the behaviour of the tools with average problems and are not sufficient to reveal their real strengths and weaknesses. In this article, we propose to model the problem of finding computationally hard feature models as an optimization problem and we solve it using a novel evolutionary algorithm for optimized feature models (ETHOM). Given a tool and an analysis operation, ETHOM generates input models of a predefined size maximizing aspects such as the execution time or the memory consumption of the tool when performing the operation over the model. This allows users and developers to know the performance of tools in pessimistic cases providing a better idea of their real power and revealing performance bugs. Experiments using ETHOM on a number of analyses and tools have successfully identified models producing much longer executions times and higher memory consumption than those obtained with random models of identical or even larger size. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Automated generation of computationally hard feature models using evolutionary algorithms", "paper_id": "WOS:000331682100036"}