{"auto_keywords": [{"score": 0.048522326887293465, "phrase": "fbp"}, {"score": 0.015356888876493379, "phrase": "flow-level_bandwidth_provisioning"}, {"score": 0.00481495049065317, "phrase": "openflow-based_flow-level_bandwidth"}, {"score": 0.0047472380621488616, "phrase": "cicq_switches"}, {"score": 0.004592905436175987, "phrase": "fine-grained_bandwidth_assurance"}, {"score": 0.00438105507792004, "phrase": "virtualization-based_computing_environments"}, {"score": 0.004218602458288531, "phrase": "existing_flow-level_bandwidth_provisioning_solutions"}, {"score": 0.004043003243656031, "phrase": "high_implementation_complexity"}, {"score": 0.0040049806975968145, "phrase": "poor_performance_guarantees"}, {"score": 0.0038930368103015467, "phrase": "variable_length_packets"}, {"score": 0.003525220627709056, "phrase": "flow-level_bandwidth_provisioning_algorithm"}, {"score": 0.0034920507699883105, "phrase": "cicq"}, {"score": 0.0033943947596098583, "phrase": "switch_scheduling_problem"}, {"score": 0.0033624514778823763, "phrase": "multiple_instances"}, {"score": 0.0033308077968426937, "phrase": "fair_queuing_problems"}, {"score": 0.0032529910932231924, "phrase": "well-studied_fair_queuing_algorithm"}, {"score": 0.0030881143614111552, "phrase": "ideal_generalized_processing_sharing_model"}, {"score": 0.0030017207229983385, "phrase": "provisioned_bandwidth"}, {"score": 0.0028766278519176355, "phrase": "openflow_software_switch"}, {"score": 0.0028360962841331634, "phrase": "realistic_performance_data"}, {"score": 0.002580061425699194, "phrase": "practical_flow-level_bandwidth_provisioning_solution"}, {"score": 0.002507845411496512, "phrase": "extensive_simulations"}, {"score": 0.00240328454980006, "phrase": "simulation_data"}, {"score": 0.002336004938424957, "phrase": "analytical_results"}, {"score": 0.002259883463607508, "phrase": "tight_performance_guarantees"}, {"score": 0.0022280223816618736, "phrase": "experiment_results"}, {"score": 0.0021049977753042253, "phrase": "flow_level"}], "paper_keywords": ["OpenFlow", " CICQ switches", " bandwidth provisioning"], "paper_abstract": "Flow-level bandwidth provisioning (FBP) achieves fine-grained bandwidth assurance for individual flows. It is especially important for virtualization-based computing environments such as data centers. However, existing flow-level bandwidth provisioning solutions suffer from a number of drawbacks, including high implementation complexity, poor performance guarantees, and inefficiency to process variable length packets. In this paper, we study flow-level bandwidth provisioning for Combined Input Crosspoint Queued (CICQ) switches in the OpenFlow context. First, we propose the Flow-level Bandwidth Provisioning algorithm for CICQ switches, which reduces the switch scheduling problem to multiple instances of fair queuing problems, each utilizing a well-studied fair queuing algorithm. We theoretically prove that FBP can closely emulate the ideal Generalized Processing Sharing model, and accurately guarantee the provisioned bandwidth. Furthermore, we implement FBP in the OpenFlow software switch to obtain realistic performance data by a prototype. Leveraging the capability of OpenFlow to define and manipulate flows, we experimentally demonstrate a practical flow-level bandwidth provisioning solution. Finally, we conduct extensive simulations and experiments to evaluate the design. The simulation data verify the correctness of the analytical results, and show that FBP achieves tight performance guarantees. The experiment results demonstrate that our OpenFlow-based prototype can conveniently and accurately provision bandwidth at the flow level.", "paper_title": "OpenFlow-Based Flow-Level Bandwidth Provisioning for CICQ Switches", "paper_id": "WOS:000322453200010"}