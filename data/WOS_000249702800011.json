{"auto_keywords": [{"score": 0.05005861339005481, "phrase": "divisible_load_distribution"}, {"score": 0.04698415442693218, "phrase": "linear_arrays"}, {"score": 0.04432396220512619, "phrase": "li"}, {"score": 0.004766090327062509, "phrase": "k-dimensional_meshes"}, {"score": 0.004552255360140208, "phrase": "classic_methods"}, {"score": 0.004392565073466714, "phrase": "communication_processes"}, {"score": 0.004347972379250724, "phrase": "multiple_time_intervals"}, {"score": 0.0042819270655224916, "phrase": "pipelined_fashion"}, {"score": 0.0040481944502103505, "phrase": "improved_algorithms"}, {"score": 0.0038862297330905836, "phrase": "k-_dimensional_meshes"}, {"score": 0.0036928221419965253, "phrase": "algorithm_m"}, {"score": 0.0034556603183020407, "phrase": "multiinstallment_technique"}, {"score": 0.0033857878144822906, "phrase": "best_algorithm_q"}, {"score": 0.0032172054825137866, "phrase": "algorithm_s"}, {"score": 0.0028459677232555176, "phrase": "asymptotic_speed-_ups"}, {"score": 0.002731971103291716, "phrase": "closed-_form_solutions"}, {"score": 0.0026630475331025955, "phrase": "algorithm_q"}, {"score": 0.0025958582759972315, "phrase": "optimal_speed-_ups"}, {"score": 0.0023798115577749225, "phrase": "algorithms_m"}, {"score": 0.002272794656458419, "phrase": "algorithm_ms"}, {"score": 0.0021817065300196634, "phrase": "algorithms_q"}, {"score": 0.0021049977753042253, "phrase": "better_speed-"}], "paper_keywords": ["divisible load theory", " linear array", " k-dimensional mesh", " multi-installment"], "paper_abstract": "In the divisible load distribution, the classic methods on linear arrays divide the computation and communication processes into multiple time intervals in a pipelined fashion. Li [ 21] has proposed a set of improved algorithms for linear arrays that can be generalized to k- dimensional meshes. In this paper, we first propose the algorithm M ( (m) under bar ulti- installment) that employs the multiinstallment technique to improve the best algorithm Q proposed by Li. Second, we propose the algorithm S ( (s) under bar tart- up cost), which includes the computation and communication start- up costs in the design. Although the asymptotic speed- ups of our algorithmsM and S derived from the closed- form solutions are the same as algorithm Q, our algorithms approach the optimal speed- ups considerably faster than algorithm Q as the number of processors increases. Finally, we combine algorithms M and S and propose the algorithm MS. Although algorithm MS has the same the asymptotic performance as algorithms Q and S, it achieves a better speed- up when the load to be processed is very large and the number of processors is fixed or when the load to be processed is fixed and the number of processors is small.", "paper_title": "Improved methods for divisible load distribution on k-dimensional meshes using multi-installment", "paper_id": "WOS:000249702800011"}