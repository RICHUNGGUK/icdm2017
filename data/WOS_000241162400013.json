{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "open-world_software"}, {"score": 0.004515252649226697, "phrase": "current_software_development_approach"}, {"score": 0.004352411290383643, "phrase": "external_world"}, {"score": 0.003970439654470374, "phrase": "long_periods"}, {"score": 0.0038624981944755813, "phrase": "closed-world_assumptions"}, {"score": 0.003689053436223376, "phrase": "ubiquitous_and_pervasive_computing_settings"}, {"score": 0.003097865379563127, "phrase": "open_world"}, {"score": 0.0030135741897058844, "phrase": "unprecedented_levels"}, {"score": 0.002931569771634119, "phrase": "existing_approaches"}, {"score": 0.002878140062594849, "phrase": "software_development"}, {"score": 0.002723607240517261, "phrase": "new_challenges"}, {"score": 0.0025537472239953807, "phrase": "dynamic_and_heterogeneous_systems"}, {"score": 0.0023507916951658455, "phrase": "self-adapting_capabilities"}, {"score": 0.002224510044064184, "phrase": "new_approaches"}, {"score": 0.0021049977753042253, "phrase": "new_ways"}], "paper_keywords": [""], "paper_abstract": "The current software development approach assumes that the external world changes slowly and that software can remain stable for long periods. These closed-world assumptions don't hold in ubiquitous and pervasive computing settings, where the world is intrinsically open. The need for software that can continuously evolve in an open world is reaching unprecedented levels, but existing approaches to software development can't cope with these new challenges. The more we move toward dynamic and heterogeneous systems, and the more we stress their self-healing and self-adapting capabilities, the more we need new approaches to develop these applications and new ways to structure and program them.", "paper_title": "Toward open-world software: Issues and challenges", "paper_id": "WOS:000241162400013"}