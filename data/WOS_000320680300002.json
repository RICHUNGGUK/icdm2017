{"auto_keywords": [{"score": 0.047414239704772286, "phrase": "lbm"}, {"score": 0.00481495049065317, "phrase": "scalable_lattice"}, {"score": 0.004785237822010286, "phrase": "boltzmann"}, {"score": 0.004694092086199672, "phrase": "cuda_gpu_clusters"}, {"score": 0.004605434064238641, "phrase": "lattice_boltzmann_method"}, {"score": 0.00443308765153716, "phrase": "innovative_and_promising_approach"}, {"score": 0.004377077848734575, "phrase": "computational_fluid_dynamics"}, {"score": 0.004267163206961948, "phrase": "algorithmic_standpoint"}, {"score": 0.004133627071344356, "phrase": "regular_data_parallel_procedure"}, {"score": 0.003928572641266562, "phrase": "high_performance_computations"}, {"score": 0.0038789122930433305, "phrase": "numerous_works"}, {"score": 0.003829877278269543, "phrase": "efficient_implementations"}, {"score": 0.003204841443605308, "phrase": "practical_interest"}, {"score": 0.0031643005824589917, "phrase": "gpu_lbm_solvers"}, {"score": 0.003026391655379905, "phrase": "large_scale_simulations"}, {"score": 0.0029502941554043964, "phrase": "present_contribution"}, {"score": 0.002857849698346116, "phrase": "efficient_lbm_implementation"}, {"score": 0.002821685815956478, "phrase": "cuda_cpu_clusters"}, {"score": 0.0026815368507715, "phrase": "mpi_communication_routines"}, {"score": 0.0026307897899760383, "phrase": "cuda_kernel"}, {"score": 0.002548331088496964, "phrase": "three-dimensional_partitioning"}, {"score": 0.0025000985765154028, "phrase": "computation_domain"}, {"score": 0.002468450551616404, "phrase": "performance_measurement"}, {"score": 0.0023758843175179702, "phrase": "small_cluster"}, {"score": 0.0021731423856364003, "phrase": "data_throughput"}, {"score": 0.0021456243019466843, "phrase": "parallelisation_efficiency"}], "paper_keywords": ["GPU clusters", " CUDA", " Lattice Boltzmann method"], "paper_abstract": "The lattice Boltzmann method (LBM) is an innovative and promising approach in computational fluid dynamics. From an algorithmic standpoint it reduces to a regular data parallel procedure and is therefore well-suited to high performance computations. Numerous works report efficient implementations of the LBM for the CPU, but very few mention multi-GPU versions and even fewer CPU cluster implementations. Yet, to be of practical interest, GPU LBM solvers need to be able to perform large scale simulations. In the present contribution, we describe an efficient LBM implementation for CUDA CPU clusters. Our solver consists of a set of MPI communication routines and a CUDA kernel specifically designed to handle three-dimensional partitioning of the computation domain. Performance measurement were carried out on a small cluster. We show that the results are satisfying, both in terms of data throughput and parallelisation efficiency. (c) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Scalable lattice Boltzmann solvers for CUDA GPU clusters", "paper_id": "WOS:000320680300002"}