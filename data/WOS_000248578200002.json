{"auto_keywords": [{"score": 0.034762647822704884, "phrase": "performance_properties"}, {"score": 0.010938910973031471, "phrase": "formal_specification"}, {"score": 0.009560423327760116, "phrase": "performance_bottlenecks"}, {"score": 0.00481495049065317, "phrase": "performance_problems"}, {"score": 0.004750178261675602, "phrase": "asl._performance_analysis"}, {"score": 0.004654642380553263, "phrase": "important_step"}, {"score": 0.004561019117546361, "phrase": "performance-critical_applications"}, {"score": 0.004409127897028587, "phrase": "cyclic_process"}, {"score": 0.004262273304740847, "phrase": "performance_data"}, {"score": 0.004120289747942224, "phrase": "programmer's_hypotheses"}, {"score": 0.0040648241451154525, "phrase": "potential_performance_problems"}, {"score": 0.0034311578789991363, "phrase": "performance_analysis_process"}, {"score": 0.0031845067058084583, "phrase": "apart_project"}, {"score": 0.0031203609829058587, "phrase": "apart_specification_language"}, {"score": 0.0025804616931593897, "phrase": "large_negative_impact"}, {"score": 0.0024774888010414206, "phrase": "overall_design"}, {"score": 0.002427549902743566, "phrase": "initial_evaluation"}, {"score": 0.00237861522566195, "phrase": "periscope_system"}, {"score": 0.002330664671716791, "phrase": "asl_specifications"}, {"score": 0.0022074592164608134, "phrase": "distributed_manner"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["performance analysis", " APART Specification Language", " automation", " distributed search"], "paper_abstract": "Performance analysis is an important step in tuning performance-critical applications. It is a cyclic process of measuring and analyzing performance data, driven by the programmer's hypotheses on potential performance problems. Currently this process is controlled manually by the programmer. The goal of the work described in this article is to automate the performance analysis process based on a formal specification of performance properties. One result of the APART project is the APART Specification Language (ASL) for the formal specification of performance properties. Performance bottlenecks can then be identified based on the specification, since bottlenecks are viewed as performance properties with a large negative impact. We also present the overall design and an initial evaluation of the Periscope system which utilizes ASL specifications to automatically search for performance bottlenecks in a distributed manner. Copyright (c) 2006 John Wiley & Sons, Ltd.", "paper_title": "Specification and detection of performance problems with ASL", "paper_id": "WOS:000248578200002"}