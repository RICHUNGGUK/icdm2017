{"auto_keywords": [{"score": 0.03538615463737514, "phrase": "modular_redundancy"}, {"score": 0.015719716506582538, "phrase": "series-parallel_systems"}, {"score": 0.013166746291300374, "phrase": "system_reliability"}, {"score": 0.013089094361169151, "phrase": "multilevel_systems"}, {"score": 0.011321712975635043, "phrase": "component_redundancy"}, {"score": 0.009171652866388108, "phrase": "hierarchical_genotypes"}, {"score": 0.004757849078050144, "phrase": "truly_optimal_system_reliability"}, {"score": 0.004673458200854065, "phrase": "complex_system"}, {"score": 0.004631823134072564, "phrase": "multilevel_reliability_configuration_concerns"}, {"score": 0.004590557276496284, "phrase": "earliest_possible_design_stage"}, {"score": 0.0045225925147033205, "phrase": "appropriate_degrees"}, {"score": 0.004324650333875634, "phrase": "current_practice"}, {"score": 0.004247910389657671, "phrase": "single_level"}, {"score": 0.004210050422187886, "phrase": "inferior_optimal_solutions"}, {"score": 0.004123012124092743, "phrase": "multilevel_redundancy_allocation_problems"}, {"score": 0.004098474819777767, "phrase": "multilevel_redundancy_allocation_optimization_problems"}, {"score": 0.003907340732073545, "phrase": "modular_scheme"}, {"score": 0.003884081948117292, "phrase": "redundancy_allocation"}, {"score": 0.0037698405700547608, "phrase": "fault_tolerance"}, {"score": 0.0037362254649023225, "phrase": "optimum_design"}, {"score": 0.003583261176506348, "phrase": "multilevel_reliability_system"}, {"score": 0.0035513038412674763, "phrase": "design_engineer"}, {"score": 0.0034778368609967754, "phrase": "traditional_focus"}, {"score": 0.0032664003336950243, "phrase": "modular_redundancy_allocation"}, {"score": 0.0032276039113189286, "phrase": "multilevel_reliability_configurations"}, {"score": 0.003141983150118255, "phrase": "modular_design_variable"}, {"score": 0.0030495020877548324, "phrase": "multilevel_redundancy_allocation_problem"}, {"score": 0.002959735028884561, "phrase": "hierarchical_genetic_algorithm"}, {"score": 0.0028726027956447885, "phrase": "modular_redundancy_allocation_optimization_problems"}, {"score": 0.002830000621502133, "phrase": "design_variables"}, {"score": 0.0025872989069543892, "phrase": "possible_modular_configurations"}, {"score": 0.0025642012084841886, "phrase": "numerical_examples"}, {"score": 0.002488684109969271, "phrase": "customized_hga"}, {"score": 0.0024591021632707185, "phrase": "multilevel_system_reliability"}, {"score": 0.002268394245801392, "phrase": "demonstrated_methodology"}, {"score": 0.00224142490874505, "phrase": "future_research"}, {"score": 0.0022214080683353476, "phrase": "significantly_better_solutions"}, {"score": 0.0022015695920570167, "phrase": "technological_challenges"}, {"score": 0.0021431085940929783, "phrase": "lower_lifecycle_cost"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Redundancy allocation", " Multilevel series system", " Multilevel series-parallel", " Modular redundancy", " Component redundancy", " Genetic algorithms"], "paper_abstract": "To achieve truly optimal system reliability, the design of a complex system must address multilevel reliability configuration concerns at the earliest possible design stage, to ensure that appropriate degrees of reliability are allocated to every unit at all levels. However, the current practice of allocating reliability at a single level leads to inferior optimal solutions, particularly in the class of multilevel redundancy allocation problems. Multilevel redundancy allocation optimization problems frequently occur in optimizing the system reliability Of Multilevel systems. It has been found that a modular scheme of redundancy allocation in multilevel systems not only enhances system reliability but also provides fault tolerance to the optimum design. Therefore, to increase the efficiency, reliability and maintainability of a multilevel reliability system, the design engineer has to shift away from the traditional focus on component redundancy, and deal more effectively with issues pertaining to modular redundancy. This paper proposes a method for optimizing modular redundancy allocation in two types of multilevel reliability configurations, series and series-parallel. A modular design variable is defined to handle modular redundancy in these two types of multilevel redundancy allocation problem. A customized genetic algorithm, namely, a hierarchical genetic algorithm (HGA), is applied to solve the modular redundancy allocation optimization problems, in which the design variables are coded as hierarchical genotypes. These hierarchical genotypes are represented by two nodal genotypes, ordinal and terminal. Using these two genotypes is extremely effective, since this allows representation of all possible modular configurations. The numerical examples solved in this paper demonstrate the efficacy of a customized HGA in optimizing the multilevel system reliability. Additionally, the results obtained in this paper indicate that achieving modular redundancy in series and series-parallel systems provides significant advantages when compared with component redundancy. The demonstrated methodology also indicates that future research may yield significantly better solutions to the technological challenges of designing more fault-tolerant systems that provide improved reliability and lower lifecycle cost. (c) 2008 Elsevier Ltd. All rights reserved.", "paper_title": "Optimal multilevel redundancy allocation in series and series-parallel systems", "paper_id": "WOS:000267518000018"}