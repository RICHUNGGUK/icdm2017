{"auto_keywords": [{"score": 0.02533919821074738, "phrase": "ilp_technique"}, {"score": 0.00481495049065317, "phrase": "falling_edge"}, {"score": 0.004713379149462482, "phrase": "peak_current_reduction"}, {"score": 0.004565007074039171, "phrase": "typical_soc"}, {"score": 0.004374385639298755, "phrase": "huge_peak_current"}, {"score": 0.004191690483929023, "phrase": "active_clock_edge"}, {"score": 0.0041251561573501455, "phrase": "aggregate_switching"}, {"score": 0.004059673618719782, "phrase": "large_number"}, {"score": 0.003931798194574009, "phrase": "aggregate_switching_transistors"}, {"score": 0.0038079353103469865, "phrase": "soc_design"}, {"score": 0.003727527379253624, "phrase": "clock_scheme"}, {"score": 0.003261934055562238, "phrase": "clock_triggering_edge_assignment_technique"}, {"score": 0.0029789104204803137, "phrase": "ip_core"}, {"score": 0.0027791193706247267, "phrase": "peak_current"}, {"score": 0.0026345758986796703, "phrase": "software_system"}, {"score": 0.0025514745448798363, "phrase": "lp_technique"}, {"score": 0.002497531381123025, "phrase": "optimal_or_suboptimal_solution"}, {"score": 0.00232995025271599, "phrase": "optimal_solution"}, {"score": 0.0021735890994119757, "phrase": "complex_design_experimental_results"}, {"score": 0.0021049977753042253, "phrase": "peak_currents"}], "paper_keywords": ["clock scheme", " globally asynchronous locally synchronous", " IR drop", " Network on Chip"], "paper_abstract": "In a typical SoC (System on Chip) design a huge peak current often occurs near the time of an active clock edge because of aggregate switching of a large number of transistors The number of aggregate switching transistors can be lessened if the SoC design can use a clock scheme of mixed rising and falling triggering edges rather than one of pure rising (falling) triggering edges In this paper we propose a clock triggering edge assignment technique and algorithms that can assign either a rising triggering edge or a falling triggering edge to each clock of each IP core of a given IP based SoC/NoC (Network on Chip) design The goal of the algorithms is to reduce the peak current of the design Our proposed technique has been Implemented as a software system The system can use an LP technique to find an optimal or suboptimal solution within several seconds The system also can use an ILP technique to find an optimal solution but the ILP technique is not suitable to be used to solve a complex design Experimental results show that our algorithms can reduce peak currents up to 56 3%", "paper_title": "Combined Use of Rising and Falling Edge Triggered Clocks for Peak Current Reduction in IP-Based SoC/NoC Designs", "paper_id": "WOS:000285434400028"}