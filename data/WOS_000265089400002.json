{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "differential_unit_test_cases"}, {"score": 0.004762202897268383, "phrase": "system_test_cases"}, {"score": 0.00471003041684707, "phrase": "unit_test_cases"}, {"score": 0.004556901872357751, "phrase": "system_tests"}, {"score": 0.00443308765153716, "phrase": "complex_usage_patterns"}, {"score": 0.004384504920139083, "phrase": "differential_unit_tests"}, {"score": 0.004195418010131832, "phrase": "unit_and_system_tests"}, {"score": 0.003948613642680196, "phrase": "system_components"}, {"score": 0.003841263262252044, "phrase": "system_test_case"}, {"score": 0.003675517796014622, "phrase": "target_unit"}, {"score": 0.003328184259386487, "phrase": "system_test"}, {"score": 0.0030470127429039497, "phrase": "unit_tests"}, {"score": 0.002789528662623221, "phrase": "intricate_system_executions"}, {"score": 0.0025678829712650437, "phrase": "wide_variety"}, {"score": 0.0024434201175883674, "phrase": "automated_instance"}, {"score": 0.002337848196418384, "phrase": "test_cost"}], "paper_keywords": ["Automated test generation", " carving and replay", " regression testing"], "paper_abstract": "Unit test cases are focused and efficient. System tests are effective at exercising complex usage patterns. Differential unit tests (DUTs) are a hybrid of unit and system tests that exploits their strengths. They are generated by carving the system components, while executing a system test case, that influence the behavior of the target unit and then reassembling those components so that the unit can be exercised as it was by the system test. In this paper, we show that DUTs retain some of the advantages of unit tests, can be automatically generated, and have the potential for revealing faults related to intricate system executions. We present a framework for carving and replaying DUTs that accounts for a wide variety of strategies and trade-offs, we implement an automated instance of the framework with several techniques to mitigate test cost and enhance flexibility and robustness, and we empirically assess the efficacy of carving and replaying DUTs on three software artifacts.", "paper_title": "Carving and Replaying Differential Unit Test Cases from System Test Cases", "paper_id": "WOS:000265089400002"}