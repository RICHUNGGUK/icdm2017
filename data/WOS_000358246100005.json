{"auto_keywords": [{"score": 0.05007823144140373, "phrase": "genetic_algorithm"}, {"score": 0.047290360878188956, "phrase": "cws"}, {"score": 0.02962554494562219, "phrase": "execution_time"}, {"score": 0.025484051136214825, "phrase": "experimental_results"}, {"score": 0.004573842508130535, "phrase": "composite_web_service"}, {"score": 0.00445783412174435, "phrase": "transactional_mechanism"}, {"score": 0.004326188427877999, "phrase": "existing_service_selection_methods"}, {"score": 0.0038868464660354626, "phrase": "locally_optimal_transactional_cws"}, {"score": 0.0038044630943383497, "phrase": "globally_optimal_cws"}, {"score": 0.0035676056286816915, "phrase": "web_services"}, {"score": 0.0034923782507288743, "phrase": "ga"}, {"score": 0.003388745581055085, "phrase": "qos-aware_selection_approach"}, {"score": 0.0033026956021014204, "phrase": "transactional_properties"}, {"score": 0.0032604908177429493, "phrase": "single_web_service"}, {"score": 0.00319134078848996, "phrase": "transactional_rules"}, {"score": 0.003044313656896057, "phrase": "performance_analysis"}, {"score": 0.0030183163057929687, "phrase": "basic_workflow_patterns"}, {"score": 0.0028916124463906983, "phrase": "loop_patterns"}, {"score": 0.0027583557819362034, "phrase": "complex_cws."}, {"score": 0.0026882700311968025, "phrase": "ga-based_approach"}, {"score": 0.002564360070426064, "phrase": "transactional_property"}, {"score": 0.002467228805628948, "phrase": "globally_optimal_service_selection"}, {"score": 0.002353483216544667, "phrase": "proposed_approach"}, {"score": 0.0023233800372985686, "phrase": "exhaustive_search_algorithm"}, {"score": 0.00218789980093445, "phrase": "proposed_algorithm"}, {"score": 0.0021049977753042253, "phrase": "globally_optimal_transactional_cws."}], "paper_keywords": ["Discrete event systems", " genetic algorithm (GA)", " global optimization", " quality of service (QoS)", " web service composition", " web service selection", " workflow analysis"], "paper_abstract": "As there are various risks of failure in its execution, a composite web service (CWS) requires a transactional mechanism to guarantee its reliable execution. Though the existing service selection methods have considered that its transactional properties may affect its quality of service (QoS) such as its execution time, some of these methods can just give the locally optimal transactional CWS while others can give globally optimal CWS only under a given fixed transactional workflow. This paper addresses the issue of selecting and composing web services via a genetic algorithm (GA) and gives a transaction and QoS-aware selection approach. First, it introduces transactional properties of a single web service and CWS and the transactional rules used to compose them. Next, it conducts the performance analysis of basic workflow patterns such as sequential, parallel, selectable, and loop patterns and develops an algorithm to compute the execution time of a complex CWS. Then, it presents a GA-based approach, which takes into account the execution time, price, transactional property, stability, and penalty-factor, to achieve globally optimal service selection. Finally, this paper reports experimental results that compare the proposed approach with the exhaustive search algorithm, transactional-QoS-driven selection algorithm, and transactional service selection algorithm. The experimental results show that the proposed algorithm is efficient and effective and can give a globally optimal transactional CWS.", "paper_title": "A Transaction and QoS-Aware Service Selection Approach Based on Genetic Algorithm", "paper_id": "WOS:000358246100005"}