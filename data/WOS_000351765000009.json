{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multi-corner_multi-mode_timing_closure"}, {"score": 0.004696407360309416, "phrase": "complex_design_scenarios"}, {"score": 0.004663074596384574, "phrase": "timing_closure"}, {"score": 0.0045971138571344345, "phrase": "challenging_and_tedious_job"}, {"score": 0.004515967518891287, "phrase": "timing_violations"}, {"score": 0.004342430078306461, "phrase": "deep-routing_stage"}, {"score": 0.004145882022189891, "phrase": "useful_clock"}, {"score": 0.004029359223675788, "phrase": "effective_way"}, {"score": 0.003986509098918949, "phrase": "design_convergence"}, {"score": 0.0038744481564444173, "phrase": "useful_skew"}, {"score": 0.003752126270661821, "phrase": "sequential_elements"}, {"score": 0.0037122133844189296, "phrase": "actual_tree"}, {"score": 0.003531474887552889, "phrase": "calculated_schedules"}, {"score": 0.003493900927782043, "phrase": "later_stages"}, {"score": 0.0034690732089830045, "phrase": "design_cycle"}, {"score": 0.00335950642866031, "phrase": "novel_clock_tree_resynthesis_methodology"}, {"score": 0.0032883848851259123, "phrase": "skew_scheduling_engine"}, {"score": 0.0032302647179383915, "phrase": "already_built_clock_tree"}, {"score": 0.003105979498529766, "phrase": "positive_and_negative_offsets"}, {"score": 0.002986461855862617, "phrase": "clock_arrival"}, {"score": 0.002954669496511141, "phrase": "clock_tree_pins"}, {"score": 0.0028409576481842457, "phrase": "output_pins"}, {"score": 0.0028107098861552124, "phrase": "leaf-level_clock_drivers"}, {"score": 0.0027610089418453614, "phrase": "traditional_clock_scheduling"}, {"score": 0.0027316100642958544, "phrase": "clock_pins"}, {"score": 0.002664221051021009, "phrase": "better_implementability"}, {"score": 0.0026452734009203764, "phrase": "lesser_area"}, {"score": 0.002525347599743456, "phrase": "clock_tree"}, {"score": 0.0025073851194697397, "phrase": "experimental_results"}, {"score": 0.0024895500851796603, "phrase": "large-scale_industrial_designs"}, {"score": 0.002359759876402679, "phrase": "total_negative_slack"}, {"score": 0.002342972434255588, "phrase": "worst_negative_slack"}, {"score": 0.0022527488455744674, "phrase": "clock_tree_area"}, {"score": 0.002120083747913758, "phrase": "timing_metric_improvement"}, {"score": 0.0021049977753042253, "phrase": "clock_tree_overhead"}], "paper_keywords": ["Clock skew scheduling", " clock tree synthesis (CTS)", " engineering change order (ECO)", " multi-corner", " multi-mode (MCMM)", " useful skew"], "paper_abstract": "With aggressive technology scaling and complex design scenarios, timing closure has become a challenging and tedious job for the designers. Timing violations persist for multi-corner, multi-mode designs in the deep-routing stage although careful optimization has been applied at every step after synthesis. Useful clock skew optimization has been suggested as an effective way to achieve design convergence and timing closure. Existing approaches on useful skew optimization: 1) calculate clock skew at sequential elements before the actual tree is synthesized and 2) do not account for the implementability of the calculated schedules at the later stages of design cycle. In this paper, we propose a novel clock tree resynthesis methodology which is based on a skew scheduling engine which works on an already built clock tree. The output of the engine is a set of positive and negative offsets which translate to the delay and accelerations, respectively in clock arrival at the clock tree pins. We demonstrate the effectiveness of the offsets at the output pins of the leaf-level clock drivers in comparison to the traditional clock scheduling in the clock pins of the flip-flops due to the better implementability and lesser area overhead and present an algorithm to accurately realize these offsets in the clock tree. Experimental results on large-scale industrial designs demonstrate that our clock tree resynthesis methodology achieves respectively 57%, 12%, and 42% average improvement in total negative slack, worst negative slack, and failure-end-point with an average overhead of 26% in clock tree area. We also experimentally study the impact of on-chip-variation-derates on our approach in terms of the timing metric improvement and clock tree overhead.", "paper_title": "Clock Tree Resynthesis for Multi-Corner Multi-Mode Timing Closure", "paper_id": "WOS:000351765000009"}