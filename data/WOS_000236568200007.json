{"auto_keywords": [{"score": 0.04842456838190479, "phrase": "gca"}, {"score": 0.00481495049065317, "phrase": "greater_processing_and_speedup_requirements"}, {"score": 0.00470341117804131, "phrase": "grand_challenge_applications"}, {"score": 0.00454090611248773, "phrase": "new_computing"}, {"score": 0.004232475065285966, "phrase": "huge_data_repositories"}, {"score": 0.0039449104968131655, "phrase": "computing_systems"}, {"score": 0.003591542373891629, "phrase": "major_topics"}, {"score": 0.003487721546598799, "phrase": "high-performance_systems"}, {"score": 0.003447035529485425, "phrase": "existing_data-intensive_gca"}, {"score": 0.0032697235411641695, "phrase": "high_energy_physics"}, {"score": 0.0032315723330399375, "phrase": "climate_modeling"}, {"score": 0.002890557197908352, "phrase": "new_approaches"}, {"score": 0.002725740264152553, "phrase": "mapfs"}, {"score": 0.002409503258044183, "phrase": "efficient_and_flexible_fashion"}, {"score": 0.002272053079580848, "phrase": "storage_system"}, {"score": 0.0022323643840655646, "phrase": "different_data"}, {"score": 0.0022192891418394514, "phrase": "access_patterns"}, {"score": 0.0021805201234139475, "phrase": "additional_functionalities"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["parallel I/O", " cluster computing", " multiagent architectures", " access patterns"], "paper_abstract": "The emergence of applications with greater processing and speedup requirements. such as Grand Challenge Applications (GCA), involves new computing and I/O needs. Many of these applications require access to huge data repositories and other I/O sources. making the I/O phase a bottleneck in the computing systems, due to its poor performance. In this sense, parallel I/O is becoming one of the major topics in the area of high-performance systems. Existing data-intensive GCA have been used in several domains, such as high energy physics, climate modeling, biology or visualization. Since the I/O problem has not been solved in this kind of applications, new approaches are required in this case. This paper presents MAPFS, a multiagent architecture, whose goal is to allow applications to access data in a cluster of workstations in an efficient and flexible fashion, providing formalisms for modifying the topology of the storage system, specifying different data access patterns and selecting additional functionalities. (C) 2005 Elsevier B.V. All rights reserved.", "paper_title": "MAPFS: A flexible multiagent parallel file system for clusters", "paper_id": "WOS:000236568200007"}