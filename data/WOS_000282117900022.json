{"auto_keywords": [{"score": 0.04969466339476691, "phrase": "ui_generation"}, {"score": 0.010033385433686447, "phrase": "ui"}, {"score": 0.00481495049065317, "phrase": "general_purpose_architecture"}, {"score": 0.004681012408089219, "phrase": "significant_proportion"}, {"score": 0.0045876189888390895, "phrase": "user_interface"}, {"score": 0.0043358695338488445, "phrase": "clear_benefits"}, {"score": 0.004081385289516914, "phrase": "development_environments"}, {"score": 0.003719773848735395, "phrase": "wide_industry_adoption"}, {"score": 0.003308986613384597, "phrase": "action_research_cycles"}, {"score": 0.0032428780373184207, "phrase": "adoption_studies"}, {"score": 0.003216804708106142, "phrase": "close_collaboration"}, {"score": 0.0031909403420958752, "phrase": "industry_practitioners"}, {"score": 0.003040050100579337, "phrase": "five_key_characteristics"}, {"score": 0.00301560261110296, "phrase": "ui_generation_technique"}, {"score": 0.002931569771634119, "phrase": "wide_adoption"}, {"score": 0.002395530243993313, "phrase": "current_approaches"}, {"score": 0.002319346861878611, "phrase": "emergent_feature"}, {"score": 0.002227508035618043, "phrase": "previously_unattempted_goal"}, {"score": 0.0021566565951738658, "phrase": "existing_application"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["User Interface generation", " Software mining", " Retrofitting", " Action research", " Interviews", " Adoption studies"], "paper_abstract": "Many software projects spend a significant proportion of their time developing the User Interface (UI), therefore any degree of automation in this area has clear benefits. Such automation is difficult due principally to the diversity of architectures, platforms and development environments. Attempts to automate UI generation to date have contained restrictions which did not accommodate this diversity, leading to a lack of wide industry adoption or standardisation. The authors set out to understand and address these restrictions. We studied the issues of UI generation (especially duplication) in practice, using action research cycles guided by interviews, adoption studies and close collaboration with industry practitioners. In addressing the issues raised in our investigation, we identified five key characteristics any UI generation technique would need before it should expect wide adoption or standardisation. These can be summarised as: inspecting existing, heterogeneous back-end architectures; appreciating different practices in applying inspection results; recognising multiple, and mixtures of, UI widget libraries; supporting multiple, and mixtures of, UI adornments; applying multiple, and mixtures of, UI layouts. Many of these characteristics seem ignored by current approaches. In addition, we discovered an emergent feature of these characteristics that opens the possibility of a previously unattempted goal - namely, retrofitting UI generation to an existing application. (C) 2010 Elsevier Inc. All rights reserved.", "paper_title": "Towards a general purpose architecture for UI generation", "paper_id": "WOS:000282117900022"}