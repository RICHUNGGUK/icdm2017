{"auto_keywords": [{"score": 0.04791278459794138, "phrase": "parameterized_dataflow"}, {"score": 0.040108824253493075, "phrase": "dsp_applications"}, {"score": 0.00481495049065317, "phrase": "cyclo-static_dataflow_graphs"}, {"score": 0.0047517225918491226, "phrase": "configurable_hardware"}, {"score": 0.004447766706144458, "phrase": "useful_framework"}, {"score": 0.004360412703519539, "phrase": "synchronous_and_cyclo-static_graphs"}, {"score": 0.003948613642680196, "phrase": "significant_expressive_power"}, {"score": 0.0037699306119313154, "phrase": "important_ways"}, {"score": 0.0036714667610391535, "phrase": "efficient_hardware_synthesis_techniques"}, {"score": 0.003623199939953831, "phrase": "parameterized_dataflow_representations"}, {"score": 0.0032807941194429235, "phrase": "efficient_field_programmable_gate_array"}, {"score": 0.0031739835218110015, "phrase": "parameterized_cyclo-static_dataflow"}, {"score": 0.003132236287543072, "phrase": "pcsdf"}, {"score": 0.0029903851294825023, "phrase": "scheduling_technique"}, {"score": 0.002951045605925464, "phrase": "throughput-constrained_minimization"}, {"score": 0.002912222095383313, "phrase": "dataflow_buffering_requirements"}, {"score": 0.0028549396580672417, "phrase": "pcsdf_representations"}, {"score": 0.0027256122357680393, "phrase": "proposed_scheduling_technique"}, {"score": 0.002636828502928141, "phrase": "existing_formal_schedule_model"}, {"score": 0.0024678216843278806, "phrase": "schedule_cost"}, {"score": 0.0023096222276192194, "phrase": "real-time_base_station_emulator_prototype"}, {"score": 0.0022196020509093694, "phrase": "long-term_evolution"}, {"score": 0.0021049977753042253, "phrase": "key_cellular_standard"}], "paper_keywords": ["Dataflow modeling", " Scheduling", " FPGA implementation", " 4G communication systems", " Parameterized dataflow"], "paper_abstract": "In recent years, parameterized dataflow has evolved as a useful framework for modeling synchronous and cyclo-static graphs in which arbitrary parameters can be changed dynamically. Parameterized dataflow has proven to have significant expressive power for managing dynamics of DSP applications in important ways. However, efficient hardware synthesis techniques for parameterized dataflow representations are lacking. This paper addresses this void; specifically, the paper investigates efficient field programmable gate array (FPGA)-based implementation of parameterized cyclo-static dataflow (PCSDF) graphs. We develop a scheduling technique for throughput-constrained minimization of dataflow buffering requirements when mapping PCSDF representations of DSP applications onto FPGAs. The proposed scheduling technique is integrated with an existing formal schedule model, called the generalized schedule tree, to reduce schedule cost. To demonstrate our new, hardware-oriented PCSDF scheduling technique, we have designed a real-time base station emulator prototype based on a subset of long-term evolution (LTE), which is a key cellular standard.", "paper_title": "Mapping Parameterized Cyclo-static Dataflow Graphs onto Configurable Hardware", "paper_id": "WOS:000300257600007"}