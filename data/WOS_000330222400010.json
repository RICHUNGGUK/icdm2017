{"auto_keywords": [{"score": 0.03482742502002792, "phrase": "path_predicate_abstraction"}, {"score": 0.028804514664008643, "phrase": "theorem_proving"}, {"score": 0.00481495049065317, "phrase": "predicate_abstraction"}, {"score": 0.0047527118741586055, "phrase": "sound_system-level_models"}, {"score": 0.004691273968935458, "phrase": "rt-level_circuit_designs"}, {"score": 0.004511663118269957, "phrase": "system_verification"}, {"score": 0.004065474891313382, "phrase": "system-level_models"}, {"score": 0.003935267970727093, "phrase": "sound_abstractions"}, {"score": 0.003859146369720225, "phrase": "concrete_implementations"}, {"score": 0.0037844916274672544, "phrase": "register_transfer_level"}, {"score": 0.003615845091983304, "phrase": "soc_module"}, {"score": 0.003545888668219585, "phrase": "rtl"}, {"score": 0.003477264432055326, "phrase": "abstract_description"}, {"score": 0.003133052778244851, "phrase": "operational_graph_coloring"}, {"score": 0.002973904674745238, "phrase": "proposed_abstraction_mechanism"}, {"score": 0.0028228178454284825, "phrase": "stuttering_bisimulation"}, {"score": 0.0026619761089539595, "phrase": "proposed_methodology"}, {"score": 0.0024297565926197505, "phrase": "standard_techniques"}, {"score": 0.002398274973378986, "phrase": "property_checking"}, {"score": 0.0023213398100616132, "phrase": "time-abstract_system_models"}, {"score": 0.002232261129770455, "phrase": "abstract_system_models"}, {"score": 0.002160640052461594, "phrase": "practical_feasibility"}], "paper_keywords": ["Abstraction", " formal verification", " property checking", " system-level design"], "paper_abstract": "A formal methodology for system verification of system-on-chip (SoC) designs is proposed. It ensures that system-level models are created that are sound abstractions of the concrete implementations at the register transfer level (RTL). For each SoC module at the RTL, an abstract description is obtained by path predicate abstraction. Path predicate abstraction is introduced based on the notion of operational graph coloring. It is shown to what extent the proposed abstraction mechanism is related to the notion of a stuttering bisimulation employed in the field of theorem proving. The proposed methodology, however, does not rely on theorem proving but is entirely based on standard techniques of property checking. Path predicate abstraction leads to time-abstract system models that can be composed into abstract system models. We demonstrate the practical feasibility of our approach by two comprehensive industrial case studies.", "paper_title": "Path Predicate Abstraction for Sound System-Level Models of RT-Level Circuit Designs", "paper_id": "WOS:000330222400010"}