{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "top-k_high_utility_patterns"}, {"score": 0.0047113960612140335, "phrase": "online_high_utility_itemset_mining"}, {"score": 0.0044718206943536514, "phrase": "existing_methods"}, {"score": 0.004356620736507642, "phrase": "top-k_patterns"}, {"score": 0.004225950334493496, "phrase": "large_number"}, {"score": 0.004189337956225294, "phrase": "high_utility_patterns"}, {"score": 0.0038234714417849495, "phrase": "top-k_high_utility_itemsets"}, {"score": 0.003581797255879607, "phrase": "proper_minimum_utility_threshold"}, {"score": 0.0033262524445013303, "phrase": "new_method"}, {"score": 0.003115908199991072, "phrase": "data_stream"}, {"score": 0.0030092017034068666, "phrase": "compressed_tree_structure"}, {"score": 0.0029701337493953824, "phrase": "huds"}, {"score": 0.002831158147480665, "phrase": "potential_top-k_high_utility_itemsets"}, {"score": 0.0027341763737751467, "phrase": "new_utility_estimation_model"}, {"score": 0.002663620639539737, "phrase": "search_space"}, {"score": 0.0025279105573394727, "phrase": "minimum_utility_threshold"}, {"score": 0.002462664392109308, "phrase": "top-k_high_utility_itemset"}, {"score": 0.0024095777415804346, "phrase": "proposed_method"}, {"score": 0.0023679315987170857, "phrase": "real_and_synthetic_datasets"}, {"score": 0.0023168823213024856, "phrase": "new_utility_estimation_model_work"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["High utility pattern mining", " Data stream", " Top-k pattern mining", " Sliding window"], "paper_abstract": "Online high utility itemset mining over data streams has been studied recently. However, the existing methods are not designed for producing top-k patterns. Since there could be a large number of high utility patterns, finding only top-k patterns is more attractive than producing all the patterns whose utility is above a threshold. A challenge with finding top-k high utility itemsets over data streams is that it is not easy for users to determine a proper minimum utility threshold in order for the method to work efficiently. In this paper, we propose a new method (named T-HUDS) for finding top-k high utility patterns over sliding windows of a data stream. The method is based on a compressed tree structure, called HUDS-tree, that can be used to efficiently find potential top-k high utility itemsets over sliding windows. T-HUDS uses a new utility estimation model to more effectively prune the search space. We also propose several strategies for initializing and dynamically adjusting the minimum utility threshold. We prove that no top-k high utility itemset is missed by the proposed method. Our experimental results on real and synthetic datasets show that our strategies and new utility estimation model work very effectively and that T-HUDS outperforms two state-of-the-art high utility itemset algorithms substantially in terms of execution time and memory storage. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "Mining top-k high utility patterns over data streams", "paper_id": "WOS:000342540700009"}