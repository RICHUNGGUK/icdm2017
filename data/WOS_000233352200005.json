{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "process_execution_rules"}, {"score": 0.03770161754122512, "phrase": "overall_process_efficiency"}, {"score": 0.004556901872357751, "phrase": "revolutionary_information_system"}, {"score": 0.004248305270578335, "phrase": "bpms"}, {"score": 0.004143196873246147, "phrase": "business_processes"}, {"score": 0.004040688646993605, "phrase": "human_or_computer_agents"}, {"score": 0.00396050388346298, "phrase": "predefined_definitions"}, {"score": 0.0037106898330901534, "phrase": "individual_worklists"}, {"score": 0.0036553070575015344, "phrase": "task_assignment_algorithms"}, {"score": 0.00347657813672945, "phrase": "agent's_capacity"}, {"score": 0.0033231814056233103, "phrase": "queueing_network_models"}, {"score": 0.003113441660343867, "phrase": "step_complete"}, {"score": 0.0029909851863915283, "phrase": "server_utilization"}, {"score": 0.002946312377831317, "phrase": "task_assignment_policy"}, {"score": 0.0025219085140220773, "phrase": "capacity_planning"}, {"score": 0.002447101794397243, "phrase": "business_process"}, {"score": 0.002398464540102246, "phrase": "reengineering_context"}, {"score": 0.002362620540317279, "phrase": "simulation_results"}, {"score": 0.002224510044064184, "phrase": "shared_worklists"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["BPMS", " load balancing", " individual worklists", " queueing theory", " mathematical programming"], "paper_abstract": "BPMS (Business Process Management Systems) is a revolutionary information system that supports designing, administrating, and improving the business processes systematically. BPMS enables the execution of business processes by assigning tasks to human or computer agents according to the predefined definitions of the processes. In this paper, we devise process execution rules using individual worklists and propose task assignment algorithms to maximize the overall process efficiency under the limitation of the agent's capacity. We first transform the business processes into queueing network models, in which the agents are considered as servers. With this step complete, workloads of agents are calculated from server utilization and the task assignment policy can be determined by balancing the workloads. This will serve to minimize the workloads of all agents, thus achieving overall process efficiency. Another application of these results can be capacity planning of agents in advance and business process optimization in the reengineering context. The simulation results and comparisons with other well-known dispatching policies with the shared worklists show the effectiveness of our algorithm. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Development of process execution rules for workload balancing on agents", "paper_id": "WOS:000233352200005"}