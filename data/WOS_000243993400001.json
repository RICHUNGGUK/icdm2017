{"auto_keywords": [{"score": 0.044632714236693856, "phrase": "stable_models"}, {"score": 0.012307450981517884, "phrase": "disjunctive_programs"}, {"score": 0.00830958018714685, "phrase": "partial_stable_models"}, {"score": 0.008095874431290721, "phrase": "total_stable_models"}, {"score": 0.0061082534432824725, "phrase": "normal_programs"}, {"score": 0.0056775412434017245, "phrase": "core_engine"}, {"score": 0.00481495049065317, "phrase": "stable_model_semantics"}, {"score": 0.004666228956744244, "phrase": "implementation_methodology"}, {"score": 0.0046176782475198085, "phrase": "partial_and_disjunctive_stable_models"}, {"score": 0.004405348628112645, "phrase": "logic_program"}, {"score": 0.004072851768196397, "phrase": "core_inference_engine"}, {"score": 0.003610929883213109, "phrase": "simple_linear"}, {"score": 0.0035733198242955634, "phrase": "modular_program_transformation"}, {"score": 0.0034992667091713813, "phrase": "reasoning_tasks"}, {"score": 0.0032861588691414667, "phrase": "disjunctive_partial_stable_models"}, {"score": 0.0030378759123133644, "phrase": "disjunctive_case"}, {"score": 0.0022772115643656153, "phrase": "smodels_system"}, {"score": 0.002172266188075892, "phrase": "resulting_system"}, {"score": 0.002104999447267587, "phrase": "dlv"}], "paper_keywords": ["algorithms", " performance", " theory", " answer set programming", " disjunctive stable models", " partial models", " inference engine", " minimal models", " quantified Boolean formulas"], "paper_abstract": "This article studies an implementation methodology for partial and disjunctive stable models where partiality and disjunctions are unfolded from a logic program so that an implementation of stable models for normal (disjunction-free) programs can be used as the core inference engine. The unfolding is done in two separate steps. First, it is shown that partial stable models can be captured by total stable models using a simple linear and modular program transformation. Hence, reasoning tasks concerning partial stable models can be solved using an implementation of total stable models. Disjunctive partial stable models have been lacking implementations which now become available as the translation handles also the disjunctive case. Second, it is shown how total stable models of disjunctive programs can be determined by computing stable models for normal programs. Thus an implementation of stable models of normal programs can be used as a core engine for implementing disjunctive programs. The feasibility of the approach is demonstrated by constructing a system for computing stable models of disjunctive programs using the SMODELS system as the core engine. The performance of the resulting system is compared to that of DLV, which is a state-of-the-art system for disjunctive programs.", "paper_title": "Unfolding partiality and disjunctions in stable model semantics", "paper_id": "WOS:000243993400001"}