{"auto_keywords": [{"score": 0.04795368582278422, "phrase": "mnn"}, {"score": 0.02867205241590821, "phrase": "gp"}, {"score": 0.00481495049065317, "phrase": "genetic_optimization"}, {"score": 0.004654210559456924, "phrase": "modular_neural_network"}, {"score": 0.004398094237005956, "phrase": "artificial_intelligent_prediction"}, {"score": 0.004275347843870176, "phrase": "modular_element"}, {"score": 0.004203343568960231, "phrase": "high-order_neural_network"}, {"score": 0.003882970272082245, "phrase": "practical_problems"}, {"score": 0.0038392331564122387, "phrase": "mathematical_terms"}, {"score": 0.0037959868107895053, "phrase": "modular_functions"}, {"score": 0.0037532257703888315, "phrase": "weight_coefficients"}, {"score": 0.0036073064072936626, "phrase": "genetic_algorithms"}, {"score": 0.003546513036085932, "phrase": "mnn_parameters"}, {"score": 0.003467040410632942, "phrase": "target_function"}, {"score": 0.003370190834214415, "phrase": "input_parameters"}, {"score": 0.0032946562900625187, "phrase": "modular_function_influences"}, {"score": 0.003148612096891635, "phrase": "previous_practices"}, {"score": 0.002941558420246247, "phrase": "reference_study"}, {"score": 0.002908394246754633, "phrase": "high-strength_concrete"}, {"score": 0.0027325449069867222, "phrase": "genetic_programming"}, {"score": 0.0025673005153462707, "phrase": "mnn_calculations"}, {"score": 0.0023713273141757326, "phrase": "parameter_studies"}, {"score": 0.0023313149689465386, "phrase": "proposed_mnn"}, {"score": 0.0022919762167777427, "phrase": "valid_alternative_approach"}, {"score": 0.002215274527909304, "phrase": "artificial_neural_networks"}, {"score": 0.002190280748985751, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Artificial intelligence", " Genetic programming", " High order neural network", " Concrete"], "paper_abstract": "This study proposes a modular neural network (MNN) that is designed to accomplish both artificial intelligent prediction and programming. Each modular element adopts a high-order neural network to create a formula that considers both weights and exponents. MNN represents practical problems in mathematical terms using modular functions, weight coefficients and exponents. This paper employed genetic algorithms to optimize MNN parameters and designed a target function to avoid over-fitting. Input parameters were identified and modular function influences were addressed in manner that significantly improved previous practices. In order to compare the effectiveness of results, a reference study on high-strength concrete was adopted, which had been previously studied using a genetic programming (GP) approach. In comparison with GP, MNN calculations were more accurate, used more concise programmed formulas, and allowed the potential to conduct parameter studies. The proposed MNN is a valid alternative approach to prediction and programming using artificial neural networks. Crown Copyright (C) 2011 Published by Elsevier Ltd. All rights reserved.", "paper_title": "Modular neural network programming with genetic optimization", "paper_id": "WOS:000291118500034"}