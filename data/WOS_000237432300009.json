{"auto_keywords": [{"score": 0.0327762069050052, "phrase": "resource_allocation"}, {"score": 0.00481495049065317, "phrase": "grid-based_streaming_applications"}, {"score": 0.004275173711009189, "phrase": "data_streams"}, {"score": 0.004004436217742343, "phrase": "grid_environment"}, {"score": 0.0038411109150557504, "phrase": "middleware_system"}, {"score": 0.003751951822838848, "phrase": "grid"}, {"score": 0.00368442237104581, "phrase": "adaptive_execution"}, {"score": 0.0034922880300145283, "phrase": "high-volume_data_streams"}, {"score": 0.003290494847464381, "phrase": "distributed_set"}, {"score": 0.003045440856986832, "phrase": "gates_system"}, {"score": 0.002991524908432975, "phrase": "resource_discovery"}, {"score": 0.002903771635043968, "phrase": "active_topics"}, {"score": 0.0028693932802982417, "phrase": "grid_community"}, {"score": 0.0028185852354729026, "phrase": "pipelined_processing_and_real-time_constraint"}, {"score": 0.0027034948760997564, "phrase": "new_challenges"}, {"score": 0.0026241684260044414, "phrase": "resource_allocation_algorithm"}, {"score": 0.0025471636425006155, "phrase": "minimal_spanning_trees"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["Grid middleware", " streaming data", " resource allocation"], "paper_abstract": "A number of applications increasingly rely on, or can potentially benefit from, analysis and monitoring of data streams. To support the processing of streaming data in a Grid environment, we have been developing a middleware system called GATES (Grid-based AdapTive Execution on Streams). Our target applications are those involving high-volume data streams and requiring distributed processing of data arising from a distributed set of sources. This paper addresses the problem of resource allocation in the GATES system. Although resource discovery and resource allocation have been active topics in Grid community, the pipelined processing and real-time constraint required by distributed streaming applications pose new challenges. We present a resource allocation algorithm that is based on minimal spanning trees. We evaluate the algorithm experimentally and demonstrate that it results in configurations that are very close to optimal, and significantly better than most other possible configurations. Copyright (c) 2005 John Wiley & Sons, Ltd.", "paper_title": "A static resource allocation framework for Grid-based streaming applications", "paper_id": "WOS:000237432300009"}