{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cartoon_animation"}, {"score": 0.004598933498016774, "phrase": "computational_approach"}, {"score": 0.004163427731140163, "phrase": "internal_color_shading_phase"}, {"score": 0.003916098498242888, "phrase": "conventional_method"}, {"score": 0.0035722806911457545, "phrase": "different_media"}, {"score": 0.0034118234596993836, "phrase": "identified_regions"}, {"score": 0.003308862957060602, "phrase": "line_rendering_phase"}, {"score": 0.0030648097361278856, "phrase": "first_phase"}, {"score": 0.00288255520607591, "phrase": "turning_points"}, {"score": 0.0027529929913806066, "phrase": "defined_shapes"}, {"score": 0.0023798115577749225, "phrase": "internal_lines"}, {"score": 0.0021049977753042253, "phrase": "frame-to-frame_coherence"}], "paper_keywords": [""], "paper_abstract": "This paper describes a computational approach to style conversion of cartoon animation. Our system works in two stages: the internal color shading phase, in which characters painted by the conventional method are segmented into their constituent regions and edges first, textures painted using different media are then added to the identified regions, and the line rendering phase, in which curvature of edges detected during the first phase is calculated and used to pick up turning points from edges, strokes with defined shapes and textures are then placed in the positions determined by turning points along the contour as well as internal lines of characters. Our system obviates the tedium of creating more expressive rendering by hand, and keeps frame-to-frame coherence in the resultant animations.", "paper_title": "Style conversion of cartoon animation", "paper_id": "WOS:000238089300129"}