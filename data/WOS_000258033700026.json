{"auto_keywords": [{"score": 0.04854250213020111, "phrase": "decoding_problem"}, {"score": 0.04107868567004354, "phrase": "hidden_input"}, {"score": 0.03621506772840296, "phrase": "pr_instances"}, {"score": 0.00481495049065317, "phrase": "reed-solomon_codes"}, {"score": 0.004626836660832299, "phrase": "reed-solomon"}, {"score": 0.004462105963334103, "phrase": "polynomial_reconstruction_problem"}, {"score": 0.004350308086118336, "phrase": "cryptographic_hardness_perspective"}, {"score": 0.004241299366498948, "phrase": "samplable_pr_instances"}, {"score": 0.004210656614914171, "phrase": "parameter_choices"}, {"score": 0.003831801113154043, "phrase": "natural_decisional_intractability_assumption"}, {"score": 0.0036953036453370087, "phrase": "single_randomly_chosen_error_location"}, {"score": 0.0036553070575015344, "phrase": "single_randomly_chosen_non-error_location"}, {"score": 0.0035899326706592713, "phrase": "rs"}, {"score": 0.0035507457285983268, "phrase": "random_noise"}, {"score": 0.0033750293168721204, "phrase": "le"}, {"score": 0.003290237137651949, "phrase": "random_vectors"}, {"score": 0.0032546105164772995, "phrase": "underlying_finite_field"}, {"score": 0.003059869469624301, "phrase": "partial_information"}, {"score": 0.0029722900280316216, "phrase": "corrupted_pr_instance"}, {"score": 0.002876747208161839, "phrase": "semantic_security_sense"}, {"score": 0.0027341763737751467, "phrase": "intractability_assumption"}, {"score": 0.0027143926774929957, "phrase": "provable_security"}, {"score": 0.00269475174341129, "phrase": "cryptographic_primitives"}, {"score": 0.00260810691979637, "phrase": "provably_secure_cryptographic_constructions"}, {"score": 0.0025611773887867255, "phrase": "pseudorandom_number_generator"}, {"score": 0.002469830206270585, "phrase": "oblivious_polynomial_evaluation"}, {"score": 0.002452110386417045, "phrase": "ope"}, {"score": 0.0023303871145705954, "phrase": "interesting_properties"}, {"score": 0.002182881082103045, "phrase": "random_self-reducibility_properties"}, {"score": 0.0021435864990577945, "phrase": "plaintext_choice"}, {"score": 0.002128067018576581, "phrase": "key_choice"}, {"score": 0.0021049977753042253, "phrase": "partial_domain_choice"}], "paper_keywords": ["cryptographic primitives", " Reed-Solomon (RS) codes"], "paper_abstract": "In this paper, we investigate the decoding problem of Reed-Solomon (RS) codes, also known as the polynomial reconstruction problem (PR), from a cryptographic hardness perspective. Namely, we deal with samplable PR instances over parameter choices for which decoding is not known to be feasibly solvable and where part of the solution polynomial is the hidden input. We put forth a natural decisional intractability assumption that relates to this decoding problem: distinguishing between a single randomly chosen error location and a single randomly chosen non-error location for a given corrupted RS codeword with random noise. We prove that under this assumption, PR instances are entirely pseudorandom, Le., they are indistinguishable from random vectors over the underlying finite field. Moreover, under the same assumption, we show that it is hard to extract any partial information related to the hidden input encoded by the corrupted PR instance, i.e., PR instances hide their message polynomial solution in the semantic security sense. The above results lay a framework for the exploitation of PR as an intractability assumption for provable security of cryptographic primitives. Based on this framework, we present provably secure cryptographic constructions for 1) a pseudorandom number generator, 2) a semantically secure version of the oblivious polynomial evaluation (OPE) protocol, and 3) a stateful cipher with a set of interesting properties that include: semantic security, forward secrecy, error-correcting decryption and an array of random self-reducibility properties with respect to the plaintext choice, key choice, and partial domain choice.", "paper_title": "Cryptographic hardness based on the decoding of Reed-Solomon codes", "paper_id": "WOS:000258033700026"}