{"auto_keywords": [{"score": 0.048670301158495306, "phrase": "software_rejuvenation"}, {"score": 0.015719716506582538, "phrase": "cluster_computing_systems"}, {"score": 0.00714529356473445, "phrase": "cluster_systems"}, {"score": 0.006034813619836827, "phrase": "software_rejuvenation_policy"}, {"score": 0.004604023526673226, "phrase": "preventive_and_proactive_fault_management_technique"}, {"score": 0.0043804319008535555, "phrase": "software_aging"}, {"score": 0.004230382915464492, "phrase": "system_internal_state"}, {"score": 0.004105850229681625, "phrase": "future_failure"}, {"score": 0.0040449598280454645, "phrase": "increasing_interest"}, {"score": 0.003829290275367182, "phrase": "prolific_research_activity"}, {"score": 0.003152915289414825, "phrase": "stochastic_reward_net_model"}, {"score": 0.003044785536429499, "phrase": "simulation_experiments"}, {"score": 0.002955050521440921, "phrase": "software_rejuvenation_strategy"}, {"score": 0.0028966970007550824, "phrase": "failure_rate"}, {"score": 0.002797329638474873, "phrase": "cluster_system"}, {"score": 0.0025827837420330816, "phrase": "theoretic_analysis"}, {"score": 0.002544422946205545, "phrase": "software_rejuvenation_model"}, {"score": 0.002444883254621769, "phrase": "cluster_computing_system"}, {"score": 0.002420611343093316, "phrase": "performance_measurement"}, {"score": 0.0023143284925318916, "phrase": "experimental_results"}, {"score": 0.0021907299375981356, "phrase": "disabled_states"}, {"score": 0.0021049977753042253, "phrase": "software_fault-tolerance"}], "paper_keywords": ["Software aging", " Software rejuvenation", " Cluster computing systems", " Stochastic reward net"], "paper_abstract": "Software rejuvenation is a preventive and proactive fault management technique that is particularly useful for counteracting the phenomenon of software aging, aimed at cleaning up the system internal state to prevent the occurrence of future failure. The increasing interest in combing software rejuvenation with cluster systems has given rise to a prolific research activity in recent years. However, so far there have been few reports on the dependency between nodes in cluster systems when software rejuvenation is applied. This paper investigates the software rejuvenation policy for cluster computing systems with dependency between nodes, and reconstructs an stochastic reward net model of the software rejuvenation in such cluster systems. Simulation experiments and results reveal that the software rejuvenation strategy can decrease the failure rate and increase the availability of the cluster system. It also shows that the dependency between nodes affects software rejuvenation policy. Based on the theoretic analysis of the software rejuvenation model, a prototype is implemented on the Smart Platform cluster computing system. Performance measurement is carried out on this prototype, and experimental results reveal that software rejuvenation can effectively prevent systems from entering into disabled states, and thereby improving the ability of software fault-tolerance and the availability of cluster computing systems.", "paper_title": "Software rejuvenation in cluster computing systems with dependency between nodes", "paper_id": "WOS:000336390800004"}