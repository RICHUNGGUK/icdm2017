{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "domain-specific_reconfigurable_arrays"}, {"score": 0.0047386923107107645, "phrase": "hardware_acceleration_technologies"}, {"score": 0.004375061788023814, "phrase": "notable_inefficiencies"}, {"score": 0.004322967486451877, "phrase": "application-by-application_basis"}, {"score": 0.004237512575106522, "phrase": "growing_need"}, {"score": 0.004203803478570494, "phrase": "domain-specific_acceleration_technologies"}, {"score": 0.004104269996872886, "phrase": "design_methodology"}, {"score": 0.003975200317233532, "phrase": "domain-specific_coarse-grained_array"}, {"score": 0.0037740295668681014, "phrase": "limited_forms"}, {"score": 0.00374399358035391, "phrase": "architectural_generality"}, {"score": 0.0036553070575015344, "phrase": "additional_applications"}, {"score": 0.003321008590273796, "phrase": "customizable_processors"}, {"score": 0.0032814236411444022, "phrase": "application-specific_instruction_set_extensions"}, {"score": 0.0027964537059186893, "phrase": "related_domains"}, {"score": 0.0026336242881032645, "phrase": "ultimately_efficient_asic_implementation"}, {"score": 0.00255068452076921, "phrase": "field-programmable_gate_arrays"}, {"score": 0.0022174005294867604, "phrase": "traditional_datapath_merging"}, {"score": 0.0021049977753042253, "phrase": "design_set"}], "paper_keywords": ["Datapaths", " domain-specific customization", " flexibility", " FPGA routing", " reconfigurable arrays"], "paper_abstract": "Historically, hardware acceleration technologies have either been application-specific, therefore lacking in flexibility, or fully programmable, thereby suffering from notable inefficiencies on an application-by-application basis. To address the growing need for domain-specific acceleration technologies, this paper describes a design methodology (i) to automatically generate a domain-specific coarse-grained array from a set of representative applications and (ii) to introduce limited forms of architectural generality to increase the likelihood that additional applications can be successfully mapped onto it. In particular, coarse-grained arrays generated using our approach are intended to be integrated into customizable processors that use application-specific instruction set extensions to accelerate performance and reduce energy; rather than implementing these extensions using application-specific integrated circuit (ASIC) logic, which lacks flexibility, they can be synthesized onto our reconfigurable array instead, allowing the processor to be used for a variety of applications in related domains. Results show that our array is around 2x slower and 15x larger than an ultimately efficient ASIC implementation, and thus far more efficient than field-programmable gate arrays (FPGAs), which are known to be 3-4x slower and 20-40x larger. Additionally, we estimate that our array is usually around 2x larger and 2x slower than an accelerator synthesized using traditional datapath merging, which has, if any, very limited flexibility beyond the design set of DFGs.", "paper_title": "Selective Flexibility: Creating Domain-Specific Reconfigurable Arrays", "paper_id": "WOS:000318163800003"}