{"auto_keywords": [{"score": 0.02826191055301246, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "classical_load_balancing"}, {"score": 0.004774115617883476, "phrase": "multiprocessor_scheduling_problem"}, {"score": 0.004575053987970206, "phrase": "varying_sizes"}, {"score": 0.004291848822287492, "phrase": "typical_objective"}, {"score": 0.004060566667226606, "phrase": "heaviest_loaded_processor"}, {"score": 0.00397495478332679, "phrase": "real_world"}, {"score": 0.00387459052649752, "phrase": "dynamic_measure"}, {"score": 0.0038253590626087237, "phrase": "initial_assignment"}, {"score": 0.003409399407390298, "phrase": "possibly_suboptimal_assignment"}, {"score": 0.003038532168038562, "phrase": "best_possible_makespan"}, {"score": 0.0028623555849897632, "phrase": "weighted_version"}, {"score": 0.0027662954811372175, "phrase": "arbitrary_cost"}, {"score": 0.0027194778713860715, "phrase": "job's_relocation"}, {"score": 0.0026851209958625557, "phrase": "ptas"}, {"score": 0.002561752783323717, "phrase": "approximation_algorithms"}, {"score": 0.0024234763342790852, "phrase": "linear_running_time"}, {"score": 0.0022731540640627307, "phrase": "complexity_issue"}, {"score": 0.002159623311924437, "phrase": "load_rebalancing_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": [""], "paper_abstract": "In the classical load balancing or multiprocessor scheduling problem, we are given a sequence of jobs of varying sizes and are asked to assign each job to one of the m empty processors. A typical objective is to minimize the makespan, which is the load on the heaviest loaded processor. Since in most real world scenarios the load is a dynamic measure, the initial assignment may not remain optimal over time. Motivated by such considerations in a variety of systems, we formulate the problem of load rebalancing-given a possibly suboptimal assignment of jobs to processors, relocate a set of the jobs so as to decrease the makespan. Specifically, the goal is to achieve the best possible makespan under the constraint that no more than k jobs are relocated. We also consider the weighted version of this problem where there is an arbitrary cost associated with each job's relocation. The problem is NP-hard and hence, we focus on approximation algorithms. We construct an algorithm which achieves a 1.5-approximation, with near linear running time. We also show that the problem has a PTAS, thereby resolving the complexity issue. Finally, we investigate the approximability of several extensions of the load rebalancing model. (c) 2004 Elsevier Inc. All rights reserved.", "paper_title": "The load rebalancing problem", "paper_id": "WOS:000238265900003"}