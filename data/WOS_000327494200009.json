{"auto_keywords": [{"score": 0.004707479285061122, "phrase": "branch_predictors"}, {"score": 0.004623224002010226, "phrase": "larger_data_structures"}, {"score": 0.004499647408293102, "phrase": "overly_large_structures"}, {"score": 0.004459190343665408, "phrase": "excessively_complicated_algorithms"}, {"score": 0.003755782496223915, "phrase": "traditional_predictors"}, {"score": 0.003638823482920949, "phrase": "small_table"}, {"score": 0.0033544692489307676, "phrase": "aggressive_processors"}, {"score": 0.00326469463991041, "phrase": "complicated_algorithms"}, {"score": 0.003235305151177897, "phrase": "large_data_structures"}, {"score": 0.0032061793819537633, "phrase": "accurate_predictions"}, {"score": 0.003036832649117453, "phrase": "effective_mechanism"}, {"score": 0.0027867539356701302, "phrase": "prediction_accuracy"}, {"score": 0.002675571068567923, "phrase": "branch_history"}, {"score": 0.0026514708899935333, "phrase": "target_path"}, {"score": 0.0025341792091114184, "phrase": "standard_performance_evaluation_corporation"}, {"score": 0.0024111277643627154, "phrase": "average_performance"}, {"score": 0.0023465400668244386, "phrase": "commonly_used_branch_target"}, {"score": 0.002252880693912436, "phrase": "indirect_branch"}, {"score": 0.0022124605840026313, "phrase": "bhtp_algorithm"}, {"score": 0.0021049977753042253, "phrase": "traditional_algorithm"}], "paper_keywords": ["branch prediction", " branch speculation", " branch target buffer", " indirect branch", " instruction pipeline"], "paper_abstract": "In theory, branch predictors with more complicated algorithms and larger data structures provide more accurate predictions. Unfortunately, overly large structures and excessively complicated algorithms cannot be implemented because of their long access delay. To date, many strategies have been proposed to balance delay with accuracy, but none has completely solved the issue. The architecture for ahead branch prediction (A(2)BP) separates traditional predictors into two parts. First is a small table located at the front-end of the pipeline, which makes the prediction brief enough even for some aggressive processors. Second, operations on complicated algorithms and large data structures for accurate predictions are all moved to the back-end of the pipeline. An effective mechanism is introduced for ahead branch prediction in the back-end and small table update in the front. To substantially improve prediction accuracy, an indirect branch prediction algorithm based on branch history and target path (BHTP) is implemented in A(2)BP. Experiments with the standard performance evaluation corporation (SPEC) benchmarks on gem5/SimpleScalar simulators demonstrate that A(2)BP improves average performance by 2.92% compared with a commonly used branch target buffer-based predictor. In addition, indirect branch misses with the BHTP algorithm are reduced by an average of 28.98% compared with the traditional algorithm.", "paper_title": "A novel architecture for ahead branch prediction", "paper_id": "WOS:000327494200009"}