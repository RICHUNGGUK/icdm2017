{"auto_keywords": [{"score": 0.028005815391127693, "phrase": "two-class_assembly_algorithm"}, {"score": 0.00481495049065317, "phrase": "average_burst-assembly_delay"}, {"score": 0.0047273577269638725, "phrase": "proportional_service_differentiation"}, {"score": 0.004662705558154439, "phrase": "optical_burst-switched"}, {"score": 0.004620119191437184, "phrase": "obs"}, {"score": 0.004473982381245469, "phrase": "optical_buffering_devices"}, {"score": 0.004352411290383643, "phrase": "conventional_delay-based_differentiation_algorithms"}, {"score": 0.0042928648367867835, "phrase": "active_queue_management"}, {"score": 0.004253618550301311, "phrase": "weighted_fair_queuing"}, {"score": 0.004025531820226182, "phrase": "burst-assembly_process"}, {"score": 0.003970439654470374, "phrase": "variable_quantity"}, {"score": 0.0036385493850693983, "phrase": "burst-assembly_algorithm"}, {"score": 0.0035887342563437935, "phrase": "class-based_delay_differentiation"}, {"score": 0.0033651019362620866, "phrase": "average_assembly_delay_metric"}, {"score": 0.0032886455096627324, "phrase": "assembly_delay"}, {"score": 0.0032287289440915187, "phrase": "random_arrival"}, {"score": 0.0031845067058084583, "phrase": "burst_assembler"}, {"score": 0.003126481516783286, "phrase": "obs_node"}, {"score": 0.002931569771634119, "phrase": "two-class_burst-assembly_policy"}, {"score": 0.002851790448644913, "phrase": "high-priority_traffic"}, {"score": 0.002825681384008326, "phrase": "low-priority_packet_arrivals"}, {"score": 0.0025420267431501367, "phrase": "different_burst-assembly_delay"}, {"score": 0.002318566141177149, "phrase": "proportional_qos_differentiation_approach"}, {"score": 0.0022450768409733807, "phrase": "detailed_analysis"}, {"score": 0.0021441057555396013, "phrase": "exhaustive_set"}, {"score": 0.0021049977753042253, "phrase": "numerical_examples"}], "paper_keywords": ["optical burst switching", " size-based burst-assembly algorithm", " average assembly delay", " proportional delay-based service differentiation"], "paper_abstract": "In Optical Burst-Switched (OBS) networks, the limitation of optical buffering devices make it impractical to deploy conventional delay-based differentiation algorithms such as Active Queue Management, Weighted Fair Queuing, etc. Furthermore, only the delay that appears due to the burst-assembly process constitutes a variable quantity (all the other sources of delay are mostly fixed), it is then reasonable to make use of the burst-assembly algorithm to provide class-based delay differentiation. The aim of the following study is twofold: first it defines an average assembly delay metric, which represents the assembly delay experienced by a random arrival at the burst assembler of an edge OBS node; and second, this metric is used to define and configure a two-class burst-assembly policy, which gives preference to high-priority traffic over low-priority packet arrivals. The results show that, (1) tuning the parameters of the two-class assembly algorithm, the two classes of traffic exhibit different burst-assembly delay; and, (2) such parameters can be adjusted to provide a given differentiation ratio in the light of the proportional QoS differentiation approach proposed in the literature. A detailed analysis of the two-class assembly algorithm is given, along with an exhaustive set of experiments and numerical examples that validate the equations derived.", "paper_title": "Analysis of average burst-assembly delay and applications in proportional service differentiation", "paper_id": "WOS:000249652800009"}