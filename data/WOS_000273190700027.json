{"auto_keywords": [{"score": 0.04850161465082996, "phrase": "interconnection_delay"}, {"score": 0.04174666335988992, "phrase": "original_distributed-register_architectures"}, {"score": 0.03589699979502345, "phrase": "generalized_distributed-register_architecture"}, {"score": 0.031862565675836, "phrase": "shared-register_groups"}, {"score": 0.00481495049065317, "phrase": "generalized_distributed-register_architectures"}, {"score": 0.004734987730139094, "phrase": "device_feature_size"}, {"score": 0.004579005794486596, "phrase": "dominating_factor"}, {"score": 0.004528156929805637, "phrase": "circuit_total_delay"}, {"score": 0.004477870190590885, "phrase": "distributed-register_architectures"}, {"score": 0.004141093507753515, "phrase": "circuit_area"}, {"score": 0.00389427992231721, "phrase": "control_signal_delay"}, {"score": 0.0031845067058084583, "phrase": "iterative_improvement"}, {"score": 0.0028316582436089064, "phrase": "single_functional_unit"}, {"score": 0.002707741309851526, "phrase": "local_registers"}, {"score": 0.002677616534005393, "phrase": "local_controllers"}, {"score": 0.0026478260192958924, "phrase": "functional_units"}, {"score": 0.002603758927691463, "phrase": "critical_path"}, {"score": 0.0024211009463218484, "phrase": "single_group"}, {"score": 0.0023675132064088803, "phrase": "global_controllers"}, {"score": 0.0021049977753042253, "phrase": "experimental_results"}], "paper_keywords": ["high-level synthesis", " floorplan", " distributed-register architecture", " generalized distributed-register architecture", " local register", " local controller"], "paper_abstract": "As device feature size decreases, interconnection delay becomes the dominating factor of circuit total delay. Distributed-register architectures call reduce the influence of interconnection delay. They may, however, increase circuit area because they require many local registers. Moreover original distributed-register architectures do not consider control signal delay, which may be the bottleneck in a circuit. In this paper. we propose it high-level synthesis method targeting generalized distributed-register architecture in which we introduce shared/local registers aid global/local controllers. Our method is based on iterative improvement of scheduling/binding and floorplanning. First, we prepare shared-register groups with global controllers, each of which corresponds to it single functional unit. As iterations proceed, we use local registers and local controllers for functional units on it critical path. Shared-register groups physically located close to each other are merged into a single group. Accordingly, global controllers are merged. Finally, our method obtains it generalized distributed-register architecture where its scheduling/binding as well as floorplanning are simultaneously optimized. Experimental results show that the area is decreased by 4.7% while maintaining the performance of the circuit equal with that using original distributed-register architectures.", "paper_title": "Floorplan-Aware High-Level Synthesis for Generalized Distributed-Register Architectures", "paper_id": "WOS:000273190700027"}