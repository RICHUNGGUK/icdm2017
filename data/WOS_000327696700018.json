{"auto_keywords": [{"score": 0.0459177180449158, "phrase": "system_f-omega"}, {"score": 0.00481495049065317, "phrase": "copatterns_a_unified_approach"}, {"score": 0.0045324756541157574, "phrase": "strong_normalization"}, {"score": 0.0044644734709113985, "phrase": "core_language"}, {"score": 0.004288059466938456, "phrase": "finite_and_infinite_structures"}, {"score": 0.004160319763461951, "phrase": "finite_data"}, {"score": 0.0040978781692373005, "phrase": "finite_lists"}, {"score": 0.0038964032225585117, "phrase": "pattern_matching"}, {"score": 0.0038379074449947067, "phrase": "infinite_data"}, {"score": 0.0037423521744765075, "phrase": "infinite_trees"}, {"score": 0.003594369823549604, "phrase": "copattern_matching"}, {"score": 0.0034348484776384643, "phrase": "type-based_approach"}, {"score": 0.003332440548684892, "phrase": "size_information"}, {"score": 0.0032989853590079153, "phrase": "finite_and_infinite_data"}, {"score": 0.002982307044758515, "phrase": "unifying_semantic_concept"}, {"score": 0.0028933521924166287, "phrase": "first_time"}, {"score": 0.0026959452932289797, "phrase": "strong_normalization_proof"}, {"score": 0.0026420518944303716, "phrase": "girard's_reducibility_candidates"}, {"score": 0.0022252591643049744, "phrase": "significant_step"}, {"score": 0.0021917966722180132, "phrase": "observation-centric_infinite_data"}, {"score": 0.002126404703170213, "phrase": "coq"}, {"score": 0.002105001223737627, "phrase": "agda"}], "paper_keywords": ["Languages", " Theory", " Recursion", " Coinduction", " Pattern matching", " Productivity", " Strong normalization", " Type-based termination"], "paper_abstract": "In this paper, we study strong normalization of a core language based on System F-omega which supports programming with finite and infinite structures. Building on our prior work, finite data such as finite lists and trees are defined via constructors and manipulated via pattern matching, while infinite data such as streams and infinite trees is defined by observations and synthesized via copattern matching. In this work, we take a type-based approach to strong normalization by tracking size information about finite and infinite data in the type. This guarantees compositionality. More importantly, the duality of pattern and copatterns provide a unifying semantic concept which allows us for the first time to elegantly and uniformly support both well-founded induction and coinduction by mere rewriting. The strong normalization proof is structured around Girard's reducibility candidates. As such our system allows for non-determinism and does not rely on coverage. Since System F-omega is general enough that it can be the target of compilation for the Calculus of Constructions, this work is a significant step towards representing observation-centric infinite data in proof assistants such as Coq and Agda.", "paper_title": "Wellfounded Recursion with Copatterns A Unified Approach to Termination and Productivity", "paper_id": "WOS:000327696700018"}