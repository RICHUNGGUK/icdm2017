{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "distributed_algorithms"}, {"score": 0.039853922732353345, "phrase": "proof_assistant"}, {"score": 0.004689321062844586, "phrase": "distributed_reference"}, {"score": 0.004303127794432684, "phrase": "distributed_systems"}, {"score": 0.0036472537997966938, "phrase": "design_methodology"}, {"score": 0.003368816076401138, "phrase": "incremental_way"}, {"score": 0.0031739835218110015, "phrase": "distributed_solution"}, {"score": 0.003030247482854539, "phrase": "distributed_reference_counting"}, {"score": 0.0027437235598539904, "phrase": "elegant_and_progressive_way"}, {"score": 0.0025849489224175548, "phrase": "final_distributed_algorithm"}, {"score": 0.002294369814584028, "phrase": "event_b_method"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["specification", " modelling", " refinement", " abstraction", " distributed algorithms", " verification", " proof", " proof assistant"], "paper_abstract": "The development of distributed algorithms and, more generally, distributed systems, is a complex, delicate and challenging process. Refinement techniques of (system) models improve the process by using a proof assistant, and by applying a design methodology aimed at starting from the most abstract model and leading, in an incremental way, to the most concrete model, for producing a distributed solution. We show, using the distributed reference counting (DRC) problem as our study, how models can be produced in an elegant and progressive way, thanks to the refinement and how the final distributed algorithm is built starting from these models. The development is carried out within the framework of the event B method and models are validated with a proof assistant. (C) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Formal and incremental construction of distributed algorithms: On the distributed reference counting algorithm", "paper_id": "WOS:000241718500005"}