{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "swarmlets"}, {"score": 0.004377077848734575, "phrase": "networked_sensors"}, {"score": 0.004195418010131832, "phrase": "cloud_services"}, {"score": 0.0041074234667687875, "phrase": "mobile_devices"}, {"score": 0.0030199761431186434, "phrase": "actor_interface"}, {"score": 0.0029253546782349875, "phrase": "actor_semantics"}, {"score": 0.0027159094186967247, "phrase": "disciplined_and_understandable_concurrency_models"}, {"score": 0.00241658945942583, "phrase": "sensor_data"}, {"score": 0.0021049977753042253, "phrase": "huge_variability"}], "paper_keywords": [""], "paper_abstract": "Swarmlets are applications and services that leverage networked sensors and actuators with cloud services and mobile devices. The authors offer a way to construct swarmlets by composing \"accessors,\" which are wrappers for sensors, actuators, and services, that export an actor interface. An actor semantics provides ways to compose accessors with disciplined and understandable concurrency models, while abstracting the mechanisms by which the accessor provides sensor data, controls an actuator, or accesses a service. Recognizing a huge variability in the use and requirements of swarmlets, accessors embrace heterogeneity instead of attempting to homogenize.", "paper_title": "A Vision of Swarmlets", "paper_id": "WOS:000351774200004"}