{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "architectural_knowledge"}, {"score": 0.0047872135686404275, "phrase": "management._recent_research"}, {"score": 0.004732215871738028, "phrase": "software_architecture"}, {"score": 0.004518442937844318, "phrase": "design_decisions"}, {"score": 0.004415189385015778, "phrase": "software_development"}, {"score": 0.003978866233891427, "phrase": "decision_assets"}, {"score": 0.003777088546146369, "phrase": "decision_network_structure"}, {"score": 0.003523822585025555, "phrase": "valuable_information"}, {"score": 0.0033839745649214548, "phrase": "negative_semantics"}, {"score": 0.0031937337757356526, "phrase": "negative_relationships_system-atically"}, {"score": 0.003031650815900696, "phrase": "ak_relationships"}, {"score": 0.0028119023819663472, "phrase": "antipattern_structures"}, {"score": 0.002432971714608409, "phrase": "existing_process"}, {"score": 0.0024049566973243087, "phrase": "atrium"}, {"score": 0.002349884235026956, "phrase": "concrete_example"}, {"score": 0.0022048406330100697, "phrase": "presented_approach"}, {"score": 0.002129527338875116, "phrase": "erent_complexities"}], "paper_keywords": ["Software architecture", " architectural knowledge", " antipatterns", " requirements engineering", " model-driven development"], "paper_abstract": "Recent research on Software Architecture has recovered its original emphasis on keeping track of design decisions and their rationales during software development, compiling them under the name of architectural knowledge (AK). This knowledge is composed of decision assets, which relate to each other creating a decision network structure. We argue that relationships in these networks of AK contain valuable information, in particular when they describe negative semantics. We use antipatterns to exploit and manage these negative relationships system-atically. After examining and classifying the kinds of AK relationships, we describe a method that enriches this network by means of antipattern structures. To show the feasibility and suitability of this approach, we provide a proof-of-concept by applying it to an existing process, ATRIUM, with a concrete example, the Gas Station metaphor. Results of the use of the presented approach into three di r erent projects with di r erent complexities show both its feasibility and applicability.", "paper_title": "ANTIPATTERNS FOR ARCHITECTURAL KNOWLEDGE MANAGEMENT", "paper_id": "WOS:000326678200008"}