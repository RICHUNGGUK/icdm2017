{"auto_keywords": [{"score": 0.05007847282349091, "phrase": "memory_protection"}, {"score": 0.04126630752096143, "phrase": "mpu"}, {"score": 0.004754600386388821, "phrase": "sensor_nodes"}, {"score": 0.004578030096508602, "phrase": "typical_hardware_configuration"}, {"score": 0.0044922081848067135, "phrase": "sensor_node"}, {"score": 0.004271100220705305, "phrase": "memory_protection_unit"}, {"score": 0.00408654006336477, "phrase": "low-complexity_addition"}, {"score": 0.0037409118365761894, "phrase": "privileged_execution_mode"}, {"score": 0.003579179502431823, "phrase": "system_buses"}, {"score": 0.003235193484261443, "phrase": "internal_mpu_registers"}, {"score": 0.0031148723927633955, "phrase": "protection_contexts"}, {"score": 0.00305639530600272, "phrase": "running_program"}, {"score": 0.002980124909321296, "phrase": "access_rights"}, {"score": 0.0029241700853970013, "phrase": "memory_pages"}, {"score": 0.002815383690003621, "phrase": "hardware_interrupt"}, {"score": 0.002676587673012276, "phrase": "protection_violation"}, {"score": 0.002626317051411829, "phrase": "proposed_mpu_architecture"}, {"score": 0.002512650904797186, "phrase": "salient_viewpoints"}, {"score": 0.0023438664524018634, "phrase": "access_permissions"}, {"score": 0.002256619934086924, "phrase": "important_memory_protection_paradigms"}, {"score": 0.0022142194702079866, "phrase": "hierarchical_contexts"}, {"score": 0.002186395051086251, "phrase": "protection_rings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["Access right", " Privileged mode", " Memory protection", " Sensor node"], "paper_abstract": "With reference to the typical hardware configuration of a sensor node, we present the architecture of a memory protection unit (MPU) designed as a low-complexity addition to the microcontroller. The MPU is aimed at supporting memory protection and the privileged execution mode. It is connected to the system buses, and is seen by the processor as a memory-mapped input/output device. The contents of the internal MPU registers specify the composition of the protection contexts of the running program in terms of access rights for the memory pages. The MPU generates a hardware interrupt to the processor when it detects a protection violation. The proposed MPU architecture is evaluated from a number of salient viewpoints, which include the distribution, review and revocation of access permissions, and the support for important memory protection paradigms, including hierarchical contexts and protection rings. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Hardware support for memory protection in sensor nodes", "paper_id": "WOS:000336006900005"}