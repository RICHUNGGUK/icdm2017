{"auto_keywords": [{"score": 0.03923307184680597, "phrase": "matlab"}, {"score": 0.03208017257035988, "phrase": "kind_analysis"}, {"score": 0.00481495049065317, "phrase": "kind_analysis_for_matlab._matlab"}, {"score": 0.00475413908468027, "phrase": "popular_dynamic_programming_language"}, {"score": 0.004694092086199672, "phrase": "scientific_and_numerical_programming"}, {"score": 0.004480307124735185, "phrase": "small_scripting_language"}, {"score": 0.004404994123834589, "phrase": "interactive_interface"}, {"score": 0.0043678116213858, "phrase": "numerical_libraries"}, {"score": 0.00416882434439484, "phrase": "overloaded_syntax"}, {"score": 0.004133627071344356, "phrase": "dynamic_nature"}, {"score": 0.004012751049253625, "phrase": "somewhat_organic_addition"}, {"score": 0.0038789122930433305, "phrase": "static_analysis"}, {"score": 0.0038461532860146535, "phrase": "modern_matlab"}, {"score": 0.0037654565082218595, "phrase": "fundamental_problem"}, {"score": 0.003459191419478298, "phrase": "named_function"}, {"score": 0.0033295966773779174, "phrase": "trivial_problem"}, {"score": 0.0030586736004285216, "phrase": "simple_explanation"}, {"score": 0.002994449398035894, "phrase": "matlab_programmers"}, {"score": 0.002944039482467119, "phrase": "publicly-available_implementation"}, {"score": 0.0029067881142952664, "phrase": "compiler_researchers"}, {"score": 0.002833689453299307, "phrase": "required_background"}, {"score": 0.002762423953243486, "phrase": "kind_assignment_program"}, {"score": 0.002704403349815203, "phrase": "general_guidelines"}, {"score": 0.0026701760128830573, "phrase": "good_kind_analyses"}, {"score": 0.002505412457777352, "phrase": "kind_analyses"}, {"score": 0.002421726275597666, "phrase": "intended_behaviour"}, {"score": 0.002281930100792185, "phrase": "mclab"}, {"score": 0.002177762848946681, "phrase": "empirical_evaluation"}, {"score": 0.0021229583685841405, "phrase": "large_set"}, {"score": 0.0021049977753042253, "phrase": "benchmark_programs"}], "paper_keywords": ["Experimentation", " Languages", " Performance", " MATLAB", " Name Resolution", " Kind Analysis"], "paper_abstract": "MATLAB is a popular dynamic programming language used for scientific and numerical programming. As a language, it has evolved from a small scripting language intended as an interactive interface to numerical libraries, to a very popular language supporting many language features and libraries. The overloaded syntax and dynamic nature of the language, plus the somewhat organic addition of language features over the years, makes static analysis of modern MATLAB quite challenging. A fundamental problem in MATLAB is determining the kind of an identifier. Does an identifier refer to a variable, a named function or a prefix? Although this is a trivial problem for most programming languages, it was not clear how to do this properly in MATLAB. Furthermore, there was no simple explanation of kind analysis suitable for MATLAB programmers, nor a publicly-available implementation suitable for compiler researchers. This paper explains the required background of MATLAB, clarifies the kind assignment program, and proposes some general guidelines for developing good kind analyses. Based on these foundations we present our design and implementation of a variety of kind analyses, including an approach that matches the intended behaviour of modern MATLAB 7 and two potentially better alternatives. We have implemented all the variations of the kind analysis in MCLAB, our extensible compiler framework, and we present an empirical evaluation of the various analyses on a large set of benchmark programs.", "paper_title": "Kind Analysis for MATLAB", "paper_id": "WOS:000298294500008"}