{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "on-chip_data_supply_system"}, {"score": 0.004502126088469323, "phrase": "art_fabrication_technology"}, {"score": 0.004412285905508977, "phrase": "numerous_hardware_resources"}, {"score": 0.00415333528095237, "phrase": "single_chip"}, {"score": 0.004016072233242585, "phrase": "multiprocessor_system-on-chip"}, {"score": 0.0038833278847237858, "phrase": "stream_programming_paradigm"}, {"score": 0.003679969180334367, "phrase": "single_functionality_scenario"}, {"score": 0.0033492947290751996, "phrase": "parallel_tasks"}, {"score": 0.003260377175139591, "phrase": "multiple_interrelated_functionalities"}, {"score": 0.003152531962718477, "phrase": "task_interferences"}, {"score": 0.0030895394261534776, "phrase": "memory_congestions"}, {"score": 0.00300749708357049, "phrase": "poor_parallel_speedups"}, {"score": 0.0029672941061574375, "phrase": "memory_bandwidth_utilizations"}, {"score": 0.002811770047652563, "phrase": "stream_processing"}, {"score": 0.0027370835853738626, "phrase": "chip_data_supply_system"}, {"score": 0.002700485592691974, "phrase": "task-parallel_mpsocs"}, {"score": 0.0025935941070969575, "phrase": "stream_address_generations"}, {"score": 0.002558909812664716, "phrase": "data_computations"}, {"score": 0.002441118140830714, "phrase": "full_utilization"}, {"score": 0.0024084679931209514, "phrase": "on-chip_resources"}, {"score": 0.0022365262201954643, "phrase": "overall_application_performance"}, {"score": 0.0021049977753042253, "phrase": "tuning_scheme"}], "paper_keywords": [""], "paper_abstract": "State of the art fabrication technology for integrating numerous hardware resources such as Processors/DSPs and memory arrays into a single chip enables the emergence of Multiprocessor System-on-Chip (MPSoC). Stream programming paradigm based on MPSoC is highly efficient for single functionality scenario due to its dedicated and predictable data supply system. However, when memory traffic is heavily shared among parallel tasks in applications with multiple interrelated functionalities, performance suffers through task interferences and shared memory congestions which lead to poor parallel speedups and memory bandwidth utilizations. This paper proposes a framework of stream processing based on-chip data supply system for task-parallel MPSoCs. In this framework, stream address generations and data computations are decoupled and parallelized to allow full utilization of on-chip resources. Task granularities are dynamically tuned to jointly optimize the overall application performance. Experiments show that proposed framework as well as the tuning scheme", "paper_title": "Atomic Streaming: A Framework of On-Chip Data Supply System for Task-Parallel MPSoCs", "paper_id": "WOS:000304901300002"}