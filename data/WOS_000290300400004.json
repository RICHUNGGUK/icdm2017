{"auto_keywords": [{"score": 0.049146612112995924, "phrase": "high-level_languages"}, {"score": 0.00481495049065317, "phrase": "spiking_neural_network_simulation"}, {"score": 0.004629310057682695, "phrase": "matlab"}, {"score": 0.004539125597814232, "phrase": "python"}, {"score": 0.00376488621224566, "phrase": "neural_networks"}, {"score": 0.0031532895341013297, "phrase": "large_spiking_neural_networks"}, {"score": 0.0030017207229983385, "phrase": "vector-based_operations"}, {"score": 0.00277417639451697, "phrase": "brian"}, {"score": 0.0025137856138000014, "phrase": "python_language"}, {"score": 0.002464709648714996, "phrase": "vectorized_simulation"}, {"score": 0.0021896891011033105, "phrase": "computational_efficiency"}, {"score": 0.0021049977753042253, "phrase": "compiled_languages"}], "paper_keywords": [""], "paper_abstract": "High-level languages (Matlab, Python) are popular in neuroscience because they are flexible and accelerate development. However, for simulating spiking neural networks, the cost of interpretation is a bottleneck. We describe a set of algorithms to simulate large spiking neural networks efficiently with high-level languages using vector-based operations. These algorithms constitute the core of Brian, a spiking neural network simulator written in the Python language. Vectorized simulation makes it possible to combine the flexibility of high-level languages with the computational efficiency usually associated with compiled languages.", "paper_title": "Vectorized Algorithms for Spiking Neural Network Simulation", "paper_id": "WOS:000290300400004"}