{"auto_keywords": [{"score": 0.030468642146266864, "phrase": "np"}, {"score": 0.00481495049065317, "phrase": "parallel_data_redistribution"}, {"score": 0.0034426417353349567, "phrase": "total_communication_time"}, {"score": 0.0031845067058084583, "phrase": "extra_cost"}, {"score": 0.002597012212823168, "phrase": "fast_heuristics"}, {"score": 0.0025660347613972573, "phrase": "simulation_results"}, {"score": 0.00240213106042981, "phrase": "optimal_solution"}, {"score": 0.0023171750718791713, "phrase": "experimental_results"}, {"score": 0.0022486729928886885, "phrase": "mpi_implementation"}, {"score": 0.0021049977753042253, "phrase": "brute-force_tcp-based_solution"}], "paper_keywords": ["message scheduling", " data redistribution", " grid computing", " approximation algorithm", " code coupling"], "paper_abstract": "We study the problem of redistributing data between clusters interconnected by a backbone. We suppose that at most k communications can be performed at the same time ( the value of k depending on the characteristics of the platform). Given a set of messages, we aim at minimizing the total communication time assuming that communications can be preempted and that preemption comes with an extra cost. Our problem, called k-Preemptive Bipartite Scheduling (KPBS) is proven to be NP-hard. We study its lower bound. We propose two (8)/(3)-approximation algorithms with low complexity and fast heuristics. Simulation results show that both algorithms perform very well compared to the optimal solution and to the heuristics. Experimental results, based on an MPI implementation of these algorithms, show that both algorithms outperform a brute-force TCP-based solution, where no scheduling of the messages is performed.", "paper_title": "Messages scheduling for parallel data redistribution between clusters", "paper_id": "WOS:000239937000009"}