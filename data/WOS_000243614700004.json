{"auto_keywords": [{"score": 0.048886391350397976, "phrase": "dynamic_data_structures"}, {"score": 0.01179177440100521, "phrase": "data_structure"}, {"score": 0.00481495049065317, "phrase": "loop-carried_dependences"}, {"score": 0.004549242970806199, "phrase": "data_dependences_detection"}, {"score": 0.003984665807155269, "phrase": "data_dependences"}, {"score": 0.003909923690310641, "phrase": "heap-directed_pointers"}, {"score": 0.0035120164504478437, "phrase": "heap-directed_pointer"}, {"score": 0.0033814348757887232, "phrase": "heap_accesses"}, {"score": 0.0032556926399045635, "phrase": "new_approach"}, {"score": 0.0031544754107802413, "phrase": "previously_developed_shape_analysis"}, {"score": 0.003095257144856771, "phrase": "topological_information"}, {"score": 0.002980124909321296, "phrase": "different_nodes"}, {"score": 0.0026935568995690947, "phrase": "abstract_interpretation"}, {"score": 0.002560751416355291, "phrase": "memory_locations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["dynamic data structures", " compiler optimizations", " data dependence test", " shape analysis", " abstract interpretation"], "paper_abstract": "The problem of data dependences detection in codes based on dynamic data structures, is crucial to various compiler optimizations. The approach presented in this paper focuses on detecting data dependences induced by heap-directed pointers on loops that access dynamic data structures. Knowledge about the shape of the data structure accessible from a heap-directed pointer provides critical information for disambiguating heap accesses originating from it. The new approach is based on a previously developed shape analysis that maintains topological information of the connections among the different nodes (memory locations) in the data structure. As a novelty, our approach carries out abstract interpretation of the statements being analyzed, annotating memory locations with read/write information. This information will be later used in a very accurate data dependence test which we describe in this paper. We also discuss its application to several different benchmarks. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Detecting loop-carried dependences in programs with dynamic data structures", "paper_id": "WOS:000243614700004"}