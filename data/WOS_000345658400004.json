{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_implicit_obdd-based_algorithms"}, {"score": 0.004688989566904871, "phrase": "maximal_matching_problem"}, {"score": 0.0044272138900038095, "phrase": "proper_subset"}, {"score": 0.004292337783332826, "phrase": "fundamental_optimization_problem"}, {"score": 0.004235793609579307, "phrase": "maximal_matching_algorithms"}, {"score": 0.004070573090297285, "phrase": "maximal_node-disjoint_paths"}, {"score": 0.0037925389501636975, "phrase": "research_branch"}, {"score": 0.0035965032173588753, "phrase": "implicit_algorithms"}, {"score": 0.0035648266669315943, "phrase": "classical_graph_problems"}, {"score": 0.00353342812142574, "phrase": "input_graphs"}, {"score": 0.0034714553759044664, "phrase": "characteristic_boolean_functions"}, {"score": 0.003306559295382181, "phrase": "functional_operations"}, {"score": 0.003163439005885435, "phrase": "deterministic_finite_automata"}, {"score": 0.0031079352545607267, "phrase": "well-known_data_structure"}, {"score": 0.0030807561014978588, "phrase": "boolean"}, {"score": 0.0030399188412691914, "phrase": "obdd-based_algorithms"}, {"score": 0.0029733865110222785, "phrase": "heuristic_approach"}, {"score": 0.0028699415886017468, "phrase": "implicit_obdd-based_maximal_matching_algorithm"}, {"score": 0.0026501241093379786, "phrase": "input_graph"}, {"score": 0.0025692477422626678, "phrase": "algorithm's_behavior"}, {"score": 0.0025465957200502404, "phrase": "large_and_structured_networks"}, {"score": 0.0024798279465139688, "phrase": "grid_graphs"}, {"score": 0.002404136142279618, "phrase": "overall_running_time"}, {"score": 0.0023724065150232897, "phrase": "space_requirement"}, {"score": 0.0022297712188622293, "phrase": "well-known_karp-sipser_approach"}, {"score": 0.0021809311689473493, "phrase": "representation_size"}, {"score": 0.002161695357601592, "phrase": "maximal_matchings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Implicit graph algorithms", " Maximal matchings", " Ordered binary decision diagrams"], "paper_abstract": "The maximal matching problem, i.e., the computation of a matching that is not a proper subset of another matching, is a fundamental optimization problem, and maximal matching algorithms have been used as submodules for problems like maximal node-disjoint paths or maximum flow. Since in some applications very large graphs have to be processed, a research branch has emerged which is concerned with the design and analysis of implicit algorithms for classical graph problems. Input graphs are given as characteristic Boolean functions of their edge sets, and problems have to be solved by functional operations. As OBDDs, which are closely related to deterministic finite automata, are a well-known data structure for Boolean functions, OBDD-based algorithms are used as a heuristic approach to handle very large graphs. Here, an implicit OBDD-based maximal matching algorithm is presented that uses only a polylogarithmic number of functional operations with respect to the number of vertices of the input graph. In order to investigate the algorithm's behavior on large and structured networks, it is analyzed on grid graphs. It is shown that the overall running time and the space requirement is also polylogarithmic. Furthermore, we present another algorithm similar to the well-known Karp-Sipser approach and we investigate the representation size of maximal matchings. (C) 2014 Elsevier Inc. All rights reserved.", "paper_title": "On efficient implicit OBDD-based algorithms for maximal matchings", "paper_id": "WOS:000345658400004"}