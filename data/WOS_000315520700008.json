{"auto_keywords": [{"score": 0.04966008989090483, "phrase": "self-organizing_teams"}, {"score": 0.041078685670043524, "phrase": "agile_methods"}, {"score": 0.011142027782250527, "phrase": "agile_teams"}, {"score": 0.00481495049065317, "phrase": "agile_software_development_teams"}, {"score": 0.004567596860086148, "phrase": "autonomous_groups"}, {"score": 0.004527619017250708, "phrase": "socio-technical_systems"}, {"score": 0.004448705308279165, "phrase": "organizational_theories"}, {"score": 0.004371160978838441, "phrase": "knowledge_management"}, {"score": 0.004257360656055417, "phrase": "complex-adaptive_systems"}, {"score": 0.0041102032028337366, "phrase": "center_stage"}, {"score": 0.004074212307838049, "phrase": "software_engineering"}, {"score": 0.003847802030433298, "phrase": "long_and_rich_history"}, {"score": 0.003586278948128509, "phrase": "software_wngineering"}, {"score": 0.003284145698220425, "phrase": "grounded_theory_research"}, {"score": 0.003198554193075258, "phrase": "new_zealand"}, {"score": 0.0031706107932295315, "phrase": "india"}, {"score": 0.0029548937818509656, "phrase": "spontaneous_roles"}, {"score": 0.0026121403051734744, "phrase": "initial_guidance"}, {"score": 0.0025778546800417808, "phrase": "continued_adherence"}, {"score": 0.0025106241866273897, "phrase": "customer_expectations"}, {"score": 0.0024776677004255104, "phrase": "customer_collaboration"}, {"score": 0.0024236964502593254, "phrase": "senior_management_support"}, {"score": 0.0023604768913655463, "phrase": "team_members"}, {"score": 0.0023294867572824147, "phrase": "self-organizing_ability"}, {"score": 0.0022192891418394514, "phrase": "development_teams"}, {"score": 0.0021049977753042253, "phrase": "self-organizing_team"}], "paper_keywords": ["Self-organizing", " team roles", " software engineering", " Agile software development", " grounded theory"], "paper_abstract": "Self-organizing teams have been recognized and studied in various forms-as autonomous groups in socio-technical systems, enablers of organizational theories, agents of knowledge management, and as examples of complex-adaptive systems. Over the last decade, self-organizing teams have taken center stage in software engineering when they were incorporated as a hallmark of Agile methods. Despite the long and rich history of self-organizing teams and their recent popularity with Agile methods, there has been little research on the topic within software wngineering. Particularly, there is a dearth of research on how Agile teams organize themselves in practice. Through a Grounded Theory research involving 58 Agile practitioners from 23 software organizations in New Zealand and India over a period of four years, we identified informal, implicit, transient, and spontaneous roles that make Agile teams self-organizing. These roles-Mentor, Coordinator, Translator, Champion, Promoter, and Terminator-are focused toward providing initial guidance and encouraging continued adherence to Agile methods, effectively managing customer expectations and coordinating customer collaboration, securing and sustaining senior management support, and identifying and removing team members threatening the self-organizing ability of the team. Understanding these roles will help software development teams and their managers better comprehend and execute their roles and responsibilities as a self-organizing team.", "paper_title": "Self-Organizing Roles on Agile Software Development Teams", "paper_id": "WOS:000315520700008"}