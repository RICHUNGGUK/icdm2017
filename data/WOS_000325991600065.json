{"auto_keywords": [{"score": 0.049110045082843494, "phrase": "dense_directed_graphs"}, {"score": 0.03627173065208286, "phrase": "power_graph_analysis"}, {"score": 0.00481495049065317, "phrase": "edge_compression"}, {"score": 0.004509919457793852, "phrase": "individual_edges"}, {"score": 0.004418601451254075, "phrase": "\"modules\"-or_groups"}, {"score": 0.004293840838533456, "phrase": "new_edges"}, {"score": 0.004258843584164121, "phrase": "aggregate_connectivity"}, {"score": 0.004104838067758352, "phrase": "lossless_compression"}, {"score": 0.003988901168289797, "phrase": "entire_graph"}, {"score": 0.003876226041373242, "phrase": "compressed_version"}, {"score": 0.003751331782523201, "phrase": "simple_grouping"}, {"score": 0.0036903962975894634, "phrase": "identical_neighbor_sets"}, {"score": 0.0036604653658231056, "phrase": "modular"}, {"score": 0.0036008372531664726, "phrase": "internal_structure"}, {"score": 0.0033449479263613848, "phrase": "module_boundaries"}, {"score": 0.002994701080666466, "phrase": "successive_relaxation"}, {"score": 0.0029581155916843663, "phrase": "module_definition"}, {"score": 0.0028627183712016894, "phrase": "rendered_graph"}, {"score": 0.002827740707723551, "phrase": "successive_technique"}, {"score": 0.0027365364488693656, "phrase": "higher_degree"}, {"score": 0.0027141975147496264, "phrase": "mental_effort"}, {"score": 0.002637433799290365, "phrase": "hypothetical_trade-off"}, {"score": 0.002583931950389087, "phrase": "human_participants"}, {"score": 0.002510843167476253, "phrase": "novel_optimal_technique"}, {"score": 0.002480154140902474, "phrase": "constraint_programming"}, {"score": 0.0024001337476063094, "phrase": "parameter_space"}, {"score": 0.0021049977753042253, "phrase": "software_dependency_analysis"}], "paper_keywords": ["Directed graphs", " networks", " modular decomposition", " power graph analysis"], "paper_abstract": "We explore the effectiveness of visualizing dense directed graphs by replacing individual edges with edges connected to \"modules\"-or groups of nodes-such that the new edges imply aggregate connectivity. We only consider techniques that offer a lossless compression: that is, where the entire graph can still be read from the compressed version. The techniques considered are: a simple grouping of nodes with identical neighbor sets; Modular Decomposition which permits internal structure in modules and allows them to be nested; and Power Graph Analysis which further allows edges to cross module boundaries. These techniques all have the same goal-to compress the set of edges that need to be rendered to fully convey connectivity-but each successive relaxation of the module definition permits fewer edges to be drawn in the rendered graph. Each successive technique also, we hypothesize, requires a higher degree of mental effort to interpret. We test this hypothetical trade-off with two studies involving human participants. For Power Graph Analysis we propose a novel optimal technique based on constraint programming. This enables us to explore the parameter space for the technique more precisely than could be achieved with a heuristic. Although applicable to many domains, we are motivated by-and discuss in particular-the application to software dependency analysis.", "paper_title": "Edge Compression Techniques for Visualization of Dense Directed Graphs", "paper_id": "WOS:000325991600065"}