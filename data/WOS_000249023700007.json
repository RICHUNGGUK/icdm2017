{"auto_keywords": [{"score": 0.029578773889651085, "phrase": "application_performance"}, {"score": 0.00481495049065317, "phrase": "object_caching"}, {"score": 0.004762202897268383, "phrase": "heuristic_solution"}, {"score": 0.004556901872357751, "phrase": "enterprise_applications"}, {"score": 0.004457579615095599, "phrase": "additional_functionality"}, {"score": 0.004103942174451674, "phrase": "oo_technologies"}, {"score": 0.0040366412779632085, "phrase": "significant_amounts"}, {"score": 0.003992385826251404, "phrase": "computational_power"}, {"score": 0.0031669873302916, "phrase": "design-time_decision"}, {"score": 0.0029641011108505785, "phrase": "cacheable_objects"}, {"score": 0.002915437843874821, "phrase": "important_decision"}, {"score": 0.00282048824450047, "phrase": "significant_impact"}, {"score": 0.002669042572650594, "phrase": "linear_integer_program"}, {"score": 0.0026107601878587816, "phrase": "heuristic_solution_approach"}, {"score": 0.002224510044064184, "phrase": "efficient_solution_approach"}, {"score": 0.0021401625519713577, "phrase": "application_developers"}], "paper_keywords": ["applications", " caching", " heuristics", " integer programming", " linear programming", " object-oriented (OO) programming"], "paper_abstract": "Object-oriented (OO) technologies have become widely adopted in enterprise applications due to the additional functionality and flexibility they provide to these applications. At the same time, however, OO technologies also require significant amounts of computational power to support, greatly impacting the performance and scalability of such applications. A very popular solution to mitigate this problem is object caching. In this paper, we show how the application of object caching maps into an optimization problem. In particular, we focus on the design-time decision of determining which objects should be candidates for caching. Choosing the cacheable objects is an important decision since it can have a significant impact on application performance. We formulate this problem as a linear integer program and present a heuristic solution approach. We also demonstrate, through a set of experiments, that our heuristic provides solutions that are reasonably close to optimal. Our contribution is a model and an efficient solution approach for this model that can help application developers to make more informed cacheability decisions and thereby improve application performance and scalability.", "paper_title": "Linearized model of object caching and heuristic solution", "paper_id": "WOS:000249023700007"}