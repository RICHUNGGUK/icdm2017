{"auto_keywords": [{"score": 0.04847167377939251, "phrase": "malicious_code"}, {"score": 0.030754840068907746, "phrase": "native_apis"}, {"score": 0.015404416953417363, "phrase": "kernel_mode"}, {"score": 0.014692729121408793, "phrase": "windows_systems"}, {"score": 0.00481495049065317, "phrase": "native_apis_protection_mechanism"}, {"score": 0.004558977045730675, "phrase": "new_vulnerabilities"}, {"score": 0.00417160036938041, "phrase": "polymorphic_malicious_code"}, {"score": 0.003949693102823493, "phrase": "behavior-based_monitor"}, {"score": 0.0037910145286595386, "phrase": "signature-based_detection_system"}, {"score": 0.003284026247389735, "phrase": "high-level_system_apis"}, {"score": 0.003195414285736136, "phrase": "suspicious_behaviors"}, {"score": 0.002730240935688002, "phrase": "novel_security_scheme"}, {"score": 0.0023810183846557486, "phrase": "average_eight_percent_computation_overhead"}], "paper_keywords": ["API hooking", " Windows API", " code injection"], "paper_abstract": "As new vulnerabilities on Windows systems are reported endlessly, it is more practical to stop polymorphic malicious code from exploiting these vulnerabilities by building an behavior-based monitor, rather than adopting a signature-based detection system or fixing these vulnerabilities. Many behavior-based monitors have been proposed for Windows systems to serve this purpose. Some of them hook high-level system APIs to detect the suspicious behaviors of code. However, they cannot detect malicious code that directly invokes Native APIs. In this paper, we present a novel security scheme that hooks Native APIs in the kernel mode. This method effectively prevents malicious code calling Native APIs directly. It introduces an average eight percent computation overhead into the system. Analyses and a series of experiments are given in the paper to support our claims.", "paper_title": "A Native APIs Protection Mechanism in the Kernel Mode against Malicious Code", "paper_id": "WOS:000289900300005"}