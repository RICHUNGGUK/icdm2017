{"auto_keywords": [{"score": 0.05007619807121452, "phrase": "cam"}, {"score": 0.04622434726748134, "phrase": "ram"}, {"score": 0.013061511076951986, "phrase": "skfsr"}, {"score": 0.010234197791161598, "phrase": "pipelined_cam"}, {"score": 0.010149323954838268, "phrase": "pipelined_ctam"}, {"score": 0.009981660824570271, "phrase": "skfsr_addresses"}, {"score": 0.009082094724121059, "phrase": "dfsr"}, {"score": 0.0047881480263782675, "phrase": "pipelined_ctam."}, {"score": 0.004761494044422926, "phrase": "novel_approach"}, {"score": 0.00470862827326028, "phrase": "large_capacity"}, {"score": 0.004669362683840143, "phrase": "content_addressable_memory"}, {"score": 0.0046046429665581555, "phrase": "associative_memory"}, {"score": 0.004540816204698049, "phrase": "low_cost"}, {"score": 0.004366748508739625, "phrase": "simple_binary_search_pipeline"}, {"score": 0.004211069233133584, "phrase": "bspl"}, {"score": 0.004141093507753515, "phrase": "binary_search_processing_elements"}, {"score": 0.0040609174534657995, "phrase": "skf_storage_ram"}, {"score": 0.0039380388343479384, "phrase": "ordered_manner"}, {"score": 0.003808209866576388, "phrase": "data_field_storage_ram"}, {"score": 0.0037449033166879874, "phrase": "unordered_cam_data_words"}, {"score": 0.003641713874009232, "phrase": "n-processor_bspl"}, {"score": 0.0035911864946764614, "phrase": "simple_n-stage"}, {"score": 0.003571171678599011, "phrase": "content-toaddress_memory"}, {"score": 0.00351179169020594, "phrase": "ctam"}, {"score": 0.0034150035351596018, "phrase": "inverse_function"}, {"score": 0.0032656422780001407, "phrase": "cam_architecture"}, {"score": 0.0031934216158787344, "phrase": "input_query_words"}, {"score": 0.00306227185008558, "phrase": "corresponding_stream"}, {"score": 0.0030197596397721566, "phrase": "query_words"}, {"score": 0.002895721231882758, "phrase": "second_stage"}, {"score": 0.002677616534005393, "phrase": "skfsr."}, {"score": 0.0026478260192958924, "phrase": "third_stage"}, {"score": 0.0024897902536499005, "phrase": "desired_stream"}, {"score": 0.002455205987751813, "phrase": "cam._an_augmented_version"}, {"score": 0.0023741464204143406, "phrase": "duplicate_search_keys"}, {"score": 0.0023543027196524006, "phrase": "cam."}, {"score": 0.0023151088048303705, "phrase": "simple_database"}, {"score": 0.002251227801482381, "phrase": "proposed_pipelined_cam"}, {"score": 0.0022324086872003985, "phrase": "modular_and_highly_scalable_architecture"}, {"score": 0.002164738347530834, "phrase": "cam_size"}, {"score": 0.0021168128007470815, "phrase": "ram_access_rate"}], "paper_keywords": ["Content Addressable Memory ( CAM)", " associative store", " Associative Memory ( AM)", " pipelined CAM", " Content-To-Address Memory (CTAM)", " pipelined CTAM", " Binary Search Processor (BSP)", " Pipelined Binary Search Processor (PBSP)", " pipelined binary search", " Binary Search Pipeline (BSPL)", " pipelined search processor", " pipelined search engine"], "paper_abstract": "A novel approach toward realizing a large capacity high-throughput pipelined Content Addressable Memory ( CAM) or Associative Memory (AM) at low cost has been described. It employs only commercial Random Access Memory ( RAM) along with a simple Binary Search Pipeline (BSPL). In order to search a (2(n) - 1)-word Search Key Field (SKF) storage RAM, the BSPL employs n identical and simple Binary Search Processing Elements, each having its local copy of the SKF Storage RAM (SKFSR). The SKFSR stores, in an ordered manner, the SKFs of all the words in the CAM, whereas a Data Field Storage RAM (DFSR) stores the unordered CAM data words. The n-times replicated SKFSR, along with the n-processor BSPL, functions as a simple n-stage pipelined Content-toAddress Memory (CTAM). The CTAM, a new kind of memory that performs the inverse function of a RAM, serves as the first and the most important stage in the proposed 3-stage pipelined CAM architecture. In response to the stream of input query words (search keys) fed to the pipelined CAM, the pipelined CTAM first produces the corresponding stream of SKFSR addresses where the query words reside. These SKFSR addresses corresponding to the queries are next mapped back by the second stage, namely, the Address Mapping RAM, to their original addresses in the CAM, i.e., in the DFSR, which had been altered due to data ordering in the SKFSR. Now, the third stage of the pipelined CAM, namely, the DFSR, is read out at the mapped, i.e., the original CAM addresses, to obtain the desired stream of responses from the CAM. An augmented version of the pipelined CTAM has been designed to handle the presence of duplicate search keys in the CAM. A few illustrative examples of querying a simple database stored in the CAM have been included. The proposed pipelined CAM has a modular and highly scalable architecture. Its throughput rate, which is independent of the CAM size, is a little less than the RAM access rate and its latency is a little more than (n + 2) times the RAM access time.", "paper_title": "Large-capacity high-throughput low-cost pipelined CAM using pipelined CTAM", "paper_id": "WOS:000236116200008"}