{"auto_keywords": [{"score": 0.0475596004207704, "phrase": "ui"}, {"score": 0.00481495049065317, "phrase": "platform-independent_particles"}, {"score": 0.004611369021812453, "phrase": "user_interface"}, {"score": 0.004345363360869553, "phrase": "application_concerns"}, {"score": 0.004252469672259375, "phrase": "additional_requirement"}, {"score": 0.004072573194988867, "phrase": "user_location"}, {"score": 0.0038375280115736958, "phrase": "heterogeneous_devices"}, {"score": 0.0035965032173588753, "phrase": "implementation_support"}, {"score": 0.003370565320453525, "phrase": "significant_portion"}, {"score": 0.0033163269450817716, "phrase": "ui_description"}, {"score": 0.0032806521851034766, "phrase": "platform-specific_components"}, {"score": 0.003210446135114967, "phrase": "repeated_implementation_decision"}, {"score": 0.0031417377608722, "phrase": "development_costs"}, {"score": 0.0030414140732789186, "phrase": "separate_development"}, {"score": 0.002928399649340438, "phrase": "error_prone_maintenance"}, {"score": 0.002613870237087035, "phrase": "fine-grain_fragments"}, {"score": 0.0021627595586364724, "phrase": "user_demands"}, {"score": 0.0021049977753042253, "phrase": "target_platform"}], "paper_keywords": ["Separation of concerns", " User interface", " Platform-independence", " Aspect-oriented programming", " Networking"], "paper_abstract": "The complexity of user interface (UI) design grows quickly with the number of application concerns. Such complexity compounds with additional requirement of contextual-awareness (i.e., adapt to user location, skill level, etc.) and support of heterogeneous devices and platforms (e.g., web, mobile app). Implementation support of such a wide-range of orthogonal concerns often results in restatement of a significant portion of the UI description using platform-specific components. Replication requires repeated implementation decision, greatly increasing development costs since each version/context variant may need separate development. Naturally, such replication also produces error prone maintenance because code updates must correlate among all replicas. Using separation of concerns, the application can be decomposed into fine-grain fragments, which we call particles, some of which are platform independent and others are not. Using this decomposition, this paper addresses the above inefficiency by dynamically composing particles at runtime that match user demands, context, and target platform.", "paper_title": "On separation of platform-independent particles in user interfaces", "paper_id": "WOS:000361897200016"}