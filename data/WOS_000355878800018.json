{"auto_keywords": [{"score": 0.03225981417564511, "phrase": "dram"}, {"score": 0.00481495049065317, "phrase": "exascale_systems"}, {"score": 0.004600228893803583, "phrase": "existing_computer_architectures"}, {"score": 0.0044398358177815305, "phrase": "exascale_system"}, {"score": 0.003911135156992, "phrase": "new_architecture"}, {"score": 0.003551694229680741, "phrase": "memory_module"}, {"score": 0.0034277338119963886, "phrase": "large_memory_hierarchies"}, {"score": 0.0033759367489122716, "phrase": "processor_core"}, {"score": 0.0031926001871260524, "phrase": "sophisticated_computational_elements"}, {"score": 0.003144345057121367, "phrase": "logic_layer"}, {"score": 0.0030811340338342454, "phrase": "dynamic_random-access_memory"}, {"score": 0.0029137604783116065, "phrase": "active_memory"}, {"score": 0.002797757576619329, "phrase": "scientific_exascale_system"}, {"score": 0.0027554538693034163, "phrase": "computational_elements"}, {"score": 0.002713788077665689, "phrase": "vector_architecture"}, {"score": 0.002618995204424126, "phrase": "comprehensive_set"}, {"score": 0.002592523232809191, "phrase": "floating-point_and_integer_instructions"}, {"score": 0.002342048999008582, "phrase": "software_infrastructure"}, {"score": 0.002148226022654619, "phrase": "application_kernels"}, {"score": 0.0021049977753042253, "phrase": "performance_and_power_projections"}], "paper_keywords": [""], "paper_abstract": "Many studies point to the difficulty of scaling existing computer architectures to meet the needs of an exascale system (i.e., capable of executing 1018 floating-point operations per second), consuming no more than 20 MW in power, by around the year 2020. This paper outlines a new architecture, the Active Memory Cube, which reduces the energy of computation significantly by performing computation in the memory module, rather than moving data through large memory hierarchies to the processor core. The architecture leverages a commercially demonstrated 3D memory stack called the Hybrid Memory Cube, placing sophisticated computational elements on the logic layer below its stack of dynamic random-access memory (DRAM) dies. The paper also describes an Active Memory Cube tuned to the requirements of a scientific exascale system. The computational elements have a vector architecture and are capable of performing a comprehensive set of floating-point and integer instructions, predicated operations, and gather-scatter accesses across memory in the Cube. The paper outlines the software infrastructure used to develop applications and to evaluate the architecture, and describes results of experiments on application kernels, along with performance and power projections.", "paper_title": "Active Memory Cube: A processing-in-memory architecture for exascale systems", "paper_id": "WOS:000355878800018"}