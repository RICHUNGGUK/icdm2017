{"auto_keywords": [{"score": 0.04966447721457641, "phrase": "recovery_protocol"}, {"score": 0.010612387000973441, "phrase": "suitable_checkpoint"}, {"score": 0.010385449131060941, "phrase": "distributed_application"}, {"score": 0.005587098510919785, "phrase": "graph_similarity_problem"}, {"score": 0.004670597652149685, "phrase": "checkpoint_and_recovery_protocols"}, {"score": 0.00457013354092966, "phrase": "distributed_applications"}, {"score": 0.0045108906244892165, "phrase": "fault_tolerance"}, {"score": 0.003958937342925219, "phrase": "different_system"}, {"score": 0.003924629168434799, "phrase": "application_characteristics"}, {"score": 0.0038234714417849495, "phrase": "specific_parameters"}, {"score": 0.0037411604449359794, "phrase": "single_checkpoint"}, {"score": 0.0032263862712733934, "phrase": "best_performance"}, {"score": 0.0027822459052173113, "phrase": "novel_technique"}, {"score": 0.0026986685585382347, "phrase": "communication_pattern"}, {"score": 0.002629026692001082, "phrase": "independent_interest"}, {"score": 0.002583597507349819, "phrase": "similarity_measure"}, {"score": 0.0024201029474586007, "phrase": "extensive_experimental_results"}, {"score": 0.002357632753637638, "phrase": "graph_similarity"}, {"score": 0.0022472527731744974, "phrase": "appropriate_checkpoint"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["distributed", " checkpoint", " recovery", " fault", " performance", " similarity", " graph"], "paper_abstract": "Checkpoint and recovery protocols are commonly used in distributed applications for providing fault tolerance. The performance of a checkpoint and recovery protocol is judged by the amount of computation it can save against the amount of overhead it incurs This performance depends on different system and application characteristics. as well as protocol specific parameters. Hence, no single checkpoint and recovery protocol works equally well for all applications, and given a distributed application and a system it will run on, it is important to choose a protocol that will give the best performance for that system and application. In this paper, we present a scheme to automatically identify a suitable checkpoint and recovery protocol for a given distributed application running on a given system. The scheme involves a novel technique for finding the similarity between the communication pattern of two distributed applications that is of independent interest also. The similarity measure is based on a graph similarity problem. We present a heuristic for the graph similarity problem. Extensive experimental results are shown both for the graph similarity heuristic and the automatic identification scheme to show that an appropriate checkpoint and recovery protocol can be chosen automatically for a given application. (c) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Finding a suitable checkpoint and recovery protocol for a distributed application", "paper_id": "WOS:000236810700012"}