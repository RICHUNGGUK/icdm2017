{"auto_keywords": [{"score": 0.04852232688729349, "phrase": "scalable_tcp"}, {"score": 0.013679038898237714, "phrase": "different_round-trip_times"}, {"score": 0.00481495049065317, "phrase": "scalable_tcp_congestion_control_parameters"}, {"score": 0.004525629293824217, "phrase": "long-delay_connections"}, {"score": 0.004396600680348434, "phrase": "full_utilization"}, {"score": 0.004218602458288531, "phrase": "competing_flows"}, {"score": 0.004132312946154097, "phrase": "vastly_different_shares"}, {"score": 0.004014452814186653, "phrase": "mathematical_analysis"}, {"score": 0.003757480190200645, "phrase": "congestion_window"}, {"score": 0.0035461111918923117, "phrase": "congestion_avoidance_phase"}, {"score": 0.003473529187092258, "phrase": "exponential_increase"}, {"score": 0.0032780806856932423, "phrase": "linear_increase"}, {"score": 0.003042812778470762, "phrase": "packet_loss"}, {"score": 0.002968192753809507, "phrase": "buffer_overflow"}, {"score": 0.0029437270961011077, "phrase": "random_link_failure"}, {"score": 0.0028010985923790036, "phrase": "round-trip_time"}, {"score": 0.002665362204725326, "phrase": "high_unfairness"}, {"score": 0.002621590601574503, "phrase": "multiple_connections"}, {"score": 0.002504880563070155, "phrase": "dynamical_adjustment"}, {"score": 0.002473959963690124, "phrase": "congestion_window_increase"}, {"score": 0.00240328454980006, "phrase": "measured_round-trip_time"}, {"score": 0.002305799666781492, "phrase": "network_simulations"}, {"score": 0.0022679195103377124, "phrase": "modified_algorithm"}, {"score": 0.0022399174232611853, "phrase": "better_allocation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Scalable TCP analysis", " dynamic parameters", " throughput", " TCP fairness", " TCP friendliness"], "paper_abstract": "This paper investigates two common problems associated with Scalable TCP: (1) that in long-delay connections, Scalable TCP is slow in achieving full utilization of the bandwidth; and (2) that competing flows with different round-trip times may consume vastly different shares of the bandwidth. Through a mathematical analysis of the issues behind these behaviors, expressions are derived for the evolution of the congestion window (M over time. In particular, we identify two regimes in the congestion avoidance phase: a period of exponential increase that lasts as long as the buffer is empty, followed by a linear increase when the buffer is not empty. Accordingly, we also present expressions for the throughput after packet loss begins to occur due to buffer overflow and/or random link failure. We observe that the throughput is inversely proportional to the round-trip time (RTT) of the connection, which leads to the high unfairness of Scalable TCP for multiple connections with different round-trip times. We then derive a formula that permits dynamical adjustment of the congestion window increase and decrease parameters based on the measured round-trip time of the connections. Finally, a number of network simulations demonstrate that the modified algorithm achieves a better allocation of throughput in scenarios with a variety of connections. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Dynamic adjustment of Scalable TCP congestion control parameters", "paper_id": "WOS:000258035900004"}