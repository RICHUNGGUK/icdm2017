{"auto_keywords": [{"score": 0.042991405398285394, "phrase": "standard_parametricity_results"}, {"score": 0.00481495049065317, "phrase": "free_theorems-based_program_transformations"}, {"score": 0.0046269981365987915, "phrase": "pure_functional_programs"}, {"score": 0.004424268136268051, "phrase": "interesting_theorems"}, {"score": 0.0040449598280454645, "phrase": "so-called_free_theorems"}, {"score": 0.0039651694106206245, "phrase": "nonstrict_languages"}, {"score": 0.003906357144047631, "phrase": "polymorphic_strict_evaluation"}, {"score": 0.003829290275367182, "phrase": "haskell's_seq"}, {"score": 0.0037724857647796813, "phrase": "folk_theorem"}, {"score": 0.003607103102127708, "phrase": "haskell"}, {"score": 0.0035358770665604657, "phrase": "girard-reynolds_calculus"}, {"score": 0.0034660938095219846, "phrase": "algebraic_datatypes"}, {"score": 0.0028966970007550824, "phrase": "parametricity_results"}, {"score": 0.0024693979425773993, "phrase": "\"inequational\"_versions"}, {"score": 0.002136747803494932, "phrase": "related_program_transformations"}, {"score": 0.0021049977753042253, "phrase": "free_theorems"}], "paper_keywords": ["Haskell", " control primitives", " correctness proofs", " denotational semantics", " functional programming languages", " logical relations", " mixing strict and nonstrict evaluation", " parametricity", " polymorphism", " program transformations", " rank-2 types", " short cut fusion", " theorems for free"], "paper_abstract": "Parametric polymorphism constrains the behavior of pure functional programs in a way that allows the derivation of interesting theorems about them solely from their types, i.e., virtually for free. Unfortunately, standard parametricity results - including so-called free theorems - fail for nonstrict languages supporting a polymorphic strict evaluation primitive such as Haskell's seq. A folk theorem maintains that such results hold for a subset of Haskell corresponding to a Girard-Reynolds calculus with fixpoints and algebraic datatypes even when seq is present provided the relations which appear in their derivations are required to be bottom-reflecting and admissible. In this paper we show that this folklore is incorrect, but that parametricity results can be recovered in the presence of seq by restricting attention to left-closed, total, and admissible relations instead. The key novelty of our approach is the asymmetry introduced by left-closedness, which leads to \"inequational\" versions of standard parametricity results together with preconditions guaranteeing their validity even when seq is present. We use these results to derive criteria ensuring that both equational and inequational versions of short cut fusion and related program transformations based on free theorems hold in the presence of seq.", "paper_title": "The impact of seq on free theorems-based program transformations", "paper_id": "WOS:000235949900004"}