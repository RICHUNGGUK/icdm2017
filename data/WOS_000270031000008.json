{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "software_rejuvenation"}, {"score": 0.004395742407834023, "phrase": "automated_self-healing_techniques"}, {"score": 0.00419997182602686, "phrase": "off-the-shelf_application_servers"}, {"score": 0.004145649381700967, "phrase": "software_aging_and_transient_failures"}, {"score": 0.004039094712469991, "phrase": "continuous_monitoring"}, {"score": 0.003986844722309844, "phrase": "system_data"}, {"score": 0.003935267970727093, "phrase": "performability_metrics"}, {"score": 0.003859146369720225, "phrase": "application_server"}, {"score": 0.0037599278182081056, "phrase": "anomalous_behavior"}, {"score": 0.003569050665799723, "phrase": "automatic_rejuvenation_action"}, {"score": 0.0034999880739789257, "phrase": "self-healing_scheme"}, {"score": 0.0033658327434624457, "phrase": "running_service"}, {"score": 0.0033006894756949776, "phrase": "minimal_amount"}, {"score": 0.003194898129853895, "phrase": "zero_downtime"}, {"score": 0.002878556952876824, "phrase": "self-recovery_actions"}, {"score": 0.0026104197983396367, "phrase": "open-source_linux_tools"}, {"score": 0.002559859451119449, "phrase": "xen_virtualization_middleware"}, {"score": 0.002477753633057247, "phrase": "experimental_study"}, {"score": 0.0023826878007250914, "phrase": "tpc-w"}, {"score": 0.002203332747526648, "phrase": "fail-over_and_software_rejuvenation"}, {"score": 0.002132637840285576, "phrase": "transient_failures"}, {"score": 0.0021049977753042253, "phrase": "software_aging"}], "paper_keywords": ["Software rejuvenation", " software aging", " virtualization", " self-healing"], "paper_abstract": "In this paper, we present an approach for software rejuvenation based on automated self-healing techniques that can be easily applied to off-the-shelf Application Servers. Software aging and transient failures are detected through continuous monitoring of system data and performability metrics of the application server. If some anomalous behavior is identified, the system triggers an automatic rejuvenation action. This self-healing scheme is meant to disrupt the running service for a minimal amount of time, achieving zero downtime in most cases. In our scheme, we exploit the usage of virtualization to optimize the self-recovery actions. The techniques described in this paper have been tested with a set of open-source Linux tools and the XEN virtualization middleware. We conducted an experimental study with two application benchmarks (Tomcat/Axis and TPC-W). Our results demonstrate that virtualization can be extremely helpful for fail-over and software rejuvenation in the occurrence of transient failures and software aging.", "paper_title": "Using Virtualization to Improve Software Rejuvenation", "paper_id": "WOS:000270031000008"}