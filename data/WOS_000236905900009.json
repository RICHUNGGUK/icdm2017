{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "proof_attempts"}, {"score": 0.04142066426251649, "phrase": "proof_data_structure"}, {"score": 0.004494570360108983, "phrase": "practically_useful_mathematical_assistant_system"}, {"score": 0.0037188360359702182, "phrase": "current_proof_state"}, {"score": 0.003501175642882274, "phrase": "flexible_interplay"}, {"score": 0.003353521531649663, "phrase": "human_user"}, {"score": 0.003212074324593725, "phrase": "parameterized_proof_data_structure"}, {"score": 0.0026342827320931937, "phrase": "abstract_level_proof_explanation"}, {"score": 0.0025892330566358503, "phrase": "low-level_proof_verification"}, {"score": 0.0022168460543913787, "phrase": "different_proof_alternatives"}, {"score": 0.0021049977753042253, "phrase": "different_granularities"}], "paper_keywords": [""], "paper_abstract": "A practically useful mathematical assistant system requires the sophisticated combination of interaction and automation. Central in such a system is the proof data structure, which has to maintain the current proof state and which has to allow the flexible interplay of various components including the human user. We describe a parameterized proof data structure for the management of proofs, which includes our experience with the development of two proof assistants. It supports and bridges the gap between abstract level proof explanation and low-level proof verification. The proof data structure enables, in particular, the flexible handling of lemmas, the maintenance of different proof alternatives, and the representation of different granularities of proof attempts.", "paper_title": "A generic modular data structure for proof attempts alternating on ideas and granularity", "paper_id": "WOS:000236905900009"}