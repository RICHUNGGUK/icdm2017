{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "query_processing"}, {"score": 0.00475924837336259, "phrase": "autonomous_heterogeneous_environments"}, {"score": 0.004676895436217523, "phrase": "increasing_prevalence"}, {"score": 0.004622783000449884, "phrase": "networked_storage"}, {"score": 0.004569293780076254, "phrase": "computational_resources"}, {"score": 0.004386887374401584, "phrase": "resource_access"}, {"score": 0.0038820411362656803, "phrase": "dedicated_infrastructures"}, {"score": 0.0036838048761094933, "phrase": "non-dedicated_environments"}, {"score": 0.0034551632687788857, "phrase": "partial_information"}, {"score": 0.003415137969569376, "phrase": "unstable_conditions"}, {"score": 0.0032786537599187125, "phrase": "distributed_settings"}, {"score": 0.0031660031870090434, "phrase": "grid_platforms"}, {"score": 0.003039445153076014, "phrase": "evaluation_strategies"}, {"score": 0.0030042210975126616, "phrase": "query_runtime"}, {"score": 0.002917931350071647, "phrase": "evolving_environment"}, {"score": 0.002817639725689939, "phrase": "machine_load"}, {"score": 0.0026736111900632934, "phrase": "adaptive_techniques"}, {"score": 0.002507511169156787, "phrase": "plan_partitions"}, {"score": 0.0024784363584530976, "phrase": "intra-operator_parallelism"}, {"score": 0.0023654615987859402, "phrase": "pipelined_plans"}, {"score": 0.0023380300046435187, "phrase": "inter-operator_parallelism"}, {"score": 0.0021049977753042253, "phrase": "grid-enabled_adaptive_query_processor"}], "paper_keywords": ["Adaptive query processing", " Dynamic resource allocation", " Load balancing", " Distributed query processing", " Query optimization", " Grid computing"], "paper_abstract": "The increasing prevalence of networked storage and computational resources, along with middleware for managing resource access and sharing, raises the prospect that queries can be run over resources obtained on demand, rather than on dedicated infrastructures. However, the movement of query processing into non-dedicated environments means that it is necessary to take account of the partial information and unstable conditions that characterise autonomous, shared, distributed settings. Thus, query processing on grid platforms needs to be adaptive, revising evaluation strategies at query runtime in response to the evolving environment, such as changes to machine load and availability. To address this challenge, adaptive techniques are described that: (i) balance load across plan partitions supporting intra-operator parallelism; (ii) remove bottlenecks in pipelined plans supporting inter-operator parallelism; and (iii) combine the two aforementioned techniques. The approach has been empirically evaluated in a grid-enabled adaptive query processor.", "paper_title": "Adaptive workload allocation in query processing in autonomous heterogeneous environments", "paper_id": "WOS:000264518900001"}