{"auto_keywords": [{"score": 0.04798652790106826, "phrase": "gossip_protocols"}, {"score": 0.00481495049065317, "phrase": "unified_component_framework_for_gossip"}, {"score": 0.0037940502405699765, "phrase": "unified_programming_framework"}, {"score": 0.003367611042980526, "phrase": "existing_solutions"}, {"score": 0.0031963987773420068, "phrase": "limited_opportunities"}, {"score": 0.002712794864739074, "phrase": "middleware_solutions"}, {"score": 0.002574788013427524, "phrase": "gossip-based_systems"}, {"score": 0.002268088741853586, "phrase": "code_reuse"}, {"score": 0.0021049977753042253, "phrase": "dynamic_evolution"}], "paper_keywords": ["Distributed systems", " components", " frameworks", " protocols"], "paper_abstract": "Although the principles of gossip protocols are relatively easy to grasp, their variety can make their design and evaluation highly time consuming. This problem is compounded by the lack of a unified programming framework for gossip, which means developers cannot easily reuse, compose, or adapt existing solutions to fit their needs, and have limited opportunities to share knowledge and ideas. In this paper, we consider how component frameworks, which have been widely applied to implement middleware solutions, can facilitate the development of gossip-based systems in a way that is both generic and simple. We show how such an approach can maximize code reuse, simplify the implementation of gossip protocols, and facilitate dynamic evolution and redeployment.", "paper_title": "GOSSIPKIT: A Unified Component Framework for Gossip", "paper_id": "WOS:000334666000002"}