{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "scheduling_using"}, {"score": 0.0042610532651691305, "phrase": "resource_exhaustion"}, {"score": 0.004162978902905446, "phrase": "progressive_software_performance_degradation"}, {"score": 0.003927516959113487, "phrase": "experimental_study"}, {"score": 0.0038820411362656803, "phrase": "software_aging"}, {"score": 0.003770633265791941, "phrase": "on-line_bookstore_application"}, {"score": 0.0036838048761094933, "phrase": "standard_configuration"}, {"score": 0.0036411406244705557, "phrase": "tpc-w_benchmark"}, {"score": 0.00357806560856829, "phrase": "real_website"}, {"score": 0.0032031180198375283, "phrase": "application_failures"}, {"score": 0.0031476068430779367, "phrase": "memory_leaks"}, {"score": 0.0030572112793962004, "phrase": "accelerated_life_testing"}, {"score": 0.002884111441153185, "phrase": "weibull_time"}, {"score": 0.00280126189041041, "phrase": "normal_level"}, {"score": 0.0026892447164623247, "phrase": "semi-markov_process"}, {"score": 0.0026119782818898193, "phrase": "optimal_software_rejuvenation_trigger_interval"}, {"score": 0.0025221759076833124, "phrase": "optimal_rejuvenation_trigger_interval"}, {"score": 0.002421291757425244, "phrase": "inordinate_long_time"}, {"score": 0.002351705899181029, "phrase": "simulation_model"}, {"score": 0.0022974765563692776, "phrase": "alt_experimental_results"}, {"score": 0.0022184630090454132, "phrase": "steady-state_availability"}, {"score": 0.0021049977753042253, "phrase": "semi-markov_availability_model"}], "paper_keywords": ["Accelerated life tests", " memory leaks", " optimal software rejuvenation", " semi-markov process", " simulation"], "paper_abstract": "A number of studies have reported the phenomenon of \"Software aging\", caused by resource exhaustion and characterized by progressive software performance degradation. In this article, we carry out an experimental study of software aging and rejuvenation for an on-line bookstore application, following the standard configuration of TPC-W benchmark. While real website is used for the bookstore, the clients are emulated. In order to reduce the time to application failures caused by memory leaks, we use the accelerated life testing (ALT) approach. We then select the Weibull time to failure distribution at normal level, to be used in a semi-Markov process, to compute the optimal software rejuvenation trigger interval. Since the validation of optimal rejuvenation trigger interval with emulated browsers will take an inordinate long time, we develop a simulation model to validate the ALT experimental results, and also estimate the steady-state availability to cross-validate the results of the semi-Markov availability model.", "paper_title": "Software Rejuvenation Scheduling Using Accelerated Life Testing", "paper_id": "WOS:000332482300009"}