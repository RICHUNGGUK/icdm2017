{"auto_keywords": [{"score": 0.030717706291053522, "phrase": "dictionary_lenses"}, {"score": 0.02731720525179705, "phrase": "boomerang"}, {"score": 0.00481495049065317, "phrase": "string_data"}, {"score": 0.004724365740062236, "phrase": "bidirectional_program"}, {"score": 0.004548253531664032, "phrase": "ordinary_function"}, {"score": 0.004309892341117025, "phrase": "\"update_translator"}, {"score": 0.004188779311510202, "phrase": "updated_output"}, {"score": 0.004136044939878838, "phrase": "new_input"}, {"score": 0.003857606273328462, "phrase": "ordered_data"}, {"score": 0.0035864603175592854, "phrase": "output_list"}, {"score": 0.003409120890690851, "phrase": "lost_or_corrupted_data"}, {"score": 0.00330274985014172, "phrase": "bidirectional_transformations"}, {"score": 0.0032508114149214407, "phrase": "primordial_ordered_data_type"}, {"score": 0.0031693980719538317, "phrase": "bidirectional_string_lens_combinators"}, {"score": 0.0031294568052050186, "phrase": "familiar_operations"}, {"score": 0.003109674734960237, "phrase": "regular_transducers"}, {"score": 0.003051073364818384, "phrase": "kleene-star"}, {"score": 0.0030030808225723266, "phrase": "type_system"}, {"score": 0.0029746473344900784, "phrase": "regular_expressions"}, {"score": 0.0029185830864495313, "phrase": "new_semantic_space"}, {"score": 0.002845466319548362, "phrase": "foster_et_al"}, {"score": 0.002739201885002873, "phrase": "reorderable_chunks"}, {"score": 0.0023974961635593135, "phrase": "complex_real-world_data_formats"}, {"score": 0.0023747831114988766, "phrase": "swissprot"}, {"score": 0.0023226161707785064, "phrase": "essential_property"}, {"score": 0.0022860557844373943, "phrase": "correct_use"}, {"score": 0.0021797840569206697, "phrase": "refined_semantic_space"}, {"score": 0.0021659920594094407, "phrase": "quasi-oblivious_lenses"}, {"score": 0.0021049977753042253, "phrase": "compact_characterizations"}], "paper_keywords": ["languages", " design", " theory", " bidirectional languages", " lenses", " view update problem", " regular string transducers", " regular types"], "paper_abstract": "A lens is a bidirectional program. When read from left to right, it denotes an ordinary function that maps inputs to outputs. When read from right to left, it denotes an \"update translator\" that takes an input together with an updated output and produces a new input that reflects the update. Many variants of this idea have been explored in the literature, but none deal fully with ordered data. If, for example, an update changes the order of a list in the output, the items in the output list and the chunks of the input that generated them can be misaligned, leading to lost or corrupted data. We attack this problem in the context of bidirectional transformations over strings, the primordial ordered data type. We first propose a collection of bidirectional string lens combinators, based on familiar operations on regular transducers (union, concatenation, Kleene-star) and with a type system based on regular expressions. We then design a new semantic space of dictionary lenses, enriching the lenses of Foster et al. (2007b) with support for two additional combinators for marking \"reorderable chunks\" and their keys. To demonstrate the effectiveness of these primitives, we describe the design and implementation of Boomerang, a full-blown bidirectional programming language with dictionary lenses at its core. We have used Boomerang to build transformers for complex real-world data formats including the SwissProt genomic database. We formalize the essential property of resourcefulness-the correct use of keys to associate chunks in the input and output-by defining a refined semantic space of quasi-oblivious lenses. Several previously studied properties of lenses turn out to have compact characterizations in this space.", "paper_title": "Boomerang: Resourceful lenses for string data", "paper_id": "WOS:000256500600038"}