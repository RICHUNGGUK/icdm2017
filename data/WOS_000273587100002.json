{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "principal_sequence"}, {"score": 0.004013843843250455, "phrase": "nonnegative_weights"}, {"score": 0.0036924762294207633, "phrase": "parameter_lambda"}, {"score": 0.003320277992107974, "phrase": "first_term"}, {"score": 0.0031010029460927864, "phrase": "different_components"}, {"score": 0.002788257824525862, "phrase": "current_best_known_algorithm"}, {"score": 0.002623881637290192, "phrase": "maximum_flow_computations"}, {"score": 0.002488001663771768, "phrase": "parametric_maximum_flow_computations"}, {"score": 0.002169968849836984, "phrase": "good_separator"}, {"score": 0.0021049977753042253, "phrase": "planar_graphs"}], "paper_keywords": ["Principal sequence of partitions", " Network attack", " Network strength", " Minimum cut/maximum flow", " Parametric algorithm"], "paper_abstract": "We consider the following problem: given an undirected weighted graph G=(V,E,c) with nonnegative weights, minimize function c(delta(I ))-lambda|I | for all values of parameter lambda. Here I is a partition of the set of nodes, the first term is the cost of edges whose endpoints belong to different components of the partition, and |I | is the number of components. The current best known algorithm for this problem has complexity O(|V|(2)) maximum flow computations. We improve it to |V| parametric maximum flow computations. We observe that the complexity can be improved further for families of graphs which admit a good separator, e.g. for planar graphs.", "paper_title": "A Faster Algorithm for Computing the Principal Sequence of Partitions of a Graph", "paper_id": "WOS:000273587100002"}