{"auto_keywords": [{"score": 0.04940203756018457, "phrase": "constant_alphabet"}, {"score": 0.03861529053005002, "phrase": "shorter_string"}, {"score": 0.03363896917055258, "phrase": "longer_string"}, {"score": 0.004420472010542188, "phrase": "on-line_version"}, {"score": 0.0030293828200315797, "phrase": "data_stream"}, {"score": 0.002861302930564756, "phrase": "dominant_matches"}, {"score": 0.0027413748388534025, "phrase": "new_upper_bound"}, {"score": 0.0021049977753042253, "phrase": "in-length_prefix"}], "paper_keywords": ["algorithm", " string comparison", " longest common subsequence", " on-line algorithm"], "paper_abstract": "This article presents an algorithm that solves an on-line version of the longest common subsequence (LCS) problem for two strings over a constant alphabet in O(d+n) time and O(m+d) space, where in is the length of the shorter string, the whole of which is given to the algorithm in advance, n is the length of the longer string, which is given as a data stream, and d is the number of dominant matches between the two strings. A new upper bound, O(p(m - q)), of d is also presented, where p is the length of the LCS of the two strings, and q is the length of the LCS of the shorter string and the in-length prefix of the longer string.", "paper_title": "A Fast On-Line Algorithm for the Longest Common Subsequence Problem with Constant Alphabet", "paper_id": "WOS:000299588300041"}