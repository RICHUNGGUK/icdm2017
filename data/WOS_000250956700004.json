{"auto_keywords": [{"score": 0.048902368426216106, "phrase": "multiple_programming_languages"}, {"score": 0.00481495049065317, "phrase": "parallel_devs_simulators"}, {"score": 0.004650086856905758, "phrase": "flexible_yet_efficient_execution"}, {"score": 0.0043804319008535555, "phrase": "distributed_simulation_execution"}, {"score": 0.004337028108577593, "phrase": "independent_model_development"}, {"score": 0.004251500979153001, "phrase": "formal_model_specification"}, {"score": 0.0040449598280454645, "phrase": "novel_approach"}, {"score": 0.0038869467872381957, "phrase": "simulation_interoperability"}, {"score": 0.0037913267098534887, "phrase": "parallel_discrete_event_system_specification"}, {"score": 0.003716520760680603, "phrase": "compliant_simulation_models"}, {"score": 0.003448863509392547, "phrase": "alternative_implementations"}, {"score": 0.003397683082821229, "phrase": "parallel_devs_abstract_simulator"}, {"score": 0.0032486392192981944, "phrase": "sam_concept"}, {"score": 0.0029698211157405618, "phrase": "component_models"}, {"score": 0.0029111767710750117, "phrase": "programming_languages"}, {"score": 0.002896776950536883, "phrase": "java"}, {"score": 0.0028394925080958205, "phrase": "visual_basic"}, {"score": 0.0027420820738468577, "phrase": "illustrative_examples"}, {"score": 0.0026612444314342023, "phrase": "integrated_devsjava"}, {"score": 0.002634830238219976, "phrase": "adevs_environment"}, {"score": 0.0025571463140118805, "phrase": "simulation_experiments"}, {"score": 0.0025066304722422463, "phrase": "execution_performance"}, {"score": 0.0024693979425773993, "phrase": "proposed_approach"}, {"score": 0.002349228457383314, "phrase": "application_domains"}, {"score": 0.002268598551466928, "phrase": "heterogeneous_component_models"}, {"score": 0.002223770196464436, "phrase": "parallel_devs_formalism"}, {"score": 0.002168975681697056, "phrase": "rigorous_foundation"}, {"score": 0.0021049977753042253, "phrase": "different_simulation_engines"}], "paper_keywords": ["DEVS", " interoperability", " distributed simulation", " middleware", " scalability"], "paper_abstract": "Flexible yet efficient execution of heterogeneous simulations benefits from concepts and methods that can support distributed simulation execution and independent model development. To enable formal model specification with submodels implemented in multiple programming languages, we propose a novel approach called the Shared Abstract Model (SAM) approach, which supports simulation interoperability for the class of Parallel Discrete Event System Specification (DEVS) compliant simulation models. Using this approach, models written in multiple programming languages can be executed together using alternative implementations of the Parallel DEVS abstract simulator. In this paper, we describe the SAM concept, detail its specification and exemplify its implementation with two disparate DEVS-simulation engines. We demonstrate the simplicity of integrating simulation of component models written in the programming languages Java, C++ and Visual Basic. We describe a set of illustrative examples that are developed in an integrated DEVSJAVA and Adevs environment. Further, we stage simulation experiments to investigate the execution performance of the proposed approach and compare it with alternatives. We conclude that application domains, in which independently-developed heterogeneous component models consistent with the Parallel DEVS formalism, benefit from a rigorous foundation and are also interoperable across different simulation engines.", "paper_title": "Interoperability among parallel DEVS simulators and models implemented in multiple programming languages", "paper_id": "WOS:000250956700004"}