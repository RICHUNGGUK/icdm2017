{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "modular_decomposition"}, {"score": 0.049440303515783074, "phrase": "edge_deletion_problems"}, {"score": 0.004624751696958501, "phrase": "minimum_set"}, {"score": 0.00407042677958844, "phrase": "finite_set"}, {"score": 0.004016072233242585, "phrase": "forbidden_induced_subgraphs"}, {"score": 0.003805788648230075, "phrase": "fixed-parameter_time"}, {"score": 0.0037297918570822876, "phrase": "naive_bounded_search_tree_algorithm"}, {"score": 0.003487222504700868, "phrase": "forbidden_induced_subgraph"}, {"score": 0.003417565253539315, "phrase": "new_ones"}, {"score": 0.003216804708106142, "phrase": "original_forbidden_induced_subgraph"}, {"score": 0.0030895394261534776, "phrase": "possible_ways"}, {"score": 0.00300749708357049, "phrase": "forbidden_induced_subgraph_one"}, {"score": 0.0027187231747900814, "phrase": "naive_implementation"}, {"score": 0.0024084679931209514, "phrase": "far_simpler_quotient_graphs"}, {"score": 0.002344468886431959, "phrase": "original_graphs"}, {"score": 0.0022668507535947976, "phrase": "simple_improved_algorithms"}, {"score": 0.0021479597698614355, "phrase": "trivially_perfect_graphs"}], "paper_keywords": ["Graph modification problems", " Edge deletion problems", " Chain graphs", " Trivially perfect graphs", " Modular decomposition", " Branching"], "paper_abstract": "Edge deletion problems ask for a minimum set of edges whose deletion makes a graph have a certain property. When this property can be characterized by a finite set of forbidden induced subgraphs, the problem can be solved in fixed-parameter time by a naive bounded search tree algorithm. Sometimes deleting an edge to break an erstwhile forbidden induced subgraph might introduce new ones, which may involve the neighbors of the original forbidden induced subgraph. Therefore, in considering possible ways to break a forbidden induced subgraph one naturally takes its neighborhood into consideration. This observation easily yields more efficient branching rules, but a naive implementation will require too many tedious case analyses. Here we take advantage of modular decomposition, which allows us to focus on far simpler quotient graphs instead of the original graphs. They together yield simple improved algorithms for the edge deletion problems to chain graphs and trivially perfect graphs. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Edge deletion problems: Branching facilitated by modular decomposition", "paper_id": "WOS:000350835500006"}