{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computational_grids."}, {"score": 0.004730158389701481, "phrase": "efficient_allocation"}, {"score": 0.00436661740263741, "phrase": "high_performance_grid-based_applications"}, {"score": 0.004139850082354509, "phrase": "computationally_hard_problem"}, {"score": 0.0035908627899097407, "phrase": "new_tabu_search"}, {"score": 0.0035276671264690843, "phrase": "ts"}, {"score": 0.003314591878914152, "phrase": "batch_job"}, {"score": 0.0032272929113113203, "phrase": "computational_grids"}, {"score": 0.003032405563826263, "phrase": "bi-objective_optimization_problem"}, {"score": 0.0024930878032164757, "phrase": "classical_benchmark"}, {"score": 0.002321665383971456, "phrase": "larger_size_instances"}, {"score": 0.0022806798371116698, "phrase": "static_and_dynamic_environments"}, {"score": 0.0021049977753042253, "phrase": "compared_algorithms"}], "paper_keywords": ["Job scheduling", " computational grid", " tabu search"], "paper_abstract": "The efficient allocation of jobs to grid resources is indispensable for high performance grid-based applications, and it is a computationally hard problem even when there are no dependencies among jobs. We present in this paper a new tabu search (TS) algorithm for the problem of batch job scheduling on computational grids. We define it as a bi-objective optimization problem, consisting of the minimization of the makespan and flowtime. Our TS is validated versus three other algorithims in the literature for a classical benchmark. We additionally consider some more realistic benchmarks with larger size instances in static and dynamic environments. We show that our TS clearly outperforms the compared algorithms.", "paper_title": "TABU SEARCH ALGORITHM FOR SCHEDULING INDEPENDENT JOBS IN COMPUTATIONAL GRIDS", "paper_id": "WOS:000265161900008"}