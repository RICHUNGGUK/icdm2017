{"auto_keywords": [{"score": 0.04941061878695795, "phrase": "parallel_coherence_streams"}, {"score": 0.03783388231449635, "phrase": "dsm_machines"}, {"score": 0.004815115673797796, "phrase": "integrated"}, {"score": 0.004664983066310498, "phrase": "scalable_hardware"}, {"score": 0.0045837372773681944, "phrase": "dsm"}, {"score": 0.004487989502479992, "phrase": "critical_and_dominant_role"}, {"score": 0.004456534664975427, "phrase": "protocol_processing_bandwidth"}, {"score": 0.004302522426263979, "phrase": "overall_performance"}, {"score": 0.004168448339217754, "phrase": "recent_architectural_trends"}, {"score": 0.004052768605308453, "phrase": "memory_controllers"}, {"score": 0.0040102178375662914, "phrase": "well-known_fact"}, {"score": 0.003885216927966404, "phrase": "memory_systems"}, {"score": 0.0037906837773782, "phrase": "parallel_coherence_processing_engines"}, {"score": 0.0035579889785989738, "phrase": "modern_processor_architectures"}, {"score": 0.0034228513102041182, "phrase": "useful_analytical_model"}, {"score": 0.0033749889869455407, "phrase": "designer_insight"}, {"score": 0.0032467792804296036, "phrase": "detailed_simulation"}, {"score": 0.0032013710938940424, "phrase": "parallel_applications"}, {"score": 0.0031677308747058187, "phrase": "single-node_multiprogrammed_workloads"}, {"score": 0.0030906010704382374, "phrase": "related_work"}, {"score": 0.0029627094945653427, "phrase": "second_coherence_engine"}, {"score": 0.002941913249957503, "phrase": "almost_no_impact"}, {"score": 0.0028702659563021047, "phrase": "less-tuned_applications"}, {"score": 0.0028301085867789076, "phrase": "hot_spots"}, {"score": 0.0026750045328382717, "phrase": "double_the_memory_bandwidth"}, {"score": 0.002609840513713399, "phrase": "additional_coherence_processing_stream"}, {"score": 0.0025462598594116373, "phrase": "special_class"}, {"score": 0.0025106241866273897, "phrase": "directoryless_broadcast_protocols"}, {"score": 0.0024929933447362554, "phrase": "unordered_interconnects"}, {"score": 0.0024408384127819734, "phrase": "processing_offer"}, {"score": 0.002398208426903865, "phrase": "communication-intensive_applications"}, {"score": 0.0023480317852018133, "phrase": "architectural_trends"}, {"score": 0.0023151639346874883, "phrase": "good_news"}, {"score": 0.002298902547676131, "phrase": "dsm_designers"}, {"score": 0.0022192891418394514, "phrase": "integrated_protocol_processor_cores"}, {"score": 0.0021959459702913654, "phrase": "internode_coherence"}, {"score": 0.0021049977753042253, "phrase": "cmp-based_scalable_dsm_machines"}], "paper_keywords": ["distributed shared memory multiprocessor", " directory protocol", " multiple coherence controllers", " coherence bandwidth", " integrated memory controller"], "paper_abstract": "Previous work in scalable hardware distributed shared memory (DSM) multiprocessors has established the critical and dominant role that protocol processing bandwidth (or its inverse, occupancy) plays in determining overall performance in architectures with standalone memory/coherence controllers. However, with recent architectural trends toward integrated (on-chip) memory controllers and the well-known fact that processor frequency is increasing more rapidly than memory systems', we must ask whether parallel coherence processing engines (either multiple integrated protocol processors/cores or multiple protocol threads) are needed in DSM machines constructed from modern processor architectures and, if so, when. We construct a useful analytical model to give the designer insight into when parallel coherence streams will improve performance and verify our model via detailed simulation on 64-threaded microbenchmarks and parallel applications and on single-node multiprogrammed workloads. Surprisingly, and contrary to related work, we find that, in these architectures, adding a second coherence engine has almost no impact on performance. Further, for less-tuned applications that suffer from hot spots (contentious requests to the same memory line), additional engines offer no benefit whatsoever. Even with double the memory bandwidth (or channels), an additional coherence processing stream yields only slight performance improvement. Only for a special class of DSM machines employing directoryless broadcast protocols over unordered interconnects does parallel \"snoop\" processing offer reasonable performance improvement for communication-intensive applications. Overall, given the architectural trends, this is good news for DSM designers who want to minimize the resources necessary (protocol threads or integrated protocol processor cores for maintaining internode coherence, respectively) to create SMTp-based or multi-CMP-based scalable DSM machines using directory protocols.", "paper_title": "Integrated memory controllers with parallel coherence streams", "paper_id": "WOS:000247541500012"}