{"auto_keywords": [{"score": 0.049717186064650004, "phrase": "regular_expressions"}, {"score": 0.04729562231425921, "phrase": "ieee"}, {"score": 0.044018801876362534, "phrase": "model_checking_procedure"}, {"score": 0.03965587529102389, "phrase": "automata_construction"}, {"score": 0.03570922764239182, "phrase": "regular_expression"}, {"score": 0.00481495049065317, "phrase": "finite_automata"}, {"score": 0.0046382670208947605, "phrase": "major_component"}, {"score": 0.004586531354697466, "phrase": "regular_expression_oriented_specification_languages"}, {"score": 0.004434745755769205, "phrase": "property_specification"}, {"score": 0.004177149334239669, "phrase": "regular_model_checking_expression_based_formulas"}, {"score": 0.004008749730113699, "phrase": "linear_translation"}, {"score": 0.0036792012355804063, "phrase": "embedding"}, {"score": 0.0033496045492129845, "phrase": "psl"}, {"score": 0.0033121909731471787, "phrase": "existing_sub-expression"}, {"score": 0.0032024424195797674, "phrase": "intermediate_representation"}, {"score": 0.002982511360424684, "phrase": "key_feature"}, {"score": 0.0029053368919259985, "phrase": "plug-in_automaton"}, {"score": 0.002391067964886602, "phrase": "seres"}, {"score": 0.002355497533358705, "phrase": "ctl."}, {"score": 0.002177218756653181, "phrase": "overall_run_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["regular expression", " finite automata", " model checking", " linear translation", " on-the-fly", " embedding", " PSL"], "paper_abstract": "Regular expressions and their extensions have become a major component of industry regular expression Oriented specification languages Such as IEEE PSL [IEEE Standard for Property Specification Finite automata Language (PSL). IEEE Std 1850(TM)-2005]. The model checking procedure of regular Model checking expression based formulas, involves Constructing an automaton which runs in parallel with Linear translation the model. On-the-fly In this paper we re-examine the automata construction. We propose an algorithm that Embedding allows an intermediate representation mixing both regular expressions and automata. This representation can be thought of as plugging an automaton inside a regular expression, to PSL replace an existing sub-expression. In order to be verified, the intermediate representation is then translated into another automaton, resulting in a set of automata running in parallel. A key feature of this algorithm is that the plug-in automaton is independent of the regular expression from which it originated, and thus can be used in several different properties. We demonstrate the usefulness of our method by providing a set of applications. We show how the use of our method allows modularity and flexibility of the automata construction, and can increase expressiveness when SERES are mixed with CTL. We give two applications for which it significantly reduces the size of the automata built for formulas, thus reducing the overall run time of the model checking procedure. (c) 2008 Elsevier B.V. All rights reserved.", "paper_title": "Embedding finite automata within regular expressions", "paper_id": "WOS:000259623500003"}