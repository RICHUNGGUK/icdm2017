{"auto_keywords": [{"score": 0.03999631936678691, "phrase": "mcc"}, {"score": 0.018301486667981273, "phrase": "short-circuit_evaluation"}, {"score": 0.010730471738362399, "phrase": "test_cases"}, {"score": 0.006759647292644553, "phrase": "safety-relevant_software"}, {"score": 0.0066958851080883685, "phrase": "programming_languages"}, {"score": 0.005021580867808392, "phrase": "automotive_domain"}, {"score": 0.004620825188916713, "phrase": "structural_code_coverage"}, {"score": 0.004434491600123024, "phrase": "efficient_coverage"}, {"score": 0.004337276328199398, "phrase": "testing_process"}, {"score": 0.004255639740735269, "phrase": "complex_boolean_expressions"}, {"score": 0.004188835501575092, "phrase": "iso"}, {"score": 0.004149166224411185, "phrase": "safety-relevant_automotive_systems"}, {"score": 0.0040969285074699, "phrase": "asil_d"}, {"score": 0.004058180509184539, "phrase": "highly_recommended_coverage_metric"}, {"score": 0.0038332390893263844, "phrase": "multiple_condition_coverage"}, {"score": 0.00373729411492695, "phrase": "quite_high_error-detection_probability"}, {"score": 0.0034666157459960307, "phrase": "test_set"}, {"score": 0.003355515315708125, "phrase": "non-short-circuit_environment"}, {"score": 0.0031195501386327047, "phrase": "case_study"}, {"score": 0.0027741761880779535, "phrase": "referring_boolean_expressions"}, {"score": 0.0026875632003075804, "phrase": "test_suite"}, {"score": 0.002578985917923144, "phrase": "maximum_overhead"}, {"score": 0.0024204262825429095, "phrase": "worst_case"}, {"score": 0.0022715929119140194, "phrase": "lower_error-detection_effectiveness"}, {"score": 0.0021936636821827935, "phrase": "strong_recommendation"}, {"score": 0.0021522871388240444, "phrase": "coverage_metric"}, {"score": 0.0021049977753042253, "phrase": "limited_number"}], "paper_keywords": ["Testing", " Safety-relevant systems", " Coverage", " MC/DC", " Error-detection rate"], "paper_abstract": "Modified condition/decision coverage (MC/DC) is a structural code coverage metric, originally defined in the standard DO-178B, intended to be an efficient coverage metric for the evaluation of the testing process of software incorporating decisions with complex Boolean expressions. The upcoming standard ISO 26262 for safety-relevant automotive systems prescribes MC/DC for ASIL D as a highly recommended coverage metric. One assumed benefit of MC/DC is that it requires a much smaller number of test cases in comparison to multiple condition coverage (MCC), while sustaining a quite high error-detection probability. Programming languages like C, commonly used for implementing software for the automotive domain, are using short-circuit evaluation. For short-circuit evaluation the number of test cases for MCC is much smaller than in a non-short-circuit environment because many redundant test cases occur. We evaluated the trade-off between the number of test cases for MCC and MC/DC for a case study from the automotive domain and observed a very low overhead (only 5 %) for the number of test cases necessary for MCC compared to MC/DC. This motivated an analysis of programs containing decisions where the number and structure of the referring Boolean expressions vary. Our results show that the overhead for a test suite for MCC is on the average only about 35 % compared to MC/DC and the maximum overhead is approximately 100 % (for decisions with up to 5 conditions). This means that a test set for MCC is in the worst case around twice as big as a test set for MC/DC for a program with short-circuit evaluation with maximum 5 conditions. Considering the lower error-detection effectiveness of MC/DC compared to MCC, we conclude with the strong recommendation to use MCC as a coverage metric for testing safety-relevant software (with a limited number of conditions) implemented in programming languages with short-circuit evaluation.", "paper_title": "Reasonability of MC/DC for safety-relevant software implemented in programming languages with short-circuit evaluation", "paper_id": "WOS:000350030700004"}