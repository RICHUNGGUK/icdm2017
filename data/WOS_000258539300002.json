{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "non-functional_aspects"}, {"score": 0.01204178731101342, "phrase": "soa"}, {"score": 0.009948623163440551, "phrase": "soa."}, {"score": 0.009822641880917467, "phrase": "proposed_mdd_framework"}, {"score": 0.004723322467153553, "phrase": "oriented_architecture"}, {"score": 0.004430248457624686, "phrase": "emerging_style"}, {"score": 0.0043738432231020885, "phrase": "software_architectures"}, {"score": 0.004235938758522453, "phrase": "existing_systems"}, {"score": 0.004155283263388382, "phrase": "new_applications"}, {"score": 0.003947601392882997, "phrase": "implementation_independent_manner"}, {"score": 0.003194736764837261, "phrase": "different_applications_development"}, {"score": 0.0024243586247372087, "phrase": "uml_model"}, {"score": 0.00236289633510808, "phrase": "proposed_profile"}, {"score": 0.0023327506323251074, "phrase": "application_code"}, {"score": 0.0023029886389559122, "phrase": "empirical_evaluation_results"}, {"score": 0.002145942273032774, "phrase": "service-oriented_applications"}, {"score": 0.0021049977753042253, "phrase": "low-level_implementation_technologies"}], "paper_keywords": ["distributed systems", " middleware", " modeling languages", " unified modeling language"], "paper_abstract": "Service oriented architecture (SOA) is an emerging style of software architectures to reuse and integrate existing systems for designing new applications. Each application is designed in an implementation independent manner using two major abstract concepts: services and connections between services. In SOA, non-functional aspects (e.g., security and fault tolerance) of services and connections should be described separately from their functional aspects (i.e., business logic) because different applications development (MDD) framework for non-functional aspects in SOA. The proposed MDD framework consists of (1) a Unified Modeling Language (UML) profile to model non-functional aspects in SOA, and (2) an MDD tool that transforms a UML model defined with the proposed profile to application code. Empirical evaluation results show that the proposed MDD framework improves the reusability and maintainability of service-oriented applications by hiding low-level implementation technologies in SOA.", "paper_title": "A model-driven development framework for non-functional aspects in service oriented architecture", "paper_id": "WOS:000258539300002"}