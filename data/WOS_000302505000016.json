{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "kleene_algebras"}, {"score": 0.004613516457919661, "phrase": "reflexive_tactic"}, {"score": 0.004483909657713567, "phrase": "equational_theory"}, {"score": 0.004326987090971404, "phrase": "coq_proof_assistant"}, {"score": 0.004116440453049531, "phrase": "careful_implementation"}, {"score": 0.004058180509184539, "phrase": "efficient_finite_automata_algorithms"}, {"score": 0.00388828234270598, "phrase": "casual_equations"}, {"score": 0.003725470458263889, "phrase": "larger_expressions"}, {"score": 0.003646629717560631, "phrase": "decision_procedure"}, {"score": 0.0032533888943254144, "phrase": "kozen's_initiality_theorem"}, {"score": 0.0029441472095672397, "phrase": "correctness_proof"}, {"score": 0.0027610089418453614, "phrase": "underlying_automata_algorithms"}, {"score": 0.002664221051021009, "phrase": "algebraic_reasoning"}, {"score": 0.0023936956017015696, "phrase": "kleene_algebra"}, {"score": 0.0022933216359142736, "phrase": "recent_addition"}, {"score": 0.0022608057001451414, "phrase": "first-class_typeclasses"}, {"score": 0.0022287856048588397, "phrase": "coq"}, {"score": 0.0021049977753042253, "phrase": "involved_algebraic_structures"}], "paper_keywords": ["Kleene algebra", " regular expressions", " decision procedure", " Coq proof assistant", " reflexive tactic", " finite automata", " typeclasses"], "paper_abstract": "We present a reflexive tactic for deciding the equational theory of Kleene algebras in the Coq proof assistant. This tactic relies on a careful implementation of efficient finite automata algorithms, so that it solves casual equations instantaneously and properly scales to larger expressions. The decision procedure is proved correct and complete: correctness is established w.r.t. any model by formalising Kozen's initiality theorem; a counter-example is returned when the given equation does not hold. The correctness proof is challenging: it involves both a precise analysis of the underlying automata algorithms and a lot of algebraic reasoning. In particular, we have to formalise the theory of matrices over a Kleene algebra. We build on the recent addition of first-class typeclasses in Coq in order to work efficiently with the involved algebraic structures.", "paper_title": "DECIDING KLEENE ALGEBRAS IN COQ", "paper_id": "WOS:000302505000016"}