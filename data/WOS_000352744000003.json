{"auto_keywords": [{"score": 0.049477536567807595, "phrase": "test_data"}, {"score": 0.00481495049065317, "phrase": "ant_colony_optimization"}, {"score": 0.0047145329604366395, "phrase": "software_structural_testing"}, {"score": 0.0046161999598320486, "phrase": "software_testing"}, {"score": 0.004500891637057374, "phrase": "effective_way"}, {"score": 0.004444317282171449, "phrase": "software_quality"}, {"score": 0.0042250123967577284, "phrase": "significant_impact"}, {"score": 0.004171891198117439, "phrase": "fault-revealing_ability"}, {"score": 0.00413684709497912, "phrase": "software_testing_activity"}, {"score": 0.004067635935640407, "phrase": "search-based_test_data_generation"}, {"score": 0.003965975628742746, "phrase": "operational_approach"}, {"score": 0.0037861265016041813, "phrase": "basic_aco_algorithm"}, {"score": 0.003722761107761564, "phrase": "discrete_version"}, {"score": 0.0036144035798673967, "phrase": "structural_testing"}, {"score": 0.0035389348527719404, "phrase": "technical_roadmap"}, {"score": 0.003479692058963528, "phrase": "adapted_aco_algorithm"}, {"score": 0.0034504423179340738, "phrase": "test_process"}, {"score": 0.0033218213825698417, "phrase": "algorithm's_searching_ability"}, {"score": 0.0031979796189858206, "phrase": "local_transfer"}, {"score": 0.0031710903727066313, "phrase": "global_transfer"}, {"score": 0.003144426503333397, "phrase": "pheromone_update"}, {"score": 0.003027178161479457, "phrase": "program_elements"}, {"score": 0.0029890721584351684, "phrase": "special_optimization_objective"}, {"score": 0.002939007076062123, "phrase": "customized_fitness_function"}, {"score": 0.0028293966058473476, "phrase": "nesting_level"}, {"score": 0.002805597755796506, "phrase": "predicate_type"}, {"score": 0.0025674490885184173, "phrase": "comparative_analysis"}, {"score": 0.002535115422089855, "phrase": "experimental_results"}, {"score": 0.002471661547432869, "phrase": "existing_simulated_annealing"}, {"score": 0.002450864311898833, "phrase": "genetic_algorithm"}, {"score": 0.00231987280116332, "phrase": "particle_swarm_optimization-based_method"}, {"score": 0.002261794227418188, "phrase": "sensitivity_analysis"}, {"score": 0.002242758902593467, "phrase": "algorithm_parameters"}, {"score": 0.0021773853011112882, "phrase": "reasonable_parameter_settings"}, {"score": 0.0021590588269751816, "phrase": "practical_applications"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Test data generation", " Meta-heuristic search", " Ant colony optimization", " Branch coverage", " Fitness function", " Experimental evaluation"], "paper_abstract": "In general, software testing has been viewed as an effective way to improve software quality and reliability. However, the quality of test data has a significant impact on the fault-revealing ability of software testing activity. Recently, search-based test data generation has been treated as an operational approach to settle this difficulty. In the paper, the basic ACO algorithm is reformed into discrete version so as to generate test data for structural testing. First, the technical roadmap of combining the adapted ACO algorithm and test process together is introduced. In order to improve algorithm's searching ability and generate more diverse test inputs, some strategies such as local transfer, global transfer and pheromone update are defined and applied. The coverage for program elements is a special optimization objective, so the customized fitness function is constructed in our approach through comprehensively considering the nesting level and predicate type of branch. To validate the effectiveness of our ACO-based test data generation method, eight well-known programs are utilized to perform the comparative analysis. The experimental results show that our approach outperforms the existing simulated annealing and genetic algorithm in the quality of test data and stability, and is comparable to particle swarm optimization-based method. In addition, the sensitivity analysis on algorithm parameters is also employed to recommend the reasonable parameter settings for practical applications. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Adapting ant colony optimization to generate test data for software structural testing", "paper_id": "WOS:000352744000003"}