{"auto_keywords": [{"score": 0.04259530349179942, "phrase": "primary_work"}, {"score": 0.00481495049065317, "phrase": "optimal_buffer_allocation"}, {"score": 0.004771196027464407, "phrase": "remanufacturing_systems"}, {"score": 0.004579147045265106, "phrase": "nobap"}, {"score": 0.004455409162867219, "phrase": "cellular_remanufacturing_system"}, {"score": 0.004414907432703781, "phrase": "finite_buffers"}, {"score": 0.004256533389293113, "phrase": "term_n-policy"}, {"score": 0.003974673997871831, "phrase": "external_workload"}, {"score": 0.003832031470970347, "phrase": "additional_tasks"}, {"score": 0.0037798652680135106, "phrase": "preventive_maintenance"}, {"score": 0.003465521267039616, "phrase": "queue_size"}, {"score": 0.0033410898465226417, "phrase": "threshold_value"}, {"score": 0.0032064196784562017, "phrase": "remanufacturing_system"}, {"score": 0.0030076088903023034, "phrase": "returned_products"}, {"score": 0.0027073229284666294, "phrase": "open_queueing_network"}, {"score": 0.002682669289913153, "phrase": "decomposition_principle"}, {"score": 0.0026582395558737855, "phrase": "expansion_methodology"}, {"score": 0.0026220103561723066, "phrase": "buffer_allocation_algorithm"}, {"score": 0.0025627194819793347, "phrase": "available_buffer_slots"}, {"score": 0.002527788827701828, "phrase": "remanufacturing_system_stations"}, {"score": 0.0024819522818492284, "phrase": "system's_performance"}, {"score": 0.002349357968054711, "phrase": "experimental_conditions"}, {"score": 0.002234031373581961, "phrase": "algorithm's_performance"}, {"score": 0.002163600705898299, "phrase": "excellent_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Buffer allocation", " N-policy", " Performance evaluation", " Queueing networks", " Remanufacturing", " Throughput"], "paper_abstract": "We introduce a near optimal buffer allocation plan (NOBAP) specifically developed for a cellular remanufacturing system with finite buffers where the servers follow N-policy. The term N-policy is used for the situation where the server leaves primary work to tend to an external workload assigned to him (such as processing additional tasks or performing preventive maintenance of equipments) every time the server becomes idle and does not return back to his primary work until the queue size in front of the primary work reaches a threshold value of N (>= 1). The remanufacturing system considered here consists of three modules, viz., the disassembly module for returned products, the testing module and the remanufacturing module. In order to analyze the system we propose an algorithm that uses an open queueing network, decomposition principle and expansion methodology. The buffer allocation algorithm distributes a given number of available buffer slots among the remanufacturing system stations to optimize the system's performance. The algorithm has been rigorously tested using a variety of experimental conditions. From the results, it is clear that the algorithm's performance is robust, consistent and produces excellent results. (C) 2010 Elsevier Ltd. All rights reserved.", "paper_title": "Near optimal buffer allocation in remanufacturing systems with N-policy", "paper_id": "WOS:000284747000003"}