{"auto_keywords": [{"score": 0.049348918639928865, "phrase": "atpg"}, {"score": 0.008972542700201383, "phrase": "basic_model"}, {"score": 0.00883624780478567, "phrase": "known_techniques"}, {"score": 0.00481495049065317, "phrase": "two-variable_model"}, {"score": 0.004778088905211055, "phrase": "sat-based_atpg._automatic_test_pattern_generation"}, {"score": 0.004633429997452688, "phrase": "first_applications"}, {"score": 0.004527804152066942, "phrase": "modern_boolean_satisfiability"}, {"score": 0.00427410962921379, "phrase": "current_state-of-the-art_sat_solvers"}, {"score": 0.004160612392068268, "phrase": "np-hard_problem"}, {"score": 0.004112894218792621, "phrase": "large_complex_industrial_circuits"}, {"score": 0.003912335018240945, "phrase": "recent_work"}, {"score": 0.003882356585452982, "phrase": "sat-based_atpg"}, {"score": 0.003808407814695708, "phrase": "industrial_designs"}, {"score": 0.0037792227071149985, "phrase": "ever_increasing_size"}, {"score": 0.003636605792981828, "phrase": "atpg_models"}, {"score": 0.003265175268104804, "phrase": "core_sat-based_atpg_model"}, {"score": 0.0030583717270715556, "phrase": "alternative_model"}, {"score": 0.003034916887102753, "phrase": "sat-based_atpg."}, {"score": 0.0029428772818833166, "phrase": "previous_sat-based_atpg_models"}, {"score": 0.002875678729214611, "phrase": "used_variables"}, {"score": 0.0025917270871556475, "phrase": "new_model"}, {"score": 0.0024181413029825205, "phrase": "unbiased_evaluation"}, {"score": 0.00236289633510808, "phrase": "previous_models"}, {"score": 0.00230003335593664, "phrase": "proposed_models"}, {"score": 0.002282380944889266, "phrase": "experimental_results"}, {"score": 0.0022388390432214415, "phrase": "wide_range"}, {"score": 0.002221655243524476, "phrase": "publicly_available_benchmarks"}, {"score": 0.002121281184742656, "phrase": "significant_performance_improvements"}], "paper_keywords": ["Automatic test pattern generation (ATPG)", " Boolean circuit", " Boolean satisfiability (SAT)", " circuit verification", " EDA", " fault propagation"], "paper_abstract": "Automatic test pattern generation (ATPG) is one of the first applications that motivated the development of modern Boolean satisfiability (SAT). It is now widely accepted that ATPG is easy for current state-of-the-art SAT solvers. Nevertheless, as with any NP-hard problem, for large complex industrial circuits, some faults may be difficult to detect or prove undetectable. Recent work on SAT-based ATPG has been motivated by industrial designs with ever increasing size, for which more efficient ATPG models are essential. Moreover, ATPG models and algorithms find applications in a number of other settings, which further motivate the development of more efficient SAT-based ATPG solutions. Interestingly, despite the interest in more efficient ATPG approaches, the core SAT-based ATPG model has remained essentially unchanged since it was first proposed in the 1980s. This paper describes an alternative model for SAT-based ATPG. The proposed model is fundamentally different from previous SAT-based ATPG models in that the number of used variables is significantly reduced. This paper proposes extensions and optimizations to the basic model, and integrates known techniques for further improving performance. This paper extends the new model, proposes optimizations to it, and integrates known techniques for further improving performance. To achieve an unbiased evaluation, this paper also reimplements previous models and comprehensively compares them with the proposed models. Experimental results, obtained on a wide range of publicly available benchmarks for ATPG, demonstrate that the basic model and extended models allow significant performance improvements over other well-established models.", "paper_title": "A Two-Variable Model for SAT-Based ATPG", "paper_id": "WOS:000327605700010"}