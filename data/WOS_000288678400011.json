{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "qemu"}, {"score": 0.03737058153332984, "phrase": "ca_level"}, {"score": 0.01234114087616864, "phrase": "full-fledged_operating_system"}, {"score": 0.009710676691841455, "phrase": "xilinx"}, {"score": 0.009566065347002113, "phrase": "proposed_ca-iss"}, {"score": 0.004786002454145624, "phrase": "systemc-based_cycle-accurate"}, {"score": 0.004700193486903964, "phrase": "soc_development"}, {"score": 0.004574342831225094, "phrase": "fast_cycle-accurate_instruction_set_simulator"}, {"score": 0.004547445968810749, "phrase": "ca"}, {"score": 0.004425072111844721, "phrase": "chip_development"}, {"score": 0.004128449719260139, "phrase": "different_requirements"}, {"score": 0.004091248980678087, "phrase": "software_designer"}, {"score": 0.004054382086746149, "phrase": "hardware_designer"}, {"score": 0.004017846065981189, "phrase": "even_the_system_architect"}, {"score": 0.0038749521906474593, "phrase": "hardware_models"}, {"score": 0.00384002686613679, "phrase": "register-transfer_level"}, {"score": 0.0036260025955385526, "phrase": "systemc"}, {"score": 0.003496994062890991, "phrase": "conventional_rtl_simulation"}, {"score": 0.003080449000295983, "phrase": "full-fledged_linux_kernel"}, {"score": 0.0030342774028555377, "phrase": "personal_computer"}, {"score": 0.0029887957779347394, "phrase": "kernel_boot_time"}, {"score": 0.002943994095596326, "phrase": "sicortex"}, {"score": 0.0027298319171606498, "phrase": "systemc_models"}, {"score": 0.002656598121865532, "phrase": "main_contributions"}, {"score": 0.002561992219031343, "phrase": "full-fledged_os"}, {"score": 0.0025388705701873075, "phrase": "early_stage"}, {"score": 0.0025159570648844555, "phrase": "electronic_system_level_design_flow"}, {"score": 0.0024932498388507084, "phrase": "acceptable_simulation_speed"}, {"score": 0.0024410581599518784, "phrase": "virtual_platform"}, {"score": 0.002389956401870098, "phrase": "processor_model"}, {"score": 0.002318799760022913, "phrase": "target_system"}, {"score": 0.002304824112812496, "phrase": "system_perspective"}, {"score": 0.002256567862969091, "phrase": "qemu-systemc"}, {"score": 0.002169607777109063, "phrase": "modeling_capability"}, {"score": 0.002150019713922273, "phrase": "transaction_level"}], "paper_keywords": ["Cycle-accurate simulation", " hardware/software co-simulation", " ISS", " QEMU", " SoC", " SystemC"], "paper_abstract": "In this paper, we present a fast cycle-accurate instruction set simulator (CA-ISS) for system-on-chip development based on QEMU and SystemC. Even though most state-of-the-art commercial tools have tried very hard to provide all the levels of details to satisfy the different requirements of the software designer, the hardware designer, and even the system architect, the hardware/software co-simulation speed is dramatically slow when co-simulating the hardware models at the register-transfer level (RTL) with a full-fledged operating system (OS). Our experimental results show that the combination of QEMU and SystemC can make the co-simulation at the CA level much faster than the conventional RTL simulation, even with a full-fledged operating system up and running. Furthermore, the statistics indicate that with every instruction executed and every memory accessed since power-on traced at the CA level, it takes 28m15.804s on average to boot up a full-fledged Linux kernel, even on a personal computer. Compared to the kernel boot time reported by Xilinx and SiCortex, the proposed CA-ISS is about 6.09 times faster compared to \"SystemC without trace\" of Xilinx and about 30.32 times faster compared to \"SystemC models converted from RTL\" of SiCortex. The main contributions of this paper are threefold: 1) a hardware/software co-simulation environment capable of running a full-fledged OS at the early stage of the electronic system level design flow at an acceptable simulation speed is proposed; 2) a virtual platform constructed using the proposed CA-ISS as the processor model can be used to estimate the performance of a target system from system perspective, which all the previous works, such as QEMU-SystemC, do not provide; and 3) such a virtual platform also provides the modeling capability from the transaction level down to the CA level or the other way around.", "paper_title": "A QEMU and SystemC-Based Cycle-Accurate ISS for Performance Estimation on SoC Development", "paper_id": "WOS:000288678400011"}