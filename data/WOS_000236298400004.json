{"auto_keywords": [{"score": 0.045193980089541785, "phrase": "optimal_semi-matching_problem"}, {"score": 0.0146460076092037, "phrase": "right-hand_vertices"}, {"score": 0.010312491257447496, "phrase": "known_solutions"}, {"score": 0.008804281583571267, "phrase": "maximum_bipartite_matchings"}, {"score": 0.00481495049065317, "phrase": "bipartite_graphs"}, {"score": 0.004776853267973129, "phrase": "load_balancing"}, {"score": 0.004590820632326585, "phrase": "left-hand_vertices"}, {"score": 0.00453643016617164, "phrase": "bipartite_graph"}, {"score": 0.004189863767755212, "phrase": "known_bipartite_matching_problem"}, {"score": 0.003517458289610994, "phrase": "job_assignment_system"}, {"score": 0.00347574024760684, "phrase": "optimal_semi-matching"}, {"score": 0.0034345152879289025, "phrase": "minimal_makespan"}, {"score": 0.0033937776228549557, "phrase": "minimal_flow_time"}, {"score": 0.0032744315183287024, "phrase": "optimal_semi"}, {"score": 0.0032099453192629976, "phrase": "special_case"}, {"score": 0.0030239842475439814, "phrase": "general_network_optimization_algorithms"}, {"score": 0.0028601252251285025, "phrase": "optimal_semi-matchings"}, {"score": 0.0027485326424697095, "phrase": "first_algorithm"}, {"score": 0.0027159094186967247, "phrase": "hungarian_method"}, {"score": 0.0025687008721685454, "phrase": "new_notion"}, {"score": 0.002548331088496964, "phrase": "cost-reducing_paths"}, {"score": 0.002488183412451029, "phrase": "second_algorithm"}, {"score": 0.002429451930463481, "phrase": "known_network_optimization_algorithms"}, {"score": 0.002181813794658713, "phrase": "best_known_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["bipartite graphs", " load balancing", " matching algorithms", " optimal algorithms", " semi-matching"], "paper_abstract": "We consider the problem of fairly matching the left-hand vertices of a bipartite graph to the right-hand vertices. We refer to this problem as the optimal semi-matching problem; it is a relaxation of the known bipartite matching problem. We present a way to evaluate the quality of a given semi-matching and show that, under this measure, an optimal semi-matching balances the load on the right-hand vertices with respect to any L-p-norm. In particular, when modeling a job assignment system, an optimal semi-matching achieves the minimal makespan and the minimal flow time for the system. The problem of finding optimal semi-matchings is a special case of certain scheduling problems for which known solutions exist. However, these known solutions are based on general network optimization algorithms, and are not the most efficient way to solve the optimal semi-matching problem. To compute optimal semi-matchings efficiently, we present and analyze two new algorithms. The first algorithm generalizes the Hungarian method for computing maximum bipartite matchings, while the second, more efficient algorithm is based on a new notion of cost-reducing paths. Our experimental results demonstrate that the second algorithm is vastly superior to using known network optimization algorithms to solve the optimal semi-matching problem. Furthermore, this same algorithm can also be used to find maximum bipartite matchings and is shown to be roughly as efficient as the best known algorithms for this goal. (C) 2005 Elsevier Inc. All rights reserved.", "paper_title": "Semi-matchings for bipartite graphs and load balancing", "paper_id": "WOS:000236298400004"}