{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "crosscutting_concerns"}, {"score": 0.00471003041684707, "phrase": "embedded_software"}, {"score": 0.004408729661992651, "phrase": "stringent_qos_requirements"}, {"score": 0.0038624981944755813, "phrase": "modeling_level"}, {"score": 0.003757480190200645, "phrase": "validation_purposes"}, {"score": 0.0036958398682001015, "phrase": "proposed_approach"}, {"score": 0.0032021226849872054, "phrase": "composition_semantics"}, {"score": 0.003132236287543072, "phrase": "core_models"}, {"score": 0.0029641011108505785, "phrase": "model_weaver"}, {"score": 0.002931569771634119, "phrase": "sdl_statecharts"}, {"score": 0.002883439044844259, "phrase": "motorola_labs"}, {"score": 0.002851790448644913, "phrase": "crosscutting_behavior"}, {"score": 0.002789528662623221, "phrase": "plain_sdl_statecharts"}, {"score": 0.0025820967615278073, "phrase": "aspect_beans"}, {"score": 0.002539689093411356, "phrase": "core_sdl_statecharts"}, {"score": 0.0024299678474208023, "phrase": "lightweight_extensions"}, {"score": 0.0023900580545933893, "phrase": "sdl"}, {"score": 0.0023638323773435945, "phrase": "uml"}, {"score": 0.002312174113289583, "phrase": "connector_metamodel"}, {"score": 0.0022368274529152342, "phrase": "aspect-to-core_binding_definition"}, {"score": 0.002163930783583212, "phrase": "behavioral_metamodel"}, {"score": 0.0021401625519713577, "phrase": "composition_primitives"}, {"score": 0.0021049977753042253, "phrase": "weaving_strategies"}], "paper_keywords": [""], "paper_abstract": "Crosscutting concerns are pervasive in embedded software, because of the various constraints imposed by the environment and the stringent QoS requirements on the system. This paper presents a framework for modularizing crosscutting concerns in embedded and distributed software, and automating their composition at the modeling level, for simulation and validation purposes. The proposed approach does not extend the semantics of the UML in order to represent aspects. Rather, it dedicates a metamodel to the representation of the composition semantics between aspects and core models. The paper illustrates this approach by presenting a model weaver for SDL statecharts developed at Motorola Labs. Crosscutting behavior is designed with plain SDL statecharts and encapsulated into modules called aspect beans. The weaver looks at the aspect beans and the core SDL statecharts from a perspective that is defined by lightweight extensions to the SDL and UML metamodels. A connector metamodel defines the structure of the aspect-to-core binding definition. Finally, a weaver behavioral metamodel defines composition primitives for specifying weaving strategies.", "paper_title": "Modeling aspect-oriented compositions", "paper_id": "WOS:000235807000011"}