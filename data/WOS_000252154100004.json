{"auto_keywords": [{"score": 0.04931727328027492, "phrase": "predicate_abstraction"}, {"score": 0.03824046507309785, "phrase": "first-order_state_variables"}, {"score": 0.00481495049065317, "phrase": "indexed_predicates"}, {"score": 0.0046256566852302256, "phrase": "powerful_tool"}, {"score": 0.00444377150105556, "phrase": "infinite-state_systems"}, {"score": 0.004234884779773412, "phrase": "decision_procedure"}, {"score": 0.004068302313449334, "phrase": "first-order_logic"}, {"score": 0.003845994935767022, "phrase": "finite-state_model"}, {"score": 0.0035208552733545463, "phrase": "system_state"}, {"score": 0.0034647524666821614, "phrase": "mutable_functions"}, {"score": 0.0032231139180761183, "phrase": "arbitrarily_large_memories"}, {"score": 0.0030468495296763617, "phrase": "identical_processes"}, {"score": 0.0026792166577171476, "phrase": "universally_quantified_variables"}, {"score": 0.002615381301695394, "phrase": "invariant_properties"}, {"score": 0.0024524733595572084, "phrase": "formal_justification"}, {"score": 0.0021049977753042253, "phrase": "directory-based_cache_coherence_protocol"}], "paper_keywords": ["formal verification", " invariant synthesis", " infinite-state verification", " abstract interpretation", " cache-coherence protocols", " predicate abstraction"], "paper_abstract": "Predicate abstraction provides a powerful tool for verifying properties of infinite-state systems using a combination of a decision procedure for a subset of first-order logic and symbolic methods originally developed for finite-state model checking. We consider models containing first-order state variables, where the system state includes mutable functions and predicates. Such a model can describe systems containing arbitrarily large memories, buffers, and arrays of identical processes. We describe a form of predicate abstraction that constructs a formula over a set of universally quantified variables to describe invariant properties of the first-order state variables. We provide a formal justification of the soundness of our approach and describe how it has been used to verify several hardware and software designs, including a directory-based cache coherence protocol.", "paper_title": "Predicate abstraction with indexed predicates", "paper_id": "WOS:000252154100004"}