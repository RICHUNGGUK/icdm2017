{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "nested_loops"}, {"score": 0.004762550320451225, "phrase": "reconfigurable_array_processors"}, {"score": 0.00471071771178029, "phrase": "pipelining_algorithms"}, {"score": 0.004363277689798392, "phrase": "pipeline_setup_time"}, {"score": 0.004085856939524333, "phrase": "kernel_time"}, {"score": 0.003975515793563275, "phrase": "coarse-grained_reconfigurable_architectures"}, {"score": 0.0037636590459094762, "phrase": "main_processor"}, {"score": 0.0037226570791514184, "phrase": "pipeline_setup"}, {"score": 0.0035630518377071916, "phrase": "communication_delay"}, {"score": 0.0032819448594643853, "phrase": "outer_loop"}, {"score": 0.003228434077467506, "phrase": "loop_nest"}, {"score": 0.002877438939246423, "phrase": "novel_architecture-compiler_cooperative_scheme"}, {"score": 0.0026942333853202556, "phrase": "extra_configurations"}, {"score": 0.002564505790176378, "phrase": "scientific_domains"}, {"score": 0.002349073225500705, "phrase": "conventional_approach"}, {"score": 0.0021049977753042253, "phrase": "recent_reconfigurable_architectures"}], "paper_keywords": ["Design", " Algorithms", " Performance", " Coarse-grained reconfigurable architecture", " compilation", " nested loop", " software pipelining"], "paper_abstract": "Pipelining algorithms are typically concerned with improving only the steady-state performance, or the kernel time. The pipeline setup time happens only once and therefore can be negligible compared to the kernel time. However, for Coarse-Grained Reconfigurable Architectures (CGRAs) used as a coprocessor to a main processor, pipeline setup can take much longer due to the communication delay between the two processors, and can become significant if it is repeated in an outer loop of a loop nest. In this paper we evaluate the overhead of such non-kernel execution times when mapping nested loops for CGRAs, and propose a novel architecture-compiler cooperative scheme to reduce the overhead, while also minimizing the number of extra configurations required. Our experimental results using loops from multimedia and scientific domains demonstrate that our proposed techniques can greatly increase the performance of nested loops by up to 2.87 times compared to the conventional approach of accelerating only the innermost loops. Moreover, the mappings generated by our techniques require only a modest number of configurations that can fit in recent reconfigurable architectures.", "paper_title": "Improving Performance of Nested Loops on Reconfigurable Array Processors", "paper_id": "WOS:000299995000015"}