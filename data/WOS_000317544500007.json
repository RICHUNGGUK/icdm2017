{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "fine-grained_reuse"}, {"score": 0.032381893275175655, "phrase": "traitrecordj"}, {"score": 0.004671932143798307, "phrase": "object-oriented_paradigm"}, {"score": 0.004116012194714212, "phrase": "language_traitrecordj"}, {"score": 0.003714629047818465, "phrase": "explicit_linguistic_operations"}, {"score": 0.0036479584876742085, "phrase": "code_manipulations"}, {"score": 0.0035824802350703376, "phrase": "fine-grained_code_reuse"}, {"score": 0.0030991131563500446, "phrase": "prototypical_implementation"}, {"score": 0.0030251262102203385, "phrase": "xtext"}, {"score": 0.0028650312174624635, "phrase": "programming_languages"}, {"score": 0.0026970382454914437, "phrase": "eclipse-based_editor"}, {"score": 0.0026326249204932733, "phrase": "typical_ide_functionalities"}, {"score": 0.0025697460140513932, "phrase": "stand-alone_compiler"}, {"score": 0.002508365161206412, "phrase": "traitrecordj_programs"}, {"score": 0.002478225374613311, "phrase": "standard_java_programs"}, {"score": 0.002419025278429845, "phrase": "case_study"}, {"score": 0.0023470051993423483, "phrase": "traitrecordj_implementation"}, {"score": 0.002209319719984651, "phrase": "web-based_information_system"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Java", " Trait", " Type system", " Implementation", " Eclipse"], "paper_abstract": "Traits have been designed as units for fine-grained reuse of behavior in the object-oriented paradigm. Records have been devised to complement traits for fine-grained reuse of state. In this paper, we present the language TRAITRECORDJ, a JAVA dialect with records and traits. Records and traits can be composed by explicit linguistic operations, allowing code manipulations to achieve fine-grained code reuse. Classes are assembled from (composite) records and traits and instantiated to generate objects. We introduce the language through examples and illustrate the prototypical implementation of TRAITRECORDJ using XTEXT, an Eclipse framework for the development of programming languages as well as other domain-specific languages. Our implementation comprises an Eclipse-based editor for TRAITRECORDJ with typical IDE functionalities, and a stand-alone compiler, which translates TRAITRECORDJ programs into standard JAVA programs. As a case study, we present the TRAITRECORDJ implementation of a part of the software used in a web-based information system previously implemented in JAVA. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "TRAITRECORDJ: A programming language with traits and records", "paper_id": "WOS:000317544500007"}