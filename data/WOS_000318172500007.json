{"auto_keywords": [{"score": 0.04638331353283263, "phrase": "nonuniform_segmentation"}, {"score": 0.03614116779524004, "phrase": "design_tradeoff"}, {"score": 0.00481495049065317, "phrase": "hardware_function_evaluators"}, {"score": 0.0047559432344272, "phrase": "low-overhead_nonuniform_segmentation"}, {"score": 0.004555028829645471, "phrase": "piecewise_function_evaluation"}, {"score": 0.0044991925146184025, "phrase": "polynomial_approximation"}, {"score": 0.004256243266481051, "phrase": "lookup_tables"}, {"score": 0.004178198896815672, "phrase": "arithmetic_functions"}, {"score": 0.004101579688745222, "phrase": "uniform_segmentation_approaches"}, {"score": 0.0039281997063335735, "phrase": "extra_segment_address"}, {"score": 0.003693103542455806, "phrase": "delay_overhead"}, {"score": 0.0033664873319204027, "phrase": "rom_size"}, {"score": 0.0033047037762521984, "phrase": "area_cost"}, {"score": 0.003244050414264445, "phrase": "subsequent_arithmetic_computation_hardware"}, {"score": 0.0030686679245324837, "phrase": "new_nonuniform_segmentation_method"}, {"score": 0.0029753513692467315, "phrase": "optimal_segmentation_scheme"}, {"score": 0.0028848643090508205, "phrase": "minimized_rom"}, {"score": 0.0027120400060701056, "phrase": "high-variation_arithmetic_functions"}, {"score": 0.0026622351303038885, "phrase": "proposed_segmentation_method"}, {"score": 0.002629539710839523, "phrase": "significant_area_reduction"}, {"score": 0.002565345470805401, "phrase": "uniform_segmentation_method"}, {"score": 0.0024416087858984644, "phrase": "uniform_and_nonuniform_segmentation"}, {"score": 0.0021049977753042253, "phrase": "elementary_function"}], "paper_keywords": ["Computer arithmetic", " function evaluation", " nonuniform segmentation", " piecewise polynomial approximation"], "paper_abstract": "In the piecewise function evaluation with polynomial approximation, nonuniform segmentation can effectively reduce the size of lookup tables for some arithmetic functions compared to uniform segmentation approaches, at the cost of the extra segment address (index) encoder that results in area and delay overhead. Also, it is observed that the nonuniform segmentation reflects a design tradeoff between the ROM size and the area cost of the subsequent arithmetic computation hardware. In this paper, we propose a new nonuniform segmentation method that searches for the optimal segmentation scheme with the goal of minimized ROM, total area, or delay. For some high-variation arithmetic functions, the proposed segmentation method achieves significant area reduction compared to the uniform segmentation method. We also demonstrate the design tradeoff among uniform and nonuniform segmentation, and degree-one and degree-two polynomial approximations, with respect to precision ranging from 12 to 32 bits for the elementary function of reciprocal.", "paper_title": "Design of Hardware Function Evaluators Using Low-Overhead Nonuniform Segmentation With Address Remapping", "paper_id": "WOS:000318172500007"}