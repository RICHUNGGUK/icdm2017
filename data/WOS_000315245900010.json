{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "trivium"}, {"score": 0.02308395893632186, "phrase": "fault_analysis"}, {"score": 0.009419911312132725, "phrase": "register_bits"}, {"score": 0.00927322811636578, "phrase": "soft_fault_analysis"}, {"score": 0.007512899261598287, "phrase": "five_cases"}, {"score": 0.005803899371504861, "phrase": "non-negligible_probability"}, {"score": 0.005677314083775632, "phrase": "simplified_cipher"}, {"score": 0.004665483918844599, "phrase": "potential_power"}, {"score": 0.004578030096508602, "phrase": "major_efforts"}, {"score": 0.0044079880067019765, "phrase": "soft_faults"}, {"score": 0.0041515244239033145, "phrase": "hardware-oriented_stream_cipher"}, {"score": 0.0038124354878360032, "phrase": "hard_faults"}, {"score": 0.0036018503805251424, "phrase": "hard_fault_analysis"}, {"score": 0.003467940281748612, "phrase": "faults_positions"}, {"score": 0.0034461093496505127, "phrase": "seven_cases"}, {"score": 0.0028065024340850615, "phrase": "third_case"}, {"score": 0.00264296841319955, "phrase": "fourth_case"}, {"score": 0.002544616720630384, "phrase": "smaller_number"}, {"score": 0.0025285834281312705, "phrase": "state_bits"}, {"score": 0.002512650904797186, "phrase": "slower_non-linearization_procedure"}, {"score": 0.002481085648977413, "phrase": "fifth_case"}, {"score": 0.0023887436047824386, "phrase": "attacker's_computations"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Side-channel analysis", " Fault analysis", " Stream cipher", " Trivium"], "paper_abstract": "Fault analysis is an attack on stream ciphers with potential power. Up until now, major efforts on fault analysis have been to simplify the cipher by injecting some soft faults, that is, momentarily changing values of some register bits. We call this soft fault analysis. As a hardware-oriented stream cipher, Trivium is weak under soft fault analysis. In this paper we consider another type of fault analysis. It is to simplify the cipher by injecting some hard faults, that is, permanently setting values of some register bits to be zero. We call this hard fault analysis, and use it to analyze Trivium. We classify the faults positions into seven cases, and in five cases the cipher can be broken or be efficiently simplified. We present the following results about such attack on Trivium. In one case with the probability not smaller than 0.2396, the attacker can obtain 69 bits of the 80-bit key. In another case with the probability not smaller than 0.2292, the attacker can recover the full key. In the third case with the probability not smaller than 0.2292, the attacker can partially solve the key. In the fourth case with non-negligible probability, the attacker can obtain a simplified cipher, with smaller number of state bits and slower non-linearization procedure. In the fifth case with non-negligible probability, the attacker can obtain another simplified cipher. The attacker's computations are simple and immediate, and the cipher can be broken or be efficiently simplified with the probability not smaller than 0.698. Besides, these five cases can be distinguished by observing the keystream. (C) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Hard fault analysis of Trivium", "paper_id": "WOS:000315245900010"}