{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "bayesian"}, {"score": 0.04967963143788521, "phrase": "linear_approach"}, {"score": 0.004630055463858585, "phrase": "large_software_projects"}, {"score": 0.004434824354230475, "phrase": "different_phases"}, {"score": 0.0041981583430961734, "phrase": "involved_developers"}, {"score": 0.004068611852912931, "phrase": "traceability_information"}, {"score": 0.003776674472150248, "phrase": "relevant_traceability_links"}, {"score": 0.0036315039559860654, "phrase": "automated_tool-based_collection"}, {"score": 0.003561017335579207, "phrase": "tempting_alternative"}, {"score": 0.0027814417101979317, "phrase": "development_tool"}, {"score": 0.0026954938318408464, "phrase": "preliminary_study"}, {"score": 0.0023588019302482367, "phrase": "traceability_insights"}, {"score": 0.0021892798077661956, "phrase": "key_lessons"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Requirements traceability", " Maintenance", " Collaborative work"], "paper_abstract": "Context: For large software projects it is important to have some traceability between artefacts from different phases (e.g.requirements, designs, code), and between artefacts and the involved developers. However, if the capturing of traceability information during the project is felt as laborious to developers, they will often be sloppy in registering the relevant traceability links so that the information is incomplete. This makes automated tool-based collection of traceability links a tempting alternative, but this has the opposite challenge of generating too many potential trace relationships, not all of which are equally relevant. Objective: This paper evaluates how to rank such auto-generated trace relationships. Method: We present two approaches for such a ranking: a Bayesian technique and a linear inference technique. Both techniques depend on the interaction event trails left behind by collaborating developers while working within a development tool. Results: The outcome of a preliminary study suggest the advantage of the linear approach, we also explore the challenges and potentials of the two techniques. Conclusion: The advantage of the two techniques is that they can be used to provide traceability insights that are contextual and would have been much more difficult to capture manually. We also present some key lessons learnt during this research. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Exploring a Bayesian and linear approach to requirements traceability", "paper_id": "WOS:000292176300004"}