{"auto_keywords": [{"score": 0.05007850122175858, "phrase": "real-time_systems"}, {"score": 0.024426191356251837, "phrase": "ttg"}, {"score": 0.004739630859016419, "phrase": "new_framework"}, {"score": 0.00470983237900705, "phrase": "black-box_conformance_testing"}, {"score": 0.00439410494607959, "phrase": "essential_features"}, {"score": 0.0041384457437123635, "phrase": "appropriate_modeling"}, {"score": 0.0038244884070329, "phrase": "sut."}, {"score": 0.0035904971126313316, "phrase": "analog-clock_tests"}, {"score": 0.003457007642786582, "phrase": "specification_automaton"}, {"score": 0.003317970131738248, "phrase": "reachability_computations"}, {"score": 0.002980124909321296, "phrase": "analog-clock_testers"}, {"score": 0.0028692628457408025, "phrase": "reaction_time"}, {"score": 0.0028421959620622355, "phrase": "simple_state_jump"}, {"score": 0.0027106334164712057, "phrase": "digital-clock_tests"}, {"score": 0.00264296841319955, "phrase": "finite-precision_digital_clocks"}, {"score": 0.0024968185204913935, "phrase": "state_coverage"}, {"score": 0.0024038923350585962, "phrase": "symbolic_reachability_graph"}, {"score": 0.0023071120479647325, "phrase": "prototype_tool"}, {"score": 0.0022072304165576405, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "reachable_symbolic_states"}], "paper_keywords": ["Conformance testing", " Test generation", " Coverage", " Partial observability", " On-the-fly algorithms", " Real-time systems", " Timed automata", " Specification and verification"], "paper_abstract": "We propose a new framework for black-box conformance testing of real-time systems. The framework is based on the model of partially-observable, non-deterministic timed automata. We argue that partial observability and non-determinism are essential features for ease of modeling, expressiveness and implementability. The framework allows the user to define, through appropriate modeling, assumptions on the environment of the system under test (SUT) as well as on the interface between the tester and the SUT. We consider two types of tests: analog-clock tests and digital-clock tests. Our algorithm for generating analog-clock tests is based on an on-the-fly determinization of the specification automaton during the execution of the test, which in turn relies on reachability computations. The latter can sometimes be costly, thus problematic, since the tester must quickly react to the actions of the system under test. Therefore, we provide techniques which allow analog-clock testers to be represented as deterministic timed automata, thus minimizing the reaction time to a simple state jump. We also provide algorithms for static or on-the-fly generation of digital-clock tests. These tests measure time only with finite-precision digital clocks, another essential condition for implementability. We also propose a technique for location, edge and state coverage of the specification, by reducing the problem to covering a symbolic reachability graph. This avoids having to generate too many tests. We report on a prototype tool called TTG and two case studies: a lighting device and the Bounded Retransmission Protocol. Experimental results obtained by applying TTG on the Bounded Retransmission Protocol show that only a few tests suffice to cover thousands of reachable symbolic states in the specification.", "paper_title": "Conformance testing for real-time systems", "paper_id": "WOS:000266086900002"}