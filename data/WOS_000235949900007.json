{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "program_transformation"}, {"score": 0.0480253670845457, "phrase": "logic_programming"}, {"score": 0.028017230475481696, "phrase": "delay_declarations"}, {"score": 0.025403408196310283, "phrase": "semi-delay_recurrency"}, {"score": 0.004666598697538815, "phrase": "control_generation"}, {"score": 0.004466519142879166, "phrase": "computation_rule"}, {"score": 0.004143196873246147, "phrase": "program_correctness"}, {"score": 0.003990385737207714, "phrase": "fundamental_problem"}, {"score": 0.0036097844103129043, "phrase": "previously_proposed_schemes"}, {"score": 0.0029722900280316216, "phrase": "control_generation_problem"}, {"score": 0.002298288831092204, "phrase": "previous_ideas"}, {"score": 0.002255431275670053, "phrase": "termination_literature"}, {"score": 0.0021995257343837547, "phrase": "logic_programs"}, {"score": 0.0021049977753042253, "phrase": "previous_work"}], "paper_keywords": ["logic programming", " program transformation", " control generation"], "paper_abstract": "The objective of control generation in logic programming is to derive a computation rule for a program that is efficient and yet does not compromise program correctness. Progress in solving this fundamental problem in logic programming has been slow and, to date, only partial solutions have been proposed. Previously proposed schemes are either inefficient, incomplete (incorrect) or difficult to apply for programs consisting of many components (the scheme is not modular). This paper shows how the control generation problem can be tackled by program transformation. The transformation relies on information about the depths of derivations to derive delay declarations which orchestrate the control. To prove correctness of the transformation, the notion of semi-delay recurrency is introduced, which generalises previous ideas in the termination literature for reasoning about logic programs with delay declarations. In contrast to previous work, semi-delay recurrency does not require an atom to be completely resolved before another is selected for reduction. This enhancement permits the transformation to introduce control which is flexible and relatively efficient.", "paper_title": "Control generation by program transformation", "paper_id": "WOS:000235949900007"}