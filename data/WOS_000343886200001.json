{"auto_keywords": [{"score": 0.03857891362648781, "phrase": "extended_binary_trie"}, {"score": 0.011809489359150688, "phrase": "tcam_movements"}, {"score": 0.010915740571385248, "phrase": "local_cpu"}, {"score": 0.00481495049065317, "phrase": "memory-efficient_tcam_coprocessor"}, {"score": 0.004707188147442449, "phrase": "ternary_content-addressable_memory"}, {"score": 0.004550029253278477, "phrase": "simple_hardware_device"}, {"score": 0.004498812433096501, "phrase": "fast_ip_lookups"}, {"score": 0.0039050245929822354, "phrase": "internet_topology"}, {"score": 0.0038610400240820307, "phrase": "traditional_tcam_coprocessors"}, {"score": 0.0037959868107895053, "phrase": "enclosure_relationship"}, {"score": 0.003526476304712492, "phrase": "update_algorithm"}, {"score": 0.0031665087019813244, "phrase": "tcam_search_process"}, {"score": 0.003009022147559257, "phrase": "memory-efficient_tcam_coprocessor_architecture"}, {"score": 0.0028111220617485985, "phrase": "average_number"}, {"score": 0.0024814079299143536, "phrase": "tcam_entries"}, {"score": 0.0024395426929046415, "phrase": "proposed_tcam_coprocessor"}, {"score": 0.0023579143175099324, "phrase": "cao_opt."}, {"score": 0.002318127769195112, "phrase": "total_tcam_search_cycles"}, {"score": 0.002215274527909304, "phrase": "proposed_tcam_architecture"}, {"score": 0.0021049977753042253, "phrase": "large_off-chip_memory"}], "paper_keywords": ["TCAM", " IP lookup", " longest prefix match", " update"], "paper_abstract": "Ternary content-addressable memory (TCAM) is a simple hardware device for fast IP lookups that can perform a lookup per cycle. However, prefixes may be inserted into or deleted from the TCAM because of changes in Internet topology. Traditional TCAM coprocessors maintain the enclosure relationship among prefixes by using an extended binary trie and perform TCAM movements based on an update algorithm (e.g., CAO_OPT) which runs on a local CPU to maintain the speed and correctness of the TCAM search process. In this paper, we propose a memory-efficient TCAM coprocessor architecture for updates that require only small memory size compared with the extended binary trie. The average number of TCAM movements per update is almost the same as that of CAO_OPT. However, the time to compute how to move TCAM entries in the proposed TCAM coprocessor is less than that in CAO_OPT. Only a small part of total TCAM search cycles is used to complete our update process. The proposed TCAM architecture can also be made smaller and faster because large off-chip memory for the extended binary trie and a local CPU are no longer necessary.", "paper_title": "A Memory-Efficient TCAM Coprocessor for IPv4/IPv6 Routing Table Update", "paper_id": "WOS:000343886200001"}