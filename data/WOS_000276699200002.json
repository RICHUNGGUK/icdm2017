{"auto_keywords": [{"score": 0.022839769438673413, "phrase": "fpt"}, {"score": 0.00481495049065317, "phrase": "trees_and_weighted_independent_sets"}, {"score": 0.004541712637353326, "phrase": "k_segments"}, {"score": 0.004074574278425223, "phrase": "total_number"}, {"score": 0.0038431888954930083, "phrase": "machine_learning"}, {"score": 0.0037795163893761027, "phrase": "data_mining"}, {"score": 0.003685972800046028, "phrase": "binary_strings"}, {"score": 0.0035648266669315943, "phrase": "linear-time_algorithm"}, {"score": 0.00347657813672945, "phrase": "k._key"}, {"score": 0.003334309053314909, "phrase": "special-purpose_data_structure"}, {"score": 0.0030414140732789186, "phrase": "repetition_lengths"}, {"score": 0.0029169007179202164, "phrase": "non-binary_strings"}, {"score": 0.0028209599545587745, "phrase": "nontrivial_dynamic_programming_algorithm"}, {"score": 0.0026384167183586015, "phrase": "weighted_independent_sets"}, {"score": 0.0023864566654035924, "phrase": "special_interval_graphs"}, {"score": 0.0021049977753042253, "phrase": "bounded-degree_graphs"}], "paper_keywords": ["Segmentation", " Dynamic programming", " Tree computations", " Weighted independent set", " Interval graphs", " Parameterized complexity"], "paper_abstract": "We divide a string into k segments, each with only one sort of symbols, so as to minimize the total number of exceptions. Motivations come from machine learning and data mining. For binary strings we develop a linear-time algorithm for any k. Key to efficiency is a special-purpose data structure, called W-tree, which reflects relations between repetition lengths of symbols. For non-binary strings we give a nontrivial dynamic programming algorithm. Our problem is equivalent to finding weighted independent sets with certain size constraints, either in paths (binary case) or special interval graphs (general case). We also show that this problem is FPT in bounded-degree graphs.", "paper_title": "Homogeneous String Segmentation using Trees and Weighted Independent Sets", "paper_id": "WOS:000276699200002"}