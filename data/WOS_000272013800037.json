{"auto_keywords": [{"score": 0.03777708249527035, "phrase": "hors"}, {"score": 0.023227295093816505, "phrase": "higher-order_programs"}, {"score": 0.004672953146379813, "phrase": "new_verification_method"}, {"score": 0.004617328272121826, "phrase": "temporal_properties"}, {"score": 0.004562362497952548, "phrase": "higher-order_functional_programs"}, {"score": 0.004401342842183475, "phrase": "ong's_recent_result"}, {"score": 0.0042459818200777846, "phrase": "model-checking_problem"}, {"score": 0.004195418010131832, "phrase": "higher-order_recursion_schemes"}, {"score": 0.0033812801309408514, "phrase": "previous_methods"}, {"score": 0.0030904433394138963, "phrase": "new_verification_framework"}, {"score": 0.0030353401945270755, "phrase": "smooth_integration"}, {"score": 0.0029991500396912923, "phrase": "abstract_model_checking_techniques"}, {"score": 0.0028245516301681713, "phrase": "type-based_verification_algorithm"}, {"score": 0.0025660347613972573, "phrase": "modal_mu-calculus"}, {"score": 0.0023033100935570755, "phrase": "ong's_game-semantics-based_algorithm"}], "paper_keywords": ["Languages", " Verification"], "paper_abstract": "We propose a new verification method for temporal properties of higher-order functional programs, which takes advantage of Ong's recent result on the decidability of the model-checking problem for higher-order recursion schemes (HORS's). A program is transformed to an HORS that generates a tree representing all the possible event sequences of the program, and then the HORS is model-checked. Unlike most of the previous methods for verification of higher-order programs, our verification method is sound and complete. Moreover, this new verification framework allows a smooth integration of abstract model checking techniques into verification of higher-order programs. We also present a type-based verification algorithm for HORS's. The algorithm can deal with only a fragment of the properties expressed by modal mu-calculus, but the algorithm and its correctness proof are (arguably) much simpler than those of Ong's game-semantics-based algorithm. Moreover, while the HORS model checking problem is n-EXPTIME in general, our algorithm is linear in the size of HORS, under the assumption that the sizes of types and specifications are bounded by a constant.", "paper_title": "Types and Higher-Order Recursion Schemes for Verification of Higher-Order Programs", "paper_id": "WOS:000272013800037"}