{"auto_keywords": [{"score": 0.048636009815037955, "phrase": "program_comprehension"}, {"score": 0.009395852826315115, "phrase": "software_maintenance"}, {"score": 0.00481495049065317, "phrase": "object-oriented_systems"}, {"score": 0.004598933498016774, "phrase": "major_time-consuming_activity"}, {"score": 0.004437613070853689, "phrase": "underlying_mechanisms"}, {"score": 0.0037498152007206815, "phrase": "larger_programs"}, {"score": 0.0033173234105492895, "phrase": "cognitive_difficulties"}, {"score": 0.0032172054825137866, "phrase": "unfamiliar_object-oriented_system"}, {"score": 0.0030414140732789186, "phrase": "computer_science"}, {"score": 0.002964706925144123, "phrase": "professional_java_tool"}, {"score": 0.002875200380397413, "phrase": "medium-size_java_application_system"}, {"score": 0.002649472341607234, "phrase": "systematic_strategy"}, {"score": 0.0025694584194998335, "phrase": "correct_solutions"}, {"score": 0.002416589459425828, "phrase": "application_structure"}, {"score": 0.002331641523873951, "phrase": "gui_implementation"}, {"score": 0.0022267859286766553, "phrase": "strategic_knowledge"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["maintenance", " program comprehension", " experiment", " object-oriented"], "paper_abstract": "Program comprehension is a major time-consuming activity in software maintenance. Understanding the underlying mechanisms of program comprehension is therefore necessary for improving software maintenance. It has been argued that acquiring knowledge of how a program works before modifying it (the systematic strategy) is unrealistic in larger programs. The goal of the experiment presented in this paper is to explore this claim. The experiment examines strategies for program comprehension and cognitive difficulties of developers who maintain an unfamiliar object-oriented system. The subjects were 38 students in their third or fourth year of study in computer science. They used a professional Java tool to perform several maintenance tasks on a medium-size Java application system in a 6-h long experiment. The results showed that the subjects who applied the systematic strategy were more likely to produce correct solutions. Two major groups of difficulties were related to the comprehension of the application structure, namely to the understanding of GUI implementation and OO comprehension and programming. Acquisition of strategic knowledge might improve program comprehension in software maintenance. (C) 2006 Elsevier Inc. All rights reserved.", "paper_title": "Comprehension strategies and difficulties in maintaining object-oriented systems: An explorative study", "paper_id": "WOS:000249472200012"}