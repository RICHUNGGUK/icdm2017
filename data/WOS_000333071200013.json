{"auto_keywords": [{"score": 0.04309048171613157, "phrase": "average_response_time"}, {"score": 0.036297196938033884, "phrase": "distributed_metadata_operations"}, {"score": 0.00481495049065317, "phrase": "cluster_file_systems"}, {"score": 0.004764859786310636, "phrase": "distributed_metadata_consistency"}, {"score": 0.004641890423057823, "phrase": "critical_issues"}, {"score": 0.004593591780245872, "phrase": "metadata_clusters"}, {"score": 0.004545793387330536, "phrase": "distributed_file_systems"}, {"score": 0.004498490110526062, "phrase": "existing_methods"}, {"score": 0.004428452434981208, "phrase": "metadata_consistency"}, {"score": 0.004314127287770832, "phrase": "write_operations"}, {"score": 0.004246947739596565, "phrase": "synchronous_disk_io"}, {"score": 0.004072851768196397, "phrase": "metadata_operations"}, {"score": 0.0038651944848734133, "phrase": "asynchronous_atomic_commit_protocol"}, {"score": 0.003303412571939192, "phrase": "redo_log"}, {"score": 0.003251920460276645, "phrase": "metadata_servers"}, {"score": 0.0031678720736808574, "phrase": "low_latency_network"}, {"score": 0.003118486096035156, "phrase": "crashed_metadata_server"}, {"score": 0.0030538300202383106, "phrase": "metadata_operation"}, {"score": 0.0030062165552187086, "phrase": "redundant_redo_log"}, {"score": 0.0027790254309734428, "phrase": "disk_to"}, {"score": 0.0026649432435828842, "phrase": "distributed_metadata_service"}, {"score": 0.0025156683465194967, "phrase": "local_journal"}, {"score": 0.0021383680500215267, "phrase": "recovery_time"}], "paper_keywords": ["atomic commit protocol", " cluster file system", " distributed metadata operation", " consistency", " Dual-Log"], "paper_abstract": "Distributed metadata consistency is one of the critical issues of metadata clusters in distributed file systems. Existing methods to maintain metadata consistency generally need several log forced write operations. Since synchronous disk IO is very inefficient, the average response time of metadata operations is greatly increased. In this paper, an asynchronous atomic commit protocol (ACP) named Dual-Log (DL) is presented. It does not need any log forced write operations. Optimizing for distributed metadata operations involving only two metadata servers, DL mutually records the redo log in counterpart metadata servers by transferring through the low latency network. A crashed metadata server can redo the metadata operation with the redundant redo log. Since the latency of the network is much lower than the latency of disk TO, DL can improve the performance of distributed metadata service significantly. The prototype of DL is implemented based on local journal. The performance is tested by comparing with two widely used protocols, EP and S2PC-MP, and the results show that the average response time of distributed metadata operations is reduced by about 40%-60%, and the recovery time is only 1 second under 10 thousands uncompleted distributed metadata operations.", "paper_title": "A Non-Forced-Write Atomic Commit Protocol for Cluster File Systems", "paper_id": "WOS:000333071200013"}