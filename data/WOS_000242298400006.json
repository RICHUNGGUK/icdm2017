{"auto_keywords": [{"score": 0.03967457737719814, "phrase": "sa"}, {"score": 0.0391710032323389, "phrase": "ga"}, {"score": 0.011811818812471746, "phrase": "regression_estimation"}, {"score": 0.010938910325140133, "phrase": "important_features"}, {"score": 0.005595146787662659, "phrase": "network_output"}, {"score": 0.005521142369510195, "phrase": "feature_input"}, {"score": 0.00481495049065317, "phrase": "feature_selection"}, {"score": 0.0047893552527040195, "phrase": "support_vector_machines"}, {"score": 0.00472595801454134, "phrase": "support_vector_machine"}, {"score": 0.004700892387177955, "phrase": "svm"}, {"score": 0.004638602678192715, "phrase": "increasing_attention"}, {"score": 0.00450456611645112, "phrase": "good_generalization_performance"}, {"score": 0.004444921827311577, "phrase": "local_minima"}, {"score": 0.004421284843189731, "phrase": "sparse_representation"}, {"score": 0.004316457576524889, "phrase": "svms_framework"}, {"score": 0.004202882967784785, "phrase": "significant_features"}, {"score": 0.0041251561573501455, "phrase": "first_step"}, {"score": 0.004016594765266821, "phrase": "network_performance"}, {"score": 0.003973971215091993, "phrase": "network_complexity"}, {"score": 0.0037977905802670446, "phrase": "saliency_analysis"}, {"score": 0.0037474693720823643, "phrase": "genetic_algorithm"}, {"score": 0.0036916325024543986, "phrase": "selected_feature_sets"}, {"score": 0.0032793933580835574, "phrase": "partial_derivative"}, {"score": 0.003210110095236981, "phrase": "systematic_approach"}, {"score": 0.0031845067058084583, "phrase": "irrelevant_features"}, {"score": 0.0030923570058383355, "phrase": "efficient_search"}, {"score": 0.0030270132320276096, "phrase": "natural_selection"}, {"score": 0.003010893527930816, "phrase": "population_genetics"}, {"score": 0.0029868743007990333, "phrase": "simple_ga"}, {"score": 0.0029159568444629053, "phrase": "binary_chromosomes"}, {"score": 0.0025514745448798385, "phrase": "simulated_data"}, {"score": 0.0024775972933237344, "phrase": "redundant_feature"}, {"score": 0.002393034183276193, "phrase": "kernel_function_selection"}, {"score": 0.0023675986784123656, "phrase": "real_financial_data"}, {"score": 0.00232995025271599, "phrase": "different_subsets"}, {"score": 0.0022806798371116698, "phrase": "higher_generation_performance"}, {"score": 0.002238421744870103, "phrase": "full_feature"}, {"score": 0.002196944917134202, "phrase": "generation_performance"}], "paper_keywords": ["feature selection", " support vector machines", " structural risk minimization principle", " saliency analysis", " genetic algorithm"], "paper_abstract": "Recently, a support vector machine (SVM) has been receiving increasing attention in the field of regression estimation due to its remarkable characteristics such as good generalization performance, the absence of local minima and sparse representation of the solution. However, within the SVMs framework, there are very few established approaches for identifying important features. Selecting significant features from all candidate features is the first step in regression estimation, and this procedure can improve the network performance, reduce the network complexity, and speed up the training of the network. This paper investigates the use of saliency analysis (SA) and genetic algorithm (GA) in SVMs for selecting important features in the context of regression estimation. The SA measures the importance of features by evaluating the sensitivity of the network output with respect to the feature input. The derivation of the sensitivity of the network output to the feature input in terms of the partial derivative in SVMs is presented, and a systematic approach to remove irrelevant features based on the sensitivity is developed. GA is an efficient search, method based on the mechanics of natural selection and population genetics. A simple GA is used where all features are mapped into binary chromosomes with a bit \"1\" representing the inclusion of the feature and a bit of \"0\" representing the absence of the feature. The performances of SA and GA are tested using two simulated non-linear time series and five real financial time series. The experiments show that with the simulated data, GA and SA detect the same true feature set from the redundant feature set, and the method of SA is also insensitive to the kernel function selection. With the real financial data, GA and SA select different subsets of the features. Both selected feature sets achieve higher generation performance in SVMs than that of the full feature set. In addition, the generation performance between the selected feature sets of GA and SA is similar. All the results demonstrate that that both S A and GA are effective in the SVMs for identifying important features.", "paper_title": "An empirical study of feature selection in support vector machines", "paper_id": "WOS:000242298400006"}