{"auto_keywords": [{"score": 0.04720912624670318, "phrase": "web_content"}, {"score": 0.00481495049065317, "phrase": "primary_means"}, {"score": 0.004769444094319619, "phrase": "information_sharing"}, {"score": 0.004215397034321004, "phrase": "specific_server"}, {"score": 0.004077508669922702, "phrase": "even_that_information"}, {"score": 0.0037969755088553326, "phrase": "spork_system"}, {"score": 0.003707819146444135, "phrase": "tpm"}, {"score": 0.0036207206487324506, "phrase": "web_server_integrity_state"}, {"score": 0.0032149396890830575, "phrase": "received_content"}, {"score": 0.003007846011394511, "phrase": "spork_service"}, {"score": 0.0027610089418453614, "phrase": "mixed_static_and_dynamic_content"}, {"score": 0.002657890175649468, "phrase": "exceptionally_slow_tpm_hardware"}, {"score": 0.0025954008219792337, "phrase": "in-depth_empirical_analysis"}, {"score": 0.002522344964242888, "phrase": "apache_web_servers"}, {"score": 0.0024630345285372958, "phrase": "spork"}, {"score": 0.0021352776064254195, "phrase": "manageable_overheads"}, {"score": 0.0021049977753042253, "phrase": "integrity-measured_content"}], "paper_keywords": ["Trusted computing", " integrity measurement", " web system", " scalable attestation"], "paper_abstract": "The web is a primary means of information sharing for most organizations and people. Currently, a recipient of web content knows nothing about the environment in which that information was generated other than the specific server from whence it came (and even that information can be unreliable). In this paper, we develop and evaluate the Spork system that uses the Trusted Platform Module (TPM) to tie the web server integrity state to the web content delivered to browsers, thus allowing a client to verify that the origin of the content was functioning properly when the received content was generated and/or delivered. We discuss the design and implementation of the Spork service and its browser-side Firefox validation extension. In particular, we explore the challenges and solutions of scaling the delivery of mixed static and dynamic content to a large number of clients using exceptionally slow TPM hardware. We perform an in-depth empirical analysis of the Spork system within Apache web servers. This analysis shows Spork can deliver nearly 8,000 static or over 6,500 dynamic integrity-measured web objects per second. More broadly, we identify how TPM-based content web services can scale to large client loads with manageable overheads and deliver integrity-measured content with manageable overhead.", "paper_title": "Scalable Web Content Attestation", "paper_id": "WOS:000301800000008"}