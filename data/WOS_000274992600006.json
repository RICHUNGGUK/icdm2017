{"auto_keywords": [{"score": 0.032511196899075494, "phrase": "overall_test_generation_time"}, {"score": 0.00481495049065317, "phrase": "efficient_property_clustering"}, {"score": 0.00476323161560059, "phrase": "learning_techniques"}, {"score": 0.004712065638657606, "phrase": "functional_verification"}, {"score": 0.004586531354697466, "phrase": "major_bottlenecks"}, {"score": 0.004321952227344232, "phrase": "combined_effects"}, {"score": 0.00427550604912774, "phrase": "increasing_complexity"}, {"score": 0.0041840994704406866, "phrase": "automated_techniques"}, {"score": 0.004116823963855969, "phrase": "efficient_tests"}, {"score": 0.004028796143006953, "phrase": "bounded_model_checking"}, {"score": 0.0037150687722055727, "phrase": "existing_researchers"}, {"score": 0.0036553070575015344, "phrase": "incremental_satisfiability"}, {"score": 0.0035771121569391916, "phrase": "counterexample_generation"}, {"score": 0.003334309053314909, "phrase": "incremental_bounds"}, {"score": 0.0029763124376934813, "phrase": "different_properties"}, {"score": 0.0028043588777213533, "phrase": "novel_methods"}, {"score": 0.0027592065435732955, "phrase": "similar_properties"}, {"score": 0.002656650588033728, "phrase": "efficient_learning_techniques"}, {"score": 0.0024231382864800173, "phrase": "similar_test_generation_instances"}, {"score": 0.002333044307949414, "phrase": "hardware_benchmarks"}, {"score": 0.0021049977753042253, "phrase": "existing_methods"}], "paper_keywords": ["Bounded model checking", " functional verification", " property clustering", " SAT", " test generation"], "paper_abstract": "Functional verification is one of the major bottlenecks in system-on-chip design due to the combined effects of increasing complexity and lack of automated techniques for generating efficient tests. Several promising ideas using bounded model checking are proposed over the years to efficiently generate counterexamples (tests). The existing researchers have used incremental satisfiability to improve the counterexample generation, involving only one property by sharing knowledge across instances of the same property with incremental bounds. In this paper, we present a framework that can efficiently reduce the overall test generation time by exploiting the similarity among different properties. This paper makes two primary contributions: 1) it proposes novel methods to cluster similar properties; and 2) it develops efficient learning techniques that can significantly reduce the overall test generation time for the properties in a cluster by sharing knowledge across similar test generation instances. Our experimental results using both software and hardware benchmarks demonstrate that our approach can drastically reduce (on average three to five times) the overall test generation time compared to existing methods.", "paper_title": "Functional Test Generation Using Efficient Property Clustering and Learning Techniques", "paper_id": "WOS:000274992600006"}