{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "process_modeling"}, {"score": 0.004533427352547707, "phrase": "aspect_and_model-driven_engineering_approaches"}, {"score": 0.004305203085016233, "phrase": "executable_software_process_models"}, {"score": 0.0037834649508375544, "phrase": "short_incremental_and_iterative_cycles"}, {"score": 0.003471135453226184, "phrase": "important_process_improvement_decisions"}, {"score": 0.003382547312072468, "phrase": "resource_allocation"}, {"score": 0.003324743991757282, "phrase": "deadlock_identification"}, {"score": 0.0028715299874549245, "phrase": "model-driven_engineering_approaches"}, {"score": 0.002375253757224999, "phrase": "software_process_modeling"}, {"score": 0.0023346234464901978, "phrase": "kermeta"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["executable models", " process modeling and execution", " UML"], "paper_abstract": "One major advantage of executable software process models is that once defined, they can be simulated, checked and validated in short incremental and iterative cycles. This also makes them a powerful asset for important process improvement decisions such as resource allocation, deadlock identification and process management. In this paper, we propose a framework that combines Aspect and Model-driven Engineering approaches in order to ensure process modeling, simulation and execution. This framework is based on UML4SPM, a UML2.0-based language for Software Process Modeling and Kermeta, an executable metaprogramming language. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "Achieving process modeling and execution through the combination of aspect and model-driven engineering approaches", "paper_id": "WOS:000309908900004"}