{"auto_keywords": [{"score": 0.036617836053487965, "phrase": "subdivision_tree"}, {"score": 0.036247390364484336, "phrase": "sqfreeeval_algorithm"}, {"score": 0.014118675829691002, "phrase": "real_roots"}, {"score": 0.00481495049065317, "phrase": "univariate_polynomial"}, {"score": 0.004781357546476652, "phrase": "real_coefficients"}, {"score": 0.004552648949390462, "phrase": "algebraic_techniques"}, {"score": 0.00448936288710013, "phrase": "sturm"}, {"score": 0.004458006158406463, "phrase": "descartes"}, {"score": 0.0041129612315045, "phrase": "simple_subdivision_algorithm"}, {"score": 0.003821215658570578, "phrase": "local_data"}, {"score": 0.0037812559272269613, "phrase": "complexity_analysis"}, {"score": 0.003754847652236926, "phrase": "adaptive_algorithms"}, {"score": 0.003651039356522665, "phrase": "new_challenge"}, {"score": 0.003625537203803235, "phrase": "computer_science"}, {"score": 0.0033682492486884364, "phrase": "evaluation-based_numerical_algorithm"}, {"score": 0.0031845067058084583, "phrase": "prior_attempts"}, {"score": 0.003042599375218838, "phrase": "sub-optimal_results"}, {"score": 0.0028166655005289073, "phrase": "benchmark_problem"}, {"score": 0.0027100527874262446, "phrase": "degree_d"}, {"score": 0.0025352969524471496, "phrase": "algebraic_amortization_technique"}, {"score": 0.0025087506382067536, "phrase": "standard_mahler-davenport_root_bounds"}, {"score": 0.002422249273477746, "phrase": "l._second"}, {"score": 0.002380120876826732, "phrase": "continuous_amortization_technique"}, {"score": 0.0022110183535859374, "phrase": "novel_analysis_technique"}, {"score": 0.002195552442011313, "phrase": "continuous_amortization"}, {"score": 0.002149799391146313, "phrase": "art_complexity_bounds"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Continuous amortization", " Adaptive analysis", " Subdivision algorithm", " Integral analysis", " Amortization", " Root isolation"], "paper_abstract": "Let f be a univariate polynomial with real coefficients, f is an element of R[X]. Subdivision algorithms based on algebraic techniques (e.g., Sturm or Descartes methods) are widely used for isolating the real roots of f in a given interval. In this paper, we consider a simple subdivision algorithm whose primitives are purely numerical (e.g., function evaluation). The complexity of this algorithm is adaptive because the algorithm makes decisions based on local data. The complexity analysis of adaptive algorithms (and this algorithm in particular) is a new challenge for computer science. In this paper, we compute the size of the subdivision tree for the SqFreeEVAL algorithm. The SqFreeEVAL algorithm is an evaluation-based numerical algorithm which is well-known in several communities. The algorithm itself is simple, but prior attempts to compute its complexity have proven to be quite technical and have yielded sub-optimal results. Our main result is a simple O(d(L+ In d)) bound on the size of the subdivision tree for the SqFreeEVAL algorithm on the benchmark problem of isolating all real roots of an integer polynomial f of degree d and whose coefficients can be written with at most L bits. Our proof uses two amortization-based techniques: first, we use the algebraic amortization technique of the standard Mahler-Davenport root bounds to interpret the integral in terms of d and L. Second, we use a continuous amortization technique based on an integral to bound the size of the subdivision tree. This paper is the first to use the novel analysis technique of continuous amortization to derive state of the art complexity bounds. (C) 2011 Elsevier Ltd. All rights reserved.", "paper_title": "SqFreeEVAL: An (almost) optimal real-root isolation algorithm", "paper_id": "WOS:000298620700003"}