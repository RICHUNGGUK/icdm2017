{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "high-dimensional_euclidean_space."}, {"score": 0.004576253356889219, "phrase": "n_points"}, {"score": 0.0045328270272981825, "phrase": "high-dimensional_space_r-d"}, {"score": 0.004294381488413906, "phrase": "euclidean_distance"}, {"score": 0.0040298010803060495, "phrase": "running_time"}, {"score": 0.0038420778359143917, "phrase": "output_size"}, {"score": 0.003709974534103202, "phrase": "dimension_d._the_log_n_factor"}, {"score": 0.0036282750398991485, "phrase": "high_probability"}, {"score": 0.003582397044768098, "phrase": "neighbor_pairs"}, {"score": 0.0033937776228549557, "phrase": "arbitrarily_large_fraction"}, {"score": 0.0030847461428168614, "phrase": "worst-case_tight"}, {"score": 0.003036040409062437, "phrase": "exponential_factor"}, {"score": 0.0027771220289115675, "phrase": "superexponential_factor"}, {"score": 0.0027159094186967247, "phrase": "input_set"}, {"score": 0.0026224255640133758, "phrase": "low_doubling_dimension_delta"}, {"score": 0.0025727942759279513, "phrase": "first_algorithm"}, {"score": 0.0021800767552049402, "phrase": "experimental_results"}], "paper_keywords": ["computational geometry", " nearest neighbors", " near-neighbor searching", " high-dimensional spaces", " locality sensitive hashing", " random grids"], "paper_abstract": "We consider the following problem, which arises in many database and web-based applications: Given a set P of n points in a high-dimensional space R-d and a distance r, we want to report all pairs of points of P at Euclidean distance at most r. We present two randomized algorithms, one based on randomly shifted grids, and the other on randomly shifted and rotated grids. The running time of both algorithms is of the form C(d)(n + k) log n, where k is the output size and C(d) is a constant that depends on the dimension d. The log n factor is needed to guarantee, with high probability, that all neighbor pairs are reported and can be dropped if it suffices to report, in expectation, an arbitrarily large fraction of the pairs. When only translations are used, C(d) is of the form (a root d)(d) for some (small) absolute constant a approximate to 0.484; this bound is worst-case tight, up to an exponential factor of about 2(d). When both rotations and translations are used, C(d) can be improved to roughly 6.74(d), getting rid of the superexponential factor root d(d). When the input set (lies in a subset of d-space that) has low doubling dimension delta, the performance of the first algorithm improves to C(d, delta)(n+ k) log n (or to C(d, delta)(n + k)), where C(d, delta) = O((ed/delta)(delta)) for delta <= root d. Otherwise, C(d, delta) = O(e(root d)root d(delta)). We also present experimental results on several large data sets, demonstrating that our algorithms run significantly faster than all the leading existing algorithms for reporting neighbors.", "paper_title": "REPORTING NEIGHBORS IN HIGH-DIMENSIONAL EUCLIDEAN SPACE", "paper_id": "WOS:000341576200005"}