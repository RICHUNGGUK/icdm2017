{"auto_keywords": [{"score": 0.04940203756018457, "phrase": "wireless_client-server_environment"}, {"score": 0.03739441531339693, "phrase": "entire_cache"}, {"score": 0.028218718504283632, "phrase": "selective_purge"}, {"score": 0.00481495049065317, "phrase": "mobile_clients'_cache_reusability"}, {"score": 0.00452670409375785, "phrase": "efficient_data_dissemination_method"}, {"score": 0.004420472010542188, "phrase": "broadcast_data"}, {"score": 0.004296264970612285, "phrase": "mobile_client's_cache"}, {"score": 0.004155742403177802, "phrase": "communication_bandwidth"}, {"score": 0.00388828234270598, "phrase": "invalidation_reports"}, {"score": 0.003725470458263889, "phrase": "server_data"}, {"score": 0.0036553070575015344, "phrase": "cached_data"}, {"score": 0.0031845067058084583, "phrase": "cache_invalidation_scheme"}, {"score": 0.003051073364818384, "phrase": "mobile_clients'_caches"}, {"score": 0.002854505078275351, "phrase": "long_disconnection"}, {"score": 0.0027741761880779535, "phrase": "relative_cost"}, {"score": 0.0027348611289528583, "phrase": "ail_data"}, {"score": 0.0024984517279573906, "phrase": "uplink_message"}, {"score": 0.0023152577218214804, "phrase": "simulation_results"}, {"score": 0.0022500695985527668, "phrase": "cache_reusability"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["wireless client-server environment", " data broadcasting", " client's cache invalidation"], "paper_abstract": "In a wireless client-server environment, data broadcasting is an efficient data dissemination method and some of the broadcast data are often cached at each mobile client's cache. Data broadcasting and caching save communication bandwidth, resource usage, and data access time. A server also broadcasts invalidation reports (IRs) to maintain the consistency between server data and clients' cached data. Most existing cache invalidation policies simply purge the entire cache after a client has been disconnected long enough to miss a certain number (window size) of IRs. We present a cache invalidation scheme to increase the reusability of the data in mobile clients' caches after long disconnection. Instead of clearing the entire cache regardless of its consistency after long disconnection, a client estimates the relative cost of purging ail data and the cost of a selective purge. If a selective purge is cheaper, the client sends server an uplink message to ask the validity of data whose update rate is low to salvage as many valid data as possible. Simulation results show that our scheme effectively increases cache reusability since our cost functions respect update rates at a server, broadcast intervals, the communication bandwidth, and data sizes as well as disconnection time. Copyright (c) 2007 John Wiley & Sons, Ltd.", "paper_title": "Increasing mobile clients' cache reusability in a wireless client-server environment", "paper_id": "WOS:000249293500004"}