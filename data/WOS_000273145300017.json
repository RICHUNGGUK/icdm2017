{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "mathematical_programming"}, {"score": 0.004774115617883476, "phrase": "dominance-driven_enumeration"}, {"score": 0.0047135086583390585, "phrase": "shift-selection_and_task-sequencing_problems"}, {"score": 0.004291848822287492, "phrase": "operational_constraints"}, {"score": 0.00397495478332679, "phrase": "higher-level_decisions"}, {"score": 0.0037446875860947916, "phrase": "clearly_impacts"}, {"score": 0.0034386016613475335, "phrase": "great_cost_benefits"}, {"score": 0.0033517342967390065, "phrase": "task-sequencing_decisions"}, {"score": 0.003239304090565123, "phrase": "traditional_mathematical_programming_approaches"}, {"score": 0.003157455511069507, "phrase": "reasonable_run_times"}, {"score": 0.002936577024096783, "phrase": "simpler_feasibility_problems"}, {"score": 0.002886885861509621, "phrase": "larger_search-based_algorithm"}, {"score": 0.002696366237523415, "phrase": "shift-selection_and_task_sequencing_problem"}, {"score": 0.0025947642929906407, "phrase": "test-and-prune_algorithm"}, {"score": 0.0025183881730011597, "phrase": "computational_experiments"}, {"score": 0.002475755804232436, "phrase": "real-world_problem"}, {"score": 0.0023024551893939403, "phrase": "provable_optimality"}, {"score": 0.0022251433045184454, "phrase": "problem_instances"}, {"score": 0.002159623311924437, "phrase": "traditional_integer_programming_methods"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Integer programming", " Scheduling", " Algorithms", " Resource allocation"], "paper_abstract": "A common problem in production planning is to sequence a series of tasks so as to meet demand while satisfying operational constraints. This problem can be challenging to solve in its own right. It becomes even more challenging when higher-level decisions are also taken into account. For example, determining which shifts to operate clearly impacts how tasks are then scheduled; additionally, reducing the number of shifts that must be operated can have great cost benefits. Integrating the shift-selection and task-sequencing decisions can greatly impact tractability, however, traditional mathematical programming approaches often failing to converge in reasonable run times. Instead, we develop an approach that embeds mathematical programming, as a mechanism for solving simpler feasibility problems, within a larger search-based algorithm that leverages dominance to achieve substantial pruning. In this paper, we introduce the Shift-Selection and Task Sequencing problem (SS-TS), develop the Test-and-Prune algorithm (T&P), and present computational experiments based on a real-world problem in automotive stamping to demonstrate its effectiveness. In particular, we are able to solve to provable optimality, in very short run times, a number of problem instances that could not be solved through traditional integer programming methods. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "A hybridization of mathematical programming and dominance-driven enumeration for solving shift-selection and task-sequencing problems", "paper_id": "WOS:000273145300017"}