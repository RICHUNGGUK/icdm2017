{"auto_keywords": [{"score": 0.04952525101149597, "phrase": "real-time_databases"}, {"score": 0.004815063698776188, "phrase": "qos"}, {"score": 0.004622783000449884, "phrase": "real-time_applications"}, {"score": 0.004490212943845175, "phrase": "flight_control"}, {"score": 0.004043541331944951, "phrase": "greater_demands"}, {"score": 0.003996727479807572, "phrase": "real-time_data_services"}, {"score": 0.0034551632687788857, "phrase": "temporal_violations"}, {"score": 0.003336468343971626, "phrase": "even_a_catastrophe"}, {"score": 0.0032978134802348433, "phrase": "imprecise_computation_techniques"}, {"score": 0.0031845067058084613, "phrase": "graceful_degradation"}, {"score": 0.002952146666681891, "phrase": "qos_specification"}, {"score": 0.00280126189041041, "phrase": "qos_requirements"}, {"score": 0.0027049694095434905, "phrase": "feedback_control_scheduling"}, {"score": 0.0025816953009851072, "phrase": "different_policies"}, {"score": 0.0024784363584530976, "phrase": "robust_and_controlled_behavior"}, {"score": 0.0023932142697579506, "phrase": "transient_overloads"}, {"score": 0.002351705899181029, "phrase": "inaccurate_runtime_estimates"}, {"score": 0.0022576249214220187, "phrase": "performance_experiments"}, {"score": 0.002205560249972527, "phrase": "proposed_algorithms"}, {"score": 0.002142161017595363, "phrase": "baseline_algorithms"}, {"score": 0.0021049977753042253, "phrase": "feedback_control"}], "paper_keywords": ["real-time and embedded systems", " real-time data services", " imprecise computation", " feedback control", " modeling techniques"], "paper_abstract": "Real-time applications such as e-commerce, flight control, chemical and nuclear control, and telecommunication are becoming increasingly sophisticated in their data needs, resulting in greater demands for real-time data services that are provided by real-time databases. Since the workload of real-time databases cannot be precisely predicted, they can become overloaded and thereby cause temporal violations, resulting in damage or even a catastrophe. Imprecise computation techniques address this problem and allow graceful degradation during overloads. In this paper, we present a framework for QoS specification and management consisting of a model for expressing QoS requirements, an architecture based on feedback control scheduling, and a set of algorithms implementing different policies and behaviors. Our approach gives a robust and controlled behavior of real-time databases, even for transient overloads and with inaccurate runtime estimates of the transactions. Further, performance experiments show that the proposed algorithms outperform a set of baseline algorithms that uses feedback control.", "paper_title": "Specification and management of QoS in real-time databases supporting imprecise computations", "paper_id": "WOS:000234742400006"}