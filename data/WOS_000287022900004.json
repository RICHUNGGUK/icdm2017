{"auto_keywords": [{"score": 0.04287858727323994, "phrase": "naming_game"}, {"score": 0.00481495049065317, "phrase": "distributed_csps"}, {"score": 0.004464326432401002, "phrase": "large_range"}, {"score": 0.004321952227344232, "phrase": "computer_science"}, {"score": 0.004252469672259375, "phrase": "solving_methodology"}, {"score": 0.003635600104609725, "phrase": "small_instance_changes"}, {"score": 0.003334309053314909, "phrase": "n_agents"}, {"score": 0.002881255933884771, "phrase": "minimal_protocol"}, {"score": 0.0027741761880779535, "phrase": "consistent_state"}, {"score": 0.002714779217561487, "phrase": "distributed_strategy"}, {"score": 0.002436289099444074, "phrase": "distributed_system"}, {"score": 0.002410058288617039, "phrase": "uniform_finite_state_machines"}, {"score": 0.002222102813520549, "phrase": "distributed_uniform_system"}, {"score": 0.0021510820434023207, "phrase": "random_decisions"}, {"score": 0.0021049977753042253, "phrase": "equivalent_alternatives"}], "paper_keywords": [""], "paper_abstract": "Constraint solving problems (CSPs) are the formalization of a large range of problems that emerge from computer science. The solving methodology described here is based on the naming game. The two main features that distinguish this methodology from most distributed constraint solving problem (DCSPs) methods are: the system can react to small instance changes, and it does not require pre-agreed agent/variable ordering. The naming game was introduced to represent N agents that have to bootstrap an agreement on a name to give to an object. The agents do not have a hierarchy, and use a minimal protocol. Still they converge to a consistent state by using a distributed strategy. For this reason, the naming game can be used to untangle DCSPs. It was shown that a distributed system of uniform finite state machines does not solve the ring ordering problem in all the algorithm executions. Our algorithm is a distributed uniform system of agents able to perform random decisions when presented with equivalent alternatives. We show that this algorithm solves the ring ordering problem with a probability one.", "paper_title": "Solving Distributed CSPs Probabilistically", "paper_id": "WOS:000287022900004"}