{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "computing_abstractions"}, {"score": 0.004628101576367193, "phrase": "digital_logic_gates"}, {"score": 0.004515004397496303, "phrase": "elementary_building_blocks"}, {"score": 0.0040491842732233154, "phrase": "sequential_processes"}, {"score": 0.003969784439380027, "phrase": "atomic_zero-time_computing_steps"}, {"score": 0.003834548373258131, "phrase": "even_simple_operations"}, {"score": 0.0036312482387007815, "phrase": "modeling_and_analysis_framework"}, {"score": 0.003577691211998842, "phrase": "continuous_computations"}, {"score": 0.0035424245257172234, "phrase": "zero-bit_message_channels"}, {"score": 0.003371220210416809, "phrase": "performance_analysis"}, {"score": 0.0033214855341753544, "phrase": "distributed_fault-tolerant_clocking_approach"}, {"score": 0.00308357048262018, "phrase": "\"classic\"_distributed_byzantine_fault-tolerant_tick_generation_algorithm"}, {"score": 0.0029055323737809825, "phrase": "clockless_digital_logic"}, {"score": 0.0027925723953701083, "phrase": "analytic_expressions"}, {"score": 0.0027650234530228923, "phrase": "worst_case_performance_metrics"}, {"score": 0.0026973310437053573, "phrase": "clock_frequency"}, {"score": 0.00263129148531588, "phrase": "absolute_delay_values"}, {"score": 0.0025668646315794947, "phrase": "achievable_synchronization_precision"}, {"score": 0.002157857111130435, "phrase": "faster_implementation_technology"}, {"score": 0.0021049977753042253, "phrase": "slightly_different_layout"}], "paper_keywords": ["Clock synchronization", " Fault-tolerant", " distributed systems", " Modeling approaches", " VLSI"], "paper_abstract": "Classic distributed computing abstractions do not match well the reality of digital logic gates, which are the elementary building blocks of Systems-on-Chip (SoCs) and other Very Large Scale Integrated (VLSI) circuits: Massively concurrent, continuous computations undermine the concept of sequential processes executing sequences of atomic zero-time computing steps, and very limited computational resources at gate-level make even simple operations prohibitively costly. In this paper, we introduce a modeling and analysis framework based on continuous computations and zero-bit message channels, and employ this framework for the correctness & performance analysis of a distributed fault-tolerant clocking approach for Systems-on-Chip (SoCs). Starting out from a \"classic\" distributed Byzantine fault-tolerant tick generation algorithm, we show how to adapt it for direct implementation in clockless digital logic, and rigorously prove its correctness and derive analytic expressions for worst case performance metrics like synchronization precision and clock frequency. Rather than on absolute delay values, both the algorithm's correctness and the achievable synchronization precision depend solely on the ratio of certain path delays. Since these ratios can be mapped directly to placement & routing constraints, there is typically no need for changing the algorithm when migrating to a faster implementation technology and/or when using a slightly different layout in an SoC.", "paper_title": "Reconciling fault-tolerant distributed computing and systems-on-chip", "paper_id": "WOS:000299092800003"}