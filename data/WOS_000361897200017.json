{"auto_keywords": [{"score": 0.03868136961145479, "phrase": "additional_overheads"}, {"score": 0.00481495049065317, "phrase": "high-throughput_computing_systems"}, {"score": 0.004768104290288521, "phrase": "peer-to-peer_networks"}, {"score": 0.004675768396728975, "phrase": "high-throughput_computing"}, {"score": 0.004540591176992658, "phrase": "system_failures"}, {"score": 0.004430920292612374, "phrase": "important_performance_limitation"}, {"score": 0.0038827100184187805, "phrase": "aborted_tasks"}, {"score": 0.0037336520904376687, "phrase": "automatic_re-execution"}, {"score": 0.003503497128638102, "phrase": "tolerant_techniques"}, {"score": 0.002937318465594425, "phrase": "submitted_tasks"}, {"score": 0.0028944757265206332, "phrase": "best_node"}, {"score": 0.002511147699138714, "phrase": "htc_system"}, {"score": 0.002391067964886602, "phrase": "peer_network"}, {"score": 0.0021049977753042253, "phrase": "higher_task_throughput"}], "paper_keywords": ["High-Throughput Computing", " Peer to peer systems", " Failure-aware scheduling"], "paper_abstract": "In a High-Throughput Computing (HTC) system, system failures and churning pose an important performance limitation. The time used by tasks running in a node that suddenly fails (or abandons the system) constitutes a waste of resources. These aborted tasks are usually reinserted into the system for automatic re-execution, causing additional overheads. This problem has been partially addressed via fault tolerant techniques such as checkpointing and replication. However, these solutions cause additional overheads. In this work, we present several failure-aware scheduling policies that aim to reduce the waste of resources by means of mechanisms to match the submitted tasks with the best node to run it, taking into consideration the (predicted) duration of the task and the (expected) survival time of the nodes. Experimentation through simulation, in the context of an HTC system built on top of a peer-to-peer network, confirms that our policies, compared to several state-of-the-art alternatives, result in a more effective distribution of workload whose consequence is a higher task throughput.", "paper_title": "Competition-based failure-aware scheduling for High-Throughput Computing systems on peer-to-peer networks", "paper_id": "WOS:000361897200017"}