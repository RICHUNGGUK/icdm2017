{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "hardware_power_variability-aware_virtual_memory_management_for_energy_savings"}, {"score": 0.004763565662615503, "phrase": "hardware_variability"}, {"score": 0.004466519142879166, "phrase": "continued_technology_scaling"}, {"score": 0.004255902303152008, "phrase": "underdesigned"}, {"score": 0.004143196873246147, "phrase": "system-level_power_variability"}, {"score": 0.0040334640350288, "phrase": "energy_efficiency"}, {"score": 0.0037615180375561805, "phrase": "application_annotations"}, {"score": 0.0036815763368083197, "phrase": "memory_allocations"}, {"score": 0.0036227329311981195, "phrase": "dram_energy"}, {"score": 0.003584025547693836, "phrase": "vipzone's_components"}, {"score": 0.0035078427258024613, "phrase": "physical_address_space"}, {"score": 0.003470358620464986, "phrase": "dimm-aware_zones"}, {"score": 0.0031845067058084583, "phrase": "dynamic_allocations"}, {"score": 0.003034158379493625, "phrase": "linux_kernel"}, {"score": 0.0030017207229983385, "phrase": "glibc_api_support"}, {"score": 0.002890887778279196, "phrase": "significant_access_power_variation"}, {"score": 0.0025409639091476363, "phrase": "parsec_benchmarks"}, {"score": 0.002460295872115956, "phrase": "baseline_linux_software"}, {"score": 0.002382182688788248, "phrase": "hypothetical_\"what-if\"_extension"}, {"score": 0.002306543826130521, "phrase": "future_non-volatile_memory_systems"}, {"score": 0.0022696277881969896, "phrase": "almost_no_idle_power"}, {"score": 0.002209406458446019, "phrase": "even_greater_benefits"}, {"score": 0.002127765807039172, "phrase": "memory_hardware_variability"}, {"score": 0.0021049977753042253, "phrase": "opportunistic_software"}], "paper_keywords": ["DRAM", " variability", " energy-aware systems", " main memory", " allocation/deallocation strategies", " operating systems"], "paper_abstract": "Hardware variability is predicted to increase dramatically over the coming years as a consequence of continued technology scaling. In this paper, we apply the Underdesigned and Opportunistic Computing (UnO) paradigm by exposing system-level power variability to software to improve energy efficiency. We present ViPZonE, a memory management solution in conjunction with application annotations that opportunistically performs memory allocations to reduce DRAM energy. ViPZonE's components consist of a physical address space with DIMM-aware zones, a modified page allocation routine, and a new virtual memory system call for dynamic allocations from userspace. We implemented ViPZonE in the Linux kernel with GLIBC API support, running on a real x86-64 testbed with significant access power variation in its DDR3 DIMMs. We demonstrate that on our testbed, ViPZonE can save up to 27.80 percent memory energy, with no more than 4.80 percent performance degradation across a set of PARSEC benchmarks tested with respect to the baseline Linux software. Furthermore, through a hypothetical \"what-if\" extension, we predict that in future non-volatile memory systems which consume almost no idle power, ViPZonE could yield even greater benefits, demonstrating the ability to exploit memory hardware variability through opportunistic software.", "paper_title": "ViPZonE: Hardware Power Variability-Aware Virtual Memory Management for Energy Savings", "paper_id": "WOS:000352491300021"}