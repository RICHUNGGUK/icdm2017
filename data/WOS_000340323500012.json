{"auto_keywords": [{"score": 0.050078387629161586, "phrase": "malicious_adversaries"}, {"score": 0.004524348699657099, "phrase": "linear_equation_problems"}, {"score": 0.004448169552315403, "phrase": "two-party_computation"}, {"score": 0.003689982350051231, "phrase": "secure_linear_system_computation"}, {"score": 0.0035869274480340727, "phrase": "output_x"}, {"score": 0.0028756028995504035, "phrase": "efficient_protocol"}, {"score": 0.002656158309155626, "phrase": "simple_way"}, {"score": 0.002552781867125423, "phrase": "precise_functionality"}, {"score": 0.0022405528759521856, "phrase": "existing_malicious_secure_protocols"}, {"score": 0.0021049977753042253, "phrase": "similar_functions"}], "paper_keywords": ["linear system computation", " noisy coding", " oblivious transfer", " cut-and-choose", " secure two-party computation"], "paper_abstract": "In this paper, we study the system of linear equation problems in the two-party computation setting. Consider that P-1 holds an m x m matrix M-1 and an m-dimensional column vector B-1. Similarly, P-2 holds M-2 and B-2. Via executing a secure linear system computation, P-1 gets the output x (or perpendicular to) conditioned on (M-1 + M-2)x = (B-1 + B-2), and the rank of matrix M-1 + M-2, while P-2 gets nothing. This also can be used to settle other cooperative linear system problems. We firstly design an efficient protocol to solve this problem in the presence of malicious adversaries, then propose a simple way to modify our protocol for having a precise functionality, in which the rank of matrix M-1 + M-2 is not necessary. We note that our protocol is more practical than these existing malicious secure protocols. We also give comparisons with other protocols and extensions to similar functions.", "paper_title": "Secure linear system computation in the presence of malicious adversaries", "paper_id": "WOS:000340323500012"}