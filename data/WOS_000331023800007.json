{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "shared_memory_applications"}, {"score": 0.04922082634695279, "phrase": "cache_coherence_protocols"}, {"score": 0.043344204212477706, "phrase": "parallel_applications"}, {"score": 0.004643839937761046, "phrase": "current_computer_architectures"}, {"score": 0.004560568143816105, "phrase": "communication_performance"}, {"score": 0.004372002674739612, "phrase": "memory_hierarchy"}, {"score": 0.004293584349522444, "phrase": "performance_difference"}, {"score": 0.003898411343926653, "phrase": "shared_memory_paradigm"}, {"score": 0.0035609154384221567, "phrase": "dynamic_mapping"}, {"score": 0.003352256019007896, "phrase": "suitable_mapping"}, {"score": 0.003213489259323921, "phrase": "low_overhead"}, {"score": 0.0029351141718104725, "phrase": "communication_pattern"}, {"score": 0.002508365161206412, "phrase": "operating_system"}, {"score": 0.0024336917123957387, "phrase": "nas_parallel_benchmarks"}, {"score": 0.002318799760022913, "phrase": "execution_time"}, {"score": 0.002143529653780496, "phrase": "invalidation_messages"}], "paper_keywords": ["Thread mapping", " Cache coherence protocols", " Parallel applications", " Shared memory", " Thread communication", " Communication pattern"], "paper_abstract": "In current computer architectures, the communication performance between threads varies depending on the memory hierarchy. This performance difference must be considered when mapping parallel applications to processor cores. In parallel applications based on the shared memory paradigm, the communication is difficult to detect because it is implicit. Furthermore, dynamic mapping introduces several challenges, since it needs to find a suitable mapping and migrate the threads with a low overhead during the execution of the application. We propose a mechanism to detect the communication pattern of shared memory applications by monitoring cache coherence protocols. We also propose heuristics that, combined with our communication detection mechanism, allow the mapping to be performed dynamically by the Operating system. Experiments with the NAS Parallel Benchmarks showed a reduction of up to 13.9% of the execution time, 30.5% of the cache misses and 39.4% of the number of invalidation messages. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "Dynamic thread mapping of shared memory applications by exploiting cache coherence protocols", "paper_id": "WOS:000331023800007"}