{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "huffman_codes"}, {"score": 0.041480729810386266, "phrase": "random_access_capabilities"}, {"score": 0.03225203218189473, "phrase": "dense_codes"}, {"score": 0.0046240999614456605, "phrase": "source_symbols"}, {"score": 0.004440780432053927, "phrase": "natural_language_text_databases"}, {"score": 0.004191377834552202, "phrase": "et_al"}, {"score": 0.004001938457469328, "phrase": "compressed_text"}, {"score": 0.0037121208432871118, "phrase": "end-tagged_dense_code"}, {"score": 0.0034036089823450385, "phrase": "natural_language_texts"}, {"score": 0.003306559295382181, "phrase": "simpler_and_faster_encoding_and_obtain_better_compression_ratios_than_tagged_huffman_code"}, {"score": 0.0030141556259370675, "phrase": "tagged_huffman_code_compression_ratio"}, {"score": 0.002877769867854964, "phrase": "optimal_huffman_compression_ratio"}, {"score": 0.0026384167183586015, "phrase": "dense_codes_a_very_attractive_alternative"}, {"score": 0.002608057770073541, "phrase": "huffman"}, {"score": 0.002363532907211947, "phrase": "almost_optimal_size"}, {"score": 0.0022176487309947266, "phrase": "best_huffman_variants"}, {"score": 0.0021049977753042253, "phrase": "optimal_size"}], "paper_keywords": ["text databases", " natural language text compression", " searching compressed text"], "paper_abstract": "Variants of Huffman codes where words are taken as the source symbols are currently the most attractive choices to compress natural language text databases. In particular, Tagged Huffman Code by Moura et al. offers fast direct searching on the compressed text and random access capabilities, in exchange for producing around 11% larger compressed files. This work describes End-Tagged Dense Code and (s,c)-Dense Code, two new semistatic statistical methods for compressing natural language texts. These techniques permit simpler and faster encoding and obtain better compression ratios than Tagged Huffman Code, while maintaining its fast direct search and random access capabilities. We show that Dense Codes improve Tagged Huffman Code compression ratio by about 10%, reaching only 0.6% overhead over the optimal Huffman compression ratio. Being simpler, Dense Codes are generated 45% to 60% faster than Huffman codes. This makes Dense Codes a very attractive alternative to Huffman code variants for various reasons: they are simpler to program, faster to build, of almost optimal size, and as fast and easy to search as the best Huffman variants, which are not so close to the optimal size.", "paper_title": "Lightweight natural language text compression", "paper_id": "WOS:000242442100001"}