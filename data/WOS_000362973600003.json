{"auto_keywords": [{"score": 0.04359354986608517, "phrase": "spt"}, {"score": 0.030076107016876397, "phrase": "time_algorithm"}, {"score": 0.00475382761232911, "phrase": "shortest_paths_tree"}, {"score": 0.004459605573798577, "phrase": "single-source_shortest_paths_tree"}, {"score": 0.004291848822287492, "phrase": "arbitrary_vertex"}, {"score": 0.0037928847801943404, "phrase": "single_non-tree_edge"}, {"score": 0.0035883942463601688, "phrase": "set-up_and_computational_costs"}, {"score": 0.0034532961266947734, "phrase": "new_optimal_spt"}, {"score": 0.003239304090565123, "phrase": "best_possible_swap_edge"}, {"score": 0.003130633384437765, "phrase": "arguably_the_two_most_significant_measures"}, {"score": 0.003025597247856977, "phrase": "average_distance"}, {"score": 0.0029491324941225356, "phrase": "disconnected_vertices"}, {"score": 0.002899229492461335, "phrase": "former_criteria"}, {"score": 0.002742787059497186, "phrase": "ackermann_function"}, {"score": 0.00268488398249084, "phrase": "best_swap_edge"}, {"score": 0.002550842302473891, "phrase": "previous_time_algorithm"}, {"score": 0.0025076619172878945, "phrase": "latter_criteria"}, {"score": 0.0024234763342790852, "phrase": "special_but_important_case"}, {"score": 0.002225143304518447, "phrase": "fastest_algorithm"}, {"score": 0.002187464225869713, "phrase": "weighted_case"}, {"score": 0.0021049977753042253, "phrase": "unweighted_case"}], "paper_keywords": ["Single-source shortest paths tree", " Edge fault tolerance", " Swap algorithms"], "paper_abstract": "We consider a two-edge connected, non-negatively real-weighted graph G with n vertices and m edges, and a single-source shortest paths tree (SPT) of G rooted at an arbitrary vertex. If an edge of the SPT is temporarily removed, a widely recognized approach to reconnect the vertices disconnected from the root consists of joining the two resulting subtrees by means of a single non-tree edge, called a swap edge. This allows to reduce consistently the set-up and computational costs which are incurred if one instead rebuilds a new optimal SPT from scratch. In the past, several optimality criteria have been considered to select a best possible swap edge, and here we restrict our attention to arguably the two most significant measures: the minimization of either the maximum or the average distance between the root and the disconnected vertices. For the former criteria, we present an time algorithm-where is the inverse of the Ackermann function-to find a best swap edge for every edge of the SPT, thus improving onto the previous time algorithm. Concerning the latter criteria, we provide an time algorithm for the special but important case where G is unweighted, which compares favourably with the time bound that one would get by using the fastest algorithm known for the weighted case-once this is suitably adapted to the unweighted case.", "paper_title": "A Faster Computation of All the Best Swap Edges of a Shortest Paths Tree", "paper_id": "WOS:000362973600003"}