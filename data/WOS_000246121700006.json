{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "cancellation_regions"}, {"score": 0.01397067871055639, "phrase": "yawl"}, {"score": 0.013378645986075268, "phrase": "advanced_constructs"}, {"score": 0.01286194932958543, "phrase": "verification_approach"}, {"score": 0.010070938155986827, "phrase": "or-join_semantics"}, {"score": 0.004664352260912174, "phrase": "relaxed_soundness"}, {"score": 0.00446490613141384, "phrase": "current_workflow_practice"}, {"score": 0.004189863767755212, "phrase": "control-flow_details"}, {"score": 0.0037336520904376687, "phrase": "workflow_language"}, {"score": 0.0036456298076415652, "phrase": "yawl."}, {"score": 0.003531474887552889, "phrase": "non-local'_properties"}, {"score": 0.0033668870709083884, "phrase": "desired_final_state"}, {"score": 0.002316105585203396, "phrase": "structural_properties"}, {"score": 0.0021992603252793995, "phrase": "yawl_models"}], "paper_keywords": ["workflow management", " process models", " formal methods", " Petri nets", " patterns", " invariants"], "paper_abstract": "YAWL (Yet Another Workflow Language) workflow language supports the most frequent control-flow patterns found in the current workflow practice. As a result, most workflow languages can be mapped onto YAWL without the loss of control-flow details, even languages allowing for advanced constructs such as cancellation regions and OR-joins. Hence, a verification approach for YAWL is desirable, because such an approach could be used for any workflow language that can be mapped onto YAWL. Unfortunately, cancellation regions and OR-joins are 'non-local' properties, and in general we cannot even decide whether the desired final state is reachable if both patterns are present. This paper proposes a verification approach based on (i) an abstraction of the OR-join semantics; (ii) the relaxed soundness property; and (iii) transition invariants. This approach is correct (errors reported are really errors), but not necessarily complete (not every error might get reported). This incompleteness can be explained because, on the one hand, the approach abstracts from the OR-join semantics and on the other hand, it may use only transition invariants, which are structural properties. Nevertheless, our approach can be used to successfully detect errors in YAWL models. Moreover, the approach can be easily transferred to other workflow languages allowing for advanced constructs such as cancellations and OR-joins.", "paper_title": "Verifying workflows with cancellation regions and OR-joins: An approach based on relaxed soundness and invariants", "paper_id": "WOS:000246121700006"}