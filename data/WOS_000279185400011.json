{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "precedence_task_graphs"}, {"score": 0.032604320386754426, "phrase": "fixed_number"}, {"score": 0.004767546015485477, "phrase": "heterogeneous_platforms"}, {"score": 0.0046741260449047976, "phrase": "fault_tolerance"}, {"score": 0.004582528208024817, "phrase": "important_requirements"}, {"score": 0.0038919354605673104, "phrase": "fault-tolerant_scheduling_heuristic"}, {"score": 0.0037967593942595233, "phrase": "heterogeneous_systems"}, {"score": 0.003667395956878177, "phrase": "active_replication_scheme"}, {"score": 0.0033879628186273625, "phrase": "epsilon_processors"}, {"score": 0.0032563083791198534, "phrase": "bi-criteria_approach"}, {"score": 0.002579622880371082, "phrase": "overall_reliability"}, {"score": 0.0025541693207036167, "phrase": "major_achievements"}, {"score": 0.0025289662786567896, "phrase": "low_complexity"}, {"score": 0.0024916260764216752, "phrase": "new_algorithms"}, {"score": 0.002442693254693416, "phrase": "drastic_reduction"}, {"score": 0.0023828731731474306, "phrase": "additional_communications"}, {"score": 0.002336071138145897, "phrase": "replication_mechanism"}, {"score": 0.0023130151703068444, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "algorithm_ftbar."}], "paper_keywords": ["scheduling", " fault tolerance", " heterogeneous platforms", " task graphs"], "paper_abstract": "Latency, fault tolerance and reliability are important requirements for several applications that are time critical in nature: such applications require guarantees in terms of latency, even when processors are subject to failures. In this paper, we propose a fault-tolerant scheduling heuristic for mapping precedence task graphs on heterogeneous systems. Our approach is based on an active replication scheme, capable of supporting epsilon arbitrary fail-silent/fail-stop processor failures, and hence valid results will be provided even if epsilon processors fail. First we focus on a bi-criteria approach, where we aim at minimizing the latency given a fixed number of failures supported in the system, or the other way round. Next we derive a more complex algorithm in which we not only minimize latency and support a fixed number of failures, but also improve the overall reliability. Major achievements include low complexity of the new algorithms, and a drastic reduction of the number of additional communications induced by the replication mechanism. Experimental results demonstrate that our heuristics, despite their lower complexity, outperform their direct competitor, the fault-tolerance based active replication scheduling algorithm FTBAR.", "paper_title": "Multi-criteria Scheduling of Precedence Task Graphs on Heterogeneous Platforms", "paper_id": "WOS:000279185400011"}