{"auto_keywords": [{"score": 0.03152938003499141, "phrase": "metagol"}, {"score": 0.009398851241586974, "phrase": "predicate_invention"}, {"score": 0.005983577867994723, "phrase": "anot_signh"}, {"score": 0.00481495049065317, "phrase": "grammatical_inference"}, {"score": 0.004782977628406988, "phrase": "early_interest"}, {"score": 0.004688321697182666, "phrase": "ilp."}, {"score": 0.004595529592539951, "phrase": "recursive_generalisations"}, {"score": 0.004563996350991885, "phrase": "mc-toplog"}, {"score": 0.004425215632459868, "phrase": "previously_unexplored_case"}, {"score": 0.004405596416783185, "phrase": "inverse_entailment_for_grammatical_inference"}, {"score": 0.004386063799793622, "phrase": "regular_languages"}, {"score": 0.004356926418550194, "phrase": "abduced_grammar_h"}, {"score": 0.004289686492089576, "phrase": "existentially_quantified_atomic_formulae"}, {"score": 0.004232875294230749, "phrase": "universally_quantified_clause"}, {"score": 0.0042038199760504324, "phrase": "running_time"}, {"score": 0.004176813329075736, "phrase": "hypothesis_space"}, {"score": 0.003968675046544738, "phrase": "higher-order_datalog"}, {"score": 0.003942299471749811, "phrase": "atomic_formulae"}, {"score": 0.0038900709793274484, "phrase": "first-order_definite_clause_grammar_rules"}, {"score": 0.003813017794036879, "phrase": "first-order_predicate_symbols"}, {"score": 0.003712640297460159, "phrase": "first-order_variables"}, {"score": 0.0036715990859486807, "phrase": "inoue"}, {"score": 0.0036553077563301513, "phrase": "furukawa"}, {"score": 0.0036229421570951807, "phrase": "meta-level_reasoning"}, {"score": 0.0035354034517274284, "phrase": "present_paper"}, {"score": 0.0034963129868796033, "phrase": "meta-interpretive_framework"}, {"score": 0.003403572202671926, "phrase": "cf"}, {"score": 0.003380857787196692, "phrase": "context-free"}, {"score": 0.0032633902369733386, "phrase": "ilp"}, {"score": 0.0031915982704003964, "phrase": "context-free_grammars"}, {"score": 0.0031562971707460802, "phrase": "simplified_natural_language_grammar"}, {"score": 0.0031353036152787206, "phrase": "grammatical_description"}, {"score": 0.003073154478201771, "phrase": "randomly_chosen_grammars"}, {"score": 0.003039159447717346, "phrase": "significantly_higher_accuracies"}, {"score": 0.002900426826591769, "phrase": "prolog_implementation"}, {"score": 0.002817728036126296, "phrase": "strong_procedural_bias"}, {"score": 0.0027865531065047514, "phrase": "mil"}, {"score": 0.0027495914857929584, "phrase": "natural_grammars"}, {"score": 0.002689076130099546, "phrase": "available_background_knowledge"}, {"score": 0.002572001496778222, "phrase": "speed_advantage"}, {"score": 0.0025492038831408715, "phrase": "background_knowledge"}, {"score": 0.0024490834773668153, "phrase": "regular_grammar_meta-interpreter"}, {"score": 0.0021813468057043446, "phrase": "rcf"}, {"score": 0.0021049977753042253, "phrase": "regular_and_non-regular_context-free_grammars"}], "paper_keywords": ["Inductive logic programming", " Meta-interpretative learning", " Predicate invention", " Recursion", " Grammatical inference"], "paper_abstract": "Despite early interest Predicate Invention has lately been under-explored within ILP. We develop a framework in which predicate invention and recursive generalisations are implemented using abduction with respect to a meta-interpreter. The approach is based on a previously unexplored case of Inverse Entailment for Grammatical Inference of Regular languages. Every abduced grammar H is represented by a conjunction of existentially quantified atomic formulae. Thus Anot signH is a universally quantified clause representing a denial. The hypothesis space of solutions for Anot signH can be ordered by theta-subsumption. We show that the representation can be mapped to a fragment of Higher-Order Datalog in which atomic formulae in H are projections of first-order definite clause grammar rules and the existentially quantified variables are projections of first-order predicate symbols. This allows predicate invention to be effected by the introduction of first-order variables. Previous work by Inoue and Furukawa used abduction and meta-level reasoning to invent predicates representing propositions. By contrast, the present paper uses abduction with a meta-interpretive framework to invent relations. We describe the implementations of Meta-interpretive Learning (MIL) using two different declarative representations: Prolog and Answer Set Programming (ASP). We compare these implementations against a state-of-the-art ILP system MC-TopLog using the dataset of learning Regular and Context-Free grammars as well learning a simplified natural language grammar and a grammatical description of a staircase. Experiments indicate that on randomly chosen grammars, the two implementations have significantly higher accuracies than MC-TopLog. In terms of running time, Metagol is overall fastest in these tasks. Experiments indicate that the Prolog implementation is competitive with the ASP one due to its ability to encode a strong procedural bias. We demonstrate that MIL can be applied to learning natural grammars. In this case experiments indicate that increasing the available background knowledge, reduces the running time. Additionally ASP(M) (ASP using a meta-interpreter) is shown to have a speed advantage over Metagol when background knowledge is sparse. We also demonstrate that by combining Metagol (R) (Metagol with a Regular grammar meta-interpreter) and Metagol (CF) (Context-Free meta-interpreter) we can formulate a system, Metagol (RCF) , which can change representation by firstly assuming the target to be Regular, and then failing this, switch to assuming it to be Context-Free. Metagol (RCF) runs up to 100 times faster than Metagol (CF) on grammars chosen randomly from Regular and non-Regular Context-Free grammars.", "paper_title": "Meta-interpretive learning: application to grammatical inference", "paper_id": "WOS:000328838500003"}