{"auto_keywords": [{"score": 0.046820053931235624, "phrase": "mobile_agent"}, {"score": 0.01285284114937183, "phrase": "mobile-agent_security"}, {"score": 0.008713768692145006, "phrase": "secure_mobile-agent_system"}, {"score": 0.008579091154362709, "phrase": "mobile-agent_technology"}, {"score": 0.0068609814163797635, "phrase": "mobile-agent_system"}, {"score": 0.004765016982888318, "phrase": "recently_emerging_distributed_computing_paradigm"}, {"score": 0.004582313626518448, "phrase": "significant_security_concerns"}, {"score": 0.0045229755926389, "phrase": "security_problems"}, {"score": 0.004429621750338152, "phrase": "primary_importance"}, {"score": 0.004248630241580105, "phrase": "security_measures"}, {"score": 0.004215523385221752, "phrase": "traditional_client-server_system"}, {"score": 0.0041719395943253905, "phrase": "simulation-based_analysis"}, {"score": 0.004022208421631594, "phrase": "traditional_client-server_systems"}, {"score": 0.003980463173701481, "phrase": "new_area"}, {"score": 0.0038177536203992278, "phrase": "security_areas"}, {"score": 0.003709751172350134, "phrase": "protection_or_detection_mechanisms"}, {"score": 0.003595399348262267, "phrase": "intuitive_formal_approach"}, {"score": 0.0035027939300676875, "phrase": "security_consideration"}, {"score": 0.0033507875035075465, "phrase": "original_elementary_object_system"}, {"score": 0.003290124141902108, "phrase": "object-oriented_technology"}, {"score": 0.0032730009884429914, "phrase": "petri"}, {"score": 0.003213734178137277, "phrase": "original_eos"}, {"score": 0.0030822692474860823, "phrase": "extended_eos"}, {"score": 0.0030185612970938724, "phrase": "formal_model"}, {"score": 0.002995010750692558, "phrase": "generic_secure_mobile-agent_system"}, {"score": 0.0029331010547170187, "phrase": "secure_mobility"}, {"score": 0.0028950571578012195, "phrase": "mutual_authentication"}, {"score": 0.0027838524522031034, "phrase": "security_mechanism"}, {"score": 0.0027334248520330803, "phrase": "malicious_platform_attacks"}, {"score": 0.0027191850147812767, "phrase": "mobile-agent_code"}, {"score": 0.0026769078650806283, "phrase": "mobile-agent_execution"}, {"score": 0.002649087935300194, "phrase": "intuitively_graphical_formal_method"}, {"score": 0.0024622581232640705, "phrase": "colored_petri_net"}, {"score": 0.0023925099075057933, "phrase": "sample_mobile-agent_system_model"}, {"score": 0.002361461161578124, "phrase": "mathematical_or_theorem-proving_analysis_methods"}, {"score": 0.0021049977753042253, "phrase": "real_problems"}], "paper_keywords": ["extended elementary object system (EEOS)", " formal method", " mobile agent", " Petri nets", " security"], "paper_abstract": "As a recently emerging distributed computing paradigm, mobile-agent technology attracts great interests because of its salient merits. However, it also brings significant security concerns, among which the security problems between a mobile agent and its platforms are of primary importance. While protecting a platform (platform or host security) can benefit from the security measures in a traditional client-server system, protecting a mobile agent (mobile-agent or code security) has not been met in traditional client-server systems and is a new area emerging with mobile-agent technology. Mobile-agent security is also believed to be the most difficult in the security areas of a mobile-agent system. Several methods are proposed to provide protection or detection mechanisms for mobile-agent security. However, many of them either lack an intuitive formal approach to formally model and analyze the system or lack security consideration for mobility-the most distinct characteristic of a mobile agent. In this paper, we extended the original elementary object system (EOS), which applies object-oriented technology to Petri nets, in several aspects because the original EOS cannot fully support the features of mobile-agent system and security modeling. Based on the extended EOS (EEOS), we developed a formal model for a generic secure mobile-agent system. This model supports not only strong mobility but also secure mobility of a mobile agent. Mutual authentication between a mobile agent and its hosting platform is accomplished in this model. Meanwhile, a security mechanism is presented for the detection of malicious platform attacks to mobile-agent code or execution flow during the mobile-agent execution. Using an intuitively graphical formal method to model, simulate, and analyze a secure mobile-agent system distinguishes this paper from other works on mobile-agent security. This paper also introduces how to translate our EEOS model to a colored Petri net (CPN) model and presents the simulation of a sample mobile-agent system model in Design/CPN. Different from the mathematical or theorem-proving analysis methods used by other mobile-agent system and mobility models, we used simulation-based analysis to verify several characteristics including boundedness, liveness, concurrence, and security of the system. Compared with other analysis methods, simulation-based analysis is generally more intuitive and more widely used in industry to solve real problems.", "paper_title": "Formal modeling and analysis of a secure mobile-agent system", "paper_id": "WOS:000251974500017"}