{"auto_keywords": [{"score": 0.034474914297590295, "phrase": "clocked_guarded_actions"}, {"score": 0.004551781491498328, "phrase": "embedded_systems"}, {"score": 0.004278807087784626, "phrase": "different_models"}, {"score": 0.004044822781630218, "phrase": "clock-driven_paradigms"}, {"score": 0.003888659470009222, "phrase": "clear_notion"}, {"score": 0.0035941231858949035, "phrase": "mainly_co-simulation"}, {"score": 0.0035339597999254064, "phrase": "different_simulators"}, {"score": 0.0032115093493071366, "phrase": "unique_intermediate_representation"}, {"score": 0.003087419032091453, "phrase": "common_basis"}, {"score": 0.002607527117561699, "phrase": "rather_different_models"}, {"score": 0.0025208755851561368, "phrase": "unique_and_composable_intermediate_representation"}, {"score": 0.0022396019251440724, "phrase": "guarded_actions"}, {"score": 0.0021529842700733974, "phrase": "symbolic_model_checking"}, {"score": 0.002104998715788783, "phrase": "systemc."}], "paper_keywords": ["Models of computation", " Co-simulation", " Synchronous vs. asynchronous models", " Guarded command language"], "paper_abstract": "For the design of embedded systems, many languages are in use, which are based on different models of computation such as event-, data-, and clock-driven paradigms as well as paradigms without a clear notion of time. Systems composed of such heterogeneous components are hard to analyze so that mainly co-simulation by coupling different simulators has been considered so-far. In this article, we propose clocked guarded actions as a unique intermediate representation that can be used as a common basis for simulation, analysis, and synthesis. We show how synchronous, (untimed) asynchronous, and polychronous languages can be translated to clocked guarded actions to demonstrate that our intermediate representation is powerful enough to capture rather different models of computation. Having a unique and composable intermediate representation of these components at hand allows one a simple composition of these components. Moreover, we show how clocked guarded actions can be used for verification by symbolic model checking and simulation by SystemC.", "paper_title": "Representation of synchronous, asynchronous, and polychronous components by clocked guarded actions", "paper_id": "WOS:000353217000005"}