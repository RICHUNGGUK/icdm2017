{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "electron_density"}, {"score": 0.009447147567284136, "phrase": "vector_fields"}, {"score": 0.008753874696900584, "phrase": "critical_points"}, {"score": 0.0062274295410724165, "phrase": "bond_paths"}, {"score": 0.0055061907071191785, "phrase": "implemented_fields"}, {"score": 0.005329305146381511, "phrase": "non-parallel_compilation"}, {"score": 0.004996975660794911, "phrase": "distributed_program"}, {"score": 0.004983003895186819, "phrase": "test_data"}, {"score": 0.004739141126638588, "phrase": "molecular_electron_density"}, {"score": 0.004695103516280934, "phrase": "scalar_and_vector_fields"}, {"score": 0.0046341342871007865, "phrase": "electron_localization_function"}, {"score": 0.0046254907347750285, "phrase": "elf"}, {"score": 0.004603945840067339, "phrase": "localized_orbital_locator"}, {"score": 0.004573953147933065, "phrase": "slow_electrons"}, {"score": 0.004548399977508615, "phrase": "density_gradient"}, {"score": 0.004398037973364465, "phrase": "quantum_theory_of_atoms"}, {"score": 0.004390338114968643, "phrase": "molecules"}, {"score": 0.004376547172474334, "phrase": "reactivity_indices"}, {"score": 0.00436530211426514, "phrase": "momentum_space_electron_density"}, {"score": 0.004336857308036006, "phrase": "reduced_density_matrix"}, {"score": 0.00428451995524549, "phrase": "source_code"}, {"score": 0.004213089545319859, "phrase": "open-source_collaborative_project"}, {"score": 0.004193459068067593, "phrase": "denstoolkit's_code"}, {"score": 0.00416223958248046, "phrase": "object-oriented_program"}, {"score": 0.004119690370815368, "phrase": "simple_manner"}, {"score": 0.003931679695407607, "phrase": "mathematical_definitions"}, {"score": 0.003755724960668333, "phrase": "similar_times"}, {"score": 0.003727752120885826, "phrase": "commercial_package"}, {"score": 0.003693077786271373, "phrase": "future_development"}, {"score": 0.003662439148862466, "phrase": "program"}, {"score": 0.0036518924993784686, "phrase": "denstoolkit_catalogue"}, {"score": 0.003628079411881511, "phrase": "cpc_program_library"}, {"score": 0.0036213041338584756, "phrase": "queen's_university"}, {"score": 0.003614541539253268, "phrase": "belfast"}, {"score": 0.0036077913744250387, "phrase": "n._ireland"}, {"score": 0.0035943303825815226, "phrase": "gnu"}, {"score": 0.003587616378156851, "phrase": "general_public_license"}, {"score": 0.003472149546470424, "phrase": "tar.gz_programming_language"}, {"score": 0.0034302226447881948, "phrase": "linux"}, {"score": 0.0034174447714965233, "phrase": "windows"}, {"score": 0.0033919477901198716, "phrase": "memory_requirements"}, {"score": 0.0032009253178715735, "phrase": "external_routines"}, {"score": 0.0030747771905143273, "phrase": "chemical_nature"}, {"score": 0.0030009187827403443, "phrase": "better_understanding"}, {"score": 0.002992511295434869, "phrase": "chemical_bond"}, {"score": 0.0029785509715678877, "phrase": "molecular_topological_properties"}, {"score": 0.0029646555801624563, "phrase": "molecular_design"}, {"score": 0.0028907297673652836, "phrase": "wavefunction_file"}, {"score": 0.0028611414387729453, "phrase": "nwchem"}, {"score": 0.0028557943999322397, "phrase": "molpro"}, {"score": 0.0028133741785871867, "phrase": "mathematically_standard"}, {"score": 0.0028002471976921054, "phrase": "parallelized_algorithms"}, {"score": 0.002789789602904547, "phrase": "density_matrix"}, {"score": 0.0027483472371835865, "phrase": "spatial_grids"}, {"score": 0.002738082931935862, "phrase": "topology_analysis"}, {"score": 0.002715127805841093, "phrase": "popelier"}, {"score": 0.0026598200370569433, "phrase": "fifth-order_runge-kutta-dormand-prince_algorithm"}, {"score": 0.0026449320842690718, "phrase": "produced_data"}, {"score": 0.0025741370320813968, "phrase": "open_door"}, {"score": 0.002559727446440353, "phrase": "new_scalar_or_vector_fields"}, {"score": 0.0025525528528307687, "phrase": "almost_complete_functionality"}, {"score": 0.0024865497929024726, "phrase": "wfx_format"}, {"score": 0.002477260798809435, "phrase": "current_version"}, {"score": 0.002451898125938455, "phrase": "edf"}, {"score": 0.002440449691307889, "phrase": "wfx_file"}, {"score": 0.002415459080723135, "phrase": "pseudopotential_support"}, {"score": 0.0023907237648435856, "phrase": "simple_method"}, {"score": 0.002384021735066087, "phrase": "new_indices"}, {"score": 0.00234639607833924, "phrase": "final_user"}, {"score": 0.00232889545721839, "phrase": "vector_field"}, {"score": 0.0022601856240572014, "phrase": "evaluated_number"}, {"score": 0.0022203500288703443, "phrase": "small_molecules"}, {"score": 0.0022058510091498666, "phrase": "typical_running_times"}, {"score": 0.002181214998040383, "phrase": "commercial_or_freely_available_codes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Electron density", " Quantum Theory of Atoms in Molecules", " Spatial grids", " Momentum space", " Reactivity indices", " Reduced density matrix of order one"], "paper_abstract": "DensToolKit is a suite of cross-platform, optionally parallelized, programs for analyzing the molecular electron density (p) and several fields derived from it. Scalar and vector fields, such as the gradient of the electron density (del rho), electron localization function (ELF) and its gradient, localized orbital locator (LOL), region of slow electrons (RoSE), reduced density gradient, localized electrons detector (LED), information entropy, molecular electrostatic potential, kinetic energy densities K and G, among others, can be evaluated on zero, one, two, and three dimensional grids. The suite includes a program for searching critical points and bond paths of the electron density, under the framework of Quantum Theory of Atoms in Molecules. DensToolKit also evaluates the momentum space electron density on spatial grids, and the reduced density matrix of order one along lines joining two arbitrary atoms of a molecule. The source code is distributed under the GNU-GPLv3 license, and we release the code with the intent of establishing an open-source collaborative project. The style of DensToolKit's code follows some of the guidelines of an object-oriented program. This allows us to supply the user with a simple manner for easily implement new scalar or vector fields, provided they are derived from any of the fields already implemented in the code. In this paper, we present some of the most salient features of the programs contained in the suite, some examples of how to run them, and the mathematical definitions of the implemented fields along with hints of how we optimized their evaluation. We benchmarked our suite against both a freely-available program and a commercial package. Speed-ups of similar to 2x, and up to 12x were obtained using a non-parallel compilation of DensToolKit for the evaluation of fields. DensToolKit takes similar times for finding critical points, compared to a commercial package. Finally, we present some perspectives for the future development and growth of the suite. Program summary Program title: DensToolKit Catalogue identifier: AEXI_v1_0 Program summary RL:http://cpc.cs.qub.ac.uk/summaries/AEXI_v1_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU, General Public License, version 3 No. of lines in distributed program, including test data, etc.: 142037 No. of bytes in distributed program, including test data, etc.: 5517409 Distribution format: tar.gz Programming language: C++, bash. Computer: Any. Operating system: Linux, MacOSX, Windows (cygwin). RAM: The memory requirements grow quadratically with the number of primitives describing the wavefunction. A wavefunction with 1,500 primitives uses similar to 17MB, and 2GB RAM are enough to process wavefunctions of around 10,000 primitives. A few more MB may be needed by some of the most demanding programs of the package if the number of primitives is large. Classification: 6.5, 7.3, 16, 16.1. External routines: (optional) gnuplot, povray, epstool, Graphics-Magick, epstopdf Nature of problem: The study of the electron density of molecules, some reactivity indices, and the topology of the electron density can be used to analyze the chemical nature, stability and reactivity of those molecules. Furthermore, the study of the electron density and functionals of it may help us in gaining a better understanding of the chemical bond. Reactivity indices and the molecular topological properties may also aid in molecular design. Solution method: The suite provides several programs in order to compute scalar and vector fields derivatives of the electron density. Those fields are obtained from a wavefunction file, which is in turn obtained from programs such as Nwchem, MolPro, etc. The functions, whereby the fields are computed, are implemented following mathematically standard but computationally optimized and parallelized algorithms built upon the Density Matrix. The suite provides several small but efficient programs, easily scriptable, for evaluation of the fields upon spatial grids. Regarding the topology analysis, the suite uses the algorithm proposed by Popelier, which uses the eigen-values of the Hessian of the electron density for locating the critical points. Bond paths are traced using a fifth-order Runge-Kutta-Dormand-Prince algorithm. Optional visualization of the produced data can be carried out by scripts generated by the suite, which can be parsed later to gnuplot, or povray. In addition, DensToolKit provides an open door for the user to program new scalar or vector fields, with almost complete functionality for evaluating such fields upon the same spatial grids as those implemented for the fields already provided in the suite. Restrictions: Wavefunctions with more than 99 nuclei must be input in wfx format. In the current version, wavefunctions that use pseudopotentials must have only one Additional Electron Density Function (EDF) entry in the wfx file, which in this case is the only accepted input format, and pseudopotential support is provided only in non-parallel compilation. Additional comments: A simple method for implementing new indices (derived from any of the implemented fields) is provided. In this manner, the final user may easily program his/her own scalar or vector field with a few code lines. Running time: Strongly dependent on the number of primitives used for approximating the wavefunction (similar to N-p(2)). It also depends on the evaluated number of points and type of field. Wavefunctions comprised of 1,500 primitives may take several hours to complete, while small molecules described by two or three hundred primitives take a few seconds. Typical running times are at least as fast as the times taken by some commercial or freely available codes. In many cases, the programs perform the computations with a speed-up of 2x (with respect to other available programs), and in some cases 10 x speed-ups or more can be attained. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "DensToolKit: A comprehensive open-source package for analyzing the electron density and its derivative scalar and vector fields", "paper_id": "WOS:000362602900033"}