{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "hybrid_load"}, {"score": 0.048799520930917564, "phrase": "grid_computing"}, {"score": 0.032550387777267584, "phrase": "load_assignment"}, {"score": 0.004728780808284175, "phrase": "grid_computing_system"}, {"score": 0.004581660953729745, "phrase": "distributed_systems"}, {"score": 0.0045200127552893704, "phrase": "technological_advancements"}, {"score": 0.00447937340641839, "phrase": "network_popularity"}, {"score": 0.00439918275666155, "phrase": "distributed_applications"}, {"score": 0.004339979174946844, "phrase": "available_idle_network_computing_resources"}, {"score": 0.004110993414942228, "phrase": "efficient_integration"}, {"score": 0.003965061486705487, "phrase": "abundant_computing_resources"}, {"score": 0.00391167729353583, "phrase": "complicated_problems"}, {"score": 0.0038590090616766434, "phrase": "single_machine"}, {"score": 0.003738847528809348, "phrase": "grid_computing_mines_resources"}, {"score": 0.0037052054802048707, "phrase": "accessible_idle_nodes"}, {"score": 0.003671865026158296, "phrase": "node_accessibility"}, {"score": 0.0032061793819537633, "phrase": "node_selection"}, {"score": 0.0031629800646754505, "phrase": "effective_and_sufficient_resources"}, {"score": 0.0031203609829058587, "phrase": "long_period"}, {"score": 0.0029289191071848403, "phrase": "static_and_dynamic_load_balancing_technologies"}, {"score": 0.0028634235895823594, "phrase": "static_load"}, {"score": 0.0027741761880779535, "phrase": "effective_and_suitable_node_sets"}, {"score": 0.002699889709390707, "phrase": "unbalanced_load_probability"}, {"score": 0.002627587221594597, "phrase": "ineffective_nodes"}, {"score": 0.0025456716198597627, "phrase": "possible_inability"}, {"score": 0.002466303439899648, "phrase": "dynamic_load"}, {"score": 0.002232579371411544, "phrase": "new_replacement_node"}, {"score": 0.002202469129781332, "phrase": "short_time"}, {"score": 0.002162951519368368, "phrase": "system_execution_performance"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Grid computing", " Task scheduling", " Load balancing", " Distributed system"], "paper_abstract": "Grid computing has become conventional in distributed systems due to technological advancements and network popularity. Grid computing facilitates distributed applications by integrating available idle network computing resources into formidable computing power. As a result, by using efficient integration and sharing of resources, this enables abundant computing resources to solve complicated problems that a single machine cannot manage. However, grid computing mines resources from accessible idle nodes and node accessibility varies with time. A node that is currently idle, may become occupied within a second of time and then be unavailable to provide resources. Accordingly, node selection must provide effective and sufficient resources over a long period to allow load assignment. This study proposes a hybrid load balancing policy to integrate static and dynamic load balancing technologies. Essentially, a static load balancing policy is applied to select effective and suitable node sets. This will lower the unbalanced load probability caused by assigning tasks to ineffective nodes. When a node reveals the possible inability to continue providing resources. the dynamic load balancing policy will determine whether the node in question is ineffective to provide load assignment. The system will then obtain a new replacement node within a short time, to maintain system execution performance. (C) 2009 Elsevier Ltd. All rights reserved.", "paper_title": "Towards a hybrid load balancing policy in grid computing system", "paper_id": "WOS:000270646200008"}