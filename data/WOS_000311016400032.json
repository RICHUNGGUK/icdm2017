{"auto_keywords": [{"score": 0.049814160273841765, "phrase": "encrypted_character_strings"}, {"score": 0.02322730111336098, "phrase": "sql_queries"}, {"score": 0.016374953577939614, "phrase": "database_service_provider"}, {"score": 0.010043078418018742, "phrase": "service\"_model"}, {"score": 0.008347440211452449, "phrase": "encrypted_data"}, {"score": 0.007052161558197704, "phrase": "character_strings"}, {"score": 0.006728175166605481, "phrase": "characteristic_index_values"}, {"score": 0.004748667236545639, "phrase": "database-as-service_model"}, {"score": 0.004670325028652672, "phrase": "networking_technologies"}, {"score": 0.004530023871441992, "phrase": "enterprise_computing"}, {"score": 0.004406121974246201, "phrase": "key_industries"}, {"score": 0.004309434349688514, "phrase": "users_power"}, {"score": 0.00396530196547293, "phrase": "current_enterprise_data_management_systems"}, {"score": 0.0038567860860362745, "phrase": "essential_issue"}, {"score": 0.003730465168354817, "phrase": "data_security"}, {"score": 0.003668859054928118, "phrase": "sensitive_data"}, {"score": 0.0036384371764476386, "phrase": "trusted_client's_site"}, {"score": 0.0035684266744407485, "phrase": "non-trusted_database_service_provider's_site"}, {"score": 0.002962674479070391, "phrase": "additional_field"}, {"score": 0.0028655540648929996, "phrase": "coarse_query"}, {"score": 0.0028417741269408194, "phrase": "characteristic_index_fields"}, {"score": 0.0027106909015979026, "phrase": "querying_conditions"}, {"score": 0.002651108625422228, "phrase": "rest_tuples"}, {"score": 0.002621809123168788, "phrase": "refined_query"}, {"score": 0.0025784643306443274, "phrase": "client_site"}, {"score": 0.0025217811081981174, "phrase": "n-phase_reachability_matrix"}, {"score": 0.002359081558986726, "phrase": "sql_query"}, {"score": 0.002333001929659445, "phrase": "client-side_representation"}, {"score": 0.002225334593038328, "phrase": "query_performance"}, {"score": 0.0022007302738063566, "phrase": "experimental_results"}, {"score": 0.0021463584807258932, "phrase": "crown_copyright"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Database-As-Service", " Data privacy and security", " Encryption", " Two-phase query", " Characteristic index"], "paper_abstract": "Rapid advances in the networking technologies have prompted the emergence of the \"software as service\" model for enterprise computing, moreover, which is becoming one of the key industries quickly. \"Database as service\" model provides users power to store, modify and retrieve data from anywhere in the world, as long as they have access to the Internet, thus, being increasingly popular in current enterprise data management systems. However, this model introduces several challenges, an essential issue being how to implement SQL queries over encrypted data efficiently. To ensure data security, this model generally encrypts sensitive data at the trusted client's site, before storing them into the non-trusted database service provider's site, which, unfortunately, results in that SQL queries cannot be executed over the encrypted data immediately at the database service provider. In this paper we only focus on how to query encrypted character strings efficiently. Our strategy is that when storing character strings to the database service provider, we not only store the encrypted character strings themselves, but also generate some characteristic index values for these character strings, and store them in an additional field: and when querying the encrypted character strings, we first execute a coarse query over the characteristic index fields at the database service provider, in order to filter out most of tuples not related to the querying conditions, and then, we decrypt the rest tuples and execute a refined query over them again at the client site. In our strategy, we define an n-phase reachability matrix for a character string and use it as the characteristic index values, and based on such a definition, we present some theorems to split a SQL query into its server-side representation and client-side representation for partitioning the computation of a query across the client and the server and thus improving query performance. Finally, experimental results validate the functionality and effectiveness of our strategy. Crown Copyright (C) 2012 Published by Elsevier B.V. All rights reserved.", "paper_title": "Executing SQL queries over encrypted character strings in the Database-As-Service model", "paper_id": "WOS:000311016400032"}