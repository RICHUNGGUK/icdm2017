{"auto_keywords": [{"score": 0.03957613885967417, "phrase": "iss"}, {"score": 0.00481495049065317, "phrase": "parallel_dynamic_binary_translator"}, {"score": 0.004763895422211728, "phrase": "efficient_multi-core_simulation"}, {"score": 0.004663396040465122, "phrase": "multi-core_processors"}, {"score": 0.00458940888106061, "phrase": "broad_adoption"}, {"score": 0.004540734419151103, "phrase": "application_domains"}, {"score": 0.004468684611798047, "phrase": "embedded_systems"}, {"score": 0.004421284843189731, "phrase": "general-purpose_computing"}, {"score": 0.004374385639298755, "phrase": "large-scale_data_centres"}, {"score": 0.004259293347851015, "phrase": "multi-core_systems"}, {"score": 0.004016594765266821, "phrase": "simulation_speed"}, {"score": 0.003910879154656061, "phrase": "design_space_exploration"}, {"score": 0.003869373085652601, "phrase": "parallel_software_development"}, {"score": 0.0038079353103469865, "phrase": "state-of-the-art_instruction_set_simulators"}, {"score": 0.0035527409334589317, "phrase": "performance_levels"}, {"score": 0.0035150223642728437, "phrase": "speed-optimised_silicon_implementations"}, {"score": 0.003314591878914152, "phrase": "multi-core_simulators"}, {"score": 0.0032793933580835574, "phrase": "large_performance_penalties"}, {"score": 0.0030758904011907533, "phrase": "fast_and_scalable_simulation_methodology"}, {"score": 0.00304321897427383, "phrase": "multi-core_platforms"}, {"score": 0.002824005136794786, "phrase": "large-scale_multi-core_configurations"}, {"score": 0.0025243592424524764, "phrase": "state-of-the-art_embedded_multi-core_platform"}, {"score": 0.0022806798371116698, "phrase": "eembc_multibench"}, {"score": 0.0022324489895237504, "phrase": "simulation_speeds"}, {"score": 0.0021049977753042253, "phrase": "minimal_and_near_constant_overhead"}], "paper_keywords": ["Instruction set simulators", " Just-in-time compilation", " Multicore processors", " Parallel dynamic binary translation", " Scalable multicore simulation"], "paper_abstract": "In recent years multi-core processors have seen broad adoption in application domains ranging from embedded systems through general-purpose computing to large-scale data centres. Simulation technology for multi-core systems, however, lags behind and does not provide the simulation speed required to effectively support design space exploration and parallel software development. While state-of-the-art instruction set simulators (Iss) for single-core machines reach or exceed the performance levels of speed-optimised silicon implementations of embedded processors, the same does not hold for multi-core simulators where large performance penalties are to be paid. In this paper we develop a fast and scalable simulation methodology for multi-core platforms based on parallel and just-in-time (Jit) dynamic binary translation (Dbt). Our approach can model large-scale multi-core configurations, does not rely on prior profiling, instrumentation, or compilation, and works for all binaries targeting a state-of-the-art embedded multi-core platform implementing the ARCompact instruction set architecture (Isa). We have evaluated our parallel simulation methodology against the industry standard Splash-2 and Eembc MultiBench benchmarks and demonstrate simulation speeds up to 25,307 Mips on a 32-core x86 host machine for as many as 2,048 target processors whilst exhibiting minimal and near constant overhead, including memory considerations.", "paper_title": "A Parallel Dynamic Binary Translator for Efficient Multi-Core Simulation", "paper_id": "WOS:000313825300003"}