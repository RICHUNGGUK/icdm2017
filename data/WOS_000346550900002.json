{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "responsive_mobile_peer-to-peer_applications"}, {"score": 0.0046340196745259694, "phrase": "mobile_computing_platforms"}, {"score": 0.004484332781147261, "phrase": "new_class"}, {"score": 0.004268780663872836, "phrase": "peer_applications"}, {"score": 0.004199247711875386, "phrase": "neighbouring_phones"}, {"score": 0.003997343989408636, "phrase": "inherent_to_concurrent_and_distributed_programming"}, {"score": 0.003826007045267751, "phrase": "mobile_networks"}, {"score": 0.003682100144121148, "phrase": "wireless_network_connectivity"}, {"score": 0.0035049738376240567, "phrase": "centralized_infrastructure"}, {"score": 0.003175792987190496, "phrase": "mobile_peer-to-peer_applications"}, {"score": 0.0031411751440831165, "phrase": "ambienttalk"}, {"score": 0.0030064251340251196, "phrase": "mobile_applications"}, {"score": 0.0027996401456881806, "phrase": "language's_concurrency"}, {"score": 0.0027691111795848183, "phrase": "distribution_model"}, {"score": 0.0026070408483940535, "phrase": "ambienttalk's_support"}, {"score": 0.0024679299547216956, "phrase": "event_loops"}, {"score": 0.0023749823753904204, "phrase": "actor_model"}, {"score": 0.0023107372754933887, "phrase": "small-step_operational_semantics"}, {"score": 0.0021994343316143125, "phrase": "data_race"}, {"score": 0.002175436093794315, "phrase": "deadlock_freedom"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Actors", " Event loops", " Futures", " Mobile networks", " Peer-to-peer", " Service discovery", " Leasing"], "paper_abstract": "The rise of mobile computing platforms has given rise to a new class of applications: mobile applications that interact with peer applications running on neighbouring phones. Developing such applications is challenging because of problems inherent to concurrent and distributed programming, and because of problems inherent to mobile networks, such as the fact that wireless network connectivity is often intermittent, and the lack of centralized infrastructure to coordinate the peers. We present AmbientTalk, a distributed programming language designed specifically to develop mobile peer-to-peer applications. AmbientTalk aims to make it easy to develop mobile applications that are resilient to network failures by design. We describe the language's concurrency and distribution model in detail, as it lies at the heart of AmbientTalk's support for responsive, resilient application development. The model is based on communicating event loops, itself a descendant of the actor model. We contribute a small-step operational semantics for this model and use it to establish data race and deadlock freedom. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Ambient Talk: programming responsive mobile peer-to-peer applications with actors", "paper_id": "WOS:000346550900002"}