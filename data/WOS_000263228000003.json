{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "multi-threaded_object-oriented_programs"}, {"score": 0.004195418010131832, "phrase": "proof_outline_logic"}, {"score": 0.0037402558657576124, "phrase": "partial_correctness"}, {"score": 0.003334493031097143, "phrase": "java"}, {"score": 0.0031121406603482112, "phrase": "main_contribution"}, {"score": 0.0025892330566358503, "phrase": "shared-variable_concurrency"}, {"score": 0.002472822097373027, "phrase": "dynamic_thread_creation"}, {"score": 0.0021049977753042253, "phrase": "formal_justification"}], "paper_keywords": ["Verification", " Partial correctness", " Multi-threaded object-oriented programs interference", " Soundness", " Completeness"], "paper_abstract": "In this paper a proof Outline logic is introduced for the partial correctness of multi-threaded object-oriented programs like in Java. The main contribution is a generalization of the Owicki & Gries proof method for shared-variable concurrency to dynamic thread creation. This paper also provides a formal justification of this generalization in terms of soundness and completeness proofs. (C) 2008 Elsevier B.V. All rights reserved.", "paper_title": "A shared-variable concurrency analysis of multi-threaded object-oriented programs", "paper_id": "WOS:000263228000003"}