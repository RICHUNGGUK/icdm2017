{"auto_keywords": [{"score": 0.049783551527037576, "phrase": "language_technology_applications"}, {"score": 0.03450872320567594, "phrase": "woz"}, {"score": 0.00481495049065317, "phrase": "oz_experimentation"}, {"score": 0.004582358363660175, "phrase": "well-established_method"}, {"score": 0.0044980495194868525, "phrase": "user_experience"}, {"score": 0.0044702911400353535, "phrase": "future_systems"}, {"score": 0.004415284957189386, "phrase": "human_wizard"}, {"score": 0.004334036641115555, "phrase": "potential_system"}, {"score": 0.004241126597483046, "phrase": "extensive_engineering_effort"}, {"score": 0.004137369931118607, "phrase": "design_possibilities"}, {"score": 0.004061214835223812, "phrase": "woz_method"}, {"score": 0.0038648914374241447, "phrase": "sensor_technology"}, {"score": 0.0038410253293837786, "phrase": "pattern_recognition"}, {"score": 0.0037354317390837616, "phrase": "human-robot_interaction"}, {"score": 0.003610292749660581, "phrase": "wider_range"}, {"score": 0.0035879931522580745, "phrase": "interactive_systems"}, {"score": 0.0035219144770122315, "phrase": "acceptable_performance"}, {"score": 0.0034893313013551704, "phrase": "user_interface_level"}, {"score": 0.003446353878654566, "phrase": "resource-intensive_improvements"}, {"score": 0.003414467360488913, "phrase": "domain_tuning"}, {"score": 0.0033308667764141257, "phrase": "overall_design"}, {"score": 0.0032192371383026543, "phrase": "valuable_prototyping_technique"}, {"score": 0.003199345207727474, "phrase": "surprisingly_little_effort"}, {"score": 0.0031113369425402287, "phrase": "methodological_point"}, {"score": 0.002960795132939529, "phrase": "systematic_investigation"}, {"score": 0.0029152570900178956, "phrase": "design_space"}, {"score": 0.0028350413546400703, "phrase": "generic_architecture"}, {"score": 0.002817516691031648, "phrase": "tool_support"}, {"score": 0.002748491671688731, "phrase": "speech_recognition"}, {"score": 0.0026894796184066677, "phrase": "machine_translation"}, {"score": 0.0025121156016001864, "phrase": "generic_support"}, {"score": 0.002317487599170394, "phrase": "woz."}, {"score": 0.0022467024793003812, "phrase": "real_experiments"}, {"score": 0.002164602220179823, "phrase": "additional_support"}, {"score": 0.0021379062257004698, "phrase": "potential_issues"}, {"score": 0.0021049977753042253, "phrase": "wizard_performance"}], "paper_keywords": ["natural language interfaces", " HCI design and evaluation methods", " speech based (interaction techniques)", " interface design prototyping"], "paper_abstract": "Wizard of Oz (WOZ) is a well-established method for simulating the functionality and user experience of future systems. Using a human wizard to mimic certain operations of a potential system is particularly useful in situations where extensive engineering effort would otherwise be needed to explore the design possibilities offered by such operations. The WOZ method has been widely used in connection with speech and language technologies, but advances in sensor technology and pattern recognition as well as new application areas such as human-robot interaction have made it increasingly relevant to the design of a wider range of interactive systems. In such cases, achieving acceptable performance at the user interface level often hinges on resource-intensive improvements such as domain tuning, which are better done once the overall design is relatively stable. Although WOZ is recognized as a valuable prototyping technique, surprisingly little effort has been put into exploring it from a methodological point of view. Starting from a survey of the literature, this paper presents a systematic investigation and analysis of the design space for WOZ for language technology applications, and proposes a generic architecture for tool support that supports the integration of components for speech recognition and synthesis as well as for machine translation. This architecture is instantiated in WebWOZ-a new web-based open-source WOZ prototyping platform. The viability of generic support is explored empirically through a series of evaluations. Researchers from a variety of backgrounds were able to create experiments, independent of their previous experience with WOZ. The approach was further validated through a number of real experiments, which also helped to identify a number of possibilities for additional support, and flagged potential issues relating to consistency in wizard performance.", "paper_title": "Wizard of Oz Experimentation for Language Technology Applications: Challenges and Tools", "paper_id": "WOS:000364776900003"}