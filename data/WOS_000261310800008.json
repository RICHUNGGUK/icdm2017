{"auto_keywords": [{"score": 0.03667383794334986, "phrase": "conventional_buffer_insertion"}, {"score": 0.00481495049065317, "phrase": "buffering_interconnect_for_multicore_processor_designs"}, {"score": 0.004686688155058031, "phrase": "microprocessor_industry"}, {"score": 0.004512814529823301, "phrase": "multicore_designs"}, {"score": 0.00436890075128947, "phrase": "chip_performance_growth"}, {"score": 0.00427550604912774, "phrase": "buffer_insertion"}, {"score": 0.004161553532799662, "phrase": "critical_timing_optimization_technique"}, {"score": 0.004007083686875716, "phrase": "industrial_multicore_processor_design_methodology"}, {"score": 0.003900257249255497, "phrase": "conventional_formulation"}, {"score": 0.0037150687722055727, "phrase": "single_solution"}, {"score": 0.0036553070575015344, "phrase": "different_scenarios"}, {"score": 0.0032629585038738856, "phrase": "different_solution"}, {"score": 0.003107935254560724, "phrase": "straightforward_approach"}, {"score": 0.0028195727965553367, "phrase": "good_solution"}, {"score": 0.0025717770066591076, "phrase": "multiscenario_buffer_insertion_problems"}, {"score": 0.0025031188149336257, "phrase": "straightforward_extension"}, {"score": 0.002345707314211983, "phrase": "max-slack_solutions"}, {"score": 0.0023079225317714815, "phrase": "min-cost_solutions"}, {"score": 0.002234165013865669, "phrase": "timing_violation"}, {"score": 0.0021863046959469863, "phrase": "extended_conventional_buffering_results"}, {"score": 0.0021049977753042253, "phrase": "computation_speed"}], "paper_keywords": ["Buffer insertion", " interconnect", " multicore processor designs", " optimization"], "paper_abstract": "Recently, the microprocessor industry is headed in the direction of multicore designs in order to continue the chip performance growth. We investigate buffer insertion, which is a critical timing optimization technique, in the context of an industrial multicore processor design methodology. Different from the conventional formulation, buffer insertion in this case requires a single solution to accommodate different scenarios, since each core has its own parameters. If conventional buffer insertion is performed for each scenario separately, there may be a different solution corresponding to each of these scenarios. A straightforward approach is to judiciously select a solution from one scenario and apply it to all the scenarios. However, a good solution for one scenario may be a poor one for another. We propose several algorithmic techniques for solving these multiscenario buffer insertion problems. Compared with a straightforward extension of the conventional buffer insertion, our algorithm can improve slack by 20-280 ps for max-slack solutions. For min-cost solutions, our algorithm causes no timing violation, while the extended conventional buffering results in 35% timing violations. Moreover, the computation speed of our algorithm is faster.", "paper_title": "Buffering Interconnect for Multicore Processor Designs", "paper_id": "WOS:000261310800008"}