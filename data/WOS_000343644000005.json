{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "application_conditions"}, {"score": 0.049648703742940926, "phrase": "m-adhesive_categories"}, {"score": 0.004665162327051461, "phrase": "well-known_concept"}, {"score": 0.0043793594257092805, "phrase": "shared_subrules"}, {"score": 0.004339979174946844, "phrase": "corresponding_transformations"}, {"score": 0.004167086373747367, "phrase": "adequate_formalisation"}, {"score": 0.004110993414942228, "phrase": "operational_semantics"}, {"score": 0.003983016985197904, "phrase": "typed_attributed_graphs"}, {"score": 0.00391167729353583, "phrase": "multiple_rules"}, {"score": 0.0038764861784138117, "phrase": "nested_application_conditions"}, {"score": 0.0037052054802048707, "phrase": "double-pushout_approach"}, {"score": 0.003557509959237602, "phrase": "set-theoretical_basis"}, {"score": 0.0034937647771945803, "phrase": "standard_graph_rules"}, {"score": 0.0033242742850902295, "phrase": "current_paper"}, {"score": 0.003134503353065008, "phrase": "slightly_more_general_framework"}, {"score": 0.002915701586760994, "phrase": "complement_rule_theorem"}, {"score": 0.0028120802837806234, "phrase": "minimal_complement_rule"}, {"score": 0.002592163447843447, "phrase": "parallelism_and_amalgamation_theorems"}, {"score": 0.0025341792091114184, "phrase": "multiple_synchronised_parallelism"}, {"score": 0.002455168454109375, "phrase": "largest_amalgamated_rule"}, {"score": 0.0024111277643627154, "phrase": "maximal_matchings"}, {"score": 0.0023253967212081626, "phrase": "actual_instance_graph"}, {"score": 0.0022427071130840647, "phrase": "small_but_meaningful_running_example"}, {"score": 0.0021727640931660038, "phrase": "firing_semantics"}, {"score": 0.0021531831652035482, "phrase": "petri_nets"}, {"score": 0.0021049977753042253, "phrase": "introductory_example"}], "paper_keywords": [""], "paper_abstract": "Amalgamation is a well-known concept for graph transformations that is used to model synchronised parallelism of rules with shared subrules and corresponding transformations. This concept is especially important for an adequate formalisation of the operational semantics of statecharts and other visual modelling languages, where typed attributed graphs are used for multiple rules with nested application conditions. However, the theory of amalgamation for the double-pushout approach has so far only been developed on a set-theoretical basis for pairs of standard graph rules without any application conditions. For this reason, in the current paper we present the theory of amalgamation for M-adhesive categories, which form a slightly more general framework than (weak) adhesive HLR categories, for a bundle of rules with (nested) application conditions. The two main results are the Complement Rule Theorem, which shows how to construct a minimal complement rule for each subrule, and the Multi-Amalgamation Theorem, which generalises the well-known Parallelism and Amalgamation Theorems to the case of multiple synchronised parallelism. In order to apply the largest amalgamated rule, we use maximal matchings, which are computed according to the actual instance graph. The constructions are illustrated by a small but meaningful running example, while a more complex case study concerning the firing semantics of Petri nets is presented as an introductory example and to provide motivation.", "paper_title": "Multi-amalgamation of rules with application conditions in M-adhesive categories", "paper_id": "WOS:000343644000005"}