{"auto_keywords": [{"score": 0.03909673303902588, "phrase": "stream_program"}, {"score": 0.03779104206343624, "phrase": "closed_form"}, {"score": 0.00481495049065317, "phrase": "approximation_mapping_stream_programs"}, {"score": 0.0047588556219929756, "phrase": "multicore_architectures"}, {"score": 0.00454090611248773, "phrase": "stream_graphs"}, {"score": 0.004487989502479992, "phrase": "multicore_computers"}, {"score": 0.00440976345264104, "phrase": "stream_graph_transformation"}, {"score": 0.004257360656055417, "phrase": "key_technical_insight"}, {"score": 0.004183137595671171, "phrase": "data_rate_transfer_model"}, {"score": 0.004014923642015515, "phrase": "\"closed_form"}, {"score": 0.0037862398004482253, "phrase": "arrival_rate"}, {"score": 0.0036553070575015344, "phrase": "combinatorial_optimization_problem"}, {"score": 0.002646880721119838, "phrase": "state-of-the_art_integer_linear_programming_approaches"}, {"score": 0.0024236964502593254, "phrase": "larger_stream_graphs"}, {"score": 0.0023953929817357882, "phrase": "larger_number"}, {"score": 0.0021677478798910565, "phrase": "optimal_solution"}, {"score": 0.002129877319760485, "phrase": "standard_set"}, {"score": 0.0021049977753042253, "phrase": "streamit_benchmark_programs"}], "paper_keywords": ["Languages", " Algorithms", " Performance", " StreamIt", " multicore", " stream programming"], "paper_abstract": "We present a novel 2-approximation algorithm for deploying stream graphs on multicore computers and a stream graph transformation that eliminates bottlenecks. The key technical insight is a data rate transfer model that enables the computation of a \"closed form\", i.e., the data rate transfer function of an actor depending on the arrival rate of the stream program. A combinatorial optimization problem uses the closed form to maximize the throughput of the stream program. Although the problem is inherently NP-hard, we present an efficient and effective 2-approximation algorithm that provides a lower bound on the quality of the solution. We introduce a transformation that uses the closed form to identify and eliminate bottlenecks. We show experimentally that state-of-the art integer linear programming approaches for orchestrating stream graphs are (1) intractable or at least impractical for larger stream graphs and larger number of processors and (2) our 2-approximation algorithm is highly efficient and its results are close to the optimal solution for a standard set of StreamIt benchmark programs.", "paper_title": "Orchestration by Approximation Mapping Stream Programs onto Multicore Architectures", "paper_id": "WOS:000290854400029"}