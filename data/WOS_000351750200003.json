{"auto_keywords": [{"score": 0.039103868529516396, "phrase": "omega_pn"}, {"score": 0.006016629415178148, "phrase": "rackoff_technique"}, {"score": 0.005173918506096141, "phrase": "omega_pn."}, {"score": 0.00481495049065317, "phrase": "omega-petri_nets"}, {"score": 0.004605755681574275, "phrase": "petri"}, {"score": 0.004544770921520536, "phrase": "omega-labeled_input"}, {"score": 0.004308791766002289, "phrase": "parametric_concurrent_systems"}, {"score": 0.004270665568018583, "phrase": "dynamic_thread_creation"}, {"score": 0.004139855312176517, "phrase": "karp"}, {"score": 0.004103212598803194, "phrase": "miller_tree"}, {"score": 0.0038728151007982378, "phrase": "plain_petri_nets"}, {"score": 0.003687960013746783, "phrase": "transition_systems"}, {"score": 0.0036390887584943723, "phrase": "infinite_branching"}, {"score": 0.0035590664550919854, "phrase": "thorough_analysis"}, {"score": 0.0035118972210075633, "phrase": "computational_aspects"}, {"score": 0.003314591878914152, "phrase": "plain_petri_net"}, {"score": 0.0032129675521135616, "phrase": "reachability_set"}, {"score": 0.002900426826591769, "phrase": "complexity_bounds"}, {"score": 0.002811464848641341, "phrase": "place_boundedness"}, {"score": 0.0027010719929751, "phrase": "practical_algorithm"}, {"score": 0.0026534064006291853, "phrase": "coverability_set"}, {"score": 0.0025266078302900036, "phrase": "classical_karp_and_miller_tree_construction"}, {"score": 0.0023845255359681143, "phrase": "exact_complexity"}, {"score": 0.002352886041381761, "phrase": "termination_problem"}, {"score": 0.0022404162042797262, "phrase": "reset_and_transfer_arcs"}, {"score": 0.0021049977753042253, "phrase": "aforementioned_problems"}], "paper_keywords": [""], "paper_abstract": "We introduce omega-Petri nets (omega PN), an extension of plain Petri nets with omega-labeled input and output arcs, that is well-suited to analyse parametric concurrent systems with dynamic thread creation. Most techniques (such as the Karp and Miller tree or the Rackoff technique) that have been proposed in the setting of plain Petri nets do not apply directly to omega PN because omega PN define transition systems that have infinite branching. This motivates a thorough analysis of the computational aspects of omega PN. We show that an omega PN can be turned into a plain Petri net that allows us to recover the reachability set of the omega PN, but that does not preserve termination (an omega PN terminates iff it admits no infinitely long execution). This yields complexity bounds for the reachability, boundedness, place boundedness and coverability problems on omega PN. We provide a practical algorithm to compute a coverability set of the omega PN and to decide termination by adapting the classical Karp and Miller tree construction. We also adapt the Rackoff technique to omega PN, to obtain the exact complexity of the termination problem. Finally, we consider the extension of omega PN with reset and transfer arcs, and show how this extension impacts the decidability and complexity of the aforementioned problems.", "paper_title": "omega-Petri Nets: Algorithms and Complexity", "paper_id": "WOS:000351750200003"}