{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "bpel_processes"}, {"score": 0.015413195163808452, "phrase": "yawl_workflows"}, {"score": 0.004627000886000405, "phrase": "bpel"}, {"score": 0.004315487055548749, "phrase": "web_services"}, {"score": 0.004105850229681625, "phrase": "formal_semantics"}, {"score": 0.004024863549087511, "phrase": "yawl"}, {"score": 0.003906357144047631, "phrase": "workflow_language"}, {"score": 0.0037913267098534887, "phrase": "well_defined_formal_semantics"}, {"score": 0.002955050521440921, "phrase": "formal_analysis"}, {"score": 0.00256993314099902, "phrase": "yawl_pattern"}, {"score": 0.0024941578231560055, "phrase": "bpel_activity"}, {"score": 0.002349228457383314, "phrase": "bpel_process"}], "paper_keywords": [""], "paper_abstract": "BPEL is currently the most widespread language for composing Web services, but it lacks formal semantics. YAWL is a workflow language with a well defined formal semantics that implements the most common workflow patterns. In this paper we provide a methodology for translating BPEL processes into YAWL workflows, thus paving the way for the formal analysis, aggregation and adaptation of BPEL processes. The approach we propose defines a YAWL pattern for each BPEL activity. The translation of a BPEL process reduces then to suitably instanMating and interconnecting the patterns of its activities.", "paper_title": "From BPEL processes to YAWL workflows", "paper_id": "WOS:000241442400007"}