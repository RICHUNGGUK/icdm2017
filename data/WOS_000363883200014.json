{"auto_keywords": [{"score": 0.049593242225692294, "phrase": "elliptic_curve_cryptography"}, {"score": 0.043392826645118794, "phrase": "scalar_multiplication"}, {"score": 0.015719716506582538, "phrase": "karatsuba-block-comb"}, {"score": 0.015457605318221634, "phrase": "binary_fields"}, {"score": 0.004701710196317656, "phrase": "efficient_implementation"}, {"score": 0.004638195656547484, "phrase": "resource-constrained_microcontroller"}, {"score": 0.0045137173841642035, "phrase": "hot_and_challenging_research_topics"}, {"score": 0.004452731043379068, "phrase": "limited_computing_power"}, {"score": 0.004392565073466714, "phrase": "target_platforms"}, {"score": 0.004362786303912385, "phrase": "high_computational_costs"}, {"score": 0.004034444399739595, "phrase": "new_technique"}, {"score": 0.003820664678548735, "phrase": "kbc_method"}, {"score": 0.003769006950727621, "phrase": "karatsuba_algorithm"}, {"score": 0.003743439610143464, "phrase": "block-comb_method"}, {"score": 0.0036428866026996707, "phrase": "expensive_block-comb_binary_field_multiplications"}, {"score": 0.0035571129372263532, "phrase": "karatsuba_rule"}, {"score": 0.003438058620195309, "phrase": "optimized_squaring_algorithm"}, {"score": 0.003345680943026579, "phrase": "previous_works"}, {"score": 0.0032668821950788502, "phrase": "proposed_approaches"}, {"score": 0.0032336801561165113, "phrase": "best_known_results"}, {"score": 0.0030831303297783877, "phrase": "atmel_corporation"}, {"score": 0.003062201383165999, "phrase": "san_jose"}, {"score": 0.0030418235432256298, "phrase": "ca"}, {"score": 0.003020843397138008, "phrase": "usa"}, {"score": 0.0028026735035370206, "phrase": "full_scalar_multiplication"}, {"score": 0.002690406375639144, "phrase": "previous_best_implementation"}, {"score": 0.002618064695883912, "phrase": "research_results"}, {"score": 0.0025046245057922557, "phrase": "high_performance"}, {"score": 0.0024372660612788184, "phrase": "sub-quadratic_complexity"}, {"score": 0.0023879358679564527, "phrase": "constant_time_kbc_method"}, {"score": 0.0023717148226629105, "phrase": "block-comb"}, {"score": 0.002331641523873951, "phrase": "constant_time"}, {"score": 0.0023079225317714815, "phrase": "look-up_table_method"}, {"score": 0.00226892463779702, "phrase": "memory_address_side_channel_attack"}, {"score": 0.002177991273791155, "phrase": "high_security"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["public-key cryptography", " elliptic curve cryptography", " embedded microprocessor", " binary field multiplication"], "paper_abstract": "Efficient implementation of elliptic curve cryptography on resource-constrained microcontroller is considered to be one of the hot and challenging research topics because of the limited computing power and storages of target platforms and high computational costs of elliptic curve cryptography. In this paper, we focus on enhancing the performance of scalar multiplication over GF(2(m)) by suggesting a new technique for speeding up the performance of multiplication, called Karatsuba-Block-Comb (KBC) multiplication. KBC method combines both the advantages of Karatsuba algorithm and Block-Comb method. This technique replaces the part of expensive Block-Comb binary field multiplications with several cheap additions by following Karatsuba rule. In case of squaring, we describe an optimized squaring algorithm with 8-bit look-up table that is significantly faster than previous works with 4-bit look-up table. Both of the proposed approaches improve the best known results by a factor of 24.6% and 16.8% (160-bit operand) over 8-bit AVR processor (Atmel Corporation, San Jose, CA, USA), respectively. Finally, we realize the scalar multiplication over GF(2(163)), which only requires 0.29s for a full scalar multiplication when the processor runs at 7.37MHz. This result outperforms the previous best implementation by a factor of 9.3%. The research results presented in this paper prove that it is also possible to achieve high performance over binary fields by combing the algorithm with sub-quadratic complexity. Furthermore, we suggest constant time KBC method. Block-Comb method does not provide constant time, and look-up table method is also vulnerable to memory address side channel attack. However, our method is establishing the scalar multiplication in 0.35s with high security against both attacks. Copyright (c) 2015 John Wiley & Sons, Ltd.", "paper_title": "Karatsuba-Block-Comb technique for elliptic curve cryptography over binary fields", "paper_id": "WOS:000363883200014"}