{"auto_keywords": [{"score": 0.040595349814365536, "phrase": "computational_complexity"}, {"score": 0.034005550468813706, "phrase": "block_length"}, {"score": 0.00481495049065317, "phrase": "ldpc_codes"}, {"score": 0.004772137871562584, "phrase": "linear_complexity"}, {"score": 0.004666756595735701, "phrase": "low_complexity_linear_programming"}, {"score": 0.004543352284098364, "phrase": "low-density_parity-check"}, {"score": 0.00450317981038179, "phrase": "ldpc"}, {"score": 0.004364310576600359, "phrase": "iterative_algorithm"}, {"score": 0.004248869786808024, "phrase": "belief_propagation"}, {"score": 0.00419229472352669, "phrase": "efficient_approximate_solution"}, {"score": 0.004063192639245611, "phrase": "vontobel"}, {"score": 0.004027047478644233, "phrase": "koetter"}, {"score": 0.003902992784453769, "phrase": "convergence_rate"}, {"score": 0.003732368382223596, "phrase": "scheduling_scheme"}, {"score": 0.003505908076430666, "phrase": "feasible_vector"}, {"score": 0.003459191419478298, "phrase": "lp_decoding_problem"}, {"score": 0.0031210475158175406, "phrase": "objective_function_value"}, {"score": 0.0030794433253250476, "phrase": "approximate_solution"}, {"score": 0.002729029534060092, "phrase": "previous_results"}, {"score": 0.0026567282965815823, "phrase": "lp_decoder"}, {"score": 0.0026095920086044145, "phrase": "fixed_fraction"}, {"score": 0.0025291018422967083, "phrase": "error_correction"}, {"score": 0.002473129577319634, "phrase": "linear_computational_complexity"}, {"score": 0.0023754752864092437, "phrase": "iterative_lp_decoder"}, {"score": 0.0023333173799963795, "phrase": "correct_transmitted_codeword"}, {"score": 0.002291905937251069, "phrase": "arbitrarily_small_fraction"}, {"score": 0.002271476019266231, "phrase": "erroneous_bits"}, {"score": 0.0022112700457629494, "phrase": "remaining_errors"}, {"score": 0.002181766829493483, "phrase": "standard_method"}, {"score": 0.0021049977753042253, "phrase": "generalized_ldpc_codes"}], "paper_keywords": ["Linear programming decoding", " iterative decoding", " low-density parity-check (LDPC) codes"], "paper_abstract": "The problem of low complexity linear programming (LP) decoding of low-density parity-check (LDPC) codes is considered. An iterative algorithm, similar to min-sum and belief propagation, for efficient approximate solution of this problem was proposed by Vontobel and Koetter. In this paper, the convergence rate and computational complexity of this algorithm are studied using a scheduling scheme that we propose. In particular, we are interested in obtaining a feasible vector in the LP decoding problem that is close to optimal in the following sense. The distance, normalized by the block length, between the minimum and the objective function value of this approximate solution can be made arbitrarily small. It is shown that such a feasible vector can be obtained with a computational complexity which scales linearly with the block length. Combined with previous results that have shown that the LP decoder can correct some fixed fraction of errors we conclude that this error correction can be achieved with linear computational complexity. This is achieved by first applying the iterative LP decoder that decodes the correct transmitted codeword up to an arbitrarily small fraction of erroneous bits, and then correcting the remaining errors using some standard method. These conclusions are also extended to generalized LDPC codes.", "paper_title": "Iterative Approximate Linear Programming Decoding of LDPC Codes With Linear Complexity", "paper_id": "WOS:000271019700003"}