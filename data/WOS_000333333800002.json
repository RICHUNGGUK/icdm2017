{"auto_keywords": [{"score": 0.044605401042099674, "phrase": "rad"}, {"score": 0.00481495049065317, "phrase": "legacy_graphical_user_interfaces"}, {"score": 0.00432423070113186, "phrase": "rapid_application_development"}, {"score": 0.00418134346679498, "phrase": "fourth_generation_language"}, {"score": 0.0038833278847237858, "phrase": "new_platforms"}, {"score": 0.0036553070575015344, "phrase": "graphical_user_interface"}, {"score": 0.0033718991936259038, "phrase": "gui_elements"}, {"score": 0.003131393466870228, "phrase": "current_features"}, {"score": 0.0030895394261534776, "phrase": "gui_technologies"}, {"score": 0.002907992115184249, "phrase": "model-driven_engineering_process"}, {"score": 0.0027929100418926725, "phrase": "automatic_reverse_engineering"}, {"score": 0.002755567647101251, "phrase": "rad-built_guis"}, {"score": 0.0026111116934081284, "phrase": "implicit_layout"}, {"score": 0.002524688179363081, "phrase": "gui_model"}, {"score": 0.0022365262201954643, "phrase": "automatic_reengineering_process"}, {"score": 0.0021049977753042253, "phrase": "java_swing_user_interface"}], "paper_keywords": ["Graphical User Interfaces", " Layout", " Modernisation", " Model driven engineering", " Reverse engineering", " Reengineering"], "paper_abstract": "Businesses are increasingly beginning to modernise those of their legacy systems that were originally developed with Rapid Application Development (RAD) or Fourth Generation Language (4GL) environments, in order to benefit from new platforms and technologies. In these systems, the Graphical User Interface (GUI) layout is implicitly provided by the position of the GUI elements (i.e. coordinates). However, taking advantage of current features of GUI technologies often requires an explicit, high-level layout model. We propose a Model-Driven Engineering process with which to perform the automatic reverse engineering of RAD-built GUIs, which is focused on discovering the implicit layout, and produces a GUI model in which the layout is explicit. As an example of the approach, we apply an automatic reengineering process to this model in order to generate a Java Swing user interface.", "paper_title": "Model-driven reverse engineering of legacy graphical user interfaces", "paper_id": "WOS:000333333800002"}