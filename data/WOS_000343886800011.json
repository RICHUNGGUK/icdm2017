{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "systematic_creation"}, {"score": 0.004771672073078768, "phrase": "faithfully_rounded_truncated_multipliers"}, {"score": 0.004602395776895036, "phrase": "fixed-point_multiplication"}, {"score": 0.004439097815805505, "phrase": "faithfully_rounded_result"}, {"score": 0.004167086373747367, "phrase": "arbitrary_precision_result"}, {"score": 0.003947186611084043, "phrase": "correctly_rounded_multipliers"}, {"score": 0.0038242899532391914, "phrase": "nearest_machine_representable_number"}, {"score": 0.0037219886365287085, "phrase": "considerably_less_silicon_area"}, {"score": 0.0036224139706218916, "phrase": "truncation_scheme"}, {"score": 0.00357362651129581, "phrase": "partial_product_array"}, {"score": 0.0033544692489307676, "phrase": "industrial_practice"}, {"score": 0.0032061793819537633, "phrase": "exhaustive_simulation"}, {"score": 0.003134503353065008, "phrase": "e._g."}, {"score": 0.0029025435402480326, "phrase": "existing_schemes"}, {"score": 0.0028505007899807446, "phrase": "closed_form"}, {"score": 0.0028376361457661415, "phrase": "necessary_and_sufficient_conditions"}, {"score": 0.002687702958515561, "phrase": "closed_form_expressions"}, {"score": 0.0026514708899935333, "phrase": "bit_vectors"}, {"score": 0.002592163447843447, "phrase": "worst-case_error"}, {"score": 0.002488724764295623, "phrase": "monte-carlo_simulation"}, {"score": 0.002389403849342894, "phrase": "hdl_code"}, {"score": 0.002162951519368368, "phrase": "arbitrary_array"}, {"score": 0.0021337783230121286, "phrase": "faithful_rounding"}], "paper_keywords": ["Data-path design", " parallel circuits", " high-speed arithmetic", " worst-case analysis"], "paper_abstract": "Often, when performing fixed-point multiplication, it is sufficient to return a faithfully rounded result, i.e., the machine representable number either immediately above or below the arbitrary precision result, if the latter is not exactly representable. Compared to correctly rounded multipliers, i.e., those returning the nearest machine representable number, faithfully rounded multipliers use considerably less silicon area, typically by implementing a truncation scheme within the partial product array. A number of such heuristically inspired schemes exist in the literature, however their use in industrial practice is hampered by the absence of verification, and exhaustive simulation is typically infeasible, e. g., a 32 bit multiplier requires 2(64) simulations. We present three truncated multiplier schemes which subsume the majority of existing schemes and derive both closed form necessary and sufficient conditions for faithful rounding. For two of the schemes we provide closed form expressions for the bit vectors giving rise to the worst-case error and the probability of encountering these inputs during Monte-Carlo simulation. From these expressions, we show how HDL code can be created that performs correct-by-construction faithfully rounded multiplication. We also present a method for truncating an arbitrary array while maintaining faithful rounding, creating two novel truncated multiplier schemes in the process.", "paper_title": "On the Systematic Creation of Faithfully Rounded Truncated Multipliers and Arrays", "paper_id": "WOS:000343886800011"}