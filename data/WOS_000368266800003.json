{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "policy_adaptation"}, {"score": 0.024025707949948398, "phrase": "test_sets"}, {"score": 0.004717325943509345, "phrase": "recent_application"}, {"score": 0.004653339900995785, "phrase": "machine_learning_techniques"}, {"score": 0.004558977045730675, "phrase": "answer_set_programming"}, {"score": 0.0041149859710361125, "phrase": "asp_solver_me-asp"}, {"score": 0.0035892794633115227, "phrase": "'system_track'_benchmarks"}, {"score": 0.0034924598001567944, "phrase": "me-asp_approach"}, {"score": 0.003352088714126572, "phrase": "offline_algorithm_selection_policies"}, {"score": 0.003004655258223784, "phrase": "solvers_performance"}, {"score": 0.002748984715897838, "phrase": "multi-engine_framework"}, {"score": 0.0027116246112603875, "phrase": "me-asp"}, {"score": 0.002515014676664348, "phrase": "learned_policies"}, {"score": 0.002463906556781983, "phrase": "original_approach"}, {"score": 0.0023973704289918726, "phrase": "good_predictions"}, {"score": 0.0023486473525617816, "phrase": "experimental_analysis"}, {"score": 0.0022234951091677085, "phrase": "ground_instances"}, {"score": 0.0021049977753042253, "phrase": "'system_track"}], "paper_keywords": ["Answer set programming", " automated algorithm selection", " multi engine solvers"], "paper_abstract": "The recent application of Machine Learning techniques to the Answer Set Programming (ASP) field proved to be effective. In particular, the multi-engine ASP solver ME-ASP is efficient: it is able to solve more instances than any other ASP system that participated to the 3rd ASP Competition on the 'System Track' benchmarks. In the ME-ASP approach, classification methods inductively learn offline algorithm selection policies starting from both a set of features of instances in a training set, and the solvers performance on such instances. In this article we present an improvement to the multi-engine framework of ME-ASP, in which we add the capability of updating the learned policies when the original approach fails to give good predictions. An experimental analysis, conducted on training and test sets of ground instances obtained from the ones submitted to the 'System Track' of the 3rd ASP Competition, shows that the policy adaptation improves the performance of ME-ASP when applied to test sets containing domains of instances that were not considered for training.", "paper_title": "Multi-engine ASP solving with policy adaptation", "paper_id": "WOS:000368266800003"}