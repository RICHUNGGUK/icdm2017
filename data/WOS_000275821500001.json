{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "configuration_task"}, {"score": 0.004570759604335229, "phrase": "predefined_components"}, {"score": 0.004395742407834023, "phrase": "composite_object"}, {"score": 0.004092026656771699, "phrase": "coconf"}, {"score": 0.003859146369720225, "phrase": "conceptual_encoding"}, {"score": 0.0037844916274672544, "phrase": "configuration_knowledge"}, {"score": 0.003639471039860495, "phrase": "software_configuration_system"}, {"score": 0.0032792555200980783, "phrase": "proposed_framework"}, {"score": 0.0028228178454284825, "phrase": "modeling_language"}, {"score": 0.0027681550491613603, "phrase": "explicit_representation"}, {"score": 0.002679386232765167, "phrase": "taxonomic_relations"}, {"score": 0.002644678812707061, "phrase": "component_types"}, {"score": 0.0025934566395017424, "phrase": "configuration_algorithms"}, {"score": 0.0022763657774198184, "phrase": "formal_proofs"}, {"score": 0.0022033327475266496, "phrase": "basic_properties"}, {"score": 0.002132637840285576, "phrase": "experimental_results"}], "paper_keywords": ["Configuration", " configuration algorithm", " problem decomposition", " backtracking search"], "paper_abstract": "This article deals with the configuration task. Configuring means assembling a set of predefined components in order to build a composite object that meets a set of requirements. Here we present COCONF, an approach to configuration based on a conceptual encoding of the configuration knowledge, directly exploitable by a software configuration system to compute configurations. In particular, we show how Conflict-Directed Backjumping can be adapted to the proposed framework and in which way the efficiency of the configurator may be still enhanced by two look-ahead mechanisms, which exploit the characteristics of the modeling language and the explicit representation of both the compositional structure and the taxonomic relations among component types. The configuration algorithms are explained in detail; the assumptions and the properties which they are based on are explicitly stated. Formal proofs are provided for the basic properties. A set of experimental results on three different real-world domains are presented, which prove the suitability of the approach.", "paper_title": "COCONF: Conceptual language-based configuration", "paper_id": "WOS:000275821500001"}