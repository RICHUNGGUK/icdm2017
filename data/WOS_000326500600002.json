{"auto_keywords": [{"score": 0.039108224572764555, "phrase": "users'_preferences"}, {"score": 0.01264205384093625, "phrase": "ranking_function"}, {"score": 0.00481495049065317, "phrase": "learning_approach"}, {"score": 0.004763565662615503, "phrase": "sql_query"}, {"score": 0.004301834610818624, "phrase": "database_return"}, {"score": 0.00409895142748329, "phrase": "common_solution"}, {"score": 0.003990385737207714, "phrase": "query_results"}, {"score": 0.0036422425344358037, "phrase": "database_systems"}, {"score": 0.003526735797659508, "phrase": "complete_information"}, {"score": 0.003034158379493625, "phrase": "existing_solutions"}, {"score": 0.0028142286985235977, "phrase": "novel_approach"}, {"score": 0.002652639568848117, "phrase": "heterogeneous_issue"}, {"score": 0.002568435291444709, "phrase": "users'_static_and_common_preferences"}, {"score": 0.0025273383208209922, "phrase": "users'_current_navigational_behavior"}, {"score": 0.0024868972942701582, "phrase": "users'_dynamic_and_diverse_preferences"}, {"score": 0.0023950275815082297, "phrase": "incompleteness_issue"}, {"score": 0.0023440589015485077, "phrase": "machine_learning_technique"}, {"score": 0.0022574539115388075, "phrase": "training_examples"}, {"score": 0.002162379426839795, "phrase": "experimental_results"}], "paper_keywords": ["Data and knowledge visualization", " interactive data exploration and discovery"], "paper_abstract": "Users often find that their queries against a database return too many answers, many of them irrelevant. A common solution is to rank the query results. The effectiveness of a ranking function depends on how well it captures users' preferences. However, database systems often do not have the complete information about users' preferences and users' preferences are often heterogeneous (i.e., some preferences are static and common to all users while some are dynamic and diverse). Existing solutions do not address these two issues. In this paper, we propose a novel approach to address these shortcomings: 1) it addresses the heterogeneous issue by using skyline to capture users' static and common preferences and using users' current navigational behavior to capture users' dynamic and diverse preferences; 2) it addresses the incompleteness issue by using a machine learning technique to learn a ranking function based on training examples constructed from the above two types of information. Experimental results demonstrate the benefits of our approach.", "paper_title": "A Learning Approach to SQL Query Results Ranking Using Skyline and Users' Current Navigational Behavior", "paper_id": "WOS:000326500600002"}