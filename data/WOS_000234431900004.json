{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "looping_reference_patterns"}, {"score": 0.004685012337701536, "phrase": "thorough_analysis"}, {"score": 0.004608730887154718, "phrase": "memory_behaviour"}, {"score": 0.004558564684763264, "phrase": "page_caching"}, {"score": 0.004108288481894523, "phrase": "page_accesses"}, {"score": 0.004063547375196532, "phrase": "program_activity"}, {"score": 0.0038893838564184107, "phrase": "system_resources"}, {"score": 0.003826007045267751, "phrase": "graphical_model"}, {"score": 0.003784328428527216, "phrase": "program_execution"}, {"score": 0.003661987063211563, "phrase": "page_placement"}, {"score": 0.003602302241898501, "phrase": "primary_memory"}, {"score": 0.003175792987190496, "phrase": "performance_indexes"}, {"score": 0.0031240075437664314, "phrase": "program_response_time"}, {"score": 0.0030395624703152212, "phrase": "secondary_memory_system"}, {"score": 0.0030064251340251196, "phrase": "special_attention"}, {"score": 0.00294122712771669, "phrase": "transient_program_behaviour"}, {"score": 0.0027239390917424898, "phrase": "disk_activities"}, {"score": 0.002592784882557155, "phrase": "large_set"}, {"score": 0.002564505790176378, "phrase": "measurement_experiments"}, {"score": 0.0024815011359381692, "phrase": "analytical_model"}, {"score": 0.0024410093024417527, "phrase": "significant_indications"}, {"score": 0.002361992359512022, "phrase": "simplifying_assumptions"}, {"score": 0.0023107372754933887, "phrase": "theoretical_analysis"}, {"score": 0.00221153232497724, "phrase": "previous_work"}, {"score": 0.0021874023741762496, "phrase": "special_reference"}], "paper_keywords": [""], "paper_abstract": "We present a thorough analysis of the memory behaviour of page caching and prefetching algorithms. The analysis is restricted to programs whose execution consists of iteration of a sequence of page accesses. Program activity is characterized in terms of utilization of system resources. A graphical model of program execution is used to describe both page placement in the primary memory and the actions of page fetch and replacement. The algorithms are compared from the point of view of a number of performance indexes that include program response time and utilization of the secondary memory system. Special attention is paid to transient program behaviour and the effects of the time necessary for the processor to control the disk activities of page fetch. The results of a large set of measurement experiments are used to validate the analytical model and acquire significant indications concerning the extent of the simplifying assumptions made in the theoretical analysis. The discussion of the relation to previous work makes special reference to two classes of algorithms that received much attention in the past, aggressive prefetching and informed prefetching.", "paper_title": "Caching and prefetching algorithms for programs with looping reference patterns", "paper_id": "WOS:000234431900004"}