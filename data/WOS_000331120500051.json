{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "denotational_semantics"}, {"score": 0.004725385523804256, "phrase": "region-based_effect_system"}, {"score": 0.004410938507689426, "phrase": "visible_effects"}, {"score": 0.004248294537944227, "phrase": "non-observable_internal_modifications"}, {"score": 0.004040688646993605, "phrase": "search_tree"}, {"score": 0.003990385737207714, "phrase": "lazy_initialisation"}, {"score": 0.0036324746826127997, "phrase": "'fictional_purity"}, {"score": 0.0034332736827447654, "phrase": "soundly_more_effect-based_program_equivalences"}, {"score": 0.003306559295382181, "phrase": "previous_semantics"}, {"score": 0.00320453237792, "phrase": "novel_variant"}, {"score": 0.0031646057802503526, "phrase": "logical_relations"}, {"score": 0.003028727936200845, "phrase": "partial_equivalence_relations"}, {"score": 0.0027916287357898544, "phrase": "proof-relevant_generalisation"}, {"score": 0.0025409639091476363, "phrase": "semantic_types"}, {"score": 0.0024014759148123736, "phrase": "semantic_equivalence"}, {"score": 0.002255431275670053, "phrase": "naive_use"}, {"score": 0.0022273034991008326, "phrase": "existential_quantification"}, {"score": 0.0021995257343837547, "phrase": "kripke_logical_relations"}, {"score": 0.0021049977753042253, "phrase": "spurious_functional_dependencies"}], "paper_keywords": ["Languages", " Theory", " Type and effect systems", " region analysis", " logical relations", " parametricity", " program transformation"], "paper_abstract": "We give a denotational semantics for a region-based effect system that supports type abstraction in the sense that only externally visible effects need to be tracked: non-observable internal modifications, such as the reorganisation of a search tree or lazy initialisation, can count as 'pure' or 'read only'. This 'fictional purity' allows clients of a module to validate soundly more effect-based program equivalences than would be possible with previous semantics. Our semantics uses a novel variant of logical relations that maps types not merely to partial equivalence relations on values, as is commonly done, but rather to a proof-relevant generalisation thereof, namely setoids. The objects of a setoid establish that values inhabit semantic types, whilst its morphisms are understood as proofs of semantic equivalence. The transition to proof-relevance solves two awkward problems caused by naive use of existential quantification in Kripke logical relations, namely failure of admissibility and spurious functional dependencies.", "paper_title": "Abstract Effects and Proof-Relevant Logical Relations", "paper_id": "WOS:000331120500051"}