{"auto_keywords": [{"score": 0.03926822541954043, "phrase": "skycube"}, {"score": 0.03769894214388448, "phrase": "original_data"}, {"score": 0.00481495049065317, "phrase": "skyline_query_processing"}, {"score": 0.004560568143816105, "phrase": "database_community"}, {"score": 0.00399367108161192, "phrase": "possible_non-empty_subsets"}, {"score": 0.003332072426367186, "phrase": "novel_incremental_maintenance_algorithm"}, {"score": 0.003155784719225786, "phrase": "maintenance_work"}, {"score": 0.0028823939507764238, "phrase": "net_change"}, {"score": 0.0024336917123957387, "phrase": "shared_tables"}, {"score": 0.0022909325048608054, "phrase": "materialized_view"}, {"score": 0.0021049977753042253, "phrase": "imascir"}], "paper_keywords": [""], "paper_abstract": "Skyline query processing has recently received a lot of attention in database community. And reference [1] considers the problem of efficiently computing a SkyCube, Which consists of skylines of all possible non-empty subsets of a given set of dimensions. However, the SkyCube is can not use further as original data set is changed. In this paper, we propose a novel incremental maintenance algorithm of SkyCube, called IMASCIR. IMASCIR splits the maintenance work into two phases: identify and refresh. All the materialized SkyCube views share two tables which stores the net change to the view due to the change to the original data set. In the phase of identify, we identify and store the source changes into these shared tables. Then in the phase of refresh, each materialized view is refreshed individually by applying these two shared tables. Furthermore, our experiment demonstrated that IMASCIR is both efficient and effective.", "paper_title": "A novel incremental maintenance algorithm of SkyCube", "paper_id": "WOS:000241155300076"}