{"auto_keywords": [{"score": 0.048698926905371843, "phrase": "embedded_real-time_systems"}, {"score": 0.030343089550264365, "phrase": "jop"}, {"score": 0.004815215771186045, "phrase": "java"}, {"score": 0.004508286991825192, "phrase": "modern_processor_designs"}, {"score": 0.004442824994700736, "phrase": "average_performance"}, {"score": 0.004159763048814389, "phrase": "branch_prediction"}, {"score": 0.00406945841245389, "phrase": "out-of-order_execution"}, {"score": 0.003866268750750096, "phrase": "worst-case_execution_time_analysis"}, {"score": 0.003646399625591736, "phrase": "java_optimized_processor"}, {"score": 0.0034642599795044445, "phrase": "architectural_perspective"}, {"score": 0.0033397385936467204, "phrase": "processor_architecture"}, {"score": 0.0032671775301001513, "phrase": "simpler_and_more_accurate_wcet_analysis"}, {"score": 0.0031497178007011666, "phrase": "average_case_performance"}, {"score": 0.0030143100083252516, "phrase": "java_processor"}, {"score": 0.002948798472453167, "phrase": "time-predictable_execution"}, {"score": 0.002905914725757534, "phrase": "real-time_tasks"}, {"score": 0.0027405092973494293, "phrase": "java_virtual_machine"}, {"score": 0.0024915167458844914, "phrase": "primary_implementation_technology"}, {"score": 0.002419542935774618, "phrase": "field_programmable_gate_array"}, {"score": 0.0022321322970228308, "phrase": "java_virtual_machine_results"}, {"score": 0.0021835829960683666, "phrase": "small_design"}, {"score": 0.0021518035978153878, "phrase": "resource-constrained_devices"}], "paper_keywords": ["real-time system", " time-predictable architecture", " Java processor"], "paper_abstract": "Architectural advancements in modern processor designs increase average performance with features such as pipelines, caches, branch prediction, and out-of-order execution. However, these features complicate worst-case execution time analysis and lead to very conservative estimates. JOP (Java Optimized Processor) tackles this problem from the architectural perspective - by introducing a processor architecture in which simpler and more accurate WCET analysis is more important than average case performance. This paper presents a Java processor designed for time-predictable execution of real-time tasks. JOP is the implementation of the Java virtual machine in hardware. JOP is intended for applications in embedded real-time systems and the primary implementation technology is in a field programmable gate array. This paper demonstrates that a hardware implementation of the Java virtual machine results in a small design for resource-constrained devices. (C) 2007 Elsevier B.V. All rights reserved.", "paper_title": "A Java processor architecture for embedded real-time systems", "paper_id": "WOS:000256608400018"}