{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "embedded_processors"}, {"score": 0.004752221133109136, "phrase": "deterministic_functional_test_pattern_generation"}, {"score": 0.00462919213721188, "phrase": "long-standing_open_problem"}, {"score": 0.004479855062309818, "phrase": "important_problem"}, {"score": 0.004306968571854912, "phrase": "design_verification"}, {"score": 0.0042508289538799905, "phrase": "manufacturing_testing"}, {"score": 0.004086744751579196, "phrase": "practical_functional_test_pattern_generation_approach"}, {"score": 0.003954837422946628, "phrase": "exponential_growth"}, {"score": 0.003877737556673229, "phrase": "test_generation_complexity"}, {"score": 0.003752550907120244, "phrase": "design_size"}, {"score": 0.003607630811220324, "phrase": "novel_functional_test_generation_approach"}, {"score": 0.003356275163203055, "phrase": "additional_tests"}, {"score": 0.003247868216333148, "phrase": "complexity_growth_issue"}, {"score": 0.0030614565460256897, "phrase": "simpler_and_more_efficient_models"}, {"score": 0.0028480459059007468, "phrase": "actual_test_generation_process"}, {"score": 0.0025807396931129926, "phrase": "random_logic"}, {"score": 0.002547043222086858, "phrase": "arithmetic_learning"}, {"score": 0.0025137856138000036, "phrase": "datapath_modules"}, {"score": 0.0022628564592874147, "phrase": "benchmark_circuits"}, {"score": 0.0021610874773389096, "phrase": "overall_test_generation_methodology"}], "paper_keywords": ["simulation", " test generation", " functional test", " learning"], "paper_abstract": "Deterministic functional test pattern generation has been a long-standing open problem, which is an important problem to be solved for both design verification and manufacturing testing. One key in developing a practical functional test pattern generation approach is to avoid the exponential growth of the test generation complexity in terms of the design size. This work proposes a novel functional test generation approach where simulation results are used to guide the generation of additional tests. Our methodology avoids the complexity growth issue by converting some modules in a design into simpler and more efficient models. Then, these models are used to facilitate the actual test generation process. We develop two sets of techniques to achieve these conversions: Boolean learning for random logic and arithmetic learning for datapath modules. We demonstrate the effectiveness and discuss the limitations of these techniques through experiments on benchmark circuits. Last, we validate the overall test generation methodology based on the OpenRISC 1200 microprocessor.", "paper_title": "Simulation-based functional test generation for embedded processors", "paper_id": "WOS:000240634900004"}