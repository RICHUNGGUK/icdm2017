{"auto_keywords": [{"score": 0.041140195621472926, "phrase": "shortest_st-paths"}, {"score": 0.03044727221428736, "phrase": "polynomial_time"}, {"score": 0.00481495049065317, "phrase": "shortest_paths"}, {"score": 0.0044968982227349625, "phrase": "unit_edge_lengths"}, {"score": 0.003640183972131238, "phrase": "subsequent_paths"}, {"score": 0.0031549249117721946, "phrase": "claw-free_graphs"}, {"score": 0.002803104254950008, "phrase": "shortest_rerouting_sequences"}, {"score": 0.0027684263985790526, "phrase": "linear_length"}, {"score": 0.0025373711401047772, "phrase": "rerouting_sequence"}, {"score": 0.0022967713922705, "phrase": "polynomial_time_algorithm"}, {"score": 0.002212535878761148, "phrase": "isolated_paths"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Shortest path", " Reconfiguration", " Reachability", " PSPACE-hard", " Claw-free graph", " Chordal graph"], "paper_abstract": "The Shortest Path Reconfiguration problem has as input a graph G with unit edge lengths, with vertices s and t, and two shortest st-paths P and Q. The question is whether there exists a sequence of shortest st-paths that starts with P and ends with Q, such that subsequent paths differ in only one vertex. This is called a rerouting sequence. This problem is shown to be PSPACE-complete. For claw-free graphs and chordal graphs, it is shown that the problem can be solved in polynomial time, and that shortest rerouting sequences have linear length. For these classes, it is also shown that deciding whether a rerouting sequence exists between all pairs of shortest st-paths can be done in polynomial time. Finally, a polynomial time algorithm for counting the number of isolated paths is given. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "The complexity of rerouting shortest paths", "paper_id": "WOS:000328296800001"}