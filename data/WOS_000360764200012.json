{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "advanced_graph_grammar_features"}, {"score": 0.041562269310917936, "phrase": "model_graphs"}, {"score": 0.004219774794569897, "phrase": "uml_class_diagram"}, {"score": 0.004132743580000062, "phrase": "context-sensitive_graph_grammar"}, {"score": 0.0040194764936614565, "phrase": "precisely_the_set"}, {"score": 0.003697895355947004, "phrase": "input_metamodel"}, {"score": 0.0033549790559972053, "phrase": "graph_grammar_formalism"}, {"score": 0.003129623571496151, "phrase": "application_conditions"}, {"score": 0.003086396772496527, "phrase": "precedence_rules"}, {"score": 0.002879029968532794, "phrase": "rekers"}, {"score": 0.002839254967826503, "phrase": "schurr"}, {"score": 0.0026118503041971976, "phrase": "pure_generalization"}, {"score": 0.002575756583567029, "phrase": "standard_context-sensitive_string_grammars"}, {"score": 0.0024876840172100567, "phrase": "elementary_grammatical_features"}, {"score": 0.002419393934835993, "phrase": "context-sensitive_graph_rewrite_rules"}, {"score": 0.0023043558058824572, "phrase": "arbitrary_multiplicities"}, {"score": 0.0021947755130109696, "phrase": "string_grammars"}, {"score": 0.0021049977753042253, "phrase": "graph-grammar-based_approach"}], "paper_keywords": ["Metamodel", " UML", " Graph grammar", " Parsability", " Parsing", " Semantic"], "paper_abstract": "In this paper, we present a method to convert a metamodel in the form of a UML class diagram into a context-sensitive graph grammar whose language comprises precisely the set of model graphs (UML object diagrams) that conform to the input metamodel. Compared to other approaches that deal with the same problem, we use a graph grammar formalism that does not employ any advanced graph grammar features, such as application conditions, precedence rules, and production schemes. Specifically, we use Rekers and Schurr's Layered Graph Grammars, which may be regarded as a pure generalization of standard context-sensitive string grammars. We show that elementary grammatical features, i.e., grammar labels and context-sensitive graph rewrite rules, suffice to represent metamodels with arbitrary multiplicities and inheritance. Inspired by attribute string grammars, we also propose a graph-grammar-based approach to the semantic analysis of model graphs.", "paper_title": "Converting metamodels to graph grammars: doing without advanced graph grammar features", "paper_id": "WOS:000360764200012"}