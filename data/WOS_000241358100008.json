{"auto_keywords": [{"score": 0.04361950083504033, "phrase": "java_transaction_service"}, {"score": 0.0429275382239484, "phrase": "web_services_atomic_transaction"}, {"score": 0.0330108166223237, "phrase": "ats"}, {"score": 0.00481495049065317, "phrase": "transaction_standards"}, {"score": 0.004555217356295278, "phrase": "transaction_services"}, {"score": 0.003987367359722647, "phrase": "standard_encloses_legacy_transaction_standards"}, {"score": 0.0038998328617557013, "phrase": "application_platform"}, {"score": 0.0037721073763702486, "phrase": "additional_complexity"}, {"score": 0.003588291565092195, "phrase": "legacy_transaction_standards"}, {"score": 0.003509487090932835, "phrase": "heterogeneous_legacy_applications"}, {"score": 0.003451517638449501, "phrase": "underlying_transaction_services"}, {"score": 0.003175676186323053, "phrase": "adapted_transaction_service"}, {"score": 0.002873524721802591, "phrase": "transaction_standards_composition"}, {"score": 0.002542890176213921, "phrase": "ats_implementation"}, {"score": 0.002473203873496859, "phrase": "gotm_framework"}, {"score": 0.0023920904611571783, "phrase": "fine-grained_component-based_approach"}], "paper_keywords": [""], "paper_abstract": "This paper tackles the problem of composition of transaction services, which are governed by various transaction standards. Among others, we can cite the Object Transaction Service, Java Transaction Service, or Web Services Atomic Transaction. However, the Web Services Atomic Transaction standard encloses legacy transaction standards to support the Web Services application platform. This encapsulation introduces an additional complexity to the system and hides the specificities of legacy transaction standards. When composing heterogeneous legacy applications, the underlying transaction services are basically not composed transparently. This paper presents an approach to build an Adapted Transaction Service, named ATS, which supports several transaction standards concurrently. The objective of ATS is to facilitate the transaction standards composition. To introduce ATS we detail how the Object Transaction Service, Web Services Atomic Transaction, and Java Transaction Service standards can be composed. Besides, an ATS implementation is introduced using the GoTM framework. We show that this fine-grained component-based approach does not introduce an additional overhead to legacy applications and supports well scalability. Moreover, this approach can be extended to other standards.", "paper_title": "A component-based approach to compose transaction standards", "paper_id": "WOS:000241358100008"}