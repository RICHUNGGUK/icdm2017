{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "covering_design_problem"}, {"score": 0.03185149409800904, "phrase": "new_implementation"}, {"score": 0.00424659225577246, "phrase": "v-set_v"}, {"score": 0.0034363735647539267, "phrase": "minimum_number"}, {"score": 0.0031950646670695546, "phrase": "new_tabu_algorithm"}, {"score": 0.0027437235598539904, "phrase": "current_configuration"}, {"score": 0.0025340874787959195, "phrase": "currently_used_technique"}, {"score": 0.0022492129111567824, "phrase": "improved_data_structures"}, {"score": 0.0021330830123432614, "phrase": "upper_bound"}], "paper_keywords": ["Covering design", " Metaheuristics", " Tabu search"], "paper_abstract": "A (v, k, t)-covering design is a collection of k-subsets (called blocks) of a v-set V such that every t-subset of V is contained in at least one block. Given v, k and t, the goal of the covering design problem is to find a covering made of a minimum number of blocks. In this paper, we present a new tabu algorithm for tackling this problem. Our algorithm exploits a new implementation designed in order to evaluate efficiently the performance of the neighbors of the current configuration. The new implementation is much less space-consuming than the currently used technique, making it possible to tackle much larger problem instances. It is also significantly faster. Thanks to these improved data structures, our tabu algorithm was able to improve the upper bound of more than 50 problem instances.", "paper_title": "A tabu search algorithm for the covering design problem", "paper_id": "WOS:000297197900002"}