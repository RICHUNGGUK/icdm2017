{"auto_keywords": [{"score": 0.046888273895838106, "phrase": "problem_frames"}, {"score": 0.00481495049065317, "phrase": "aspectual_problem_frames"}, {"score": 0.004138010495069077, "phrase": "initial_requirements_structure"}, {"score": 0.0033190180867511605, "phrase": "aspect-oriented_software_development"}, {"score": 0.0030554300179552415, "phrase": "crosscutting_concerns"}, {"score": 0.002931569771634119, "phrase": "systematic_and_effective_way"}, {"score": 0.0028127163745564777, "phrase": "improved_support"}, {"score": 0.002736162634990377, "phrase": "software_maintenance"}, {"score": 0.0023834640793589435, "phrase": "aspect_concepts"}, {"score": 0.002224510044064184, "phrase": "eventual_aim"}], "paper_keywords": ["requirements", " aspects", " problem frames", " crosscutting model elements"], "paper_abstract": "Problem frames provide an approach to an initial requirements structure which can subsequently help the developer to analyse a problem and to understand its nature. Aspect-oriented software development offers complementary techniques to handle crosscutting concerns in a systematic and effective way, providing improved support for software maintenance and evolution. This paper explores the integration of aspect concepts with problem frames with the eventual aim of providing a more modular, evolvable requirements structure.", "paper_title": "Towards aspectual problem frames: an example", "paper_id": "WOS:000252393600006"}