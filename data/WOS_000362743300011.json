{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "gpgpu-minibench"}, {"score": 0.004619027561771169, "phrase": "graphics_processing_units"}, {"score": 0.004576665387675295, "phrase": "gpu"}, {"score": 0.004390312150344245, "phrase": "concurrent_threads"}, {"score": 0.004290132583731846, "phrase": "cuda"}, {"score": 0.004250681060168718, "phrase": "opencl"}, {"score": 0.004153647187175639, "phrase": "new_opportunities"}, {"score": 0.004077616905584829, "phrase": "general-purpose_parallel_applications"}, {"score": 0.004002972723329302, "phrase": "pre-silicon_architectural_simulation"}, {"score": 0.003966162568548304, "phrase": "modern-day_gpgpu_architectures"}, {"score": 0.003734979290204709, "phrase": "gpgpu_simulation_challenge"}, {"score": 0.0033739270918502285, "phrase": "inherent_execution_behavior"}, {"score": 0.0033428820402140683, "phrase": "existing_gpgpu_workloads"}, {"score": 0.0032514447965530354, "phrase": "central_component"}, {"score": 0.0031625006830124512, "phrase": "divergence_flow_statistics_graph"}, {"score": 0.0030476702431093687, "phrase": "dynamic_control_flow_behavior"}, {"score": 0.002950608985750058, "phrase": "gpgpu_kernel"}, {"score": 0.00288317238346065, "phrase": "synthetic_miniature_gpgpu_kernel"}, {"score": 0.002843450389745497, "phrase": "similar_execution_characteristics"}, {"score": 0.0028042741141125712, "phrase": "original_workload"}, {"score": 0.0026651772919894534, "phrase": "architectural_simulation"}, {"score": 0.0025565050791036973, "phrase": "gpgpu_architectural_simulation"}, {"score": 0.0023851187337905412, "phrase": "average_ipc_error"}, {"score": 0.0023305762840188145, "phrase": "broad_set"}, {"score": 0.0023091093387071593, "phrase": "gpgpu_benchmarks"}, {"score": 0.0022772782536385717, "phrase": "cuda_sdk"}, {"score": 0.0022563012103731747, "phrase": "rodinia"}, {"score": 0.0022355168799960265, "phrase": "parboil"}, {"score": 0.0021049977753042253, "phrase": "gpu_architecture_exploration"}], "paper_keywords": ["Performance evaluation", " workload characterization", " general-purpose processing unit (GPGPU)", " synthetic workload generation"], "paper_abstract": "Graphics processing units (GPU), due to their massive computational power with up to thousands of concurrent threads and general-purpose GPU (GPGPU) programming models such as CUDA and OpenCL, have opened up new opportunities for speeding up general-purpose parallel applications. Unfortunately, pre-silicon architectural simulation of modern-day GPGPU architectures and workloads is extremely time-consuming. This paper addresses the GPGPU simulation challenge by proposing a framework, called GPGPU-MiniBench, for generating miniature, yet representative GPGPU workloads. GPGPU-MiniBench first summarizes the inherent execution behavior of existing GPGPU workloads in a profile. The central component in the profile is the Divergence Flow Statistics Graph (DFSG), which characterizes the dynamic control flow behavior including loops and branches of a GPGPU kernel. GPGPU-MiniBench generates a synthetic miniature GPGPU kernel that exhibits similar execution characteristics as the original workload, yet its execution time is much shorter thereby dramatically speeding up architectural simulation. Our experimental results show that GPGPU-MiniBench can speed up GPGPU architectural simulation by a factor of 49x on average and up to 589x, with an average IPC error of 4.7 percent across a broad set of GPGPU benchmarks from the CUDA SDK, Rodinia and Parboil benchmark suites. We also demonstrate the usefulness of GPGPU-MiniBench for driving GPU architecture exploration.", "paper_title": "GPGPU-MiniBench: Accelerating GPGPU Micro-Architecture Simulation", "paper_id": "WOS:000362743300011"}