{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "user_interfaces"}, {"score": 0.004734987730139094, "phrase": "wide_range"}, {"score": 0.004354572391793908, "phrase": "value_changes"}, {"score": 0.003916098498242888, "phrase": "research_literature"}, {"score": 0.003703282519292336, "phrase": "interface_features"}, {"score": 0.003405472159599442, "phrase": "implementation_costs"}, {"score": 0.002618366076489732, "phrase": "generic_help_mechanisms"}, {"score": 0.002574788013427524, "phrase": "data_flow"}, {"score": 0.002531933388815139, "phrase": "command_deactivation"}, {"score": 0.002354302193867031, "phrase": "reusable_implementation"}, {"score": 0.002164738347530834, "phrase": "user_interface"}, {"score": 0.0021049977753042253, "phrase": "constraint_system"}], "paper_keywords": ["Algorithms", " user interfaces", " software reuse", " constraint systems", " software architecture"], "paper_abstract": "User interfaces exhibit a wide range of features that are designed to assist users. Interaction with one widget may trigger value changes, disabling, or other behaviors in other widgets. Such automatic behavior may be confusing or disruptive to users. Research literature on user interfaces offers a number of solutions, including interface features for explaining or controlling these behaviors. To help programmers help users, the implementation costs of these features need to be much lower. Ideally, they could be generated for \"free.\" This paper shows how several help and control mechanisms can be implemented as algorithms and reused across interfaces, making the cost of their adoption negligible. Specifically, we describe generic help mechanisms for visualizing data flow and explaining command deactivation, and a mechanism for controlling the flow of data. A reusable implementation of these features is enabled by our property model framework, where the data manipulated through a user interface is modeled as a constraint system.", "paper_title": "Helping Programmers Help Users", "paper_id": "WOS:000303558100022"}