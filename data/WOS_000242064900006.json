{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "xpath_queries"}, {"score": 0.03806431507322747, "phrase": "query_processing"}, {"score": 0.026387773907640626, "phrase": "traditional_methods"}, {"score": 0.024569834132651378, "phrase": "toxin_indexing_approach"}, {"score": 0.004614483128885678, "phrase": "indexing_techniques"}, {"score": 0.004476399615305783, "phrase": "recent_times"}, {"score": 0.004316247999038272, "phrase": "xml"}, {"score": 0.004136333933790974, "phrase": "semi-structured_models"}, {"score": 0.004086350434865782, "phrase": "tree-like_structures"}, {"score": 0.003964024294172366, "phrase": "xpath"}, {"score": 0.003916113052163583, "phrase": "xquery"}, {"score": 0.0037075456471849892, "phrase": "regular_path_expressions"}, {"score": 0.0034049128232186013, "phrase": "entry-point"}, {"score": 0.0033433494457598017, "phrase": "epa"}, {"score": 0.0032828706086018133, "phrase": "two-point_entry_algorithms"}, {"score": 0.0029244418026475832, "phrase": "root-first"}, {"score": 0.0027184540871935284, "phrase": "experimental_results"}, {"score": 0.002636956926079255, "phrase": "xml_benchmark_queries"}, {"score": 0.0022508572821818124, "phrase": "improved_performance_results"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v._all_rights"}], "paper_keywords": ["XML", " indexing", " query processing"], "paper_abstract": "A number of indexing techniques have been proposed in recent times for optimizing the queries on XML and other semi-structured data models. Most of the semi-structured models use tree-like structures and query languages (XPath, XQuery, etc.) which make use of regular path expressions to optimize the query processing. In this paper, we propose two algorithms called Entry-point algorithm (EPA) and Two-point Entry algorithms that exploit different types of indices to efficiently process XPath queries. We discuss and compare two approaches namely, Root-first and Bottom-first in implementing the EPA. We present the experimental results of the algorithms using XML benchmark queries and data and compare the results with that of traditional methods of query processing with and without the use of indexes, and ToXin indexing approach. Our algorithms show improved performance results than the traditional methods and Toxin indexing approach. (C) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Efficient processing of XPath queries using indexes", "paper_id": "WOS:000242064900006"}