{"auto_keywords": [{"score": 0.03283075453743219, "phrase": "fomin"}, {"score": 0.0047155367844327, "phrase": "undirected_graph"}, {"score": 0.004676345706416371, "phrase": "n_vertices"}, {"score": 0.004618166136069052, "phrase": "maximum_leaf_spanning_tree_problem"}, {"score": 0.004522796947899013, "phrase": "spanning_tree"}, {"score": 0.004040688646993605, "phrase": "simple_branching_algorithm"}, {"score": 0.0039635213559923894, "phrase": "kneis"}, {"score": 0.0034911335714333507, "phrase": "running_time"}, {"score": 0.0034574078193843408, "phrase": "kratsch"}, {"score": 0.003375126056712109, "phrase": "grandoni"}, {"score": 0.003265365666305185, "phrase": "exponential_time_viewpoint"}, {"score": 0.0031579997262619758, "phrase": "connected_dominating_set_problem"}, {"score": 0.0027054473441439422, "phrase": "useful_properties"}, {"score": 0.002682917193736698, "phrase": "kneis_et_al"}, {"score": 0.002436888552432559, "phrase": "branching_algorithm"}, {"score": 0.002327310963701377, "phrase": "measure-and-conquer_technique"}, {"score": 0.0022601535748259785, "phrase": "lower_bound"}, {"score": 0.002194929830604162, "phrase": "worst_case"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Exponential time algorithms", " Graph algorithms", " Spanning tree", " Maximum Leaf Spanning Tree"], "paper_abstract": "Given an undirected graph with n vertices, the MAXIMUM LEAF SPANNING TREE problem is to find a spanning tree with as many leaves as possible. When parameterized in the number of leaves k, this problem can be solved in time O(4(k)poly(n)) using a simple branching algorithm introduced by a subset of the authors (Kneis et al. 2008 [16]). Daligault et al. (2010) [16] improved the branching and obtained a running time of O(3.72(k)poly(n)). In this paper, we study the problem from an exponential time viewpoint, where it is equivalent to the CONNECTED DOMINATING SET problem. Here, Fomin, Grandoni, and Kratsch showed how to break the Omega(2(n)) barrier and proposed an O(1.9407(n))-time algorithm (Fomin et al. 2008 [11]). Based on some useful properties of Kneis et al. (2008) [16] and Daligault et al. (2010) [6], we present a branching algorithm whose running time of O(1.8966(n)) has been analyzed using the Measure-and-Conquer technique. Finally, we provide a lower bound of Omega(1.4422(n)) for the worst case running time of our algorithm. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "An exact algorithm for the Maximum Leaf Spanning Tree problem", "paper_id": "WOS:000296037000006"}