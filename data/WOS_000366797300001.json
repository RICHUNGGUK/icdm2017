{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "service_composition"}, {"score": 0.00475924837336259, "phrase": "self-controlled_components"}, {"score": 0.0045959609346817535, "phrase": "new_ecosystem"}, {"score": 0.004012271808564447, "phrase": "appropriate_properties"}, {"score": 0.003950453462399077, "phrase": "service_components"}, {"score": 0.0037414662674652805, "phrase": "personalised_compositions"}, {"score": 0.003698136685049485, "phrase": "service_level_agreement"}, {"score": 0.0033690254452595865, "phrase": "design_step"}, {"score": 0.0033429545815200825, "phrase": "functional_and_non-functional_specifications"}, {"score": 0.003253279945540651, "phrase": "strong_structure"}, {"score": 0.003228101865545105, "phrase": "explicit_composition"}, {"score": 0.0031906984691667246, "phrase": "autonomic_management"}, {"score": 0.0031660031870090434, "phrase": "component-oriented_programming"}, {"score": 0.0031171827624599693, "phrase": "highly_dynamic_composition"}, {"score": 0.0030572112793962004, "phrase": "discovery_capacities"}, {"score": 0.003033546013625887, "phrase": "service-oriented_computing"}, {"score": 0.003010063382882408, "phrase": "self-control_mechanisms"}, {"score": 0.0029066143383279217, "phrase": "autonomic_application_management"}, {"score": 0.002817639725689939, "phrase": "new_concept"}, {"score": 0.0027741761880779535, "phrase": "strong_quality_of_service"}, {"score": 0.0027102313244646934, "phrase": "composed_applications"}, {"score": 0.002606906626639414, "phrase": "springoo"}, {"score": 0.0025172781808293827, "phrase": "legacy_application"}, {"score": 0.0023380300046435187, "phrase": "virtual_private_service_network"}, {"score": 0.002319918823705175, "phrase": "vpsn"}, {"score": 0.002293014162421338, "phrase": "virtual_service_community"}, {"score": 0.002205560249972527, "phrase": "personalised_service_level_agreement"}, {"score": 0.002188477753910074, "phrase": "sla"}, {"score": 0.002163089417146551, "phrase": "user_requirements"}, {"score": 0.0021049977753042253, "phrase": "qos_contract"}], "paper_keywords": ["Service component", " Quality of service", " Autonomic control", " Service composition"], "paper_abstract": "Cloud computing and Future Internet promise a new ecosystem where everything is \"as a service\", reachable and connectable anywhere and anytime, everyone succeeding to get a service composition that meets his needs. But do we have the structure and the appropriate properties to design the service components and do we have the means to manage, at run-time, the personalised compositions corresponding to Service Level Agreement? In this article we introduce an entity of service composition called Self-Controlled Component (SCC), including, since the design step, functional and non-functional specifications. SCCs benefit both from the strong structure, explicit composition, and autonomic management of component-oriented programming, from the highly dynamic composition, and from the discovery capacities of service-oriented computing. Self-control mechanisms are then attached automatically to SCCs to enable autonomic application management during execution. The objective of this new concept is to provide strong Quality of Service (QoS) guarantees of composed applications. We illustrate the approach using an example called Springoo, to how in the context of a legacy application the contributions and benefits of our solution. For the management of the service composition we propose the concept of Virtual Private Service Network (VPSN) and Virtual Service Community (VSC) that allows us to model the personalised Service Level Agreement (SLA) where user requirements and provider offers converge on a QoS contract.", "paper_title": "Management of service composition based on self-controlled components", "paper_id": "WOS:000366797300001"}