{"auto_keywords": [{"score": 0.013723181420469145, "phrase": "nested_dissection"}, {"score": 0.013166750169644295, "phrase": "find"}, {"score": 0.00481495049065317, "phrase": "sparse_matrix_computations"}, {"score": 0.004687419167634463, "phrase": "fast_algorithm"}, {"score": 0.004563250218021092, "phrase": "sparse_matrix"}, {"score": 0.004389653570743615, "phrase": "non-equilibrium_green's_functions"}, {"score": 0.004110725239362369, "phrase": "big-o_sense"}, {"score": 0.0038151298350627065, "phrase": "large_constant_factor"}, {"score": 0.0037811124250339335, "phrase": "computational_cost"}, {"score": 0.0037586024701858557, "phrase": "find."}, {"score": 0.003691869399440961, "phrase": "partitioning_scheme"}, {"score": 0.0034160718761447138, "phrase": "computation_process"}, {"score": 0.003305661550005516, "phrase": "significant_speedup"}, {"score": 0.0032664003336950243, "phrase": "realistic_devices"}, {"score": 0.003189266816073668, "phrase": "new_algorithm"}, {"score": 0.0031513836446128264, "phrase": "added_advantage"}, {"score": 0.0031046598804456366, "phrase": "diagonal_entries"}, {"score": 0.002977475154200498, "phrase": "current_state-of-the-art_recursive_methods"}, {"score": 0.0028131366865158302, "phrase": "first_attempt"}, {"score": 0.0027714139741120587, "phrase": "widely-used_relationship"}, {"score": 0.0027303083730101734, "phrase": "matrix_computations"}, {"score": 0.002689810805544938, "phrase": "multiple_eliminations"}, {"score": 0.0026578445199569893, "phrase": "intermediate_results"}, {"score": 0.002511103281395712, "phrase": "elimination_trees"}, {"score": 0.0024009864458366657, "phrase": "significant_extra_round-off_errors"}, {"score": 0.0023372424895785103, "phrase": "well-conditioned_matrices"}, {"score": 0.002268394245801392, "phrase": "back-substitution_algorithms"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Nested dissection", " Green's function", " NEGF", " Decomposition", " Gaussian elimination", " Sparse matrix", " Inverse", " Elimination tree"], "paper_abstract": "We have developed a fast algorithm for computing certain entries of the inverse of a sparse matrix. Such computations are critical to many applications, such as the calculation of non-equilibrium Green's functions G(r) and G(<) for nano-devices. The FIND (Fast Inverse using Nested Dissection) algorithm is optimal in the big-O sense. However, in practice, FIND suffers from two problems due to the width-2 separators used by its partitioning scheme. One problem is the presence of a large constant factor in the computational cost of FIND. The other problem is that the partitioning scheme used by FIND is incompatible with most existing partitioning methods and libraries for nested dissection, which all use width-1 separators. Our new algorithm resolves these problems by thoroughly decomposing the computation process such that width-1 separators can be used, resulting in a significant speedup over FIND for realistic devices -up to twelve-fold in simulation. The new algorithm also has the added advantage that desired off-diagonal entries can be computed for free. Consequently, our algorithm is faster than the current state-of-the-art recursive methods for meshes of any size. Furthermore, the framework used in the analysis of our algorithm is the first attempt to explicitly apply the widely-used relationship between mesh nodes and matrix computations to the problem of multiple eliminations with reuse of intermediate results. This framework makes our algorithm easier to generalize, and also easier to compare against other methods related to elimination trees. Finally, our accuracy analysis shows that the algorithms that require back-substitution are subject to significant extra round-off errors, which become extremely large even for some well-conditioned matrices or matrices with only moderately large condition numbers. When compared to these back-substitution algorithms, our algorithm is generally a few orders of magnitude more accurate, and our produced round-off errors stay at a reasonable level. (C) 2013 Elsevier Inc. All rights reserved.", "paper_title": "A fast algorithm for sparse matrix computations related to inversion", "paper_id": "WOS:000319049800046"}