{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "molten_iron_allocation_problem"}, {"score": 0.04752430871139181, "phrase": "molten_iron"}, {"score": 0.014756517517370915, "phrase": "blast_furnaces"}, {"score": 0.009998990608518608, "phrase": "np"}, {"score": 0.004771196027464407, "phrase": "iron_and_steel_industry"}, {"score": 0.004663533386096864, "phrase": "miap"}, {"score": 0.004475798524102238, "phrase": "steel-making_furnaces"}, {"score": 0.004315249628884236, "phrase": "release_times"}, {"score": 0.004179480763003705, "phrase": "draining_plan"}, {"score": 0.003956558420993431, "phrase": "steel-making_stages"}, {"score": 0.003920573616298175, "phrase": "time_window_constraints"}, {"score": 0.0035781807623238905, "phrase": "minimum_total_weighted_completion_time"}, {"score": 0.0034813964296826973, "phrase": "practical_consideration"}, {"score": 0.003433987036569199, "phrase": "steel-making_efficiency"}, {"score": 0.0033872210664940786, "phrase": "operation_cost"}, {"score": 0.003177235604998673, "phrase": "parallel_machine_scheduling_problem"}, {"score": 0.0028470123663391104, "phrase": "integer_programming_model"}, {"score": 0.002682669289913153, "phrase": "dantzig-wolfe_decomposition"}, {"score": 0.0025862736445290088, "phrase": "column_generation-based_branch-and-price_algorithm"}, {"score": 0.0023927516438886445, "phrase": "state-space_relaxation-based_dynamic_programming_algorithm"}, {"score": 0.0022857351723674004, "phrase": "proposed_algorithm"}, {"score": 0.002163600705898299, "phrase": "reasonable_computation_time"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["molten iron allocation", " integer programming", " column generation", " branch-and-price", " state-space relaxation", " dynamic programming"], "paper_abstract": "The molten iron allocation problem (MIAP) is to allocate molten iron from blast furnaces to steel-making furnaces. The allocation needs to observe the release times of the molten iron defined by the draining plan of the blast furnaces and the transport time between the iron-making and steel-making stages. Time window constraints for processing the molten iron must be satisfied to avoid freezing. The objective is to find a schedule with minimum total weighted completion time. This objective reflects the practical consideration of improving steel-making efficiency and reducing operation cost caused by the need for reheating. Such a problem can be viewed as a parallel machine scheduling problem with time windows which is known to be NP-hard. In this paper, we first formulate the molten iron allocation problem as an integer programming model and then reformulate it as a set partitioning model by applying the Dantzig-Wolfe decomposition. We solve the problem using a column generation-based branch-and-price algorithm. Since the subproblem of column generation is still NP-hard, we propose a state-space relaxation-based dynamic programming algorithm for the subproblem. Computational experiments demonstrate that the proposed algorithm is capable of solving problems with up to 100 jobs to optimality within a reasonable computation time. (c) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "A branch-and-price algorithm to solve the molten iron allocation problem in iron and steel industry", "paper_id": "WOS:000245878600011"}