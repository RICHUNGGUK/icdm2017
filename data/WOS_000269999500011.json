{"auto_keywords": [{"score": 0.0477034884432716, "phrase": "internet_applications"}, {"score": 0.03947447987613366, "phrase": "dns_resolution_time"}, {"score": 0.00481495049065317, "phrase": "domain_name_system"}, {"score": 0.004634799977448855, "phrase": "primary_identification_mechanism"}, {"score": 0.004461359547152617, "phrase": "dns_resolutions"}, {"score": 0.004349337717774093, "phrase": "unbearably_long_time"}, {"score": 0.004055511503825102, "phrase": "service_quality"}, {"score": 0.00385431710959668, "phrase": "world_wide_web"}, {"score": 0.003663067281537946, "phrase": "expired_cached_records"}, {"score": 0.003593812067062062, "phrase": "available_records"}, {"score": 0.0034154440860550564, "phrase": "inherent_problem"}, {"score": 0.0033084729942065142, "phrase": "additional_dns_traffic"}, {"score": 0.0031242709509664837, "phrase": "dns_resolution_time_reduction_scheme"}, {"score": 0.0028761045789798103, "phrase": "cached_records"}, {"score": 0.002785978280998868, "phrase": "solicited_dns_queries"}, {"score": 0.0026986685585382347, "phrase": "additional_dns_queries"}, {"score": 0.002316105585203396, "phrase": "additional_dns_messages"}, {"score": 0.002286781334850213, "phrase": "simulation_results"}, {"score": 0.002105088679377514, "phrase": "dns"}], "paper_keywords": ["Domain name system (DNS)", " piggyback", " renewal", " renewal using piggyback (RUP)"], "paper_abstract": "Domain name system (DNS) is a primary identification mechanism for Internet applications. However, DNS resolutions often take an unbearably long time, and this could seriously impair the consistency of the service quality of Internet applications based on DNS such as World Wide Web. Several approaches reduce DNS resolution time by proactively refreshing expired cached records or prefetching available records beforehand, but these approaches have an inherent problem in that they cause additional DNS traffic. In this paper, we propose a DNS resolution time reduction scheme, named renewal using piggyback (RUP), which refreshes expired cached records by piggybacking them onto solicited DNS queries instead of by issuing additional DNS queries. This method decreases both DNS resolution time and DNS traffic since it reduces the number of queries generated to handle a given DNS resolution without generating additional DNS messages. Simulation results based on two large independent DNS traces show that our proposed approach much reduces not only the DNS resolution time but also the DNS traffic.", "paper_title": "DNS Resolution with Renewal Using Piggyback", "paper_id": "WOS:000269999500011"}