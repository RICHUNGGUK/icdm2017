{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_maintainability"}, {"score": 0.0345903359351965, "phrase": "software_size"}, {"score": 0.029249049511225127, "phrase": "relative_measures"}, {"score": 0.004481132747216135, "phrase": "clinical_information_system"}, {"score": 0.00443308765153716, "phrase": "openehr_model_driven_development"}, {"score": 0.004140490129683107, "phrase": "openehr's_multi-level_modelling_approach"}, {"score": 0.0040086845241492424, "phrase": "existing_clinically_used_application"}, {"score": 0.003965684670332574, "phrase": "microsoft_visual_basic"}, {"score": 0.003939463782765632, "phrase": "access"}, {"score": 0.0038950367927745267, "phrase": "almost_all_the_domain_knowledge"}, {"score": 0.0038256426589560774, "phrase": "software_code"}, {"score": 0.003798231095121328, "phrase": "data_model"}, {"score": 0.003611751858608048, "phrase": "openehr_archetypes"}, {"score": 0.0035346515636097533, "phrase": "eight_real-world_change_requests"}, {"score": 0.0034716556902775037, "phrase": "live_clinical_usage"}, {"score": 0.0032423089921154503, "phrase": "change_request"}, {"score": 0.003161674440750158, "phrase": "half_the_time"}, {"score": 0.002708399936381754, "phrase": "size_change"}, {"score": 0.0026505322540093783, "phrase": "architectural_differences"}, {"score": 0.002612640527241776, "phrase": "change_requests"}, {"score": 0.0025476254812544135, "phrase": "openehr_model"}, {"score": 0.002538470301402269, "phrase": "driven_development"}, {"score": 0.0025021765811679446, "phrase": "better_software_maintainability"}, {"score": 0.002362105010110277, "phrase": "domain_knowledge"}, {"score": 0.002174346780014853, "phrase": "controlled_study_design"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ireland_ltd."}], "paper_keywords": ["Electronic health records", " Software design", " Standards", " Software maintainability", " openEHR", " Archetypes"], "paper_abstract": "Purpose: To assess whether it is easier to maintain a clinical information system developed using openEHR model driven development versus mainstream methods. Methods: A new open source application (GastrOS) has been developed following openEHR's multi-level modelling approach using .Net/C# based on the same requirements of an existing clinically used application developed using Microsoft Visual Basic and Access database. Almost all the domain knowledge was embedded into the software code and data model in the latter. The same domain knowledge has been expressed as a set of openEHR Archetypes in GastrOS. We then introduced eight real-world change requests that had accumulated during live clinical usage, and implemented these in both systems while measuring time for various development tasks and change in software size for each change request. Results: Overall it took half the time to implement changes in GastrOS. However it was the more difficult application to modify for one change request, suggesting the nature of change is also important. It was not possible to implement changes by modelling only. Comparison of relative measures of time and software size change within each application highlights how architectural differences affected maintainability across change requests. Conclusions: The use of openEHR model driven development can result in better software maintainability. The degree to which openEHR affects software maintainability depends on the extent and nature of domain knowledge involved in changes. Although we used relative measures for time and software size, confounding factors could not be totally excluded as a controlled study design was not feasible. (C) 2014 Elsevier Ireland Ltd. All rights reserved.", "paper_title": "Evaluation of software maintainability with openEHR - a comparison of architectures", "paper_id": "WOS:000343114700007"}