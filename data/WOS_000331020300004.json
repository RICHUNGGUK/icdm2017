{"auto_keywords": [{"score": 0.04830650761330821, "phrase": "sht"}, {"score": 0.00481495049065317, "phrase": "harmonic_transforms"}, {"score": 0.0047820521205253035, "phrase": "heterogeneous_architectures"}, {"score": 0.004668659654386976, "phrase": "spherical_harmonic_transforms"}, {"score": 0.004434608130268514, "phrase": "cosmological_observations"}, {"score": 0.004314595541370065, "phrase": "new_cutting-edge_science_goals"}, {"score": 0.004169117683086526, "phrase": "experimental_or_observational_data"}, {"score": 0.004098221047046135, "phrase": "unprecedented_volumes"}, {"score": 0.004014728271095809, "phrase": "formidable_challenge"}, {"score": 0.003973619384183145, "phrase": "currently_existing_implementations"}, {"score": 0.003866033961859878, "phrase": "parallel_algorithms"}, {"score": 0.0037742798298349145, "phrase": "intra-node_parallelism"}, {"score": 0.0037356237848699867, "phrase": "novel_supercomputer_architectures"}, {"score": 0.0037100724714897084, "phrase": "multi-core_processors"}, {"score": 0.0036846952802928, "phrase": "graphic_processing_units"}, {"score": 0.003659769589225125, "phrase": "gpu"}, {"score": 0.0034402448248944434, "phrase": "interface-based_parallelisation_layer"}, {"score": 0.0033127570056253283, "phrase": "overall_efficiency"}, {"score": 0.0031464653712924436, "phrase": "latest_compute_unified_device_architecture_architecture"}, {"score": 0.003050712095258931, "phrase": "art_implementation"}, {"score": 0.003019444345150991, "phrase": "multi-core_processor"}, {"score": 0.0028580007147015734, "phrase": "inverse_transform_run"}, {"score": 0.002723815159181826, "phrase": "hybrid_message"}, {"score": 0.002649978056195926, "phrase": "quad-core_processors"}, {"score": 0.0026409217450743924, "phrase": "intel"}, {"score": 0.0026318336239006712, "phrase": "nehalem"}, {"score": 0.0026138115448726567, "phrase": "problem_sizes"}, {"score": 0.0025429488129788077, "phrase": "direct_transforms"}, {"score": 0.002382235844852208, "phrase": "algorithmic_solutions"}, {"score": 0.0023497148309861303, "phrase": "major_steps"}, {"score": 0.002317636745271539, "phrase": "transforms_calculation"}, {"score": 0.0022703369939978185, "phrase": "major_impact"}, {"score": 0.0021562588804528667, "phrase": "inverse_operations"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["spherical harmonic transforms", " hybrid architectures", " hybrid programming", " CUDA", " multi-GPU", " CMB"], "paper_abstract": "Spherical harmonic transforms (SHT) are at the heart of many scientific and practical applications ranging from climate modelling to cosmological observations. In many of these areas, new cutting-edge science goals have been recently proposed requiring simulations and analyses of experimental or observational data at very high resolutions and of unprecedented volumes. Both these aspects pose formidable challenge for the currently existing implementations of the transforms. This paper describes parallel algorithms for computing SHT with two variants of intra-node parallelism appropriate for novel supercomputer architectures, multi-core processors and Graphic Processing Units (GPU). It also discusses their performance, alone and embedded within a top-level, Message Passing Interface-based parallelisation layer ported from the S(2)HAT library, in terms of their accuracy, overall efficiency and scalability. We show that our inverse SHT run on GeForce 400 Series GPUs equipped with latest Compute Unified Device Architecture architecture (Fermi) outperforms the state of the art implementation for a multi-core processor executed on a current Intel Core i7-2600K. Furthermore, we show that an Message Passing Interface/Compute Unified Device Architecture version of the inverse transform run on a cluster of 128 Nvidia Tesla S1070 is as much as 3times faster than the hybrid Message Passing Interface/OpenMP version executed on the same number of quad-core processors Intel Nehalem for problem sizes motivated by our target applications. Performance of the direct transforms is however found to be at the best comparable in these cases. We discuss in detail the algorithmic solutions devised for the major steps involved in the transforms calculation, emphasising those with a major impact on their overall performance and elucidates the sources of the dichotomy between the direct and the inverse operations.Copyright (c) 2013 John Wiley & Sons, Ltd.", "paper_title": "Parallel spherical harmonic transforms on heterogeneous architectures ( graphics processing units/multi-core CPUs)", "paper_id": "WOS:000331020300004"}