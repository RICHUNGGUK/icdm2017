{"auto_keywords": [{"score": 0.04964635174824772, "phrase": "virtual_characters"}, {"score": 0.00481495049065317, "phrase": "collision_checking"}, {"score": 0.004685575787741084, "phrase": "crowded_scene"}, {"score": 0.0046221918332842995, "phrase": "busy_shopping_street"}, {"score": 0.0045804107341714, "phrase": "tight_packing"}, {"score": 0.004240116703465252, "phrase": "collision_detection_shape"}, {"score": 0.004051828608343507, "phrase": "full_collision_detection"}, {"score": 0.003683097597914604, "phrase": "-independent_cylinder"}, {"score": 0.0033937776228549557, "phrase": "undetected_penetrations"}, {"score": 0.0033326252993345685, "phrase": "possible_solution"}, {"score": 0.0032135959043774085, "phrase": "bounding_cylinder_hierarchy"}, {"score": 0.003056819704624705, "phrase": "vertical_cylinders"}, {"score": 0.0029610653556474856, "phrase": "bch"}, {"score": 0.0028813415821988156, "phrase": "single_cylinder"}, {"score": 0.0027282915297520624, "phrase": "existing_crowd_simulation_systems"}, {"score": 0.0026548344763838213, "phrase": "commonly_used_collision_shapes"}, {"score": 0.002548331088496964, "phrase": "box_tree"}, {"score": 0.002491015208328868, "phrase": "query_time"}, {"score": 0.0023372808856170386, "phrase": "possible_crowd_densities"}, {"score": 0.0022847009758393405, "phrase": "close_characters"}, {"score": 0.0021731423856364003, "phrase": "critical_maximum_depth"}, {"score": 0.0021436720821474973, "phrase": "bch._copyright"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["collision detection", " hierarchical data structure", " geometric algorithms", " shape approximation"], "paper_abstract": "Simulating a crowded scene like a busy shopping street requires tight packing of virtual characters. In such cases, collisions are likely to occur, and the choice in collision detection shape will influence how characters are allowed to intermingle. Full collision detection is too expensive for crowds, so simplifications are needed. The most common simplification, the fixed-width, pose-independent cylinder, does not allow intermingling of characters, as it will either cause too much empty space between characters or undetected penetrations. As a possible solution to this problem, we introduce the bounding cylinder hierarchy (BCH), a bounding volume hierarchy that uses vertical cylinders as bounding shapes. Because the BCH is a generalization of the single cylinder, we expect that this representation can be easily integrated with existing crowd simulation systems. We compare our BCH with commonly used collision shapes, namely the single cylinder and oriented bounding box tree, in terms of query time, construction time, and represented volume. To get an indication of possible crowd densities, we investigate how close characters can be before collision is detected and finally propose a critical maximum depth for the BCH. Copyright (c) 2014 John Wiley & Sons, Ltd.", "paper_title": "Hierarchical structures for collision checking between virtual characters", "paper_id": "WOS:000337524300014"}