{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "epsilon_flock"}, {"score": 0.03758827602955699, "phrase": "model_migration"}, {"score": 0.004586531354697466, "phrase": "model-driven_engineering"}, {"score": 0.004338661611644755, "phrase": "software_evolution"}, {"score": 0.004104132253183181, "phrase": "model_editors"}, {"score": 0.0040194764936614565, "phrase": "managing_models"}, {"score": 0.003697895355947004, "phrase": "limited_support"}, {"score": 0.0034978813769575233, "phrase": "development_activity"}, {"score": 0.00342568771304873, "phrase": "instance_models"}, {"score": 0.003285725064532174, "phrase": "metamodel_evolution"}, {"score": 0.003107935254560724, "phrase": "conservative_copy"}, {"score": 0.0030017207229983385, "phrase": "model_transformation"}, {"score": 0.0025937408242280757, "phrase": "model_transformation_language"}, {"score": 0.0024876840172100567, "phrase": "proposed_structures"}, {"score": 0.0023529740798601015, "phrase": "model_migration_strategies"}, {"score": 0.0023043558058824572, "phrase": "different_styles"}, {"score": 0.002272501735900584, "phrase": "transformation_language"}, {"score": 0.002149442337255617, "phrase": "uml"}, {"score": 0.0021049977753042253, "phrase": "graphical_modelling_framework"}], "paper_keywords": ["Model migration", " Metamodel evolution", " Model transformation"], "paper_abstract": "Model-driven engineering introduces additional challenges for controlling and managing software evolution. Today, tools exist for generating model editors and for managing models with transformation, validation, merging and weaving. There is limited support, however, for model migration-a development activity in which instance models are updated in response to metamodel evolution. In this paper, we propose conservative copy-a style of model transformation that we believe is well-suited to model migration-and Epsilon Flock-a compact model-to-model transformation language tailored for model migration. The proposed structures are evaluated by comparing the conciseness of model migration strategies written in different styles of transformation language, using several examples of evolution taken from UML and the graphical modelling framework.", "paper_title": "Epsilon Flock: a model migration language", "paper_id": "WOS:000335236300014"}