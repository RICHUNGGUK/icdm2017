{"auto_keywords": [{"score": 0.03322940483512358, "phrase": "nltostd_method"}, {"score": 0.006204292751143739, "phrase": "nltostd"}, {"score": 0.004621551111118693, "phrase": "software_development_life_cycle"}, {"score": 0.0044922081848067135, "phrase": "high_quality"}, {"score": 0.004463958296056236, "phrase": "reliable_software"}, {"score": 0.004271100220705305, "phrase": "natural_language"}, {"score": 0.003972110690317813, "phrase": "high-quality_software"}, {"score": 0.003922283019437895, "phrase": "effective_requirements_verification_methods"}, {"score": 0.0038365781437074017, "phrase": "inherently_ambiguous_nature"}, {"score": 0.0038124354878360032, "phrase": "nl_specifications"}, {"score": 0.0036018503805251424, "phrase": "nl_requirements_verification"}, {"score": 0.0035342634200440435, "phrase": "controlled_experiments"}, {"score": 0.003457007642786582, "phrase": "model-based_requirements_verification_method"}, {"score": 0.0033814348757887232, "phrase": "nl_requirements"}, {"score": 0.003349552702131293, "phrase": "state_transition_diagram"}, {"score": 0.0031148723927633955, "phrase": "requirement_faults"}, {"score": 0.002933422608537915, "phrase": "north_dakota_state_university"}, {"score": 0.0028421959620622355, "phrase": "traditional_fault_checklist"}, {"score": 0.0027976491158911514, "phrase": "requirement_documents"}, {"score": 0.002585144987720461, "phrase": "missing_functionality"}, {"score": 0.0024889396846235, "phrase": "fault-checklist_method"}, {"score": 0.002396306027986643, "phrase": "method's_applicability"}, {"score": 0.002321744299010337, "phrase": "new_approach"}, {"score": 0.0022781229833499753, "phrase": "requirements_documents"}, {"score": 0.0021453112313233554, "phrase": "future_empirical_evaluation"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Requirements verification", " Model-based verification", " NLtoSTD", " Fault checklist", " Controlled experiments"], "paper_abstract": "Context: Requirements engineering is one of the most important and critical phases in the software development life cycle, and should be carefully performed to build high quality and reliable software. However, requirements are typically gathered through various sources and are represented in natural language (NL), making requirements engineering a difficult, fault prone, and a challenging task. Objective: To ensure high-quality software, we need effective requirements verification methods that can clearly handle and address inherently ambiguous nature of NL specifications. The objective of this paper is to propose a method that can address the challenges with NL requirements verification and to evaluate our proposed method through controlled experiments. Method: We propose a model-based requirements verification method, called NLtoSTD, which transforms NL requirements into a State Transition Diagram (STD) that can help to detect and to eliminate ambiguities and incompleteness. The paper describes the NLtoSTD method to detect requirement faults, thereby improving the quality of the requirements. To evaluate the NLtoSTD method, we conducted two controlled experiments at North Dakota State University in which the participants employed the NLtoSTD method and a traditional fault checklist during the inspection of requirement documents to identify the ambiguities and incompleteness of the requirements. Results: Two experiment results show that the NLtoSTD method can be more effective in exposing the missing functionality and, in some cases, more ambiguous information than the fault-checklist method. Our experiments also revealed areas of improvement that benefit the method's applicability in the future. Conclusion: We presented a new approach, NLtoSTD, to verify requirements documents and two controlled experiments assessing our approach. The results are promising and have motivated the refinement of the NLtoSTD method and future empirical evaluation. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "Model-based requirements verification method: Conclusions from two controlled experiments", "paper_id": "WOS:000331353000004"}