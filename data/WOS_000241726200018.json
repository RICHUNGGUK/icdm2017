{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "xml_views"}, {"score": 0.004318881178805575, "phrase": "relational_databases"}, {"score": 0.0034491650585057754, "phrase": "base_tuples"}, {"score": 0.003254610516477302, "phrase": "concurrency_control"}, {"score": 0.0024342079318127423, "phrase": "database_state"}], "paper_keywords": [""], "paper_abstract": "In this paper, we focus on B2B scenarios where XML views are extracted from relational databases and sent over the Web to another application that edits them and sends them back after a certain (usually long) period of time. In such transactions, it is unrealistic to lock the base tuples that are in the view to achieve concurrency control. Thus, there are some issues that need to be solved: first, to identify what changes were made in the view and second, to identify and solve conflicts that may arise due to changes in the database state during the transaction. We address both of these issues in this paper by proposing an approach that uses our XML view update system PATAXO.", "paper_title": "Conflict resolution in updates through XML views", "paper_id": "WOS:000241726200018"}