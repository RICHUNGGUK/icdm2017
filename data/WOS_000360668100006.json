{"auto_keywords": [{"score": 0.03030521684841829, "phrase": "jobs"}, {"score": 0.00481495049065317, "phrase": "traditional_on-line_problems"}, {"score": 0.004514714250357749, "phrase": "available_resources"}, {"score": 0.0037615180375561805, "phrase": "previously_allocated_resources"}, {"score": 0.0036422425344358037, "phrase": "new_request"}, {"score": 0.0032888418378433037, "phrase": "reallocation_cost"}, {"score": 0.0031845067058084583, "phrase": "classic_problem"}, {"score": 0.0030834712590249863, "phrase": "multiprocessor_system"}, {"score": 0.003034158379493625, "phrase": "unit-size_job"}, {"score": 0.002985631781749091, "phrase": "time_window"}, {"score": 0.002610198789888055, "phrase": "valid_schedule"}, {"score": 0.0025003054002226965, "phrase": "sufficient_slack_exists"}, {"score": 0.0021857667493036786, "phrase": "active_jobs"}, {"score": 0.0021049977753042253, "phrase": "largest_window"}], "paper_keywords": ["Scheduling", " Online problems", " Reallocation"], "paper_abstract": "In traditional on-line problems, such as scheduling, requests arrive over time, demanding available resources. As each request arrives, some resources may have to be irrevocably committed to servicing that request. In many situations, however, it may be possible or even necessary to reallocate previously allocated resources in order to satisfy a new request. This reallocation has a cost. This paper shows how to service the requests while minimizing the reallocation cost. We focus on the classic problem of scheduling jobs on a multiprocessor system. Each unit-size job has a time window in which it can be executed. Jobs are dynamically added and removed from the system. We provide an algorithm that maintains a valid schedule, as long as a schedule with sufficient slack exists. The algorithm reschedules only a total number of jobs for each job that is inserted or deleted from the system, where is the number of active jobs and is the size of the largest window.", "paper_title": "Reallocation Problems in Scheduling", "paper_id": "WOS:000360668100006"}