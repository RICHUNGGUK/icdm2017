{"auto_keywords": [{"score": 0.04930986456658361, "phrase": "physical_memory"}, {"score": 0.010351700318886119, "phrase": "sensitive_information"}, {"score": 0.00481495049065317, "phrase": "forensically_sensitive_information"}, {"score": 0.004686688155058031, "phrase": "forensic_analysis"}, {"score": 0.004561826854638056, "phrase": "good_attention"}, {"score": 0.00436890075128947, "phrase": "recent_development"}, {"score": 0.004321952227344232, "phrase": "valuable_tools"}, {"score": 0.004072573194988867, "phrase": "physical_memory_contents"}, {"score": 0.004007083686875716, "phrase": "post-incident_analysis"}, {"score": 0.00394264312173188, "phrase": "potential_evidence"}, {"score": 0.0037352048741373816, "phrase": "enumerating_processes"}, {"score": 0.003635600104609725, "phrase": "memory_resident_objects"}, {"score": 0.003557825272877343, "phrase": "case-sensitive_information"}, {"score": 0.0035005841368145525, "phrase": "extracted_memory_content"}, {"score": 0.0034442607586033657, "phrase": "existing_techniques"}, {"score": 0.003370565320453525, "phrase": "string_matching"}, {"score": 0.003210446135114967, "phrase": "new_technique"}, {"score": 0.0029763124376934813, "phrase": "call_stack"}, {"score": 0.002928399649340438, "phrase": "security_sensitive_apis"}, {"score": 0.0027295084882654917, "phrase": "matching-based_techniques"}, {"score": 0.0021510820434023207, "phrase": "digital_forensic_research_workshop"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Computer forensics", " Digital investigation", " Windows memory", " Sensitive information", " Application fingerprint", " Memory analysis", " Stack analysis", " String matching"], "paper_abstract": "Forensic analysis of physical memory is gaining good attention from experts in the community especially after recent development of valuable tools and techniques. Investigators find it very helpful to seize physical memory contents and perform post-incident analysis of this potential evidence. Most of the research carried out focus on enumerating processes and threads by accessing memory resident objects. To collect case-sensitive information from the extracted memory content, the existing techniques usually rely on string matching. The most important contribution of the paper is a new technique for extracting sensitive information from physical memory. The technique is based on analyzing the call stack and the security sensitive APIs. It allows extracting sensitive information that cannot be extracted by string matching-based techniques. In addition, the paper leverages string matching to get a more reliable technique for analyzing and extracting what we called \"application/protocol fingerprints''. The proposed techniques and their implementation target the machines running under the Windows XP (SP1, SP2) operating system. (C) 2009 Digital Forensic Research Workshop. Published by Elsevier Ltd. All rights reserved.", "paper_title": "Extraction of forensically sensitive information from windows physical memory", "paper_id": "WOS:000269484800015"}