{"auto_keywords": [{"score": 0.03623685937254763, "phrase": "mpra"}, {"score": 0.01061238630452144, "phrase": "distributed_real-time_systems"}, {"score": 0.009890719747662742, "phrase": "system_utility"}, {"score": 0.007285531604899729, "phrase": "optimal_solutions"}, {"score": 0.006325247415596961, "phrase": "cpu_utilization"}, {"score": 0.004406994912939125, "phrase": "stringent_resource_constraints"}, {"score": 0.004253618550301311, "phrase": "system_workload"}, {"score": 0.004154332348800334, "phrase": "online_adaptation"}, {"score": 0.003986103192038901, "phrase": "workload_changes"}, {"score": 0.0038246602895705643, "phrase": "multiparametric_rate_adaptation"}, {"score": 0.0036914757355166966, "phrase": "discrete_rate_adaptation"}, {"score": 0.0036052633308076933, "phrase": "end-to-end_tasks"}, {"score": 0.0032223742018434856, "phrase": "workload_variations"}, {"score": 0.003165739628969694, "phrase": "dynamic_task_arrivals"}, {"score": 0.0030735451757603555, "phrase": "offline_preprocessing_mpra"}, {"score": 0.0030195184114140063, "phrase": "np-hard_utility_optimization_problem"}, {"score": 0.002914288956035066, "phrase": "piecewise_linear_function"}, {"score": 0.0028127163745564777, "phrase": "run_time"}, {"score": 0.0026045914281028473, "phrase": "analysis_and_simulation_results"}, {"score": 0.002455009746748708, "phrase": "varying_workloads"}, {"score": 0.0023834640793589435, "phrase": "online_computation_complexity"}, {"score": 0.0023554316787703137, "phrase": "polynomial_time"}, {"score": 0.0021682027434117095, "phrase": "real-time_middleware_system"}, {"score": 0.0021049977753042253, "phrase": "physical_testbed"}], "paper_keywords": ["Real-time systems", " Middleware", " Rate adaptation"], "paper_abstract": "Many distributed real-time systems face the challenge of dynamically maximizing system utility and meeting stringent resource constraints in response to fluctuations in system workload. Thus, online adaptation must be adopted in face of workload changes in such systems. We present the MultiParametric Rate Adaptation (MPRA) algorithm for discrete rate adaptation in distributed real-time systems with end-to-end tasks. The key novelty and advantage of MPRA is that it can efficiently produce optimal solutions in response to workload variations caused by dynamic task arrivals and departures. Through offline preprocessing MPRA transforms an NP-hard utility optimization problem to the evaluation of a piecewise linear function of the CPU utilization. At run time MPRA produces optimal solutions by evaluating the function based on the CPU utilization. Analysis and simulation results show that MPRA maximizes system utility in the presence of varying workloads, while reducing the online computation complexity to polynomial time. The advantages of MPRA have been validated through the implementation in a real-time middleware system and experiments on a physical testbed.", "paper_title": "Optimal and efficient adaptation in distributed real-time systems with discrete rates", "paper_id": "WOS:000316046200004"}