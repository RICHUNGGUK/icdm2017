{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "spider_diagrams"}, {"score": 0.049180518370399884, "phrase": "diagrammatic_logic"}, {"score": 0.03171369103845407, "phrase": "reasoning_rules"}, {"score": 0.004671156704912419, "phrase": "reasoning_mechanism"}, {"score": 0.004412965940679449, "phrase": "current_limitations"}, {"score": 0.004379631619412168, "phrase": "visual_modelling_methods"}, {"score": 0.004248782702870078, "phrase": "textual_languages"}, {"score": 0.004200724305692705, "phrase": "complex_constraints"}, {"score": 0.004121826934975274, "phrase": "graph_transformations"}, {"score": 0.0039986494357811715, "phrase": "formal_semantics"}, {"score": 0.0039684322717435045, "phrase": "visual_modelling_languages"}, {"score": 0.0038207243221070166, "phrase": "graph_transformation"}, {"score": 0.0037774893672602506, "phrase": "language_integration"}, {"score": 0.0037065115435101887, "phrase": "common_underlying_machinery"}, {"score": 0.0032826873794020253, "phrase": "concrete_syntax"}, {"score": 0.0032087739900195232, "phrase": "euler_diagrams"}, {"score": 0.0031724417545242315, "phrase": "closed_curves"}, {"score": 0.0031365196064043494, "phrase": "enclosed_regions"}, {"score": 0.002907184330345933, "phrase": "logical_inference_rules"}, {"score": 0.002798865807872575, "phrase": "procedural_terms"}, {"score": 0.002746225320405654, "phrase": "completely_formal_specification"}, {"score": 0.0027151161550531206, "phrase": "adequate_mechanisation"}, {"score": 0.0025941547726803594, "phrase": "abstract_syntax"}, {"score": 0.0025357050267224715, "phrase": "typed_graphs"}, {"score": 0.002497470177389344, "phrase": "corresponding_language"}, {"score": 0.0024785689583828796, "phrase": "spider_graphs"}, {"score": 0.002386181960126766, "phrase": "graph_transformation_units"}, {"score": 0.0023412849215629986, "phrase": "direct_realisation"}, {"score": 0.002314752262613559, "phrase": "reasoning_system"}, {"score": 0.0022972306948217548, "phrase": "graph_transformation_tools"}, {"score": 0.0022625835448873495, "phrase": "ad_hoc_implementations"}, {"score": 0.0021948455916770233, "phrase": "agg._techniques"}, {"score": 0.0021782296784218923, "phrase": "static_analysis"}, {"score": 0.0021291312714904957, "phrase": "proof_strategies"}, {"score": 0.0021049977753042253, "phrase": "possible_optimisations"}], "paper_keywords": ["Diagrammatic reasoning", " Graph transformations", " Spider diagrams", " Spider Graphs", " Reasoning strategies"], "paper_abstract": "The use of diagrammatic logic as a reasoning mechanism to produce inferences on subsets of some universe could provide away to overcome the current limitations of visual modelling methods, which have to be integrated with textual languages to express complex constraints. Onthe other hand, graph transformations are becoming widespread as away to express formal semantics for visual modelling languages, so that a mechanisation of diagrammatic logic based on graph transformation would facilitate language integration, based on a common underlying machinery. In this paper, we propose such a mechanisation for spider diagrams (SDs), an established language for reasoning with diagrams modelling relations between sets and constraints on their cardinalities. The concrete syntax of SDs extends that of Euler diagrams that use closed curves and the enclosed regions to represent sets and their intersections. The language is augmented with reasoning rules, i.e. syntactic transformation rules corresponding to logical inference rules. However, these rules are typically defined in procedural terms, so that a completely formal specification and an adequate mechanisation of them has not been achieved yet. We propose an abstract syntax for SDs in terms of typed graphs and define the corresponding language of Spider Graphs (SGs), expressing reasoning rules for SDs as graph transformation units. This enables a direct realisation of the reasoning system via graph transformation tools without resorting to ad hoc implementations, and we provide an implementation in AGG. Techniques for static analysis become available to reason on proof strategies and on possible optimisations.", "paper_title": "Spider Graphs: a graph transformation system for spider diagrams", "paper_id": "WOS:000365427900007"}