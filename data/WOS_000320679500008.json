{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "efficient_communication_infrastructure"}, {"score": 0.004754600386388821, "phrase": "highly_contended_locks"}, {"score": 0.00469500313566324, "phrase": "many-core_cmps"}, {"score": 0.00452063603944825, "phrase": "key_programming"}, {"score": 0.004435885269134359, "phrase": "shared-memory_many-core_cmps"}, {"score": 0.0041384457437123635, "phrase": "conventional_software_implementations"}, {"score": 0.004009894739765119, "phrase": "desirable_levels"}, {"score": 0.0036246643358397272, "phrase": "memory_hierarchy"}, {"score": 0.0034461093496505127, "phrase": "synchronization_traffic"}, {"score": 0.0032763212574036748, "phrase": "glock"}, {"score": 0.0032148229832850215, "phrase": "dedicated_network_infrastructure"}, {"score": 0.0031544754107802413, "phrase": "token-based_message-passing_protocol"}, {"score": 0.002780025943393764, "phrase": "current_full-custom_g-lines_technology"}, {"score": 0.0026597250663309385, "phrase": "cost-effective_mainstream_industrial_toolflow"}, {"score": 0.002434477906829832, "phrase": "significant_reductions"}, {"score": 0.0024038923350585962, "phrase": "execution_time"}, {"score": 0.002373690110881497, "phrase": "network_traffic"}, {"score": 0.0023438664524018634, "phrase": "power_consumption"}, {"score": 0.0022002633747977593, "phrase": "negligible_area"}, {"score": 0.0021049977753042253, "phrase": "elsevier_inc."}], "paper_keywords": ["Many-core CMPs", " Lock synchronization", " Cache coherence", " Scalability", " Energy efficiency"], "paper_abstract": "Lock synchronization is a key programming primitive for shared-memory many-core CMPs. However, as the number of cores increases, conventional software implementations cannot meet the desirable levels of performance and scalability. Meanwhile, most existing hardware-supported lock proposals require modifications at some level of the memory hierarchy, thus degrading QoS of applications through synchronization traffic. In this paper, we propose GLock, a dedicated network infrastructure and a token-based message-passing protocol to provide a non-intrusive, extremely efficient and fair implementation for highly contended locks. Two implementations of Glock are considered. The first leverages current full-custom G-lines technology, whilst the second uses a cost-effective mainstream industrial toolflow with an advanced 45 nm technology. When compared with the most efficient software-based lock, both alternatives provide significant reductions in execution time, network traffic and power consumption, for a representative set of benchmarks, with negligible area overhead. (c) 2012 Elsevier Inc. All rights reserved.", "paper_title": "Design of an efficient communication infrastructure for highly contended locks in many-core CMPs", "paper_id": "WOS:000320679500008"}