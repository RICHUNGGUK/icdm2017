{"auto_keywords": [{"score": 0.004622450915803531, "phrase": "largest_constrained_pattern"}, {"score": 0.004437613070853689, "phrase": "constrained_pattern"}, {"score": 0.004027586827290042, "phrase": "model_r_subset"}, {"score": 0.003769006950727621, "phrase": "general_representation"}, {"score": 0.0037307208089736835, "phrase": "rna_secondary_structures"}, {"score": 0.003545024951402821, "phrase": "different_models"}, {"score": 0.003088384809415812, "phrase": "total_length"}, {"score": 0.003010496595090984, "phrase": "density_d"}, {"score": 0.002964706925144123, "phrase": "maximum_number"}, {"score": 0.0026630475331025955, "phrase": "dynamic_programming_techniques"}], "paper_keywords": ["RNA secondary structure", " 2-interval pattern"], "paper_abstract": "The 2-INTERVAL PATTERN problem is to find the largest constrained pattern in a set of 2-intervals. The constrained pattern is a subset of the given 2-intervals such that any pair of them are R-comparable, where model R subset of {<, }. The problem stems from the study of general representation of RNA secondary structures. In this paper, we give three improved algorithms for different models. Firstly, an O(n log n + L) algorithm is proposed for the case R = {}, where L = O(dn) = O(n(2)) is the total length of all 2-intervals (density d is the maximum number of 2-intervals over any point). This improves previous O(n(2) log n) algorithm. Secondly, we use dynamic programming techniques to obtain an O(n log n + dn) algorithm for the case R which improves previous 0(n2) result. Finally, we present another O(n log n + L) algorithm for the case R = {, } with disjoint support(interval ground set), which improves previous O(n(2)root n) upper bound.", "paper_title": "Improved algorithms for largest cardinality 2-interval pattern problem", "paper_id": "WOS:000244645900006"}