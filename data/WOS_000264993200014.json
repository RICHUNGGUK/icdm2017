{"auto_keywords": [{"score": 0.04985104984907069, "phrase": "dynamic_programming"}, {"score": 0.04874179879364107, "phrase": "rl"}, {"score": 0.034025024804005384, "phrase": "gpdp"}, {"score": 0.00481495049065317, "phrase": "gaussian_process"}, {"score": 0.004506968388996092, "phrase": "continuous_states"}, {"score": 0.004422632150619634, "phrase": "approximation_techniques"}, {"score": 0.004218602458288531, "phrase": "gaussian_process_dynamic_programming"}, {"score": 0.0038564191670589884, "phrase": "problem-specific_prior_knowledge"}, {"score": 0.0037486121194392564, "phrase": "classic_rl_problem"}, {"score": 0.0035755653799043, "phrase": "classic_optimal_control_problem"}, {"score": 0.003426640459083931, "phrase": "gaussian_processes"}, {"score": 0.0033465923623290034, "phrase": "continuous-valued_states"}, {"score": 0.0032529910932231924, "phrase": "rl_problem"}, {"score": 0.003102752392819577, "phrase": "state_space"}, {"score": 0.0030735451757603555, "phrase": "bayesian_active_learning"}, {"score": 0.0030017207229983385, "phrase": "fast_learner"}, {"score": 0.00297346171320082, "phrase": "available_data"}, {"score": 0.0027961342030212353, "phrase": "probabilistic_models"}, {"score": 0.0025436978068459565, "phrase": "resulting_continuous-valued_controllers"}, {"score": 0.002507845411496512, "phrase": "under-actuated_pendulum"}, {"score": 0.00240328454980006, "phrase": "suggested_algorithms"}, {"score": 0.002196609505859369, "phrase": "classic_dynamic_programming"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Reinforcement learning", " Optimal control", " Dynamic programming", " Gaussian processes", " Bayesian active learning", " Policy learning"], "paper_abstract": "Reinforcement learning (RL) and optimal control of systems with continuous states and actions require approximation techniques in most interesting cases. In this article, we introduce Gaussian process dynamic programming (GPDP), an approximate value function-based RL algorithm. We consider both a classic optimal control problem, where problem-specific prior knowledge is available, and a classic RL problem, where only very general priors can be used. For the classic optimal control problem. GPDP models the unknown value functions with Gaussian processes and generalizes dynamic programming to continuous-valued states and actions. For the RL problem, GPDP starts from a given initial state and explores the state space using Bayesian active learning. To design a fast learner, available data have to be used efficiently. Hence, we propose to learn probabilistic models of the a priori unknown transition dynamics and the value functions on the fly. In both cases, we successfully apply the resulting continuous-valued controllers to the under-actuated pendulum swing up and analyze the performances of the suggested algorithms. It turns out that GPDP uses data very efficiently and can be applied to problems, where classic dynamic programming would be cumbersome. (C) 2009 Elsevier B.V. All rights reserved.", "paper_title": "Gaussian process dynamic programming", "paper_id": "WOS:000264993200014"}