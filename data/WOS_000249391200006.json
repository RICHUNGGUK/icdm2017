{"auto_keywords": [{"score": 0.031653507648654204, "phrase": "proposed_multipliers"}, {"score": 0.00481495049065317, "phrase": "efficient_modulo"}, {"score": 0.004392565073466714, "phrase": "weighted_representation"}, {"score": 0.004283913685201902, "phrase": "new_set"}, {"score": 0.00421297029755273, "phrase": "partial_products"}, {"score": 0.00390792986752692, "phrase": "required_correction_factors"}, {"score": 0.0037168948492715386, "phrase": "single_constant_one"}, {"score": 0.0034476484413811987, "phrase": "correction_factor"}, {"score": 0.003306559295382181, "phrase": "partial_product"}, {"score": 0.003066945490483524, "phrase": "final_parallel_adder"}, {"score": 0.0024065032567542107, "phrase": "adder_tree"}, {"score": 0.002346861891137455, "phrase": "final_adder"}, {"score": 0.0022696277881969896, "phrase": "delay_qualitative_and_quantitative_comparisons"}, {"score": 0.0021049977753042253, "phrase": "earlier_solutions"}], "paper_keywords": [""], "paper_abstract": "A new modulo 2(n)+1 multiplier architecture is proposed for operands in the weighted representation. A new set of partial products is derived and it is shown that all required correction factors can be merged into a single constant one. It is also proposed that part of the correction factor is treated as a partial product, whereas the rest is handled by the final parallel adder. The proposed multipliers utilise a total of (n + 1) partial products, each n bits wide and are built using an inverted end-around-carry, carry-save adder tree and a final adder. Area and delay qualitative and quantitative comparisons indicate that the proposed multipliers compare favourably with the earlier solutions.", "paper_title": "Design of efficient modulo 2(n)+1 multipliers", "paper_id": "WOS:000249391200006"}