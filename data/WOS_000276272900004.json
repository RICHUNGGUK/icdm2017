{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "multiple_sketched_models"}, {"score": 0.004566954456805558, "phrase": "complex_systems"}, {"score": 0.00424659225577246, "phrase": "different_aspects"}, {"score": 0.0039748192550806815, "phrase": "multiple_stakeholders"}, {"score": 0.003922580121023413, "phrase": "different_specialties"}, {"score": 0.0037203741725514126, "phrase": "full_abstract_representation"}, {"score": 0.0035519826240477444, "phrase": "multi-diagram_integration"}, {"score": 0.003459191419478298, "phrase": "sketch-based_diagramming_tools"}, {"score": 0.0033245147666408157, "phrase": "difficult_integration_problem"}, {"score": 0.0031739835218110015, "phrase": "tool_inkkit"}, {"score": 0.0031115683920520773, "phrase": "software_engineering_sketches"}, {"score": 0.0030706395717772436, "phrase": "different_types"}, {"score": 0.0029903851294825023, "phrase": "software_design_processes"}, {"score": 0.002912222095383313, "phrase": "sketch-based_approach"}, {"score": 0.0028360962841331634, "phrase": "iterative_creation"}, {"score": 0.002798780784517325, "phrase": "multiple_outputs"}, {"score": 0.002671990515821213, "phrase": "inter-linked_models"}, {"score": 0.0025173564697303836, "phrase": "functional_system"}, {"score": 0.002451527111936163, "phrase": "user_interface"}, {"score": 0.0022641658133181115, "phrase": "sketched_user_interfaces_designs"}, {"score": 0.0022196020509093694, "phrase": "entity_relationship_diagrams"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Sketch tools", " Sketch recognition", " Software modeling"], "paper_abstract": "Diagrams are often used to model complex systems: in many cases several different types of diagrams are used to model different aspects of the system. These diagrams, perhaps from multiple stakeholders of different specialties, must be combined to achieve a full abstract representation of the system. Many CAD tools offer multi-diagram integration; however, sketch-based diagramming tools are yet to tackle this difficult integration problem. We extend the diagram sketching tool InkKit to combine software engineering sketches of different types. Our extensions support software design processes by providing a sketch-based approach that allows the iterative creation of multiple outputs interacting with one another from the inter-linked models. We demonstrate that InkKit can generate a functional system consisting of a user interface with processes to submit and retrieve data from a database from sketched user interfaces designs and sketched entity relationship diagrams. (C) 2010 Published by Elsevier Ltd.", "paper_title": "Generating systems from multiple sketched models", "paper_id": "WOS:000276272900004"}