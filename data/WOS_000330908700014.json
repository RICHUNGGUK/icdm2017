{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "drive-by_download_attacks"}, {"score": 0.04270247786251501, "phrase": "static_and_semi-dynamic_analysis_techniques"}, {"score": 0.004691465925553365, "phrase": "download_attacks"}, {"score": 0.0046429592670444945, "phrase": "common_attack_vector"}, {"score": 0.004571133708117502, "phrase": "personal_computers"}, {"score": 0.004250302819248558, "phrase": "realtime_detection"}, {"score": 0.0039519004610213595, "phrase": "original_or_deobfuscated_javascript_source_code"}, {"score": 0.0036363418376496484, "phrase": "commonly_employed_evasion_techniques"}, {"score": 0.003598705020845104, "phrase": "dynamic_anomaly_detection_approaches"}, {"score": 0.0035063024767122684, "phrase": "targeted_evasion"}, {"score": 0.003345895878114341, "phrase": "realtime_solution"}, {"score": 0.0032940691998512963, "phrase": "individual_systems"}, {"score": 0.003078577062864183, "phrase": "novel_approach"}, {"score": 0.0029530125680590413, "phrase": "web_browser_environments"}, {"score": 0.0029224275921964724, "phrase": "low_resource_dynamic_analysis"}, {"score": 0.0028325548627901004, "phrase": "bytecode_stream"}, {"score": 0.0027741761880779535, "phrase": "web_browser"}, {"score": 0.002633425544817301, "phrase": "previously_unseen_drive-by_download_attacks"}, {"score": 0.00239778324260337, "phrase": "low_performance_overhead"}, {"score": 0.0022407927161620855, "phrase": "download_detection"}, {"score": 0.0022175679453857473, "phrase": "resource_constrained_devices"}, {"score": 0.002171836484200008, "phrase": "mobile_phones"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Drive-by downloads", " Web client exploits", " Anomaly detection", " Machine learning", " Dynamic analysis"], "paper_abstract": "Drive-by download attacks are common attack vector for compromising personal computers. While several alternatives to mitigate the threat have been proposed, approaches to realtime detection of drive-by download attacks has been predominantly limited to static and semi-dynamic analysis techniques. These techniques examine the original or deobfuscated JavaScript source code to assess the potential maliciousness of a webpage. However, static and semi-dynamic analysis techniques are vulnerable to commonly employed evasion techniques. Dynamic anomaly detection approaches are less susceptible to targeted evasion, but are used less often as a realtime solution on the individual systems because these techniques are typically resource intensive. This paper presents a novel approach to detect drive-by downloads in web browser environments using low resource dynamic analysis. By dynamically monitoring the bytecode stream generated by a web browser during rendering, the approach is able to detect previously unseen drive-by download attacks at runtime. The proposed method is effective, space efficient, and performs the analysis with low performance overhead, making the approach amenable to in-browser drive-by download detection on resource constrained devices, such as mobile phones. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "Efficient and effective realtime prediction of drive-by download attacks", "paper_id": "WOS:000330908700014"}