{"auto_keywords": [{"score": 0.04332883695210974, "phrase": "untrusted_systems"}, {"score": 0.027917154626598027, "phrase": "oram"}, {"score": 0.00481495049065317, "phrase": "access_pattern_protection_schemes"}, {"score": 0.004718897469501381, "phrase": "efficient_implementation"}, {"score": 0.00453252480916553, "phrase": "goldreich"}, {"score": 0.0044870472544256195, "phrase": "ostrovsky"}, {"score": 0.0043533862892678864, "phrase": "users'_privacy"}, {"score": 0.004245051445971095, "phrase": "remote_untrusted_servers"}, {"score": 0.003594369823549604, "phrase": "oram_schemes"}, {"score": 0.003487222504700868, "phrase": "cloud_environment"}, {"score": 0.0034003686971964707, "phrase": "huge_storage"}, {"score": 0.003366233863411861, "phrase": "high_computational_power"}, {"score": 0.0032989853590079153, "phrase": "private_information_retrieval"}, {"score": 0.003265875135702032, "phrase": "pir"}, {"score": 0.0030895394261534776, "phrase": "dedicated_pirs"}, {"score": 0.0026023381988430666, "phrase": "pir."}, {"score": 0.002524688179363081, "phrase": "practical_software-based_memory_protection_scheme"}, {"score": 0.002437012847684331, "phrase": "main_feature"}, {"score": 0.0022252591643049744, "phrase": "access_pattern"}, {"score": 0.0021049977753042253, "phrase": "practical_solutions"}], "paper_keywords": ["access pattern protection", " oblivious RAM", " private information retrieval"], "paper_abstract": "Oblivious RAM (ORAM) schemes, the concept introduced by Goldreich and Ostrovsky, are very useful technique for protecting users' privacy when storing data in remote untrusted servers and running software on untrusted systems. However they are usually considered impractical due to their huge overhead. In order to reduce overhead, many improvements have been presented. Thanks to these improvements, ORAM schemes can be considered practical on cloud environment where users can expect huge storage and high computational power. Especially for private information retrieval (PIR), some literatures demonstrated they are usable. Also dedicated PIRs have been proposed and shown that they are usable in practice. Yet, they are still impractical for protecting software running on untrusted systems. We first survey recent researches on ORAM and PIR. Then, we present a practical software-based memory protection scheme applicable to several environments. The main feature of our scheme is that it records the history of accesses and uses the history to hide the access pattern. We also address implementing issues of ORAM and propose practical solutions for these issues.", "paper_title": "Comparison of Access Pattern Protection Schemes and Proposals for Efficient Implementation", "paper_id": "WOS:000348141100003"}