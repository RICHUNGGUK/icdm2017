{"auto_keywords": [{"score": 0.03450163625819672, "phrase": "triggercast"}, {"score": 0.015057810407849155, "phrase": "concurrent_transmissions"}, {"score": 0.008638612093843671, "phrase": "deliberate_synchronized_constructive_interference"}, {"score": 0.00481495049065317, "phrase": "packet_delivery"}, {"score": 0.004670673956022553, "phrase": "ci"}, {"score": 0.004394688617163029, "phrase": "network_concurrency"}, {"score": 0.004063664475797303, "phrase": "identical_packet"}, {"score": 0.003958937342925219, "phrase": "traditional_ci._disco"}, {"score": 0.0037087324991876727, "phrase": "magnitude_reductions"}, {"score": 0.00367658459781873, "phrase": "energy_consumption"}, {"score": 0.003613119346373748, "phrase": "link_quality"}, {"score": 0.003504670673093149, "phrase": "sufficient_condition"}, {"score": 0.0033553473725594003, "phrase": "first_time"}, {"score": 0.0032263862712733934, "phrase": "distributed_middleware_service"}, {"score": 0.0030754582519753474, "phrase": "real_sensor_network_platforms"}, {"score": 0.002957222630196853, "phrase": "multiple_senders"}, {"score": 0.002918826667294298, "phrase": "chip_level"}, {"score": 0.002831158147480665, "phrase": "radio_processing_delays"}, {"score": 0.0026062133750675894, "phrase": "simultaneous_transmissions"}, {"score": 0.002516917671182532, "phrase": "overall_link"}, {"score": 0.0025059724686541263, "phrase": "packet_reception_ratio"}, {"score": 0.0024095777415804346, "phrase": "maximal_system_robustness"}, {"score": 0.0023886641270884973, "phrase": "extensive_experiments"}, {"score": 0.002367931598717088, "phrase": "real_testbeds"}, {"score": 0.002306805678415669, "phrase": "prr"}, {"score": 0.00226693109377084, "phrase": "seven_concurrent_senders"}, {"score": 0.0021049977753042253, "phrase": "existing_data_forwarding_protocols"}], "paper_keywords": ["Constructive interference", " concurrent transmissions", " data forwarding", " wireless sensor networks"], "paper_abstract": "Constructive interference (CI) enables concurrent transmissions to interfere non-destructively, so as to enhance network concurrency. In this paper, we propose deliberate synchronized constructive interference (Disco), which ensures concurrent transmissions of an identical packet to synchronize more precisely than traditional CI. Disco envisions concurrent transmissions to positively interfere at the receiver, and potentially allows orders of magnitude reductions in energy consumption and improvements in link quality. We also theoretically introduce a sufficient condition to construct Disco with IEEE 802.15.4 radio for the first time. Moreover, we propose Triggercast, a distributed middleware service, and show it is feasible to generate Disco on real sensor network platforms like TMote Sky. To synchronize transmissions of multiple senders at the chip level, Triggercast effectively compensates propagation and radio processing delays, and has 95th percentile synchronization errors of at most 250 ns. Triggercast also intelligently decides which co-senders to participate in simultaneous transmissions, and aligns their transmission time to maximize the overall link Packet Reception Ratio (PRR), under the condition of maximal system robustness. Extensive experiments in real testbeds demonstrate that Triggercast significantly improves PRR from 5 to 70 percent with seven concurrent senders. We also demonstrate that Triggercast provides 1: 3 x PRR performance gains in average, when it is integrated with existing data forwarding protocols.", "paper_title": "Disco: Improving Packet Delivery via Deliberate Synchronized Constructive Interference", "paper_id": "WOS:000349769500009"}