{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "sql"}, {"score": 0.004740476936977635, "phrase": "abstract_interpretation"}, {"score": 0.004488734023485018, "phrase": "worthwhile"}, {"score": 0.004317109072311102, "phrase": "derivation_fine-grained_where-"}, {"score": 0.004087756756529841, "phrase": "rich_dialect"}, {"score": 0.0035522165267242198, "phrase": "rdbms"}, {"score": 0.003443031148055198, "phrase": "built-in_functions"}, {"score": 0.0031597433845085092, "phrase": "programming_language_community_program"}, {"score": 0.0031107911390188055, "phrase": "mid_abstract_interpretation"}, {"score": 0.002968424524565369, "phrase": "two-stage_process"}, {"score": 0.0028771413440398614, "phrase": "query's_control"}, {"score": 0.00253916011199984, "phrase": "actual_values"}, {"score": 0.0022583704173318123, "phrase": "interactive_demonstrator"}, {"score": 0.002188874450946842, "phrase": "provenance_information"}, {"score": 0.0021049977753042253, "phrase": "real-world_sql_queries"}], "paper_keywords": [""], "paper_abstract": "We demonstrate the derivation fine-grained where- and why-provenance for a rich dialect of SQL that includes recursion, (correlated) subqueries, windows, grouping/aggregation, and the RDBMS's library of built-in functions. The approach relies on ideas that originate in the programming language community program slicing mid abstract interpretation, in particular. A two-stage process first records a query's control flow decisions and locations of data access before it derives provenance without consultation of the actual values (rendering the method largely \"value-less' We will bring an interactive demonstrator that uses this provenance information to make input/output dependencies in real-world SQL queries tangible.", "paper_title": "Provenance for SQL through Abstract Interpretation: Value-less, but Worthwhile", "paper_id": "WOS:000386424800054"}