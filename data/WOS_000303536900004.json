{"auto_keywords": [{"score": 0.04883313245975001, "phrase": "probabilistic-write_model"}, {"score": 0.030489443458718794, "phrase": "individual_work"}, {"score": 0.00481495049065317, "phrase": "shared-memory_consensus"}, {"score": 0.004468304427278713, "phrase": "alternating_sequence"}, {"score": 0.004429191773525288, "phrase": "adopt-commit_objects"}, {"score": 0.004294962474996283, "phrase": "seventeenth_annual_acm_symposium"}, {"score": 0.004220086640742953, "phrase": "distributed_computing"}, {"score": 0.004056334733843591, "phrase": "alistarh"}, {"score": 0.003968147723271993, "phrase": "isaac"}, {"score": 0.00393359747346429, "phrase": "lecture"}, {"score": 0.0038818006513785977, "phrase": "computer_science"}, {"score": 0.0037974119891924004, "phrase": "springer"}, {"score": 0.003764122550427329, "phrase": "berlin"}, {"score": 0.003226834737003501, "phrase": "deterministic_implementation"}, {"score": 0.0030608148631528767, "phrase": "unbounded_number"}, {"score": 0.002802825862847951, "phrase": "randomized_conciliator"}, {"score": 0.0026121403051734744, "phrase": "constant_probability"}, {"score": 0.002434396049547248, "phrase": "total_work"}, {"score": 0.0023604768913655463, "phrase": "consensus_protocol"}, {"score": 0.0021998194157393353, "phrase": "previous_protocol"}, {"score": 0.0021236300589450143, "phrase": "linear_total_work"}, {"score": 0.0021049977753042253, "phrase": "constant_m."}], "paper_keywords": ["Consensus", " Randomization", " Shared memory", " Weak adversaries"], "paper_abstract": "We show that consensus can be solved by an alternating sequence of adopt-commit objects (Gafni in Proceedings of the seventeenth annual ACM symposium on principles of distributed computing, pp 143-152, 1998; Alistarh et al. in ISAAC, Lecture notes in computer science, vol 5878. Springer, Berlin, pp 943-953, 2009), which detect agreement, and conciliators, which ensure agreement with some probability. We observe that most known randomized consensus algorithms have this structure. We give a deterministic implementation of an m-valued adopt-commit object for an unbounded number of processes that uses lg m + I similar to(log log m) space and individual work. We also give a randomized conciliator for any number of values in the probabilistic-write model with n processes that guarantees agreement with constant probability while using one multi-writer register, O(log n) expected individual work, and I similar to(n) expected total work. Combining these objects gives a consensus protocol for the probabilistic-write model that uses O(log m + log n) individual work and O(n log m) total work. No previous protocol in this model uses sublinear individual work or linear total work for constant m.", "paper_title": "A modular approach to shared-memory consensus, with applications to the probabilistic-write model", "paper_id": "WOS:000303536900004"}