{"auto_keywords": [{"score": 0.038234537231420805, "phrase": "daps"}, {"score": 0.015719714774698138, "phrase": "dynamic_proxy_framework"}, {"score": 0.01371644744620206, "phrase": "cpf"}, {"score": 0.004126623209579942, "phrase": "application-level_approach"}, {"score": 0.003992385826251404, "phrase": "client_machines"}, {"score": 0.003536346954940087, "phrase": "designed_clustering_policy"}, {"score": 0.003478321590910367, "phrase": "conventional_and_current_dynamic_proxy_systems"}, {"score": 0.0033837135367113004, "phrase": "incentive_scheme"}, {"score": 0.003328184259386487, "phrase": "selected_client_machines"}, {"score": 0.0032021226849872054, "phrase": "central_server"}, {"score": 0.0030135741897058844, "phrase": "cpf_approach"}, {"score": 0.0024842242921857705, "phrase": "hierarchical_fashion"}, {"score": 0.0024299678474208023, "phrase": "average_client-receiving_rate"}, {"score": 0.0022741894748181243, "phrase": "server_workload_reduction"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["dynamic application proxy server", " chek proxy framework", " endhost proxy", " contents and service delivery", " mobile agent", " clustering"], "paper_abstract": "In this paper, we present and evaluate a dynamic proxy framework called the chek proxy framework (CPF). CPF is an application-level approach that provokes the use of client machines to host at runtime a server-initiated intermediate object called dynamic application proxy server (DAPS) based on the designed clustering policy. Unlike conventional and current dynamic proxy systems, CPF adopts an incentive scheme where the selected client machines will be rewarded for sharing the central server workloads by servicing local/regional client requests. The results showed that the CPF approach reduces both the processor utilization and memory consumption of the central server by 15.1% and 16.5 MB, respectively, than the conventional client/server approach in our prototype implementation. With our simulation, it is further quantified that allocating DAPS to work cooperatively in a hierarchical fashion further increases the average client-receiving rate and the network throughput by at least 100% and 35%, respectively, with a server workload reduction of 11.38%, than DAPS serving end-clients directly. (C) 2005 Elsevier Ltd. All rights reserved.", "paper_title": "The case for a dynamic proxy framework with voluntary/incentive-based client hosting scheme", "paper_id": "WOS:000242372400011"}