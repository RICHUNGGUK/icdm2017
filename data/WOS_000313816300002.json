{"auto_keywords": [{"score": 0.048912784012203246, "phrase": "svd"}, {"score": 0.013412154136194777, "phrase": "least_squares_solutions"}, {"score": 0.01028692628732206, "phrase": "resulting_matrices"}, {"score": 0.00481495049065317, "phrase": "large-scale_least_squares_problems"}, {"score": 0.004621043537046209, "phrase": "popular_decomposition_method"}, {"score": 0.004564401713056939, "phrase": "least_squares_estimation"}, {"score": 0.004398589723893764, "phrase": "large_data_sets"}, {"score": 0.004273782634394231, "phrase": "coefficient_matrix"}, {"score": 0.003952513974962462, "phrase": "iterative_divide-and-merge-based_estimator"}, {"score": 0.0037621210719690594, "phrase": "lse_problem"}, {"score": 0.0035956327252723483, "phrase": "smaller_lse_problems"}, {"score": 0.0034935290662899488, "phrase": "input_matrices"}, {"score": 0.003394314924677555, "phrase": "small_submatrices"}, {"score": 0.0030623570435946977, "phrase": "next_iteration"}, {"score": 0.002808669326675222, "phrase": "svd."}, {"score": 0.0026403934420630155, "phrase": "input_data"}, {"score": 0.0021845648220890036, "phrase": "mapreduce"}, {"score": 0.002166607745253829, "phrase": "experimental_results"}, {"score": 0.0021311850321045767, "phrase": "proposed_approach"}, {"score": 0.0021049977753042253, "phrase": "large-scale_lse_problems"}], "paper_keywords": ["Linear system", " matrix decomposition", " error minimization", " least squares solution", " large-scale data set", " batch SVD", " MapReduce"], "paper_abstract": "Singular value decomposition (SVD) is a popular decomposition method for solving least squares estimation (LSE) problems. However, for large data sets, applying SVD directly on the coefficient matrix is very time consuming and memory demanding in obtaining least squares solutions. In this paper, we propose an iterative divide-and-merge-based estimator for solving large-scale LSE problems. Iteratively, the LSE problem to be solved is processed and transformed to equivalent but smaller LSE problems. In each iteration, the input matrices are subdivided into a set of small submatrices. The submatrices are decomposed by SVD, respectively, and the results are merged, and the resulting matrices become the input of the next iteration. The process is iterated until the resulting matrices are small enough which can then be solved directly and efficiently by SVD. The number of iterations required is determined dynamically according to the size of the input data set. As a result, the requirements in time and space for finding least squares solutions are greatly improved. Furthermore, the decomposition and merging of the submatrices in each iteration can be independently done in parallel. The idea can be easily implemented in MapReduce and experimental results show that the proposed approach can solve large-scale LSE problems effectively.", "paper_title": "An Iterative Divide-and-Merge-Based Approach for Solving Large-Scale Least Squares Problems", "paper_id": "WOS:000313816300002"}