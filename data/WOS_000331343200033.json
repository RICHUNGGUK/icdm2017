{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "ldpc_codes"}, {"score": 0.01034264320746485, "phrase": "pwg"}, {"score": 0.004686963264680882, "phrase": "specified_parameters"}, {"score": 0.004481132747216135, "phrase": "check_nodes"}, {"score": 0.0043619799095455415, "phrase": "expected_girth"}, {"score": 0.0042459818200777846, "phrase": "variable_node_degrees"}, {"score": 0.003987126862293129, "phrase": "high_rate_low-density_parity-check"}, {"score": 0.00391620123538657, "phrase": "ldpc"}, {"score": 0.003677280504320636, "phrase": "theoretic_foundation"}, {"score": 0.0034841647157189985, "phrase": "girth_impact"}, {"score": 0.0033914308417007316, "phrase": "variable_nodes"}, {"score": 0.0032423089921154503, "phrase": "tanner_graph"}, {"score": 0.003071965703296204, "phrase": "column_weights"}, {"score": 0.0029901699209266435, "phrase": "parity_check_matrix"}, {"score": 0.0026362590493392785, "phrase": "computational_complexity"}, {"score": 0.0025202582748972122, "phrase": "code_performance"}, {"score": 0.0023241387549221408, "phrase": "better_or_comparable_performance"}, {"score": 0.0021821915946356168, "phrase": "well-known_methods"}, {"score": 0.0021050023209319498, "phrase": "mackay"}], "paper_keywords": ["LDPC code", " girth", " progressive weight growth"], "paper_abstract": "Given specified parameters, the number of check nodes, the expected girth and the variable node degrees, the Progressive Weight-Growth (PWG) algorithm is proposed to generate high rate low-density parity-check (LDPC) codes. Based on the theoretic foundation that is to investigate the girth impact by adding/removing variable nodes and edges of the Tanner graph, the PWG progressively increases column weights of the parity check matrix without violating the constraints defined by the given parameters. The analysis of the computational complexity and the simulation of code performance show that the LDPC codes by the PWG provide better or comparable performance in comparison with LDPC codes by some well-known methods (e.g., Mackay's random constructions, the PEG algorithm, and the bit-filling algorithm).", "paper_title": "PWG: Progressive Weight-Growth Algorithm for LDPC Codes", "paper_id": "WOS:000331343200033"}