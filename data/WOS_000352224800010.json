{"auto_keywords": [{"score": 0.04352274851165645, "phrase": "write_buffer"}, {"score": 0.03412073160526442, "phrase": "garbage_collection"}, {"score": 0.010712573486254684, "phrase": "flash_translation_layer"}, {"score": 0.0047588556219929756, "phrase": "hybrid-mapping_ssds"}, {"score": 0.004675930527604869, "phrase": "promising_technique"}, {"score": 0.004567596860086148, "phrase": "write_performance"}, {"score": 0.0045143706249204905, "phrase": "solid-state_disks"}, {"score": 0.004307569753106432, "phrase": "disk_write_buffer"}, {"score": 0.003991449490087454, "phrase": "write_traffic"}, {"score": 0.0039218440805789965, "phrase": "flash_chips"}, {"score": 0.0037201996003549246, "phrase": "long_and_sequential_write_bursts"}, {"score": 0.003591542373891629, "phrase": "new_buffer_design_consisting"}, {"score": 0.0035288860880035985, "phrase": "replacement_policy"}, {"score": 0.0034673190692473903, "phrase": "write-back_policy"}, {"score": 0.0033277936960179892, "phrase": "host_workload"}, {"score": 0.002941913249957503, "phrase": "good_balance"}, {"score": 0.0029075757820516634, "phrase": "write_sequentiality"}, {"score": 0.0026624684547385718, "phrase": "high_write"}, {"score": 0.0024813081174066653, "phrase": "high_overhead"}, {"score": 0.002381365139274329, "phrase": "low_write_randomness"}, {"score": 0.002353554841514325, "phrase": "high_write_sequentiality"}, {"score": 0.0023124457559811087, "phrase": "proposed_buffer_design"}, {"score": 0.0022854384756395116, "phrase": "existing_approaches"}, {"score": 0.002193367454830741, "phrase": "translation_algorithms"}, {"score": 0.0021049977753042253, "phrase": "experiment_results"}], "paper_keywords": ["Design", " Performance", " Algorithm", " Solid-state disks", " flash memory", " write buffering"], "paper_abstract": "A promising technique to improve the write performance of solid-state disks (SSDs) is to use a disk write buffer. The goals of a write buffer is not only to reduce the write traffic to the flash chips but also to convert host write patterns into long and sequential write bursts. This study proposes a new buffer design consisting of a replacement policy and a write-back policy. The buffer monitors how the host workload stresses the flash translation layer upon garbage collection. This is used to dynamically adjust its replacement and write-back strategies for a good balance between write sequentiality and write randomness. When the garbage collection overhead is low, the write buffer favors high write sequentiality over low write randomness. When the flash translation layer observes a high overhead of garbage collection, the write buffer favors low write randomness over high write sequentiality. The proposed buffer design outperformed existing approaches by up to 20% under various workloads and flash translation algorithms, as will be shown in experiment results.", "paper_title": "Plugging Versus Logging: Adaptive Buffer Management for Hybrid-Mapping SSDs", "paper_id": "WOS:000352224800010"}