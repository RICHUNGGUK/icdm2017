{"auto_keywords": [{"score": 0.04891849113301898, "phrase": "unfair_distributed_daemon"}, {"score": 0.00481495049065317, "phrase": "minimal_dominating_set_problem"}, {"score": 0.0045843245695654875, "phrase": "distributed_system"}, {"score": 0.0037360045780015804, "phrase": "finite_time"}, {"score": 0.0035861227263414537, "phrase": "turau"}, {"score": 0.0034990853199511982, "phrase": "first_linear-time_self-stabilizing_algorithm"}, {"score": 0.0033041916095718294, "phrase": "mds"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Self-stabilizing algorithm", " Fault tolerance", " Distributed computing", " Graph algorithm", " Domination"], "paper_abstract": "A distributed system is self-stabilizing if, regardless of its initial state, the system is guaranteed to reach a legitimate (i.e., correct) state in finite time. In 2007, Turau proposed the first linear-time self-stabilizing algorithm for the minimal dominating set (MDS) problem under an unfair distributed daemon [9]; this algorithm stabilizes in at most 9n moves, where n is the number of nodes in the system. In 2008, Goddard et al. [4] proposed a 5n-move algorithm. In this paper, we present a 4n-move algorithm. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "A 4n-move self-stabilizing algorithm for the minimal dominating set problem using an unfair distributed daemon", "paper_id": "WOS:000338973400001"}