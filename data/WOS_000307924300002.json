{"auto_keywords": [{"score": 0.03502296972836849, "phrase": "empty_internal_nodes"}, {"score": 0.03200209729946492, "phrase": "proposed_algorithm"}, {"score": 0.00816162305895199, "phrase": "rule_copy"}, {"score": 0.00481495049065317, "phrase": "packet_classification"}, {"score": 0.004652963867892925, "phrase": "internet_routers"}, {"score": 0.004540591176992658, "phrase": "multi-dimensional_search"}, {"score": 0.004366387782457736, "phrase": "hierarchical_packet_classification"}, {"score": 0.004302791070310513, "phrase": "effective_solution"}, {"score": 0.004219427915728969, "phrase": "search_space"}, {"score": 0.00413767314434795, "phrase": "field_search"}, {"score": 0.003998380230709541, "phrase": "hierarchical_approach"}, {"score": 0.003959447096055027, "phrase": "binary_tries"}, {"score": 0.0036434002236454305, "phrase": "hierarchical_set-pruning_trie"}, {"score": 0.0034863899423238707, "phrase": "pre-computed_switch_pointers"}, {"score": 0.003368948014436942, "phrase": "known_hierarchical_algorithms"}, {"score": 0.0031457622320220364, "phrase": "new_efficient_packet_classification_algorithm"}, {"score": 0.0029807934480637855, "phrase": "hierarchical_binary_search_tree"}, {"score": 0.0028106505443369545, "phrase": "pruned_set"}, {"score": 0.002344655708000408, "phrase": "simulation_results"}, {"score": 0.0022434880661725493, "phrase": "search_performance"}, {"score": 0.0021999341184897217, "phrase": "memory_requirement"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Packet classification", " Set-pruning", " Binary search tree", " Back-tracking"], "paper_abstract": "Packet classification is one of the most challenging functions in Internet routers since it involves a multi-dimensional search that should be performed at wire-speed. Hierarchical packet classification is an effective solution which reduces the search space significantly whenever a field search is completed. However, the hierarchical approach using binary tries has two intrinsic problems: back-tracking and empty internal nodes. To avoid back-tracking, the hierarchical set-pruning trie applies rule copy, and the grid-of-tries uses pre-computed switch pointers. However, none of the known hierarchical algorithms simultaneously avoids empty internal nodes and back-tracking. This paper describes various packet classification algorithms and proposes a new efficient packet classification algorithm using the hierarchical approach. In the proposed algorithm, a hierarchical binary search tree, which does not involve empty internal nodes, is constructed for the pruned set of rules. Hence, both backtracking and empty internal nodes are avoided in the proposed algorithm. Two refinement techniques are also proposed: one for reducing the rule copy caused by the set-pruning and the other for avoiding rule copy. Simulation results show that the proposed algorithm provides an improvement in search performance without increasing the memory requirement compared with other existing hierarchical algorithms. (C) 2012 Elsevier B.V. All rights reserved.", "paper_title": "A new hierarchical packet classification algorithm", "paper_id": "WOS:000307924300002"}