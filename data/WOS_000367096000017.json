{"auto_keywords": [{"score": 0.04871093899700793, "phrase": "non-volatile_memories"}, {"score": 0.013137744109568103, "phrase": "error-correcting_codes"}, {"score": 0.009709641925673635, "phrase": "maximum_and_minimum_hamming_distances"}, {"score": 0.00481495049065317, "phrase": "code_generation_limiting_maximum"}, {"score": 0.004745665541429529, "phrase": "minimum_hamming_distances"}, {"score": 0.0038179283509963695, "phrase": "large_amount"}, {"score": 0.0035766032751309677, "phrase": "maximum_writing_bits"}, {"score": 0.0033262524445013303, "phrase": "non-volatile_memory_design"}, {"score": 0.003115908199991072, "phrase": "doughnut_code"}, {"score": 0.0030048355421601705, "phrase": "state_encoding"}, {"score": 0.0027943943921568456, "phrase": "code_expansion_method"}, {"score": 0.0023990982005125763, "phrase": "maximum-flipped_bits"}, {"score": 0.002347378595930709, "phrase": "error-correcting_ability"}, {"score": 0.0022967713922705, "phrase": "hamming_code"}, {"score": 0.002263639474937039, "phrase": "experimental_results"}, {"score": 0.0021987994275190314, "phrase": "proposed_code"}, {"score": 0.0021049977753042253, "phrase": "maximum-writing_bits"}], "paper_keywords": ["non-volatile memory", " maximum-writing bits", " error-correcting codes", " Doughnut code", " code expansion"], "paper_abstract": "Data stored in non-volatile memories may be destructed due to crosstalk and radiation but we can restore their data by using error-correcting codes. However, non-volatile memories consume a large amount of energy in writing. How to reduce maximum writing bits even using error-correcting codes is one of the challenges in non-volatile memory design. In this paper, we first propose Doughnut code which is based on state encoding limiting maximum and minimum Hamming distances. After that, we propose a code expansion method, which improves maximum and minimum Hamming distances. When we apply our code expansion method to Doughnut code, we can obtain a code which reduces maximum-flipped bits and has error-correcting ability equal to Hamming code. Experimental results show that the proposed code efficiently reduces the number of maximum-writing bits.", "paper_title": "Code Generation Limiting Maximum and Minimum Hamming Distances for Non-Volatile Memories", "paper_id": "WOS:000367096000017"}