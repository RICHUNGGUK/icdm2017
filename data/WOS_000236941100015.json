{"auto_keywords": [{"score": 0.035313380523673145, "phrase": "gupta"}, {"score": 0.01139778350744641, "phrase": "mcmillan"}, {"score": 0.005965405463893117, "phrase": "bmc"}, {"score": 0.00481495049065317, "phrase": "interpolation-based_unbounded_model_checking"}, {"score": 0.004522796947899013, "phrase": "modem_satisfiability"}, {"score": 0.0036324746826127997, "phrase": "explicit_abstraction_refinement_schemes"}, {"score": 0.003454858296390957, "phrase": "sat-based_model_checking"}, {"score": 0.003306559295382181, "phrase": "strichman"}, {"score": 0.0031845067058084583, "phrase": "bounded_model_checking"}, {"score": 0.0027395968397212053, "phrase": "abstraction_refinement"}, {"score": 0.0025892330566358503, "phrase": "shorter_paths"}, {"score": 0.0024625017739528096, "phrase": "significant_overhead"}, {"score": 0.0024014759148123736, "phrase": "efficient_abstractions"}, {"score": 0.0021049977753042253, "phrase": "abstraction_refinement_scheme"}], "paper_keywords": [""], "paper_abstract": "It has been pointed out by McMillan that modem satisfiability (SAT) solvers have the ability to perform on-the-fly model abstraction when examining it for the existence of paths satisfying certain conditions. The issue has therefore been raised of whether explicit abstraction refinement schemes still have a role to play in SAT-based model checking. Recent work by Gupta and Strichman has addressed this issue for bounded model checking (BMC). while in this paper we consider unbounded model checking based on interpolation. We show that for passing properties abstraction refinement leads to proofs that often require examination of shorter paths. On the other hand, there is significant overhead involved in computing efficient abstractions. We describe the techniques we have developed to minimize such overhead to the point that even for failing properties the abstraction refinement scheme remains competitive.", "paper_title": "Efficient abstraction refinement in interpolation-based unbounded model checking", "paper_id": "WOS:000236941100015"}