{"auto_keywords": [{"score": 0.043367051214551706, "phrase": "billion-scale_graphs"}, {"score": 0.03067074282923616, "phrase": "single_pc."}, {"score": 0.00481495049065317, "phrase": "hybrid_cpu"}, {"score": 0.004772593750252861, "phrase": "gpu_systems"}, {"score": 0.004566308708871429, "phrase": "social_networks"}, {"score": 0.004526129302830441, "phrase": "web_graphs"}, {"score": 0.004407690586271672, "phrase": "efficient_and_effective_management"}, {"score": 0.0042171108629745655, "phrase": "gbase"}, {"score": 0.004179999878299646, "phrase": "pregel"}, {"score": 0.003929107176349023, "phrase": "distributed_system"}, {"score": 0.0037925389501636975, "phrase": "non-trivial_job"}, {"score": 0.003660700128133065, "phrase": "distributed_systems"}, {"score": 0.003502305158321511, "phrase": "reasonable_performance"}, {"score": 0.00344087639309216, "phrase": "non-distributed_graph_processing_platforms"}, {"score": 0.0032919615578986816, "phrase": "efficient_non-distributed_platforms"}, {"score": 0.0031774686451753477, "phrase": "better_energy_efficiency"}, {"score": 0.003149471116658739, "phrase": "distributed_ones"}, {"score": 0.0031217213670728635, "phrase": "graphchi"}, {"score": 0.003080548510001051, "phrase": "representative_non-distributed_platform"}, {"score": 0.0028446460307503343, "phrase": "design_drawbacks"}, {"score": 0.0027700855441353165, "phrase": "computation_model"}, {"score": 0.002404136142279618, "phrase": "full_parallelism"}, {"score": 0.002382936364692606, "phrase": "full_overlap"}, {"score": 0.002279702500235741, "phrase": "experiment_results"}, {"score": 0.002161695357601592, "phrase": "ggraph"}, {"score": 0.0021331586055770447, "phrase": "best_energy_efficiency"}, {"score": 0.0021049977753042253, "phrase": "evaluated_platforms"}], "paper_keywords": ["Graph", " Graph algorithm", " Graph processing platform", " GPU"], "paper_abstract": "Graphs are used to model many real objects such as social networks and web graphs. Many real applications in various fields require efficient and effective management of large-scale, graph-structured data. Although distributed graph engines such as GBase and Pregel handle billion-scale graphs, users need to be skilled at managing and tuning a distributed system in a cluster, which is a non-trivial job for ordinary users. Furthermore, these distributed systems need many machines in a cluster in order to provide reasonable performance. Several recent works proposed non-distributed graph processing platforms as complements to distributed platforms. In fact, efficient non-distributed platforms require less hardware resource and can achieve better energy efficiency than distributed ones. GraphChi is a representative non-distributed platform that is disk-based and can process billions of edges on CPUs in a single PC. However, the design drawbacks of GraphChi on I/O and computation model have limited its parallelism and performance. In this paper, we propose a general, disk-based graph engine called gGraph to process billion-scale graphs efficiently by utilizing both CPUs and GPUs in a single PC. GGraph exploits full parallelism and full overlap of computation and I/O processing as much as possible. Experiment results show that gGraph outperforms GraphChi and PowerGraph. In addition, gGraph achieves the best energy efficiency among all evaluated platforms.", "paper_title": "Efficient graph computation on hybrid CPU and GPU systems", "paper_id": "WOS:000352360300017"}