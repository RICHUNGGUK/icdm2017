{"auto_keywords": [{"score": 0.04917329992972086, "phrase": "explicit_distribution"}, {"score": 0.040937145417531844, "phrase": "crosscutting_concerns"}, {"score": 0.04019017756916237, "phrase": "error_handling"}, {"score": 0.03130329552630277, "phrase": "wsml"}, {"score": 0.00481495049065317, "phrase": "distributed_web_services"}, {"score": 0.004525088883501587, "phrase": "web_services_technology"}, {"score": 0.004460703838987562, "phrase": "service_oriented_architectures"}, {"score": 0.004272969980602508, "phrase": "just-in-time_integration"}, {"score": 0.004112711391952791, "phrase": "runtime_integration"}, {"score": 0.003791763445590174, "phrase": "service_monitoring"}, {"score": 0.0037377733149169573, "phrase": "qos_enforcements"}, {"score": 0.003702206069379459, "phrase": "aspect_oriented_programming"}, {"score": 0.0034459835582278746, "phrase": "aspect-oriented_support"}, {"score": 0.0033645655483989746, "phrase": "distributed_management"}, {"score": 0.003332537728389913, "phrase": "web_service_compositions"}, {"score": 0.003222814590544802, "phrase": "distributed_aop_approach"}, {"score": 0.0030140547908298404, "phrase": "distributed_variant"}, {"score": 0.0025861368747446324, "phrase": "awed's_aspect_language"}, {"score": 0.0024652715040303416, "phrase": "web_services"}, {"score": 0.0022944576894161485, "phrase": "different_modes"}, {"score": 0.0022401855403251653, "phrase": "remote_pointcuts"}, {"score": 0.0021049977753042253, "phrase": "distributed_web_compositions"}], "paper_keywords": [""], "paper_abstract": "With the adoption of Web services technology to realize Service Oriented Architectures, the need arises for more flexible and dynamic technologies for the just-in-time integration and composition of services. As the runtime integration, selection and management of services involves a variety of crosscutting concerns, such as error handling, service monitoring, and QoS enforcements, Aspect Oriented Programming (AOP) is useful to modularize such concerns. In this paper we investigate aspect-oriented support for crosscutting concerns of distributed management of web service compositions. We propose to use a distributed AOP approach, Aspects with Explicit Distribution (AWED), to modularize such concerns in a distributed variant of the Web Services Management Layer (WSML). Concretely, we present three contributions. First, we present an extension of the WSML to distributed compositions. Second, we present two extensions to AWED's aspect language which are useful for the modularization of crosscutting concerns of web services: support for chains of (a)synchronous remote advice that communicate through futures, and support for different modes of parameter passing between remote pointcuts and advice. Third, we illustrate our approach by investigating error handling in distributed web compositions.", "paper_title": "Modularization of distributed Web services using aspects with explicit distribution (AWED)", "paper_id": "WOS:000243318600032"}