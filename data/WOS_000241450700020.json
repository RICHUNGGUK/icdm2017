{"auto_keywords": [{"score": 0.00450933377534525, "phrase": "extensible_domain_architecture"}, {"score": 0.004421471944783611, "phrase": "collaborative_development"}, {"score": 0.004167982855788402, "phrase": "security_requirements"}, {"score": 0.004086744751579196, "phrase": "abstract_level"}, {"score": 0.003928969293303814, "phrase": "visual_language"}, {"score": 0.0035605741849764187, "phrase": "integrated_tools"}, {"score": 0.003445591238183763, "phrase": "artefacts_configuring_security_components"}, {"score": 0.003378385493203297, "phrase": "web_services-based_architecture"}, {"score": 0.0030017207229983385, "phrase": "mof_based_metamodels"}, {"score": 0.0029238768315330305, "phrase": "specific_language"}, {"score": 0.0028293966058473476, "phrase": "inter-organizational_workflows"}, {"score": 0.00270221723573854, "phrase": "security_patterns"}, {"score": 0.0026148807877309417, "phrase": "model-to-model_transformations"}, {"score": 0.002416589459425828, "phrase": "platform_independent_models"}, {"score": 0.0023850311572318496, "phrase": "platform_specific_artefacts"}, {"score": 0.0023384629381463054, "phrase": "reference_architecture"}, {"score": 0.002218668420806254, "phrase": "model-to-code_transformation"}, {"score": 0.0021049977753042253, "phrase": "openarchitectureware."}], "paper_keywords": [""], "paper_abstract": "The SECTET-framework realizes an extensible domain architecture for the collaborative development and management of security-critical, interorganizational workflows. Models integrate security requirements at the abstract level and are rendered in a visual language based on UML 2.0. The models form the input for a chain of integrated tools that transform them into artefacts configuring security components of a Web services-based architecture. Based on findings of various projects, this contribution has three objectives. First, we detail the MOF based metamodels defining a domain specific language for the design of inter-organizational workflows. The language supports various categories of security patterns. We then specify model-to-model transformations based on the MDA standard MOF-QVT. The mappings translate platform independent models into platform specific artefacts targeting the reference architecture. Third, we exemplarily show how model-to-code transformation could be implemented with an MDA-framework like OPENARCHITECTUREWARE.", "paper_title": "Towards a MOF/QVT-based domain architecture for model driven security", "paper_id": "WOS:000241450700020"}