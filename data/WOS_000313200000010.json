{"auto_keywords": [{"score": 0.035462080847521456, "phrase": "bsgd"}, {"score": 0.008649428746261626, "phrase": "sgd"}, {"score": 0.0068237411731595435, "phrase": "support_vectors"}, {"score": 0.006554714343375246, "phrase": "budget_maintenance"}, {"score": 0.004776297980616768, "phrase": "large-scale_svm_training"}, {"score": 0.004442032546224076, "phrase": "data_streams"}, {"score": 0.004406360418456518, "phrase": "stochastic_gradient_descent"}, {"score": 0.004232232993872917, "phrase": "attractive_choice"}, {"score": 0.004016072233242585, "phrase": "kernel_functions"}, {"score": 0.003765067028482197, "phrase": "unbounded_linear_growth"}, {"score": 0.003734810936407523, "phrase": "model_size"}, {"score": 0.0036602262729063775, "phrase": "data_size"}, {"score": 0.0035439655241057207, "phrase": "large_data_sets"}, {"score": 0.003390092184270794, "phrase": "budgeted_sgd"}, {"score": 0.003308986613384597, "phrase": "large-scale_kernel_svm_training"}, {"score": 0.003229815147800001, "phrase": "constant_time_complexity"}, {"score": 0.002896274285996145, "phrase": "gradient_error"}, {"score": 0.002759279370360986, "phrase": "optimal_svm_solutions"}, {"score": 0.0027150658583211746, "phrase": "model_degradation"}, {"score": 0.0025866199378466754, "phrase": "greedy_budget_maintenance_methods"}, {"score": 0.0024444073418288703, "phrase": "budgeted_versions"}, {"score": 0.0023762535034673017, "phrase": "sgd_family"}, {"score": 0.0023287359930308864, "phrase": "bsgd_algorithms"}, {"score": 0.0023099954987126, "phrase": "multi-class_svm_training"}, {"score": 0.002227508035618043, "phrase": "higher_accuracy"}, {"score": 0.0021392979397427984, "phrase": "non-budget_algorithms"}, {"score": 0.0021049977753042253, "phrase": "impressive_computational_efficiency"}], "paper_keywords": ["SVM", " large-scale learning", " online learning", " stochastic gradient descent", " kernel methods"], "paper_abstract": "Online algorithms that process one example at a time are advantageous when dealing with very large data or with data streams. Stochastic Gradient Descent (SGD) is such an algorithm and it is an attractive choice for online Support Vector Machine (SVM) training due to its simplicity and effectiveness. When equipped with kernel functions, similarly to other SVM learning algorithms, SGD is susceptible to the curse of kernelization that causes unbounded linear growth in model size and update time with data size. This may render SGD inapplicable to large data sets. We address this issue by presenting a class of Budgeted SGD (BSGD) algorithms for large-scale kernel SVM training which have constant space and constant time complexity per update. Specifically, BSGD keeps the number of support vectors bounded during training through several budget maintenance strategies. We treat the budget maintenance as a source of the gradient error, and show that the gap between the BSGD and the optimal SVM solutions depends on the model degradation due to budget maintenance. To minimize the gap, we study greedy budget maintenance methods based on removal, projection, and merging of support vectors. We propose budgeted versions of several popular online SVM algorithms that belong to the SGD family. We further derive BSGD algorithms for multi-class SVM training. Comprehensive empirical results show that BSGD achieves higher accuracy than the state-of-the-art budgeted online algorithms and comparable to non-budget algorithms, while achieving impressive computational efficiency both in time and space during training and prediction.", "paper_title": "Breaking the Curse of Kernelization: Budgeted Stochastic Gradient Descent for Large-Scale SVM Training", "paper_id": "WOS:000313200000010"}