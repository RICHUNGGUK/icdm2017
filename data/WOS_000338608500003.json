{"auto_keywords": [{"score": 0.027366003936155615, "phrase": "ltl"}, {"score": 0.00481495049065317, "phrase": "rigorous_topological_viewpoint"}, {"score": 0.004151188559520802, "phrase": "cantor_topology"}, {"score": 0.004021267064832957, "phrase": "empty_interior"}, {"score": 0.003773449694108617, "phrase": "omega-regular_languages"}, {"score": 0.002863921785266393, "phrase": "countable_union"}, {"score": 0.0028037753646260937, "phrase": "monitorable_languages"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Omega-regular language", " Monitorable property", " Runtime verification", " Topology"], "paper_abstract": "We review concepts like safety, liveness, and monitorability from a rigorous topological viewpoint. Thus, monitorability of an omega-language means that the boundary in the Cantor topology has an empty interior. We show that all omega-regular languages which are deterministic and co-deterministic are monitorable, but certain deterministic liveness properties like \"infinitely many a's\" cannot be written as a countable union of monitorable languages. We briefly discuss model checking with LTL, its three-valued variant LTL3 and monitor constructions based upon LTL3. (C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "Topology, monitorable properties and runtime verification", "paper_id": "WOS:000338608500003"}