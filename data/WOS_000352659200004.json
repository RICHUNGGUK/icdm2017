{"auto_keywords": [{"score": 0.048000287634733727, "phrase": "virtual_routers"}, {"score": 0.0048152243506701786, "phrase": "ip"}, {"score": 0.004657393640152439, "phrase": "scalable_virtual_routers"}, {"score": 0.0044800522651664695, "phrase": "promising_way"}, {"score": 0.004430629452265786, "phrase": "network_virtualization"}, {"score": 0.004357511171877593, "phrase": "multiple_virtual_router_instances"}, {"score": 0.004238307626560739, "phrase": "common_physical_platform"}, {"score": 0.004168349927332055, "phrase": "key_scalability_challenge"}, {"score": 0.004122351497440992, "phrase": "ip_lookup"}, {"score": 0.00396530196547293, "phrase": "large_number"}, {"score": 0.00392153537973826, "phrase": "forwarding_tables"}, {"score": 0.0038354405231002323, "phrase": "limited_amounts"}, {"score": 0.0037931018103829427, "phrase": "high-speed_memory"}, {"score": 0.003608266640131664, "phrase": "novel_trie-merged_approach"}, {"score": 0.0035684266744407485, "phrase": "memory-efficient_ip_lookup"}, {"score": 0.0033757067564871494, "phrase": "node_isomorphism"}, {"score": 0.003265090934183249, "phrase": "multiple_separate_tries"}, {"score": 0.0031933617014256676, "phrase": "directed_acyclic_graph"}, {"score": 0.0030376623293574905, "phrase": "ip_lookup_architecture"}, {"score": 0.002763919794139171, "phrase": "longest_matching_prefix"}, {"score": 0.0025713100093065645, "phrase": "corresponding_next_hop"}, {"score": 0.002542890176213921, "phrase": "off-chip_hash_tables"}, {"score": 0.002486987042061596, "phrase": "realistic_and_synthetic_ip_forwarding_tables"}, {"score": 0.0024323098907299027, "phrase": "trie_merging_scheme"}, {"score": 0.0022377394845878268, "phrase": "memory_consumption"}, {"score": 0.0021763973978248005, "phrase": "previous_schemes"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["Virtual router", " IP lookup", " Longest prefix matching", " Forwarding table", " Trie"], "paper_abstract": "Virtual routers are emerging as a promising way for network virtualization to run multiple virtual router instances in parallel on a common physical platform. The key scalability challenge for IP lookup in virtual routers is to support a large number of forwarding tables that fit in limited amounts of high-speed memory for good performance. This paper presents a novel trie-merged approach to memory-efficient IP lookup for scalable virtual routers. This approach exploits the node isomorphism to transform a forest of multiple separate tries to an equivalent directed acyclic graph (DAG). We also propose an IP lookup architecture to speed up the performance. This architecture uses an on-chip DAG to find the longest matching prefix, and then uses the prefix as a key to retrieve the corresponding next hop from off-chip hash tables. Experiments on realistic and synthetic IP forwarding tables show that the trie merging scheme reduces the number of nodes by up to 109.2 times as well as the memory consumption by up to 11.8 times compared to previous schemes. (C) 2014 Elsevier Ltd. All rights reserved.", "paper_title": "Memory-efficient IP lookup using trie merging for scalable virtual routers", "paper_id": "WOS:000352659200004"}