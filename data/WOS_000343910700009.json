{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "semantically_related_words"}, {"score": 0.010472159017445555, "phrase": "code_search"}, {"score": 0.007943616888823259, "phrase": "english"}, {"score": 0.006373106187367523, "phrase": "similar_functionality"}, {"score": 0.0051288577437423695, "phrase": "cross-project_rpairs"}, {"score": 0.004782848614014638, "phrase": "software_context"}, {"score": 0.0047035227618053965, "phrase": "integral_part"}, {"score": 0.004672160300006692, "phrase": "software_development"}, {"score": 0.004641005983799053, "phrase": "program_comprehension"}, {"score": 0.004443482801729777, "phrase": "exact_words"}, {"score": 0.004268591456106124, "phrase": "keyword-based_code_search"}, {"score": 0.0040324997782003455, "phrase": "search_effectiveness"}, {"score": 0.003860774424566198, "phrase": "english_dictionaries"}, {"score": 0.0038350271281839274, "phrase": "wordnet"}, {"score": 0.0033206861608068025, "phrase": "simple_and_general_technique"}, {"score": 0.003003157931633302, "phrase": "ranking_algorithm"}, {"score": 0.002973120121800634, "phrase": "rpair_results"}, {"score": 0.002953261517737546, "phrase": "study_cross-project_rpairs"}, {"score": 0.002789715649746005, "phrase": "reasonable_accuracy"}, {"score": 0.0027710786693798534, "phrase": "nine_large_and_popular_code_bases"}, {"score": 0.002725077781264016, "phrase": "java"}, {"score": 0.002600105134993952, "phrase": "higher_precision"}, {"score": 0.0025313026089662165, "phrase": "proposed_ranking_algorithm"}, {"score": 0.0025059724686541263, "phrase": "rpair_extraction_accuracy"}, {"score": 0.0024808951705681636, "phrase": "correct_rpairs"}, {"score": 0.0022585847551229274, "phrase": "project-specific_rpairs"}, {"score": 0.0021262835396323623, "phrase": "discovered_overlapping_rpairs"}], "paper_keywords": ["Semantically related words", " Code search", " Program comprehension"], "paper_abstract": "Code search is an integral part of software development and program comprehension. The difficulty of code search lies in the inability to guess the exact words used in the code. Therefore, it is crucial for keyword-based code search to expand queries with semantically related words, e. g., synonyms and abbreviations, to increase the search effectiveness. However, it is limited to rely on resources such as English dictionaries and WordNet to obtain semantically related words in software because many words that are semantically related in software are not semantically related in English. On the other hand, many words that are semantically related in English are not semantically related in software. This paper proposes a simple and general technique to automatically infer semantically related words (referred to as rPairs) in software by leveraging the context of words in comments and code. In addition, we propose a ranking algorithm on the rPair results and study cross-project rPairs on two sets of software with similar functionality, i.e., media browsers and operating systems. We achieve a reasonable accuracy in nine large and popular code bases written in C and Java. Our further evaluation against the state of art shows that our technique can achieve a higher precision and recall. In addition, the proposed ranking algorithm improves the rPair extraction accuracy by bringing correct rPairs to the top of the list. Our cross-project study successfully discovers overlapping rPairs among projects of similar functionality and finds that cross-project rPairs are more likely to be correct than project-specific rPairs. Since the cross-project rPairs are highly likely to be general for software of the same type, the discovered overlapping rPairs can benefit other projects of the same type that have not been analyzed.", "paper_title": "SWordNet: Inferring semantically related words from software context", "paper_id": "WOS:000343910700009"}