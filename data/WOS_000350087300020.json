{"auto_keywords": [{"score": 0.04083844811588238, "phrase": "wolfram_mathematica"}, {"score": 0.010612387000973441, "phrase": "feynman_integral_reduction"}, {"score": 0.010242196332612096, "phrase": "previous_versions"}, {"score": 0.01017653186082528, "phrase": "mathematica"}, {"score": 0.009570604578073112, "phrase": "feynman_integrals"}, {"score": 0.008986118852236696, "phrase": "distributed_program"}, {"score": 0.008942651929638164, "phrase": "test_data"}, {"score": 0.0075458336158034395, "phrase": "new_version"}, {"score": 0.004563811890033791, "phrase": "wolf_ram"}, {"score": 0.004325715261788471, "phrase": "previously_impossible_situations"}, {"score": 0.004298511689217303, "phrase": "program"}, {"score": 0.004276822269285178, "phrase": "fires_catalogue"}, {"score": 0.004201099856560707, "phrase": "cpc_program_library"}, {"score": 0.004187476278495179, "phrase": "queen's_university"}, {"score": 0.004173896901381077, "phrase": "belfast"}, {"score": 0.00416036096402335, "phrase": "n._ireland"}, {"score": 0.004133420501513293, "phrase": "gnu_general_public_license"}, {"score": 0.0039049811421637713, "phrase": "tar.gz_programming_language"}, {"score": 0.0038295901084802074, "phrase": "desktop_pc._operating_system"}, {"score": 0.0038171954184262192, "phrase": "linux"}, {"score": 0.003798701225403522, "phrase": "mac"}, {"score": 0.003647396041678143, "phrase": "problem_classification"}, {"score": 0.003401211304488597, "phrase": "previous_version"}, {"score": 0.0033409398279180946, "phrase": "master_integrals"}, {"score": 0.003287071835018354, "phrase": "huge_system"}, {"score": 0.0032764025692884687, "phrase": "sparse_linear_equations"}, {"score": 0.0032657678206783804, "phrase": "polynomial_coefficients"}, {"score": 0.0032551674782540087, "phrase": "solution_method"}, {"score": 0.003181919209618585, "phrase": "standard_methods"}, {"score": 0.003166438183276497, "phrase": "linear_equations"}, {"score": 0.0030951803145751818, "phrase": "special_version"}, {"score": 0.0030851319675764947, "phrase": "gauss_elimination"}, {"score": 0.003070120390927384, "phrase": "data_preparation"}, {"score": 0.003060153149974531, "phrase": "result_analysis"}, {"score": 0.003005907196722879, "phrase": "main_reduction_procedure"}, {"score": 0.002976724858068411, "phrase": "fire"}, {"score": 0.002766666564528043, "phrase": "additional_rules"}, {"score": 0.0027264635233395606, "phrase": "mathematica_version"}, {"score": 0.0026607490253259774, "phrase": "current_state"}, {"score": 0.0026521072855897614, "phrase": "elementary_particle_physics"}, {"score": 0.0025797736488646847, "phrase": "major_update"}, {"score": 0.0024971906312250807, "phrase": "huge_speed_advantage"}, {"score": 0.002389871254260111, "phrase": "cpu_time"}, {"score": 0.002347481321315389, "phrase": "ram."}, {"score": 0.0022946087591069887, "phrase": "maximal_number"}, {"score": 0.0022871534645387114, "phrase": "positive_indices"}, {"score": 0.002261249739608852, "phrase": "non-trivial_sectors"}, {"score": 0.0022247513834202357, "phrase": "global_symmetries"}, {"score": 0.0021360566273369874, "phrase": "additional_information"}], "paper_keywords": ["Feynman diagrams", " Multiloop Feynman integrals", " Dimensional regularization", " Computer algebra"], "paper_abstract": "In this paper the C++ version of FIRE is presented - a powerful program performing Feynman integral reduction to master integrals. All previous versions used only Wolf ram Mathematica, the current version mostly uses Wolf ram Mathematica as a front-end. However, the most complicated part, the reduction itself can now be done by C++, which significantly improves the performance and allows one to reduce Feynman integrals in previously impossible situations. Program summary Program title: FIRES Catalogue identifier: AEPW_v2_0 Program summary URL: http://cpc.cs.qub.ac.uk/summaries/AEPW_v2_0.html Program obtainable from: CPC Program Library, Queen's University, Belfast, N. Ireland Licensing provisions: GNU General Public License, version 2 No. of lines in distributed program, including test data, etc.: 681856 No. of bytes in distributed program, including test data, etc.: 40047357 Distribution format: tar.gz Programming language: Wolfram Mathematica 6.0 or higher, C++. Computer: Starting from a desktop PC. Operating system: Linux 64bit, Mac OS X 10.6 or higher 64bit Has the code been vectorized or parallelized?: Yes RAM: Depends on the complexity of the problem Classification: 4.4, 4.8, 5, 20. External routines: Wolfram Mathematica [1], Snappy [2], KyotoCabinet [3], Fermat [4], LiteRed [5]. Does the new version supersede the previous version?: Yes Nature of problem: Reducing Feynman integrals to master integrals can be treated as a task to solve a huge system of sparse linear equations with polynomial coefficients. Solution method: Since the matrix of equations is very specific, none of the standard methods of solving linear equations can be applied efficiently. The program approaches solving those equations with a special version of Gauss elimination. The data preparation and result analysis is performed in Wolfram Mathematica [1], but the main reduction procedure is written in C++; FIRE compresses data with the use of the Snappy [2] library, stores it on disk with the use of the KyotoCabinet [3] database engine, and performs algebraic simplifications with the Fermat [4] program. The external package LiteRed [5] can be used to produce additional rules for reduction. Reasons for new version: The Mathematica version of FIRE is too slow to perform reduction where it is needed in the current state of Elementary Particle Physics. Hence the most time-consuming part of FIRE was rewritten in C++. Summary of revisions: FIRE5 is a major update of FIRE4 - the reduction was completely rewritten (now in C++ instead of Wolfram Mathematica), gaining a huge speed advantage. Apart from that, FIRE is made backward-compatible with the previous versions. Restrictions: The complexity of the problem is mostly restricted by CPU time required to perform the reduction of integrals and the available RAM. The program has the following limits: maximal number of indices = 21, maximal number of positive indices = 15, maximal number of non-trivial sectors = 128 x 256 - 3 = 32765 (global symmetries decrease the number of sectors, indices that cannot be positive do not double the number of sectors). Additional comments: Additional information may be found at http://science.sander.su. Running time: Depends on the complexity of the problem.(C) 2014 Elsevier B.V. All rights reserved.", "paper_title": "FIRE5: A C++ implementation of Feynman Integral REduction", "paper_id": "WOS:000350087300020"}