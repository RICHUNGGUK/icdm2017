{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "big_data"}, {"score": 0.004726382602809228, "phrase": "density-based_clustering"}, {"score": 0.0045119929871912405, "phrase": "internet_data_processing"}, {"score": 0.0044702911400353535, "phrase": "massive-scale_moving_object_management"}, {"score": 0.004367707617503722, "phrase": "cludoop_algorithm"}, {"score": 0.00413103050129031, "phrase": "hadoop"}, {"score": 0.00399881984083004, "phrase": "serial_clustering_algorithm"}, {"score": 0.0039252049353279556, "phrase": "cell_partition"}, {"score": 0.003593555152077465, "phrase": "connected_cells"}, {"score": 0.0035110198699787013, "phrase": "expensive_completed_neighbor_query"}, {"score": 0.0033828748627992193, "phrase": "distance_calculations"}, {"score": 0.0032745778756077693, "phrase": "cludoop"}, {"score": 0.0031845067058084583, "phrase": "very-large-scale_data"}, {"score": 0.003125835572347772, "phrase": "already_existing_data_partition"}, {"score": 0.0030117065110966414, "phrase": "proposed_serial"}, {"score": 0.0029838294169759663, "phrase": "cluc"}, {"score": 0.002942495422585405, "phrase": "plugged-in_clustering"}, {"score": 0.0028350413546400703, "phrase": "cell_description"}, {"score": 0.002795762692061496, "phrase": "completed_cell"}, {"score": 0.0026440008776012665, "phrase": "proposed_cell-based_principles"}, {"score": 0.0024543571925896073, "phrase": "assigned_preclustering_result"}, {"score": 0.0022052711621931144, "phrase": "correct_clusters"}, {"score": 0.0021848422732893926, "phrase": "arbitrary_shape"}, {"score": 0.0021049977753042253, "phrase": "better_scalability"}], "paper_keywords": [""], "paper_abstract": "Density-based clustering for big data is critical for many modern applications ranging from Internet data processing to massive-scale moving object management. This paper proposes Cludoop algorithm, an efficient distributed density-based clustering for big data using Hadoop. First, we propose a serial clustering algorithm CluC by leveraging cell partition optimization and c-cluster to fast find clusters. CluC completes classification of the points using the relationships of connected cells around points instead of expensive completed neighbor query, which significantly reduce the number of distance calculations. Second, we propose the Cludoop, which can efficiently cluster very-large-scale data in parallel using already existing data partition on Map/ Reduce platform. It employs the proposed serial clustering CluC as a plugged-in clustering on parallel mapper, along with a cell description instead of completed cell in transmission to reduce both network and I/O costs. Guided by proposed cell-based principles, we also design a Merging-Refinement-Merging 3-step framework to merge c-clusters on the overlay of assigned preclustering result on reducer. Finally, our comprehensive experimental evaluation on 10 network-connected commercial PCs, using both huge-volume real and synthetic data, demonstrates (1) the effectiveness of our algorithm in finding correct clusters with arbitrary shape and (2) the fact that our proposed algorithm exhibits better scalability and efficiency than state-of-the-art method.", "paper_title": "Cludoop: An Efficient Distributed Density-Based Clustering for Big Data Using Hadoop", "paper_id": "WOS:000357199600001"}