{"auto_keywords": [{"score": 0.03280182630528363, "phrase": "aco_algorithms"}, {"score": 0.014757161782084574, "phrase": "ant_system"}, {"score": 0.007885710551436406, "phrase": "surrogate_modeling"}, {"score": 0.00481495049065317, "phrase": "limited_budget"}, {"score": 0.0047386923107107645, "phrase": "ant_colony_optimization"}, {"score": 0.004626553103375699, "phrase": "successful_method"}, {"score": 0.004571478018964363, "phrase": "difficult_combinatorial_optimization_problems"}, {"score": 0.004375061788023814, "phrase": "large_number"}, {"score": 0.004340263267055143, "phrase": "algorithmic_variants"}, {"score": 0.004237512575106522, "phrase": "significantly_better_performance"}, {"score": 0.004187049198138107, "phrase": "wide_range"}, {"score": 0.004153739859461064, "phrase": "optimization_problems"}, {"score": 0.0039911102918360995, "phrase": "solution_quality"}, {"score": 0.003758981686762617, "phrase": "candidate_solutions"}, {"score": 0.0035687137873965684, "phrase": "practical_applications"}, {"score": 0.003361069456060196, "phrase": "tight_real-time_constraints"}, {"score": 0.0033077610063168093, "phrase": "high_computational_cost"}, {"score": 0.0030414140732789186, "phrase": "current_knowledge"}, {"score": 0.0030171910207671205, "phrase": "good_parameter_settings"}, {"score": 0.0027964537059186893, "phrase": "different_aco_algorithms"}, {"score": 0.0027631038845413393, "phrase": "strongly_limited_budget"}, {"score": 0.0026760974046034854, "phrase": "default_parameter_settings"}, {"score": 0.002623111480310373, "phrase": "parameter_settings"}, {"score": 0.002581477142020187, "phrase": "limited-budget_scenario"}, {"score": 0.002373472641477602, "phrase": "search_landscapes"}, {"score": 0.0022895278869126848, "phrase": "limited-budget_case"}, {"score": 0.002262209824105154, "phrase": "uttermost_importance"}, {"score": 0.0022352169832099153, "phrase": "direct_search"}, {"score": 0.0021049977753042253, "phrase": "aco_variants"}], "paper_keywords": ["Ant colony optimization", " Expensive optimization problems", " Parameter tuning", " Automatic configuration", " Surrogate modeling"], "paper_abstract": "Ant colony optimization (ACO) is a successful method for solving difficult combinatorial optimization problems. Following Ant System, the first ACO algorithm, a large number of algorithmic variants have been developed that showed significantly better performance on a wide range of optimization problems. Typically, performance was measured according to the solution quality achieved for a given computation time limit, which usually allowed the evaluation of a very large number of candidate solutions, often in the range of millions. However, there are practical applications where the number of evaluations that can be done is very restricted due to tight real-time constraints or to the high computational cost of evaluating a solution. Since these situations are quite different from those for which ACO algorithms were initially designed, current knowledge on good parameter settings or the most promising search strategies may not be directly applicable. In this paper, we examine the performance of different ACO algorithms under a strongly limited budget of 1000 evaluations. We do so using default parameter settings from the literature and parameter settings tuned for the limited-budget scenario. In addition, we compare the performance of the ACO algorithms to algorithms that make use of surrogate modeling of the search landscapes. We show that tuning algorithms for the limited-budget case is of uttermost importance, that direct search through the ACO algorithms keeps an edge over techniques using surrogate modeling, and that the ACO variants proposed as improvements over Ant System remain preferable.", "paper_title": "Ant colony optimization on a limited budget of evaluations", "paper_id": "WOS:000358670700003"}