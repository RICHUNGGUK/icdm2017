{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "software_architecture"}, {"score": 0.048163992431376076, "phrase": "non-functional_requirements"}, {"score": 0.004741845603430361, "phrase": "monitoring_infrastructure"}, {"score": 0.004506048850130758, "phrase": "resource_management"}, {"score": 0.004437613070853689, "phrase": "important_aspect"}, {"score": 0.004260134699483774, "phrase": "different_non-functional_or_operational_requirements"}, {"score": 0.004152818376630929, "phrase": "distributed_and_heterogeneous_environments"}, {"score": 0.0038271712887391015, "phrase": "required_resource_constraints"}, {"score": 0.003545024951402821, "phrase": "resource_availability"}, {"score": 0.0034556603183020407, "phrase": "contract-based_approach"}, {"score": 0.0033685408148574876, "phrase": "parallel_applications"}, {"score": 0.0032668821950788533, "phrase": "computing_grid_context"}, {"score": 0.0031360786664165093, "phrase": "supporting_infrastructure"}, {"score": 0.002964706925144123, "phrase": "globus_services"}, {"score": 0.0029196125457147263, "phrase": "ldap"}, {"score": 0.002875239743145093, "phrase": "nws"}, {"score": 0.0027459678326877744, "phrase": "contract_approach"}, {"score": 0.002718045523483502, "phrase": "software_artifacts"}, {"score": 0.002556359086441866, "phrase": "architecture_and_integration_issues"}, {"score": 0.002261204313587616, "phrase": "diverse_aspects"}, {"score": 0.0021817065300196634, "phrase": "dynamic_reconfiguration"}, {"score": 0.0021049977753042253, "phrase": "john_wiley"}], "paper_keywords": ["computing grid", " non-functional requirements", " contracts", " middleware", " dynamic configuration"], "paper_abstract": "Resource management is an important aspect to consider regarding applications that might have different non-functional or operational requirements, when running in distributed and heterogeneous environments. In this context, it is necessary to provide the means to specify the required resource constraints and an infrastructure that can adapt the applications in light of the changes in resource availability. We adopted a contract-based approach to describe and maintain parallel applications that have non-functional requirements in a Computing Grid context, called ZeliGrid. To form the supporting infrastructure we have designed a software architecture that integrates some of the Globus services, the LDAP and the NWS monitoring services. Some modules that map the contract approach into software artifacts were also integrated to this architecture. This paper addresses the architecture and integration issues of our approach, as well as how we put the pieces together highlighting deployment and implementation details, which have to consider diverse aspects such as monitoring, security and dynamic reconfiguration. Copyright (C) 2010 John Wiley & Sons, Ltd.", "paper_title": "An integration experience of a software architecture and a monitoring infrastructure to deploy applications with non-functional requirements in computing grids", "paper_id": "WOS:000285847800006"}