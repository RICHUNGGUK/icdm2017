{"auto_keywords": [{"score": 0.03242337295183601, "phrase": "ga_core"}, {"score": 0.00481495049065317, "phrase": "general-purpose_genetic_algorithm_engine"}, {"score": 0.004728874038094706, "phrase": "genetic_algorithms"}, {"score": 0.004544859094594241, "phrase": "optimization_engines"}, {"score": 0.004512175937946914, "phrase": "real-time_applications"}, {"score": 0.004383766516923386, "phrase": "earlier_hardware_implementations"}, {"score": 0.004336556638639097, "phrase": "major_drawbacks"}, {"score": 0.004258995791471342, "phrase": "ga_parameter_programmability"}, {"score": 0.004228359613476549, "phrase": "rigid_predefined_system_architecture"}, {"score": 0.004122850924351265, "phrase": "multiple_fitness_functions"}, {"score": 0.003948043391567917, "phrase": "ip_core"}, {"score": 0.003891430578662587, "phrase": "general-purpose_ga_engine"}, {"score": 0.003766991006640731, "phrase": "proposed_ga_ip_core"}, {"score": 0.0036597104126905437, "phrase": "population_size"}, {"score": 0.0035171528695692213, "phrase": "random_number_generator_seed"}, {"score": 0.0034666972896389777, "phrase": "fitness_function"}, {"score": 0.00333163309034114, "phrase": "xilinx_virtex_ii_pro_field_programmable_gate_arrays_device"}, {"score": 0.0031672925196105663, "phrase": "ga_memory"}, {"score": 0.0031218401638802053, "phrase": "clock_speed"}, {"score": 0.003000171314687074, "phrase": "search_engine"}, {"score": 0.0029785631356166594, "phrase": "real-time_adaptive_healing"}, {"score": 0.002852134080296829, "phrase": "appropriate_application-specific_fitness_evaluation_module"}, {"score": 0.002801047964786189, "phrase": "required_storage_memory"}, {"score": 0.002721201438773336, "phrase": "desired_ga_parameters"}, {"score": 0.0026151058979100596, "phrase": "gate-level_netlist"}, {"score": 0.002522240133079871, "phrase": "user's_system"}, {"score": 0.0024326641072463157, "phrase": "standard_optimization_test_functions"}, {"score": 0.0023977287074829798, "phrase": "hardware_experiments"}, {"score": 0.0023718560142554634, "phrase": "proposed_core"}, {"score": 0.002337791830793841, "phrase": "globally_optimum_solution"}, {"score": 0.002222365485177405, "phrase": "globally_optimal_solution"}, {"score": 0.002198380879018061, "phrase": "experimental_test_setup"}, {"score": 0.0021049977753042253, "phrase": "analogous_software_implementation"}], "paper_keywords": ["Evolvable hardware", " field programmable gate arrays", " genetic algorithm", " IP core"], "paper_abstract": "Hardware implementation of genetic algorithms (GAs) is gaining importance because of their proven effectiveness as optimization engines for real-time applications (e.g., evolvable hardware). Earlier hardware implementations suffer from major drawbacks such as absence of GA parameter programmability, rigid predefined system architecture, and lack of support for multiple fitness functions. In this paper, we report the design of an IP core that implements a general-purpose GA engine that addresses these problems. Specifically, the proposed GA IP core can be customized in terms of the population size, number of generations, crossover and mutation rates, random number generator seed, and the fitness function. It has been successfully synthesized and verified on a Xilinx Virtex II Pro Field programmable gate arrays device (xc2vp30-7ff896) with only 13% logic slice utilization, 1% block memory utilization for GA memory, and a clock speed of 50MHz. The GA core has been used as a search engine for real-time adaptive healing but can be tailored to any given application by interfacing with the appropriate application-specific fitness evaluation module as well as the required storage memory and by programming the values of the desired GA parameters. The core is soft in nature i.e., a gate-level netlist is provided which can be readily integrated with the user's system. The performance of the GA core was tested using standard optimization test functions. In the hardware experiments, the proposed core either found the globally optimum solution or found a solution that was within 3.7% of the value of the globally optimal solution. The experimental test setup including the GA core achieved a speedup of around 5.16x over an analogous software implementation.", "paper_title": "Customizable FPGA IP Core Implementation of a General-Purpose Genetic Algorithm Engine", "paper_id": "WOS:000274148700007"}