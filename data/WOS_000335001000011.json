{"auto_keywords": [{"score": 0.04954397446159371, "phrase": "positive_selection"}, {"score": 0.028003253442046332, "phrase": "fastcodeml"}, {"score": 0.00481495049065317, "phrase": "fast_detection"}, {"score": 0.004707913053935566, "phrase": "phylogenetic_trees"}, {"score": 0.004327196832280818, "phrase": "genome_evolution"}, {"score": 0.00413684709497912, "phrase": "high_computational_cost"}, {"score": 0.004090577229368418, "phrase": "existing_implementations"}, {"score": 0.003932654396285872, "phrase": "computational_optimizations"}, {"score": 0.003823584649521733, "phrase": "likelihood_function"}, {"score": 0.00378080526397273, "phrase": "large-scale_phylogenetic_problems"}, {"score": 0.0036347979916389467, "phrase": "branch-site_model"}, {"score": 0.00345530020388352, "phrase": "novel_optimization_techniques"}, {"score": 0.003303177222901723, "phrase": "paml_package"}, {"score": 0.002984867789900281, "phrase": "large_numbers"}, {"score": 0.0028214413724451442, "phrase": "substantially_larger_datasets"}, {"score": 0.0027123819773059127, "phrase": "different_platforms"}, {"score": 0.00266693888510356, "phrase": "average_sequential_speedups"}, {"score": 0.0024097920845706795, "phrase": "codeml"}, {"score": 0.0023694065215394593, "phrase": "single_node"}, {"score": 0.0022020622730208514, "phrase": "average_speedups"}, {"score": 0.0021651504858015364, "phrase": "distributed_fastcodeml"}, {"score": 0.0021049977753042253, "phrase": "eight_nodes"}], "paper_keywords": [""], "paper_abstract": "Motivation: The detection of positive selection is widely used to study gene and genome evolution, but its application remains limited by the high computational cost of existing implementations. We present a series of computational optimizations for more efficient estimation of the likelihood function on large-scale phylogenetic problems. We illustrate our approach using the branch-site model of codon evolution. Results: We introduce novel optimization techniques that substantially outperform both CodeML from the PAML package and our previously optimized sequential version SlimCodeML. These techniques can also be applied to other likelihood-based phylogeny software. Our implementation scales well for large numbers of codons and/or species. It can therefore analyse substantially larger datasets than CodeML. We evaluated FastCodeML on different platforms and measured average sequential speedups of FastCodeML (single-threaded) versus CodeML of up to 5.8, average speedups of FastCodeML (multithreaded) versus CodeML on a single node (shared memory) of up to 36.9 for 12 CPU cores, and average speedups of the distributed FastCodeML versus CodeML of up to 170.9 on eight nodes (96 CPU cores in total).", "paper_title": "Optimization strategies for fast detection of positive selection on phylogenetic trees", "paper_id": "WOS:000335001000011"}