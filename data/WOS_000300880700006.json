{"auto_keywords": [{"score": 0.043726272486193665, "phrase": "composite_service"}, {"score": 0.006805886987341225, "phrase": "recursive_structure"}, {"score": 0.006304158178255729, "phrase": "security_policy"}, {"score": 0.005669589646891521, "phrase": "external_services"}, {"score": 0.00481495049065317, "phrase": "security_policy_composition_for_composite_web_services"}, {"score": 0.004620093797504386, "phrase": "service-oriented_architecture"}, {"score": 0.0036697319652557363, "phrase": "soa_application"}, {"score": 0.0036052633308076933, "phrase": "important_nonfunctional_requirement"}, {"score": 0.0030554300179552415, "phrase": "composite_process"}, {"score": 0.002914288956035066, "phrase": "security_policy_composition_mechanism"}, {"score": 0.002846175473457555, "phrase": "existing_policies"}, {"score": 0.0026986685585382347, "phrase": "process-independent_policy_composition_rules"}, {"score": 0.002426137929553724, "phrase": "policy_composition"}, {"score": 0.0021049977753042253, "phrase": "developer's_workload"}], "paper_keywords": ["Composite web services", " quality of service"], "paper_abstract": "An application based on the Service-Oriented Architecture (SOA) consists of an assembly of services, which is referred to as a composite service. A composite service can be implemented from other composite services, and hence, the application could have a recursive structure. Securing an SOA application is an important nonfunctional requirement. However, specifying a security policy for a composite service is not easy because the policy should be consistent with the policies of the external services invoked in the composite process. Therefore, this paper proposes a security policy composition mechanism that uses the existing policies of the external services. Our contribution is defining the process-independent policy composition rules and providing a method for semiautomatically creating a security policy of the composite service. Our method supports two approaches of policy composition: top-down and bottom-up. Our study makes it possible to verify the consistency of the policies without increasing a developer's workload, even if the composite service has a recursive structure.", "paper_title": "Security Policy Composition for Composite Web Services", "paper_id": "WOS:000300880700006"}