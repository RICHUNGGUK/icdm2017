{"auto_keywords": [{"score": 0.027329475661881184, "phrase": "huffman"}, {"score": 0.00481495049065317, "phrase": "value-aware_cache"}, {"score": 0.004626255242038005, "phrase": "poor_utilization"}, {"score": 0.004565007074039171, "phrase": "on-chip_cache_memory_resources"}, {"score": 0.004270665568018583, "phrase": "cache_resources"}, {"score": 0.004048860957751714, "phrase": "value_replication"}, {"score": 0.003813017794036879, "phrase": "value-aware_caches"}, {"score": 0.003687960013746783, "phrase": "sixteen_times_smaller_value-aware_cache"}, {"score": 0.0034730657554172405, "phrase": "conventional_cache"}, {"score": 0.0032706520949775065, "phrase": "value-aware_cache_design"}, {"score": 0.0032272929113113203, "phrase": "huffman-based_compression"}, {"score": 0.0027865506182608263, "phrase": "coding_tree"}, {"score": 0.0026950674053179404, "phrase": "decompression_latency"}, {"score": 0.0025042115651986332, "phrase": "canonical_codewords"}, {"score": 0.0022806798371116698, "phrase": "cache-block_alignment_restrictions"}, {"score": 0.0021620042653528846, "phrase": "compression_factor"}, {"score": 0.0021049977753042253, "phrase": "practical_designs"}], "paper_keywords": [""], "paper_abstract": "Replication of values causes poor utilization of on-chip cache memory resources. This paper addresses the question: How much cache resources can be theoretically and practically saved if value replication is eliminated? We introduce the concept of value-aware caches and show that a sixteen times smaller value-aware cache can yield the same miss rate as a conventional cache. We then make a case for a value-aware cache design using Huffman-based compression. Since the value set is rather stable across the execution of an application, one can afford to reconstruct the coding tree in software. The decompression latency is kept short by our proposed novel pipelined Huffman decoder that uses canonical codewords. While the (loose) upper-bound compression factor is 5.2X, we show that, by eliminating cache-block alignment restrictions, it is possible to achieve a compression factor of 3.4X for practical designs.", "paper_title": "A Case for a Value-Aware Cache", "paper_id": "WOS:000344987900001"}