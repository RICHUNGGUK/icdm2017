{"auto_keywords": [{"score": 0.048868122179027106, "phrase": "series-parallel_graphs"}, {"score": 0.02960464465828457, "phrase": "tree_structures"}, {"score": 0.00481495049065317, "phrase": "critical_node_problems"}, {"score": 0.0044873778175404475, "phrase": "critical_node_problem"}, {"score": 0.004430248457624686, "phrase": "specially_structured_graphs"}, {"score": 0.003798654583736764, "phrase": "network_interdiction"}, {"score": 0.003750260412839128, "phrase": "graph_theory_research"}, {"score": 0.0033200826267264383, "phrase": "maximal_connected_components"}, {"score": 0.003113804826864362, "phrase": "largest_component_size"}, {"score": 0.002901627749562029, "phrase": "optimal_polynomial-time_dynamic_programming_algorithms"}, {"score": 0.0026523079380037706, "phrase": "graph-connectivity_metric"}, {"score": 0.0025195550121331367, "phrase": "node_deletion_costs"}, {"score": 0.0024874156497091994, "phrase": "node_weights"}, {"score": 0.002244596395352896, "phrase": "computational_efficacy"}, {"score": 0.0021876814398268775, "phrase": "randomly_generated_graph_instances"}, {"score": 0.0021049977753042253, "phrase": "wiley_periodicals"}], "paper_keywords": ["critical node problem", " tree", " series-parallel graph", " dynamic programming", " polynomial-time algorithm"], "paper_abstract": "We examine variants of the critical node problem on specially structured graphs, which aim to identify a subset of nodes whose removal will maximally disconnect the graph. These problems lie at the intersection of network interdiction and graph theory research and are relevant to several practical optimization problems. The two different connectivity metrics that we consider regard the number of maximal connected components (which we attempt to maximize) and the largest component size (which we attempt to minimize). We develop optimal polynomial-time dynamic programming algorithms for solving these problems on tree structures and on series-parallel graphs, corresponding to each graph-connectivity metric. We also extend our discussion by considering node deletion costs, node weights, and solving the problems on generalizations of tree structures. Finally, we demonstrate the computational efficacy of our approach on randomly generated graph instances. (c) 2011 Wiley Periodicals, Inc. NETWORKS, 2012", "paper_title": "Polynomial-time algorithms for solving a class of critical node problems on trees and series-parallel graphs", "paper_id": "WOS:000307010100004"}