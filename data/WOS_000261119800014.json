{"auto_keywords": [{"score": 0.0500785296201053, "phrase": "active_mechanisms"}, {"score": 0.04953289560992989, "phrase": "relational_databases"}, {"score": 0.048193365666829385, "phrase": "integrity_constraints"}, {"score": 0.0047057084749407485, "phrase": "model-driven_architecture"}, {"score": 0.0045726187330434025, "phrase": "active_rules"}, {"score": 0.004443276312972159, "phrase": "database_consistency"}, {"score": 0.00436742595270452, "phrase": "serious_and_complex_problem"}, {"score": 0.0042928648367867835, "phrase": "real_time_behaviour"}, {"score": 0.0038936755823756226, "phrase": "complete_approach"}, {"score": 0.003572281753612765, "phrase": "ocl."}, {"score": 0.0033922781038328844, "phrase": "mda_approach"}, {"score": 0.003277327351139926, "phrase": "specified_ocl_clauses"}, {"score": 0.003221316290858497, "phrase": "class_diagram"}, {"score": 0.0030239842475439814, "phrase": "target_dbms"}, {"score": 0.002444544487772349, "phrase": "dbms_trigger_verification_model"}, {"score": 0.002268441347979241, "phrase": "trigger_execution"}, {"score": 0.0021049977753042253, "phrase": "rational_rose"}], "paper_keywords": ["Integrity constraints", " Model-Driven Architecture", " CASE tools", " Active database systems", " OCL", " Sequence diagrams"], "paper_abstract": "Transforming integrity constraints into active rules or triggers for verifying database consistency produces a serious and complex problem related to real time behaviour that must be considered for any implementation. Our main contribution to this work is to provide a complete approach for deriving the active mechanisms for Relational Databases from the specification of the integrity constraints by using OCL. This approach is designed in accordance with the MDA approach which consists of transforming the specified OCL clauses into a class diagram into SQL:2003 standard triggers, then transforming the standard triggers into target DBMS triggers. We believe that developing triggers and plugging them into a given model is insufficient because the behaviour of such triggers is invisible to the developers, and therefore not controllable. For this reason, a DBMS trigger verification model is used in our approach, in order to ensure the termination of trigger execution. Our approach is implemented as an add-in too] in Rational Rose called OCL2Trigger. (C) 2008 Elsevier Inc. All rights reserved.", "paper_title": "OCL2Trigger: Deriving active mechanisms for relational databases using Model-Driven Architecture", "paper_id": "WOS:000261119800014"}