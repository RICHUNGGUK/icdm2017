{"auto_keywords": [{"score": 0.04942981937458461, "phrase": "ui"}, {"score": 0.00481495049065317, "phrase": "user_interfaces"}, {"score": 0.004653339900995785, "phrase": "software_applications"}, {"score": 0.004558977045730675, "phrase": "crucial_part"}, {"score": 0.00422899036681456, "phrase": "market_success"}, {"score": 0.004031495920060339, "phrase": "significant_incentive"}, {"score": 0.0038960785110831162, "phrase": "malleable_uis"}, {"score": 0.0035892794633115227, "phrase": "significant_development"}, {"score": 0.003540539868937462, "phrase": "maintenance_efforts"}, {"score": 0.00332924643541238, "phrase": "context_model"}, {"score": 0.0032616462517547477, "phrase": "ability-based_design"}, {"score": 0.003066945490483524, "phrase": "automated_ui_generation"}, {"score": 0.002883833572486452, "phrase": "adaptive_uis"}, {"score": 0.002767856819656175, "phrase": "runtime_combinatoric_optimisation"}, {"score": 0.0026384167183586015, "phrase": "context-sensitive_uis"}, {"score": 0.002300912218086077, "phrase": "data-oriented_applications"}, {"score": 0.002148677187261496, "phrase": "visual_editor"}, {"score": 0.0021049977753042253, "phrase": "manual_ui_design"}], "paper_keywords": ["Human", " computer interaction", " Context-model", " UI generation", " Ability-based design"], "paper_abstract": "User interfaces (UI) of software applications play a crucial part in communication with users. Attractive UIs often lead to market success, and thus there is a significant incentive to provide users with malleable UIs that can adapt as much as possible to their needs. However, such UIs require significant development and maintenance efforts. In this paper, we describe a context model based on ability-based design that is well suited to the purposes of automated UI generation. We then introduce a platform that delivers adaptive UIs across various platforms. We use runtime combinatoric optimisation to support usability and to generate context-sensitive UIs. Since the development and maintenance of such UIs can be complex, our platform integrates a module for code-inspection for data-oriented applications to reduce these efforts. It also utilises a visual editor to simplify manual UI design.", "paper_title": "Context-sensitive, cross-platform user interface generation", "paper_id": "WOS:000337754000011"}