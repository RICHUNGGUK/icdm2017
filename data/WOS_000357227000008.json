{"auto_keywords": [{"score": 0.029805077863500683, "phrase": "steiner-tree_subproblem"}, {"score": 0.02904040738229125, "phrase": "approximation_ratio"}, {"score": 0.00481495049065317, "phrase": "multiple_multicast_trees"}, {"score": 0.004772367030970874, "phrase": "intersession_cooperation"}, {"score": 0.004605748839642513, "phrase": "traditional_massive_content_distribution"}, {"score": 0.004444921827311577, "phrase": "separate_overlay_networks"}, {"score": 0.004232875294230749, "phrase": "insufficient_resources"}, {"score": 0.004139850082354509, "phrase": "excessive_resources"}, {"score": 0.003942299471749811, "phrase": "universal_swarming_approach"}, {"score": 0.0038728151007982378, "phrase": "multiple_sessions"}, {"score": 0.0036390887584943723, "phrase": "optimal_resource_allocation"}, {"score": 0.003527550673371394, "phrase": "session_utilities"}, {"score": 0.003465350958971198, "phrase": "subgradient_algorithm"}, {"score": 0.003389136094439662, "phrase": "optimal_solution"}, {"score": 0.0033442114331500407, "phrase": "time-average_sense"}, {"score": 0.0032561349010603734, "phrase": "np-hard_subproblem"}, {"score": 0.003198705576491802, "phrase": "minimum-cost_steiner_tree"}, {"score": 0.0030595112110658675, "phrase": "column_generation_method"}, {"score": 0.002965684305115369, "phrase": "steiner-tree_computations"}, {"score": 0.0028492532869274743, "phrase": "approximate_solutions"}, {"score": 0.0027010719929751, "phrase": "overall_problem"}, {"score": 0.0024600113832396187, "phrase": "universal_swarming"}, {"score": 0.002405853977978678, "phrase": "resource-poor_sessions"}, {"score": 0.002352886041381761, "phrase": "resource-rich_sessions"}, {"score": 0.002321665383971456, "phrase": "proposed_approach"}, {"score": 0.0022304616068189575, "phrase": "infrastructure-based_content_distribution_networks"}, {"score": 0.0021620042653528846, "phrase": "relatively_stable_network_environment"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Multi-tree multicast", " Optimization", " Tree packing", " Universal swarming", " Column generation", " Subgradient algorithm"], "paper_abstract": "In traditional massive content distribution with multiple sessions, the sessions form separate overlay networks and operate independently, where some sessions may suffer from insufficient resources even though other sessions have excessive resources. To cope with this problem, we consider the universal swarming approach, which allows multiple sessions to cooperate with each other. We formulate the problem of finding the optimal resource allocation to maximize the sum of the session utilities and present a subgradient algorithm which converges to the optimal solution in the time-average sense. The solution involves an NP-hard subproblem of finding a minimum-cost Steiner tree. We cope with this difficulty by using a column generation method, which reduces the number of Steiner-tree computations. Furthermore, we allow the use of approximate solutions to the Steiner-tree subproblem. We show that the approximation ratio to the overall problem turns out to be no less than the reciprocal of the approximation ratio to the Steiner-tree subproblem. Simulation results demonstrate that universal swarming improves the performance of resource-poor sessions with negligible impact to resource-rich sessions. The proposed approach and algorithm are expected to be useful for infrastructure-based content distribution networks with long-lasting sessions and relatively stable network environment. (C) 2015 Elsevier B.V. All rights reserved.", "paper_title": "Content distribution by multiple multicast trees and intersession cooperation: Optimal algorithms and approximations", "paper_id": "WOS:000357227000008"}