{"auto_keywords": [{"score": 0.04891621500316522, "phrase": "embedded_systems"}, {"score": 0.013783430269723115, "phrase": "programming_support"}, {"score": 0.013127632571149224, "phrase": "multicore_systems"}, {"score": 0.011619848158326404, "phrase": "embedded_multicore_systems"}, {"score": 0.007086729356252371, "phrase": "jpeg_program"}, {"score": 0.00481495049065317, "phrase": "support_and_applications_for_embedded"}, {"score": 0.004791330993892003, "phrase": "multicore_dsp_systems"}, {"score": 0.004606479650820579, "phrase": "multicore_era"}, {"score": 0.004154332348800334, "phrase": "embedded_system_constraints"}, {"score": 0.003858697684681798, "phrase": "embedded_programming"}, {"score": 0.003709693561373117, "phrase": "parallel_programming"}, {"score": 0.003428665921276366, "phrase": "tight_resource_budgets"}, {"score": 0.003296212583539166, "phrase": "huge_code_size"}, {"score": 0.0030464123943266673, "phrase": "code_size_requirement"}, {"score": 0.002943147037670826, "phrase": "layered_design"}, {"score": 0.0028857130140890787, "phrase": "code_size"}, {"score": 0.0028715299874549245, "phrase": "aware_library_support"}, {"score": 0.0026538282523433684, "phrase": "embedded_multicore_programming"}, {"score": 0.0025638362414466278, "phrase": "high-level_abstractions"}, {"score": 0.0024525907271610125, "phrase": "low-level_programming_apis"}, {"score": 0.0021049977753042253, "phrase": "dual-dsp_platform"}], "paper_keywords": ["Embedded multicore systems", " C plus plus library", " Programming models", " Parallel design patterns"], "paper_abstract": "In recent years embedded systems have entered the multicore era. As the number of cores keeps growing in embedded systems, it becomes more important to provide programming support which considers embedded system constraints and in the meanwhile helps utilize multicore systems. So far though C still dominates embedded programming, C++ is gaining in importance in parallel programming. It is promising to support C++ for embedded multicore systems. However, embedded systems usually have tight resource budgets, and C++ is commonly considered having huge code size that embedded systems can not afford. Therefore, in this paper we investigate the code size requirement of a C++ library and propose a layered design to provide a code size aware library support. On the other hand, to utilize embedded multicore systems, we employ C++ linguistic features to facilitate embedded multicore programming. With C++, we incorporate high-level abstractions and design patterns into the programming support to enhance low-level programming APIs that can be used to exploit DSPs, SIMD instructions, and DMAs on embedded multicore systems. At last, we evaluate our C++ support with a Blur and a JPEG program. Our result on a dual-DSP platform shows that we can obtain speedups of 3.32 and 3.09 for the Blur and JPEG program, respectively.", "paper_title": "C plus plus Support and Applications for Embedded Multicore DSP Systems", "paper_id": "WOS:000334506000003"}