{"auto_keywords": [{"score": 0.04180776224807123, "phrase": "general_convex_power_functions"}, {"score": 0.01009180393555663, "phrase": "sleep_state"}, {"score": 0.008067795309504043, "phrase": "power_functions"}, {"score": 0.00646518903191658, "phrase": "approximation_factor"}, {"score": 0.00481495049065317, "phrase": "new_algorithms"}, {"score": 0.004681525814235883, "phrase": "energy_conservation_problem"}, {"score": 0.004642220710209137, "phrase": "variable-speed_processor"}, {"score": 0.004513560753685075, "phrase": "high_speeds"}, {"score": 0.004450568197899267, "phrase": "processor_asleep"}, {"score": 0.004230956171850591, "phrase": "classical_deadline-based_scheduling"}, {"score": 0.004102096151528319, "phrase": "release_time"}, {"score": 0.003965975628742746, "phrase": "irani_et_al"}, {"score": 0.0037701851296383405, "phrase": "critical_speed_scrit"}, {"score": 0.003728000957725218, "phrase": "smallest_energy_consumption"}, {"score": 0.0035240305920962766, "phrase": "processor_speed"}, {"score": 0.0035042768631639884, "phrase": "han"}, {"score": 0.003312486229143855, "phrase": "offline_setting"}, {"score": 0.003175556211659149, "phrase": "optimization_problem"}, {"score": 0.0031223774204093713, "phrase": "lower_bounds"}, {"score": 0.002805597755796506, "phrase": "processing_jobs"}, {"score": 0.0027741761880779535, "phrase": "approximation_ratio"}, {"score": 0.0027047548540516113, "phrase": "algorithmic_framework"}, {"score": 0.0026820015810254004, "phrase": "good_approximation_algorithms"}, {"score": 0.0024097920845706795, "phrase": "best_approximation_guarantees"}, {"score": 0.0022270182923887012, "phrase": "tight_upper_and_lower_bounds"}, {"score": 0.0022082749950539495, "phrase": "best_possible_approximation_factor"}, {"score": 0.0021168934012668755, "phrase": "lower_branch"}], "paper_keywords": ["Variable-speed processor", " power-down mechanism", " NP-hard", " approximation algorithm"], "paper_abstract": "We study an energy conservation problem where a variable-speed processor is equipped with a sleep state. Executing jobs at high speeds and then setting the processor asleep is an approach that can lead to further energy savings compared to standard dynamic speed scaling. We consider classical deadline-based scheduling, that is, each job is specified by a release time, a deadline and a processing volume. For general convex power functions, Irani et al. [2007] devised an offline 2-approximation algorithm. Roughly speaking, the algorithm schedules jobs at a critical speed scrit that yields the smallest energy consumption while jobs are processed. For power functions P(s) = s(alpha) + gamma, where s is the processor speed, Han et al. [2010] gave an (alpha(alpha) + 2)-competitive online algorithm. We investigate the offline setting of speed scaling with a sleep state. First, we prove NP-hardness of the optimization problem. Additionally, we develop lower bounds, for general convex power functions: No algorithm that constructs s(crit)-schedules, which execute jobs at speeds of at least s(crit), can achieve an approximation factor smaller than 2. Furthermore, no algorithm that minimizes the energy expended for processing jobs can attain an approximation ratio smaller than 2. We then present an algorithmic framework for designing good approximation algorithms. For general convex power functions, we derive an approximation factor of 4/3. For power functions P(s) = beta s(alpha) + gamma, we obtain an approximation of 137/117 < 1.171. We finally show that our framework yields the best approximation guarantees for the class of scrit-schedules. For general convex power functions, we give another 2-approximation algorithm. For functions P(s) = beta s(alpha) + gamma, we present tight upper and lower bounds on the best possible approximation factor. The ratio is exactly eW(-1)(-e(-1-1/e))/(eW(-1)(-e(-1-1/e))+ 1) < 1.211, where W-1 is the lower branch of the Lambert W function.", "paper_title": "Race to Idle: New Algorithms for Speed Scaling with a Sleep State", "paper_id": "WOS:000334574200005"}