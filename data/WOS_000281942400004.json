{"auto_keywords": [{"score": 0.049273293170208544, "phrase": "single_machine"}, {"score": 0.00481495049065317, "phrase": "simple_linear_deterioration"}, {"score": 0.004448169552315403, "phrase": "n_deteriorating_jobs"}, {"score": 0.004398094237005956, "phrase": "release_dates"}, {"score": 0.004251210982670317, "phrase": "processing_time"}, {"score": 0.0039050245929822354, "phrase": "precedence_relations"}, {"score": 0.003648411055689428, "phrase": "classical_time-dependent_scheduling_problems"}, {"score": 0.0032946562900625187, "phrase": "job's_deteriorating_rate"}, {"score": 0.0031308163228919773, "phrase": "continuously_processed_part"}, {"score": 0.002975099633631871, "phrase": "independent_job"}, {"score": 0.0029249294679606656, "phrase": "specified_deteriorating_rate"}, {"score": 0.002795228413298423, "phrase": "common_regular_scheduling_performance_measures"}, {"score": 0.0026411384812121503, "phrase": "regular_symmetric_functions"}, {"score": 0.0024120247307686084, "phrase": "maximum_job_completion_cost"}, {"score": 0.0023579143175099324, "phrase": "precedence_constraints"}, {"score": 0.002253299769886694, "phrase": "total_weighted_completion_time"}], "paper_keywords": ["Scheduling", " Linear deterioration", " Preemption", " Release dates", " Regular function"], "paper_abstract": "In this paper we study the problem of scheduling n deteriorating jobs with release dates on a single machine. The processing time of a job is assumed to be the product of its deteriorating rate and its starting time. Precedence relations may be imposed on the set of jobs. Unlike the classical time-dependent scheduling problems, we assume that the execution of a job can be preempted in the sense that the job's deteriorating rate is reduced when it is preempted and each continuously processed part of a job can be regarded as an independent job with a specified deteriorating rate. The objective is to minimize some common regular scheduling performance measures. We first show that minimizing a class of regular symmetric functions is polynomially solvable. Then we construct an O(n(2)) algorithm for minimizing the maximum job completion cost with or without precedence constraints. Finally we show that minimizing the total weighted completion time is NP-hard even if there are only two distinct release dates. (C) 2010 Elsevier B.V. All rights reserved.", "paper_title": "Preemptive scheduling with simple linear deterioration on a single machine", "paper_id": "WOS:000281942400004"}