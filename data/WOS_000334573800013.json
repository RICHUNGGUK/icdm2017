{"auto_keywords": [{"score": 0.02942033368394877, "phrase": "pattern_entries"}, {"score": 0.00481495049065317, "phrase": "access_schemes"}, {"score": 0.0047273577269638725, "phrase": "memory_management"}, {"score": 0.004234129588974058, "phrase": "concurrently_alive_elements"}, {"score": 0.004119049028319832, "phrase": "solution_quality"}, {"score": 0.003689053436223376, "phrase": "sub-optimal_representation"}, {"score": 0.0034911335714333507, "phrase": "non-scalable_representation"}, {"score": 0.0033961782274326948, "phrase": "exploration_time"}, {"score": 0.0030135741897058844, "phrase": "regular_and_irregular_accesses"}, {"score": 0.00257735013358606, "phrase": "memory_accesses"}, {"score": 0.0025071862539276283, "phrase": "pattern_operations"}, {"score": 0.00226583335721762, "phrase": "final_sequence"}, {"score": 0.0021441057555396013, "phrase": "global_access_scheme"}, {"score": 0.0021049977753042253, "phrase": "unnecessary_overestimation"}], "paper_keywords": ["Design", " Storage size", " near-optimality", " scalability", " iteration space", " memory management", " memory optimization", " resources"], "paper_abstract": "Memory management searches for the resources required to store the concurrently alive elements. The solution quality is affected by the representation of the element accesses: a sub-optimal representation leads to overestimation and a non-scalable representation increases the exploration time. We propose a methodology to near-optimal and scalable represent regular and irregular accesses. The representation consists of a set of pattern entries to compactly describe the behavior of the memory accesses and of pattern operations to consistently combine the pattern entries. The result is a final sequence of pattern entries which represents the global access scheme without unnecessary overestimation.", "paper_title": "A Scalable and Near-Optimal Representation of Access Schemes for Memory Management", "paper_id": "WOS:000334573800013"}