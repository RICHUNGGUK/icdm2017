{"auto_keywords": [{"score": 0.03017859694394308, "phrase": "d._zagorodnov"}, {"score": 0.029949151172686043, "phrase": "f._berman"}, {"score": 0.029159331290245817, "phrase": "grid_environments"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_master-slave_platforms"}, {"score": 0.004648222388468414, "phrase": "large_collection"}, {"score": 0.004611959213131437, "phrase": "independent_tasks"}, {"score": 0.004575977644865379, "phrase": "heterogeneous_clusters"}, {"score": 0.004331811712726697, "phrase": "master_processor"}, {"score": 0.0034375594065869032, "phrase": "total_execution_time"}, {"score": 0.003279559293934528, "phrase": "theoretical_side"}, {"score": 0.003228517923065361, "phrase": "complexity_results"}, {"score": 0.003092200512475624, "phrase": "practical_side"}, {"score": 0.002915514089373717, "phrase": "best_heuristics"}, {"score": 0.0028701222153940283, "phrase": "a._legrand"}, {"score": 0.0028036013437790783, "phrase": "heuristics"}, {"score": 0.0027705505273051007, "phrase": "parameter_sweep_applications"}, {"score": 0.0027060907634889734, "phrase": "ninth_heterogeneous_computing_workshop"}, {"score": 0.00268493828558848, "phrase": "ieee_computer_society_press"}, {"score": 0.0026639507068734907, "phrase": "silver_spring"}, {"score": 0.002541417196444962, "phrase": "h._casanova"}, {"score": 0.0025215486544004134, "phrase": "a._lcgrand"}, {"score": 0.002424506147893058, "phrase": "scheduling_heuristics"}, {"score": 0.0022858927363300697, "phrase": "lip"}, {"score": 0.0022680085357731196, "phrase": "ens_lyon"}, {"score": 0.0022504555714359478, "phrase": "france"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["scheduling", " heterogeneous clusters", " independent tasks", " file-sharing", " heuristics"], "paper_abstract": "This paper is devoted to scheduling a large collection of independent tasks onto heterogeneous clusters. The tasks depend upon (input) files which initially reside on a master processor. A given file may well be shared by several tasks. The role of the master is to distribute the files to the processors, so that they can execute the tasks. The objective for the master is to select which file to send to which slave, and in which order, so as to minimize the total execution time. The contribution of this paper is twofold. On the theoretical side, we establish complexity results that assess the difficulty of the problem. On the practical side, we design several new heuristics, which are shown to perform as efficiently as the best heuristics in [H. Casanova, A. Legrand, D. Zagorodnov, F. Berman, Heuristics for scheduling parameter sweep applications in Grid environments, in: Ninth Heterogeneous Computing Workshop, IEEE Computer Society Press, Silver Spring, MD, 2000, pp. 349-363; H. Casanova, A. Lcgrand, D. Zagorodnov, F. Berman, Using simulation to evaluate scheduling heuristics for a class of applications in Grid environments, Research Report RR-1999-46, LIP, ENS Lyon, France, 1999] although their cost is an order of magnitude lower. (c) 2005 Elsevier B.V. All rights reserved.", "paper_title": "Scheduling tasks sharing files on heterogeneous master-slave platforms", "paper_id": "WOS:000235261700003"}