{"auto_keywords": [{"score": 0.049404922364310655, "phrase": "hyper-threading_technology"}, {"score": 0.026455836128515847, "phrase": "functional_decomposition"}, {"score": 0.004517210371632577, "phrase": "excellent_compression_rates"}, {"score": 0.004375286710337962, "phrase": "higher_execution_time"}, {"score": 0.004207840198934805, "phrase": "execution_time"}, {"score": 0.004003925104720979, "phrase": "hyper-threading_processor"}, {"score": 0.0036639675955591065, "phrase": "multiple_functional_units"}, {"score": 0.0036251554804124066, "phrase": "single_cycle"}, {"score": 0.003258871417680268, "phrase": "first_approach"}, {"score": 0.003212906206685004, "phrase": "data_division"}, {"score": 0.0030679359570782595, "phrase": "independent_part"}, {"score": 0.002992595374066178, "phrase": "second_approach"}, {"score": 0.0029190995437264377, "phrase": "different_tasks"}, {"score": 0.0027972697690729453, "phrase": "latter_approach"}, {"score": 0.002333586381274878, "phrase": "best_method"}, {"score": 0.0023170584656198485, "phrase": "pthreads"}, {"score": 0.002220296517089146, "phrase": "execution_speed"}, {"score": 0.0021503823972534096, "phrase": "resulting_code"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["3D wavelet transform", " hyper-threading", " Pthreads", " OpenMP"], "paper_abstract": "Video medical compression algorithms based on the 3D wavelet transform obtain both excellent compression rates and very good quality, at the expense of a higher execution time. The goal of this work is to improve the execution time of our 3D Wavelet Transform Encoder. We examine and exploit the characteristics and advantages of a hyper-threading processor. The Intel Hyper-threading Technology (HT) is a technique based on simultaneous multi-threading (SMT), which allows several independent threads to issue instructions to multiple functional units in a single cycle. In particular, we present two approaches: data-domain and functional, which differ in the way that the decomposition of the application is performed. The first approach is based on data division, where the same task is performed simultaneously by each thread on an independent part of the data. In the second approach, the processing is divided in different tasks that are executed concurrently on the same data set. Based on the latter approach, we present three proposals that differ in the way that the tasks of the application are divided between the threads. Results show speedups of up to 7% and 34% by the data-domain and functional decomposition, respectively, over a version executed without hyper-threading technology. Finally, we design several implementations of the best method with Pthreads and OpenMP using functional decomposition. We compare them in terms of execution speed, ease of implementation and maintainability of the resulting code. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "An efficient implementation of a 3D wavelet transform based encoder on hyper-threading technology", "paper_id": "WOS:000245630900005"}