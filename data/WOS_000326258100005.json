{"auto_keywords": [{"score": 0.04224999507912634, "phrase": "bpel_programs"}, {"score": 0.006549194392091298, "phrase": "experiment_results"}, {"score": 0.004814952397682485, "phrase": "bpel"}, {"score": 0.004631099806015235, "phrase": "business_process_execution_language"}, {"score": 0.0045124316982387315, "phrase": "widely_recognized_executable_service_composition_language"}, {"score": 0.004377806391261418, "phrase": "typical_programming_languages"}, {"score": 0.004174287115855492, "phrase": "program_scale"}, {"score": 0.003980191398041843, "phrase": "open_and_challenging_problem"}, {"score": 0.003795086335272422, "phrase": "fault_localization_framework"}, {"score": 0.003665874747419775, "phrase": "bpel_program_characteristics"}, {"score": 0.003510507340837656, "phrase": "interaction_faults"}, {"score": 0.003405671497507337, "phrase": "bpel_fault_localization_problem"}, {"score": 0.003361702510958392, "phrase": "popular_fault_localization_problem_settings"}, {"score": 0.0033039560332995136, "phrase": "bpel-specific_fault_localization_techniques"}, {"score": 0.0032471982781283374, "phrase": "existing_fault_localization_formulas"}, {"score": 0.0030428787018636147, "phrase": "proposed_fault_localization_framework"}, {"score": 0.0028513785049061767, "phrase": "fewest_code"}, {"score": 0.002754208576828914, "phrase": "fault-relevant_basic_block"}, {"score": 0.0027068691342344545, "phrase": "highest_suspiciousness_score"}, {"score": 0.0025474814283429213, "phrase": "proposed_fault_localization_guidelines"}, {"score": 0.0023460397258997525, "phrase": "proposed_framework"}, {"score": 0.0022957232752482196, "phrase": "effective_fault_localization_techniques"}, {"score": 0.002207851585508636, "phrase": "existing_fault_localization_techniques"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Service compositions", " BPEL", " Fault localization", " Fault localization guidelines", " Integration and interaction faults"], "paper_abstract": "Context: Business Process Execution Language (BPEL) is a widely recognized executable service composition language, which is significantly different from typical programming languages in both syntax and semantics, and especially shorter in program scale. How to effectively locate faults in BPEL programs is an open and challenging problem. Objective: In this paper, we propose a fault localization framework for BPEL programs. Method: Based on BPEL program characteristics, we propose two fault localization guidelines to locate the integration and interaction faults in BPEL programs. Our framework formulates the BPEL fault localization problem using the popular fault localization problem settings, and synthesizes BPEL-specific fault localization techniques by reuse of existing fault localization formulas. We use two realistic BPEL programs and three existing fault localization formulas to evaluate the feasibility and effectiveness of the proposed fault localization framework and guidelines. Result: Experiment results show that faults can be located with the fewest code examining efforts. That is, the fault-relevant basic block is assigned the highest suspiciousness score by our fault localization method. The experiment results also show that with the use of the proposed fault localization guidelines, the code examining efforts to locate faults are extraordinarily reduced. Conclusion: We conclude that the proposed framework is feasible in synthesizing effective fault localization techniques, and our fault localization guidelines are very effective to enhance existing fault localization techniques in locating faults in BPEL programs. (C) 2013 Elsevier B.V. All rights reserved.", "paper_title": "BPELDebugger: An effective BPEL-specific fault localization framework", "paper_id": "WOS:000326258100005"}