{"auto_keywords": [{"score": 0.04463962326997897, "phrase": "ben-or's_algorithm"}, {"score": 0.010612387000973441, "phrase": "ben-or's_randomized_consensus_algorithm"}, {"score": 0.006769552331215484, "phrase": "process_states"}, {"score": 0.004745362527093198, "phrase": "ground-breaking_paper"}, {"score": 0.004654779963297256, "phrase": "global_coin"}, {"score": 0.004642855046148669, "phrase": "ben-or"}, {"score": 0.004592427776766215, "phrase": "first_randomized_algorithm"}, {"score": 0.004493207015584002, "phrase": "asynchronous_message-passing_system"}, {"score": 0.004208169035079665, "phrase": "simplest_and_most_elegant_one"}, {"score": 0.004042919099733537, "phrase": "distributed_computing_courses"}, {"score": 0.0037725685596495355, "phrase": "surprisingly_a_proof"}, {"score": 0.003624361893008392, "phrase": "previously_published_proofs"}, {"score": 0.0035849585026689573, "phrase": "simplifying_assumptions"}, {"score": 0.0033942533792009687, "phrase": "total_number"}, {"score": 0.0033461629364592506, "phrase": "f"}, {"score": 0.003320833167729157, "phrase": "maximum_number"}, {"score": 0.002901791790730922, "phrase": "correctness_proof"}, {"score": 0.002678078466226442, "phrase": "message_contents"}, {"score": 0.0026296828616623994, "phrase": "process_steps"}, {"score": 0.0026105697442146357, "phrase": "message_receipts"}, {"score": 0.002489667521500195, "phrase": "first_full_proof"}, {"score": 0.0024625698287060586, "phrase": "classical_algorithm"}, {"score": 0.0024092539025697014, "phrase": "counterintuitive_problem"}, {"score": 0.002339953069296797, "phrase": "well-known_abstraction"}, {"score": 0.002314481096847367, "phrase": "\"global_coin"}, {"score": 0.002256117165288155, "phrase": "randomized_consensus_algorithms"}, {"score": 0.0021515951441422082, "phrase": "common_belief"}], "paper_keywords": [""], "paper_abstract": "In a ground-breaking paper that appeared in 1983, Ben-Or presented the first randomized algorithm to solve consensus in an asynchronous message-passing system where processes can fail by crashing. Although more efficient randomized algorithms were subsequently proposed, Ben-Or's algorithm is still the simplest and most elegant one. For this reason, it is often taught in distributed computing courses and it appears in several textbooks. Even though Ben-Or's algorithm is widely known and it is very simple, surprisingly a proof of correctness of the algorithm has not yet appeared: previously published proofs make some simplifying assumptions-specifically, they either assume that f < n/3 (n is the total number of processes and f is maximum number of processes that may crash) or that the adversary is weak, that is, it cannot see the process states or the content of the messages. In this paper, we present a correctness proof for Ben-Or's randomized consensus algorithm for the case that f < n/2 process crashes and the adversary is strong (i.e., it can see the process states and message contents, and schedule the process steps and message receipts accordingly). To the best of our knowledge, this is the first full proof of this classical algorithm. We also demonstrate a counterintuitive problem that may occur if one uses the well-known abstraction of a \"global coin\" to modularize and speed up randomized consensus algorithms, such as Ben-Or's algorithm. Specifically, we show that contrary to common belief, the use of a global coin can sometimes be deleterious rather than beneficial: instead of speeding up Ben-Or's algorithm, the use of a global coin in this algorithm may actually prevent termination.", "paper_title": "The correctness proof of Ben-Or's randomized consensus algorithm", "paper_id": "WOS:000309212600003"}