{"auto_keywords": [{"score": 0.04770857791391952, "phrase": "non-availability_intervals"}, {"score": 0.015719716506582538, "phrase": "weighted_number"}, {"score": 0.01549596023769637, "phrase": "early_jobs"}, {"score": 0.015166191664483, "phrase": "single_machine"}, {"score": 0.009639873693412924, "phrase": "due_dates"}, {"score": 0.004016782710006123, "phrase": "non-availability_constraints"}, {"score": 0.00376293585033711, "phrase": "non-resumable_cases"}, {"score": 0.0036026484429137998, "phrase": "resumable_version"}, {"score": 0.0034491650585057754, "phrase": "fully_polynomial_time_approximation_scheme"}, {"score": 0.003399483198554165, "phrase": "fptas"}, {"score": 0.002855934865505357, "phrase": "non-resumable_version"}, {"score": 0.002263639474937039, "phrase": "polynomial_time_approximation_scheme"}, {"score": 0.0021670777282518424, "phrase": "constant_number"}, {"score": 0.0021049977753042253, "phrase": "arbitrary_due_dates"}], "paper_keywords": ["Scheduling", " Non-availability intervals", " Late jobs", " Approximation algorithms"], "paper_abstract": "In this paper we consider the maximization of the weighted number of early jobs on a single machine with non-availability constraints. We deal with the resumable and the non-resumable cases. We show that the resumable version of this problem has a fully polynomial time approximation scheme (FPTAS) even if the number of the non-availability intervals is variable and a subset of jobs has deadlines instead of due dates. For the non-resumable version we remark that the problem cannot admit an FPTAS even if all due dates are equal and only one non-availability interval occurs. Nevertheless, we show in this case that it admits a polynomial time approximation scheme (PTAS) for a constant number of non-availability intervals and arbitrary due dates.", "paper_title": "Approximation algorithms for maximizing the weighted number of early jobs on a single machine with non-availability intervals", "paper_id": "WOS:000360388300001"}