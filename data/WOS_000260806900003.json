{"auto_keywords": [{"score": 0.039668861806856366, "phrase": "csp"}, {"score": 0.032815489874961086, "phrase": "constraint_acquisition_problems"}, {"score": 0.00481495049065317, "phrase": "unifying_framework"}, {"score": 0.004777392826700429, "phrase": "generalized_constraint"}, {"score": 0.004703149944841539, "phrase": "practical_problem"}, {"score": 0.00459393336391459, "phrase": "constraint_satisfaction_problem"}, {"score": 0.0035332058983966424, "phrase": "active_role"}, {"score": 0.0032158817866929563, "phrase": "constraint_acquisition"}, {"score": 0.0030800962618484844, "phrase": "different_types"}, {"score": 0.003056029284235528, "phrase": "optimization_problems"}, {"score": 0.0027597018725736165, "phrase": "learning_objective"}, {"score": 0.002727409429089543, "phrase": "generic_framework"}, {"score": 0.0026639507068734907, "phrase": "specific_formulations"}, {"score": 0.002541417196444962, "phrase": "recent_techniques"}, {"score": 0.002511672561475743, "phrase": "classical_constraints"}, {"score": 0.002331189621118592, "phrase": "classical_csps"}, {"score": 0.0023038997972591193, "phrase": "minimum_number"}, {"score": 0.002285883886723898, "phrase": "violated_examples"}, {"score": 0.0022414566728770767, "phrase": "simple_pseudo-boolean_optimization_problem"}, {"score": 0.0021215910859085146, "phrase": "empirical_results"}, {"score": 0.0021049977753042253, "phrase": "constraint_acquisition_methods"}], "paper_keywords": [""], "paper_abstract": "When a practical problem can be modeled as a constraint satisfaction problem (CSP), which is a set of constraints that need to be satisfied, it can be solved using many constraint programming techniques. In many practical applications, while users can recognize examples of where a CSP should be satisfied or violated, they cannot articulate the specification of the CSP itself. In these situations, it can be helpful if the computer can take an active role in learning the CSP from examples of its solutions and non-solutions. This is called constraint acquisition. This paper introduces a framework for constraint acquisition in which one can uniformly define and formulate constraint acquisition problems of different types as optimization problems. The difference between constraint acquisition problems within the framework is not only in the type of constraints that need to be acquired but also in the learning objective. The generic framework can be instantiated to obtain specific formulations for acquiring classical, fuzzy, weighted or probabilistic constraints. The paper shows as an example how recent techniques for acquiring classical constraints can be directly obtained from the framework. Specifically, the formulation obtained from the framework to acquire classical CSPs with the minimum number of violated examples is equivalent to a simple pseudo-boolean optimization problem, thus being efficiently solvable by using many available optimization tools. The paper also reports empirical results on constraint acquisition methods to show the utility of the framework.", "paper_title": "A UNIFYING FRAMEWORK FOR GENERALIZED CONSTRAINT ACQUISITION", "paper_id": "WOS:000260806900003"}