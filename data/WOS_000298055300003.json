{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "dynamic_search_strategy_selection"}, {"score": 0.00477190623242136, "phrase": "multiplayer_adversarial_search"}, {"score": 0.0046659637258752535, "phrase": "search_tree"}, {"score": 0.0046242451772036145, "phrase": "multiplayer_games"}, {"score": 0.004461051281091779, "phrase": "opponents'_moves"}, {"score": 0.004401342842183475, "phrase": "first_approach"}, {"score": 0.004284302478991387, "phrase": "maxn_algorithm"}, {"score": 0.0040777192615062815, "phrase": "second_approach"}, {"score": 0.0038810583785936505, "phrase": "worst_case"}, {"score": 0.00374399358035391, "phrase": "worst_move"}, {"score": 0.003595552309967789, "phrase": "definite_answer"}, {"score": 0.003099723664407622, "phrase": "game_situation"}, {"score": 0.003058179790439378, "phrase": "mp-mix_algorithm"}, {"score": 0.0030171910207671205, "phrase": "current_situation"}, {"score": 0.00295008998986066, "phrase": "root_player"}, {"score": 0.002897482096228207, "phrase": "maxn_principle"}, {"score": 0.0028586409810976367, "phrase": "paranoid_principle"}, {"score": 0.0028076592725295646, "phrase": "newly_presented_directed_offensive_principle"}, {"score": 0.002708399936381754, "phrase": "extensive_experimental_evaluation"}, {"score": 0.0026009105281485888, "phrase": "quoridor"}, {"score": 0.00249767641333441, "phrase": "opponent_impact"}, {"score": 0.002398529964696261, "phrase": "players'_ability"}, {"score": 0.002292965705677312, "phrase": "relative_performance"}, {"score": 0.002262209824105154, "phrase": "mp-mix_strategy"}, {"score": 0.0021723899772112423, "phrase": "maxn"}], "paper_keywords": ["Artificial intelligence (AI)", " decision trees", " game-tree search", " multiplayer games"], "paper_abstract": "When constructing a search tree for multiplayer games, there are two basic approaches to propagating the opponents' moves. The first approach, which stems from the MaxN algorithm, assumes each opponent will follow his highest valued heuristic move. In the second approach, the paranoid algorithm, the player prepares for the worst case by assuming the opponents will select the worst move with respect to him. There is no definite answer as to which approach is better, and their main shortcoming is that their strategy is fixed. We therefore suggest the MaxN-paranoid mixture (MP-Mix) algorithm: a multiplayer adversarial search that switches search strategies according to the game situation. The MP-mix algorithm examines the current situation and decides whether the root player should follow the MaxN principle, the paranoid principle, or the newly presented directed offensive principle. To evaluate our new algorithm, we performed extensive experimental evaluation on three multiplayer domains: Hearts, Risk, and Quoridor. In addition, we also introduce the opponent impact (OI) measure, which measures the players' ability to impede their opponents' efforts, and show its relation to the relative performance of the MP-mix strategy. The results show that our MP-mix strategy significantly outperforms MaxN and paranoid in various settings in all three games.", "paper_title": "The MP-MIX Algorithm: Dynamic Search Strategy Selection in Multiplayer Adversarial Search", "paper_id": "WOS:000298055300003"}