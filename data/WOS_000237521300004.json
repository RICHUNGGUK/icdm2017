{"auto_keywords": [{"score": 0.048835745230446134, "phrase": "boolean_functions"}, {"score": 0.04505268686899412, "phrase": "complexity_measure"}, {"score": 0.00481495049065317, "phrase": "oppositely_classified_examples"}, {"score": 0.0047395356621991935, "phrase": "generalization_complexity"}, {"score": 0.004426092397211699, "phrase": "recently_proposed_measure"}, {"score": 0.00398370478688858, "phrase": "generalization_ability"}, {"score": 0.0037594599958631404, "phrase": "feed-forward_neural_networks"}, {"score": 0.0031594291695784286, "phrase": "\"average_sensitivity"}, {"score": 0.0025722202862084186, "phrase": "second_term"}, {"score": 0.002266364679369248, "phrase": "boolean_function"}], "paper_keywords": ["average sensitivity", " Boolean functions", " complexity", " generalization", " learning", " randomness", " symmetric functions"], "paper_abstract": "In this paper, we analyze Boolean functions using a recently proposed measure of their complexity. This complexity measure, motivated by the aim of relating the complexity of the functions with the generalization ability that can be obtained when the functions are implemented in feed-forward neural networks, is the sum of a number of components. We concentrate on the case in which we use the first two of these components. The first is related to the \"average sensitivity\" of the function and the second is, in a sense, a measure of the \"randomness\" or lack of structure of the function. In this paper, we investigate the importance of using the second term in the complexity measure, and we consider to what extent these two terms suffice as an indicator of how difficult it is to learn a Boolean function. We also explore the existence of very complex Boolean functions, considering, in particular, the symmetric Boolean functions.", "paper_title": "The influence of oppositely classified examples on the generalization complexity of Boolean functions", "paper_id": "WOS:000237521300004"}