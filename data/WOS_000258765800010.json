{"auto_keywords": [{"score": 0.05007852962010532, "phrase": "module_layout"}, {"score": 0.0413551327245117, "phrase": "available_space"}, {"score": 0.027948039816812847, "phrase": "benchmark_instances"}, {"score": 0.004748371393578422, "phrase": "partially_reconfigurable_device"}, {"score": 0.004704495156558224, "phrase": "modern_generations"}, {"score": 0.00466102244911872, "phrase": "field-programmable_gate_arrays"}, {"score": 0.004532988904965752, "phrase": "partial_reconfiguration"}, {"score": 0.0044495843279816075, "phrase": "online_context"}, {"score": 0.0042085586502296265, "phrase": "fpga"}, {"score": 0.00399881984083004, "phrase": "progressive_fragmentation"}, {"score": 0.0036271080216837286, "phrase": "offline_component"}, {"score": 0.0033828748627992193, "phrase": "reconfigurable_device"}, {"score": 0.0031710290186062547, "phrase": "np"}, {"score": 0.0031113369425402287, "phrase": "e_strong_sense"}, {"score": 0.003068242064611088, "phrase": "previous_algorithmic_results"}, {"score": 0.002956209594959227, "phrase": "graph-theoretic_characterization"}, {"score": 0.0027698788736535865, "phrase": "practical_size"}, {"score": 0.0025592969422491476, "phrase": "simple_strategy"}, {"score": 0.0025121156016001864, "phrase": "online_scenarios"}, {"score": 0.0023103100997344072, "phrase": "analytic_results"}, {"score": 0.0022467292426554338, "phrase": "lif"}, {"score": 0.0022155569675462333, "phrase": "best_offline_solution"}, {"score": 0.0021049977753042253, "phrase": "moderate_size"}], "paper_keywords": ["defragmentation", " exact algorithms", " NP-hard problems", " partial reconfiguration", " reconfigurable computing", " 2-D packing"], "paper_abstract": "Modern generations of field-programmable gate arrays (FPGAs) allow for partial reconfiguration. In an online context, where the sequence of modules to be loaded on the FPGA is unknown beforehand, repeated insertion and deletion of modules leads to progressive fragmentation of the available space, making defragmentation an important issue. We address this problem by proposing an online and an offline component for the defragmentation of the available space. We consider defragmenting the module layout on a reconfigurable device. This corresponds to solving a 2-D strip packing problem. Problems of this type are NP-hard in e strong sense, and previous algorithmic results are rather limited. Based on a graph-theoretic characterization of feasible packings, we develop a method that can solve 2-D defragmentation instances of practical size to optimality. Our approach is validated for a set of benchmark instances. We also discuss a simple strategy for dealing with online scenarios, called \"least-interference fit\" (LIF); we give a number of analytic results that allow a comparison of LIF with the best offline solution, and demonstrate that it works well on benchmark instances of moderate size.", "paper_title": "Offline and online aspects of defragmenting the module layout of a partially reconfigurable device", "paper_id": "WOS:000258765800010"}