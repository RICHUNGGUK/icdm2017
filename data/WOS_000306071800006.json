{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "distributed_system"}, {"score": 0.004522796947899013, "phrase": "storage_capacity"}, {"score": 0.0033482708495261864, "phrase": "preference-based_approach"}, {"score": 0.0030097975788892896, "phrase": "randomized_self-stabilizing_leader_election_algorithm"}, {"score": 0.0027395968397212053, "phrase": "highest_preference"}, {"score": 0.002431797888365548, "phrase": "symmetric_configurations"}, {"score": 0.0022273034991008326, "phrase": "optimal_average_time_complexity"}, {"score": 0.0021049977753042253, "phrase": "average_performance"}], "paper_keywords": ["Leader election", " self-stabilization", " preference-based systems"], "paper_abstract": "The performance of processors in a distributed system can be measured by parameters such as bandwidth, storage capacity, work capability, reliability, power limitations, years of usage, among others. Each process or defines its preference based on these parameters. The preference represents an indicator of the quality of service that a processor can provide. An algorithm that follows a preference-based approach uses the preference of the processors to make decisions. In this paper we introduce a randomized self-stabilizing leader election algorithm for preference-based anonymous trees. Our algorithm assures that the processor with the highest preference in the system is always selected as the leader; more over, it is able to solve symmetric configurations where each preference is the same. We prove that our algorithm has an optimal average time complexity and we also performed simulations to illustrate the average performance of the algorithm.", "paper_title": "RANDOMIZED SELF-STABILIZING LEADER ELECTION IN PREFERENCE-BASED ANONYMOUS TREES", "paper_id": "WOS:000306071800006"}