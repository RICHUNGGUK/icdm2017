{"auto_keywords": [{"score": 0.038313271208330786, "phrase": "component_interactions"}, {"score": 0.008006731527886593, "phrase": "ao-adl"}, {"score": 0.00481495049065317, "phrase": "aspect-oriented_architectures"}, {"score": 0.004766388573192505, "phrase": "ao-adl._context"}, {"score": 0.004718314112245913, "phrase": "architecture_description_languages"}, {"score": 0.00457696724030363, "phrase": "well-accepted_approach"}, {"score": 0.004530794611704416, "phrase": "software_architecture_representation"}, {"score": 0.00441738161338662, "phrase": "well-known_adls"}, {"score": 0.004198965651975536, "phrase": "architectural_connectors"}, {"score": 0.003971111060168551, "phrase": "component_communication"}, {"score": 0.00317643367669255, "phrase": "aspect-oriented_approach"}, {"score": 0.0031284221314354065, "phrase": "ao-adl_architecture_description_language"}, {"score": 0.002840708910768261, "phrase": "'aspectual_compositions"}, {"score": 0.002672750634553146, "phrase": "ao-adl_language"}, {"score": 0.002592523232809191, "phrase": "extended_connectors"}, {"score": 0.002540377258232509, "phrase": "aspectual_and_non-aspectual_compositions"}, {"score": 0.002390133671838149, "phrase": "concern-oriented_metrics"}, {"score": 0.002283298119790413, "phrase": "measured_indicators"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Software Engineering", " Software Architectures", " Languages", " Aspect-Oriented Software Development", " Metrics"], "paper_abstract": "Context: Architecture description languages (ADLs) are a well-accepted approach to software architecture representation. The majority of well-known ADLs are defined by means of components and connectors. Architectural connectors are mainly used to model interactions among components, specifying component communication and coordination separately. However, there are other properties that cut across several components and also affect component interactions (e.g. security). Objective: It seems reasonable therefore to model how such crosscutting properties affect component interactions as part of connectors. Method: Using an aspect-oriented approach, the AO-ADL architecture description language extends the classical connector semantics with enough expressiveness to model the influences of such crosscutting properties on component interactions (defined as 'aspectual compositions' in connectors). Results: This paper describes the AO-ADL language putting special emphasis on the extended connectors used to specify aspectual and non-aspectual compositions between concrete components. The contributions of AO-ADL are validated using concern-oriented metrics available in the literature. Conclusion: The measured indicators show that using AO-ADL it is possible to specify more reusable and scalable software architectures. (C) 2011 Elsevier B.V. All rights reserved.", "paper_title": "Specifying aspect-oriented architectures in AO-ADL", "paper_id": "WOS:000294883500001"}