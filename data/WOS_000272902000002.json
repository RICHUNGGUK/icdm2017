{"auto_keywords": [{"score": 0.03281045316581221, "phrase": "test_inputs"}, {"score": 0.02322730111336097, "phrase": "result_inspection"}, {"score": 0.022910215883527, "phrase": "fault_localization"}, {"score": 0.008691033044260986, "phrase": "tbfl_approaches"}, {"score": 0.004703878334423852, "phrase": "testing-based_fault-localization"}, {"score": 0.004489327204473076, "phrase": "high-statement-coverage_test_suites"}, {"score": 0.0040890178236849825, "phrase": "test_suite"}, {"score": 0.0038661089070527424, "phrase": "traditional_test-generation_tools"}, {"score": 0.003741712498615481, "phrase": "high-statement-coverage_test_collection"}, {"score": 0.003587616378156851, "phrase": "expected_outputs"}, {"score": 0.0032522091171602557, "phrase": "practical_application"}, {"score": 0.0030604342671868836, "phrase": "existing_test_collection"}, {"score": 0.0029206231857112305, "phrase": "execution_traces"}, {"score": 0.002893434697072309, "phrase": "test_runs"}, {"score": 0.0024680071545651497, "phrase": "siemens"}, {"score": 0.002399689170393501, "phrase": "tcc."}, {"score": 0.00237733844863506, "phrase": "experimental_results"}, {"score": 0.0022475295254231714, "phrase": "smaller_subset"}, {"score": 0.0021049977753042253, "phrase": "whole_test_collection"}], "paper_keywords": ["Test suite reduction", " Testing", " Debugging", " Fault localization"], "paper_abstract": "Testing-based fault-localization (TBFL) approaches often require the availability of high-statement-coverage test suites that sufficiently exercise the areas around the faults. However, in practice, fault localization often starts with a test suite whose quality may not be sufficient to apply TBFL approaches. Recent capture/replay or traditional test-generation tools can be used to acquire a high-statement-coverage test collection (i.e., test inputs only) without expected outputs. But it is expensive or even infeasible for developers to manually inspect the results of so many test inputs. To enable practical application of TBFL approaches, we propose three strategies to reduce the test inputs in an existing test collection for result inspection. These three strategies are based on the execution traces of test runs using the test inputs. With the three strategies, developers can select only a representative subset of the test inputs for result inspection and fault localization. We implemented and applied the three test-input-reduction strategies to a series of benchmarks: the Siemens programs, DC, and TCC. The experimental results show that our approach can help developers inspect the results of a smaller subset (less than 10%) of test inputs, whose fault-localization effectiveness is close to that of the whole test collection.", "paper_title": "Test input reduction for result inspection to facilitate fault localization", "paper_id": "WOS:000272902000002"}