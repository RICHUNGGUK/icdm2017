{"auto_keywords": [{"score": 0.038814495682612235, "phrase": "policy_set"}, {"score": 0.018862809493701546, "phrase": "policy_sets"}, {"score": 0.009253843311761885, "phrase": "xacml_policies"}, {"score": 0.008067795309504043, "phrase": "variable_number"}, {"score": 0.00481495049065317, "phrase": "adaptive_reordering"}, {"score": 0.004782718554230406, "phrase": "clustering-based"}, {"score": 0.004766683200410046, "phrase": "framework_for_efficient_xacml_policy_evaluation"}, {"score": 0.004687306889178225, "phrase": "xacml"}, {"score": 0.004593787100061613, "phrase": "access_control_policies"}, {"score": 0.004382737590042589, "phrase": "high_performance_xacml_policy_evaluation_engines"}, {"score": 0.00415333528095237, "phrase": "large_number"}, {"score": 0.004016072233242585, "phrase": "adaptive_approach"}, {"score": 0.00398916666053909, "phrase": "xacml_policy_optimization"}, {"score": 0.003922685601503529, "phrase": "clustering_technique"}, {"score": 0.0038443635340052523, "phrase": "k-means_algorithm"}, {"score": 0.0034638476252104706, "phrase": "efficient_execution"}, {"score": 0.003216804708106142, "phrase": "optimal_policy_execution_problem"}, {"score": 0.0031845067058084583, "phrase": "proposed_clustering_technique"}, {"score": 0.0030380052848799155, "phrase": "target_subjects"}, {"score": 0.002917793073455365, "phrase": "applicable_policies"}, {"score": 0.002811770047652563, "phrase": "unnecessary_evaluations"}, {"score": 0.0027370835853738626, "phrase": "usage_based_framework"}, {"score": 0.002709589081384597, "phrase": "access_request_statistics"}, {"score": 0.002664375650349975, "phrase": "ordering_access_control"}, {"score": 0.002524688179363081, "phrase": "categorized_policies"}, {"score": 0.002400373755068185, "phrase": "extensive_experiments"}, {"score": 0.0021844290159501313, "phrase": "experimental_results"}, {"score": 0.0021049977753042253, "phrase": "standard_sun_pdp."}], "paper_keywords": ["Policy evaluation", " policy categorization", " XACML"], "paper_abstract": "The adoption of XACML as the standard for specifying access control policies for various applications, especially web services is vastly increasing. This calls for high performance XACML policy evaluation engines. A policy evaluation engine can easily become a bottleneck when enforcing XACML policies with a large number of rules. In this paper we propose an adaptive approach for XACML policy optimization. We apply a clustering technique to policy sets based on the K-means algorithm. In addition to clustering we find that, since a policy set has a variable number of policies and a policy has a variable number of rules, their ordering is important for efficient execution. By clustering policy sets and reordering policies and rules in a policy set and policies respectively, we formulated and solved the optimal policy execution problem. The proposed clustering technique categorizes policies and rules within a policy set and policy respectively in respect to target subjects. When a request is received, it is redirected to applicable policies and rules that correspond to its subjects; hence, avoiding unnecessary evaluations from occurring. We also propose a usage based framework that computes access request statistics to dynamically optimize the ordering access control to policies within a policy set and rules within a policy. Reordering is applied to categorized policies and rules from our proposed clustering technique. To evaluate the performance of our framework, we conducted extensive experiments on XACML policies. We evaluated separately the improvement due to categorization and to reordering techniques, in order to assess the policy sets targeted by our techniques. The experimental results show that our approach is orders of magnitude more efficient than standard Sun PDP.", "paper_title": "Adaptive Reordering and Clustering-Based Framework for Efficient XACML Policy Evaluation", "paper_id": "WOS:000300880700005"}