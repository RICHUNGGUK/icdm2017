{"auto_keywords": [{"score": 0.04417301402964415, "phrase": "proposed_algorithm"}, {"score": 0.00481495049065317, "phrase": "ordinary_petri_nets"}, {"score": 0.004733347359490221, "phrase": "efficient_implementation"}, {"score": 0.00437038535098944, "phrase": "petri"}, {"score": 0.00401216440036853, "phrase": "set_s"}, {"score": 0.003966667994579941, "phrase": "parallel_places"}, {"score": 0.0037682108720193956, "phrase": "output_transitions"}, {"score": 0.0024281181691350085, "phrase": "proposed_enumerative_process"}], "paper_keywords": [""], "paper_abstract": "An efficient implementation of the Fourier-Motzkin (FM) algorithm for computing all non-negative, minimal-support invariants of ordinary Petri nets is proposed. The proposed algorithm is inspired by the observation that for a set S of parallel places (i.e. places that have the same input and output transitions, and the same corresponding arc weights), if there exists an invariant y(1) whose support contains p1 is an element of S, then there also exist k-1 invariants y(i), i = 2, 3,..., k, where k = vertical bar S vertical bar, such that the support of y(i) contains a place p(i) is an element of S. The proposed algorithm exploits this observation by computing only y(1) and then generating the other corresponding invariants through a proposed enumerative process. The tests indicate that on an average, the proposed algorithm is at least 2.2 times faster in execution, and requires at least 1.8 times less memory than other comparable algorithms.", "paper_title": "Fast and memory-efficient invariant computation of ordinary Petri nets", "paper_id": "WOS:000250017300021"}