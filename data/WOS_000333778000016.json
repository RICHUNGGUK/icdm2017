{"auto_keywords": [{"score": 0.049651030276363126, "phrase": "path_relinking"}, {"score": 0.03669884834098149, "phrase": "qos-gasp"}, {"score": 0.00481499482823544, "phrase": "grasp"}, {"score": 0.004686963264680882, "phrase": "oriented_scenarios"}, {"score": 0.004541918674719973, "phrase": "atomic_services"}, {"score": 0.004461051281091779, "phrase": "resulting_added_value_logic"}, {"score": 0.0037948184359488284, "phrase": "qos-aware_composite_web_services"}, {"score": 0.003693846909452865, "phrase": "service_providers"}, {"score": 0.003611751858608048, "phrase": "best_qos"}, {"score": 0.003563370084662192, "phrase": "np-hard_optimization_problem"}, {"score": 0.003198860258228543, "phrase": "hybrid_approach"}, {"score": 0.0029767499830258754, "phrase": "related_metaheuristic_algorithms"}, {"score": 0.0026962411675196213, "phrase": "previous_proposals"}, {"score": 0.0025892330566358503, "phrase": "better_solutions"}, {"score": 0.0025316254589087973, "phrase": "compared_techniques"}, {"score": 0.002292965705677312, "phrase": "better_qos"}, {"score": 0.002262209824105154, "phrase": "cost_savings"}, {"score": 0.0021049977753042253, "phrase": "elsevier_ltd."}], "paper_keywords": ["QoS", " Composite web service", " SOA", " GRASP", " Path Relinking"], "paper_abstract": "In service oriented scenarios, applications are created by composing atomic services and exposing the resulting added value logic as a service. When several alternative service providers are available for composition, quality of service (QoS) properties such as execution time, cost, or availability are taken into account to make the choice, leading to the creation of QoS-aware composite web services. Finding the set of service providers that result in the best QoS is a NP-hard optimization problem. This paper presents QoS-Gasp, a metaheuristic algorithm for performing QoS-aware web service composition at runtime. QoS-Gasp is an hybrid approach that combines GRASP with Path Relinking. For the evaluation of our approach we compared it with related metaheuristic algorithms found in the literature. Experiments show that when results must be available in seconds, QoS-Gasp improves the results of previous proposals up to 40%. Beside this, QoS-Gasp found better solutions than any of the compared techniques in a 92% of the runs when results must be available in 100 ms; i.e., it provides compositions with a better QoS, implying cost savings, increased availability and reduced execution times for the end-user. (C) 2013 Elsevier Ltd. All rights reserved.", "paper_title": "QoS-aware web services composition using GRASP with Path Relinking", "paper_id": "WOS:000333778000016"}