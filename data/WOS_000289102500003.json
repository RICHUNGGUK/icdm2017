{"auto_keywords": [{"score": 0.047032949642620024, "phrase": "storage_devices"}, {"score": 0.04400051672251172, "phrase": "caching_scheme"}, {"score": 0.03820031705265674, "phrase": "partition_size"}, {"score": 0.03240052952059722, "phrase": "existing_storage-aware_caching_schemes"}, {"score": 0.00481495049065317, "phrase": "heterogeneous_storage_systems"}, {"score": 0.004777917315737992, "phrase": "modern_single-"}, {"score": 0.004741167616693272, "phrase": "multi-processor_computer_systems"}, {"score": 0.004474366340935036, "phrase": "diverse_performance_characteristics"}, {"score": 0.004304856672196293, "phrase": "unpredictable_burstiness"}, {"score": 0.003760385494931853, "phrase": "proper_size"}, {"score": 0.0034140224493254935, "phrase": "subsequent_epoch"}, {"score": 0.003374655868348244, "phrase": "similar_characteristics"}, {"score": 0.003310047704590791, "phrase": "current_epoch"}, {"score": 0.0032092293346843224, "phrase": "highly_bursty_and_time-varying_workload"}, {"score": 0.003005039427642664, "phrase": "cache_size"}, {"score": 0.0028576796380512157, "phrase": "cache_blocks"}, {"score": 0.002792119634261638, "phrase": "remaining_disks"}, {"score": 0.0027386335451725762, "phrase": "hit_ratio"}, {"score": 0.0026965813247045427, "phrase": "disk_choking_phenomenon"}, {"score": 0.002624533657819515, "phrase": "disk_system"}, {"score": 0.0025151755329660837, "phrase": "continuous_repartitioning"}, {"score": 0.0024957862318504753, "phrase": "disk_choking"}, {"score": 0.0023550410480905727, "phrase": "periodic_activity"}, {"score": 0.00230098581403254, "phrase": "disk_choking_issue"}, {"score": 0.0022568866348667547, "phrase": "repartitioning_framework"}, {"score": 0.002205079358459154, "phrase": "marginal_gains"}, {"score": 0.00218807532188779, "phrase": "experimental_results"}], "paper_keywords": ["Heterogeneous storage systems", " Caching", " Disk array", " File systems"], "paper_abstract": "Modern single- and multi-processor computer systems incorporate, either directly or through a LAN, a number of storage devices with diverse performance characteristics. These storage devices have to deal with workloads with unpredictable burstiness. A storage-aware caching scheme-that partitions the cache among the disks, and aims at balancing the work across the disks-is necessary in this environment. Moreover, maintaining proper size for these partitions is crucial. Adjusting the partition size after each epoch (a certain time interval) assumes that the workload in the subsequent epoch will show similar characteristics as observed in the current epoch. However, in an environment with highly bursty and time-varying workload such an approach seems to be optimistic. Moreover, the existing storage-aware caching schemes assume linear relationship between cache size and hit ratio. But, in practice a (disk) partition may accumulate cache blocks (thus, choke the remaining disks) without increasing the hit ratio significantly. This disk choking phenomenon may degenerate the performance of the disk system. In this paper, we address the issues of continuous repartitioning and disk choking. First, we present a caching scheme that continuously adjusts the partition size forgoing any periodic activity. Later, considering the disk choking issue, we present a repartitioning framework based on the notion of marginal gains. Experimental results show the effectiveness of our approach. We show that our scheme outperforms the existing storage-aware caching schemes.", "paper_title": "Cost-aware caching schemes in heterogeneous storage systems", "paper_id": "WOS:000289102500003"}