{"auto_keywords": [{"score": 0.048512039224227546, "phrase": "functional_refinement"}, {"score": 0.015548237087755773, "phrase": "oo_design"}, {"score": 0.011241396756629296, "phrase": "existing_oo_software_development_methods"}, {"score": 0.010179664793997557, "phrase": "proposed_approach"}, {"score": 0.00968664300815769, "phrase": "df_nets"}, {"score": 0.00481495049065317, "phrase": "functional_analysis_model"}, {"score": 0.004191540451296395, "phrase": "oo_software_development"}, {"score": 0.00396530196547293, "phrase": "enhanced_data_flow_diagram"}, {"score": 0.003588291565092195, "phrase": "functional_decomposition"}, {"score": 0.003490056936165004, "phrase": "novel_approach"}, {"score": 0.003158088307044493, "phrase": "requirements_analysis_stage"}, {"score": 0.002857605453835429, "phrase": "implementation_stages"}, {"score": 0.0024323098907299027, "phrase": "transformation_process"}, {"score": 0.0023394947463129642, "phrase": "oo_system"}, {"score": 0.002140400526572388, "phrase": "remaining_use-cases"}], "paper_keywords": ["functional model", " object-oriented model", " functional decomposition", " requirements analysis", " design", " model transformation"], "paper_abstract": "Functional refinement is beneficial to Object-Oriented (OO) software development, especially for problems with more complex functions. However, the use of functional refinement in OO software development has not received much attention. This paper proposes an enhanced data flow diagram (DFD), called data flow net (DF net), for specifying use-cases through functional decomposition. It proposes a novel approach to complement existing OO software development methods with functional decomposition for realizing use-cases, especially those with more complex functions. In the requirements analysis stage, the proposed approach realizes use-cases through functional refinement and specifies them in DF nets. In the design and implementation stages, it transforms the DF nets systematically and precisely into OO design and implementation. The approach is amenable to automation and a prototype has been developed to support the transformation process. In the development of an OO system, it is seamless to realize some of the use-cases using the proposed approach and the remaining use-cases in the same target system using any existing OO software development methods.", "paper_title": "Systematic transformation of functional analysis model into OO design and implementation", "paper_id": "WOS:000235309700004"}