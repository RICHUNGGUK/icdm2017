{"auto_keywords": [{"score": 0.00481495049065317, "phrase": "automatic_performance_tuning"}, {"score": 0.004736820055728928, "phrase": "parallel_application_development"}, {"score": 0.004546970518808189, "phrase": "non-expert_programmers"}, {"score": 0.0044005599565517875, "phrase": "support_tools"}, {"score": 0.004054745478848129, "phrase": "application_development_cycle"}, {"score": 0.003797690272118125, "phrase": "predefined_programming_structures"}, {"score": 0.003223883109446599, "phrase": "intrinsic_knowledge"}, {"score": 0.003145609726536791, "phrase": "programming_structures"}, {"score": 0.002898127432512101, "phrase": "dynamic_and_automatic_tuning_tool"}, {"score": 0.002605201547405916, "phrase": "better_tuning_decisions"}, {"score": 0.0023418133729330303, "phrase": "performance_model"}, {"score": 0.0021049977753042253, "phrase": "elsevier_b.v."}], "paper_keywords": ["Master/Worker performance model", " Dynamic performance tuning", " Load balancing"], "paper_abstract": "Parallel application development is a very difficult task for non-expert programmers, and therefore support tools are needed for all phases of this kind of application development cycle. This means that developing applications using predefined programming structures (frameworks/skeletons) should be easier than doing it from scratch. We propose to take advantage of the intrinsic knowledge that these programming structures provide about the application in order to develop a dynamic and automatic tuning tool. We show that using this knowledge the tool could efficiently make better tuning decisions. Specifically, we focus this work on the definition of the performance model associated to applications developed with the Master/Worker framework. (c) 2006 Elsevier B.V. All rights reserved.", "paper_title": "Modeling Master/Worker applications for automatic performance tuning", "paper_id": "WOS:000205812500010"}