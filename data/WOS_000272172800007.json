{"auto_keywords": [{"score": 0.0246757548159874, "phrase": "gaia"}, {"score": 0.00481495049065317, "phrase": "mas_development"}, {"score": 0.004678940805063634, "phrase": "software_engineering_research"}, {"score": 0.004482063543727601, "phrase": "main_issues"}, {"score": 0.004192078165260057, "phrase": "research_field"}, {"score": 0.003773680962197766, "phrase": "research_groups"}, {"score": 0.003632080001489739, "phrase": "existing_metamodels"}, {"score": 0.003597514862052876, "phrase": "metamodel-driven_software_language_engineering"}, {"score": 0.003413183361838603, "phrase": "software_language_engineering"}, {"score": 0.0033645655483989746, "phrase": "agent-oriented_software_engineering_research_domain"}, {"score": 0.003253791343615811, "phrase": "relatively_generic_agent-oriented_metamodel"}, {"score": 0.003176899769744057, "phrase": "modeling_language_development"}, {"score": 0.002873247913129334, "phrase": "bottom-up_and_top-down_analysis"}, {"score": 0.002406672222953176, "phrase": "passi"}, {"score": 0.0023840346303791032, "phrase": "five_more_extant_agent-oriented_approaches"}, {"score": 0.0023613185213421173, "phrase": "adelfe"}, {"score": 0.0022944576894161485, "phrase": "ingenias"}, {"score": 0.0022617389804167943, "phrase": "tropos"}, {"score": 0.0022294857939412073, "phrase": "resultant_faml_metamodel"}, {"score": 0.0021976915360493628, "phrase": "potential_candidate"}, {"score": 0.002176747110119268, "phrase": "future_standardization"}, {"score": 0.002145703330831668, "phrase": "important_component"}, {"score": 0.0021049977753042253, "phrase": "agent_modeling_language"}], "paper_keywords": ["Modeling", " metamodel", " multiagent systems"], "paper_abstract": "In some areas of software engineering research, there are several metamodels claiming to capture the main issues. Though it is profitable to have variety at the beginning of a research field, after some time, the diversity of metamodels becomes an obstacle, for instance to the sharing of results between research groups. To reach consensus and unification of existing metamodels, metamodel-driven software language engineering can be applied. This paper illustrates an application of software language engineering in the agent-oriented software engineering research domain. Here, we introduce a relatively generic agent-oriented metamodel whose suitability for supporting modeling language development is demonstrated by evaluating it with respect to several existing methodology-specific metamodels. First, the metamodel is constructed by a combination of bottom-up and top-down analysis and best practice. The concepts thus obtained and their relationships are then evaluated by mapping to two agent-oriented metamodels: TAO and Islander. We then refine the metamodel by extending the comparisons with the metamodels implicit or explicit within five more extant agent-oriented approaches: Adelfe, PASSI, Gaia, INGENIAS, and Tropos. The resultant FAML metamodel is a potential candidate for future standardization as an important component for engineering an agent modeling language.", "paper_title": "FAML: A Generic Metamodel for MAS Development", "paper_id": "WOS:000272172800007"}